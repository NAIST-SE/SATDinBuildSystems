{
  "Repository" : "3234976",
  "Revision" : "HEAD",
  "ObjectId" : "5c748404b97035463c79ba4e5fd41b6858535509",
  "CommitTime" : "2019-02-25T17:54:18Z",
  "Files" : {
    "Makefile" : {
      "ObjectId" : "e25e256f96afc52c7539321c6b97fa9f80d67e7b",
      "LastModified" : "2019-01-15T17:42:13Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Basic build targets:\n\n#   all\t\tall main tools and the shared library\n\n#   static      build static binaries, requires static version of the libraries\n\n#   test        run the full testsuite\n\n#   install     install to default location (/usr/local)\n\n#   clean       clean built binaries (not the documentation)\n\n#   clean-all   clean as above, clean docs and generated files\n\n#\n\n# Tuning by variables (environment or make arguments):\n\n#   V=1            verbose, print command lines (default: quiet)\n\n#   C=1            run checker before compilation (default checker: sparse)\n\n#   D=1            debugging build, turn off optimizations\n\n#   D=dflags       dtto, turn on additional debugging features:\n\n#                  verbose - print file:line along with error/warning messages\n\n#                  trace   - print trace before the error/warning messages\n\n#                  abort   - call abort() on first error (dumps core)\n\n#                  all     - shortcut for all of the above\n\n#                  asan    - enable address sanitizer compiler feature\n\n#                  tsan    - enable thread sanitizer compiler feature\n\n#                  ubsan   - undefined behaviour sanitizer compiler feature\n\n#                  bcheck  - extended build checks\n\n#   W=123          build with warnings (default: off)\n\n#   DEBUG_CFLAGS   additional compiler flags for debugging build\n\n#   EXTRA_CFLAGS   additional compiler flags\n\n#   EXTRA_LDFLAGS  additional linker flags\n\n#\n\n# Testing-specific options (see also tests/README.md):\n\n#   TEST=GLOB      run test(s) from directories matching GLOB\n\n#   TEST_LOG=tty   print name of a command run via the execution helpers\n\n#   TEST_LOG=dump  dump testing log file when a test fails\n\n#\n\n# Static checkers:\n\n#   CHECKER        static checker binary to be called (default: sparse)\n\n#   CHECKER_FLAGS  flags to pass to CHECKER, can override CFLAGS\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Export all variables to sub-makes by default\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Disable certain GCC 8 + glibc 2.28 warning for snprintf()\n\n# where string truncation for snprintf() is expected.\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Common build flags\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Static compilation flags\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# don't use FORTIFY with sparse because glibc with FORTIFY can\n\n# generate so many sparse errors that sparse stops parsing,\n\n# which masks real errors that we want to see.\n\n# Note: additional flags might get added per-target later\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Programs to install.\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Programs to build.\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# All programs. Use := instead of = so that this is expanded before we reassign\n\n# progs_build below.\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Static programs to build. Use := instead of = because `make static` should\n\n# still build everything even if --disable-programs was passed to ./configure.\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# external libs required by various binaries; for btrfs-foo,\n\n# specify btrfs_foo_libs = <list of libs>; see $($(subst...)) rules below\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# collect values of the variables above\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Create all the static targets\n",
        "Line" : 271,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# make C=1 to enable sparse\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# We're trying to use sparse against glibc headers which go wild\n\n# trying to use internal compiler macros to test features.  We\n\n# copy gcc's and give them to sparse.  But not __SIZE_TYPE__\n\n# 'cause sparse defines that one.\n\n#\n",
        "Line" : 294,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "#\n\n# Pick from per-file variables, btrfs_*_cflags\n\n#\n",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#\n\n# NOTE: For static compiles, you need to have all the required libs\n\n# \tstatic equivalent available\n\n#\n",
        "Line" : 388,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# the target can be regenerated manually using mktables, but a local copy is\n\n# kept so the build process is simpler\n",
        "Line" : 402,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# keep intermediate files from the below implicit rules around\n",
        "Line" : 447,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Make any btrfs-foo out of btrfs-foo.o, with appropriate libs.\n\n# The $($(subst...)) bits below takes the btrfs_*_libs definitions above and\n\n# turns them into a list of libraries to link against if they exist\n\n#\n\n# For static variants, use an extra $(subst) to get rid of the \".static\"\n\n# from the target name before translating to list of libs\n",
        "Line" : 450,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# For backward compatibility, 'btrfs' changes behaviour to fsck if it's named 'btrfsck'\n",
        "Line" : 479,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# btrfsck is a link to btrfs in the src tree, make it so for installed file as well\n",
        "Line" : 662,
        "CharPositionInLine" : 1
      },
      "22" : {
        "Text" : "# btrfsck is a link to btrfs in the src tree, make it so for installed file as well\n",
        "Line" : 691,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 23,
      "Errorlog" : "line 141:87 token recognition error at: '\\1'\nline 142:87 token recognition error at: '\\1'\nline 143:87 token recognition error at: '\\1'\n"
    },
    "convert/Makefile" : {
      "ObjectId" : "66dd7d0b42f0b26cecb8c4cb5f1923d95e60bc6f",
      "LastModified" : "2017-03-08T12:00:46Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 2
  },
  "ElapsedTime" : 3420
}