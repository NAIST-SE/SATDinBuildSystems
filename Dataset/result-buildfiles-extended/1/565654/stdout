{
  "Repository" : "565654",
  "Revision" : "HEAD",
  "ObjectId" : "ad9fc9f559e78a764aac20f669f23cdd020cd943",
  "CommitTime" : "2019-04-07T19:33:36Z",
  "Files" : {
    "Makefile.am" : {
      "ObjectId" : "dcdb0be5432d507d46679e61779017eabc8a5803",
      "LastModified" : "2019-03-29T13:16:36Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "### C source files to be built and distributed.\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### C build options\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "### Generating the lexer and parser\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# While there is some autoconf macro support for lex/flex, it doesn't support\n\n# header file creation so we'll use good old make\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Tell YACC (bison) autoconf macros that you want a header file created.\n\n# If the --warnings=all fails, you probably have an old version of bison\n\n# OSX ships an old bison, so update with homebrew or macports\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "### libjq\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "### Running tests under Valgrind\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "### Code coverage with gcov\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "### Error injection for testing\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "### Building the jq binary\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Remake the version.h header file if, and only if, the git ID has changed\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "### Tests (make check)\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "### Building the manpage\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "### Build oniguruma\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "### Packaging\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# README.md is expected in Github projects, good stuff in it, so we'll\n\n# distribute it and install it with the package in the doc directory.\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Not sure why this doesn't get cleaned up automatically, guess\n\n# automake used to man pages which are hand coded?\n\n# 'make clean' doesn't delete the manpage if it can't be rebuilt\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    }
  },
  "FileTypes" : {
    "AUTOMAKE" : 1
  },
  "ElapsedTime" : 1073
}