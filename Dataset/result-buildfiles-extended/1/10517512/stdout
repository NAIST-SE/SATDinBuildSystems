{
  "Repository" : "10517512",
  "Revision" : "HEAD",
  "ObjectId" : "e4abe4596635d1ae0b85b46f92ee46599c1f83a6",
  "CommitTime" : "2019-03-19T20:52:29Z",
  "Files" : {
    "src/CMakeLists.txt" : {
      "ObjectId" : "87d904b94f66974e9e1592df97ce6ede7c6edb1b",
      "LastModified" : "2019-03-10T14:03:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# SvxLink - A Multi Purpose Voice Services System for Ham Radio Use\n\n# Copyright (C) 2003-2013 Tobias Blomberg / SM0SVX\n\n# \n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 2 of the License, or\n\n# (at your option) any later version.\n\n# \n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n# \n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; if not, write to the Free Software\n\n# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# Project setup\n\n##############################################################################\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#enable_testing()\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The path to the project global include directory\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Where to put library files\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Where to put executable files\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add project local CMake module directory\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Optional parts\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# The sample rate used internally in SvxLink\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Set up include directories\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Warnings should be enabled for GCC. Also turning off the NDEBUG flag\n\n# since that remove asserts.\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Set the default build type to Release\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\n\n# Install targets properties setup\n\n##############################################################################\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Set up standard GNU installation directories\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Where to install include files\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#set(INCLUDE_INSTALL_DIR ${CMAKE_INSTALL_PREFIX}/include)\n",
        "Line" : 92,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Where to install libraries\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#set(LIB_INSTALL_DIR ${CMAKE_INSTALL_PREFIX}/lib${LIB_SUFFIX})\n",
        "Line" : 98,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# The config directory (normally /etc)\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#set(SYSCONF_INSTALL_DIR ${CMAKE_INSTALL_PREFIX}/etc)\n",
        "Line" : 104,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Architecture independent files directory (normally /usr/share)\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#set(SHARE_INSTALL_PREFIX ${CMAKE_INSTALL_PREFIX}/share)\n",
        "Line" : 110,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# Local state directory (normally /var)\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#set(LOCAL_STATE_DIR ${CMAKE_INSTALL_PREFIX}/var)\n",
        "Line" : 116,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Where to install executables\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#set(BIN_INSTALL_DIR ${CMAKE_INSTALL_PREFIX}/bin)\n",
        "Line" : 122,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Where to install system executables\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#set(BIN_INSTALL_DIR ${CMAKE_INSTALL_PREFIX}/bin)\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# Where to install manual pages\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#set(MAN_INSTALL_DIR ${SHARE_INSTALL_PREFIX}/man)\n",
        "Line" : 134,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# Where to install documentation\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#set(DOC_INSTALL_DIR ${SHARE_INSTALL_PREFIX}/doc/svxlink)\n",
        "Line" : 140,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# Where to install startup scripts\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Where to install SvxLink config files\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Where to install SvxLink spool files\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Where to install SvxLink architecture independent files\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Where to install include files\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Where to install SvxLink modules\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "##############################################################################\n\n# Functions\n\n##############################################################################\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Create an include file under the global include directory\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Add a target for building a version/xyz.h file\n\n#\n\n#   add_version_target(name [depends_var])\n\n#\n\n# The name of the version variable should be VER_name and the versions file\n\n# will be named versions/name.h.\n\n# If depends_var is given it will be set to a list of dependencies that the\n\n# target using the versions file should add to its dependency list.\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Read a versions file and set up CMake variables for each entry\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Create a post install target to change the owner of an installed file.\n\n# If DO_INSTALL_CHOWN is set to YES, the owner will be changed during\n\n# installation.\n\n# If DO_INSTALL_CHOWN is unset, the DESTDIR environment variable will be\n\n# examined. If it is set, no chown operations will be performed since we are\n\n# probably not running as a user with administrative rights. If DESTDIR is\n\n# unset, chown operations are performed.\n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Create the given directory during installation\n\n#   install_mkdir(directory [owner])\n",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Before installing the file, check if it exists. If it does, don't\n\n# overwrite it.\n\n#   install_if_not_exists(source_file destination_directory)\n",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "##############################################################################\n\n# Main execution starts here\n\n##############################################################################\n",
        "Line" : 314,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Load the versions file and define version variables\n",
        "Line" : 318,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Find the Sigc++ library\n",
        "Line" : 326,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# Find the chown utility\n",
        "Line" : 333,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Add directories to build\n",
        "Line" : 341,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Experimental CPack package building\n",
        "Line" : 352,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "#set(CPACK_PACKAGE_VERSION \"0.1.3\")\n",
        "Line" : 363,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "#set(CPACK_GENERATOR \"DEB\")\n",
        "Line" : 368,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 53
    },
    "src/async/CMakeLists.txt" : {
      "ObjectId" : "987a94e6ef506e4fc4b41ca458685e6ae35c392d",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/async/audio/CMakeLists.txt" : {
      "ObjectId" : "5c764304d545c2049946a401ee0cf91fdf83044e",
      "LastModified" : "2018-01-04T18:05:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find Speex\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find Opus\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Copy exported include files to the global include directory\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set up additional defines\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Build a shared library and a static library if configured\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Install files\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/async/core/CMakeLists.txt" : {
      "ObjectId" : "569ce58ca8fd051fca60a0e56b7bc0a101aa9d54",
      "LastModified" : "2018-01-04T18:05:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copy exported include files to the global include directory\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find pthreads\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set up additional defines\n\n# FIXME: Do we need this?\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Build a shared library and a static library if configured\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Install files\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/async/cpp/CMakeLists.txt" : {
      "ObjectId" : "87a8d944d618af71dd86d33c536bf37fedc589a4",
      "LastModified" : "2014-06-25T14:07:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copy exported include files to the global include directory\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find pthreads\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set up additional defines\n\n# FIXME: Do we need this?\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find librt\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Build a shared library and a static library if configured\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Install files\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/async/demo/CMakeLists.txt" : {
      "ObjectId" : "c96533e7d2c015ab66d6af94f359bc5ff511f07e",
      "LastModified" : "2018-01-04T18:05:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find Qt5\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# If not Qt5 was found, try Qt4\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "src/async/qt/CMakeLists.txt" : {
      "ObjectId" : "c77346ad93cc5a2017621a78b5ca246b37726846",
      "LastModified" : "2018-01-04T18:05:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copy exported include files to the global include directory\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find Qt5\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If not Qt5 was found, try Qt4\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Build a shared library and a static library if configured\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Install files\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/avr/siglev/Makefile" : {
      "ObjectId" : "a0d53b7134571819092fbbd5e58592d7bd7a3a6c",
      "LastModified" : "2009-07-17T10:57:02Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Tell both the compiler and the programmer application (avrdude)\n\n# what MCU we are using\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Tell the programmer application (avrdude) what hardware we use\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Name of application\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Source files to compile\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Use the AVR gcc compiler and tools\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# What CFLAGS to use\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Setup the object and dependency file lists\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Generic targets. You should not need to touch these\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Load program into flash\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Setup external crystal\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Clean up source directory\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Include dependency files\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Extra user defined targets below\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "src/cmake/Modules/FindALSA.cmake" : {
      "ObjectId" : "e3e6624ff01eb85905ccbe6a2674bce4f575b308",
      "LastModified" : "2014-06-25T14:07:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find ALSA\n\n# Once done, this will define\n\n#\n\n#  ALSA_FOUND - system has ALSA (GL and GLU)\n\n#  ALSA_INCLUDE_DIRS - the ALSA include directories\n\n#  ALSA_LIBRARIES - link these to use ALSA\n\n#  ALSA_GL_LIBRARY - only GL\n\n#  ALSA_GLU_LIBRARY - only GLU\n\n#\n\n# See documentation on how to write CMake scripts at\n\n# http://www.cmake.org/Wiki/CMake:How_To_Find_Libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Extract the version number\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/cmake/Modules/FindCHOWN.cmake" : {
      "ObjectId" : "93a1db2ba067fbea7847b12f77f7edce51a2f058",
      "LastModified" : "2018-01-04T18:05:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/cmake/Modules/FindCURL.cmake" : {
      "ObjectId" : "e2544f4c79c9b3c6ef5adfecb7ac395027851748",
      "LastModified" : "2018-03-01T14:12:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find CURL\n\n#\n\n# Find the curl includes and library\n\n#\n\n# if you nee to add a custom library search path, do it via via CMAKE_PREFIX_PATH\n\n#\n\n# This module defines\n\n#  CURL_INCLUDE_DIR, where to find header, etc.\n\n#  CURL_LIBRARY, the libraries needed to use curl.\n\n#  CURL_FOUND, If false, do not try to use curl.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# only look in default directories\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# names from cmake's FindCURL\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# debug library on windows\n\n# same naming convention as in qt (appending debug library with d)\n\n# boost is using the same \"hack\" as us with \"optimized\" and \"debug\"\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#handle the QUIETLY and REQUIRED arguments and set CURL_FOUND to TRUE\n\n# if all listed variables are TRUE, hide their existence from configuration view\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/cmake/Modules/FindDL.cmake" : {
      "ObjectId" : "26801d8f80073a03f9285c683d0a5dd000dc0901",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check for the presence of DL\n\n#\n\n# The following variables are set when DL is found:\n\n#  DL_FOUND        = Set to true, if all components of DL\n\n#                    have been found.\n\n#  DL_INCLUDE_DIRS = Include path for the header files of DL\n\n#  DL_LIBRARIES    = Link these to use DL\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "## -------------------------------------------------------------------------\n\n## Check for the header files\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "## -------------------------------------------------------------------------\n\n## Check for the library\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "## -------------------------------------------------------------------------\n\n## Actions taken when all components have been found\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "src/cmake/Modules/FindGCrypt.cmake" : {
      "ObjectId" : "cad58adc28bf75858ca18bff928a5b0eb87cdbdd",
      "LastModified" : "2014-06-25T14:07:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find GCrypt\n\n# Once done this will define\n\n#\n\n#  GCRYPT_FOUND - system has GCrypt\n\n#  GCRYPT_INCLUDE_DIRS - the GCrypt include directory\n\n#  GCRYPT_LIBRARIES - Link these to use GCrypt\n\n#  GCRYPT_DEFINITIONS - Compiler switches required for using GCrypt\n\n#\n\n#  Copyright (c) 2009-2010 Andreas Schneider <mail@cynapses.org>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# show the GCRYPT_INCLUDE_DIR and GCRYPT_LIBRARY variables only in the advanced view\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "src/cmake/Modules/FindGROFF.cmake" : {
      "ObjectId" : "7ecf584dce97fc3d3b523824310ac395e71d38fa",
      "LastModified" : "2018-01-04T18:05:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/cmake/Modules/FindGSM.cmake" : {
      "ObjectId" : "fd7531809d8a5dca7cffcb6ee2ca157358145536",
      "LastModified" : "2018-01-04T18:05:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate libraries\n\n# This module defines\n\n# GSM_LIBRARY, the name of the library to link against\n\n# GSM_FOUND, if false, do not try to link\n\n# GSM_INCLUDE_DIR, where to find header\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/cmake/Modules/FindGZIP.cmake" : {
      "ObjectId" : "0eb46bcdb9b46300179d22a968037e1c8cacf753",
      "LastModified" : "2018-01-04T18:05:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/cmake/Modules/FindOpus.cmake" : {
      "ObjectId" : "09ba207946b9090c711c7fde56cb1a11257648b2",
      "LastModified" : "2018-01-04T18:05:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindOpus\n\n# --------\n\n# Find the opus library and include directory\n\n#\n\n#  Opus_FOUND         - Set to true if the opus library is found\n\n#  Opus_INCLUDE_DIRS  - The directory where opus.h can be found\n\n#  Opus_LIBRARIES     - Libraries to link with to use opus\n\n#  Opus_VERSION       - Full version string (if available)\n\n#  Opus_VERSION_MAJOR - Major version (if available)\n\n#  Opus_VERSION_MINOR - Minor version (if available)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright (C) 2003-2014 Tobias Blomberg / SM0SVX\n\n# \n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 2 of the License, or\n\n# (at your option) any later version.\n\n# \n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n# \n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; if not, write to the Free Software\n\n# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n\n#=============================================================================\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Try to find the directory where the opus.h header file is located\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Try to find the opus library\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set up version variables\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set Opus_FOUND to TRUE if \n\n# all listed variables are TRUE\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "src/cmake/Modules/FindPopt.cmake" : {
      "ObjectId" : "68226fd54bc949aabdaa800a8baa20b7b0ff1796",
      "LastModified" : "2018-01-04T18:05:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Popt\n\n# Once done this will define\n\n#\n\n#  POPT_FOUND - system has Popt\n\n#  POPT_INCLUDE_DIRS - the Popt include directory\n\n#  POPT_LIBRARIES - Link these to use Popt\n\n#  POPT_DEFINITIONS - Compiler switches required for using Popt\n\n#\n\n#  Copyright (c) 2008 Joshua L. Blocher <verbalshadow@gmail.com>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Show the POPT_INCLUDE_DIR and POPT_LIBRARY variables only in the\n\n# advanced view\n",
        "Line" : 83,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "src/cmake/Modules/FindRT.cmake" : {
      "ObjectId" : "5fdeab3d0e92a6b31d07a0e7936cf9e1801f96d2",
      "LastModified" : "2018-01-04T18:05:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check for the presence of RT\n\n#\n\n# The following variables are set when RT is found:\n\n#  RT_FOUND        = Set to true, if all components of RT\n\n#                    have been found.\n\n#  RT_INCLUDE_DIRS = Include path for the header files of RT\n\n#  RT_LIBRARIES    = Link these to use RT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "## -------------------------------------------------------------------------\n\n## Check for the header files\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "## -------------------------------------------------------------------------\n\n## Check for the library\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "## -------------------------------------------------------------------------\n\n## Actions taken when all components have been found\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "src/cmake/Modules/FindRtlSdr.cmake" : {
      "ObjectId" : "88008b70d22d5af7247f9237a722e9924d855cd0",
      "LastModified" : "2018-01-04T18:05:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find rtl-sdr\n\n# Once done this will define\n\n#\n\n#  RTLSDR_FOUND - system has rtl-sdr\n\n#  RTLSDR_INCLUDE_DIRS - the rtl-sdr include directory\n\n#  RTLSDR_LIBRARIES - Link these to use rtl-sdr\n\n#  RTLSDR_DEFINITIONS - Compiler switches required for using rtl-sdr\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# In cache already\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Show the RTLSDR_INCLUDE_DIR and RTLSDR_LIBRARY variables only in\n\n# the advanced view\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "src/cmake/Modules/FindSIGC2.cmake" : {
      "ObjectId" : "a583cf91b0e339f00d4837bfce9c78e5955a6eca",
      "LastModified" : "2018-01-04T18:05:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find libsigc++-2\n\n# Once done this will define\n\n#  SIGC2_FOUND        - System has libsigc++-2\n\n#  SIGC2_INCLUDE_DIRS - The libsigc++-2 include directories\n\n#  SIGC2_LIBRARIES    - The libraries needed to use libsigc++-2\n\n#  SIGC2_DEFINITIONS  - Compiler switches required for using libsigc++-2\n\n#  SIGC_CXX_FLAGS     - Required C++ specific compiler switches\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(SIGC2_DEFINITIONS ${PC_SIGC2_CFLAGS_OTHER})\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set SIGC2_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/cmake/Modules/FindSpeex.cmake" : {
      "ObjectId" : "346cde668fbe38e6bf81c153df159b21c1813800",
      "LastModified" : "2018-01-04T18:05:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindSpeex\n\n# --------\n\n# Find the speex library and include directory\n\n#\n\n#  Speex_FOUND         - Set to true if the speex library is found\n\n#  Speex_INCLUDE_DIRS  - The directory where speex.h can be found\n\n#  Speex_LIBRARIES     - Libraries to link with to use speex\n\n#  Speex_VERSION       - Full version string (if available)\n\n#  Speex_VERSION_MAJOR - Major version (if available)\n\n#  Speex_VERSION_MINOR - Minor version (if available)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright (C) 2003-2014 Tobias Blomberg / SM0SVX\n\n# \n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 2 of the License, or\n\n# (at your option) any later version.\n\n# \n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n# \n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; if not, write to the Free Software\n\n# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n\n#=============================================================================\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Try to find the directory where the speex.h header file is located\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Try to find the speex library\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set up version variables\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set Speex_FOUND to TRUE if \n\n# all listed variables are TRUE\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "src/cmake/Modules/LibFindMacros.cmake" : {
      "ObjectId" : "69975c51be3f9c5e0ff372a4424f8de3b580ee88",
      "LastModified" : "2018-01-04T18:05:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Works the same as find_package, but forwards the \"REQUIRED\" and \"QUIET\" arguments\n\n# used for the current package. For this to work, the first parameter must be the\n\n# prefix of the current package, then the prefix of the new package etc, which are\n\n# passed to find_package.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMake developers made the UsePkgConfig system deprecated in the same release (2.6)\n\n# where they added pkg_check_modules. Consequently I need to support both in my scripts\n\n# to avoid those deprecated warnings. Here's a helper that does just that.\n\n# Works identically to pkg_check_modules, except that no checks are needed prior to use.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Do the final processing once the paths have been detected.\n\n# If include dirs are needed, ${PREFIX}_PROCESS_INCLUDES should be set to contain\n\n# all the variables, each of which contain one include directory.\n\n# Ditto for ${PREFIX}_PROCESS_LIBS and library files.\n\n# Will set ${PREFIX}_FOUND, ${PREFIX}_INCLUDE_DIRS and ${PREFIX}_LIBRARIES.\n\n# Also handles errors in case library detection was required, etc.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Skip processing if already processed during this run\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Start with the assumption that the library was found\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Process all includes and set _FOUND to false if any are missing\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Process all libraries and set _FOUND to false if any are missing\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Print message and/or exit on fatal error\n",
        "Line" : 64,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "src/cmake/create_version_include.cmake" : {
      "ObjectId" : "57fb343a8a607d0d853902c359f1213dd9ab58b2",
      "LastModified" : "2018-01-04T18:05:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/doc/CMakeLists.txt" : {
      "ObjectId" : "5aeeb3712116d29de6681e684c41aa7873463d2f",
      "LastModified" : "2018-01-04T18:05:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add an empty doc target. We'll add dependencies later\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add targets to generate API documentation with Doxygen if it's installed\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/doc/man/CMakeLists.txt" : {
      "ObjectId" : "328d40036191d335f3e690c06a1f0c4fc75ceaa8",
      "LastModified" : "2018-01-20T18:28:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set up which man pages to build and install\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Search for the gzip and groff programs. Error out if not found.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set up a target for compressing each manual page. Also add an install\n\n# target for it.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add a custom target to trigger the build of the man pages\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "src/doc/qteluserdocs/Makefile" : {
      "ObjectId" : "09ee0cce700e7a4a82265cd93c0fa191c07a7037",
      "LastModified" : "2018-01-04T18:05:29Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/echolib/CMakeLists.txt" : {
      "ObjectId" : "5525d7eb433accc8ea2019d0077e1a0eb93e8b62",
      "LastModified" : "2018-01-04T18:05:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the GSM codec library and include directory\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find Speex\n\n# Do a quiet find here since the Async library already do a verbose find\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Copy exported include files to the global include directory\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Build a shared library and a static library if configured\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Find the popt library\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Build applications\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Install files\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "src/locationinfo/CMakeLists.txt" : {
      "ObjectId" : "b5d34d55c511447b1354362e272f20d294fa834b",
      "LastModified" : "2018-01-04T18:05:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The name of the library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Which include files to export to the global include directory\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# What sources to compile for the library\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Which other libraries this library depends on\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Copy exported include files to the global include directory\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add targets for version files\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build only a static library\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Install targets\n\n#install(TARGETS ${LIBNAME} DESTINATION ${LIB_INSTALL_DIR})\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "src/misc/CMakeLists.txt" : {
      "ObjectId" : "2a86f314f9d4624d630827a739b6dfbe195e0850",
      "LastModified" : "2018-01-04T18:05:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copy exported include files to the global include directory\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build a static library\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Install targets\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/qtel/CMakeLists.txt" : {
      "ObjectId" : "4afc99b0fe90bdf7ae63740c41fba73f6d77bfe9",
      "LastModified" : "2018-01-04T18:05:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The program name\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Program source\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Header files that need to be run through moc\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Forms that need to be run through uic\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Resource files\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Libraries\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Find the GSM codec library and include directory\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Find Qt5\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Generate targets for moc, uic and rcc\n",
        "Line" : 37,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# If not Qt5 was found, try Qt4\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Generate targets for moc, uic and rcc\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# We also need to add the current build directory to the include search path\n\n# to find automatically generated h-files.\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Add targets for version files\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Compile the application\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Install targets\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Build the translations subdirectory\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "src/qtel/qtel.pro" : {
      "ObjectId" : "938a5f5077b1d897415a88bfc620d6181eb70bf3",
      "LastModified" : "2018-01-04T18:05:29Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "src/qtel/translations/CMakeLists.txt" : {
      "ObjectId" : "e51eeddef4174591398f3338dadea219adcf8220",
      "LastModified" : "2018-01-20T18:28:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Language translations\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/svxlink/CMakeLists.txt" : {
      "ObjectId" : "1b500859bd8624d368960648fca4561104d4aa80",
      "LastModified" : "2018-01-20T18:28:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_subdirectory(scripts)\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/svxlink/contrib/CMakeLists.txt" : {
      "ObjectId" : "ed9b7b6d02a4e5b43c6297f63eadfbf929d24a5e",
      "LastModified" : "2018-02-24T09:24:06Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/svxlink/contrib/module_remote_relay/CMakeLists.txt" : {
      "ObjectId" : "775b605c00e7c3e322c330bf0920e66f20dd8074",
      "LastModified" : "2018-01-04T18:05:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The name of the module without the Module prefix\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Install targets\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/svxlink/contrib/module_site_status/CMakeLists.txt" : {
      "ObjectId" : "62ab06906b0a55ad5cda5244de05f19f89ac297e",
      "LastModified" : "2018-02-24T09:24:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The name of the module without the Module prefix\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Install targets\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/svxlink/contrib/module_tclsstv/CMakeLists.txt" : {
      "ObjectId" : "7058ee8ebe36ae2bd8ca8380a82ee7555dd5908e",
      "LastModified" : "2018-02-24T09:24:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The name of the module without the Module prefix\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Install targets\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/svxlink/contrib/module_txfan/CMakeLists.txt" : {
      "ObjectId" : "c6ff465f80593828bae5c0377dced369a1896556",
      "LastModified" : "2018-02-24T09:24:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The name of the module without the Module prefix\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Install targets\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/svxlink/contrib/svxserver/CMakeLists.txt" : {
      "ObjectId" : "04ce22c01e66036ccc697ecbb6e5793782ec4448",
      "LastModified" : "2018-02-24T09:24:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the popt library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find the GCrypt library\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add project libraries\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add targets for version files\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Build the executable\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Install targets\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/svxlink/contrib/svxserver/systemd/CMakeLists.txt" : {
      "ObjectId" : "104e87dacde9e6202eef3804f6713a62a86596b2",
      "LastModified" : "2018-02-24T09:24:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#message(STATUS \"Configured systemd unit file:svxserver.service\")\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#message(STATUS \"Configured systemd unit file:remotetrx\")\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/svxlink/devcal/CMakeLists.txt" : {
      "ObjectId" : "3d565bbf5014689f286e561a535928b4bea850ef",
      "LastModified" : "2018-02-24T09:24:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the popt library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add targets for version files\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#add_executable(noisegen noisegen.cpp)\n\n#target_link_libraries(noisegen asyncaudio asynccpp trx)\n\n#set_target_properties(noisegen PROPERTIES\n\n#  RUNTIME_OUTPUT_DIRECTORY ${RUNTIME_OUTPUT_DIRECTORY}\n\n#)\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Install targets\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/svxlink/digital/CMakeLists.txt" : {
      "ObjectId" : "f9f227ceb8132ff17ba775a79865741570c96530",
      "LastModified" : "2018-02-24T09:24:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The name of the library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Which include files to export to the global include directory\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# What sources to compile for the library\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Which other libraries this library depends on\n\n#set(LIBS ${LIBS} asynccore)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Copy exported include files to the global include directory\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Build only a static library\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/svxlink/modules/CMakeLists.txt" : {
      "ObjectId" : "3de23156fd5a29ac69a4bd6bb2f92728a274c1c7",
      "LastModified" : "2018-02-24T09:24:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_subdirectory(template)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/svxlink/modules/dtmf_repeater/CMakeLists.txt" : {
      "ObjectId" : "359bc6eac9bd3757b2bbebaa603461aaab0b605a",
      "LastModified" : "2018-02-24T09:24:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The name of the module without the Module prefix\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Module source code\n\n#set(MODSRC xyz.cpp)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Project libraries to link to\n\n#set(LIBS ${LIBS} echolib)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The version tag name without the VER_ prefix\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add targets for version files\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Build the plugin\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Install targets\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "src/svxlink/modules/echolink/CMakeLists.txt" : {
      "ObjectId" : "ff4777cc10ff2ca6835f399664893e88b1f6ac21",
      "LastModified" : "2018-02-24T09:24:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The name of the module without the Module prefix\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Module source code\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Project libraries to link to\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find the TCL library\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Find the GSM codec library and include directory\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add targets for version files\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build the plugin\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Install targets\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "src/svxlink/modules/frn/CMakeLists.txt" : {
      "ObjectId" : "4eff9a2297c6df692cbcfb5388369d9524d95ca1",
      "LastModified" : "2018-02-24T09:24:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The name of the module without the Module prefix\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Module source code\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Project libraries to link to\n\n#set(LIBS ${LIBS} echolib)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find the GSM codec library and include directory\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The version tag name without the VER_ prefix\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add targets for version files\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build the plugin\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Install targets\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "src/svxlink/modules/help/CMakeLists.txt" : {
      "ObjectId" : "5968241492975a920d12e11896745f1fc08d43e8",
      "LastModified" : "2018-02-24T09:24:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The name of the module without the Module prefix\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Module source code\n\n#set(MODSRC xyz.cpp)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Project libraries to link to\n\n#set(LIBS ${LIBS} echolib)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The version tag name without the VER_ prefix\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add targets for version files\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Build the plugin\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Install targets\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "src/svxlink/modules/metarinfo/CMakeLists.txt" : {
      "ObjectId" : "16c41b991f289cebc8b0cf439bfae01db77e0c2e",
      "LastModified" : "2018-03-01T14:12:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The name of the module without the Module prefix\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Module source code\n\n#set(MODSRC xyz.cpp)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Project libraries to link to\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The version tag name without the VER_ prefix\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#string(REGEX REPLACE \\(.\\)\\([A-Z]\\) \\\\1_\\\\2 VERNAME ${VERNAME})\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add targets for version files\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build the plugin\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Install targets\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "src/svxlink/modules/parrot/CMakeLists.txt" : {
      "ObjectId" : "af3096b795a8cda189a294aff464e71e472d7706",
      "LastModified" : "2018-02-24T09:24:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The name of the module without the Module prefix\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Module source code\n\n#set(MODSRC xyz.cpp)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Project libraries to link to\n\n#set(LIBS ${LIBS} echolib)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The version tag name without the VER_ prefix\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add targets for version files\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Build the plugin\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Install targets\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "src/svxlink/modules/propagation_monitor/CMakeLists.txt" : {
      "ObjectId" : "b7cdafc6f551dc21cb22f01e7569363a0b3befb2",
      "LastModified" : "2018-02-24T09:24:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The name of the module without the Module prefix\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Generate configuration files with correct paths\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Install targets\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/svxlink/modules/selcallenc/CMakeLists.txt" : {
      "ObjectId" : "25489e428d526525e6b12c4f4db21e718634ed6f",
      "LastModified" : "2018-02-24T09:24:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The name of the module without the Module prefix\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Install targets\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/svxlink/modules/tcl/CMakeLists.txt" : {
      "ObjectId" : "0d7786aca715b702c725d654465c404e97dbe41d",
      "LastModified" : "2018-02-24T09:24:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The name of the module without the Module prefix\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Module source code\n\n#set(MODSRC xyz.cpp)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Project libraries to link to\n\n#set(LIBS ${LIBS} echolib)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The version tag name without the VER_ prefix\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add targets for version files\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Build the plugin\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Install targets\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "src/svxlink/modules/tcl_voice_mail/CMakeLists.txt" : {
      "ObjectId" : "8b9dfee512d1f7a7d5aa5d68f6e9525c1e904b4e",
      "LastModified" : "2018-02-24T09:24:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The name of the module without the Module prefix\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Generate config file with correct paths\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Generate TCL module with correct paths\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Install targets\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/svxlink/modules/template/CMakeLists.txt" : {
      "ObjectId" : "b830487e75ff2d1b4b4a3cbc27b773c297eb4c95",
      "LastModified" : "2018-02-24T09:24:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The name of the module without the Module prefix\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Module source code\n\n#set(MODSRC xyz.cpp)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Project libraries to link to\n\n#set(LIBS ${LIBS} echolib)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The version tag name without the VER_ prefix\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add targets for version files\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Build the plugin\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Install targets\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "src/svxlink/modules/trx/CMakeLists.txt" : {
      "ObjectId" : "ae743b420bbf18ae8f7a3d47fb9f4ef2c95cdb5f",
      "LastModified" : "2018-02-24T09:24:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The name of the module without the Module prefix\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Module source code\n\n#set(MODSRC xyz.cpp)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Project libraries to link to\n\n#set(LIBS ${LIBS} echolib)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The version tag name without the VER_ prefix\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add targets for version files\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Build the plugin\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Install targets\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "src/svxlink/reflector/CMakeLists.txt" : {
      "ObjectId" : "91733bf5880f9a49ce0c665584149ead14e9e219",
      "LastModified" : "2018-02-24T09:24:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the popt library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find the GCrypt library\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add project libraries\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add targets for version files\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Build the executable\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Install targets\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/svxlink/remotetrx/CMakeLists.txt" : {
      "ObjectId" : "9d64cfa5a6d281b39cb38a4f1d0e4debe807a350",
      "LastModified" : "2018-02-24T09:24:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the popt library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find the GCrypt library\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add project libraries\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add targets for version files\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Build the executable\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Install targets\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/svxlink/scripts/CMakeLists.txt" : {
      "ObjectId" : "0391112ce6a53d6226ed086d64bb05e6ef37ab34",
      "LastModified" : "2018-02-24T09:24:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install targets\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/svxlink/siglevdetcal/CMakeLists.txt" : {
      "ObjectId" : "03d26790968415001a95b5ee6be9ad72a7fc5f4c",
      "LastModified" : "2018-02-24T09:24:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the GCrypt library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add project libraries\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add targets for version files\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Build the executable\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Install targets\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/svxlink/svxlink/CMakeLists.txt" : {
      "ObjectId" : "cf2bf6ad79569452cb5e143d583df2a217b03ae8",
      "LastModified" : "2018-03-01T14:12:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the popt library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find the GSM codec library\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find the TCL library\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find the GCrypt library\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Find the dl library - only for Linux, not required for FreeBSD\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Find libcurl libraries\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add project libraries\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add targets for version files\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Build the executable\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Generate config file with correct paths\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Install targets\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "src/svxlink/systemd/CMakeLists.txt" : {
      "ObjectId" : "dc0f31cd63b4a58066ef465e8fa67e0e5e5393dd",
      "LastModified" : "2018-02-24T09:24:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#############################################################################\n\n# SvxLink ROIP Repeater system Systemd setup\n\n#############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#message(STATUS \"Configured systemd unit file:svxlink_gpio_setup.service\")\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#message(STATUS \"Configured systemd unit file:svxlink.service\")\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#message(STATUS \"Configured systemd unit file:remotetrx.service\")\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#message(STATUS \"Configured systemd unit file:svxlink\")\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#message(STATUS \"Configured systemd unit file:remotetrx\")\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/svxlink/trx/CMakeLists.txt" : {
      "ObjectId" : "779cf1295a41751c53ef489bda4413a3374eb4fe",
      "LastModified" : "2018-02-24T09:24:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The name of the library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Which include files to export to the global include directory\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# What sources to compile for the library\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Which other libraries this library depends on\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Copy exported include files to the global include directory\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Find the GCrypt library\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Find rtl-sdr\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# We also need pthreads when using the RtlUsb class\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Add targets for version files\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Build only a static library\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Install targets\n\n#install(TARGETS ${LIBNAME} DESTINATION ${LIB_INSTALL_DIR})\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    }
  },
  "FileTypes" : {
    "CMAKE" : 60,
    "QMAKE" : 1,
    "MAKEFILE" : 2
  },
  "ElapsedTime" : 2757
}