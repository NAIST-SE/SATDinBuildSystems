{
  "Repository" : "974684",
  "Revision" : "HEAD",
  "ObjectId" : "be668971a687b141660fd2e5635d2fd598992a01",
  "CommitTime" : "2016-08-16T16:49:56Z",
  "Files" : {
    "code/Makefile" : {
      "ObjectId" : "4b6413a3c6b48b3a8d36085ad7aec6488f07eeb8",
      "LastModified" : "2014-06-22T04:39:34Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Not general, will probably on work on my Mac only.  :-)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "code/cpp/Builds/Linux/Makefile" : {
      "ObjectId" : "98d920b866e7d514725aa0f60d497c8c158ecc17",
      "LastModified" : "2015-01-25T23:30:00Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Automatically generated makefile, created by the Introjucer\r\n\n# Don't edit this file! Your changes will be overwritten when you re-save the Introjucer project!\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# (this disables dependency generation if multiple architectures are set)\r\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "code/cpp/Builds/Ubuntu/Makefile" : {
      "ObjectId" : "432b79c9fdded8a80a594a0a407e5eef8c30c495",
      "LastModified" : "2014-06-22T04:39:34Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Automatically generated makefile, created by the Introjucer\n\n# Don't edit this file! Your changes will be overwritten when you re-save the Introjucer project!\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# (this disables dependency generation if multiple architectures are set)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "code/cpp/glog/Makefile" : {
      "ObjectId" : "990e3f7c180025bc558c3c8a87d7bb21cbf0ded6",
      "LastModified" : "2014-06-22T04:39:34Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile.in generated by automake 1.11.3 from Makefile.am.\n\n# Makefile.  Generated from Makefile.in by configure.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n\n# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software\n\n# Foundation, Inc.\n\n# This Makefile.in is free software; the Free Software Foundation\n\n# gives unlimited permission to copy and/or distribute it,\n\n# with or without modifications, as long as this notice is preserved.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY, to the extent permitted by law; without\n\n# even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n\n# PARTICULAR PURPOSE.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# These are good warnings to turn on by default\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# These are x86-specific, having to do with frame-pointers\n\n#am__append_2 = -fno-omit-frame-pointer\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#am__append_4 = -fno-rtti\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#am__append_5 = mock_log_test\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#am__EXEEXT_1 = mock_log_test$(EXEEXT)\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#am_mock_log_test_OBJECTS = $(am__objects_1) \\\n#\tmock_log_test-mock-log_test.$(OBJEXT)\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#nodist_mock_log_test_OBJECTS = $(am__objects_1)\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#mock_log_test_DEPENDENCIES = libglog.la \\\n#\t$(am__DEPENDENCIES_2) $(am__DEPENDENCIES_2)\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Make sure that when we re-make ./configure, we get the macros we need\n",
        "Line" : 482,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# This is so we can #include <glog/foo>\n",
        "Line" : 485,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# This is mostly based on configure options\n",
        "Line" : 488,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# The libraries libglog depends on.\n",
        "Line" : 500,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Compile switches for our unittest.\n",
        "Line" : 502,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Libraries for our unittest.\n",
        "Line" : 506,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Every time you add a unittest to check_SCRIPTS, add it here too\n",
        "Line" : 511,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Binaries used for script-based unittests.\n",
        "Line" : 514,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#mock_log_test_SOURCES = $(gloginclude_HEADERS) \\\n#                        src/mock-log_test.cc\n",
        "Line" : 589,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#nodist_mock_log_test_SOURCES = $(nodist_gloginclude_HEADERS)\n\n#mock_log_test_CXXFLAGS = $(PTHREAD_CFLAGS) $(TEST_CFLAGS)\n\n#mock_log_test_LDFLAGS = $(PTHREAD_CFLAGS)\n\n#mock_log_test_LDADD = libglog.la $(COMMON_LIBS) $(TEST_LIBS)\n",
        "Line" : 592,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Add pkgconfig file\n",
        "Line" : 635,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 22,
      "Errorlog" : "line 100:68 token recognition error at: '\\1'\nline 1578:31 token recognition error at: '\" \\\\n\\t   && chmod -R u+w $(distdir)/*.sln $(distdir)/vsprojects/\\n\\nlibtool: $(LIBTOOL_DEPS)\\n\\t$(SHELL) ./config.status --recheck\\n\\n# Tell versions [3.59,3.63) of GNU make to not export all variables.\\n# Otherwise a system limit (for SysV at least) may be exceeded.\\n.NOEXPORT:\\n\u0000'\n"
    },
    "code/cpp/glog/Makefile.am" : {
      "ObjectId" : "b598fa3e23f8ef4e5a8d4eadf4b539283d62fd27",
      "LastModified" : "2014-06-22T04:39:34Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Make sure that when we re-make ./configure, we get the macros we need\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This is so we can #include <glog/foo>\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This is mostly based on configure options\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# These are good warnings to turn on by default\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# These are x86-specific, having to do with frame-pointers\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# TODO(csilvers): check if -fomit-frame-pointer might be in $(CXXFLAGS),\n\n#                 before setting this.\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "## The .h files you want to install (that is, .h files that people\n\n## who install this package can include in their own applications.)\n\n## We have to include both the .h and .h.in forms.  The latter we\n\n## put in noinst_HEADERS.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## This is for HTML and other documentation you want to install.\n\n## Add your documentation files (in doc/) in addition to these\n\n## top-level boilerplate files.  Also add a TODO file if you have one.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## The libraries (.so's) you want to install\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# The libraries libglog depends on.\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Compile switches for our unittest.\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Libraries for our unittest.\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## unittests you want to run when people type 'make check'.\n\n## TESTS is for binary unittests, check_SCRIPTS for script-based unittests.\n\n## TESTS_ENVIRONMENT sets environment variables for when you run unittest,\n\n## but it only seems to take effect for *binary* unittests (argh!)\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Every time you add a unittest to check_SCRIPTS, add it here too\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Binaries used for script-based unittests.\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# force to create lt-demangle_unittest\n",
        "Line" : 89,
        "CharPositionInLine" : 32
      },
      "17" : {
        "Text" : "# force to create lt-signalhandler_unittest\n",
        "Line" : 95,
        "CharPositionInLine" : 37
      },
      "18" : {
        "Text" : "## vvvv RULES TO MAKE THE LIBRARIES, BINARIES, AND UNITTESTS\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## The location of the windows project file for each binary we make\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## ^^^^ END OF RULES TO MAKE THE LIBRARIES, BINARIES, AND UNITTESTS\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "## This should always include $(TESTS), but may also include other\n\n## binaries that you compile but don't want automatically installed.\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Windows wants write permission to .vcproj files and maybe even sln files.\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Add pkgconfig file\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 4,
    "AUTOMAKE" : 1
  },
  "ElapsedTime" : 2938
}