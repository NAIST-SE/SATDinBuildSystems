{
  "Repository" : "11166583",
  "Revision" : "HEAD",
  "ObjectId" : "5b2ff8f8a4cd086b36d85e0b873eccc7bfadec9f",
  "CommitTime" : "2019-04-15T05:56:16Z",
  "Files" : {
    "Bootloader/CMakeLists.txt" : {
      "ObjectId" : "5bebc33ea9d73c89f11021ffaf28a5f18cb66fd5",
      "LastModified" : "2019-02-27T22:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMAKE Kiibohd Controller Bootloader |###\n\n#\n\n# Jacob Alexander 2011-2018\n\n# Due to this file's usefulness:\n\n#\n\n# Released into the Public Domain\n\n#\n\n# This bootloader is based upon the MCHCK dfu-usb bootloader.\n\n# DO NOT USE with Teensy based microcontrollers.\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Chip Selection\n\n#\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#| You _MUST_ set this to match the microcontroller you are trying to compile for\n\n#| You _MUST_ clean the build directory if you change this value\n\n#|\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# McHCK       mk20dx128vlf5\n",
        "Line" : 23,
        "CharPositionInLine" : 20
      },
      "4" : {
        "Text" : "#\t\"mk20dx256vlh7\"    # Kiibohd-dfu mk20dx256vlh7\n\n#\t\"sam4s8c\"          # Sam\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "###\n\n# Compiler Selection\n\n#\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#| *** EXPERIMENTAL ***\n\n#| Stick with gcc unless you know what you're doing\n\n#| Currently only arm is supported with clang\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# arm-none-eabi-gcc / avr-gcc - Default\n",
        "Line" : 46,
        "CharPositionInLine" : 9
      },
      "8" : {
        "Text" : "#       \"clang\" # arm-none-eabi\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "###\n\n# Product String\n\n#\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "###\n\n# Flashing Station ID\n\n#\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "###\n\n# Bootloader Configuration\n\n#\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "###\n\n# Debug\n\n#\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Use a JLink programmer (no bootloader required)\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#| swd or jtag\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#| Speed in kHz or auto\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "###\n\n# Compiler Intialization\n\n#\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "##\n\n# Source Defines\n\n#\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Add device file, if it exists\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#| Add Lib sources to main list\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "###\n\n# Directory Includes\n\n#\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "###\n\n# Project Description\n\n#\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#| Project\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#| Target Name (output name)\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#| General Settings\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#| Compiler Version (only available after project() command)\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "###\n\n# Minimum Compiler Version Checks\n\n#\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Due to optimization requirements, we have to impose a minimum GCC version on the bootloader\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "###\n\n# CMake Build Env\n\n#\n",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "###\n\n# Generate Header Files\n\n#\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "###\n\n# ctag Generation\n\n#\n",
        "Line" : 275,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Optional\n",
        "Line" : 279,
        "CharPositionInLine" : 23
      },
      "32" : {
        "Text" : "# Generate the ctags\n",
        "Line" : 282,
        "CharPositionInLine" : 1
      },
      "33" : {
        "Text" : "###\n\n# Disable -Wl,-search_paths_first for OSX (not supported by arm-none-eabi-gcc)\n\n#\n",
        "Line" : 290,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "###\n\n# Build Targets\n\n#\n",
        "Line" : 303,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#| Create the .ELF file\n",
        "Line" : 307,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#| .ELF Properties\n",
        "Line" : 311,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# XXX Force Windows to keep the .exe off\n",
        "Line" : 314,
        "CharPositionInLine" : 41
      },
      "38" : {
        "Text" : "#| Convert the .ELF into a .bin to load onto the McHCK\n",
        "Line" : 318,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#| Generate the Extended .LSS\n",
        "Line" : 332,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#| Generate the Symbol Table .SYM\n",
        "Line" : 340,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "#| Compiler Selection Record\n",
        "Line" : 348,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "###\n\n# Size Information\n\n#\n",
        "Line" : 355,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "#| After Changes Size Information\n",
        "Line" : 359,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "###\n\n# Setup Loader Script and Program\n\n#\n",
        "Line" : 368,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 45
    },
    "CMakeLists.txt" : {
      "ObjectId" : "d0f6708d28f4797c3addfaff172bdd258eddb771",
      "LastModified" : "2018-09-07T20:03:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMAKE Kiibohd Controller |###\n\n#\n\n# Jacob Alexander 2011-2017\n\n# Due to this file's usefulness:\n\n#\n\n# Released into the Public Domain\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Chip Selection\n\n#\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#| You _MUST_ set this to match the microcontroller you are trying to compile for\n\n#| You _MUST_ clean the build directory if you change this value\n\n#|\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#       \"atmega32u4\"       # Teensy   2.0 (avr) - Deprecated\n\n#       \"at90usb1286\"      # Teensy++ 2.0 (avr) - Deprecated\n\n#       \"mk20dx128\"        # Teensy   3.0 (arm)\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# McHCK       mk20dx128vlf5\n",
        "Line" : 23,
        "CharPositionInLine" : 20
      },
      "5" : {
        "Text" : "#\t\"mk20dx128vlf5\"    # Kiibohd-dfu mk20dx128vlh7\n\n#       \"mk20dx256\"        # Teensy   3.1,3.2 (arm)\n\n#       \"mk20dx256vlh7\"    # Kiibohd-dfu mk20dx256vlh7\n\n#       \"mk22fx512avlh7\"   # Kiibohd-dfu mk22fx512avlh7\n\n#       \"mk64fx512\"        # Teensy   3.5 (arm)\n\n#       \"mk66fx1m0\"        # Teensy   3.6 (arm)\n\n#       \"host\"             # System compiler test environment\n\n#\t\"sam4s8c\"          # Kira\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "###\n\n# Debug\n\n#\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Use a JLink programmer (no bootloader required)\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#| swd or jtag\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#| Speed in kHz or auto\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "###\n\n# Compiler Selection\n\n#\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#| gcc has been tested much more (and will likely give smaller binaries)\n\n#| clang does work though\n\n#| Currently only arm is supported with clang\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# arm-none-eabi-gcc / avr-gcc / host-gcc - Default\n",
        "Line" : 68,
        "CharPositionInLine" : 9
      },
      "13" : {
        "Text" : "#       \"clang\" # arm-none-eabi / host\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "###\n\n# Compiler Intialization\n\n#\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "###\n\n# Project Modules\n\n#\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#| Note: This is the only section you probably want to modify\n\n#| Each module is defined by it's own folder (e.g. Scan/Matrix represents the \"Matrix\" module)\n\n#| All of the modules must be specified, as they generate the sources list of files to compile\n\n#| Any modifications to this file will cause a complete rebuild of the project\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#| Please look at the {Scan,Macro,Output,Debug} for information on the modules and how to create new ones\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "##| Deals with acquiring the keypress information and turning it into a key index\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "##| Provides the mapping functions for DefaultMap and handles any macro processing before sending to the OutputModule\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "##| Sends the current list of usb key codes through USB HID\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "##| Debugging source to use, each module has it's own set of defines that it sets\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "###\n\n# Keymap Configuration (do not include the .kll extension)\n\n#\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#| Do not include the .kll extension\n\n#| * BaseMap maps the native keyboard scan codes to USB Codes so the layout is compatible with all other layouts\n\n#| * DefaultMap allows the default keymap to be modified from the BaseMap\n\n#| * PartialMaps is a set of dynamically set layers (there is no limit, but too many may use up too much RAM...)\n\n#| BaseMap generally does not need to be changed from \"defaultMap\"\n\n#|\n\n#| Syntax:\n\n#|  myMap\n\n#|    * defines a single .kll layout file, double-quotes are needed to distinguish between layers\n\n#|  \"myMap specialLayer\"\n\n#|    * defines myMap to be the main layout, then replace specialLayers on top of it\n\n#|\n\n#| - Only for PartialMaps -\n\n#|  \"myMap specialLayer\" \"myMap colemak\" dvorak\n\n#|    * As before, but also generates a second layer at index 2 and third at index 3\n\n#|\n\n#| NOTE:  Remember to add key(s) to enable each Partial Layer\n\n#| NOTE2: Layers are always based up the BaseMap (which should be an ANSI-like mapping)\n\n#| NOTE3: Compiler looks in kll/layouts and the build directory for layout files (precedence on build directory)\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##| Set the base keyboard .kll map, defaults to \"defaultMap\" if not found\n\n##| Looks in Scan/<Module Name> for the available BaseMaps\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "##| Layer additonal .kll maps on the BaseMap, layers are in order from 1st to nth\n\n##| Can be set to \"\"\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "##| ParitalMaps available on top of the BaseMap. See above for syntax on specifying multiple layers vs. layering\n\n##| Can be set to \"\"\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "###\n\n# Source Defines (in addition to the selected Modules)\n\n#\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "###\n\n# Project Description\n\n#\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#| Project\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#| Target Name (output name)\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#| Manufacturer name\n\n#| - This can be overridden by a Scan Module setup.cmake -\n\n#| USB Descriptor iManufacturer string\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#| Flashing Station name\n\n#| This is a placeholder value, the flashing process will overwrite this value for you\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#| General Settings\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#| Compiler Version (only available after project() command)\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "###\n\n# Module Initialization / Compilation / Targets\n\n#\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Generate kll layouts if necessary\n",
        "Line" : 200,
        "CharPositionInLine" : 15
      },
      "CommentCount" : 37
    },
    "Debug/cli/setup.cmake" : {
      "ObjectId" : "98aa2a9f7abdc4d21983cd7c6ebfa608f9b73dbf",
      "LastModified" : "2016-08-19T05:43:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMake Kiibohd Controller Debug Module |###\n\n#\n\n# Written by Jacob Alexander in 2014-2016 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Module C files\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Compiler Family Compatibility\n\n#\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Debug/full/setup.cmake" : {
      "ObjectId" : "61da5230810d9fb4e295c72b69848f3212b428af",
      "LastModified" : "2017-11-08T05:47:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMake Kiibohd Controller Debug Module |###\n\n#\n\n# Written by Jacob Alexander in 2011-2017 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Required Submodules\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Compiler Family Compatibility\n\n#\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Debug/latency/setup.cmake" : {
      "ObjectId" : "a9a3b06a3a113c4d5cd3792e1e1be253f5f6880e",
      "LastModified" : "2017-11-08T05:47:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMake Kiibohd Controller Debug Module |###\n\n#\n\n# Written by Jacob Alexander in 2014-2017 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Module C files\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Compiler Family Compatibility\n\n#\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Debug/led/setup.cmake" : {
      "ObjectId" : "16076194a252914126667223516762330a5015e9",
      "LastModified" : "2017-11-08T05:47:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMake Kiibohd Controller Debug Module |###\n\n#\n\n# Written by Jacob Alexander in 2011-2016 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Module C files\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Compiler Family Compatibility\n\n#\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Debug/print/setup.cmake" : {
      "ObjectId" : "e8a01933e3a01e6e894940290efe9e8d3092bc01",
      "LastModified" : "2017-11-08T05:47:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMake Kiibohd Controller Debug Module |###\n\n#\n\n# Written by Jacob Alexander in 2011-2016 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Module C files\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Compiler Family Compatibility\n\n#\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Lib/CMake/FindCtags.cmake" : {
      "ObjectId" : "f644f8ad3a30f09db79a3d50c248710f05f132f7",
      "LastModified" : "2018-09-07T20:03:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The module defines the following variables:\n\n#   CTAGS_EXECUTABLE - path to ctags command line client\n\n#   CTAGS_FOUND - true if the command line client was found\n\n#   CTAGS_VERSION_STRING - the version of ctags found (since CMake 2.8.8)\n\n# Example usage:\n\n#   find_package( Ctags )\n\n#   if( CTAGS_FOUND )\n\n#     message(\"ctags found: ${CTAGS_EXECUTABLE}\")\n\n#   endif()\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The xcode version of ctags is broken and useless\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set CTAGS_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Lib/CMake/FindDFUSuffix.cmake" : {
      "ObjectId" : "6fac66a982cf565592e1c5d8d3a306016c33cd9f",
      "LastModified" : "2018-09-07T20:03:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The module defines the following variables:\n\n#   DFU_SUFFIX_EXECUTABLE - path to dfu-suffix command line client\n\n#   DFU_SUFFIX_FOUND - true if the command line client was found\n\n#   DFU_SUFFIX_VERSION_STRING - the version of dfu-suffix found (since CMake 2.8.8)\n\n# Example usage:\n\n#   find_package( DFUSuffix )\n\n#   if( DFU_SUFFIX_FOUND )\n\n#     message(\"dfu-suffix found: ${DFU_SUFFIX_EXECUTABLE}\")\n\n#   endif()\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set DFU_SUFFIX_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Lib/CMake/FindLSB.cmake" : {
      "ObjectId" : "e3a0cb052d212bbe5ae8f1f8a13b49fcd4aea0d3",
      "LastModified" : "2018-09-07T20:03:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find Linux Standard Base Release Tools\n\n# This module defines the following variables:\n\n#  LSB_RELEASE_EXECUTABLE        - path to lsb_release program\n\n#  LSB_RELEASE_VERSION_SHORT     - Output of \"lsb_release -vs\"\n\n#  LSB_RELEASE_ID_SHORT          - Output of \"lsb_release -is\"\n\n#  LSB_RELEASE_DESCRIPTION_SHORT - Output of \"lsb_release -ds\"\n\n#  LSB_RELEASE_RELEASE_SHORT     - Output of \"lsb_release -rs\"\n\n#  LSB_RELEASE_CODENAME_SHORT    - Output of \"lsb_release -cs\"\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# Copyright (c) 2012, Ben Morgan, University of Warwick\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#    * Redistributions of source code must retain the above copyright\n\n#      notice, this list of conditions and the following disclaimer.\n\n#    * Redistributions in binary form must reproduce the above copyright\n\n#      notice, this list of conditions and the following disclaimer in the\n\n#      documentation and/or other materials provided with the distribution.\n\n#    * Neither the name of Ben Morgan, or the University of Warwick nor the\n\n#      names of its contributors may be used to endorse or promote products\n\n#      derived from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE CONTRIBUTORS BE LIABLE FOR ANY\n\n# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\n# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n\n# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n\n# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n\n# SUCH DAMAGE.\n\n#----------------------------------------------------------------------------\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Extract the standard information in short format into CMake variables\n\n# - Version (strictly a colon separated list, kept as string for now)\n",
        "Line" : 46,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# - Distributor ID\n",
        "Line" : 53,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# - Description\n",
        "Line" : 59,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# Description might be quoted, so strip out if they're there\n",
        "Line" : 64,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# - Release\n",
        "Line" : 71,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# - Codename\n",
        "Line" : 77,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 8
    },
    "Lib/CMake/FindObjdump.cmake" : {
      "ObjectId" : "0e125ed3256ab3e486c3db80f64c3248b9d95f47",
      "LastModified" : "2019-02-27T22:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The module defines the following variables:\n\n#   OBJDUMP_EXECUTABLE - path to dfu-suffix command line client\n\n#   OBJDUMP_FOUND - true if the command line client was found\n\n#   OBJDUMP_VERSION_STRING - the version of dfu-suffix found (since CMake 2.8.8)\n\n# Example usage:\n\n#   find_package( DFUSuffix )\n\n#   if( OBJDUMP_FOUND )\n\n#     message(\"objdump found: ${OBJDUMP_EXECUTABLE}\")\n\n#   endif()\n\n# Requires OBJDUMP be set\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set OBJDUMP_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Lib/CMake/arm.cmake" : {
      "ObjectId" : "1c6a93bd0a122c21cce53da16df779ab2cb39b29",
      "LastModified" : "2019-03-24T02:07:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMAKE Kiibohd Controller |###\n\n#\n\n# Jacob Alexander 2011-2019\n\n# Due to this file's usefulness:\n\n#\n\n# Released into the Public Domain\n\n#\n\n# ARM CMake Build Configuration\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Compiler Check\n\n#\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#|\n\n#| In CMake 3.6 a new feature to configure try_compile to work with cross-compilers\n\n#| https://cmake.org/cmake/help/v3.6/variable/CMAKE_TRY_COMPILE_TARGET_TYPE.html#variable:CMAKE_TRY_COMPILE_TARGET_TYPE\n\n#| If we detect CMake 3.6 or higher, use the new method\n\n#|\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Prepare for cross-compilation\n",
        "Line" : 23,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "#|\n\n#| Before CMake 3.6 the cmake_force_c_compiler command was necessary to select cross-compilers\n\n#| and other problemmatic compilers.\n\n#|\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set the Compilers (must be set first)\n",
        "Line" : 46,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "###\n\n# ARM Defines and Linker Options\n\n#\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#| Chip Name (Linker)\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# For loading script compatibility\n",
        "Line" : 71,
        "CharPositionInLine" : 21
      },
      "9" : {
        "Text" : "#| Kinetis\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#| SAM\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#| nRF\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#| Unknown\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#| Chip Base Type\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#| CPU Type\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#| Extra Compiler Sources\n\n#| Mostly for convenience functions like interrupt handlers\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# KLL Options\n",
        "Line" : 116,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "#| SAM Sources\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# KLL Options\n",
        "Line" : 131,
        "CharPositionInLine" : 1
      },
      "19" : {
        "Text" : "#| Kinetis Sources\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# KLL Options\n",
        "Line" : 137,
        "CharPositionInLine" : 1
      },
      "21" : {
        "Text" : "#| Clang needs a few more functions for linking\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#| USB Defines, this is how the loader programs detect which type of chip base is used\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# XXX (HaaTa) These VID's are deprecated, but are kept as the default for unspecified keyboards\n",
        "Line" : 155,
        "CharPositionInLine" : 1
      },
      "24" : {
        "Text" : "# The | symbol is replaced by a space if in secure mode, or a \\0 if not (at runtime)\n",
        "Line" : 161,
        "CharPositionInLine" : 1
      },
      "25" : {
        "Text" : "# TODO Double check, this is likely incorrect\n",
        "Line" : 168,
        "CharPositionInLine" : 66
      },
      "26" : {
        "Text" : "#| Compiler flag to set the C Standard level.\n\n#|     c89   = \"ANSI\" C\n\n#|     gnu89 = c89 plus GCC extensions\n\n#|     c99   = ISO C99 standard\n\n#|     gnu99 = c99 plus GCC extensions\n\n#|     gnu11 = c11 plus GCC extensions\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#| Warning Options\n\n#|  -Wall...:     warning level\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#| Tuning Options\n\n#|  -f...:        tuning, see GCC manual\n\n#| NOTE: -fshort-wchar is specified to allow USB strings be passed conveniently\n\n#| Bootloader Compiler Flags\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "## Clang Compiler\n",
        "Line" : 194,
        "CharPositionInLine" : 1
      },
      "30" : {
        "Text" : "# TODO Not currently working, clang doesn't support all the neccessary extensions\n",
        "Line" : 196,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "## GCC Compiler\n",
        "Line" : 200,
        "CharPositionInLine" : 1
      },
      "32" : {
        "Text" : "#set( TUNING \"-mthumb -fdata-sections -ffunction-sections -fno-builtin -msoft-float -fstrict-volatile-bitfields -flto -fno-use-linker-plugin -fwhole-program -Wno-main -nostartfiles -fplan9-extensions -D_bootloader_\" )\n",
        "Line" : 203,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "#| Firmware Compiler Flags\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "## Clang Compiler\n",
        "Line" : 208,
        "CharPositionInLine" : 1
      },
      "35" : {
        "Text" : "## GCC Compiler\n",
        "Line" : 212,
        "CharPositionInLine" : 1
      },
      "36" : {
        "Text" : "#| Optimization level, can be [0, 1, 2, 3, s].\n\n#|     0 = turn off optimization. s = optimize for size.\n\n#|     (Note: 3 is not always the best optimization level.)\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#| JLink support\n\n#| Used to drop to a breakpoint hardfault handler\n\n#| This isn't something most people would want\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#| Compiler Flags\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#| Linker Flags\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Bootloader linker flags\n",
        "Line" : 243,
        "CharPositionInLine" : 1
      },
      "41" : {
        "Text" : "## Clang Compiler\n",
        "Line" : 246,
        "CharPositionInLine" : 1
      },
      "42" : {
        "Text" : "# Normal linker flags\n",
        "Line" : 250,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "#| Enable color output with Ninja\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "## Clang Compiler\n",
        "Line" : 258,
        "CharPositionInLine" : 1
      },
      "45" : {
        "Text" : "## GCC Compiler\n",
        "Line" : 261,
        "CharPositionInLine" : 1
      },
      "46" : {
        "Text" : "# We always use the gcc linker for arm-none-eabi\n",
        "Line" : 266,
        "CharPositionInLine" : 1
      },
      "47" : {
        "Text" : "#| Hex Flags (XXX, CMake seems to have issues if you quote the arguments for the custom commands...)\n",
        "Line" : 271,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "#| Binary Flags\n",
        "Line" : 275,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "#| Lss Flags\n",
        "Line" : 279,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 50
    },
    "Lib/CMake/avr.cmake" : {
      "ObjectId" : "45ea18a0a765033a9324a6bc2d5f3609e9819ee2",
      "LastModified" : "2019-02-27T22:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMAKE Kiibohd Controller |###\n\n#\n\n# Jacob Alexander 2011-2014\n\n# Due to this file's usefulness:\n\n#\n\n# Released into the Public Domain\n\n#\n\n# avr-gcc CMake Build Configuration\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#| Set the Compilers (must be set first)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Atmel Defines and Linker Options\n\n#\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#| MCU Name\n\n#|\n\n#| \"at90usb162\"       # Teensy   1.0\n\n#| \"atmega32u4\"       # Teensy   2.0\n\n#| \"at90usb646\"       # Teensy++ 1.0\n\n#| \"at90usb1286\"      # Teensy++ 2.0\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#| Chip Size Database\n\n#| Teensy 1.0\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#| Teensy 2.0\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#| Teensy++ 1.0\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#| Teensy++ 2.0\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#| Unknown AVR\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#| Extra Compiler Sources\n\n#| Mostly for convenience functions like interrupt handlers\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# XXX Not needed for avr-gcc\n",
        "Line" : 69,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "#| CPU Type\n\n#| This is only informational for AVR microcontrollers\n\n#| The field can be determined by the microcontroller chip, but currently only one CPU type is used atm\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#| USB Defines\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# TODO Double check, this is likely incorrect\n",
        "Line" : 85,
        "CharPositionInLine" : 32
      },
      "14" : {
        "Text" : "#| Only Teensy based AVRs supported\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#| Compiler flag to set the C Standard level.\n\n#|     c89   = \"ANSI\" C\n\n#|     gnu89 = c89 plus GCC extensions\n\n#|     c99   = ISO C99 standard (not yet fully implemented)\n\n#|     gnu99 = c99 plus GCC extensions\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#| Warning Options\n\n#|  -Wall...:     warning level\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#| Tuning Options\n\n#|  -f...:        tuning, see GCC manual and avr-libc documentation\n\n#| NOTE: -fshort-wchar is specified to allow USB strings be passed conveniently\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#| Optimization level, can be [0, 1, 2, 3, s].\n\n#|     0 = turn off optimization. s = optimize for size.\n\n#|     (Note: 3 is not always the best optimization level. See avr-libc FAQ.)\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#| Output Format\n\n#| srec, ihex, binary\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#| Processor frequency.\n\n#|   Normally the first thing your program should do is set the clock prescaler,\n\n#|   so your program will run at the correct speed.  You should also set this\n\n#|   variable to same clock speed.  The _delay_ms() macro uses this, and many\n\n#|   examples use this variable to calculate timings.  Do not add a \"UL\" here.\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#| Compiler Flags\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#| Linker Flags\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#| Hex Flags (XXX, CMake seems to have issues if you quote the arguments for the custom commands...)\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#| Eep Flags (XXX, I've removed this target from the builds, but keeping the set line as a note)\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#| Lss Flags\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 26
    },
    "Lib/CMake/build.cmake" : {
      "ObjectId" : "84a947b921ed223f1f9d2d3a10e1b4ac6a5021e2",
      "LastModified" : "2019-02-27T22:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMAKE Kiibohd Controller Source Configurator |###\n\n#\n\n# Written by Jacob Alexander in 2011-2018 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Disable -Wl,-search_paths_first for OSX (not supported by avr-gcc or arm-none-eabi-gcc)\n\n#\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# GCC versions less than 5 don't support -fdiagnostics-color=always\n\n#\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n# Build Targets\n\n#\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#| Create the .ELF file\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# .ELF Binary\n",
        "Line" : 80,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# .ELF Properties\n",
        "Line" : 83,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "#| Create host library\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Shared Library\n",
        "Line" : 93,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# Shared Library Properties\n",
        "Line" : 96,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "#| llvm-clang does not have an objcopy equivalent\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#| Convert the .ELF into a .bin to load onto the McHCK\n\n#| Then sign using dfu-suffix (requries dfu-util)\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# dfu-suffix is required to sign the dfu binary\n",
        "Line" : 117,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# XXX (HaaTa) prependKey disabled currently for sam and nrf5 MCUs\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# XXX (HaaTa) prependKey disabled currently for sam and nrf5 MCUs\n",
        "Line" : 143,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "#| Convert the .ELF Into a .bin\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#| Convert the .ELF into a .HEX to load onto the Teensy\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "###\n\n# objdump files\n\n# Useful if objdump is available\n\n#\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Generate the Extended .LSS\n",
        "Line" : 191,
        "CharPositionInLine" : 1
      },
      "19" : {
        "Text" : "# Generate the Symbol Table .SYM\n",
        "Line" : 199,
        "CharPositionInLine" : 1
      },
      "20" : {
        "Text" : "#| Compiler Selection Record\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "###\n\n# Size Information\n\n#\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# After Changes Size Information\n",
        "Line" : 220,
        "CharPositionInLine" : 1
      },
      "23" : {
        "Text" : "# DFU Specific message\n",
        "Line" : 228,
        "CharPositionInLine" : 1
      },
      "24" : {
        "Text" : "###\n\n# Setup Loader Script and Program\n\n#\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#| First check for JLink based dev kits\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#| Next check for DFU based controllers\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#| Finally check for Teensy based\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Provides the user with the correct teensy-loader-cli command for the built .HEX file\n\n# Windows\n",
        "Line" : 258,
        "CharPositionInLine" : 1
      },
      "29" : {
        "Text" : "# Default\n",
        "Line" : 262,
        "CharPositionInLine" : 1
      },
      "30" : {
        "Text" : "###\n\n# Compiler Command Generation\n\n#\n",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#| Generate list of compiler commands for clang-tidy usage\n",
        "Line" : 274,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 32
    },
    "Lib/CMake/buildinfo.cmake" : {
      "ObjectId" : "fea35aaf3b7c15acb416e2b7eb063a11bf90f7d8",
      "LastModified" : "2019-02-27T22:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMAKE Kiibohd Controller Source Configurator |###\n\n#\n\n# Written by Jacob Alexander in 2011-2017 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Generate Build Defines\n\n#\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#| Modified\n\n#| Takes a bit of work to extract the \"M \" using CMake, and not using it if there are no modifications\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#| List of modified files\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#| Branch\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#| Date\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#| Commit Author and Email\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#| Commit Revision\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#| Commit Number (on branch)\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#| Most Recent Tag (on branch)\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#| Most Recent Tag Hash (on branch)\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#| If no tags set, just use HEAD\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#| Most Recent Tag Commit Number (on branch)\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#| Older versions of git (e.g. 1.7.1) dont' like rev-list --count\n\n#| If there's an error, try again with a less efficient version\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Now we do some CMake wizardry to split lines in the variable so we have a list called contents\n",
        "Line" : 123,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "# Now we just have to measure the length of the list\n",
        "Line" : 127,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "#| Origin URL\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#| Build Date\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#| Last Commit Date\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#| Build Platform\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# lsb_release is required on Linux\n",
        "Line" : 158,
        "CharPositionInLine" : 1
      },
      "21" : {
        "Text" : "# Replace quotes to be compatible with C\n",
        "Line" : 167,
        "CharPositionInLine" : 1
      },
      "22" : {
        "Text" : "# Unknown\n",
        "Line" : 170,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 23
    },
    "Lib/CMake/host.cmake" : {
      "ObjectId" : "2e81eeac2e899a2c2925010b0cad14c610d8cc5f",
      "LastModified" : "2019-02-27T22:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMAKE Kiibohd Controller |###\n\n#\n\n# Jacob Alexander 2016-2019\n\n# Due to this file's usefulness:\n\n#\n\n# Released into the Public Domain\n\n#\n\n# Host Compiler CMake Build Configuration\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#| Set the Compilers (must be set first)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If Apple and gcc, then this is actually clang\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n# OS Specific Configuration\n\n#\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###\n\n# System Compiler Defines and Linker Options\n\n#\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#| Indicate that we are building a host binary\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#| Extra Compiler Sources\n\n#| Mostly for convenience functions like interrupt handlers\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#| Clang needs a few more functions for linking\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#| Compiler flag to set the C Standard level.\n\n#|     c89   = \"ANSI\" C\n\n#|     gnu89 = c89 plus GCC extensions\n\n#|     c99   = ISO C99 standard (not yet fully implemented)\n\n#|     gnu99 = c99 plus GCC extensions\n\n#|     gnu11 = c11 plus GCC extensions\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Staying with gnu99 for compatibility with older compilers\n",
        "Line" : 76,
        "CharPositionInLine" : 30
      },
      "10" : {
        "Text" : "#| Warning Options\n\n#|  -Wall...:     warning level\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#| Tuning Options\n\n#|  -f...:        tuning, see GCC manual\n\n#| NOTE: -fshort-wchar is specified to allow USB strings be passed conveniently\n\n#| Clang Compiler\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Set compiler utilities for clang on macOS\n\n# Requires homebrew binutils\n",
        "Line" : 95,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "#| GCC Compiler\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#| Enabling profiling tools\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# XXX (HaaTa): asan has been useful, tsan isn't useful (no pthreads), usan hasn't shown anything\n",
        "Line" : 115,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "#| Enable color output with Ninja\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "## Clang Compiler\n",
        "Line" : 122,
        "CharPositionInLine" : 1
      },
      "18" : {
        "Text" : "## GCC Compiler\n",
        "Line" : 125,
        "CharPositionInLine" : 1
      },
      "19" : {
        "Text" : "#| OS Specific defines\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#| Compiler Flags\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#| Linker Flags\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#| Lss Flags\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "Lib/CMake/initialize.cmake" : {
      "ObjectId" : "facc50b396897f97d3d0dd644a292f436452be1a",
      "LastModified" : "2019-02-27T22:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMAKE Kiibohd Controller Initialization |###\n\n#\n\n# Written by Jacob Alexander in 2011-2018 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#| Windows / Cygwin Compatibility options\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#| Prevent In-Source Builds\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n# Detect Compiling System Information\n\n#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#| CPU Type\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#| Detect OS\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "###\n\n# Compiler Lookup\n\n#\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#| avr match\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#| arm match\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#| Host compiler match\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#| Invalid CHIP\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#| Override Compiler\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#| Results of Compiler Lookup\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#| Compiler Selection Record\n\n#|  This is used to check if the chip target has changed (a complete cmake reset is needed)\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Detect case if a full cmake reset is required\n",
        "Line" : 91,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "#| Load the compiler family specific configurations\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#| Binutils not set by CMake\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "Lib/CMake/kinetis.cmake" : {
      "ObjectId" : "e0ddd2a10097b5a91a4fdca9fa93e99e09b768cc",
      "LastModified" : "2019-02-27T22:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMAKE Kiibohd Controller |###\n\n#\n\n# Jacob Alexander 2011-2017\n\n# Due to this file's usefulness:\n\n#\n\n# Released into the Public Domain\n\n#\n\n# Kinetis ARM CMake Build Configuration\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#| Chip Name (Linker)\n\n#|\n\n#| \"mk20dx128vlf5\"    # McHCK / Kiibohd-dfu\n\n#| \"mk20dx128vlh7\"    # Kiibohd-dfu\n\n#| \"mk20dx256vlh7\"    # Kiibohd-dfu\n\n#| \"mk22fx512avlh12\"  # Kiibohd-dfu\n\n#|\n\n#| \"mk20dx128\"        # Teensy   3.0\n\n#| \"mk20dx256\"        # Teensy   3.1/3.2\n\n#| \"mk64fx512\"        # Teensy   3.5\n\n#| \"mk66fx1m0\"        # Teensy   3.6\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#| Chip Size and CPU Frequency Database\n\n#| Processor frequency.\n\n#|   Normally the first thing your program should do is set the clock prescaler,\n\n#|   so your program will run at the correct speed.  You should also set this\n\n#|   variable to same clock speed.  The _delay_ms() macro uses this, and many\n\n#|   examples use this variable to calculate timings.  Do not add a \"UL\" here.\n\n#| MCHCK Based / Kiibohd-dfu\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#set( SIZE_FLASH 126976 ) # XXX (HaaTa) Old size, still valid for nearly all keyboards\n",
        "Line" : 34,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# For extended bootloader (8kB)\n",
        "Line" : 35,
        "CharPositionInLine" : 26
      },
      "5" : {
        "Text" : "# Bootloader has a lower flash restriction to fit inside protected area\n",
        "Line" : 40,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "#set( SIZE_FLASH 4096 ) # XXX (HaaTa) Old size\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# XXX (HaaTa) Old size\n",
        "Line" : 43,
        "CharPositionInLine" : 25
      },
      "8" : {
        "Text" : "#| Kiibohd-dfu\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# For extended bootloader (8kB)\n",
        "Line" : 49,
        "CharPositionInLine" : 26
      },
      "10" : {
        "Text" : "# Bootloader has a lower flash restriction to fit inside protected area\n",
        "Line" : 54,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "#| Kiibohd-dfu\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Bootloader has a lower flash restriction to fit inside protected area\n",
        "Line" : 67,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "#| Kiibohd-dfu\n\n# https://www.nxp.com/part/MK22FX512AVLH12\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# XXX (HaaTa) purposefully slow for now\n",
        "Line" : 77,
        "CharPositionInLine" : 25
      },
      "15" : {
        "Text" : "# Bootloader has a lower flash restriction to fit inside protected area\n",
        "Line" : 81,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "#| Teensy 3.0\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#| Teensy 3.1 / 3.2\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# XXX Also supports 72 MHz, but may requires code changes\n",
        "Line" : 98,
        "CharPositionInLine" : 25
      },
      "19" : {
        "Text" : "#| Teensy 3.5\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# XXX (HaaTa) purposefully slow for now\n",
        "Line" : 106,
        "CharPositionInLine" : 25
      },
      "21" : {
        "Text" : "#| Teensy 3.6\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# XXX (HaaTa) purposefully slow for now\n",
        "Line" : 114,
        "CharPositionInLine" : 25
      },
      "23" : {
        "Text" : "#| Unknown ARM\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#| Chip Base Type\n\n#| Automatically chosed based on the chip name.\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#| CPU Type\n\n#| You _MUST_ set this to match the board you are using\n\n#| type \"make clean\" after changing this, so all files will be rebuilt\n\n#|\n\n#| \"cortex-m4\"        # Teensy   3.0, 3.1, McHCK\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 26
    },
    "Lib/CMake/kll.cmake" : {
      "ObjectId" : "b2424235150f2bfd1bdc5aec94f869ecbe60d12d",
      "LastModified" : "2019-04-04T05:58:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMAKE Kiibohd Controller KLL Configurator |###\n\n#\n\n# Written by Jacob Alexander in 2014-2019 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Check if KLL compiler is needed\n\n#\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Python 3 is required for kll\n\n# Check disabled for Win32 as it can't detect version correctly (we don't use Python directly through CMake anyways)\n\n#\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Required on systems where python is 2, not 3\n",
        "Line" : 29,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "###\n\n# KLL Detection\n\n# Check for KLL in this order\n\n# 1) If KLL_EXECUTABLE is set\n\n# 2) If kll directory is present, check for kll/kll or kll/kll/kll\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "### XXX XXX XXX - Remember to update Pipfile as well when you change the version! ###\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# 1) Check for environment variable\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# 2) Check for local copy of kll compiler\n",
        "Line" : 50,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# 3) Use pip kll\n",
        "Line" : 59,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# Determine if GITHUB_APIKEY was set, and apply it to the KLL compiler environment if it is\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Make sure kll is a high enough version\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Check KLL_MIN_VERSION\n",
        "Line" : 89,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# Retrieve installation path for kll, needed find the default layouts\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Retrieve cache path for layouts\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "###\n\n# Prepare KLL layout arguments\n\n#\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#| KLL_DEPENDS is used to build a dependency tree for kll.py, this way when files are changed, kll.py gets re-run\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#| Add each of the detected capabilities.kll\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#| If this is a HostBuild, we're overriding the BaseMap directory to the original module\n\n#| If set BaseMap cannot be found, use default map\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Change spaces to semicolons\n",
        "Line" : 142,
        "CharPositionInLine" : 47
      },
      "19" : {
        "Text" : "# Only check the Scan Module for BaseMap .kll files, default to scancode_map.kll or defaultMap.kll\n",
        "Line" : 144,
        "CharPositionInLine" : 1
      },
      "20" : {
        "Text" : "# Prepend --base flag if there are BaseMap args\n",
        "Line" : 161,
        "CharPositionInLine" : 1
      },
      "21" : {
        "Text" : "#| Configure DefaultMap if specified\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Change spaces to semicolons\n",
        "Line" : 167,
        "CharPositionInLine" : 51
      },
      "23" : {
        "Text" : "# Check if kll file is in build directory, otherwise default to layout directory\n",
        "Line" : 169,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Prepend --default flag if there are DefaultMap args\n",
        "Line" : 185,
        "CharPositionInLine" : 1
      },
      "25" : {
        "Text" : "#| Configure PartialMaps if specified\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# For each partial layer\n",
        "Line" : 191,
        "CharPositionInLine" : 1
      },
      "27" : {
        "Text" : "# Combine each layer\n",
        "Line" : 195,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# Change spaces to semicolons\n",
        "Line" : 196,
        "CharPositionInLine" : 45
      },
      "29" : {
        "Text" : "# Check if kll file is in build directory, otherwise default to layout directory\n",
        "Line" : 198,
        "CharPositionInLine" : 3
      },
      "30" : {
        "Text" : "#| Print list of layout sources used\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "###\n\n# Run KLL Compiler\n\n#\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#| KLL Options\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#| KLL Configurator Options\n\n#|\n\n#| Applied when running a compilation using KiiConf\n\n#|\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Needs to be here to hide warning about CONFIGURATOR\n",
        "Line" : 245,
        "CharPositionInLine" : 32
      },
      "35" : {
        "Text" : "#| KLL Cmd\n",
        "Line" : 251,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#| KLL Regen Convenience Target\n",
        "Line" : 293,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#| KLL Regen Debug Target\n",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#| KLL Regen Display Target\n",
        "Line" : 307,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#| KLL Regen Final Display Target\n",
        "Line" : 314,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#| KLL Regen Token Debug\n",
        "Line" : 321,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "#| KLL Regen Parser Debug\n",
        "Line" : 328,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "#| Append generated file to required sources so it becomes a dependency in the main build\n",
        "Line" : 335,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# PartialMap\n",
        "Line" : 341,
        "CharPositionInLine" : 9
      },
      "CommentCount" : 44
    },
    "Lib/CMake/modules.cmake" : {
      "ObjectId" : "5c88b30a972598618ee84598ea51b97cde95e93d",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMAKE Kiibohd Controller Source Configurator |###\n\n#\n\n# Written by Jacob Alexander in 2011-2017 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# CMake Custom Modules Path\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Host Build Mode (Override ScanModule and OutputModules)\n\n# Or Normal Path Setup\n\n#\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#| Normal Path Setup\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#| Top-level directory adjustment\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "###\n\n# Module Check Function\n\n#\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Module found, no need to scan further\n",
        "Line" : 48,
        "CharPositionInLine" : 3
      },
      "7" : {
        "Text" : "###\n\n# Module Processing\n\n#\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#| Go through lists of sources and append paths\n\n#| Usage:\n\n#|  PathPrepend( OutputListOfSources <Prepend Path> <InputListOfSources> )\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Loop through items\n",
        "Line" : 68,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# If the leading character is a / treat as an absolute path\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Check if a Windows Drive path\n",
        "Line" : 76,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Otherwise just set the path\n",
        "Line" : 80,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Finalize by writing the new list back over the old one\n",
        "Line" : 86,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "###\n\n# Add Module Macro\n\n#\n\n# Optional Arg 1: Main Module Check, set to True/1 if adding a main module\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Module path\n",
        "Line" : 98,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "# Include setup.cmake file\n",
        "Line" : 102,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "# Check if this is a main module add\n",
        "Line" : 105,
        "CharPositionInLine" : 1
      },
      "18" : {
        "Text" : "# Make sure this isn't a submodule\n",
        "Line" : 107,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# PathPrepend to give proper paths to each of the source files\n",
        "Line" : 115,
        "CharPositionInLine" : 1
      },
      "20" : {
        "Text" : "# Check the current scope to see if a sub-module added some source files\n\n# Append each of the sources to each type of module srcs list\n",
        "Line" : 118,
        "CharPositionInLine" : 1
      },
      "21" : {
        "Text" : "# Add .h files\n",
        "Line" : 122,
        "CharPositionInLine" : 1
      },
      "22" : {
        "Text" : "# Check module compatibility\n\n# Ignore if overriding the compiler family\n",
        "Line" : 125,
        "CharPositionInLine" : 1
      },
      "23" : {
        "Text" : "# Check if this is a main module add\n",
        "Line" : 131,
        "CharPositionInLine" : 1
      },
      "24" : {
        "Text" : "# Display detected source files\n",
        "Line" : 133,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Check for any capabilities.kll files in the Module\n",
        "Line" : 140,
        "CharPositionInLine" : 1
      },
      "26" : {
        "Text" : "# Add the kll file and any submodule kll files to the running list\n",
        "Line" : 143,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# Finally, add the sources and kll files to the parent scope (i.e. return)\n",
        "Line" : 148,
        "CharPositionInLine" : 1
      },
      "28" : {
        "Text" : "#| Add main modules\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "###\n\n# CMake Build Env Checking\n\n#\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#| Uses CMake variables to include as defines\n\n#| Primarily for USB configuration\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "###\n\n# Source Defines\n\n#\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#| Directories to include by default\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "###\n\n# ctag Generation\n\n#\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Optional\n",
        "Line" : 204,
        "CharPositionInLine" : 23
      },
      "35" : {
        "Text" : "# Populate list of directories for ctags to parse\n\n# NOTE: Doesn't support dots in the folder names...\n",
        "Line" : 207,
        "CharPositionInLine" : 1
      },
      "36" : {
        "Text" : "# Generate the ctags\n",
        "Line" : 217,
        "CharPositionInLine" : 1
      },
      "37" : {
        "Text" : "###\n\n# Create compile_commands.json (Useful for language servers as a ctags alternative)\n\n#\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 38
    },
    "Lib/CMake/nrf5.cmake" : {
      "ObjectId" : "93a74b069910ca2ba349094d3aee6d0ca7f9b86f",
      "LastModified" : "2019-02-27T22:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMAKE Kiibohd Controller |###\n\n#\n\n# Jacob Alexander 2018\n\n# Due to this file's usefulness:\n\n#\n\n# Released into the Public Domain\n\n#\n\n# nRF BLE ARM CMake Build Configuration\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#| Chip Name (Linker)\n\n#|\n\n#| \"nrf52810_QCAA\" # 32-pin Kiibohd-dfu\n\n#| \"nrf52810_QFAA\" # 48-pin Kiibohd-dfu\n\n#| \"nrf52832_QFAA\" # 48-pin Kiibohd-dfu\n\n#| \"nrf52832_QFAB\" # 48-pin Kiibohd-dfu\n\n#| \"nrf52832_CIAA\" # 50-pin Kiibohd-dfu\n\n#| \"nrf52840_QIAA\" # 73-pin Kiibohd-dfu\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#| Chip Size and CPU Frequency Database\n\n#| Processor frequency.\n\n#|   Normally the first thing your program should do is set the clock prescaler,\n\n#|   so your program will run at the correct speed.  You should also set this\n\n#|   variable to same clock speed.  The _delay_ms() macro uses this, and many\n\n#|   examples use this variable to calculate timings.  Do not add a \"UL\" here.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#| Kiibohd-dfu\n\n#| https://www.nordicsemi.com/eng/Products/nRF52810\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Bootloader has a lower flash restriction to fit inside protected area\n",
        "Line" : 40,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "#set( SIZE_FLASH 8192 ) # XXX (HaaTa) Size must be decided\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#| Kiibohd-dfu\n\n#| https://www.nordicsemi.com/eng/Products/Bluetooth-low-energy/nRF52832\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Bootloader has a lower flash restriction to fit inside protected area\n",
        "Line" : 56,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "#set( SIZE_FLASH 8192 ) # XXX (HaaTa) Size must be decided\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#| Kiibohd-dfu\n\n#| https://www.nordicsemi.com/eng/Products/Bluetooth-low-energy/nRF52832\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Bootloader has a lower flash restriction to fit inside protected area\n",
        "Line" : 72,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "#set( SIZE_FLASH 8192 ) # XXX (HaaTa) Size must be decided\n",
        "Line" : 74,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "#| Kiibohd-dfu\n\n#| https://www.nordicsemi.com/eng/Products/nRF52840\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Bootloader has a lower flash restriction to fit inside protected area\n",
        "Line" : 88,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "#set( SIZE_FLASH 8192 ) # XXX (HaaTa) Size must be decided\n",
        "Line" : 90,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "#| Unknown ARM\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#| CPU Type\n\n#| You _MUST_ set this to match the board you are using\n\n#| type \"make clean\" after changing this, so all files will be rebuilt\n\n#|\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "Lib/CMake/sam.cmake" : {
      "ObjectId" : "c58b3ccd5c3ec3a85d9786a8182761fc5295f486",
      "LastModified" : "2019-02-27T22:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMAKE Kiibohd Controller |###\n\n#\n\n# Jacob Alexander 2011-2018\n\n# Due to this file's usefulness:\n\n#\n\n# Released into the Public Domain\n\n#\n\n# SAM ARM CMake Build Configuration\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#| Chip Name (Linker)\n\n#|\n\n#| \"sam4s2a\"   #  48-pin Kiibohd-dfu\n\n#| \"sam4s2b\"   #  64-pin Kiibohd-dfu\n\n#| \"sam4s2c\"   # 100-pin Kiibohd-dfu\n\n#| \"sam4s4a\"   #  48-pin Kiibohd-dfu\n\n#| \"sam4s4b\"   #  64-pin Kiibohd-dfu\n\n#| \"sam4s4c\"   # 100-pin Kiibohd-dfu\n\n#| \"sam4s8b\"   #  64-pin Kiibohd-dfu\n\n#| \"sam4s8c\"   # 100-pin Kiibohd-dfu\n\n#| \"sam4s16b\"  #  64-pin Kiibohd-dfu\n\n#| \"sam4s16c\"  # 100-pin Kiibohd-dfu\n\n#| \"sam4sa16b\" #  64-pin Kiibohd-dfu\n\n#| \"sam4sa16c\" # 100-pin Kiibohd-dfu\n\n#| \"sam4sd16b\" #  64-pin Kiibohd-dfu\n\n#| \"sam4sd16c\" # 100-pin Kiibohd-dfu\n\n#| \"sam4sd32b\" #  64-pin Kiibohd-dfu\n\n#| \"sam4sd32c\" # 100-pin Kiibohd-dfu\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#| Chip Size and CPU Frequency Database\n\n#| Processor frequency.\n\n#|   Normally the first thing your program should do is set the clock prescaler,\n\n#|   so your program will run at the correct speed.  You should also set this\n\n#|   variable to same clock speed.  The _delay_ms() macro uses this, and many\n\n#|   examples use this variable to calculate timings.  Do not add a \"UL\" here.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#| Kiibohd-dfu\n\n# http://www.microchip.com/wwwproducts/en/ATSAM4S2A\n\n# http://www.microchip.com/wwwproducts/en/ATSAM4S2B\n\n# http://www.microchip.com/wwwproducts/en/ATSAM4S2C\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# 16kB bootloader + 8kB nvstorage (131072 bytes)\n",
        "Line" : 45,
        "CharPositionInLine" : 27
      },
      "5" : {
        "Text" : "# Bootloader has a lower flash restriction to fit inside protected area\n",
        "Line" : 52,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "#| Kiibohd-dfu\n\n# http://www.microchip.com/wwwproducts/en/ATSAM4S4A\n\n# http://www.microchip.com/wwwproducts/en/ATSAM4S4B\n\n# http://www.microchip.com/wwwproducts/en/ATSAM4S4C\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# 16kB bootloader + 8kB nvstorage (262144 bytes)\n",
        "Line" : 63,
        "CharPositionInLine" : 27
      },
      "8" : {
        "Text" : "# Bootloader has a lower flash restriction to fit inside protected area\n",
        "Line" : 70,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "#| Kiibohd-dfu\n\n# http://www.microchip.com/wwwproducts/en/ATSAM4S8B\n\n# http://www.microchip.com/wwwproducts/en/ATSAM4S8C\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# 16kB bootloader + 8kB nvstorage (524288 bytes)\n",
        "Line" : 81,
        "CharPositionInLine" : 27
      },
      "11" : {
        "Text" : "# Bootloader has a lower flash restriction to fit inside protected area\n",
        "Line" : 88,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "#| Kiibohd-dfu\n\n# http://www.microchip.com/wwwproducts/en/ATSAM4S16B\n\n# http://www.microchip.com/wwwproducts/en/ATSAM4S16C\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# 16kB bootloader + 8kB nvstorage (1048576 bytes)\n",
        "Line" : 98,
        "CharPositionInLine" : 27
      },
      "14" : {
        "Text" : "# Bootloader has a lower flash restriction to fit inside protected area\n",
        "Line" : 105,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "#| Kiibohd-dfu\n\n# http://www.microchip.com/wwwproducts/en/ATSAM4SA16B\n\n# http://www.microchip.com/wwwproducts/en/ATSAM4SA16C\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# 16kB bootloader + 8kB nvstorage (1048576 bytes)\n",
        "Line" : 115,
        "CharPositionInLine" : 27
      },
      "17" : {
        "Text" : "# Bootloader has a lower flash restriction to fit inside protected area\n",
        "Line" : 122,
        "CharPositionInLine" : 1
      },
      "18" : {
        "Text" : "#| Kiibohd-dfu\n\n# http://www.microchip.com/wwwproducts/en/ATSAM4SD16B\n\n# http://www.microchip.com/wwwproducts/en/ATSAM4SD16C\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# 16kB bootloader + 8kB nvstorage (1048576 bytes)\n",
        "Line" : 132,
        "CharPositionInLine" : 27
      },
      "20" : {
        "Text" : "# Bootloader has a lower flash restriction to fit inside protected area\n",
        "Line" : 139,
        "CharPositionInLine" : 1
      },
      "21" : {
        "Text" : "#| Kiibohd-dfu\n\n# http://www.microchip.com/wwwproducts/en/ATSAM4SD32B\n\n# http://www.microchip.com/wwwproducts/en/ATSAM4SD32C\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# 16kB bootloader + 8kB nvstorage (2097152 bytes)\n",
        "Line" : 149,
        "CharPositionInLine" : 27
      },
      "23" : {
        "Text" : "# Bootloader has a lower flash restriction to fit inside protected area\n",
        "Line" : 156,
        "CharPositionInLine" : 1
      },
      "24" : {
        "Text" : "#| Unknown ARM\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#| CPU Type\n\n#| You _MUST_ set this to match the board you are using\n\n#| type \"make clean\" after changing this, so all files will be rebuilt\n\n#|\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 26
    },
    "LoadFile/CMakeLists.txt" : {
      "ObjectId" : "7b5ace25d33afd8b7e05b0859b3ac73ce89d1e47",
      "LastModified" : "2019-02-27T22:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMAKE teensy-loader-cli |###\n\n#\n\n# Jacob Alexander 2014\n\n# Written to replace the pjrc's kludey Makefiles\n\n#  (that require hand edits for different platforms)\n\n#\n\n# Released into the Public Domain\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#| Windows / Cygwin Compatibility options\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Project Description\n\n#\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#| Project\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#| Target Name (output name)\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#| General Settings\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "###\n\n# Source Defines\n\n#\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#| Sources\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "###\n\n# Platform Setup\n\n#\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Use local find scripts\n",
        "Line" : 46,
        "CharPositionInLine" : 53
      },
      "10" : {
        "Text" : "#| Linux/Windows - libusb\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Find libusb (not 1.0)\n",
        "Line" : 50,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# Defines\n",
        "Line" : 53,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# Include directories\n",
        "Line" : 56,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# Libraries\n",
        "Line" : 59,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "#| Mac OS X\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Defines - XXX What is SDK?\n",
        "Line" : 66,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "#| BSD - NetBSD and OpenBSD\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Defines\n",
        "Line" : 73,
        "CharPositionInLine" : 1
      },
      "19" : {
        "Text" : "#| Unregonized OS\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "###\n\n# Defines\n\n#\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#| Default CFLAGS\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "###\n\n# Includes\n\n#\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#| Linux\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "###\n\n# Build Targets\n\n#\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#| Create the executable\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#| Link executable\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 27
    },
    "LoadFile/FindLibUSB-1.0.cmake" : {
      "ObjectId" : "2e8e522e759718b68ee914b298af0c32aa73156b",
      "LastModified" : "2019-02-27T22:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Attempts to find libusb-1.0\n\n#\n\n#  LIBUSB_FOUND - system has libusb\n\n#  LIBUSB_INCLUDE_DIRS - the libusb include directory\n\n#  LIBUSB_LIBRARIES - Link these to use libusb\n\n#  LIBUSB_DEFINITIONS - Compiler switches required for using libusb\n\n#\n\n#  Adapted from cmake-modules Google Code project\n\n#\n\n#  Copyright (c) 2006 Andreas Schneider <mail@cynapses.org>\n\n#\n\n#  (Changes for libusb) Copyright (c) 2014 Jacob Alexander <haata@kiibohd.com>\n\n#\n\n# Redistribution and use is allowed according to the terms of the New BSD license.\n\n#\n\n# CMake-Modules Project New BSD License\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright notice, this\n\n#   list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright notice,\n\n#   this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n#\n\n# * Neither the name of the CMake-Modules Project nor the names of its\n\n#   contributors may be used to endorse or promote products derived from this\n\n#   software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n\n# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\n# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\n# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\n# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\n#  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n\n# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\n# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 46,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# show the LIBUSB_INCLUDE_DIRS and LIBUSB_LIBRARIES variables only in the advanced view\n",
        "Line" : 92,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 3
    },
    "Macro/PartialMap/setup.cmake" : {
      "ObjectId" : "dc768a8f390b0644090786b576595213c0b81d24",
      "LastModified" : "2019-02-27T22:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMake Kiibohd Controller Macro Module |###\n\n#\n\n# Written by Jacob Alexander in 2014-2018 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Module C files\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Compiler Family Compatibility\n\n#\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Macro/PixelMap/setup.cmake" : {
      "ObjectId" : "b074804eb584808d7faf88a055079251cd917a39",
      "LastModified" : "2019-02-27T22:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMake Kiibohd Controller Macro Module |###\n\n#\n\n# Written by Jacob Alexander in 2016 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Required Sub-modules\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Module C files\n\n#\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n# Compiler Family Compatibility\n\n#\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Macro/buffer/setup.cmake" : {
      "ObjectId" : "4197237ec6604dd9b061ded8abb2ad07f1647b4d",
      "LastModified" : "2019-02-27T22:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMake Kiibohd Controller Macro Module |###\n\n#\n\n# Written by Jacob Alexander in 2011,2014 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Warning, this module has been deprecated\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Module C files\n\n#\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n# Module Specific Options\n\n#\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###\n\n# Compiler Family Compatibility\n\n#\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Output/HID-IO/setup.cmake" : {
      "ObjectId" : "6bad571932035e311b35dd95f4d22f27386ebfee",
      "LastModified" : "2019-02-27T22:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMake Kiibohd Controller Output Module |###\n\n#\n\n# Written by Jacob Alexander in 2017 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Sub-module flag, cannot be included stand-alone\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Module C files\n\n#\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n# Compiler Family Compatibility\n\n#\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Output/Interface/setup.cmake" : {
      "ObjectId" : "01d7caa9edbd0c73d49f959cdf8ae9ea62cc2911",
      "LastModified" : "2019-02-27T22:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMake Kiibohd Controller Output Module |###\n\n#\n\n# Written by Jacob Alexander in 2017 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Sub-module flag, cannot be included stand-alone\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Module C files\n\n#\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n# Compiler Family Compatibility\n\n#\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Output/None/setup.cmake" : {
      "ObjectId" : "4118ff434050f230fc6e62166984e8dc1a28cfc2",
      "LastModified" : "2019-02-27T22:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMake Kiibohd Controller UART Output Module |###\n\n#\n\n# Written by Jacob Alexander in 2014-2017 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Required Sub-modules\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Module C files\n\n#\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n# Compiler Family Compatibility\n\n#\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Output/SeggerRTT/setup.cmake" : {
      "ObjectId" : "48d00159ca83d1ccdd64f0658fd09f5c53139945",
      "LastModified" : "2019-02-27T22:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMake Kiibohd Controller UART Output Module |###\n\n#\n\n# Written by Rowan Decker in 2018 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Required Sub-modules\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Module C files\n\n#\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#| ARM Compiler\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###\n\n# Compiler Family Compatibility\n\n#\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Output/TestOut/setup.cmake" : {
      "ObjectId" : "65088c877674b934d87a03edd8f7ccadf2a11367",
      "LastModified" : "2019-02-27T22:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMake Kiibohd Controller Output Module |###\n\n#\n\n# Written by Jacob Alexander in 2011-2018 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Required Sub-modules\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Module C files\n\n#\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Remove duplicate output_com.c files from USB and UARTOut\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###\n\n# Compiler Family Compatibility\n\n#\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Output/UARTOut/setup.cmake" : {
      "ObjectId" : "ea55ed4853708e0c55ed320c35450c5a398e7c47",
      "LastModified" : "2019-02-27T22:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMake Kiibohd Controller UART Output Module |###\n\n#\n\n# Written by Jacob Alexander in 2014-2017 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Required Sub-modules\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Module C files\n\n#\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#| AVR Compiler\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#| ARM Compiler\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "###\n\n# Compiler Family Compatibility\n\n#\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\tavr # TODO\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Output/USB/setup.cmake" : {
      "ObjectId" : "3e2243239cdb3c3c5270e974eee92af5c5a75292",
      "LastModified" : "2019-02-27T22:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMake Kiibohd Controller Output Module |###\n\n#\n\n# Written by Jacob Alexander in 2011-2018 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Required Sub-modules\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Module C files\n\n#\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#| AVR Compiler\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#| ARM Compiler\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#| Host Mode\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "###\n\n# Compiler Family Compatibility\n\n#\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# XXX (HaaTa) USB module only supports host family used as a TestOut submodule\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "Output/USBxRTT/setup.cmake" : {
      "ObjectId" : "27888add944440e3af58b35889b27ab592c8f0bc",
      "LastModified" : "2019-02-27T22:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMake Kiibohd Controller Muxed UART and USB Output Module |###\n\n#\n\n# Written by Rowan decker in 2018 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Required Submodules\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Module C files\n\n#\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Remove duplicate output_com.c files from USB and UARTOut\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###\n\n# Compiler Family Compatibility\n\n#\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Output/USBxUART/setup.cmake" : {
      "ObjectId" : "43c89a1b0cac7eca04e5cb579a82e35dff3d5a8a",
      "LastModified" : "2019-02-27T22:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMake Kiibohd Controller Muxed UART and USB Output Module |###\n\n#\n\n# Written by Jacob Alexander in 2014-2018 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Required Submodules\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Module C files\n\n#\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Remove duplicate output_com.c files from USB and UARTOut\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###\n\n# Compiler Family Compatibility\n\n#\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#       avr # TODO\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "Scan/60v2/setup.cmake" : {
      "ObjectId" : "a2a9c0fd0a9f10bfe69fc3e767098d8b256805d4",
      "LastModified" : "2019-02-27T22:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMake Kiibohd Controller Scan Module |###\n\n#\n\n# Written by Jacob Alexander in 2014-2018 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Overrides\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Path to this module\n\n#\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n# Required Sub-modules\n\n#\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###\n\n# Module C files\n\n#\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "###\n\n# Compiler Family Compatibility\n\n#\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "Scan/Deprecated/ADCTest/setup.cmake" : {
      "ObjectId" : "729f517b90ed3ea5874ee06132e1b5af255926dc",
      "LastModified" : "2019-02-27T22:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMake Kiibohd Controller Scan Module |###\n\n#\n\n# Written by Jacob Alexander in 2014 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n# ADC/DAC example. DAC only works on microcontrollers that support it.\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Module C files\n\n#\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Module Specific Options\n\n#\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n# Compiler Family Compatibility\n\n#\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Scan/Deprecated/BETKB/setup.cmake" : {
      "ObjectId" : "447c6b8c54f3f16b38a1e7a41405dc97be016de3",
      "LastModified" : "2019-02-27T22:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMake Kiibohd Controller Scan Module |###\n\n#\n\n# Written by Jacob Alexander in 2011,2014,2016 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n# For the Burroughs/Kokusai BETKB (Burroughs Ergonomic Terminal Keyboard)\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Module C files\n\n#\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Module Specific Options\n\n#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n# Compiler Family Compatibility\n\n#\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Scan/Deprecated/BudKeypad/setup.cmake" : {
      "ObjectId" : "f0a1b33c5d498783b34662aeabdb3e18de334a23",
      "LastModified" : "2019-02-27T22:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMake Kiibohd Controller Scan Module |###\n\n#\n\n# Written by Jacob Alexander in 2011,2014 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Module C files\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#| XXX Requires the ../ due to how the paths are constructed\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n# Module Specific Options\n\n#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###\n\n# Compiler Family Compatibility\n\n#\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Scan/Deprecated/CK3/setup.cmake" : {
      "ObjectId" : "d3123888dba467126afa5766bac6652ac5f49cda",
      "LastModified" : "2019-02-27T22:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMake Kiibohd Controller Scan Module |###\n\n#\n\n# Written by Jacob Alexander in 2014-2018 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Required Submodules\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Module C files\n\n#\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n# Compiler Family Compatibility\n\n#\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Scan/Deprecated/DPH/setup.cmake" : {
      "ObjectId" : "43a3a72ef1d5777514cc77eb909a90468f80e5a7",
      "LastModified" : "2019-02-27T22:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMake Kiibohd Controller Scan Module |###\n\n#\n\n# Written by Jacob Alexander in 2013-2015 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Module C files\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Compiler Family Compatibility\n\n#\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Scan/Deprecated/EpsonQX-10/setup.cmake" : {
      "ObjectId" : "6dca53f25e6255fb4d6d54ac088f4ba6e1e9fa8a",
      "LastModified" : "2019-02-27T22:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMake Kiibohd Controller Scan Module |###\n\n#\n\n# Written by Jacob Alexander in 2011,2014 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n# For the Sony NEWS Topre Keyboard\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Module C files\n\n#\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Module Specific Options\n\n#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n# Compiler Family Compatibility\n\n#\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Scan/Deprecated/FACOM6684/setup.cmake" : {
      "ObjectId" : "92de476c6fb6977a8ee5eabfbf40a372ba80935a",
      "LastModified" : "2019-02-27T22:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMake Kiibohd Controller Scan Module |###\n\n#\n\n# Written by Jacob Alexander in 2013,2014 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n# For the Fujitsu FACOM 6684KC3 Supercomputer Terminal Keyboard (M-780, M-1800, etc.)\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Module C files\n\n#\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Module Specific Options\n\n#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n# Compiler Family Compatibility\n\n#\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Scan/Deprecated/HP150/setup.cmake" : {
      "ObjectId" : "d27944b3b77bf965888ba04f6a7f0828409d3bc1",
      "LastModified" : "2019-02-27T22:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMake Kiibohd Controller Scan Module |###\n\n#\n\n# Written by Jacob Alexander in 2011,2014 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n# For the HP150 Keyboard (Fujitsu Leaf Spring)\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Module C files\n\n#\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Module Specific Options\n\n#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n# Compiler Family Compatibility\n\n#\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Scan/Deprecated/HeathZenith/setup.cmake" : {
      "ObjectId" : "f0a1b33c5d498783b34662aeabdb3e18de334a23",
      "LastModified" : "2019-02-27T22:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMake Kiibohd Controller Scan Module |###\n\n#\n\n# Written by Jacob Alexander in 2011,2014 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Module C files\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#| XXX Requires the ../ due to how the paths are constructed\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n# Module Specific Options\n\n#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###\n\n# Compiler Family Compatibility\n\n#\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Scan/Deprecated/IBMConvertible/setup.cmake" : {
      "ObjectId" : "62fdc91b99e62c01edea3181aed8cbf1122708d6",
      "LastModified" : "2019-02-27T22:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMake Kiibohd Controller Scan Module |###\n\n#\n\n# Written by Jacob Alexander in 2012,2014 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Module C files\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#| XXX Requires the ../ due to how the paths are constructed\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n# Module Specific Options\n\n#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###\n\n# Compiler Family Compatibility\n\n#\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Scan/Deprecated/Kaypro1/setup.cmake" : {
      "ObjectId" : "c9abede7fcad632862911de0f4e23e68df46ee33",
      "LastModified" : "2019-02-27T22:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMake Kiibohd Controller Scan Module |###\n\n#\n\n# Written by Jacob Alexander in 2011,2014 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Module C files\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Module Specific Options\n\n#\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n# Compiler Family Compatibility\n\n#\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Scan/Deprecated/MBC-55X/setup.cmake" : {
      "ObjectId" : "e90a6484118c9d77b5fb34f5b898f8fcbbbdb3c6",
      "LastModified" : "2019-02-27T22:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMake Kiibohd Controller Scan Module |###\n\n#\n\n# Written by Jacob Alexander in 2013,2014,2016 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n# For the Sanyo MBC-55X Series of keyboards\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Module C files\n\n#\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Module Specific Options\n\n#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n# Compiler Family Compatibility\n\n#\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Scan/Deprecated/MBC1000/setup.cmake" : {
      "ObjectId" : "ab09159214513423273e99a6130622a4ed818f94",
      "LastModified" : "2019-02-27T22:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMake Kiibohd Controller Scan Module |###\n\n#\n\n# Written by Jacob Alexander in 2014 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n# For Sanyo MBC-1000 keyboards\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Module C files\n\n#\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Module Specific Options\n\n#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n# Compiler Family Compatibility\n\n#\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Scan/Deprecated/MicroSwitch8304/setup.cmake" : {
      "ObjectId" : "8b3c607826599ee5984970a6de78fadfc31c91d5",
      "LastModified" : "2019-02-27T22:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMake Kiibohd Controller Scan Module |###\n\n#\n\n# Written by Jacob Alexander in 2011,2014 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n# For the Micro Switch 8304 Keyboard (No Branding)\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Module C files\n\n#\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Module Specific Options\n\n#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n# Compiler Family Compatibility\n\n#\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Scan/Deprecated/SKM67001/setup.cmake" : {
      "ObjectId" : "e8ac233795c79996ce9bbaa3ccc18851564bb5e2",
      "LastModified" : "2019-02-27T22:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMake Kiibohd Controller Scan Module |###\n\n#\n\n# Written by Jacob Alexander in 2012,2014 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Module C files\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#| XXX Requires the ../ due to how the paths are constructed\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n# Module Specific Options\n\n#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###\n\n# Compiler Family Compatibility\n\n#\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Scan/Deprecated/SonyNEWS/setup.cmake" : {
      "ObjectId" : "6dca53f25e6255fb4d6d54ac088f4ba6e1e9fa8a",
      "LastModified" : "2019-02-27T22:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMake Kiibohd Controller Scan Module |###\n\n#\n\n# Written by Jacob Alexander in 2011,2014 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n# For the Sony NEWS Topre Keyboard\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Module C files\n\n#\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Module Specific Options\n\n#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n# Compiler Family Compatibility\n\n#\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Scan/Deprecated/SonyOA-S3400/setup.cmake" : {
      "ObjectId" : "ed4b623ffe7e1e502d9d0afa97e32b0beba20768",
      "LastModified" : "2019-02-27T22:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMake Kiibohd Controller Scan Module |###\n\n#\n\n# Written by Jacob Alexander in 2012,2014 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n# For the Sony Word Processor OA-S3400 keyboard\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Module C files\n\n#\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Module Specific Options\n\n#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n# Compiler Family Compatibility\n\n#\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Scan/Deprecated/Tandy1000/setup.cmake" : {
      "ObjectId" : "c9abede7fcad632862911de0f4e23e68df46ee33",
      "LastModified" : "2019-02-27T22:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMake Kiibohd Controller Scan Module |###\n\n#\n\n# Written by Jacob Alexander in 2011,2014 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Module C files\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Module Specific Options\n\n#\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n# Compiler Family Compatibility\n\n#\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Scan/Deprecated/UnivacF3W9/setup.cmake" : {
      "ObjectId" : "cf88eb7d690c212528a44ca15ef4784eac8edc53",
      "LastModified" : "2019-02-27T22:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMake Kiibohd Controller Scan Module |###\n\n#\n\n# Written by Jacob Alexander in 2012,2014 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Module C files\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Module Specific Options\n\n#\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n# Compiler Family Compatibility\n\n#\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Scan/Deprecated/matrix/setup.cmake" : {
      "ObjectId" : "0c1854dd84a813e2205c42064461496fb48cadc1",
      "LastModified" : "2019-02-27T22:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMake Kiibohd Controller Scan Module |###\n\n#\n\n# Written by Jacob Alexander in 2011,2014 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Warning, that this module is not meant to be built stand-alone\n\n#\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Module C files\n\n#\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n# Module Specific Options\n\n#\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###\n\n# Compiler Family Compatibility\n\n#\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Scan/Devices/Deprecated/MatrixARM/setup.cmake" : {
      "ObjectId" : "863a86fb488f3f12e88bc5a0bcd4ef8cccf81139",
      "LastModified" : "2019-02-27T22:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMake Kiibohd Controller Scan Module |###\n\n#\n\n# Written by Jacob Alexander in 2014-2017 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Sub-module flag, cannot be included stand-alone\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Module C files\n\n#\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n# Header file dependency tracking\n\n#\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###\n\n# Compiler Family Compatibility\n\n#\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Scan/Devices/ISSILed/setup.cmake" : {
      "ObjectId" : "ecd88d9df97072ee25434ffb1f9c4ebc003a78d0",
      "LastModified" : "2019-02-27T22:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMake Kiibohd Controller Scan Module |###\n\n#\n\n# Written by Jacob Alexander in 2014-2015 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Sub-module flag, cannot be included stand-alone\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Module C files\n\n#\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n# Compiler Family Compatibility\n\n#\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Scan/Devices/MatrixARMPeriodic/setup.cmake" : {
      "ObjectId" : "0f5e82aae9881be2a843d07350c72497dfbac1b8",
      "LastModified" : "2019-02-27T22:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMake Kiibohd Controller Scan Module |###\n\n#\n\n# Written by Jacob Alexander in 2014-2018 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Sub-module flag, cannot be included stand-alone\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Module C files\n\n#\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n# Compiler Family Compatibility\n\n#\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Scan/Devices/PortSwap/setup.cmake" : {
      "ObjectId" : "035377ae751066654f2074c6035c79f48a96e23d",
      "LastModified" : "2019-02-27T22:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMake Kiibohd Controller Scan Module |###\n\n#\n\n# Written by Jacob Alexander in 2015 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Sub-module flag, cannot be included stand-alone\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Module C files\n\n#\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n# Compiler Family Compatibility\n\n#\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Scan/Devices/STLcd/setup.cmake" : {
      "ObjectId" : "9fd1f1ba5a5af228d26945f126f5df47fa47e76a",
      "LastModified" : "2019-02-27T22:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMake Kiibohd Controller Scan Module |###\n\n#\n\n# Written by Jacob Alexander in 2014-2015 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Sub-module flag, cannot be included stand-alone\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Module C files\n\n#\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n# Compiler Family Compatibility\n\n#\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Scan/Devices/Storage/setup.cmake" : {
      "ObjectId" : "b02d5fc61b62606187653d7b7d8927a2c34f9945",
      "LastModified" : "2019-02-27T22:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMake Kiibohd Controller Scan Module |###\n\n#\n\n# Written by Rowan Decker in 2018 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Sub-module flag, cannot be included stand-alone\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Module C files\n\n#\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n# Compiler Family Compatibility\n\n#\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Scan/Devices/UARTConnect/setup.cmake" : {
      "ObjectId" : "2905aa6c73cbcc919ead45af5cef845077f359b1",
      "LastModified" : "2019-02-27T22:31:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMake Kiibohd Controller Scan Module |###\n\n#\n\n# Written by Jacob Alexander in 2014-2015 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Sub-module flag, cannot be included stand-alone\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Module C files\n\n#\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n# Compiler Family Compatibility\n\n#\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Scan/Gemini_Dusk_Dawn/setup.cmake" : {
      "ObjectId" : "92da6e46c629ce900f078efb47b878bed283dabb",
      "LastModified" : "2019-03-27T01:15:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMake Kiibohd Controller Scan Module |###\n\n#\n\n# Written by Jacob Alexander in 2015-2018 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Overrides\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Required Sub-modules\n\n#\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n# Module C files\n\n#\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###\n\n# Compiler Family Compatibility\n\n#\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Scan/ICPad/setup.cmake" : {
      "ObjectId" : "5696ccd257947567af66421596eb6d0e754f721d",
      "LastModified" : "2019-03-27T01:15:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMake Kiibohd Controller Scan Module |###\n\n#\n\n# Written by Jacob Alexander in 2015 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Required Sub-modules\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Module C files\n\n#\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n# Compiler Family Compatibility\n\n#\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Scan/Infinity_60/setup.cmake" : {
      "ObjectId" : "4968d09b322c62cceabc36d6c8f39a0eeab3a898",
      "LastModified" : "2019-03-27T01:15:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMake Kiibohd Controller Scan Module |###\n\n#\n\n# Written by Jacob Alexander in 2014-2018 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Overrides\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Required Submodules\n\n#\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n# Module C files\n\n#\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###\n\n# Compiler Family Compatibility\n\n#\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Scan/Infinity_60_LED/setup.cmake" : {
      "ObjectId" : "9462818c9e9089c92195cda713cb7ac7a493b648",
      "LastModified" : "2019-03-27T01:15:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMake Kiibohd Controller Scan Module |###\n\n#\n\n# Written by Jacob Alexander in 2014-2018 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Overrides\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Required Submodules\n\n#\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n# Module C files\n\n#\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###\n\n# Compiler Family Compatibility\n\n#\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Scan/Infinity_Ergodox/setup.cmake" : {
      "ObjectId" : "30d51c384e6892343b4e4cbefd2247dda61baaf4",
      "LastModified" : "2019-03-27T01:15:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMake Kiibohd Controller Scan Module |###\n\n#\n\n# Written by Jacob Alexander in 2014-2018 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Overrides\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Required Sub-modules\n\n#\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n# Module C files\n\n#\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###\n\n# Compiler Family Compatibility\n\n#\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Scan/K-Type/setup.cmake" : {
      "ObjectId" : "932db22dae7a0a2fc00b7b34415e5e4c3fad4f6d",
      "LastModified" : "2019-03-27T01:15:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMake Kiibohd Controller Scan Module |###\n\n#\n\n# Written by Jacob Alexander in 2015-2018 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Overrides\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Required Sub-modules\n\n#\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n# Module C files\n\n#\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###\n\n# Compiler Family Compatibility\n\n#\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Scan/Kira/setup.cmake" : {
      "ObjectId" : "788dab79e1b2c61c4c4ecf821573cb9c64af28af",
      "LastModified" : "2019-03-27T01:15:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMake Kiibohd Controller Scan Module |###\n\n#\n\n# Written by Jacob Alexander in 2015-2018 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Overrides\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Required Sub-modules\n\n#\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n# Module C files\n\n#\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###\n\n# Compiler Family Compatibility\n\n#\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Scan/None/setup.cmake" : {
      "ObjectId" : "13053816e22ceb250b8eee115adc2ed83ac67cf9",
      "LastModified" : "2019-03-27T01:15:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMake Kiibohd Controller Scan Module |###\n\n#\n\n# Written by Jacob Alexander in 2014-2017 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Module C files\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Compiler Family Compatibility\n\n#\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Scan/PS2/setup.cmake" : {
      "ObjectId" : "f992b84e550b405fca4b18a6259c42ac06cea401",
      "LastModified" : "2019-03-27T01:15:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMake Kiibohd Controller Scan Module |###\n\n#\n\n# Written by Jacob Alexander in 2015 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Module C files\n\n#\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Compiler Family Compatibility\n\n#\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Scan/TestIn/setup.cmake" : {
      "ObjectId" : "449f67d9b628a1188589f75d3e24b9090cae2072",
      "LastModified" : "2019-03-27T01:15:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMake Kiibohd Controller Scan Module |###\n\n#\n\n# Written by Jacob Alexander in 2016-2018 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Required Submodules\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Module C files\n\n#\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n# Compiler Family Compatibility\n\n#\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###\n\n# Configure host side Python scripts\n\n#\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "###\n\n# Test cases\n\n#\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "Scan/WhiteFox.sam4s/setup.cmake" : {
      "ObjectId" : "a2a9c0fd0a9f10bfe69fc3e767098d8b256805d4",
      "LastModified" : "2019-03-27T01:15:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMake Kiibohd Controller Scan Module |###\n\n#\n\n# Written by Jacob Alexander in 2014-2018 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Overrides\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Path to this module\n\n#\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n# Required Sub-modules\n\n#\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###\n\n# Module C files\n\n#\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "###\n\n# Compiler Family Compatibility\n\n#\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "Scan/WhiteFox/setup.cmake" : {
      "ObjectId" : "29f91843bb14773f8a2256088a1733675ade8389",
      "LastModified" : "2019-03-27T01:15:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###| CMake Kiibohd Controller Scan Module |###\n\n#\n\n# Written by Jacob Alexander in 2014-2018 for the Kiibohd Controller\n\n#\n\n# Released into the Public Domain\n\n#\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Overrides\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Required Sub-modules\n\n#\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n# Module C files\n\n#\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###\n\n# Compiler Family Compatibility\n\n#\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    }
  },
  "FileTypes" : {
    "CMAKE" : 76
  },
  "ElapsedTime" : 2132
}