{
  "Repository" : "13041846",
  "Revision" : "HEAD",
  "ObjectId" : "1ccceda80f1c1a0489171d17dcaa6e7b18fb4c01",
  "CommitTime" : "2014-11-04T16:25:02Z",
  "Files" : {
    "build.xml" : {
      "ObjectId" : "2483ddd70b18e612f0bc309567b5fde0b2f2998f",
      "LastModified" : "2013-07-04T13:41:40Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " Location of the Selenium source.  Used to generate docs and\n       inherit the JavaDoc ",
        "Line" : 5,
        "CharPositionInLine" : 31
      },
      "1" : {
        "Text" : " Get version from Git, and output it to the VERSION file.\n       This file is later copied to other locations. ",
        "Line" : 9,
        "CharPositionInLine" : 57
      },
      "2" : {
        "Text" : " If we can't get the version from git, set a default  ",
        "Line" : 15,
        "CharPositionInLine" : 64
      },
      "3" : {
        "Text" : " Variables  ",
        "Line" : 19,
        "CharPositionInLine" : 22
      },
      "4" : {
        "Text" : "  Targets  ",
        "Line" : 26,
        "CharPositionInLine" : 21
      },
      "5" : {
        "Text" : " Get version from Git, and output it to the VERSION file.  This\n         is later copied to other locations. ",
        "Line" : 30,
        "CharPositionInLine" : 49
      },
      "6" : {
        "Text" : " If we can't get the version from Git, set a default  ",
        "Line" : 36,
        "CharPositionInLine" : 66
      },
      "7" : {
        "Text" : " What to call and where to put the JAR ",
        "Line" : 40,
        "CharPositionInLine" : 51
      },
      "8" : {
        "Text" : " Classpaths for compilation and tests ",
        "Line" : 44,
        "CharPositionInLine" : 50
      },
      "9" : {
        "Text" : " Delete the bin and pkg dirs ",
        "Line" : 56,
        "CharPositionInLine" : 39
      },
      "10" : {
        "Text" : " Compile all classes after cleaning ",
        "Line" : 71,
        "CharPositionInLine" : 46
      },
      "11" : {
        "Text" : " Perform sonar analysis ",
        "Line" : 91,
        "CharPositionInLine" : 34
      },
      "12" : {
        "Text" : " Add the Sonar task ",
        "Line" : 93,
        "CharPositionInLine" : 32
      },
      "13" : {
        "Text" : " This sonar Ant task library can also be put in the ${ANT_HOME\\}/lib directory",
        "Line" : 96,
        "CharPositionInLine" : 92
      },
      "14" : {
        "Text" : " In such case this classpath node is no more mandatory ",
        "Line" : 97,
        "CharPositionInLine" : 69
      },
      "15" : {
        "Text" : " MYSQL ",
        "Line" : 100,
        "CharPositionInLine" : 19
      },
      "16" : {
        "Text" : " SERVER ON A REMOTE HOST ",
        "Line" : 107,
        "CharPositionInLine" : 37
      },
      "17" : {
        "Text" : " list of mandatories Sonar properties ",
        "Line" : 109,
        "CharPositionInLine" : 50
      },
      "18" : {
        "Text" : " list of optional Sonar properties ",
        "Line" : 112,
        "CharPositionInLine" : 47
      },
      "19" : {
        "Text" : " <property name=\"sonar.tests\" value=\"list of test source directories separated by a comma\" /> ",
        "Line" : 115,
        "CharPositionInLine" : 106
      },
      "20" : {
        "Text" : " Build the jar ",
        "Line" : 120,
        "CharPositionInLine" : 25
      },
      "21" : {
        "Text" : " Compile any modified classes including test classes ",
        "Line" : 137,
        "CharPositionInLine" : 63
      },
      "22" : {
        "Text" : " If the protoc property isn't set, use the default ",
        "Line" : 149,
        "CharPositionInLine" : 63
      },
      "23" : {
        "Text" : " Run all junit tests ",
        "Line" : 161,
        "CharPositionInLine" : 31
      },
      "24" : {
        "Text" : " run all of the tests ",
        "Line" : 173,
        "CharPositionInLine" : 36
      },
      "25" : {
        "Text" : " run just one file/class. Happens when -Dfile=<file> is passed ",
        "Line" : 178,
        "CharPositionInLine" : 77
      },
      "26" : {
        "Text" : " Generate the docs. This will output lots of errors and warnings, but\n       that's okay because they're (mostly) from selenium, not OperaDriver ",
        "Line" : 194,
        "CharPositionInLine" : 79
      },
      "27" : {
        "Text" : " Include all the jars except selenium, as we're getting the docs\n             straight from the source ",
        "Line" : 199,
        "CharPositionInLine" : 42
      },
      "28" : {
        "Text" : " include our source, and the selenium source so that we can inherit\n           the javadocs ",
        "Line" : 207,
        "CharPositionInLine" : 28
      },
      "29" : {
        "Text" : " only generate docs for Opera stuff, not selenium as well ",
        "Line" : 213,
        "CharPositionInLine" : 72
      },
      "30" : {
        "Text" : " Link to online selenium documentation, and the Java docs ",
        "Line" : 217,
        "CharPositionInLine" : 72
      },
      "31" : {
        "Text" : " Add the docs ",
        "Line" : 228,
        "CharPositionInLine" : 28
      },
      "32" : {
        "Text" : " add OperaDriver (source) jar to the zip ",
        "Line" : 230,
        "CharPositionInLine" : 55
      },
      "33" : {
        "Text" : " Add all the jar libs ",
        "Line" : 233,
        "CharPositionInLine" : 36
      },
      "CommentCount" : 34
    },
    "maven/pom.xml" : {
      "ObjectId" : "7bdb0fcfa78f76848850f9878262cbaa95175377",
      "LastModified" : "2013-08-23T09:44:58Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " See http://maven.apache.org/plugins/maven-antrun-plugin ",
        "Line" : 89,
        "CharPositionInLine" : 71
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "ANT" : 1,
    "MAVEN" : 1
  },
  "ElapsedTime" : 1098
}