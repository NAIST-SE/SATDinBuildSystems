{
  "Repository" : "3142852",
  "Revision" : "HEAD",
  "ObjectId" : "7337115f70ab3c0f91977bfa1c0b046c74cb7df8",
  "CommitTime" : "2019-04-12T18:12:27Z",
  "Files" : {
    "CMake/ucm.cmake" : {
      "ObjectId" : "6000563d3a5f053c8a6469b03f70f7cab2f74bb4",
      "LastModified" : "2017-09-09T20:58:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# ucm.cmake - useful cmake macros\n\n#\n\n# Copyright (c) 2016 Viktor Kirilov\n\n#\n\n# Distributed under the MIT Software License\n\n# See accompanying file LICENSE.txt or copy at\n\n# https://opensource.org/licenses/MIT\n\n#\n\n# The documentation can be found at the library's page:\n\n# https://github.com/onqtam/ucm\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# optionally include cotire - the git submodule might not be inited (or the user might have already included it)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ucm_add_flags\n\n# Adds compiler flags to CMAKE_<LANG>_FLAGS or to a specific config\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# determine to which flags to add\n",
        "Line" : 41,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# clear the old flags\n",
        "Line" : 51,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# add all the passed flags\n",
        "Line" : 61,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# ucm_set_flags\n\n# Sets the CMAKE_<LANG>_FLAGS compiler flags or for a specific config\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# ucm_add_linker_flags\n\n# Adds linker flags to CMAKE_<TYPE>_LINKER_FLAGS or to a specific config\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# clear the old flags\n",
        "Line" : 129,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# add all the passed flags\n",
        "Line" : 136,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# ucm_set_linker_flags\n\n# Sets the CMAKE_<TYPE>_LINKER_FLAGS linker flags or for a specific config\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# ucm_gather_flags\n\n# Gathers all lists of flags for printing or manipulation\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# add the main flags without a config\n",
        "Line" : 155,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# handle single config generators - like makefiles/ninja - when CMAKE_BUILD_TYPE is set\n",
        "Line" : 166,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# handle multi config generators (like msvc, xcode)\n",
        "Line" : 177,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# ucm_set_runtime\n\n# Sets the runtime (static/dynamic) for msvc/gcc\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# add/replace the flags\n\n# note that if the user has messed with the flags directly this function might fail\n\n# - for example if with MSVC and the user has removed the flags - here we just switch/replace them\n",
        "Line" : 207,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# ucm_print_flags\n\n# Prints all compiler flags for all configurations\n",
        "Line" : 243,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# ucm_count_sources\n\n# Counts the number of source files\n",
        "Line" : 254,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# ucm_include_file_in_sources\n\n# Includes the file to the source with compiler flags\n",
        "Line" : 271,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# get old flags\n",
        "Line" : 281,
        "CharPositionInLine" : 12
      },
      "21" : {
        "Text" : "# update flags\n",
        "Line" : 287,
        "CharPositionInLine" : 12
      },
      "22" : {
        "Text" : "# ucm_dir_list\n\n# Returns a list of subdirectories for a given directory\n",
        "Line" : 299,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# ucm_trim_front_words\n\n# Trims X times the front word from a string separated with \"/\" and removes\n\n# the front \"/\" characters after that (used for filters for visual studio)\n",
        "Line" : 313,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# removes everything at the front up to a \"/\" character\n",
        "Line" : 321,
        "CharPositionInLine" : 8
      },
      "25" : {
        "Text" : "# removes all consecutive \"/\" characters from the front\n",
        "Line" : 323,
        "CharPositionInLine" : 8
      },
      "26" : {
        "Text" : "# ucm_remove_files\n\n# Removes source files from a list of sources (path is the relative path for it to be found)\n",
        "Line" : 329,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# ucm_remove_directories\n\n# Removes all source files from the given directories from the sources list\n",
        "Line" : 346,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ucm_add_files_impl\n",
        "Line" : 378,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# replacing forward slashes with back slashes so filters can be generated (back slash used in parsing...)\n",
        "Line" : 384,
        "CharPositionInLine" : 8
      },
      "30" : {
        "Text" : "# ucm_add_files\n\n# Adds files to a list of sources\n",
        "Line" : 390,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# ucm_add_dir_impl\n",
        "Line" : 409,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# handle the \"\" and \".\" cases\n",
        "Line" : 413,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "# to circumvent some linux/cmake/path issues - barely made it work...\n",
        "Line" : 419,
        "CharPositionInLine" : 8
      },
      "34" : {
        "Text" : "# since unix is case sensitive - add these valid extensions too\n\n# we don't use \"UNIX\" but instead \"CMAKE_HOST_UNIX\" because we might be cross\n\n# compiling (for example emscripten) under windows and UNIX may be set to 1\n\n# Also OSX is case insensitive like windows...\n",
        "Line" : 426,
        "CharPositionInLine" : 8
      },
      "35" : {
        "Text" : "# find all sources and set them as result\n",
        "Line" : 444,
        "CharPositionInLine" : 8
      },
      "36" : {
        "Text" : "# https://gcc.gnu.org/onlinedocs/gcc-4.4.1/gcc/Overall-Options.html#index-file-name-suffix-71\n\n# sources\n",
        "Line" : 446,
        "CharPositionInLine" : 8
      },
      "37" : {
        "Text" : "# headers\n",
        "Line" : 456,
        "CharPositionInLine" : 8
      },
      "38" : {
        "Text" : "# set the proper filters\n",
        "Line" : 473,
        "CharPositionInLine" : 8
      },
      "39" : {
        "Text" : "# replacing forward slashes with back slashes so filters can be generated (back slash used in parsing...)\n",
        "Line" : 475,
        "CharPositionInLine" : 8
      },
      "40" : {
        "Text" : "# ucm_add_dirs\n\n# Adds all files from directories traversing them recursively to a list of sources\n\n# and generates filters according to their location (accepts relative paths only).\n\n# Also this macro trims X times the front word from the filter string for visual studio filters.\n",
        "Line" : 490,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# ucm_add_target\n\n# Adds a target eligible for cotiring - unity build and/or precompiled header\n",
        "Line" : 508,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# init with the global unity flag\n",
        "Line" : 528,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "# check the UNITY argument\n",
        "Line" : 531,
        "CharPositionInLine" : 4
      },
      "44" : {
        "Text" : "# if target is excluded through the exclusion list\n",
        "Line" : 536,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "# unity build only for targets with > 1 source file (otherwise there will be an additional unnecessary target)\n",
        "Line" : 542,
        "CharPositionInLine" : 4
      },
      "46" : {
        "Text" : "# optimization\n",
        "Line" : 543,
        "CharPositionInLine" : 17
      },
      "47" : {
        "Text" : "# if cotire cannot be used\n",
        "Line" : 552,
        "CharPositionInLine" : 4
      },
      "48" : {
        "Text" : "# inform the developer that the current target might benefit from a unity build\n",
        "Line" : 557,
        "CharPositionInLine" : 1
      },
      "49" : {
        "Text" : "# prepare for the unity build\n",
        "Line" : 565,
        "CharPositionInLine" : 4
      },
      "50" : {
        "Text" : "# the original target will be added with a different name than the requested\n",
        "Line" : 568,
        "CharPositionInLine" : 8
      },
      "51" : {
        "Text" : "# exclude requested files from unity build of the current target\n",
        "Line" : 571,
        "CharPositionInLine" : 8
      },
      "52" : {
        "Text" : "# add the original target\n",
        "Line" : 577,
        "CharPositionInLine" : 4
      },
      "53" : {
        "Text" : "# set the number of unity cpp files to be used for the unity target\n",
        "Line" : 585,
        "CharPositionInLine" : 8
      },
      "54" : {
        "Text" : "# add a unity target for the original one with the name intended for the original\n",
        "Line" : 597,
        "CharPositionInLine" : 8
      },
      "55" : {
        "Text" : "# this is the library call that does the magic\n",
        "Line" : 600,
        "CharPositionInLine" : 8
      },
      "56" : {
        "Text" : "# disable the original target and enable the unity one\n",
        "Line" : 604,
        "CharPositionInLine" : 8
      },
      "57" : {
        "Text" : "# also set the name of the target output as the original one\n",
        "Line" : 609,
        "CharPositionInLine" : 8
      },
      "58" : {
        "Text" : "# reset the folder property so all unity targets dont end up in a single folder in the solution explorer of VS\n",
        "Line" : 612,
        "CharPositionInLine" : 12
      },
      "59" : {
        "Text" : "# print a message if the target was requested to be cotired but it couldn't\n",
        "Line" : 626,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 60
    },
    "CMakeLists.txt" : {
      "ObjectId" : "b65c8e7bdd79b953c23416f8bcc746bbf36d30be",
      "LastModified" : "2019-01-27T19:51:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Thanks https://github.com/zdenop/hunspell-mingw\n",
        "Line" : 35,
        "CharPositionInLine" : 33
      },
      "1" : {
        "Text" : "# options for win-iconv, which sadly doesn't have prefixes\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# this is hack to support native spell checker while building with xp toolset\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "deps/Catch/CMakeLists.txt" : {
      "ObjectId" : "7f78049782902935e65d824f85c78475003a28e0",
      "LastModified" : "2017-12-11T20:42:09Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/Controls/CMakeLists.txt" : {
      "ObjectId" : "65d30c45816003a881cffaa878742399e917e5a0",
      "LastModified" : "2017-12-11T20:42:09Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/FtpClient/CMakeLists.txt" : {
      "ObjectId" : "35da1211d2a7c241d9071f4b3780d28f9da6d8ea",
      "LastModified" : "2017-12-11T20:42:09Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/Hunspell/CMakeLists.txt" : {
      "ObjectId" : "0b877fb7057a8e683a0cb1db06a8beec46c930b4",
      "LastModified" : "2017-12-11T20:42:09Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/aspell/CMakeLists.txt" : {
      "ObjectId" : "8de1a02c2faeb5a4aecd66dd71e363311f526d90",
      "LastModified" : "2017-12-12T21:04:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/json/CMakeLists.txt" : {
      "ObjectId" : "240f67744701625ee31fa4f06f96419faadb489a",
      "LastModified" : "2018-03-25T06:57:04Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/lsignal/CMakeLists.txt" : {
      "ObjectId" : "de7bbd7807aeabe89b53a969d0c45e4b354a2bb0",
      "LastModified" : "2017-12-12T21:04:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/minizip/CMakeLists.txt" : {
      "ObjectId" : "bb65c35cb4d8fde53038ea83b9400e2589a7e6ce",
      "LastModified" : "2017-12-12T21:04:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/npp_extra/CMakeLists.txt" : {
      "ObjectId" : "9b92140aa63fb0c7241536c85e27dab17f57d41f",
      "LastModified" : "2017-12-12T21:04:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/win-iconv/CMakeLists.txt" : {
      "ObjectId" : "8b37a9b3317ebad96a21b0e963593f33a774c69d",
      "LastModified" : "2018-01-28T09:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# tests:\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "deps/win-iconv/FindWcecompat.cmake" : {
      "ObjectId" : "42769750933dde84603637b9adfa546abc6d8be3",
      "LastModified" : "2018-01-28T09:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find Wcecompat functionality\n\n# Once done this will define\n\n#\n\n#  WCECOMPAT_FOUND - system has Wcecompat\n\n#  WCECOMPAT_INCLUDE_DIR - Wcecompat include directory\n\n#  WCECOMPAT_LIBRARIES - Libraries needed to use Wcecompat\n\n#\n\n# Copyright (c) 2010, Andreas Holzammer, <andy@kdab.com>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# I have no idea what this is about, but it seems to be used quite often, so I add this here\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "deps/win-iconv/Makefile" : {
      "ObjectId" : "06d0c2ebaf00dd41ece5af6b7cf62e41b4f54bef",
      "LastModified" : "2018-01-28T09:02:59Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for win-iconv\n\n#\n\n# Variables that can be overridden:\n\n#\n\n# CC, AR, RANLIB, DLLTOOL\n\n# MKDIR_P, INSTALL, RM\n\n# prefix, BINARY_PATH, INCLUDE_PATH, LIBRARY_PATH\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# comma separated list (e.g. \"iconv.dll,libiconv.dll\")\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "CMAKE" : 13,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 1381
}