{
  "Repository" : "41845710",
  "Revision" : "HEAD",
  "ObjectId" : "dea8eaf15cc7a4d275e65bb4b83d7695dafe6f79",
  "CommitTime" : "2019-03-25T20:33:48Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "d437f3d0d922214d44176dec109c9d15182c3ce0",
      "LastModified" : "2018-07-05T20:16:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2015 Pavlo Lavrenenko\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Install custom module path\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Force XP toolchain for Visual Studio\n",
        "Line" : 28,
        "CharPositionInLine" : 28
      },
      "3" : {
        "Text" : "#--------------\n\n# USER DEFINES \\\n\n################\\\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Servers must choose this\n",
        "Line" : 42,
        "CharPositionInLine" : 79
      },
      "5" : {
        "Text" : "# Enable 64-bit build of Xash3D FWGS Engine.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Windows only. Enable it by default for Windows.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# POSIX only. Disable it by default for Windows\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Disable for Windows and 64Bit\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Desktop or dedicated version options\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Dedicated servers still can use SDL\n",
        "Line" : 71,
        "CharPositionInLine" : 36
      },
      "11" : {
        "Text" : "# But these dedicated can't use at all, so hardcode it as disabled\n\n# But these dedicated can't use at all, so hardcode it as disabled\n",
        "Line" : 73,
        "CharPositionInLine" : 22
      },
      "12" : {
        "Text" : "# Totally not recommended to disable\n",
        "Line" : 79,
        "CharPositionInLine" : 47
      },
      "13" : {
        "Text" : "# Misc\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Autodownload for lazy developers using Windows\n",
        "Line" : 86,
        "CharPositionInLine" : 10
      },
      "15" : {
        "Text" : "# Installing\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Dependencies\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Engine project\n",
        "Line" : 146,
        "CharPositionInLine" : 61
      },
      "18" : {
        "Text" : "# Game_launch project\n",
        "Line" : 148,
        "CharPositionInLine" : 63
      },
      "CommentCount" : 19
    },
    "cmake/FWGSLib.cmake" : {
      "ObjectId" : "aca09b4d73be9cbe0913872f27365c7f5da33f2d",
      "LastModified" : "2018-07-01T23:08:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2018 a1batross\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# may be required by some systems, although not recommended for i386\n",
        "Line" : 24,
        "CharPositionInLine" : 54
      },
      "2" : {
        "Text" : "# /*\n\n# ================\n\n# fwgs_debug\n\n# ================\n\n# */\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# /*\n\n# ================\n\n# fwgs_install\n\n#\n\n# Common installation function for FWGS projects\n\n# When using VS it tries to simulate VS behaviour for default installing\n\n# Otherwise *nix-style\n\n# ================\n\n# */\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# chmod 755\n",
        "Line" : 51,
        "CharPositionInLine" : 30
      },
      "5" : {
        "Text" : "# /*\n\n# ================\n\n# fwgs_conditional_subproject\n\n#\n\n# Default properties for target\n\n# ================\n\n# */\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# /*\n\n# ================\n\n# fwgs_set_default_properties\n\n#\n\n# Default properties for target\n\n# ================\n\n# */\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# /*\n\n# ===============\n\n# fwgs_string_option\n\n#\n\n# like option(), but for string\n\n# ===============\n\n# */\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# /*\n\n# ================\n\n# cond_list_append\n\n#\n\n# Append to list by condition check\n\n# ================\n\n# */\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# HACKHACK: as you can see, other compilers and OSes\n\n# can easily link to vgui library, no matter how it was placed\n\n# On Linux just target_link_libraries will give you a wrong\n\n# binary, which have ABSOLUTE PATH to vgui.so!\n\n# Stupid Linux linkers just check for a path and this may give\n\n# a TWO SAME libraries in memory, which obviously goes to crash engine\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# EXAMPLE(without hack):\n\n# $ LD_LIBRARY_PATH=$(pwd) ldd libvgui_support.so\n\n#       /home/user/projects/hlsdk/linux/vgui.so => /home/user/projects/hlsdk/linux/vgui.so (addr)\n\n# With hack:\n\n# $ LD_LIBRARY_PATH=$(pwd) ldd libvgui_support.so\n\n#       vgui.so => $(pwd)/vgui.so\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# /*\n\n# ================\n\n# fwgs_link_package\n\n#\n\n# Downloads(if enabled), finds and links library\n\n# ================\n\n# */\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Disabled, due to bugs\n\n# find_package(${pkgname}) # First try to find it in system!\n",
        "Line" : 187,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Not found anything, download it\n",
        "Line" : 189,
        "CharPositionInLine" : 30
      },
      "14" : {
        "Text" : "# I see what you did there, CMake Cache!\n",
        "Line" : 193,
        "CharPositionInLine" : 3
      },
      "15" : {
        "Text" : "# Check if we unpacked\n",
        "Line" : 195,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Check if we need re-download\n",
        "Line" : 199,
        "CharPositionInLine" : 5
      },
      "17" : {
        "Text" : "# Download\n",
        "Line" : 208,
        "CharPositionInLine" : 3
      },
      "18" : {
        "Text" : "# Update directory contents\n",
        "Line" : 211,
        "CharPositionInLine" : 26
      },
      "19" : {
        "Text" : "# Pass subdirectory, like VGUI/vgui-dev-master or SDL2/SDL2-2.0.x\n",
        "Line" : 219,
        "CharPositionInLine" : 57
      },
      "20" : {
        "Text" : "# Now try it hard\n",
        "Line" : 220,
        "CharPositionInLine" : 37
      },
      "21" : {
        "Text" : "# Find in system\n",
        "Line" : 223,
        "CharPositionInLine" : 36
      },
      "22" : {
        "Text" : "#HACKHACK: VGUI link\n",
        "Line" : 227,
        "CharPositionInLine" : 30
      },
      "23" : {
        "Text" : "# /*\n\n# ================\n\n# fwgs_add_compile_options\n\n#\n\n# add_compile_options, but better with language specification\n\n# ================\n\n# */\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Get rid of language\n",
        "Line" : 243,
        "CharPositionInLine" : 25
      },
      "25" : {
        "Text" : "# /*\n\n# ================\n\n# fwgs_fix_default_msvc_settings\n\n#\n\n# Tweaks CMake's default compiler/linker settings to suit Google Test's needs.\n\n#\n\n# This must be a macro(), as inside a function string() can only\n\n# update variables in the function scope.\n\n# ================\n\n# */\n",
        "Line" : 260,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# For MSVC, CMake sets certain flags to defaults we want to override.\n\n# This replacement code is taken from sample in the CMake Wiki at\n\n# http://www.cmake.org/Wiki/CMake_FAQ#Dynamic_Replace.\n",
        "Line" : 272,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# When Google Test is built as a shared library, it should also use\n\n# shared runtime libraries.  Otherwise, it may end up with multiple\n\n# copies of runtime library data in different modules, resulting in\n\n# hard-to-find crashes. When it is built as a static library, it is\n\n# preferable to use CRT as static libraries, as we don't have to rely\n\n# on CRT DLLs being available. CMake always defaults to using shared\n\n# CRT libraries, so we override that default here.\n",
        "Line" : 280,
        "CharPositionInLine" : 9
      },
      "28" : {
        "Text" : "# /*\n\n# ==============\n\n# xash_link_sdl2\n\n#\n\n# Download and link SDL2, if supported\n\n# ==============\n\n# */\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# SDL2 doesn't provide dev packages for nonWin32 targets\n",
        "Line" : 319,
        "CharPositionInLine" : 16
      },
      "30" : {
        "Text" : "# Code below is taken from https://github.com/axr/solar-cmake/blob/master/TargetArch.cmake\n\n# Modified by a1batross\n",
        "Line" : 324,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Set ppc_support to TRUE before including this file or ppc and ppc64\n\n# will be treated as invalid architectures since they are no longer supported by Apple\n",
        "Line" : 369,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# On OS X we use CMAKE_OSX_ARCHITECTURES *if* it was set\n\n# First let's normalize the order of the values\n",
        "Line" : 374,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# Note that it's not possible to compile PowerPC applications if you are using\n\n# the OS X SDK version 10.6 or later - you'll need 10.4/10.5 for that, so we\n\n# disable it by default\n\n# See this page for more information:\n\n# http://stackoverflow.com/questions/5333490/how-can-we-restore-ppc-ppc64-as-well-as-full-10-4-10-5-sdk-support-to-xcode-4\n",
        "Line" : 377,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# Architecture defaults to i386 or ppc on OS X 10.5 and earlier, depending on the CPU type detected at runtime.\n\n# On OS X 10.6+ the default is x86_64 if the CPU supports it, i386 otherwise.\n",
        "Line" : 383,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# Now add all the architectures in our normalized order\n",
        "Line" : 400,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# Detect the architecture in a rather creative way...\n\n# This compiles a small C program which is a series of ifdefs that selects a\n\n# particular #error preprocessor directive whose message string contains the\n\n# target architecture. The program will always fail to compile (both because\n\n# file is not a valid C program, and obviously because of the presence of the\n\n# #error preprocessor directives... but by exploiting the preprocessor in this\n\n# way, we can detect the correct target architecture even when cross-compiling,\n\n# since the program itself never needs to be run (only the compiler/preprocessor)\n",
        "Line" : 421,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# Parse the architecture name from the compiler output\n",
        "Line" : 438,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "# Get rid of the value marker leaving just the architecture name\n",
        "Line" : 441,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "# If we are compiling with an unknown architecture this variable should\n\n# already be set to \"unknown\" but in the case that it's empty (i.e. due\n\n# to a typo in the code), then set it to unknown\n",
        "Line" : 444,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# Set ARCH global variable\n",
        "Line" : 456,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 41
    },
    "cmake/FindSDL2.cmake" : {
      "ObjectId" : "b90e0654cc447a009c186d355e63587cc19bb23a",
      "LastModified" : "2018-01-24T21:05:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This module defines\n\n# SDL2_LIBRARY, the name of the library to link against\n\n# SDL2_FOUND, if false, do not try to link to SDL2\n\n# SDL2_INCLUDE_DIR, where to find SDL.h\n\n#\n\n# This module responds to the the flag:\n\n# SDL2_BUILDING_LIBRARY\n\n# If this is defined, then no SDL2main will be linked in because\n\n# only applications need main().\n\n# Otherwise, it is assumed you are building an application and this\n\n# module will attempt to locate and set the the proper link flags\n\n# as part of the returned SDL2_LIBRARY variable.\n\n#\n\n# Don't forget to include SDLmain.h and SDLmain.m your project for the\n\n# OS X framework based version. (Other versions link to -lSDL2main which\n\n# this module will try to find on your behalf.) Also for OS X, this\n\n# module will automatically add the -framework Cocoa on your behalf.\n\n#\n\n#\n\n# Additional Note: If you see an empty SDL2_LIBRARY_TEMP in your configuration\n\n# and no SDL2_LIBRARY, it means CMake did not find your SDL2 library\n\n# (SDL2.dll, libsdl2.so, SDL2.framework, etc).\n\n# Set SDL2_LIBRARY_TEMP to point to your SDL2 library, and configure again.\n\n# Similarly, if you see an empty SDL2MAIN_LIBRARY, you should set this value\n\n# as appropriate. These values are used to generate the final SDL2_LIBRARY\n\n# variable, but when these values are unset, SDL2_LIBRARY does not get created.\n\n#\n\n#\n\n# $SDL2DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$SDL2DIR\n\n# used in building SDL2.\n\n# l.e.galup  9-20-02\n\n#\n\n# Modified by Eric Wing.\n\n# Added code to assist with automated building by using environmental variables\n\n# and providing a more controlled/consistent search behavior.\n\n# Added new modifications to recognize OS X frameworks and\n\n# additional Unix paths (FreeBSD, etc).\n\n# Also corrected the header search path to follow \"proper\" SDL guidelines.\n\n# Added a search for SDL2main which is needed by some platforms.\n\n# Added a search for threads which is needed by some platforms.\n\n# Added needed compile switches for MinGW.\n\n#\n\n# On OSX, this will prefer the Framework version (if found) over others.\n\n# People will have to manually change the cache values of\n\n# SDL2_LIBRARY to override this selection or set the CMake environment\n\n# CMAKE_INCLUDE_PATH to modify the search paths.\n\n#\n\n# Note that the header path has changed from SDL2/SDL.h to just SDL.h\n\n# This needed to change because \"proper\" SDL convention\n\n# is #include \"SDL.h\", not <SDL2/SDL.h>. This is done for portability\n\n# reasons because not all systems place things in SDL2/ (see FreeBSD).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2003-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# OSX paths\n",
        "Line" : 77,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# *nix\n",
        "Line" : 81,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# Call sdl2-config if SDL2_LIBRARY still not found\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Non-OS X framework versions expect you to also dynamically link to\n\n# SDL2main. This is mainly for Windows and OS X. Other (Unix) platforms\n\n# seem to provide SDL2main for compatibility even though they don't\n\n# necessarily need it.\n",
        "Line" : 113,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# SDL2 may require threads on your system.\n\n# The Apple build may not need an explicit flag because one of the\n\n# frameworks may already provide it.\n\n# But for non-OSX systems, I will use the CMake Threads package.\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# MinGW needs an additional library, mwindows\n\n# It's total link flags should look like -lmingw32 -lSDL2main -lSDL2 -lmwindows\n\n# (Actually on second look, I think it only needs one of the m* libraries.)\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# For SDL2main\n",
        "Line" : 144,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# For OS X, SDL2 uses Cocoa as a backend so it must link to Cocoa.\n\n# CMake doesn't display the -framework Cocoa string in the UI even\n\n# though it actually is there if I modify a pre-used variable.\n\n# I think it has something to do with the CACHE STRING.\n\n# So I use a temporary variable until the end so I can set the\n\n# \"real\" variable in one-shot.\n",
        "Line" : 149,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# For threads, as mentioned Apple doesn't need this.\n\n# In fact, there seems to be a problem if I used the Threads package\n\n# and try using this line, so I'm just skipping it entirely for OS X.\n",
        "Line" : 159,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# For MinGW library\n",
        "Line" : 166,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# Set the final string here so the GUI reflects the final state.\n",
        "Line" : 171,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# Set the temp variable to INTERNAL so it is not seen in the CMake GUI\n",
        "Line" : 173,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 14
    },
    "cmake/FindVGUI.cmake" : {
      "ObjectId" : "9f96c02a3d2ccce2a94b58c51a51b987012e7cdf",
      "LastModified" : "2018-07-02T00:24:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2017 Flying With Gauss\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# HLSDK\n",
        "Line" : 35,
        "CharPositionInLine" : 27
      },
      "2" : {
        "Text" : "# vgui-dev\n",
        "Line" : 36,
        "CharPositionInLine" : 24
      },
      "3" : {
        "Text" : "# libvgui debian package\n\n# Maybe installed in system?\n",
        "Line" : 52,
        "CharPositionInLine" : 27
      },
      "4" : {
        "Text" : "# Maybe installed in system? [2]\n",
        "Line" : 54,
        "CharPositionInLine" : 13
      },
      "5" : {
        "Text" : "# Win32 VC6\n\n# Linux\n\n# OSX\n",
        "Line" : 55,
        "CharPositionInLine" : 27
      },
      "6" : {
        "Text" : "# vgui-dev Win32 VC6\n",
        "Line" : 58,
        "CharPositionInLine" : 19
      },
      "7" : {
        "Text" : "# vgui-dev Linux & OSX\n",
        "Line" : 59,
        "CharPositionInLine" : 27
      },
      "8" : {
        "Text" : "# HACKHACK: as you can see, other compilers and OSes \n\n# can easily link to vgui library, no matter how it was placed\n\n# On Linux just target_link_libraries will give you a wrong\n\n# binary, which have ABSOLUTE PATH to vgui.so!\n\n# Stupid Linux linkers just check for a path and this may give\n\n# a TWO SAME libraries in memory, which obviously goes to crash engine\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# EXAMPLE(without hack):\n\n# $ LD_LIBRARY_PATH=$(pwd) ldd libvgui_support.so\n\n#       /home/user/projects/hlsdk/linux/vgui.so => /home/user/projects/hlsdk/linux/vgui.so (addr)\n\n# With hack:\n\n# $ LD_LIBRARY_PATH=$(pwd) ldd libvgui_support.so\n\n#       vgui.so => $(pwd)/vgui.so\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "cmake/VSForceXPToolchain.cmake" : {
      "ObjectId" : "10011ab1b74643603264757c827e1758de01d3ab",
      "LastModified" : "2018-10-26T13:53:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Windows XP compatible platform toolset. Must be set before project(),\n\n# otherwise change of CMAKE_*_TOOLSET will take no effect.\n\n# We get VS version from the generator name because neither MSVC* nor other\n\n# variables that describe the compiler aren't available before project().\n",
        "Line" : 2,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Nothing. Older VS does support XP by default.\n",
        "Line" : 8,
        "CharPositionInLine" : 3
      },
      "2" : {
        "Text" : "# Visual Studio 11 2012\n",
        "Line" : 10,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "# Visual Studio 12 2013\n",
        "Line" : 14,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# Visual Studio 14 2015\n",
        "Line" : 18,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "# Visual Studio 15 2017\n",
        "Line" : 22,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 6
    },
    "engine/CMakeLists.txt" : {
      "ObjectId" : "4b18dc51f1b1583feeb163efa2b9dfeb207f6e99",
      "LastModified" : "2018-10-26T13:53:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016 Alibek Omarov\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Lib name\n",
        "Line" : 25,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "# Minimal sources\n",
        "Line" : 28,
        "CharPositionInLine" : 70
      },
      "3" : {
        "Text" : "# Win32 only sources\n",
        "Line" : 29,
        "CharPositionInLine" : 66
      },
      "4" : {
        "Text" : "# SDL version sources\n",
        "Line" : 30,
        "CharPositionInLine" : 64
      },
      "5" : {
        "Text" : "# Android sources\n",
        "Line" : 31,
        "CharPositionInLine" : 68
      },
      "6" : {
        "Text" : "# Client sources\n",
        "Line" : 32,
        "CharPositionInLine" : 58
      },
      "7" : {
        "Text" : "# NanoGL version\n",
        "Line" : 53,
        "CharPositionInLine" : 74
      },
      "8" : {
        "Text" : "# wesgl version\n",
        "Line" : 62,
        "CharPositionInLine" : 65
      },
      "9" : {
        "Text" : "# Important, as HLSDK and engine shares some symbol names!\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Windows by default have hidden visibility and better linker\n",
        "Line" : 75,
        "CharPositionInLine" : 14
      },
      "11" : {
        "Text" : "# ----- Conditions -----\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# I know what I am doing and I want to build version that requires SSE\n",
        "Line" : 81,
        "CharPositionInLine" : 26
      },
      "13" : {
        "Text" : "# Set executable or library\n",
        "Line" : 85,
        "CharPositionInLine" : 23
      },
      "14" : {
        "Text" : "# dbghelp crashhandler\n",
        "Line" : 97,
        "CharPositionInLine" : 43
      },
      "15" : {
        "Text" : "# link sdl2main, if needed\n",
        "Line" : 132,
        "CharPositionInLine" : 53
      },
      "16" : {
        "Text" : "# See target_link_vgui_hack\n",
        "Line" : 159,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "# Not needed anymore, loader is static always\n\n# add_custom_command(TARGET ${XASH_ENGINE} PRE_LINK COMMAND\n\n#    ${CMAKE_COMMAND} -E copy $<TARGET_FILE:loader> $<TARGET_FILE_DIR:${XASH_ENGINE}>)\n",
        "Line" : 161,
        "CharPositionInLine" : 1
      },
      "18" : {
        "Text" : "# For single binary builds we change name to game_launch's executable name\n",
        "Line" : 210,
        "CharPositionInLine" : 1
      },
      "19" : {
        "Text" : "# For Win32 we have split DLL names\n",
        "Line" : 216,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 20
    },
    "game_launch/CMakeLists.txt" : {
      "ObjectId" : "5e0585d544d6dcec03e130f78ac88892b7df52b1",
      "LastModified" : "2018-10-26T13:53:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2015 Pavlo Lavrenenko, Alibek Omarov\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# SDL2 provides it's own crossplatform main() implementation and simple message boxes\n\n# Win32 uses WinMain() implemented in launcher code and system message boxes\n\n# Otherwise it prints errors in stdin.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Link SDL2main also\n",
        "Line" : 39,
        "CharPositionInLine" : 35
      },
      "3" : {
        "Text" : "# Change name to your gamedir, if you building a standalone game\n",
        "Line" : 46,
        "CharPositionInLine" : 20
      },
      "CommentCount" : 4
    },
    "loader/CMakeLists.txt" : {
      "ObjectId" : "be8f6adab6692e2751101f31d237cf9baf570858",
      "LastModified" : "2018-10-26T13:53:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2015 Pavlo Lavrenenko\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler-dependent options\n",
        "Line" : 40,
        "CharPositionInLine" : 46
      },
      "2" : {
        "Text" : "# Don't install, we are static library\n\n# fwgs_install(${LOADER_LIBRARY})\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "vgui_support/CMakeLists.txt" : {
      "ObjectId" : "68271295cb1d5b36af321008d5755162fe9c3760",
      "LastModified" : "2018-10-26T13:53:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2015 Pavlo Lavrenenko\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Download prebuilt VGUI_support, as there is no way to have same C++ ABI for VC++ and MinGW.\n\n# Also there is no way to have a target without source code, so let's just have custom install() rule\n",
        "Line" : 33,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Prebuilt VGUI support is downloaded from github.com/FWGS/vgui_support_bin\n",
        "Line" : 36,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# HACKHACK: create empty target\n",
        "Line" : 52,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# Use prebuilt.\n\n# TODO: this allows only HLSDK 2.4 VGUI\n",
        "Line" : 85,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 5
    }
  },
  "FileTypes" : {
    "CMAKE" : 9
  },
  "ElapsedTime" : 1523
}