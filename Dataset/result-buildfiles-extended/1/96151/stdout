{
  "Repository" : "96151",
  "Revision" : "HEAD",
  "ObjectId" : "bf59f90de187160dcd19ec0b74a56675ea117ed7",
  "CommitTime" : "2015-01-04T19:22:08Z",
  "Files" : {
    "OpenCV/Makefile" : {
      "ObjectId" : "7aa82fe55ac85594bae6660c31628fcbcd51fdaa",
      "LastModified" : "2011-02-03T20:06:09Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "direcs-avr/Makefile" : {
      "ObjectId" : "8904daef4a55d861d46ad32e4b2bb8b8dc19825a",
      "LastModified" : "2010-05-27T20:33:39Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Hey Emacs, this is a -*- makefile -*-\r\n\n#\r\n\n#\r\n\n# On command line:\r\n\n#\r\n\n# make all = Make software.\r\n\n#\r\n\n# make clean = Clean out built project files.\r\n\n#\r\n\n# make coff = Convert ELF to AVR COFF (for use with AVR Studio 3.x or VMLAB).\r\n\n#\r\n\n# make extcoff = Convert ELF to AVR Extended COFF (for use with AVR Studio\r\n\n#                4.07 or greater).\r\n\n#\r\n\n# make program = Download the hex file to the device, using avrdude.  Please\r\n\n#                customize the avrdude settings below first!\r\n\n#\r\n\n# make filename.s = Just compile filename.c into the assembler code only\r\n\n#\r\n\n# To rebuild project do \"make clean\" then \"make all\".\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# MCU name\r\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Main Oscillator Frequency\r\n\n# This is only used to define F_OSC in all assembler and c-sources.\r\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Output format. (can be srec, ihex, binary)\r\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Target file name (without extension).\r\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# List C source files here. (C dependencies are automatically generated.)\r\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# List Assembler source files here.\r\n\n# Make them always end in a capital .S.  Files ending in a lowercase .s\r\n\n# will not be considered source files but generated files (assembler\r\n\n# output from the compiler), and will be deleted upon \"make clean\"!\r\n\n# Even though the DOS/Win* filesystem matches both .s and .S the same,\r\n\n# it will preserve the spelling of the filenames, and gcc itself does\r\n\n# care about how the name is spelled on its command-line.\r\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Optimization level, can be [0, 1, 2, 3, s]. \r\n\n# 0 = turn off optimization. s = optimize for size.\r\n\n# (Note: 3 is not always the best optimization level. See avr-libc FAQ.)\r\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Debugging format.\r\n\n# Native formats for AVR-GCC's -g are stabs [default], or dwarf-2.\r\n\n# AVR (extended) COFF requires stabs, plus an avr-objcopy run.\r\n\n#DEBUG = stabs\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# List any extra directories to look for include files here.\r\n\n#     Each directory must be seperated by a space.\r\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Compiler flag to set the C Standard level.\r\n\n# c89   - \"ANSI\" C\r\n\n# gnu89 - c89 plus GCC extensions\r\n\n# c99   - ISO C99 standard (not yet fully implemented)\r\n\n# gnu99 - c99 plus GCC extensions\r\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Place -D or -U options here\r\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Place -I options here\r\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Compiler flags.\r\n\n#  -g*:          generate debugging information\r\n\n#  -O*:          optimization level\r\n\n#  -f...:        tuning, see GCC manual and avr-libc documentation\r\n\n#  -Wall...:     warning level\r\n\n#  -Wa,...:      tell GCC to pass this to the assembler.\r\n\n#    -adhlns...: create assembler listing\r\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Assembler flags.\r\n\n#  -Wa,...:   tell GCC to pass this to the assembler.\r\n\n#  -ahlms:    create listing\r\n\n#  -gstabs:   have the assembler create line number information; note that\r\n\n#             for use in COFF files, additional information about filenames\r\n\n#             and function names needs to be present in the assembler source\r\n\n#             files -- see avr-libc docs [FIXME: not yet described there]\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#Additional libraries.\r\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Minimalistic printf version\r\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Floating point printf version (requires MATH_LIB = -lm below)\r\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Minimalistic scanf version\r\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Floating point + %[ scanf version (requires MATH_LIB = -lm below)\r\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# External memory options\r\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# 64 KB of external RAM, starting after internal RAM (ATmega128!),\r\n\n# used for variables (.data/.bss) and heap (malloc()).\r\n\n#EXTMEMOPTS = -Wl,-Tdata=0x801100,--defsym=__heap_end=0x80ffff\r\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# 64 KB of external RAM, starting after internal RAM (ATmega128!),\r\n\n# only used for heap (malloc()).\r\n\n#EXTMEMOPTS = -Wl,--defsym=__heap_start=0x801100,--defsym=__heap_end=0x80ffff\r\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Linker flags.\r\n\n#  -Wl,...:     tell GCC to pass this to linker.\r\n\n#    -Map:      create map file\r\n\n#    --cref:    add cross reference to  map file\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Programming support using avrdude. Settings and variables.\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Programming hardware: alf avr910 avrisp bascom bsd \r\n\n# dt006 pavr picoweb pony-stk200 sp12 stk200 stk500\r\n\n#\r\n\n# Type: avrdude -c ?\r\n\n# to get a full listing.\r\n\n#\r\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# com1 = serial port. Use lpt1 to connect to parallel port.\r\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#AVRDUDE_WRITE_EEPROM = -U eeprom:w:$(TARGET).eep\r\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Uncomment the following if you want avrdude's erase cycle counter.\r\n\n# Note that this counter needs to be initialized first using -Yn,\r\n\n# see avrdude manual.\r\n\n#AVRDUDE_ERASE_COUNTER = -y\r\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Uncomment the following if you do /not/ wish a verification to be\r\n\n# performed after programming the device.\r\n\n#AVRDUDE_NO_VERIFY = -V\r\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Increase verbosity level.  Please use this when submitting bug\r\n\n# reports about avrdude. See <http://savannah.nongnu.org/projects/avrdude> \r\n\n# to submit bug reports.\r\n\n#AVRDUDE_VERBOSE = -v -v\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# ---------------------------------------------------------------------------\r\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Define directories, if needed.\r\n\n#DIRAVR = c:/winavr\r\n\n#DIRAVRBIN = $(DIRAVR)/bin\r\n\n#DIRAVRUTILS = $(DIRAVR)/utils/bin\r\n\n#DIRINC = .\r\n\n#DIRLIB = $(DIRAVR)/avr/lib\r\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Define programs and commands.\r\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Define Messages\r\n\n# English\r\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Define all object files.\r\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Define all listing files.\r\n",
        "Line" : 243,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Compiler flags to generate dependency files.\r\n\n### GENDEPFLAGS = -Wp,-M,-MP,-MT,$(*F).o,-MF,.dep/$(@F).d\r\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Combine all necessary flags and optional flags.\r\n\n# Add target processor to flags.\r\n",
        "Line" : 251,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Default target.\r\n",
        "Line" : 260,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Eye candy.\r\n\n# AVR Studio 3.x does not check make's exit code but relies on\r\n\n# the following magic strings to be generated by the compile job.\r\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Display size of file.\r\n",
        "Line" : 288,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Display compiler version information.\r\n",
        "Line" : 299,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Program the device.  \r\n",
        "Line" : 305,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Convert ELF to COFF for use in debugging / simulating in AVR Studio or VMLAB.\r\n",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Create final output files (.hex, .eep) from ELF output file.\r\n",
        "Line" : 333,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Create extended listing file from ELF output file.\r\n",
        "Line" : 345,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Create a symbol table from ELF output file.\r\n",
        "Line" : 351,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# Link: create ELF output file from object files.\r\n",
        "Line" : 359,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Compile: create object files from C source files.\r\n",
        "Line" : 368,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Compile: create assembler files from C source files.\r\n",
        "Line" : 375,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Assemble: create object files from assembler source files.\r\n",
        "Line" : 380,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# Target: clean project.\r\n",
        "Line" : 388,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# Include the dependency files.\r\n",
        "Line" : 413,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# Listing of phony targets.\r\n",
        "Line" : 417,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 55
    },
    "direcs-avrsim/direcs-avrsim.pro" : {
      "ObjectId" : "8feb4aa4471b1025d33ac865c8b23c7dd469bef7",
      "LastModified" : "2009-09-13T18:44:08Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "direcs-avrsim/src/src.pro" : {
      "ObjectId" : "81bd959b602330841414445fa9632abe498d4e62",
      "LastModified" : "2011-12-11T21:36:50Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "direcs-remote/direcs-remote.pro" : {
      "ObjectId" : "8feb4aa4471b1025d33ac865c8b23c7dd469bef7",
      "LastModified" : "2009-09-13T18:44:08Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "direcs-remote/src/src.pro" : {
      "ObjectId" : "45d6e34ec73f47e9b4599e2f2005fcaa8a9f7cab",
      "LastModified" : "2010-07-18T21:05:25Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#\tmessage( Adding joystick stuff... )\n\n#\tLIBS +=\t\t-framework IOKit \\\n#\t\t\t\t-framework Foundation\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\tHEADERS     += joyreaderMacOS.h\n\n#\tSOURCES     += joyreaderMacOS.cpp \\\n#\t\t\t\t   joyreaderMacOS-objc.m\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#contains( HOSTNAME, imac ) {\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "direcs/crosstool/src__OLD_WITH_ARM__.pro" : {
      "ObjectId" : "3d10ff76f6e843edf72c71b01b28602e4984bed1",
      "LastModified" : "2009-09-13T18:44:08Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "direcs/direcs.pro" : {
      "ObjectId" : "8feb4aa4471b1025d33ac865c8b23c7dd469bef7",
      "LastModified" : "2009-09-13T18:44:08Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "direcs/src/src.pro" : {
      "ObjectId" : "9bc337c17b75cf4a6c96bd459cb87257a7dda58d",
      "LastModified" : "2015-01-01T15:32:32Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#\t\t\t\tcompassWidget.h \\\n\t\t\t\tconsoleGui.h \\\n\t\t\t\tdemoThread.h \\\n\t\t\t\tdirecsSerial.h \\\n\t\t\t\tgui.h \\\n\t\t\t\thead.h \\\n\t\t\t\tinifile.h \\\n\t\t\t\tinterfaceAvr.h \\\n\t\t\t\tjoystick.h \\\n\t\t\t\tjoystickDialog.h \\\n\t\t\t\tlaserHokuyoURGsimple.h \\\n\t\t\t\tlaserScene.h \\\n\t\t\t\tlaserSickS300.h \\\n\t\t\t\tlaserThread.h \\\n\t\t\t\tmotor.h \\\n\t\t\t\tdirecs.h \\\n\t\t\t\tnetworkThread.h \\\n\t\t\t\tobstacleCheckThread.h \\\n\t\t\t\tplotThread.h \\\n\t\t\t\tQtGLContext.h \\\n\t\t\t\trgbLed.h \\\n\t\t\t\turg_serial_utils.h \\\n\t\t\t\tsensorThread.h \\\n\t\t\t\tservo.h \\\n\t\t\t\tsettingsDialog.h \\\n\t\t\t\tspeakThread.h \\\n\t\t\t\ttimerThread.h \\\n\t\t\t\tlogfile.h\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\t\t\t\tcompassWidget.cpp \\\n\t\t\t\tconsoleGui.cpp \\\n\t\t\t\tdemoThread.cpp \\\n\t\t\t\tdirecsSerial.cpp \\\n\t\t\t\tgui.cpp \\\n\t\t\t\thead.cpp \\\n\t\t\t\tinifile.cpp \\\n\t\t\t\tinterfaceAvr.cpp \\\n\t\t\t\tjoystick.cpp \\\n\t\t\t\tjoystickDialog.cpp \\\n\t\t\t\tlaserHokuyoURGsimple.cpp \\\n\t\t\t\tlaserSickS300.cpp \\\n\t\t\t\tlaserScene.cpp \\\n\t\t\t\tlaserThread.cpp \\\n\t\t\t\tmotor.cpp \\\n\t\t\t\tdirecs.cpp \\\n\t\t\t\tnetworkThread.cpp \\\n\t\t\t\tobstacleCheckThread.cpp \\\n\t\t\t\tplotThread.cpp \\\n\t\t\t\tQtGLContext.cpp \\\n\t\t\t\trgbLed.cpp \\\n\t\t\t\turg_serial_utils.cpp \\\n\t\t\t\turg_serial_utils_linux.cpp \\\n\t\t\t\tsensorThread.cpp \\\n\t\t\t\tservo.cpp \\\n\t\t\t\tsettingsDialog.cpp \\\n\t\t\t\tspeakThread.cpp \\\n\t\t\t\ttimerThread.cpp \\\n\t\t\t\tlogfile.cpp\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\tlinux-g++:QMAKE_CXXFLAGS +=  -march=native\n\n#\tlinux-g++-64:QMAKE_CXXFLAGS +=  -march=native\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#contains( HOSTNAME, macbook.fritz.box ) {\n\n#contains( HOSTNAME, iMac ) {\n\n#contains( HOSTNAME, debianmac ) {\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\t message( Switching to special robot GUI... )\n\n#\tFORMS -=\tdirecs.ui\n\n#\tFORMS +=\tdirecsSmall.ui\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\t DEFINES += BUILDFORROBOT\n\n#\t DEFINES += LASERVIEW\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\t message( Removing plot stuff (qwt)... )\n\n#\t INCLUDEPATH -= /usr/include/qwt-qt4\n\n#\t HEADERS     -= plotThread.h\n\n#\t SOURCES     -= plotThread.cpp\n\n#\t LIBS        -= -lqwt\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\t message( Removing active laser view... )\n\n#\t DEFINES -= ACTIVELASERVIEW\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "direcs/src/test/hellogl.pro" : {
      "ObjectId" : "ce9c8e8e34ac3b4ef9dc681a21cbe794bb3b34fb",
      "LastModified" : "2009-09-13T18:44:08Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# install\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "direcsstm/code/Makefile" : {
      "ObjectId" : "4194cb3ab815bfe066bf32fc32d7588a609caf8c",
      "LastModified" : "2012-03-03T15:40:34Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# to run from FLASH\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Default C stuff\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# STM32F4 StdPeriph Driver (lib) stuff\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "direcsstm/lib/build/Makefile" : {
      "ObjectId" : "1506b0ed34374779ebe39780229d0ad4c5a5942d",
      "LastModified" : "2012-01-18T21:16:02Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#../inc/core_support/core_cm4.c\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "kinect/kinect.pro" : {
      "ObjectId" : "3f6c313817ecc90e92716deb742194ec2e9a4384",
      "LastModified" : "2012-01-18T21:16:02Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "kinect/src/src.pro" : {
      "ObjectId" : "7e01afff9de1943fb2f9e1cd9ca386bddff2107d",
      "LastModified" : "2012-01-18T21:16:02Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# if we are on a mac define DARWIN\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "qt-speech/QtSpeech-dll.pro" : {
      "ObjectId" : "cdac7560a252bf716c4143091a62d3165b8f655e",
      "LastModified" : "2015-01-04T17:45:52Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# QtSpeech -- a small cross-platform library to use TTS\r\n\n# Copyright (C) 2010-2011 LynxLine.\r\n\n#\r\n\n# This library is free software; you can redistribute it and/or\r\n\n# modify it under the terms of the GNU Lesser General Public\r\n\n# License as published by the Free Software Foundation; either\r\n\n# version 3 of the License, or (at your option) any later version.\r\n\n#\r\n\n# This library is distributed in the hope that it will be useful,\r\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n\n# Lesser General Public License for more details.\r\n\n#\r\n\n# You should have received a copy of the GNU Lesser General\r\n\n# Public License along with this library; if not, write to the\r\n\n# Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\r\n\n# Boston, MA 02110-1301 USA\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "qt-speech/QtSpeech-static.pro" : {
      "ObjectId" : "b7f9d0fe6c06a9106044f556c639f8b5cb9c208c",
      "LastModified" : "2015-01-04T17:45:52Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# QtSpeech -- a small cross-platform library to use TTS\r\n\n# Copyright (C) 2010-2011 LynxLine.\r\n\n#\r\n\n# This library is free software; you can redistribute it and/or\r\n\n# modify it under the terms of the GNU Lesser General Public\r\n\n# License as published by the Free Software Foundation; either\r\n\n# version 3 of the License, or (at your option) any later version.\r\n\n#\r\n\n# This library is distributed in the hope that it will be useful,\r\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n\n# Lesser General Public License for more details.\r\n\n#\r\n\n# You should have received a copy of the GNU Lesser General\r\n\n# Public License along with this library; if not, write to the\r\n\n# Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\r\n\n# Boston, MA 02110-1301 USA\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "qt-speech/QtSpeech.pri" : {
      "ObjectId" : "04f8d906ee04cb9b62803209e303c7c73c17ba2a",
      "LastModified" : "2015-01-04T17:45:52Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# QtSpeech -- a small cross-platform library to use TTS\n\n# Copyright (C) 2010-2011 LynxLine.\n\n#\n\n# This library is free software; you can redistribute it and/or\n\n# modify it under the terms of the GNU Lesser General Public\n\n# License as published by the Free Software Foundation; either\n\n# version 3 of the License, or (at your option) any later version.\n\n#\n\n# This library is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n\n# Lesser General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU Lesser General\n\n# Public License along with this library; if not, write to the\n\n# Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\n\n# Boston, MA 02110-1301 USA\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Linux: use asound \n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Mac: use system Frameworks\n\n#LIBS += -framework CoreAudio -framework AudioUnit -framework AudioToolbox -framework Carbon\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "qt-speech/test/test.pro" : {
      "ObjectId" : "d5299590553c943db148f87ab1d2cde9b9734ee5",
      "LastModified" : "2015-01-04T17:45:52Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# QtSpeech -- a small cross-platform library to use TTS\n\n# Copyright (C) 2010-2011 LynxLine.\n\n#\n\n# This library is free software; you can redistribute it and/or\n\n# modify it under the terms of the GNU Lesser General Public\n\n# License as published by the Free Software Foundation; either\n\n# version 3 of the License, or (at your option) any later version.\n\n#\n\n# This library is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n\n# Lesser General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU Lesser General\n\n# Public License along with this library; if not, write to the\n\n# Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\n\n# Boston, MA 02110-1301 USA\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/src/src.pro" : {
      "ObjectId" : "e0e1381df7b4d468aeba175198bf0f388f7de88b",
      "LastModified" : "2015-01-04T17:45:52Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# QMAKE_CXXFLAGS+= -m32\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/test.pro" : {
      "ObjectId" : "3f6c313817ecc90e92716deb742194ec2e9a4384",
      "LastModified" : "2015-01-04T17:45:52Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "QMAKE" : 16,
    "MAKEFILE" : 4
  },
  "ElapsedTime" : 2099
}