{
  "Repository" : "12313341",
  "Revision" : "HEAD",
  "ObjectId" : "f30b4ff63c7121b0d67b00860b89a995541cef2d",
  "CommitTime" : "2016-02-03T13:10:13Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "abce591e3d84c69e8eee89649f8ac1116d845fb3",
      "LastModified" : "2016-01-08T10:08:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Remove when CMake >= 2.8.4 is required\n",
        "Line" : 1,
        "CharPositionInLine" : 33
      },
      "1" : {
        "Text" : "#set(CMAKE_VERBOSE_MAKEFILE ON)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#set(CMAKE_C_COMPILER \"tau_cc.sh\")\n\n#set(CMAKE_C_FLAGS \"-optRevert -optTauSelectFile=select.tau -std=c99 -fopenmp -Ofast\")\n\n#set(CMAKE_C_COMPILER \"/opt/local/bin/gcc-mp-4.8\")\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#set(CMAKE_C_FLAGS \"-std=c99 -D_REENTRANT -O3 -g -D_POSIX_C_SOURCE=200112L\")\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#set(CMAKE_C_FLAGS \" -std=c99 -D_REENTRANT -O3\")\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#set(CMAKE_C_FLAGS \" -std=c99 -D_REENTRANT -O3\")\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# set with: cmake . -DUSE_OPENCL:BOOL=ON\n",
        "Line" : 42,
        "CharPositionInLine" : 14
      },
      "7" : {
        "Text" : "#schnaps library\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# nearest neighbour fast search library\n\n#find_package(flann)\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# main program schnaps\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Find all of the files ending in .c in the test directory\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#MESSAGE(STATUS ${test})\n",
        "Line" : 191,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Find all of the files ending in .c in the example directory\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#MESSAGE(STATUS ${example})\n",
        "Line" : 215,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 14
    },
    "cmake/FindOpenCL.cmake" : {
      "ObjectId" : "a64488ace032521bc3572e2ba402b97f89955c31",
      "LastModified" : "2015-02-04T15:49:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find OpenCL\r\n\n#\r\n\n# To set manually the paths, define these environment variables:\r\n\n# OpenCL_INCPATH - Include path (e.g. OpenCL_INCPATH=/opt/cuda/4.0/cuda/include)\r\n\n# OpenCL_LIBPATH - Library path (e.h. OpenCL_LIBPATH=/usr/lib64/nvidia)\r\n\n#\r\n\n# Once done this will define\r\n\n# OPENCL_FOUND - system has OpenCL\r\n\n# OPENCL_INCLUDE_DIRS - the OpenCL include directory\r\n\n# OPENCL_LIBRARIES - link these to use OpenCL\r\n\n# OPENCL_HAS_CPP_BINDINGS - system has also cl.hpp\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# IF OpenCL_LIBPATH is given use it and don't use default path\r\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# IF OpenCL_INCPATH is given use it and find for CL/cl.h and OpenCL/cl.h do not try to find default paths\r\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find OpenCL includes and libraries from environment variables provided by vendor\r\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Nvidia\r\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Intel SDK\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# AMD SDK\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Override search paths with OpenCL_INCPATH env variable\r\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Override search paths with OpenCL_LIBPATH env variable\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Check if 64bit or 32bit versions links fine\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#SET (_OPENCL_VERSION_SOURCE \"${CMAKE_BINARY_DIR}/test.c\")\r\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Unix style platforms\r\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# The AMD SDK currently does not place its headers\r\n\n# in /usr/include, therefore also search relative\r\n\n# to the library\r\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# This is often the same, so clean up\r\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "cmake/FindStarPU.cmake" : {
      "ObjectId" : "52954e87457cd473150058e5bc66449d190a6674",
      "LastModified" : "2015-07-03T08:29:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find StarPU\r\n\n#\r\n\n# Once done this will define\r\n\n# STARPU_FOUND - system has StarPU\r\n\n# STARPU_INCLUDE_DIRS - the StarPU include directory\r\n\n# STARPU_LIB - link these to use StarPU\r\n\n# HWLOC_LIB - link to hwloc libs\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Findflann.cmake" : {
      "ObjectId" : "b4bc9054f07faa05acf6ab5670503d23e3d729b5",
      "LastModified" : "2015-07-03T08:29:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\r\n\n# Find Flann\r\n\n#\r\n\n# This sets the following variables:\r\n\n# FLANN_FOUND - True if FLANN was found.\r\n\n# FLANN_INCLUDE_DIRS - Directories containing the FLANN include files.\r\n\n# FLANN_LIBRARIES - Libraries needed to use FLANN.\r\n\n# FLANN_DEFINITIONS - Compiler flags for FLANN.\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 4
  },
  "ElapsedTime" : 1065
}