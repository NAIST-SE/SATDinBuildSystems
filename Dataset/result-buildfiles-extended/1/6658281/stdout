{
  "Repository" : "6658281",
  "Revision" : "HEAD",
  "ObjectId" : "60b054cc291a24f4999f5eca292e5dff2796db61",
  "CommitTime" : "2018-05-24T07:52:44Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "6523a89f116d834ddca4c727a0d3b5fb6bcaaf1c",
      "LastModified" : "2017-06-25T19:38:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n#  MicroHH\n\n#  Copyright (c) 2011-2017 Chiel van Heerwaarden\n\n#  Copyright (c) 2011-2017 Thijs Heus\n\n#  Copyright (c) 2014-2017 Bart van Stratum\n\n# \n\n#  This file is part of MicroHH\n\n# \n\n#  MicroHH is free software: you can redistribute it and/or modify\n\n#  it under the terms of the GNU General Public License as published by\n\n#  the Free Software Foundation, either version 3 of the License, or\n\n#  (at your option) any later version.\n\n# \n\n#  MicroHH is distributed in the hope that it will be useful,\n\n#  but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n#  GNU General Public License for more details.\n\n# \n\n#  You should have received a copy of the GNU General Public License\n\n#  along with MicroHH.  If not, see <http://www.gnu.org/licenses/>.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check whether USEMPI and USECUDA are set, if not, set to FALSE.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Crash on using CUDA and MPI together, not implemented yet.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Load system specific settings if not set, force default.cmake.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Trigger fatal error if illegal module is loaded.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set the default build type to RELEASE.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Start the project only after the system specific settings are loaded.\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Display status messages for MPI set precompiler flags.\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# add the necessary precompiler flag\n",
        "Line" : 66,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Load the CUDA module in case CUDA is enabled and display status message.\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Only set the compiler flags when the cache is created\n\n# to enable editing of the flags in the CMakeCache.txt file.\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Make sure that ccmake only contains build type.\n",
        "Line" : 103,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Print the C++ and CUDA compiler flags to the screen.\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Add CUDA debug definition, to enforce CUDA API and kernel checks.\n",
        "Line" : 116,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Documentation generation\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# If a non-default sed is not set revert to standard sed.\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "config/WUR_hpc.cmake" : {
      "ObjectId" : "7c5aa83dfc6388162889f3adc52b77fbc457d4b3",
      "LastModified" : "2018-02-16T19:02:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# WUR HPC cluster\n\n# Tested with (nov. 2017):\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# module purge\n\n# module load intel/compiler/64/2017 \n\n# module load netcdf/intel/64/4.4.1\n\n# module load mpich/intel/64/3.1.3\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# compiler for parallel build\n",
        "Line" : 10,
        "CharPositionInLine" : 24
      },
      "3" : {
        "Text" : "# C++ compiler for serial build\n",
        "Line" : 12,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 4
    },
    "config/archive/archlinux.cmake" : {
      "ObjectId" : "be7ccece455318b597b06a61b563ce01395403e8",
      "LastModified" : "2017-09-12T12:39:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ARCH Linux\n\n#set(ENV{CXX} g++) # compiler for serial build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# compiler for parallel build\n",
        "Line" : 4,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 2
    },
    "config/archive/blizzard.cmake" : {
      "ObjectId" : "5d56e4eda5c545673497cacc923d820ae7a4bf43",
      "LastModified" : "2017-09-12T12:39:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Blizzard\n\n# set(ENV{CXX} xlc++) # compiler for serial build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# compiler for parallel build\n",
        "Line" : 3,
        "CharPositionInLine" : 19
      },
      "CommentCount" : 2
    },
    "config/archive/cartesius.cmake" : {
      "ObjectId" : "86f1700b6d31bf4ef9e19b6ec48685a97f015770",
      "LastModified" : "2017-09-12T12:39:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Cartesius SurfSARA\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# C compiler for parallel build\n\n# C++ compiler for parallel build\n",
        "Line" : 3,
        "CharPositionInLine" : 24
      },
      "2" : {
        "Text" : "# C compiler for parallel build\n\n# C++ compiler for serial build\n",
        "Line" : 6,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 3
    },
    "config/archive/fedora.cmake" : {
      "ObjectId" : "bd86890c2154861d79d7a273ca77946167f947a4",
      "LastModified" : "2017-09-12T12:39:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Fedora\n\n# set(ENV{CXX} g++) # compiler for serial build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# compiler for parallel build\n",
        "Line" : 3,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 2
    },
    "config/archive/halo.cmake" : {
      "ObjectId" : "abd2b8f9c6deabe24557436ab55e0b37c8110234",
      "LastModified" : "2017-09-12T12:39:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# HALO, DKRZ Visualization cluster\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# C compiler for serial build\n",
        "Line" : 3,
        "CharPositionInLine" : 79
      },
      "2" : {
        "Text" : "# C++ compiler for serial build\n",
        "Line" : 4,
        "CharPositionInLine" : 80
      },
      "3" : {
        "Text" : "# C compiler for serial build\n\n# C++ compiler for serial build\n",
        "Line" : 6,
        "CharPositionInLine" : 20
      },
      "CommentCount" : 4
    },
    "config/archive/macbook.cmake" : {
      "ObjectId" : "aeed34c60db95c356c8b89c59791fe4515e1f304",
      "LastModified" : "2017-09-12T12:39:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# MacBook\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# C compiler for parallel build\n\n# C++ compiler for parallel build\n",
        "Line" : 3,
        "CharPositionInLine" : 23
      },
      "2" : {
        "Text" : "# C compiler for serial build\n\n# C++ compiler for serial build\n",
        "Line" : 6,
        "CharPositionInLine" : 27
      },
      "CommentCount" : 3
    },
    "config/archive/macbook_brew_gcc.cmake" : {
      "ObjectId" : "2b027ea5f74d218c38d12a37928ee010c81bde96",
      "LastModified" : "2017-09-12T12:39:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# MacBook\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# C compiler for parallel build\n\n# C++ compiler for parallel build\n",
        "Line" : 3,
        "CharPositionInLine" : 23
      },
      "2" : {
        "Text" : "# C compiler for serial build\n\n# C++ compiler for serial build\n",
        "Line" : 6,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 3
    },
    "config/archive/macbook_clang.cmake" : {
      "ObjectId" : "8eb3eccf1b2078d7fbce58703987ae100d4a249f",
      "LastModified" : "2017-09-12T12:39:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# MacBook\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# C compiler for parallel build\n\n# C++ compiler for parallel build\n",
        "Line" : 3,
        "CharPositionInLine" : 23
      },
      "2" : {
        "Text" : "# C compiler for serial build\n\n# C++ compiler for serial build\n",
        "Line" : 6,
        "CharPositionInLine" : 20
      },
      "3" : {
        "Text" : "# Very strict\n",
        "Line" : 14,
        "CharPositionInLine" : 69
      },
      "4" : {
        "Text" : "#set(USER_CXX_FLAGS_DEBUG \"-O0 -g -Wno-unknown-pragmas -Weverything -Wno-padded -Wno-old-style-cast\") # Slightly less strict\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "config/archive/macbookpro_intel.cmake" : {
      "ObjectId" : "758177234078369ed277f4cb86ad829e8337b9fd",
      "LastModified" : "2017-09-12T12:39:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macbook Pro Intel - Oklahoma\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(HDF5_LIB_1         \"/usr/local/hdf/lib/libhdf5.a\")\n\n#set(HDF5_LIB_2         \"/usr/local/hdf/lib/libhdf5_hl.a\")\n\n#set(SZIP_LIB           \"/usr/local/szip/lib/libsz.a\")\n\n#set(LIBS ${FFTW_LIB} ${NETCDF_LIB_CPP} ${NETCDF_LIB_C} ${HDF5_LIB_2} ${HDF5_LIB_1} ${SZIP_LIB} m z curl)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "config/archive/mistral_GPU.cmake" : {
      "ObjectId" : "73d9492bd00444ec59ded01d79edb63b685475d3",
      "LastModified" : "2017-09-12T12:39:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Mistral GPU nodes\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# C compiler for parallel build\n\n# C++ compiler for parallel build\n",
        "Line" : 3,
        "CharPositionInLine" : 24
      },
      "2" : {
        "Text" : "# C compiler for serial build\n\n# C++ compiler for serial build\n",
        "Line" : 6,
        "CharPositionInLine" : 20
      },
      "3" : {
        "Text" : "# Note(s) BvS: * the legacy NetCDF C++ library is not (yet) installed on Mistral\n\n#              * FFTW3 with NVCC suffers from this problem: https://github.com/FFTW/fftw3/issues/18\n\n# To solve both issues, config file uses libraries from my home directory\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "config/archive/mpipc.cmake" : {
      "ObjectId" : "2e3f5bf50c28dcbc5ad605d71f326f6f797c88d6",
      "LastModified" : "2017-09-12T12:39:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# MPI-PC GNU compilers\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# C compiler for parallel build\n\n# C++ compiler for parallel build\n",
        "Line" : 3,
        "CharPositionInLine" : 23
      },
      "2" : {
        "Text" : "# C compiler for serial build\n\n# C++ compiler for serial build\n",
        "Line" : 6,
        "CharPositionInLine" : 20
      },
      "CommentCount" : 3
    },
    "config/archive/mpipc_intel.cmake" : {
      "ObjectId" : "dc31ef2746a96a65695b73f1ed899b28652ac051",
      "LastModified" : "2017-09-12T12:39:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# MPI-PC, Intel compilers\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# C compiler for parallel build\n\n# C++ compiler for parallel build\n",
        "Line" : 3,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "# C compiler for serial build\n\n# C++ compiler for serial build\n",
        "Line" : 6,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 3
    },
    "config/archive/supermuc.cmake" : {
      "ObjectId" : "6d54c558036b651d1bbbf27adf5091361c3cda0d",
      "LastModified" : "2017-09-12T12:39:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# SuperMUC\n\n# set(ENV{CXX} icc) # compiler for serial build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# compiler for parallel build\n",
        "Line" : 3,
        "CharPositionInLine" : 19
      },
      "CommentCount" : 2
    },
    "config/archive/thunder.cmake" : {
      "ObjectId" : "f1ff3f6e22ea900588dc9a47b3ac4217f776e09a",
      "LastModified" : "2017-09-12T12:39:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Thunder\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# C compiler for parallel build\n\n# C++ compiler for parallel build\n",
        "Line" : 3,
        "CharPositionInLine" : 23
      },
      "2" : {
        "Text" : "# C compiler for serial build\n\n# C++ compiler for serial build\n",
        "Line" : 6,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 3
    },
    "config/cartesius.cmake" : {
      "ObjectId" : "389929f8ec488c74783572f5dec4d11c96606f9e",
      "LastModified" : "2018-05-24T07:52:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Cartesius CPU build with Intel 18.\n\n# Tested with:\n\n#module purge\n\n#module load compilerwrappers\n\n#module load mpi/impi/5.0.3.048\n\n#module load bull\n\n#module load surfsara\n\n#module load gcc/4.9.3\n\n#module load c/intel/18.0.2\n\n#module load fortran/intel/18.0.2\n\n#module load hdf5/serial/intel/1.8.10-patch1\n\n#module load netcdf-cxx/serial/intel/4.3.0\n\n#module load netcdf-fortran/serial/intel/4.4.2 \n\n#module load netcdf/serial/intel/4.3.3.1 \n\n#module load szip/gnu/2.1\n\n#module load fftw3/intel/3.3.3\n\n#module load cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# C compiler for parallel build\n\n# C++ compiler for parallel build\n",
        "Line" : 20,
        "CharPositionInLine" : 24
      },
      "2" : {
        "Text" : "# C compiler for parallel build\n\n# C++ compiler for serial build\n",
        "Line" : 23,
        "CharPositionInLine" : 21
      },
      "3" : {
        "Text" : "# C compiler for serial build\n\n# C++ compiler for serial build\n",
        "Line" : 28,
        "CharPositionInLine" : 20
      },
      "4" : {
        "Text" : "#set(FFTW_INCLUDE_DIR \"/home/bstratum/tools/fftw3_linked/include\")\n\n#set(FFTW_LIB         \"/home/bstratum/tools/fftw3_linked/lib/libfftw3.a\")\n\n#set(HDF5_LIB_1 \"/home/bstratum/tools/hdf5-1.8.17-gcc480/lib/libhdf5.a\")\n\n#set(HDF5_LIB_2 \"/home/bstratum/tools/hdf5-1.8.17-gcc480/lib/libhdf5_hl.a\")\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#set(INCLUDE_DIRS ${FFTW_INCLUDE_DIR} ${NETCDF_INCLUDE_DIR} ${NETCDF_INCLUDE_CXX_DIR})\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "config/juqueen.cmake" : {
      "ObjectId" : "6d12c3667b17921ad21d2ea3bd318c3cc1ed794a",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# JUQUEEN\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "config/macbook_brew.cmake" : {
      "ObjectId" : "8aebb0c0a3f06c4bc01a89051cd75ea86a4c83ac",
      "LastModified" : "2018-02-16T19:02:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# MacBook\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# C compiler for parallel build\n\n# C++ compiler for parallel build\n",
        "Line" : 3,
        "CharPositionInLine" : 23
      },
      "2" : {
        "Text" : "# C compiler for serial build\n\n# C++ compiler for serial build\n",
        "Line" : 6,
        "CharPositionInLine" : 24
      },
      "CommentCount" : 3
    },
    "config/owens.cmake" : {
      "ObjectId" : "c86c9080ddaeae1c3fa75290d72e93ce066924c7",
      "LastModified" : "2018-02-16T19:02:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# OSC-Owens cluster\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# C compiler for serial build\n\n# C++ compiler for serial build\n",
        "Line" : 30,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "# compiler for serial build\n",
        "Line" : 41,
        "CharPositionInLine" : 19
      },
      "3" : {
        "Text" : "# compiler for parallel build\n",
        "Line" : 42,
        "CharPositionInLine" : 20
      },
      "CommentCount" : 4
    },
    "config/ubuntu.cmake" : {
      "ObjectId" : "a9f112f639c5ff5ee52eab2c0f0115d62476630c",
      "LastModified" : "2018-02-16T19:02:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Ubuntu 16.04\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# C compiler for parallel build\n\n# C++ compiler for parallel build\n",
        "Line" : 3,
        "CharPositionInLine" : 23
      },
      "2" : {
        "Text" : "# C compiler for serial build\n\n# C++ compiler for serial build\n",
        "Line" : 6,
        "CharPositionInLine" : 20
      },
      "CommentCount" : 3
    },
    "config/yellowstone.cmake" : {
      "ObjectId" : "12656eaba4529927c2e84d57f694cce89dcd0320",
      "LastModified" : "2018-02-16T19:02:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Yellowstone\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# C compiler for parallel build\n\n# C++ compiler for parallel build\n",
        "Line" : 3,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "# C compiler for serial build\n\n# C++ compiler for serial build\n",
        "Line" : 6,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 3
    },
    "main/CMakeLists.txt" : {
      "ObjectId" : "959829763ce395125ed1ba9c33fa7d857c420080",
      "LastModified" : "2018-02-16T19:02:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n#  MicroHH\n\n#  Copyright (c) 2011-2017 Chiel van Heerwaarden\n\n#  Copyright (c) 2011-2017 Thijs Heus\n\n#  Copyright (c) 2014-2017 Bart van Stratum\n\n# \n\n#  This file is part of MicroHH\n\n# \n\n#  MicroHH is free software: you can redistribute it and/or modify\n\n#  it under the terms of the GNU General Public License as published by\n\n#  the Free Software Foundation, either version 3 of the License, or\n\n#  (at your option) any later version.\n\n# \n\n#  MicroHH is distributed in the hope that it will be useful,\n\n#  but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n#  GNU General Public License for more details.\n\n# \n\n#  You should have received a copy of the GNU General Public License\n\n#  along with MicroHH.  If not, see <http://www.gnu.org/licenses/>.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# retrieve the git hash from the current commit\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# send a precompiler statement replacing the git hash\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "e2115795c064678e35f314bf292a5a2ce94ac1e0",
      "LastModified" : "2018-02-16T19:02:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n#  MicroHH\n\n#  Copyright (c) 2011-2017 Chiel van Heerwaarden\n\n#  Copyright (c) 2011-2017 Thijs Heus\n\n#  Copyright (c) 2014-2017 Bart van Stratum\n\n# \n\n#  This file is part of MicroHH\n\n# \n\n#  MicroHH is free software: you can redistribute it and/or modify\n\n#  it under the terms of the GNU General Public License as published by\n\n#  the Free Software Foundation, either version 3 of the License, or\n\n#  (at your option) any later version.\n\n# \n\n#  MicroHH is distributed in the hope that it will be useful,\n\n#  but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n#  GNU General Public License for more details.\n\n# \n\n#  You should have received a copy of the GNU General Public License\n\n#  along with MicroHH.  If not, see <http://www.gnu.org/licenses/>.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#include_directories(${INCLUDE_DIRS} \"../include\")\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "CMAKE" : 24
  },
  "ElapsedTime" : 1486
}