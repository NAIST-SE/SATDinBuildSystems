{
  "Repository" : "14255069",
  "Revision" : "HEAD",
  "ObjectId" : "088b657a26d5f909bfe42fd7b5fec4d96265afe9",
  "CommitTime" : "2017-01-14T14:55:31Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "1178dcd56164d0083179cfa88779c6fb12701660",
      "LastModified" : "2017-01-01T18:17:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Silence CMake warnings\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set version\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set up packaging\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Options\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable QML debugger for debug or release with debug info builds\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ECM setup\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Macros\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Require at least gcc 4.8\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Adjusting CMAKE_C_FLAGS to get Wayland protocols to compile\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Add custom uninstall target\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ECM 1.7.0 provides this target, so we can't roll our own\n",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Find Qt5\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# OpenGL\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# OpenGL ES\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# EGL\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# GL requirements\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# brcm\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# X11\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Wayland\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Wayland protocols\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# systemd\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# libsystem-daemon was merged to libsystem on systemd 208->209\n",
        "Line" : 149,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# xkbcommon\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Subdirectories\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Display featute summary\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "cmake/CheckFileExists.cmake" : {
      "ObjectId" : "d136ebb87d042e10179c7b53828598bac655a4f3",
      "LastModified" : "2013-01-02T22:07:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n# Copyright (C) 2012-2013 Pier Luigi Fiorini <pierluigi.fiorini@gmail.com>\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n#\n\n# * Neither the name of Pier Luigi Fiorini nor the names of his\n\n#   contributors may be used to endorse or promote products derived\n\n#   from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindBcmHost.cmake" : {
      "ObjectId" : "0322b1dc821095496cfce1f2d1ff69a5ce77f8ce",
      "LastModified" : "2016-04-10T00:32:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindBcmHost\n\n# -----------\n\n#\n\n# Try to find Broadcom libraries.\n\n#\n\n# It is meant as a drop-in replacement for FindEGL.cmake on Raspberry Pi\n\n# systems.\n\n#\n\n# This will define the following variables:\n\n#\n\n# ``BcmHost_FOUND``\n\n#     True if bcm_host is available\n\n# ``BcmHost_LIBRARIES``\n\n#     This can be passed to target_link_libraries() instead of the ``BcmHost::BcmHost``\n\n#     target\n\n# ``BcmHost_INCLUDE_DIRS``\n\n#     This should be passed to target_include_directories() if the target is not\n\n#     used for linking\n\n#\n\n# If ``BcmHost_FOUND`` is TRUE, it will also define the following imported target:\n\n#\n\n# ``BcmHost::BcmHost``\n\n#     The BcmHost library\n\n# ``BcmHost::GLESv2``\n\n#     The GLESv2 library\n\n# ``BcmHost::EGL``\n\n#     The EGL library\n\n#\n\n# In general we recommend using the imported target, as it is easier to use.\n\n# Bear in mind, however, that if the target is in the link interface of an\n\n# exported library, it must be made available by the package config file.\n\n#\n\n# Since pre-1.0.0.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2015 Pier Luigi Fiorini <pierluigi.fiorini@gmail.com>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# 1. Redistributions of source code must retain the copyright\n\n#    notice, this list of conditions and the following disclaimer.\n\n# 2. Redistributions in binary form must reproduce the copyright\n\n#    notice, this list of conditions and the following disclaimer in the\n\n#    documentation and/or other materials provided with the distribution.\n\n# 3. The name of the author may not be used to endorse or promote products\n\n#    derived from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n\n# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n\n# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n\n# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\n\n# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n\n# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n\n# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Compatibility variables\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/FindFontconfig.cmake" : {
      "ObjectId" : "d95e46b4844b147a1a3016fee86eb94dda876384",
      "LastModified" : "2016-04-10T00:32:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the  Fontconfig\n\n# Once done this will define\n\n#\n\n#  FONTCONFIG_FOUND - system has Fontconfig\n\n#  FONTCONFIG_INCLUDE_DIR - The include directory to use for the fontconfig headers\n\n#  FONTCONFIG_LIBRARIES - Link these to use FONTCONFIG\n\n#  FONTCONFIG_DEFINITIONS - Compiler switches required for using FONTCONFIG\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006,2007 Laurent Montel, <montel@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "cmake/FindLibdl.cmake" : {
      "ObjectId" : "19c5c8fda4f9ddee1131b959d4a889874ccf04e6",
      "LastModified" : "2016-04-10T06:52:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindLibdl\n\n# ---------\n\n#\n\n# Try to find libdl on a Unix system.\n\n#\n\n# This will define the following variables:\n\n#\n\n# ``Libdl_FOUND``\n\n#     True if (the requested version of) libdl is available\n\n# ``Libdl_LIBRARIES``\n\n#     This can be passed to target_link_libraries() instead of the ``Libdl::Libdl``\n\n#     target\n\n# ``Libdl_INCLUDE_DIRS``\n\n#     This should be passed to target_include_directories() if the target is not\n\n#     used for linking\n\n#\n\n# If ``Libdl_FOUND`` is TRUE, it will also define the following imported target:\n\n#\n\n# ``Libdl::Libdl``\n\n#     The libdl library\n\n#\n\n# In general we recommend using the imported target, as it is easier to use.\n\n# Bear in mind, however, that if the target is in the link interface of an\n\n# exported library, it must be made available by the package config file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2016 Pier Luigi Fiorini <pierluigi.fiorini@gmail.com>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# 1. Redistributions of source code must retain the copyright\n\n#    notice, this list of conditions and the following disclaimer.\n\n# 2. Redistributions in binary form must reproduce the copyright\n\n#    notice, this list of conditions and the following disclaimer in the\n\n#    documentation and/or other materials provided with the distribution.\n\n# 3. The name of the author may not be used to endorse or promote products\n\n#    derived from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n\n# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n\n# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n\n# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\n\n# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n\n# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n\n# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# compatibility variables\n",
        "Line" : 91,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "cmake/FindLibdrm.cmake" : {
      "ObjectId" : "ebaa87dc9aeb52daa08dd124fbb463c1656ae973",
      "LastModified" : "2016-04-10T06:52:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindLibdrm\n\n# -------\n\n#\n\n# Try to find libdrm on a Unix system.\n\n#\n\n# This will define the following variables:\n\n#\n\n# ``Libdrm_FOUND``\n\n#     True if (the requested version of) libdrm is available\n\n# ``Libdrm_VERSION``\n\n#     The version of libdrm\n\n# ``Libdrm_LIBRARIES``\n\n#     This can be passed to target_link_libraries() instead of the ``Libdrm::Libdrm``\n\n#     target\n\n# ``Libdrm_INCLUDE_DIRS``\n\n#     This should be passed to target_include_directories() if the target is not\n\n#     used for linking\n\n# ``Libdrm_DEFINITIONS``\n\n#     This should be passed to target_compile_options() if the target is not\n\n#     used for linking\n\n#\n\n# If ``Libdrm_FOUND`` is TRUE, it will also define the following imported target:\n\n#\n\n# ``Libdrm::Libdrm``\n\n#     The libdrm library\n\n#\n\n# In general we recommend using the imported target, as it is easier to use.\n\n# Bear in mind, however, that if the target is in the link interface of an\n\n# exported library, it must be made available by the package config file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2014 Alex Merry <alex.merry@kde.org>\n\n# Copyright 2014 Martin Gräßlin <mgraesslin@kde.org>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# 1. Redistributions of source code must retain the copyright\n\n#    notice, this list of conditions and the following disclaimer.\n\n# 2. Redistributions in binary form must reproduce the copyright\n\n#    notice, this list of conditions and the following disclaimer in the\n\n#    documentation and/or other materials provided with the distribution.\n\n# 3. The name of the author may not be used to endorse or promote products\n\n#    derived from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n\n# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n\n# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n\n# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\n\n# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n\n# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n\n# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 68,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# compatibility variables\n",
        "Line" : 112,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "cmake/FindLibinput.cmake" : {
      "ObjectId" : "b856e0bbcb6c2072ab355acf786c3db7ab5ee03c",
      "LastModified" : "2016-04-10T06:52:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindLibinput\n\n# -------\n\n#\n\n# Try to find libinput on a Unix system.\n\n#\n\n# This will define the following variables:\n\n#\n\n# ``Libinput_FOUND``\n\n#     True if (the requested version of) libinput is available\n\n# ``Libinput_VERSION``\n\n#     The version of libinput\n\n# ``Libinput_LIBRARIES``\n\n#     This can be passed to target_link_libraries() instead of the ``Libinput::Libinput``\n\n#     target\n\n# ``Libinput_INCLUDE_DIRS``\n\n#     This should be passed to target_include_directories() if the target is not\n\n#     used for linking\n\n# ``Libinput_DEFINITIONS``\n\n#     This should be passed to target_compile_options() if the target is not\n\n#     used for linking\n\n#\n\n# If ``Libinput_FOUND`` is TRUE, it will also define the following imported target:\n\n#\n\n# ``Libinput::Libinput``\n\n#     The libinput library\n\n#\n\n# In general we recommend using the imported target, as it is easier to use.\n\n# Bear in mind, however, that if the target is in the link interface of an\n\n# exported library, it must be made available by the package config file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2014 Alex Merry <alex.merry@kde.org>\n\n# Copyright 2014 Martin Gräßlin <mgraesslin@kde.org>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# 1. Redistributions of source code must retain the copyright\n\n#    notice, this list of conditions and the following disclaimer.\n\n# 2. Redistributions in binary form must reproduce the copyright\n\n#    notice, this list of conditions and the following disclaimer in the\n\n#    documentation and/or other materials provided with the distribution.\n\n# 3. The name of the author may not be used to endorse or promote products\n\n#    derived from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n\n# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n\n# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n\n# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\n\n# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n\n# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n\n# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 68,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# compatibility variables\n",
        "Line" : 111,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "cmake/FindOpenGLES.cmake" : {
      "ObjectId" : "60b07e2934addda94e2c144cb7a4861f14059974",
      "LastModified" : "2016-04-10T06:52:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find OpenGLES\n\n# Once done this will define\n\n#  \n\n#  OPENGLES_FOUND           - system has OpenGLES and EGL\n\n#  OPENGL_EGL_FOUND         - system has EGL\n\n#  OPENGLES_INCLUDE_DIR     - the GLES include directory\n\n#  OPENGLES_LIBRARY\t    - the GLES library\n\n#  OPENGLES_EGL_INCLUDE_DIR - the EGL include directory\n\n#  OPENGLES_EGL_LIBRARY\t    - the EGL library\n\n#  OPENGLES_LIBRARIES       - all libraries needed for OpenGLES\n\n#  OPENGLES_INCLUDES        - all includes needed for OpenGLES\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindQt5PlatformSupport.cmake" : {
      "ObjectId" : "d7d6580ca11af5524ed97557e0b905a94fc8a879",
      "LastModified" : "2016-04-10T06:52:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindQt5PlatformSupport\n\n# -------\n\n#\n\n# Try to find Qt5PlatformSupport on a Unix system.\n\n#\n\n# This will define the following variables:\n\n#\n\n# ``Qt5PlatformSupport_FOUND``\n\n#     True if (the requested version of) Qt5PlatformSupport is available\n\n# ``Qt5PlatformSupport_VERSION``\n\n#     The version of Qt5PlatformSupport\n\n# ``Qt5PlatformSupport_LIBRARIES``\n\n#     This can be passed to target_link_libraries() instead of the ``Qt5PlatformSupport::Qt5PlatformSupport``\n\n#     target\n\n# ``Qt5PlatformSupport_INCLUDE_DIRS``\n\n#     This should be passed to target_include_directories() if the target is not\n\n#     used for linking\n\n# ``Qt5PlatformSupport_DEFINITIONS``\n\n#     This should be passed to target_compile_options() if the target is not\n\n#     used for linking\n\n#\n\n# If ``Qt5PlatformSupport_FOUND`` is TRUE, it will also define the following imported target:\n\n#\n\n# ``Qt5PlatformSupport::Qt5PlatformSupport``\n\n#     The Qt5PlatformSupport library\n\n#\n\n# In general we recommend using the imported target, as it is easier to use.\n\n# Bear in mind, however, that if the target is in the link interface of an\n\n# exported library, it must be made available by the package config file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2014 Alex Merry <alex.merry@kde.org>\n\n# Copyright 2014 Martin Gräßlin <mgraesslin@kde.org>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# 1. Redistributions of source code must retain the copyright\n\n#    notice, this list of conditions and the following disclaimer.\n\n# 2. Redistributions in binary form must reproduce the copyright\n\n#    notice, this list of conditions and the following disclaimer in the\n\n#    documentation and/or other materials provided with the distribution.\n\n# 3. The name of the author may not be used to endorse or promote products\n\n#    derived from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n\n# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n\n# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n\n# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\n\n# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n\n# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n\n# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# compatibility variables\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/FindUDev.cmake" : {
      "ObjectId" : "9d0f21d9b4d91a2eb4e8b8da302208585f9af23e",
      "LastModified" : "2016-04-10T06:52:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the UDev library\n\n# Once done this will define\n\n#\n\n#  UDEV_FOUND - system has UDev\n\n#  UDEV_INCLUDE_DIR - the libudev include directory\n\n#  UDEV_LIBS - The libudev libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2010, Rafael Fernández López, <ereslibre@kde.org>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# 1. Redistributions of source code must retain the above copyright\n\n#    notice, this list of conditions and the following disclaimer.\n\n# 2. Redistributions in binary form must reproduce the above copyright\n\n#    notice, this list of conditions and the following disclaimer in the\n\n#    documentation and/or other materials provided with the distribution.\n\n# 3. Neither the name of the University nor the names of its contributors\n\n#    may be used to endorse or promote products derived from this software\n\n#    without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND\n\n# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE\n\n# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\n\n# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n\n# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n\n# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n\n# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n\n# SUCH DAMAGE.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Findgbm.cmake" : {
      "ObjectId" : "6dfc895daace87986e568b319b9d6f4287fd39d6",
      "LastModified" : "2016-04-10T06:52:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# Findgbm\n\n# -------\n\n#\n\n# Try to find gbm on a Unix system.\n\n#\n\n# This will define the following variables:\n\n#\n\n# ``gbm_FOUND``\n\n#     True if (the requested version of) gbm is available\n\n# ``gbm_VERSION``\n\n#     The version of gbm\n\n# ``gbm_LIBRARIES``\n\n#     This can be passed to target_link_libraries() instead of the ``gbm::gbm``\n\n#     target\n\n# ``gbm_INCLUDE_DIRS``\n\n#     This should be passed to target_include_directories() if the target is not\n\n#     used for linking\n\n# ``gbm_DEFINITIONS``\n\n#     This should be passed to target_compile_options() if the target is not\n\n#     used for linking\n\n#\n\n# If ``gbm_FOUND`` is TRUE, it will also define the following imported target:\n\n#\n\n# ``gbm::gbm``\n\n#     The gbm library\n\n#\n\n# In general we recommend using the imported target, as it is easier to use.\n\n# Bear in mind, however, that if the target is in the link interface of an\n\n# exported library, it must be made available by the package config file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2014 Alex Merry <alex.merry@kde.org>\n\n# Copyright 2014 Martin Gräßlin <mgraesslin@kde.org>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# 1. Redistributions of source code must retain the copyright\n\n#    notice, this list of conditions and the following disclaimer.\n\n# 2. Redistributions in binary form must reproduce the copyright\n\n#    notice, this list of conditions and the following disclaimer in the\n\n#    documentation and/or other materials provided with the distribution.\n\n# 3. The name of the author may not be used to endorse or promote products\n\n#    derived from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n\n# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n\n# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n\n# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\n\n# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n\n# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n\n# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 68,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# compatibility variables\n",
        "Line" : 111,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "cmake/GenerateHeaders.cmake" : {
      "ObjectId" : "069ef5bd86cf0757853a60c1b2f7b472022bff43",
      "LastModified" : "2016-04-10T06:52:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# ECMGenerateHeaders\n\n# ------------------\n\n#\n\n# Generate C/C++ CamelCase forwarding headers.\n\n#\n\n# ::\n\n#\n\n#   generate_headers(<camelcase_forwarding_headers_var>\n\n#       HEADER_NAMES <CamelCaseName> [<CamelCaseName> [...]]\n\n#       [ORIGINAL <CAMELCASE|LOWERCASE>]\n\n#       [OUTPUT_DIR <output_dir>]\n\n#       [PREFIX <prefix>]\n\n#       [REQUIRED_HEADERS <variable>]\n\n#       [COMMON_HEADER <HeaderName>]\n\n#       [RELATIVE <relative_path>])\n\n#\n\n# For each CamelCase header name passed to HEADER_NAMES, a file of that name\n\n# will be generated that will include a version with ``.h`` appended.\n\n# For example, the generated header ``ClassA`` will include ``classa.h`` (or\n\n# ``ClassA.h``, see ORIGINAL).\n\n# If a CamelCaseName consists of multiple comma-separated files, e.g.\n\n# ``ClassA,ClassB,ClassC``, then multiple camelcase header files will be\n\n# generated which are redirects to the first header file.\n\n# The file locations of these generated headers will be stored in\n\n# <camelcase_forwarding_headers_var>.\n\n#\n\n# ORIGINAL specifies how the name of the original header is written: lowercased\n\n# or also camelcased.  The default is LOWERCASE. Since 1.8.0.\n\n#\n\n# PREFIX places the generated headers in subdirectories.  This should be a\n\n# CamelCase name like ``KParts``, which will cause the CamelCase forwarding\n\n# headers to be placed in the ``KParts`` directory (e.g. ``KParts/Part``).  It\n\n# will also, for the convenience of code in the source distribution, generate\n\n# forwarding headers based on the original names (e.g. ``kparts/part.h``).  This\n\n# allows includes like ``\"#include <KParts/part.h>\"`` to be used before\n\n# installation, as long as the include_directories are set appropriately.\n\n#\n\n# OUTPUT_DIR specifies where the files will be generated; this should be within\n\n# the build directory. By default, ``${CMAKE_CURRENT_BINARY_DIR}`` will be used.\n\n# This option can be used to avoid file conflicts.\n\n#\n\n# REQUIRED_HEADERS specifies an output variable name where all the required\n\n# headers will be appended so that they can be installed together with the\n\n# generated ones.  This is mostly intended as a convenience so that adding a new\n\n# header to a project only requires specifying the CamelCase variant in the\n\n# CMakeLists.txt file; the original variant will then be added to this\n\n# variable.\n\n#\n\n# COMMON_HEADER generates an additional convenience header which includes all\n\n# other header files.\n\n#\n\n# The RELATIVE argument indicates where the original headers can be found\n\n# relative to CMAKE_CURRENT_SOURCE_DIR.  It does not affect the generated\n\n# CamelCase forwarding files, but generate_headers() uses it when checking\n\n# that the original header exists, and to generate originally named forwarding\n\n# headers when PREFIX is set.\n\n#\n\n# To allow other parts of the source distribution (eg: tests) to use the\n\n# generated headers before installation, it may be desirable to set the\n\n# INCLUDE_DIRECTORIES property for the library target to output_dir.  For\n\n# example, if OUTPUT_DIR is CMAKE_CURRENT_BINARY_DIR (the default), you could do\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#   target_include_directories(MyLib PUBLIC \"$<BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}>\")\n\n#\n\n# Example usage (without PREFIX):\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#   generate_headers(\n\n#       MyLib_FORWARDING_HEADERS\n\n#       HEADERS\n\n#           MLFoo\n\n#           MLBar\n\n#           # etc\n\n#       REQUIRED_HEADERS MyLib_HEADERS\n\n#       COMMON_HEADER MLGeneral\n\n#   )\n\n#   install(FILES ${MyLib_FORWARDING_HEADERS} ${MyLib_HEADERS}\n\n#           DESTINATION ${CMAKE_INSTALL_PREFIX}/include\n\n#           COMPONENT Devel)\n\n#\n\n# Example usage (with PREFIX):\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#   generate_headers(\n\n#       MyLib_FORWARDING_HEADERS\n\n#       HEADERS\n\n#           Foo\n\n#           # several classes are contained in bar.h, so generate\n\n#           # additional files\n\n#           Bar,BarList\n\n#           # etc\n\n#       PREFIX MyLib\n\n#       REQUIRED_HEADERS MyLib_HEADERS\n\n#   )\n\n#   install(FILES ${MyLib_FORWARDING_HEADERS} ${MyLib_HEADERS}\n\n#           DESTINATION ${CMAKE_INSTALL_PREFIX}/include/MyLib\n\n#           COMPONENT Devel)\n\n#\n\n# Since pre-1.0.0.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2013 Aleix Pol Gonzalez <aleixpol@blue-systems.com>\n\n# Copyright 2014 Alex Merry <alex.merry@kdemail.net>\n\n# Copyright 2015 Patrick Spendrin <patrick.spendrin@kdab.com>\n\n# Copyright 2015 Pier Luigi Fiorini <pierluigi.fiorini@gmail.com>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file COPYING-CMAKE-SCRIPTS for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of extra-cmake-modules, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# default\n",
        "Line" : 139,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Make sure EGH_RELATIVE is /-terminated when it's not empty\n",
        "Line" : 150,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Local forwarding header, for namespaced headers, e.g. KParts/part.h\n",
        "Line" : 184,
        "CharPositionInLine" : 16
      },
      "5" : {
        "Text" : "#combine required headers into 1 big convenience header\n",
        "Line" : 216,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 6
    },
    "cmake/GetGitRevision.cmake" : {
      "ObjectId" : "72cf9be34e3796df0c3d0add5674601727e9fb23",
      "LastModified" : "2016-04-10T06:52:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n# Copyright (C) 2012-2013 Pier Luigi Fiorini <pierluigi.fiorini@gmail.com>\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n#\n\n# * Neither the name of Pier Luigi Fiorini nor the names of his\n\n#   contributors may be used to endorse or promote products derived\n\n#   from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/PrivateHeaders.cmake" : {
      "ObjectId" : "bc767035ef5e4ce34047c12e3616f8a7b2799991",
      "LastModified" : "2016-04-10T06:52:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# PrivateHeaders\n\n# ------------------\n\n#\n\n# Generate forwarding private headers.\n\n#\n\n# ::\n\n#\n\n#   private_headers(<forwarding_headers_var>\n\n#       HEADERS <path/to/private/header> [<path/to/private/header> [...]]\n\n#       [OUTPUT_DIR <output_dir>]\n\n#\n\n# For each private header path passed to HEADERS, a redirect will be created.\n\n# The file locations of these generated headers will be stored in\n\n# <forwarding_headers_var>.\n\n#\n\n# OUTPUT_DIR specifies where the files will be generated; this should be within\n\n# the build directory. By default, ``${CMAKE_CURRENT_BINARY_DIR}`` will be used.\n\n# This option can be used to avoid file conflicts.\n\n#\n\n# Example usage:\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#   private_headers(\n\n#       MyLib_PRIVATE_HEADERS\n\n#       HEADERS\n\n#           ${CMAKE_CURRENT_SOURCE_DIR}/header_p.h\n\n#           ${CMAKE_CURRENT_BINARY_DIR}/generatedheader.h\n\n#           # etc\n\n#   )\n\n#   install(FILES ${MyLib_PRIVATE_HEADERS}\n\n#           DESTINATION ${CMAKE_INSTALL_PREFIX}/include/MyLib/private\n\n#           COMPONENT Devel)\n\n#\n\n# Since pre-1.0.0.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2015 Pier Luigi Fiorini <pierluigi.fiorini@gmail.com>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file COPYING-CMAKE-SCRIPTS for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of greenisland, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "compositor/CMakeLists.txt" : {
      "ObjectId" : "d52cb62b02b69ff02a30ad8b1a11bcd833137c6c",
      "LastModified" : "2016-09-18T09:00:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "data/CMakeLists.txt" : {
      "ObjectId" : "ea48550af177a23d38de3604bc64b379eb398070",
      "LastModified" : "2016-04-10T06:52:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "data/screen/CMakeLists.txt" : {
      "ObjectId" : "a103ea5658a5ce143597c502d9b1c7148a7c3995",
      "LastModified" : "2016-04-10T06:52:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "declarative/CMakeLists.txt" : {
      "ObjectId" : "eb87624bf13c38d5b503845fec01e26a6e3a37c7",
      "LastModified" : "2016-09-18T09:00:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "declarative/compositor/CMakeLists.txt" : {
      "ObjectId" : "0e93554405e3a2eebe7c6d87fa378ade172a43ea",
      "LastModified" : "2016-09-18T09:00:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Qt 5.5.x doesn't define Qt5Qml and Qt5Quick private\n\n# include directories, so we have to fix it\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "declarative/xwayland/CMakeLists.txt" : {
      "ObjectId" : "f4534c4f0788e1804355334f6c450261717f2698",
      "LastModified" : "2016-09-18T09:00:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Qt 5.5.x doesn't define Qt5Qml and Qt5Quick private\n\n# include directories, so we have to fix it\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# All the required XCB components\n\n#find_package(XCB\n\n#    REQUIRED COMPONENTS\n\n#        DAMAGE\n\n#        SYNC\n\n#        RANDR\n\n#        KEYSYMS\n\n#        IMAGE\n\n#        SHM\n\n#        GLX\n\n#    OPTIONAL_COMPONENTS\n\n#        ICCCM\n\n#        CURSOR\n\n#)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "headers/CMakeLists.txt" : {
      "ObjectId" : "df32cd0fe1273d20f5e852e383d22d91ba9661ac",
      "LastModified" : "2016-09-18T09:00:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create the config.h header file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create the cmakedirs.h header file\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "launcher/CMakeLists.txt" : {
      "ObjectId" : "3297a0dec4ed8776e606784293d3997f597c6a64",
      "LastModified" : "2016-09-18T09:00:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/CMakeLists.txt" : {
      "ObjectId" : "0ab9a2e493700762318621d44ccd27e18f558d8d",
      "LastModified" : "2016-09-18T09:00:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# System copy of GreenIsland::Platform\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#if(NOT ENABLE_ONLY_EGLDEVICEINTEGRATION)\n\n#    add_subdirectory(extensions)\n\n#endif()\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/egldeviceintegration/CMakeLists.txt" : {
      "ObjectId" : "8a16a7599e951f242b72f873c0933e69c0432d26",
      "LastModified" : "2016-09-18T09:00:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/egldeviceintegration/brcm/CMakeLists.txt" : {
      "ObjectId" : "c32b629a1ca05d9dbefe9e652f84ef19f1fb81cb",
      "LastModified" : "2016-09-18T09:00:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/egldeviceintegration/kms/CMakeLists.txt" : {
      "ObjectId" : "d4efd074456c42f43765bd6d5e2f1b0a1c9d2910",
      "LastModified" : "2016-09-18T09:00:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/egldeviceintegration/mali/CMakeLists.txt" : {
      "ObjectId" : "098bb28095cd8ac8b415632dd835d5fac78b56d6",
      "LastModified" : "2016-09-18T09:00:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/egldeviceintegration/viv/CMakeLists.txt" : {
      "ObjectId" : "7b3d50d67b77e1334d9300cec579064bb307e48a",
      "LastModified" : "2016-09-18T09:00:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/egldeviceintegration/viv/eglfs_viv.pro" : {
      "ObjectId" : "fc0533127cba67b05e08f8f7686d44d5e83f8e9c",
      "LastModified" : "2016-09-18T09:00:30Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "plugins/egldeviceintegration/wayland/CMakeLists.txt" : {
      "ObjectId" : "d0332f8f93e5e90210ee868aeb35ef1c9ac03512",
      "LastModified" : "2016-09-18T09:00:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/egldeviceintegration/x11/CMakeLists.txt" : {
      "ObjectId" : "6d85c81062d935b65af49484ed27ad922255251d",
      "LastModified" : "2016-09-18T09:00:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/extensions/CMakeLists.txt" : {
      "ObjectId" : "b15e004d1437ab9e1044d75e9f29a92fb1760c0d",
      "LastModified" : "2016-09-18T09:00:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/extensions/plasma/CMakeLists.txt" : {
      "ObjectId" : "c34cd1edbcaa678816abf472043770c38c60dac6",
      "LastModified" : "2016-09-18T09:00:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/extensions/xwayland/CMakeLists.txt" : {
      "ObjectId" : "2edacc115cf42e01c53ba92cd135cc52f09416ee",
      "LastModified" : "2016-09-18T09:00:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# All the required XCB components\n\n#find_package(XCB\n\n#    REQUIRED COMPONENTS\n\n#        DAMAGE\n\n#        SYNC\n\n#        RANDR\n\n#        KEYSYMS\n\n#        IMAGE\n\n#        SHM\n\n#        GLX\n\n#    OPTIONAL_COMPONENTS\n\n#        ICCCM\n\n#        CURSOR\n\n#)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "qpa/CMakeLists.txt" : {
      "ObjectId" : "be994d971e3e34a3d401c179dd2ce3bc3d778642",
      "LastModified" : "2016-09-18T09:00:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "shells/CMakeLists.txt" : {
      "ObjectId" : "6c445830981196e5fe408be47d941d8fccee6f00",
      "LastModified" : "2016-09-18T09:00:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "065783d7ab6d218b716945f28fb116d1ba026561",
      "LastModified" : "2016-09-18T11:31:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/client/CMakeLists.txt" : {
      "ObjectId" : "718e73e9edd36deb9e457a4a8eac29d9983b31d0",
      "LastModified" : "2016-10-01T10:39:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Avoid warnings regarding wl_buffer being deprecated\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMake package version\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CMake package config\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# qmake pri file\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# pkg-config file\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#ecm_generate_pkgconfig_file(BASE_NAME GreenIslandClient\n\n#                            LIB_NAME GreenIslandClient\n\n#                            DEPS \"Qt5Core Qt5Gui\"\n\n#                            FILENAME_VAR PKGCONFIG_FILENAME\n\n#                            INCLUDE_INSTALL_DIR \"${HAWAII_INCLUDEDIR} ${GREENISLAND_INCLUDEDIR}\"\n\n#                            INSTALL)\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/hardwareintegration/CMakeLists.txt" : {
      "ObjectId" : "6de68e84d296d0a1d6475afd8d8c81876b3b803a",
      "LastModified" : "2016-09-18T09:00:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/hardwareintegration/brcm-egl/CMakeLists.txt" : {
      "ObjectId" : "8a40cd59b44edb222e1d0fb60ba48ea9025fc98d",
      "LastModified" : "2016-09-18T09:00:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/hardwareintegration/drm-egl-server/drm-egl-server.pri" : {
      "ObjectId" : "cd2e2471917e571a08c9dad6055a8f4fd5ff10fc",
      "LastModified" : "2016-09-18T09:00:30Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "src/hardwareintegration/libhybris-egl-server/libhybris-egl-server.pri" : {
      "ObjectId" : "84d9013512a18d947ef22e64bcd7f4a3322ce146",
      "LastModified" : "2016-09-18T09:00:30Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "src/hardwareintegration/wayland-egl/CMakeLists.txt" : {
      "ObjectId" : "e3e80cb220a9e770b555a4b2a2fc7f02267271f1",
      "LastModified" : "2016-09-18T09:00:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/hardwareintegration/xcomposite-egl/CMakeLists.txt" : {
      "ObjectId" : "b91d368bd8fcffb302f6ac466f8a762884d61301",
      "LastModified" : "2016-09-18T09:00:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/hardwareintegration/xcomposite-glx/CMakeLists.txt" : {
      "ObjectId" : "472708f2babf4f2fe078f1a28fbdfcc00323d65c",
      "LastModified" : "2016-09-18T09:00:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/hardwareintegration/xcomposite_share/CMakeLists.txt" : {
      "ObjectId" : "62ec93ee5967b68c9589443dc260160e023ca967",
      "LastModified" : "2016-09-18T09:00:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/platform/CMakeLists.txt" : {
      "ObjectId" : "5de9b56f147b2c28bf6e42fc058354d7d67232cc",
      "LastModified" : "2016-09-18T11:31:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# udev\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# libinput\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# gio\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# libdl\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Qt5PlatformSupport\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# CMake package version\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# CMake package config\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# qmake pri file\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# pkg-config file\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#ecm_generate_pkgconfig_file(BASE_NAME GreenIslandPlatform\n\n#                            LIB_NAME GreenIslandPlatform\n\n#                            DEPS \"Qt5Core Qt5DBus Qt5Gui xkbcommon\"\n\n#                            FILENAME_VAR PKGCONFIG_FILENAME\n\n#                            INCLUDE_INSTALL_DIR \"${HAWAII_INCLUDEDIR} ${GREENISLAND_INCLUDEDIR}\"\n\n#                            INSTALL)\n",
        "Line" : 275,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "src/server/CMakeLists.txt" : {
      "ObjectId" : "774debf4b564dfb266b6989c7234433a3013cfe0",
      "LastModified" : "2016-09-18T11:31:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Qt 5.5.x doesn't define Qt5Qml and Qt5Quick private\n\n# include directories, so we have to fix it\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMake package version\n",
        "Line" : 280,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CMake package config\n",
        "Line" : 285,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# qmake pri file\n",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# pkg-config file\n",
        "Line" : 310,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#ecm_generate_pkgconfig_file(BASE_NAME GreenIslandServer\n\n#                            LIB_NAME GreenIslandServer\n\n#                            DEPS \"Qt5Core Qt5Gui Qt5Quick GreenIslandCompositor\"\n\n#                            FILENAME_VAR PKGCONFIG_FILENAME\n\n#                            INCLUDE_INSTALL_DIR \"${HAWAII_INCLUDEDIR} ${GREENISLAND_INCLUDEDIR}\"\n\n#                            INSTALL)\n",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/server/GreenIslandServerConfigExtras.cmake" : {
      "ObjectId" : "9a38ac472ac1091f639b33ac748a1022480db8b7",
      "LastModified" : "2016-09-18T09:00:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/server/GreenIslandServerConfigExtrasLocal.cmake" : {
      "ObjectId" : "321be3059c76704db9d5aab4d9a345f81ac4a9f6",
      "LastModified" : "2016-09-18T09:00:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# GreenIslandConfigExtras.cmake copy that uses the local target\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/server/GreenIslandServerMacros.cmake" : {
      "ObjectId" : "bd99b79b49347323de866b7d380caf6b01401df9",
      "LastModified" : "2016-09-18T09:00:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n# Copyright 2012-2016 Pier Luigi Fiorini <pierluigi.fiorini@gmail.com>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# 1. Redistributions of source code must retain the copyright\n\n#    notice, this list of conditions and the following disclaimer.\n\n# 2. Redistributions in binary form must reproduce the copyright\n\n#    notice, this list of conditions and the following disclaimer in the\n\n#    documentation and/or other materials provided with the distribution.\n\n# 3. The name of the author may not be used to endorse or promote products\n\n#    derived from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n\n# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n\n# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n\n# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\n\n# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n\n# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n\n# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# greenisland_install_shell(shell srcpath)\n\n#\n\n# Installs a Green Island shell\n\n#\n\n# \\param shell the shell name (something like org.vendor.shell)\n\n# \\param srcpath the source path to install from\n\n#\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n#   greenisland_add_client_protocol(<source_files_var>\n\n#                                   PROTOCOL <xmlfile>\n\n#                                   BASENAME <basename>\n\n#                                   [PREFIX <prefix>])\n\n#\n\n# Generate C++ wrapper to Wayland client protocol files from ``<xmlfile>``\n\n# XML definition for the ``<basename>`` interface and append those files\n\n# to ``<source_files_var>``.  Pass the ``<prefix>`` argument if the interface\n\n# names don't start with ``qt_`` or ``wl_``.\n\n#\n\n# WaylandScanner is required and will be searched for.\n\n#\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Parse arguments\n",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#\n\n#   greenisland_add_server_protocol(<source_files_var>\n\n#                                   PROTOCOL <xmlfile>\n\n#                                   BASENAME <basename>\n\n#                                   [PREFIX <prefix>])\n\n#\n\n# Generate C++ wrapper to Wayland server protocol files from ``<xmlfile>``\n\n# XML definition for the ``<basename>`` interface and append those files\n\n# to ``<source_files_var>``.  Pass the ``<prefix>`` argument if the interface\n\n# names don't start with ``qt_`` or ``wl_``.\n\n#\n\n# WaylandScanner is required and will be searched for.\n\n#\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Parse arguments\n",
        "Line" : 110,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "src/waylandcompositor/CMakeLists.txt" : {
      "ObjectId" : "3bc1463472d47da4a4b5dd4eac400946f80d719c",
      "LastModified" : "2016-10-01T06:57:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Qt 5.5.x doesn't define Qt5Qml and Qt5Quick private\n\n# include directories, so we have to fix it\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMake package version\n",
        "Line" : 331,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CMake package config\n",
        "Line" : 336,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# qmake pri file\n",
        "Line" : 349,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# pkg-config file\n",
        "Line" : 359,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#ecm_generate_pkgconfig_file(BASE_NAME GreenIslandCompositor\n\n#                            LIB_NAME GreenIslandCompositor\n\n#                            DEPS \"Qt5Core Qt5Gui Qt5Quick\"\n\n#                            FILENAME_VAR PKGCONFIG_FILENAME\n\n#                            INCLUDE_INSTALL_DIR \"${HAWAII_INCLUDEDIR} ${GREENISLAND_INCLUDEDIR}\"\n\n#                            INSTALL)\n",
        "Line" : 361,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "b32bebf35b43c8ab4824d1b3f3a1773cc309bbab",
      "LastModified" : "2016-09-18T09:00:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/auto/CMakeLists.txt" : {
      "ObjectId" : "33e7f30c74285e233c7e9072c3b0bf40810c120b",
      "LastModified" : "2016-09-18T09:00:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/auto/client/CMakeLists.txt" : {
      "ObjectId" : "a7c6f672337004033d27bc0a4c2170af85facdd6",
      "LastModified" : "2016-09-18T09:00:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/auto/platform/CMakeLists.txt" : {
      "ObjectId" : "fdbc1f4461f3df68a86954ffeef2bf308d1da0ed",
      "LastModified" : "2016-09-18T09:00:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/manual/CMakeLists.txt" : {
      "ObjectId" : "03c56b2bcc95ad31692b190772d3242e86fd2c69",
      "LastModified" : "2016-09-18T09:00:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/manual/platform/CMakeLists.txt" : {
      "ObjectId" : "995c9ff657a0701d0d9ae69aef74472aa2f02014",
      "LastModified" : "2016-09-18T09:00:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/CMakeLists.txt" : {
      "ObjectId" : "f8b167cbf3bad708ccec98af42b1f3f1afb242e2",
      "LastModified" : "2016-09-18T09:00:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/screencaster/CMakeLists.txt" : {
      "ObjectId" : "239d41cd5bf9f97bd2e7b563a4c41a1d2551b115",
      "LastModified" : "2016-09-18T09:00:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/waylandscanner/CMakeLists.txt" : {
      "ObjectId" : "29812a0e31a50080750c35fb79c546671296f5b3",
      "LastModified" : "2016-09-18T09:00:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 58,
    "QMAKE" : 3
  },
  "ElapsedTime" : 1632
}