{
  "Repository" : "143401",
  "Revision" : "HEAD",
  "ObjectId" : "95970924fa3f9f40d066ff3862fd0c2e5ad9ddd1",
  "CommitTime" : "2018-09-29T22:01:39Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "5c0d047f617f0cc77fbdaa5e0836674a26dcd854",
      "LastModified" : "2018-02-17T01:54:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Â© Copyright 2010 - 2016 BlackTopp Studios Inc.\n\n# This file is part of The Mezzanine Engine.\n\n#\n\n#    The Mezzanine Engine is free software: you can redistribute it and/or modify\n\n#    it under the terms of the GNU General Public License as published by\n\n#    the Free Software Foundation, either version 3 of the License, or\n\n#    (at your option) any later version.\n\n#\n\n#    The Mezzanine Engine is distributed in the hope that it will be useful,\n\n#    but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n#    GNU General Public License for more details.\n\n#\n\n#    You should have received a copy of the GNU General Public License\n\n#    along with The Mezzanine Engine.  If not, see <http://www.gnu.org/licenses/>.\n\n#\n\n#   The original authors have included a copy of the license specified above in the\n\n#   'Docs' folder. See 'gpl.txt'\n\n#\n\n#   We welcome the use of the Mezzanine engine to anyone, including companies who wish to\n\n#   Build professional software and charge for their product.\n\n#\n\n#   However there are some practical restrictions, so if your project involves\n\n#   any of the following you should contact us and we will try to work something\n\n#   out:\n\n#    - DRM or Copy Protection of any kind(except Copyrights)\n\n#    - Software Patents You Do Not Wish to Freely License\n\n#    - Any Kind of Linking to Non-GPL licensed Works\n\n#    - Are Currently In Violation of Another Copyright Holder's GPL License\n\n#    - If You want to change our code and not add a few hundred MB of stuff to\n\n#        your distribution\n\n#\n\n#   These and other limitations could cause serious legal problems if you ignore\n\n#   them, so it is best to simply contact us or the Free Software Foundation, if\n\n#   you have any questions.\n\n#\n\n#   Joseph Toppi - toppij@gmail.com\n\n#   John Blackwood - makoenergy02@gmail.com\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################################################\n\n# This is the root cmake file for the Mezzanine engine. It includes the example files\n\n# from the engine demo, Catch! and a series of UnitTests. These may be freely copied\n\n# and used to build your projects as long as you release any changes you make to the\n\n# build scripts back to the public in a usable form.\n\n#\n\n# This file primarily gathers information from the developer about the build environment\n\n# and desired game engine options. It makes this information available to the rest of\n\n# the include cmake files to minimize duplicated effort.\n\n#\n\n# Here is a listing of some of the values that this files sets up for consumption by other\n\n# build scripts, that can be set as cmake options:\n\n#\n\n# That affect/add/remove behavior of the Mezzanine engine\n\n#   Mezz_BuildTypeDebug     - False - The Engine will be compiled with debug symbols by setting CMAKE_BUILD_TYPE. MEZZDEBUG will be passed as a preprocessor macro causing more logging messages to be included. All libraries will also include debug symbols.\n\n#   Mezz_BuildTypeRelease   - False - The Engine will be compiled with optimizations by setting CMAKE_BUILD_TYPE. MEZZRELEASE will be passed into the source via a preprocessor macro.\n\n#   Mezz_BuildTypeSmall     - False - The Engine will be optimizing for minimum size by setting CMAKE_BUILD_TYPE, MEZZSMALL is passed into the source when compiling as a preprocessor macro.\n\n#   Mezz_Lua51              - True if Lua is to be included and link against. False if Lua was not selected to be compiled in.\n\n#   Mezz_Ruby               - True if Ruby is to be included and link against. False if Ruby was not selected to be compiled in.\n\n#   Mezz_SWIG               - Rebuild Scripting interfaces with SWIG each build\n\n#   Mezz_Network            - Enable or disable networking support\n\n#   Mezz_AllWarnings        - Enable all compiler warnings\n\n#\n\n# Build Extra Features alongside the Mezzanine\n\n#        Mezz_Doc                           - Check for Doxygen on the system and force a doxygen build as part of a full build when it is present.\n\n#\n\n# Advanced Mezzanine build options\n\n#        Mezz_Profile                       - If Set to True, then a number of engine level and compiler tools will be enabled that track performance in the engine. This should be disabled when not debugging and benchmarking. Not supported in visual studio currently\n\n#        Mezz_ThreadLog                     - Enables threadlogging, If disabled macros will insert no code at all.\n\n#        Mezz_ThrowOnSingletonFetch         - When retrieving an invalid Singleton, should an exception be thrown, defaults to false.\n\n#        Mezz_DecacheWorkUnits              - Different CPUs have different Cache sizes and different ratios of actual work to IO bandwith. This tries to increase the amount of work done at the expense of forcing work units to be reloaded into CPU from RAM each frame. Use this with your favorite benchmark to maximize performance.\n\n#        Mezz_FramesToTrack                 - How many frame should the runtime performance metrics be tracked for\n\n#        Mezz_Lua51IncludeDirectory         - Location of headers for lua 5.1\n\n#\n\n# Deprecated options\n\n#        Mezz_XML                           - Previously disabled/enabled XML options, now XML is used everywhere. Thsi option has been removed.\n\n#\n\n# That affect only build time values:\n\n#        OgreLinkName                       - This is the name of the ogre library that the compiler expects. Examples: OgreMain, OgreMain_d\n\n#        OgresD                             - This can be used to help pick/select ogre libraries that may or may not have an \"_d\" depending on how they are compiled. If debug libraries are in use this is set to \"_d\" otherwise \"\".\n\n#        OgreLibFileName                    - The filename of the actual Ogre library. On some platforms this file may just be a symlink. Examples: OgreMain.dll, libOgreMain.so\n\n#        OgreLinuxSoName                    - Linux's versioned library system expects specific version of so files. This is the more specific file, that must copied along with the regular so. Examples libOgreMain.so.1.7.1, libOgreMain.so.1.9.3\n\n#        OgrePluginCGPM                     - The File name of the Ogre CG manager plugin\n\n#        OgrePluginRenderGL                 - The File name of the Ogre OpenGL rendersystem plugin\n\n#        OgrePluginParticle                 - The File name of the Ogre ParticleFX plugin\n\n#        OgreConfigHeaderIncludeDir         - The Folder where Ogre puts its configured Headers. This is only needed by subprojects if they link directly against Ogre.\n\n#        OgreHeaderIncludeDir               - The Folder where all the non-configured headers go. This is only needed by subprojects if they link directly against Ogre.\n\n#\n\n# Here are some more values that can be used when creating cmake scripts that are indirectly\n\n# set and should not be directly passed as cmake values\n\n#        BuildPlatform                      - A string that Contains either \"windows\", \"linux\", or \"macosx\" at the time of this writing. This directly corresponds to the folders names in the Mezzanine engine repository.\n\n#        CommonBuildFlags                   - A listing of all the currently set build flags to pass to the compiler at compile time. This is the mechanism that enforces Mezz_BuildTypeDebug's and Mezz_Profile's settings.\n\n#        DynamicLibPrefix                   - This is a string that is required by a given platform to begin the filename of shared libraries. One windows it is \"\" on Linux/Unix it is \"lib\"\n\n#        DynamicLibSuffix                   - This is a string that is required by a given platform to end the filename of shared libraries. One windows it is \".dll\" on Linux/Unix it is \".so\"\n\n#        LuaLinkName                        - This is the name that of the actual compiled lua library, it will be blank if lua is not to be linked\n\n#        LuaProject                         - The Name of the lua cmake project\n\n#        MezzanineLinkName                  - What should be entered when somethings needs to link against Mezzanine usually \"Mezzanine\" sometime it specifies and import library, like\n\n#        MezzanineLibFileName               - The actual name of the file the Mezzanine is called.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###############################################################################\n\n# The name of our project is \"MezzanineAndCatch\".\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#######################################\n\n# Mezzanine helper variables\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#######################################\n\n# PostFix configuration\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "###############################################################################\n\n# Set Platform Specific Variables\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "###############################################################################\n\n# Check For the Mezzanine Build Type options and set values accordingly\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "###############################################################################\n\n# Now that we know our build type better, configure our library postfix.\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "###############################################################################\n\n# Set our other cmake variables that are dependent on the just set information\n",
        "Line" : 261,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#set(MezzanineLinkName lib${MezzanineLinkName}.dll.a)\n",
        "Line" : 269,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "###############################################################################\n\n# Check For the Mezz_Profile option and set values accordingly\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# The pg makes this only work with gcc, clang and imitators\n",
        "Line" : 278,
        "CharPositionInLine" : 54
      },
      "12" : {
        "Text" : "# Is this required\n",
        "Line" : 279,
        "CharPositionInLine" : 48
      },
      "13" : {
        "Text" : "###############################################################################\n\n# Check For the Mezz_Profile option and set values accordingly\n",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Is this required\n",
        "Line" : 292,
        "CharPositionInLine" : 52
      },
      "15" : {
        "Text" : "###############################################################################\n\n# Check For the Mezz_Network option and set values accordingly\n",
        "Line" : 299,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "###############################################################################\n\n# Lua Library\n",
        "Line" : 310,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "###############################################################################\n\n# Ruby Library\n",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "###############################################################################\n\n# Build Swig Library\n",
        "Line" : 336,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "###############################################################################\n\n# Build Tools\n",
        "Line" : 347,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "###############################################################################\n\n# DAGFrameScheduler\n",
        "Line" : 357,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#How long should the default length on rolling averages and other multiframe periods be.\n",
        "Line" : 360,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#When looking for work use atomics to advance iterators past complete work units.\n",
        "Line" : 363,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Trailing slash indicates that compiler header should massage this before the library consumes\n",
        "Line" : 371,
        "CharPositionInLine" : 46
      },
      "24" : {
        "Text" : "###############################################################################\n\n# Misc simple defines\n",
        "Line" : 377,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Allow the developer to disable mandatory compiler wanrings, in case it breaks stuff\n",
        "Line" : 388,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Force to always compile with W4\n",
        "Line" : 392,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# Update if necessary\n",
        "Line" : 399,
        "CharPositionInLine" : 12
      },
      "28" : {
        "Text" : "# Make sure stdint.h is found for SDL and other subprojects\n",
        "Line" : 404,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#######################################\n\n# Ogre3d related values\n",
        "Line" : 417,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Setup rendersystem options\n",
        "Line" : 424,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#set(OgreLinkName OgreMain_d)\n\n#set(OgresD _d)\n",
        "Line" : 499,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "#This must be set manually each time ogre is upgraded.\n",
        "Line" : 509,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#This value is gibberish on non-Linux platforms\n",
        "Line" : 513,
        "CharPositionInLine" : 78
      },
      "34" : {
        "Text" : "# Ogre Plugins\n\n#set(OgrePluginCGPM ${StaticLibPrefix}Plugin_CgProgramManager${OgresD}${StaticLibSuffix})\n\n#set(OgrePluginRenderGL ${StaticLibPrefix}RenderSystem_GL${OgresD}${StaticLibSuffix})\n\n#set(OgrePluginParticle ${StaticLibPrefix}Plugin_ParticleFX${OgresD}${StaticLibSuffix})\n",
        "Line" : 523,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "###############################################################################\n\n# Doxygen options\n",
        "Line" : 528,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "###############################################################################\n\n# Network Library Define\n",
        "Line" : 602,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# set windows and linux options here if required\n",
        "Line" : 608,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "###############################################################################\n\n# Misc library linking names\n",
        "Line" : 611,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Extras\n",
        "Line" : 614,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "# Core Libs\n",
        "Line" : 619,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "# Defunct\n\n#\"BulletSoftBodySolvers_OpenCL\"\n\n#\"BulletSoftBodySolvers_CPU\"\n\n#\"MiniCL\"\n\n#\"BulletMultiThreaded\"\n",
        "Line" : 624,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "###############################################################################\n\n# Perform Common Tasks for build options and configuration.\n",
        "Line" : 639,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Check and set a macro for endianess.\n",
        "Line" : 642,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# This doesn't work on VS 2010\n\n# MSVC only builds for intel anyway\n",
        "Line" : 644,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "###############################################################################\n\n# Perform Platform Specific Tasks for build options and configuration.\n",
        "Line" : 658,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Force cmake to use Clang on MacOS\n",
        "Line" : 661,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#include(CMakeForceCompiler)\n\n#CMAKE_FORCE_C_COMPILER(clang GNU)\n\n#CMAKE_FORCE_CXX_COMPILER(clang++ GNU)\n\n#set(CMAKE_XCODE_ATTRIBUTE_GCC_VERSION \"com.apple.compilers.llvm.clang.1_0\")\n",
        "Line" : 663,
        "CharPositionInLine" : 4
      },
      "48" : {
        "Text" : "###############################################################################\n\n# Add subprojects\n",
        "Line" : 669,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "###############################################################################\n\n# Hide Variables not directly related to the Mezzanine Engine\n",
        "Line" : 683,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Mezzanine options\n",
        "Line" : 687,
        "CharPositionInLine" : 4
      },
      "51" : {
        "Text" : "# Misc Options\n",
        "Line" : 692,
        "CharPositionInLine" : 4
      },
      "52" : {
        "Text" : "# Stuff that only appears on MacOS, I think\n",
        "Line" : 699,
        "CharPositionInLine" : 4
      },
      "53" : {
        "Text" : "# Bullet options\n",
        "Line" : 713,
        "CharPositionInLine" : 4
      },
      "54" : {
        "Text" : "#SWIG\n",
        "Line" : 749,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 55
    },
    "Catch/CMakeLists.txt" : {
      "ObjectId" : "2638e2691baedf5d01fe6f42faffaa04a08414a6",
      "LastModified" : "2017-09-14T20:36:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Â© Copyright 2010 - 2011 BlackTopp Studios Inc.\r\n\n# This file is part of The Mezzanine Engine.\r\n\n#\r\n\n#    The Mezzanine Engine is free software: you can redistribute it and/or modify\r\n\n#    it under the terms of the GNU General Public License as published by\r\n\n#    the Free Software Foundation, either version 3 of the License, or\r\n\n#    (at your option) any later version.\r\n\n#\r\n\n#    The Mezzanine Engine is distributed in the hope that it will be useful,\r\n\n#    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n\n#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n\n#    GNU General Public License for more details.\r\n\n#\r\n\n#    You should have received a copy of the GNU General Public License\r\n\n#    along with The Mezzanine Engine.  If not, see <http://www.gnu.org/licenses/>.\r\n\n#\r\n\n#   The original authors have included a copy of the license specified above in the\r\n\n#   'Docs' folder. See 'gpl.txt'\r\n\n#\r\n\n#   We welcome the use of the Mezzanine engine to anyone, including companies who wish to\r\n\n#   Build professional software and charge for their product.\r\n\n#\r\n\n#   However there are some practical restrictions, so if your project involves\r\n\n#   any of the following you should contact us and we will try to work something\r\n\n#   out:\r\n\n#    - DRM or Copy Protection of any kind(except Copyrights)\r\n\n#    - Software Patents You Do Not Wish to Freely License\r\n\n#    - Any Kind of Linking to Non-GPL licensed Works\r\n\n#    - Are Currently In Violation of Another Copyright Holder's GPL License\r\n\n#    - If You want to change our code and not add a few hundred MB of stuff to\r\n\n#        your distribution\r\n\n#\r\n\n#   These and other limitations could cause serious legal problems if you ignore\r\n\n#   them, so it is best to simply contact us or the Free Software Foundation, if\r\n\n#   you have any questions.\r\n\n#\r\n\n#   Joseph Toppi - toppij@gmail.com\r\n\n#   John Blackwood - makoenergy02@gmail.com\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\r\n\n#Catch! initializations\r\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#add_definitions( ${CommonBuildFlags} )\r\n\n#target_compile_options( ${PROJECT_NAME} PRIVATE ${CommonBuildFlags} )\r\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##############################################################################\r\n\n# Catch! Folder Structure\r\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Root\r\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Levels\r\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Common Data\r\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Fonts\r\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Licenses\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Plugins\r\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Content Archive Cache\r\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#if the user select a file in the content archive folder, pull that filename out, without using FIND, because was introduced as recently as 2.8.5\r\n",
        "Line" : 106,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "#snip one char off the end of the string\r\n",
        "Line" : 111,
        "CharPositionInLine" : 81
      },
      "13" : {
        "Text" : "#get the info about the string again\r\n",
        "Line" : 112,
        "CharPositionInLine" : 55
      },
      "14" : {
        "Text" : "#safe exit strategy, in case gibberish is fed in\r\n",
        "Line" : 115,
        "CharPositionInLine" : 36
      },
      "15" : {
        "Text" : "#Let user the user know wht is actually happening\r\n",
        "Line" : 123,
        "CharPositionInLine" : 32
      },
      "16" : {
        "Text" : "##############################################################################\r\n\n#A complete list of our source files and headers\r\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "##############################################################################\r\n\n# Functions to use to copy files at build time\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#Description: This function copies items from the Catch Project directory into the location specified. The output is not relative to the Binary Path, the caller must be explicit.\r\n\n#PreCondition: This function can only be called after \"add_library(${PROJECT_NAME} ...)\" is called, otherwise it will fail silently\r\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#Description: This function copies items from the output directory in Mezzanine into the location of the Catch executable.\r\n\n#PreCondition: This function can only be called after \"add_library(${PROJECT_NAME} ...)\" is called, otherwise it will fail silently\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#Description: This function copies license files in Mezzanine into the Catch License folder.\r\n\n#PreCondition: This function can only be called after \"add_library(${PROJECT_NAME} ...)\" is called, otherwise it will fail silently\r\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "##############################################################################\r\n\n# Define the executable and say it requires Mezzanine\r\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "##############################################################################\r\n\n# File copies during all builds\r\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#####################################\r\n\n# Fonts\r\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#####################################\r\n\n# Config Files\r\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#####################################\r\n\n# Licences\r\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#####################################\r\n\n# Common Data\r\n\n#if(${UseCatchArchives})\r\n",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#message( STATUS \"Copying Common Content\")\r\n\n#file(GLOB ContentDirRootContents ${Catch_ArchiveDir}/*.zip)\r\n\n#file( COPY ${ContentDirRootContents} DESTINATION ${CommonDataDir})\r\n\n#message( STATUS \"Copying Level archives\")\r\n\n#file(GLOB ContentDirLevelContents \"${Catch_ArchiveDir}/Lvl Files/*.lvl\")\r\n\n#file( COPY ${ContentDirLevelContents} DESTINATION ${LevelDir})\r\n\n#message( STATUS \"Copying Preview Content\")\r\n\n#file(GLOB ContentDirPreviewContents \"${Catch_ArchiveDir}/Lvl Previews/*\")\r\n\n#file( COPY ${ContentDirPreviewContents} DESTINATION ${PreviewDir})\r\n",
        "Line" : 273,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "#endif(${UseCatchArchives})\r\n",
        "Line" : 282,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#Ogre stuff\r\n\n#CopyFilesDuringBuild( data/${BuildPlatform}/plugins${OgresD}.cfg ${PluginDir}plugins.cfg)\r\n",
        "Line" : 284,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#The Engine itself\r\n",
        "Line" : 287,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "##############################################################################\r\n\n#Copy System Dependant files during build time\r\n",
        "Line" : 290,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Windows File Copy Specific Items\r\n",
        "Line" : 293,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Linux File Copy Specific Items\r\n",
        "Line" : 302,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Mac File Copy pecific Items\r\n\n#if(${APPLE})\r\n",
        "Line" : 315,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#message ( STATUS \"${PROJECT_NAME} - Begin Apple Specific File Copy Process\")\r\n\n#CopyFilesFromMezzanineDuringBuild( data/macosx/settings.cfg )\r\n\n#message ( STATUS \"${PROJECT_NAME} - End Apple Specific File Copy Process\")\r\n",
        "Line" : 317,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "#endif(${APPLE})\r\n",
        "Line" : 320,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 37
    },
    "EngineDemo/CMakeLists.txt" : {
      "ObjectId" : "aece425fb60fe614bd9cae2914b098ef29fef00b",
      "LastModified" : "2016-08-23T18:28:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Â© Copyright 2010 - 2016 BlackTopp Studios Inc.\n\n# This file is part of The Mezzanine Engine.\n\n#\n\n#    The Mezzanine Engine is free software: you can redistribute it and/or modify\n\n#    it under the terms of the GNU General Public License as published by\n\n#    the Free Software Foundation, either version 3 of the License, or\n\n#    (at your option) any later version.\n\n#\n\n#    The Mezzanine Engine is distributed in the hope that it will be useful,\n\n#    but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n#    GNU General Public License for more details.\n\n#\n\n#    You should have received a copy of the GNU General Public License\n\n#    along with The Mezzanine Engine.  If not, see <http://www.gnu.org/licenses/>.\n\n#\n\n#   The original authors have included a copy of the license specified above in the\n\n#   'Docs' folder. See 'gpl.txt'\n\n#\n\n#   We welcome the use of the Mezzanine engine to anyone, including companies who wish to\n\n#   Build professional software and charge for their product.\n\n#\n\n#   However there are some practical restrictions, so if your project involves\n\n#   any of the following you should contact us and we will try to work something\n\n#   out:\n\n#    - DRM or Copy Protection of any kind(except Copyrights)\n\n#    - Software Patents You Do Not Wish to Freely License\n\n#    - Any Kind of Linking to Non-GPL licensed Works\n\n#    - Are Currently In Violation of Another Copyright Holder's GPL License\n\n#    - If You want to change our code and not add a few hundred MB of stuff to\n\n#        your distribution\n\n#\n\n#   These and other limitations could cause serious legal problems if you ignore\n\n#   them, so it is best to simply contact us or the Free Software Foundation, if\n\n#   you have any questions.\n\n#\n\n#   Joseph Toppi - toppij@gmail.com\n\n#   John Blackwood - makoenergy02@gmail.com\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n#EngineDemo initializations\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#add_definitions( ${CommonBuildFlags} )\n\n#target_compile_options( ${PROJECT_NAME} PRIVATE ${CommonBuildFlags} )\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#this next line should work, but I guess CMake applies somekind of scope to variables\n\n#set (${PROJECT_NAME}_MEZZANINE_BIN_DIR \"${Mezzanine_BINARY_DIR}\")\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##############################################################################\n\n#A complete list of our source files and headers\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "##############################################################################\n\n# Functions to use to copy files at build time\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#Description: This function copies items from the Data/lib directory into it's expected location in the output directory During build time. It does not need leading slashes\n\n#PreCondition: This function can only be called after \"add_library(${PROJECT_NAME} ...)\" is called, otherwise it will fail silently\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#Description: This function copies items from the output directory in Mezzanine into the location of the Catch executable. \n\n#PreCondition: This function can only be called after \"add_library(${PROJECT_NAME} ...)\" is called, otherwise it will fail silently\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#Description: This function copies license files in Mezzanine into the Catch License folder. \n\n#PreCondition: This function can only be called after \"add_library(${PROJECT_NAME} ...)\" is called, otherwise it will fail silently\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "##############################################################################\n\n#define the executable and say it requires Mezzanine\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "##############################################################################\n\n# File copies during all builds\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\n\n#Copy System Dependant files during build time\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Windows File Copy Specific Items\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Linux File Copy Specific Items\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Mac File Copy Specific Items\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "Mezzanine/CMakeLists.txt" : {
      "ObjectId" : "47d89c879e6651c11a2a23e16423e4d89b1f8e19",
      "LastModified" : "2018-09-20T09:53:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Â© Copyright 2010 - 2016 BlackTopp Studios Inc.\n\n# This file is part of The Mezzanine Engine.\n\n#\n\n#    The Mezzanine Engine is free software: you can redistribute it and/or modify\n\n#    it under the terms of the GNU General Public License as published by\n\n#    the Free Software Foundation, either version 3 of the License, or\n\n#    (at your option) any later version.\n\n#\n\n#    The Mezzanine Engine is distributed in the hope that it will be useful,\n\n#    but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n#    GNU General Public License for more details.\n\n#\n\n#    You should have received a copy of the GNU General Public License\n\n#    along with The Mezzanine Engine.  If not, see <http://www.gnu.org/licenses/>.\n\n#\n\n#   The original authors have included a copy of the license specified above in the\n\n#   'Docs' folder. See 'gpl.txt'\n\n#\n\n#   We welcome the use of the Mezzanine engine to anyone, including companies who wish to\n\n#   Build professional software and charge for their product.\n\n#\n\n#   However there are some practical restrictions, so if your project involves\n\n#   any of the following you should contact us and we will try to work something\n\n#   out:\n\n#    - DRM or Copy Protection of any kind(except Copyrights)\n\n#    - Software Patents You Do Not Wish to Freely License\n\n#    - Any Kind of Linking to Non-GPL licensed Works\n\n#    - Are Currently In Violation of Another Copyright Holder's GPL License\n\n#    - If You want to change our code and not add a few hundred MB of stuff to\n\n#        your distribution\n\n#\n\n#   These and other limitations could cause serious legal problems if you ignore\n\n#   them, so it is best to simply contact us or the Free Software Foundation, if\n\n#   you have any questions.\n\n#\n\n#   Joseph Toppi - toppij@gmail.com\n\n#   John Blackwood - makoenergy02@gmail.com\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################################################\n\n# The build script for the Mezzanine engine\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###############################################################################\n\n# Initializations\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#add_definitions( ${CommonBuildFlags} ) #-std=c++11 )\n\n#target_compile_options( ${PROJECT_NAME} PRIVATE ${CommonBuildFlags} )\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#######################################\n\n# A complete listing of our header files\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Root Namespace(Mezzanine) Items\n",
        "Line" : 78,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Audio Items\n",
        "Line" : 189,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# dox Items\n",
        "Line" : 213,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Graphics Items\n",
        "Line" : 231,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Graphics - Procedural Items\n",
        "Line" : 270,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# Graphics - Procedural - Mesh Items\n",
        "Line" : 280,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# Graphics - Procedural - Texture Items\n",
        "Line" : 311,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# Input Items\n",
        "Line" : 357,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# Internal Items\n",
        "Line" : 372,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# MathTools Items\n",
        "Line" : 379,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# Network Items\n",
        "Line" : 389,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# Noise Items\n",
        "Line" : 419,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# Noise - Model Items\n",
        "Line" : 426,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# Noise - Module Items\n",
        "Line" : 431,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# Physics Items\n",
        "Line" : 461,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# Resource Items\n",
        "Line" : 506,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "# Scripting Items\n",
        "Line" : 516,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# Threading Items\n",
        "Line" : 527,
        "CharPositionInLine" : 8
      },
      "23" : {
        "Text" : "# UI (User Interface) Items\n",
        "Line" : 554,
        "CharPositionInLine" : 8
      },
      "24" : {
        "Text" : "# XML Items\n",
        "Line" : 623,
        "CharPositionInLine" : 8
      },
      "25" : {
        "Text" : "# Going away soon\n",
        "Line" : 625,
        "CharPositionInLine" : 52
      },
      "26" : {
        "Text" : "#######################################\n\n# A complete listing of our source files\n",
        "Line" : 645,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Root Namespace(Mezzanine) Items\n",
        "Line" : 648,
        "CharPositionInLine" : 8
      },
      "28" : {
        "Text" : "# Audio Items\n",
        "Line" : 714,
        "CharPositionInLine" : 8
      },
      "29" : {
        "Text" : "# Graphics Items\n",
        "Line" : 722,
        "CharPositionInLine" : 8
      },
      "30" : {
        "Text" : "# Graphics - Procedural Items\n",
        "Line" : 756,
        "CharPositionInLine" : 8
      },
      "31" : {
        "Text" : "# Graphics - Procedural - Mesh Items\n",
        "Line" : 763,
        "CharPositionInLine" : 8
      },
      "32" : {
        "Text" : "# Graphics - Procedural - Texture Items\n",
        "Line" : 792,
        "CharPositionInLine" : 8
      },
      "33" : {
        "Text" : "# Input Items\n",
        "Line" : 837,
        "CharPositionInLine" : 8
      },
      "34" : {
        "Text" : "# Internal Items\n",
        "Line" : 847,
        "CharPositionInLine" : 8
      },
      "35" : {
        "Text" : "# MathTools Items\n",
        "Line" : 854,
        "CharPositionInLine" : 8
      },
      "36" : {
        "Text" : "# Network Items\n",
        "Line" : 863,
        "CharPositionInLine" : 8
      },
      "37" : {
        "Text" : "# Noise Items\n",
        "Line" : 889,
        "CharPositionInLine" : 8
      },
      "38" : {
        "Text" : "# Noise - Model Items\n",
        "Line" : 893,
        "CharPositionInLine" : 8
      },
      "39" : {
        "Text" : "# Noise - Module Items\n",
        "Line" : 898,
        "CharPositionInLine" : 8
      },
      "40" : {
        "Text" : "# Physics Items\n",
        "Line" : 928,
        "CharPositionInLine" : 8
      },
      "41" : {
        "Text" : "# Resource Items\n",
        "Line" : 970,
        "CharPositionInLine" : 8
      },
      "42" : {
        "Text" : "# Scripting Items\n",
        "Line" : 978,
        "CharPositionInLine" : 8
      },
      "43" : {
        "Text" : "# Threading Items\n",
        "Line" : 995,
        "CharPositionInLine" : 8
      },
      "44" : {
        "Text" : "# UI (User Interface) Items\n",
        "Line" : 1018,
        "CharPositionInLine" : 8
      },
      "45" : {
        "Text" : "# XML Items\n",
        "Line" : 1075,
        "CharPositionInLine" : 8
      },
      "46" : {
        "Text" : "# Going away soon\n",
        "Line" : 1076,
        "CharPositionInLine" : 52
      },
      "47" : {
        "Text" : "###############################################################################\n\n# Audio Subsystem Configuration\n",
        "Line" : 1096,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "#######################################\n\n# Header files\n",
        "Line" : 1111,
        "CharPositionInLine" : 8
      },
      "49" : {
        "Text" : "#######################################\n\n# Source files\n",
        "Line" : 1129,
        "CharPositionInLine" : 8
      },
      "50" : {
        "Text" : "###############################################################################\n\n# Audio Encoding support configuration\n",
        "Line" : 1169,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "#option(Mezz_Audio_EnableMp3Encoding \"Enable the encoding and decoding of .mp3 encoded data.\" ON)\n\n#if(Mezz_Audio_EnableMp3Encoding)\n\n#   message ( STATUS \"${PROJECT_NAME} - Enabling .mp3 encoding.\")\n\n#    set(Mezz_Audio_Encodings ${Mezz_Audio_Encodings} \"${D}ENABLE_MP3_ENCODE\")\n\n#endif(Mezz_Audio_EnableMp3Encoding)\n",
        "Line" : 1198,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "###############################################################################\n\n# Graphics Rendersystem configuration\n",
        "Line" : 1218,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "###############################################################################\n\n# Physics configuration\n",
        "Line" : 1263,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "###############################################################################\n\n# Functions for Later use\n",
        "Line" : 1268,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "#Description: This function copies items from the Data/lib directory into it's expected location in\n\n#   the output directory During build time. It does not need leading slashes\n\n#PreCondition: This function can only be called after \"add_library(${PROJECT_NAME} ...)\" is called,\n\n#   otherwise it will fail silently\n",
        "Line" : 1271,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "###############################################################################\n\n# System Build Items\n\n#######################################\n\n# All Changes that could be system specific should be defined in these variables\n\n# These will set sane defaults (Where possible), but specific platforms should\n\n# set a value of their own.\n",
        "Line" : 1288,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# OpenAL\n",
        "Line" : 1295,
        "CharPositionInLine" : 22
      },
      "58" : {
        "Text" : "# To not interfere with SDL build process\n",
        "Line" : 1296,
        "CharPositionInLine" : 50
      },
      "59" : {
        "Text" : "#######################################\n\n# Windows Build Specific Items\n",
        "Line" : 1298,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "#######################################\n\n# Linux Build Specific Items\n",
        "Line" : 1306,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "#######################################\n\n# Mac OS X and iPhone Build pecific Items\n",
        "Line" : 1319,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "#set_source_files_properties(\"${${PROJECT_NAME}_SRC_DIR}Graphics/gamewindow.cpp\" PROPERTIES\n\n#   COMPILE_FLAGS \"-x objective-c++\")\n",
        "Line" : 1324,
        "CharPositionInLine" : 4
      },
      "63" : {
        "Text" : "###############################################################################\n\n# Common Library Configuration items\n",
        "Line" : 1331,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "#\"${ProjectBinaryDir}Mezzanine/libincludes/common/ogresrc/ogresvnsrc/include\"\n",
        "Line" : 1348,
        "CharPositionInLine" : 4
      },
      "65" : {
        "Text" : "###############################################################################\n\n# Prepare the actual Build\n\n#add_library(${PROJECT_NAME} SHARED ${${PROJECT_NAME}_sources} )\n",
        "Line" : 1359,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "#######################################\n\n# Prepare Common Dependencies\n",
        "Line" : 1363,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "#######################################\n\n# Extra includes from Ogre\n",
        "Line" : 1372,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# This was moved to below the sub-libraries so the directX includes in the lines above will work.\n\n# This is necessary because of static linking and the lack of foresight on the part of the people\n\n# that wrote those rendersystems.\n\n# It's a hack and makes me a sad panda.\n\n###############################################################################\n\n# Prepare the actual Build\n",
        "Line" : 1379,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "###############################################################################\n\n# Swig binding generation\n",
        "Line" : 1399,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# Here are the original lines describing the commands from lua51scriptengine.h\n\n#/// swig2.0 -c++ -v -Wall -lua -importall -includeall -o Scripting/Lua51/scriptbindinglua51.cpp\n\n#   mezzanine.h\n\n#/// swig2.0 -c++ -v -Wall -lua -importall -includeall -DSWIG_UNSAFE -o\n\n#   Scripting/Lua51/scriptbindinglua51unsafe.cpp mezzanine.h\n",
        "Line" : 1404,
        "CharPositionInLine" : 4
      },
      "71" : {
        "Text" : "#add_library(${SWIG_PROJECT} SHARED \"${${PROJECT_NAME}_SRC_DIR}blank.cpp\" )\n",
        "Line" : 1411,
        "CharPositionInLine" : 4
      },
      "72" : {
        "Text" : "# Exists solely to Aggregate other projects\n",
        "Line" : 1413,
        "CharPositionInLine" : 4
      },
      "73" : {
        "Text" : "# XML/xml.h\n",
        "Line" : 1443,
        "CharPositionInLine" : 8
      },
      "74" : {
        "Text" : "# Threading/dagframescheduler.h\n",
        "Line" : 1467,
        "CharPositionInLine" : 8
      },
      "75" : {
        "Text" : "# Physics/physics.h\n",
        "Line" : 1492,
        "CharPositionInLine" : 8
      },
      "76" : {
        "Text" : "# MathTools/mathtools.h\n",
        "Line" : 1516,
        "CharPositionInLine" : 8
      },
      "77" : {
        "Text" : "#        add_dependencies(${SWIG_PROJECT}\n\n#                            ${SWIG_PROJECT}_MainLua51\n\n#                            ${SWIG_PROJECT}_XMLLua51\n\n#                            ${SWIG_PROJECT}_ThreadingLua51\n\n#                            ${SWIG_PROJECT}_PhysicsLua51\n\n#                            ${SWIG_PROJECT}_MathToolsLua51\n",
        "Line" : 1542,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "#                            ${SWIG_PROJECT}_MainLua51Unsafe\n\n#                            ${SWIG_PROJECT}_XMLLua51Unsafe\n\n#                        )\n\n#        #add_dependencies(${SWIG_PROJECT}_MainLua51 ${SWIG_PROJECT}_MainLua51Unsafe)\n",
        "Line" : 1549,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# mezzanine.h\n",
        "Line" : 1563,
        "CharPositionInLine" : 8
      },
      "80" : {
        "Text" : "# XML/xml.h\n",
        "Line" : 1575,
        "CharPositionInLine" : 8
      },
      "81" : {
        "Text" : "# Threading/dagframescheduler.h\n",
        "Line" : 1587,
        "CharPositionInLine" : 8
      },
      "82" : {
        "Text" : "# Physics/physics.h\n",
        "Line" : 1599,
        "CharPositionInLine" : 8
      },
      "83" : {
        "Text" : "# MathTools/mathtools.h\n",
        "Line" : 1611,
        "CharPositionInLine" : 8
      },
      "84" : {
        "Text" : "# Add support for other languages here\n",
        "Line" : 1631,
        "CharPositionInLine" : 4
      },
      "85" : {
        "Text" : "#######################################\n\n# Exception Generation Configuration\n",
        "Line" : 1634,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# This names are likely the new style, but this is still poorly integrated.\n",
        "Line" : 1641,
        "CharPositionInLine" : 4
      },
      "87" : {
        "Text" : "#COMMAND ${CMAKE_COMMAND} -E remove ${ExceptionResults}\n\n#COMMAND ${CMAKE_COMMAND} -E touch ${ExceptionResults}\n",
        "Line" : 1653,
        "CharPositionInLine" : 8
      },
      "88" : {
        "Text" : "#######################################\n\n# Library Link Dependencies\n",
        "Line" : 1671,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "#add_dependencies(${RubyProject} ${SWIG_PROJECT})\n",
        "Line" : 1682,
        "CharPositionInLine" : 4
      },
      "90" : {
        "Text" : "# Link to all of the Mezzanine Dependencies\n",
        "Line" : 1690,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "###############################################################################\n\n# Build Time File copying\n",
        "Line" : 1702,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "#######################################\n\n# Copy Common Files at Build Time\n",
        "Line" : 1705,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "# Licenses\n",
        "Line" : 1708,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "# Ogre\n\n#CopyFilesDuringBuild( ${BuildPlatform}/ogre/${OgrePluginRenderGL}\n\n#       data/${BuildPlatform}/ogre/${OgrePluginRenderGL} )\n\n#CopyFilesDuringBuild( ${BuildPlatform}/ogre/${OgrePluginParticle}\n\n#       data/${BuildPlatform}/ogre/${OgrePluginParticle} )\n\n#CopyFilesDuringBuild( ${BuildPlatform}/ogre/${OgrePluginCGPM}\n\n#       data/${BuildPlatform}/ogre/${OgrePluginCGPM} )\n\n#CopyFilesDuringBuild( ${BuildPlatform}/ogre/${OgreLibFileName} ${OgreLibFileName} )\n\n#CopyFilesDuringBuild( ${BuildPlatform}/plugins${OgresD}.cfg data/${BuildPlatform}/plugins.cfg )\n",
        "Line" : 1726,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "# We should use the new variables to copy the ogre files and Mezzanine library in the common code.\n",
        "Line" : 1736,
        "CharPositionInLine" : 0
      },
      "96" : {
        "Text" : "#######################################\n\n# Windows File Copy Specific Items\n",
        "Line" : 1738,
        "CharPositionInLine" : 0
      },
      "97" : {
        "Text" : "# remove lib prefix from DLL outputs\n",
        "Line" : 1743,
        "CharPositionInLine" : 8
      },
      "98" : {
        "Text" : "#CopyFilesDuringBuild( ${BuildPlatform}/ogre/cg${OgresD}.dll\n\n#       data/${BuildPlatform}/ogre/cg${OgresD}.dll )\n\n#CopyFilesDuringBuild( ${BuildPlatform}/ogre/libboost_thread-mgw45-mt-1_44.dll\n\n#       libboost_thread-mgw45-mt-1_44.dll ) #can this be statically linked\n\n#CopyFilesDuringBuild( ${BuildPlatform}/openal/OpenAL32.dll OpenAL32.dll )\n\n#CopyFilesDuringBuild( ${BuildPlatform}/openal/OpenAL32.lib OpenAL32.lib )\n",
        "Line" : 1746,
        "CharPositionInLine" : 8
      },
      "99" : {
        "Text" : "#CopyFilesDuringBuild( ${BuildPlatform}/openal/wrap_oal.dll wrap_oal.dll )\n",
        "Line" : 1760,
        "CharPositionInLine" : 8
      },
      "100" : {
        "Text" : "#######################################\n\n# Linux File Copy Specific Items\n",
        "Line" : 1764,
        "CharPositionInLine" : 0
      },
      "101" : {
        "Text" : "#######################################\n\n# Mac File Copy Specific Items\n",
        "Line" : 1773,
        "CharPositionInLine" : 0
      },
      "102" : {
        "Text" : "###############################################################################\n\n# The End\n",
        "Line" : 1781,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 103
    },
    "Mezzanine/libincludes/common/bulletsrc/CMakeLists.txt" : {
      "ObjectId" : "41925d6d74b722252a5bc3d3d55aac9958cd1fa0",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Choose the destination directory\n\n#set (${PROJECT_NAME}_BINARY_DIR \"${Mezzanine_ROOT_DIR}data/${BuildPlatform}/bullet/\")\n\n#message ( STATUS \"Putting Bullet binaries in: ${${PROJECT_NAME}_BINARY_DIR}\")\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For this to work right, the bullet CMake.list, needs to be adjusted just a little bit\n\n# I added \"add_definitions( ${CommonBuildFlags} )\" near the top just after the project command.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Also a .patch file describing the changes in more detail was generated for the CMake changes for version 2.80\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Additions since the upgrade to bullet 3 repo\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Additions since the upgrade to bullet 3 repo\n",
        "Line" : 78,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Explicitly Disabled\n",
        "Line" : 87,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "Mezzanine/libincludes/common/bulletsrc/bulletsvnsrc/CMakeLists.txt" : {
      "ObjectId" : "65859e6630e266809afc5217e0f34183a2bc8eb0",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this line has to appear before 'PROJECT' in order to be able to disable incremental linking\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Enable MACOSX_RPATH by default.\n",
        "Line" : 13,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "# SET(CMAKE_BUILD_TYPE \"Debug\")\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#MESSAGE(\"CMAKE_CXX_FLAGS_DEBUG=\"+${CMAKE_CXX_FLAGS_DEBUG})\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#statically linking VC++ isn't supported for WindowsPhone/WindowsStore\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#SET(CMAKE_EXE_LINKER_FLAGS_INIT    \"/STACK:10000000 /INCREMENTAL:NO\")\n\n#SET(CMAKE_EXE_LINKER_FLAGS    \"/STACK:10000000 /INCREMENTAL:NO\")\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#MESSAGE(\"MSVC_INCREMENTAL_YES_FLAG\"+${MSVC_INCREMENTAL_YES_FLAG})\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#MESSAGE(\"MSVC_INCREMENTAL_DEFAULT\"+${MSVC_INCREMENTAL_DEFAULT})\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#We statically link to reduce dependancies\n",
        "Line" : 81,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Disable RTTI\n",
        "Line" : 145,
        "CharPositionInLine" : 69
      },
      "10" : {
        "Text" : "# GCC, Clang\n",
        "Line" : 224,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# This is the shortcut to finding GLU, GLUT and OpenGL if they are properly installed on your system\n\n# This should be the case.\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#FIND_PACKAGE(GLU)\n",
        "Line" : 280,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Optional Python configuration\n\n# builds pybullet automatically if all the requirements are met\n",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# first find the python interpreter\n",
        "Line" : 299,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# python library should exactly match that of the interpreter\n",
        "Line" : 301,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#include(FindNumPy)\n",
        "Line" : 322,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "#unset(BUILD_OPENGL3_DEMOS CACHE)\n",
        "Line" : 357,
        "CharPositionInLine" : 3
      },
      "18" : {
        "Text" : "#Maya Dynamica plugin is moved to http://dynamica.googlecode.com\n",
        "Line" : 395,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#by default, don't enable the 'INSTALL' option for Xcode and MSVC projectfiles\n",
        "Line" : 405,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## the following are directories where stuff will be installed to\n",
        "Line" : 413,
        "CharPositionInLine" : 1
      },
      "21" : {
        "Text" : "#INSTALL of other files requires CMake 2.6\n",
        "Line" : 426,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 22
    },
    "Mezzanine/libincludes/common/bulletsrc/bulletsvnsrc/Extras/CMakeLists.txt" : {
      "ObjectId" : "eaa2384bab33240038251f8ac63dd5f6f385f614",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Maya Dynamica plugin is moved to http://dynamica.googlecode.com\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#IF (USE_GLUT AND GLUT_FOUND)\n\n#\tSUBDIRS (glui)\n\n#ENDIF ()\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/bulletsrc/bulletsvnsrc/Extras/ConvexDecomposition/CMakeLists.txt" : {
      "ObjectId" : "693e9d26a426faf3b080e8ee31dbbf9c47e8f04e",
      "LastModified" : "2011-12-02T04:17:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#FILES_MATCHING requires CMake 2.6\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Mezzanine/libincludes/common/bulletsrc/bulletsvnsrc/Extras/GIMPACTUtils/CMakeLists.txt" : {
      "ObjectId" : "5c9480a97911ae846687d6682ddbc94efb0d2aab",
      "LastModified" : "2011-12-02T04:17:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#FILES_MATCHING requires CMake 2.6\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Mezzanine/libincludes/common/bulletsrc/bulletsvnsrc/Extras/HACD/CMakeLists.txt" : {
      "ObjectId" : "664a51a5c859341de1344e9405f2e45e654aac42",
      "LastModified" : "2017-05-15T08:12:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#IF (BUILD_SHARED_LIBS)\n\n#  TARGET_LINK_LIBRARIES(HACD BulletCollision LinearMath)\n\n#ENDIF (BUILD_SHARED_LIBS)\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#FILES_MATCHING requires CMake 2.6\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/bulletsrc/bulletsvnsrc/Extras/InverseDynamics/CMakeLists.txt" : {
      "ObjectId" : "1e2031fcb216f7e4a8f7ff1afc8e4c7b211eed76",
      "LastModified" : "2017-05-15T08:12:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#FILES_MATCHING requires CMake 2.6\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Mezzanine/libincludes/common/bulletsrc/bulletsvnsrc/Extras/Makefile.am" : {
      "ObjectId" : "f4cd5eac827c0718aadf50f087173ee7261a536d",
      "LastModified" : "2017-05-15T08:12:36Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Mezzanine/libincludes/common/bulletsrc/bulletsvnsrc/Extras/Serialize/BlenderSerialize/CMakeLists.txt" : {
      "ObjectId" : "4c75188f2aae3cd6c537956e2ae18e8404e6014a",
      "LastModified" : "2017-05-15T08:12:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Mezzanine/libincludes/common/bulletsrc/bulletsvnsrc/Extras/Serialize/BulletFileLoader/CMakeLists.txt" : {
      "ObjectId" : "e88720ad3bcb26672c61107552a61526ee8d23db",
      "LastModified" : "2017-05-15T08:12:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#FILES_MATCHING requires CMake 2.6\n",
        "Line" : 32,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Mezzanine/libincludes/common/bulletsrc/bulletsvnsrc/Extras/Serialize/BulletWorldImporter/CMakeLists.txt" : {
      "ObjectId" : "599625183b870c4d9b591016fb4f67961cfcf312",
      "LastModified" : "2017-05-15T08:12:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#FILES_MATCHING requires CMake 2.6\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Mezzanine/libincludes/common/bulletsrc/bulletsvnsrc/Extras/Serialize/BulletXmlWorldImporter/CMakeLists.txt" : {
      "ObjectId" : "f453421014e8151658d5bb35aa2f52019b781ff8",
      "LastModified" : "2017-05-15T08:12:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#FILES_MATCHING requires CMake 2.6\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Mezzanine/libincludes/common/bulletsrc/bulletsvnsrc/Extras/Serialize/CMakeLists.txt" : {
      "ObjectId" : "68b1d19254fb1a14dff635a07c66b22634589110",
      "LastModified" : "2017-05-15T08:12:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# makesdna and HeaderGenerator are for advanced use only\n\n# makesdna can re-generate the binary DNA representing the Bullet serialization structures\n\n# Be very careful modifying any of this, otherwise the .bullet format becomes incompatible\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Mezzanine/libincludes/common/bulletsrc/bulletsvnsrc/Extras/Serialize/HeaderGenerator/CMakeLists.txt" : {
      "ObjectId" : "4739fcbdf6dcc4a8bbfb21edc73aa7bed8397325",
      "LastModified" : "2017-05-15T08:12:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Mezzanine/libincludes/common/bulletsrc/bulletsvnsrc/Extras/Serialize/ReadBulletSample/CMakeLists.txt" : {
      "ObjectId" : "6d6fbab588c5d43ee8a1976a6d6913e1c68430b1",
      "LastModified" : "2017-05-15T08:12:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Mezzanine/libincludes/common/bulletsrc/bulletsvnsrc/Extras/Serialize/makesdna/CMakeLists.txt" : {
      "ObjectId" : "3157b0ff417c3c9b801bd76e8cb80a38543bb40f",
      "LastModified" : "2017-05-15T08:12:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#FILE(GLOB INC_FILES ../*.h)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build makesdna executable\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Output BulletDNA.c\n",
        "Line" : 27,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# Output BulletDNA.c\n",
        "Line" : 36,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# Build bf_dna library\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Mezzanine/libincludes/common/bulletsrc/bulletsvnsrc/Extras/obj2sdf/CMakeLists.txt" : {
      "ObjectId" : "6de9d51c6198ecdce84079da671c609333b74dd7",
      "LastModified" : "2017-05-15T08:12:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Mezzanine/libincludes/common/bulletsrc/bulletsvnsrc/UseBullet.cmake" : {
      "ObjectId" : "5ed94874adef5d19426cb1322c1e60346b0e9b9b",
      "LastModified" : "2017-05-15T08:12:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#                                               -*- cmake -*-\n\n#\n\n#  UseBullet.cmake\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Mezzanine/libincludes/common/bulletsrc/bulletsvnsrc/build3/cmake/FindNumPy.cmake" : {
      "ObjectId" : "5ce9e178c5a53cb04eb307a9a3e2f7db32c8e4c9",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find the NumPy libraries\n\n# This module finds if NumPy is installed, and sets the following variables\n\n# indicating where it is.\n\n#\n\n# TODO: Update to provide the libraries and paths for linking npymath lib.\n\n#\n\n#  PYTHON_NUMPY_FOUND               - was NumPy found\n\n#  PYTHON_NUMPY_VERSION             - the version of NumPy found as a string\n\n#  PYTHON_NUMPY_VERSION_MAJOR       - the major version number of NumPy\n\n#  PYTHON_NUMPY_VERSION_MINOR       - the minor version number of NumPy\n\n#  PYTHON_NUMPY_VERSION_PATCH       - the patch version number of NumPy\n\n#  PYTHON_NUMPY_VERSION_DECIMAL     - e.g. version 1.6.1 is 10601\n\n#  PYTHON_NUMPY_INCLUDE_DIR         - path to the NumPy include files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# caffe_clear_vars(__result __output __error_value __values __ver_check __error_value)\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/bulletsrc/bulletsvnsrc/build3/cmake/FindPythonLibs.cmake" : {
      "ObjectId" : "a0e9bffbeb92fd09314e894603e2f8e7c3d94490",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find python libraries\n\n# This module finds if Python is installed and determines where the\n\n# include files and libraries are. It also determines what the name of\n\n# the library is. This code sets the following variables:\n\n#\n\n#  PYTHONLIBS_FOUND           - have the Python libs been found\n\n#  PYTHON_LIBRARIES           - path to the python library\n\n#  PYTHON_INCLUDE_PATH        - path to where Python.h is found (deprecated)\n\n#  PYTHON_INCLUDE_DIRS        - path to where Python.h is found\n\n#  PYTHON_DEBUG_LIBRARIES     - path to the debug library (deprecated)\n\n#  PYTHONLIBS_VERSION_STRING  - version of the Python libs found (since CMake 2.8.8)\n\n#\n\n# The Python_ADDITIONAL_VERSIONS variable can be used to specify a list of\n\n# version numbers that should be taken into account when searching for Python.\n\n# You need to set this variable before calling find_package(PythonLibs).\n\n#\n\n# If you'd like to specify the installation of Python to use, you should modify\n\n# the following cache variables:\n\n#  PYTHON_LIBRARY             - path to the python library\n\n#  PYTHON_INCLUDE_DIR         - path to where Python.h is found\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2001-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Note by Nikolaus Demmel 28.03.2014: My contributions are licensend under the\n\n# same as CMake (BSD). My adaptations are in part based\n\n# https://github.com/qgis/QGIS/tree/master/cmake which has the following\n\n# copyright note:\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Copyright (c) 2007, Simon Edwards <simon@simonzone.com>\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# For backward compatibility, repect PYTHON_INCLUDE_PATH.\n",
        "Line" : 47,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# add an empty version to check the `python` executable first in case no version is requested\n",
        "Line" : 87,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Set up the versions we know about, in the order we will search. Always add\n\n# the user supplied additional versions to the front.\n\n# If FindPythonInterp has already found the major and minor version,\n\n# insert that version between the user supplied versions and the stock\n\n# version list.\n\n# If no specific version is requested or suggested by PythonInterp, always look\n\n# for \"python\" executable first\n",
        "Line" : 95,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# empty entry at the front makeing sure we search for \"python\" first\n",
        "Line" : 107,
        "CharPositionInLine" : 30
      },
      "8" : {
        "Text" : "# it's called \"Python 2.7\", not \"2.7.0\"\n",
        "Line" : 201,
        "CharPositionInLine" : 14
      },
      "9" : {
        "Text" : "# version ok\n",
        "Line" : 208,
        "CharPositionInLine" : 18
      },
      "10" : {
        "Text" : "# could extract config\n",
        "Line" : 211,
        "CharPositionInLine" : 16
      },
      "11" : {
        "Text" : "# found executable\n",
        "Line" : 212,
        "CharPositionInLine" : 14
      },
      "12" : {
        "Text" : "# python names\n",
        "Line" : 213,
        "CharPositionInLine" : 17
      },
      "13" : {
        "Text" : "# python versions\n",
        "Line" : 217,
        "CharPositionInLine" : 15
      },
      "14" : {
        "Text" : "# For backward compatibility, set PYTHON_INCLUDE_PATH.\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# We use PYTHON_INCLUDE_DIR, PYTHON_LIBRARY and PYTHON_DEBUG_LIBRARY for the\n\n# cache entries because they are meant to specify the location of a single\n\n# library. We now set the variables listed by the documentation for this\n\n# module.\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# These variables have been historically named in this module different from\n\n# what SELECT_LIBRARY_CONFIGURATIONS() expects.\n",
        "Line" : 251,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# SELECT_LIBRARY_CONFIGURATIONS() sets ${PREFIX}_FOUND if it has a library.\n\n# Unset this, this prefix doesn't match the module prefix, they are different\n\n# for historical reasons.\n",
        "Line" : 257,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# include(${CMAKE_CURRENT_LIST_DIR}/FindPackageHandleStandardArgs.cmake)\n",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# PYTHON_ADD_MODULE(<name> src1 src2 ... srcN) is used to build modules for python.\n\n# PYTHON_WRITE_MODULES_HEADER(<filename>) writes a header file you can include\n\n# in your sources to initialize the static python modules\n",
        "Line" : 268,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Mark these options as advanced\n",
        "Line" : 278,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "#    target_link_libraries(${_NAME} ${PYTHON_LIBRARIES})\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# with configure_file() cmake complains that you may not use a file created using file(WRITE) as input file for configure_file()\n",
        "Line" : 350,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "Mezzanine/libincludes/common/bulletsrc/bulletsvnsrc/build3/cmake/SelectLibraryConfigurations.cmake" : {
      "ObjectId" : "dce6f99262df94c26ea76fc248ceda6081d80804",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# SelectLibraryConfigurations\n\n# ---------------------------\n\n#\n\n#\n\n#\n\n# select_library_configurations( basename )\n\n#\n\n# This macro takes a library base name as an argument, and will choose\n\n# good values for basename_LIBRARY, basename_LIBRARIES,\n\n# basename_LIBRARY_DEBUG, and basename_LIBRARY_RELEASE depending on what\n\n# has been found and set.  If only basename_LIBRARY_RELEASE is defined,\n\n# basename_LIBRARY will be set to the release value, and\n\n# basename_LIBRARY_DEBUG will be set to basename_LIBRARY_DEBUG-NOTFOUND.\n\n# If only basename_LIBRARY_DEBUG is defined, then basename_LIBRARY will\n\n# take the debug value, and basename_LIBRARY_RELEASE will be set to\n\n# basename_LIBRARY_RELEASE-NOTFOUND.\n\n#\n\n# If the generator supports configuration types, then basename_LIBRARY\n\n# and basename_LIBRARIES will be set with debug and optimized flags\n\n# specifying the library to be used for the given configuration.  If no\n\n# build type has been set or the generator in use does not support\n\n# configuration types, then basename_LIBRARY and basename_LIBRARIES will\n\n# take only the release value, or the debug value if the release one is\n\n# not set.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This macro was adapted from the FindQt4 CMake module and is maintained by Will\n\n# Dicharry <wdicharry@stellarscience.com>.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# if the generator supports configuration types or CMAKE_BUILD_TYPE\n\n# is set, then set optimized and debug options.\n",
        "Line" : 44,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 4
    },
    "Mezzanine/libincludes/common/bulletsrc/bulletsvnsrc/bullet.pc.cmake" : {
      "ObjectId" : "8b989faba3cc8821ff4ab63db6bd75121cb4f67f",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Mezzanine/libincludes/common/bulletsrc/bulletsvnsrc/examples/BasicDemo/CMakeLists.txt" : {
      "ObjectId" : "533f4045a8076bbe73c9fc78f83971aa0893e1e3",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# App_BasicExample is a minimal sample creating, stepping and deleting a Bullet dynamics world\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#################\n\n# Standalone BasicExampleGui using OpenGL (but not the example browser)\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#this define maps StandaloneExampleCreateFunc to the right 'CreateFunc'\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#some code to support OpenGL and Glew cross platform\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Mezzanine/libincludes/common/bulletsrc/bulletsvnsrc/examples/CMakeLists.txt" : {
      "ObjectId" : "d5cb1820716a5a01404c98789ab88bafd81ed240",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Mezzanine/libincludes/common/bulletsrc/bulletsvnsrc/examples/ExampleBrowser/CMakeLists.txt" : {
      "ObjectId" : "e21d33d406b31de310258f462bce685d5777f409",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "####################\n\n#\n\n# Bullet Example Browser main app\n\n#\n\n####################\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add a post build command to copy some dlls to the executable directory\n",
        "Line" : 368,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# assume 32-bit build in VC12 for now\n\n# checks can be added here at a later time\n",
        "Line" : 371,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "Mezzanine/libincludes/common/bulletsrc/bulletsvnsrc/examples/HelloWorld/CMakeLists.txt" : {
      "ObjectId" : "f61fbe67679e7bf5bc262397ce8fb207b87cbc6f",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# HelloWorld is a minimal sample creating, stepping and deleting a Bullet dynamics world\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Mezzanine/libincludes/common/bulletsrc/bulletsvnsrc/examples/OpenGLWindow/CMakeLists.txt" : {
      "ObjectId" : "55b53b0539c4831e7d54b27248f7e9b1c819a1e7",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#MESSAGE (${OpenGLWindowCommon_CPP})\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#no Linux detection?\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#target_link_libraries(OpenGLWindow ${OPENGL_gl_LIBRARY})\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Mezzanine/libincludes/common/bulletsrc/bulletsvnsrc/examples/RobotSimulator/CMakeLists.txt" : {
      "ObjectId" : "7d35a445e73f9346b242ab3f79f36c06dd41d6c9",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#some code to support OpenGL and Glew cross platform\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Mezzanine/libincludes/common/bulletsrc/bulletsvnsrc/examples/SharedMemory/CMakeLists.txt" : {
      "ObjectId" : "44ceefca3519815f5e042162e9b5d8d8fac1a6b5",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Mezzanine/libincludes/common/bulletsrc/bulletsvnsrc/examples/SimpleOpenGL3/CMakeLists.txt" : {
      "ObjectId" : "ef0bbb0505f5b768193dc036325ea56fbbdc7183",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Mezzanine/libincludes/common/bulletsrc/bulletsvnsrc/examples/ThirdPartyLibs/BussIK/CMakeLists.txt" : {
      "ObjectId" : "96dc16025b31286862d626a70ed6846e95df963f",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Mezzanine/libincludes/common/bulletsrc/bulletsvnsrc/examples/ThirdPartyLibs/Gwen/CMakeLists.txt" : {
      "ObjectId" : "82fa0ffba7fa022b3fa13d4f2b1f597f2eb3ba74",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Mezzanine/libincludes/common/bulletsrc/bulletsvnsrc/examples/ThirdPartyLibs/clsocket/CMakeLists.txt" : {
      "ObjectId" : "bb9a4c1e144395c4c68fe9b4350ed00f24cacfac",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#cmake_minimum_required(VERSION 2.8 FATAL_ERROR)\n\n#project(clsocket)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set up versioning.\n\n#set(BUILD_MAJOR \"1\")\n\n#set(BUILD_MINOR \"4\")\n\n#set(BUILD_VERSION \"3\")\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# mark headers as headers...\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# append to sources so that dependency checks work on headers\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# OS and compiler checks. \n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# linux / normal unix\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Special MINGW stuff here\n",
        "Line" : 38,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Special MSVC stuff here\n",
        "Line" : 40,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# No idea what it is, but there's a good chance it's too weird.\n",
        "Line" : 43,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# make the lib\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# install into configured prefix\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "Mezzanine/libincludes/common/bulletsrc/bulletsvnsrc/examples/ThirdPartyLibs/lua-5.2.3/CMakeLists.txt" : {
      "ObjectId" : "4dac5e0c097e8a4a75f5f9a2bbdf6d40567744fe",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Mezzanine/libincludes/common/bulletsrc/bulletsvnsrc/examples/pybullet/CMakeLists.txt" : {
      "ObjectId" : "c2f9fd49f1713c0a2450e034fb4184d2d7037249",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Mezzanine/libincludes/common/bulletsrc/bulletsvnsrc/src/Bullet3Collision/CMakeLists.txt" : {
      "ObjectId" : "130095cc04ecafc26d9dd0d1f29e0686a6384262",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#FILES_MATCHING requires CMake 2.6\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Have to list out sub-directories manually:\n\n#todo\n\n#SET_PROPERTY(SOURCE ${Bullet3CollisionBroadPhase_HDRS} PROPERTY MACOSX_PACKAGE_LOCATION Headers/BroadPhaseCollision)\n",
        "Line" : 87,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/bulletsrc/bulletsvnsrc/src/Bullet3Common/CMakeLists.txt" : {
      "ObjectId" : "e899e67d944eda2d70ceca8ed5d7733ecf4e02ce",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#FILES_MATCHING requires CMake 2.6\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Mezzanine/libincludes/common/bulletsrc/bulletsvnsrc/src/Bullet3Dynamics/CMakeLists.txt" : {
      "ObjectId" : "94c120d9b54fa6378fe34335a256ab29d1f53ce4",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#FILES_MATCHING requires CMake 2.6\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Mezzanine/libincludes/common/bulletsrc/bulletsvnsrc/src/Bullet3Geometry/CMakeLists.txt" : {
      "ObjectId" : "82068727054dcf55bcbad4e48d06ae108a51fe54",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#FILES_MATCHING requires CMake 2.6\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Mezzanine/libincludes/common/bulletsrc/bulletsvnsrc/src/Bullet3OpenCL/CMakeLists.txt" : {
      "ObjectId" : "45df06ff689a8e963bd1ac43d146fdfaabe180ae",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\t${Root_HDRS}\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#INSTALL of other files requires CMake 2.6\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#\t\t\t\tINSTALL(FILES ../btBullet3OpenCL_clewCommon.h\n\n#DESTINATION ${INCLUDE_INSTALL_DIR}/Bullet3OpenCL_clew)\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Have to list out sub-directories manually:\n",
        "Line" : 73,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 4
    },
    "Mezzanine/libincludes/common/bulletsrc/bulletsvnsrc/src/Bullet3Serialize/Bullet2FileLoader/CMakeLists.txt" : {
      "ObjectId" : "125576634f098ab3a3751a45c27a1d817f26778a",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#FILES_MATCHING requires CMake 2.6\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Mezzanine/libincludes/common/bulletsrc/bulletsvnsrc/src/BulletCollision/CMakeLists.txt" : {
      "ObjectId" : "85c5fc8b647b8e27a58fdd2d4433210aadbfd86a",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#INSTALL of other files requires CMake 2.6\n",
        "Line" : 264,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Have to list out sub-directories manually:\n",
        "Line" : 283,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/bulletsrc/bulletsvnsrc/src/BulletDynamics/CMakeLists.txt" : {
      "ObjectId" : "4023d721e788da8e0b6875c0187b0e2002bf0484",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\tDynamics/Bullet-C-API.cpp\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Have to list out sub-directories manually:\n",
        "Line" : 159,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/bulletsrc/bulletsvnsrc/src/BulletInverseDynamics/CMakeLists.txt" : {
      "ObjectId" : "3331c27eac0e2a5dbc2df3ac634ed1e4e0f2fb16",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#INSTALL of other files requires CMake 2.6\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Have to list out sub-directories manually:\n",
        "Line" : 61,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/bulletsrc/bulletsvnsrc/src/BulletSoftBody/CMakeLists.txt" : {
      "ObjectId" : "d43df1c67b3103f75831cb50ec2680ba1b363326",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#SUBDIRS( Solvers )\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Mezzanine/libincludes/common/bulletsrc/bulletsvnsrc/src/CMakeLists.txt" : {
      "ObjectId" : "bbeabafbb525b8968c9bb252d351374c4035a823",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#INSTALL of other files requires CMake 2.6\n",
        "Line" : 11,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Don't actually need to install any common files, the frameworks include everything\n",
        "Line" : 14,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/bulletsrc/bulletsvnsrc/src/LinearMath/CMakeLists.txt" : {
      "ObjectId" : "ede21d9a70c959572b927b6f948ad921c1660d2f",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#FILES_MATCHING requires CMake 2.6\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Mezzanine/libincludes/common/bulletsrc/bulletsvnsrc/test/BulletDynamics/CMakeLists.txt" : {
      "ObjectId" : "ceeb2b4f4c21b031936b06e362b767fdcd6cea4c",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Mezzanine/libincludes/common/bulletsrc/bulletsvnsrc/test/BulletDynamics/pendulum/CMakeLists.txt" : {
      "ObjectId" : "570dc07154365b2a2079b3360c0365f314f35aea",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Mezzanine/libincludes/common/bulletsrc/bulletsvnsrc/test/CMakeLists.txt" : {
      "ObjectId" : "9bbfdf78c5df9f11b7c1a21f702f59da73ccf8de",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#SUBDIRS( TestBullet3OpenCL )\n",
        "Line" : 2,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "Mezzanine/libincludes/common/bulletsrc/bulletsvnsrc/test/InverseDynamics/CMakeLists.txt" : {
      "ObjectId" : "217655b090f64c05e15d17f691fa394ee1fdcbb3",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ADD_DEFINITIONS(-DGTEST_HAS_PTHREAD=1)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#ADD_DEFINITIONS(-DGTEST_HAS_PTHREAD=1)\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#ADD_DEFINITIONS(-DGTEST_HAS_PTHREAD=1)\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Mezzanine/libincludes/common/bulletsrc/bulletsvnsrc/test/SharedMemory/CMakeLists.txt" : {
      "ObjectId" : "542a52bb3faad55816088118d8508f7c3490c65b",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ADD_DEFINITIONS(-DGTEST_HAS_PTHREAD=1)\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Mezzanine/libincludes/common/bulletsrc/bulletsvnsrc/test/collision/CMakeLists.txt" : {
      "ObjectId" : "b36c151be5c82625f0bc72b5264b336e580d61ce",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ADD_DEFINITIONS(-DGTEST_HAS_PTHREAD=1)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Mezzanine/libincludes/common/bulletsrc/bulletsvnsrc/test/gtest-1.7.0/CMakeLists.txt" : {
      "ObjectId" : "0091e25ec1625d110a1fb8274737527bc0a9d3e3",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ADD_DEFINITIONS(-DGTEST_HAS_PTHREAD=1)\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Mezzanine/libincludes/common/exceptions/CMakeLists.txt" : {
      "ObjectId" : "c4ae092c136b78e825c8ee36c3ce65ab7f33fe46",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Â© Copyright 2010 - 2015 BlackTopp Studios Inc\n\n# This file is part of The Mezzanine Engine\n\n#\n\n#    The Mezzanine Engine is free software: you can redistribute it and/or modify\n\n#    it under the terms of the GNU General Public License as published by\n\n#    the Free Software Foundation, either version 3 of the License, or\n\n#    (at your option) any later version\n\n#\n\n#    The Mezzanine Engine is distributed in the hope that it will be useful,\n\n#    but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n#    GNU General Public License for more detail\n\n#\n\n#    You should have received a copy of the GNU General Public License\n\n#    along with The Mezzanine Engine.  If not, see <http://www.gnu.org/licenses/>\n\n#\n\n#   The original authors have included a copy of the license specified above in the\n\n#   'Docs' folder. See 'gpl.txt'\n\n#\n\n#   We welcome the use of the Mezzanine engine to anyone, including companies who wish to\n\n#   Build professional software and charge for their product\n\n#\n\n#   However there are some practical restrictions, so if your project involves\n\n#   any of the following you should contact us and we will try to work something\n\n#   out:\n\n#    - DRM or Copy Protection of any kind(except Copyrights\n\n#    - Software Patents You Do Not Wish to Freely License\n\n#    - Any Kind of Linking to Non-GPL licensed Works\n\n#    - Are Currently In Violation of Another Copyright Holder's GPL License\n\n#    - If You want to change our code and not add a few hundred MB of stuff to\n\n#        your distribution\n\n#\n\n#   These and other limitations could cause serious legal problems if you ignore\n\n#   them, so it is best to simply contact us or the Free Software Foundation, if\n\n#   you have any questions\n\n#\n\n#   Joseph Toppi - toppij@gmail.com\n\n#   John Blackwood - makoenergy02@gmail.com\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Identify root folders\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Prepare some formats - Be sure each of these files ends in a newline or enjoy syntax errors\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Some places to store\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "##\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "##\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "##\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "##\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "##\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# message(STATUS \"Writing exception hiearchy to ${DestinationDirectory}GeneratedExceptions.h\")#\n\n# message(STATUS \"Enumerations double check ${ExceptionEnumerations}\")#\n\n# message(STATUS \"Exceptions double check ${Exceptions}\")#\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "Mezzanine/libincludes/common/lua51/CMakeLists.txt" : {
      "ObjectId" : "c6f217010547d94ec39033dd3b87581611c388ab",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Â© Copyright 2010 - 2016 BlackTopp Studios Inc.\r\n\n# This file is part of The Mezzanine Engine.\r\n\n#\r\n\n#    The Mezzanine Engine is free software: you can redistribute it and/or modify\r\n\n#    it under the terms of the GNU General Public License as published by\r\n\n#    the Free Software Foundation, either version 3 of the License, or\r\n\n#    (at your option) any later version.\r\n\n#\r\n\n#    The Mezzanine Engine is distributed in the hope that it will be useful,\r\n\n#    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n\n#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n\n#    GNU General Public License for more details.\r\n\n#\r\n\n#    You should have received a copy of the GNU General Public License\r\n\n#    along with The Mezzanine Engine.  If not, see <http://www.gnu.org/licenses/>.\r\n\n#\r\n\n#   The original authors have included a copy of the license specified above in the\r\n\n#   'Docs' folder. See 'gpl.txt'\r\n\n#\r\n\n#   We welcome the use of the Mezzanine engine to anyone, including companies who wish to\r\n\n#   Build professional software and charge for their product.\r\n\n#\r\n\n#   However there are some practical restrictions, so if your project involves\r\n\n#   any of the following you should contact us and we will try to work something\r\n\n#   out:\r\n\n#    - DRM or Copy Protection of any kind(except Copyrights)\r\n\n#    - Software Patents You Do Not Wish to Freely License\r\n\n#    - Any Kind of Linking to Non-GPL licensed Works\r\n\n#    - Are Currently In Violation of Another Copyright Holder's GPL License\r\n\n#    - If You want to change our code and not add a few hundred MB of stuff to\r\n\n#        your distribution\r\n\n#\r\n\n#   These and other limitations could cause serious legal problems if you ignore\r\n\n#   them, so it is best to simply contact us or the Free Software Foundation, if\r\n\n#   you have any questions.\r\n\n#\r\n\n#   Joseph Toppi - toppij@gmail.com\r\n\n#   John Blackwood - makoenergy02@gmail.com\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################################################\r\n\n# The build script for one piece of the Mezzanine engine\r\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#add_definitions( ${CommonBuildFlags} )\r\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# All the source files\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# \"lua5.1/src/wmain.c\"\r\n",
        "Line" : 108,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Force C++\r\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Where the resulting cpp project should search for headers\r\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Where to dump the results\r\n\n#set (LIBRARY_OUTPUT_PATH \"${Mezzanine_ROOT_DIR}data/${BuildPlatform}/lua51/\")\r\n\n#set (LIBRARY_OUTPUT_PATH \"${LIBRARY_OUTPUT_PATH}data/${BuildPlatform}/lua51/\")\r\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Make a binary with the given source files\r\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "Mezzanine/libincludes/common/lua51/lua5.1/Makefile" : {
      "ObjectId" : "56a9b665dd925ac55ddc3161273ffc1bc8598c00",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# makefile for installing Lua\n\n# see INSTALL for installation instructions\n\n# see src/Makefile and src/luaconf.h for further customization\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# == CHANGE THE SETTINGS BELOW TO SUIT YOUR ENVIRONMENT =======================\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Your platform. See PLATS for possible values.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Where to install. The installation starts in the src directory, so take care\n\n# if INSTALL_TOP is not an absolute path. (Man pages are installed from the\n\n# doc directory.)\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# How to install. You may prefer \"install\" instead of \"cp\" if you have it.\n\n# To remove debug information from binaries, use \"install -s\" in INSTALL_EXEC.\n\n#\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#INSTALL_EXEC= $(INSTALL) -m 0755\n\n#INSTALL_DATA= $(INSTALL) -m 0644\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Utilities.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# == END OF USER SETTINGS. NO NEED TO CHANGE ANYTHING BELOW THIS LINE =========\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Convenience platforms targets.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# What to install.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Lua version. Currently used only for messages.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\t$(RANLIB) $(INSTALL_LIB)/$(TO_LIB)\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# make may get confused with test/ and INSTALL in a case-insensitive OS\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# echo config parameters\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# echo private config parameters\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# echo config parameters as Lua code\n\n# uncomment the last sed expression if you want nil instead of empty strings\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#-e 's/\"\"/nil/'\n",
        "Line" : 116,
        "CharPositionInLine" : 58
      },
      "17" : {
        "Text" : "# show what has changed since we unpacked\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# list targets that do not create files (but not all makes understand .PHONY)\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# (end of Makefile)\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "Mezzanine/libincludes/common/lua51/lua5.1/etc/Makefile" : {
      "ObjectId" : "6d00008d98157eb4c3c83db0e74682f756c8104d",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# makefile for Lua etc\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#MYLIBS= -lm -Wl,-E -ldl -lreadline -lhistory -lncurses\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/lua51/lua5.1/src/Makefile" : {
      "ObjectId" : "1d46d3423a7383ef796560c9256faca780d247b5",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# makefile for building Lua\n\n# see ../INSTALL for installation instructions\n\n# see ../Makefile and luaconf.h for further customization\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# == CHANGE THE SETTINGS BELOW TO SUIT YOUR ENVIRONMENT =======================\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Your platform. See PLATS for possible values.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# == END OF USER SETTINGS. NO NEED TO CHANGE ANYTHING BELOW THIS LINE =========\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# convenience targets for popular platforms\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# use this on Mac OS X 10.4\n\n#\t$(MAKE) all MYCFLAGS=\"-DLUA_USE_MACOSX -DLUA_USE_READLINE\" MYLIBS=\"-lreadline\"\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# list targets that do not create files (but not all makes understand .PHONY)\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# DO NOT DELETE\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# (end of Makefile)\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "Mezzanine/libincludes/common/oggvorbis/CMakeLists.txt" : {
      "ObjectId" : "cc784d8a80705322a9a64aecad8251e8ab1c9e71",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Â© Copyright 2010 - 2011 BlackTopp Studios Inc.\n\n# This file is part of The Mezzanine Engine.\n\n#\n\n#    The Mezzanine Engine is free software: you can redistribute it and/or modify\n\n#    it under the terms of the GNU General Public License as published by\n\n#    the Free Software Foundation, either version 3 of the License, or\n\n#    (at your option) any later version.\n\n#\n\n#    The Mezzanine Engine is distributed in the hope that it will be useful,\n\n#    but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n#    GNU General Public License for more details.\n\n#\n\n#    You should have received a copy of the GNU General Public License\n\n#    along with The Mezzanine Engine.  If not, see <http://www.gnu.org/licenses/>.\n\n#\n\n#   The original authors have included a copy of the license specified above in the\n\n#   'Docs' folder. See 'gpl.txt'\n\n#\n\n#   We welcome the use of the Mezzanine engine to anyone, including companies who wish to\n\n#   Build professional software and charge for their product.\n\n#\n\n#   However there are some practical restrictions, so if your project involves\n\n#   any of the following you should contact us and we will try to work something\n\n#   out:\n\n#    - DRM or Copy Protection of any kind(except Copyrights)\n\n#    - Software Patents You Do Not Wish to Freely License\n\n#    - Any Kind of Linking to Non-GPL licensed Works\n\n#    - Are Currently In Violation of Another Copyright Holder's GPL License\n\n#    - If You want to change our code and not add a few hundred MB of stuff to\n\n#        your distribution\n\n#\n\n#   These and other limitations could cause serious legal problems if you ignore\n\n#   them, so it is best to simply contact us or the Free Software Foundation, if\n\n#   you have any questions.\n\n#\n\n#   Joseph Toppi - toppij@gmail.com\n\n#   John Blackwood - makoenergy02@gmail.com\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Add some source files\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\"${${PROJECT_NAME}_SOURCE_DIR}/libvorbis-1.3.3/lib/psytune.c\" # not part of a normal build http://lists.xiph.org/pipermail/vorbis-dev/2001-October/013846.html\n",
        "Line" : 68,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "#add_definitions( ${CommonBuildFlags} )\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#set (LIBRARY_OUTPUT_PATH \"${Mezzanine_ROOT_DIR}data/${BuildPlatform}/oggvorbis/\")\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#SET_SOURCE_FILES_PROPERTIES( ${${PROJECT_NAME}_sources} PROPERTIES LANGUAGE CXX )\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "Mezzanine/libincludes/common/oggvorbis/libogg-1.3.0/Makefile.am" : {
      "ObjectId" : "f7c680b01686968b09dd30d05617434448c4a4e1",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#AUTOMAKE_OPTIONS = foreign 1.6 dist-zip\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/oggvorbis/libogg-1.3.0/doc/Makefile.am" : {
      "ObjectId" : "9c2c316f871a82ffbe9860ed4df83a1e347df2e0",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this with automake to create Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Mezzanine/libincludes/common/oggvorbis/libogg-1.3.0/doc/libogg/Makefile.am" : {
      "ObjectId" : "9eb7d341cbec70817e29463d85d69cd2fa2fec84",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Mezzanine/libincludes/common/oggvorbis/libogg-1.3.0/include/Makefile.am" : {
      "ObjectId" : "0084e4d8298a2ec161888420af70ba0f1f3cc778",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Mezzanine/libincludes/common/oggvorbis/libogg-1.3.0/include/ogg/Makefile.am" : {
      "ObjectId" : "142699d35608e1bbe175746ef0073f8f2e01fb61",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Mezzanine/libincludes/common/oggvorbis/libogg-1.3.0/src/Makefile.am" : {
      "ObjectId" : "b207e7865bfce7ca6cece9b2747b128754d32198",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# build and run the self tests on 'make check'\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/oggvorbis/libvorbis-1.3.3/include/Makefile.am" : {
      "ObjectId" : "0f34fab4ca61c0ef3f650a643f53286d532ab09f",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Mezzanine/libincludes/common/oggvorbis/libvorbis-1.3.3/include/vorbis/Makefile.am" : {
      "ObjectId" : "dbba34e55974a19203f0c094e91a3ed69298e150",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Mezzanine/libincludes/common/oggvorbis/libvorbis-1.3.3/lib/Makefile.am" : {
      "ObjectId" : "50f7ea4f293e79bfab4a5f8bb307a8f24435686c",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# build and run the self tests on 'make check'\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#vorbis_selftests = test_codebook test_sharedbook\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#test_codebook_SOURCES = codebook.c\n\n#test_codebook_CFLAGS = -D_V_SELFTEST\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# recurse for alternate targets\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Mezzanine/libincludes/common/oggvorbis/libvorbis-1.3.3/lib/books/Makefile.am" : {
      "ObjectId" : "3697a7177ec1c115ccd1ef4e9412ce8c6bf08f39",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Mezzanine/libincludes/common/oggvorbis/libvorbis-1.3.3/lib/books/coupled/Makefile.am" : {
      "ObjectId" : "1115201dd09248cd89d8b7af0fbe89cef2236e3d",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Mezzanine/libincludes/common/oggvorbis/libvorbis-1.3.3/lib/books/floor/Makefile.am" : {
      "ObjectId" : "272ab1a28c68d4f0393a7cd41ba6f1f50f4f85fc",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Mezzanine/libincludes/common/oggvorbis/libvorbis-1.3.3/lib/books/uncoupled/Makefile.am" : {
      "ObjectId" : "93ff417c8f13e5a4eff7884acc146cc2f153ac92",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Mezzanine/libincludes/common/oggvorbis/libvorbis-1.3.3/lib/modes/Makefile.am" : {
      "ObjectId" : "5c7ffefaa4a66ac02e8ab68a422e435887e87e9a",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Mezzanine/libincludes/common/ogresrc/CMakeLists.txt" : {
      "ObjectId" : "d1b24bd636cc21cd00dc3628bc3184513366bb2c",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Choose the destination directory\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set( OGRE_BINARY_DIR ${LIBRARY_OUTPUT_PATH} )\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#set( OGREDEPS_BINARY_DIR ${LIBRARY_OUTPUT_PATH} )\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Long list of changes necessary to get ogre properly merged with our project.\n\n# One quick thing to note is that all I applied these changes from top to bottom noting their line number as I went.  If you try to use the mentioned\n\n# line numbers in an unaltered version of the file you will have a bad time.  I try to explain the area of the file by their settings where I could to alleviate this.\n\n#\n\n# Before you get started it's good to know that the Dependencies folder referenced here has to be created and placed manually, and the contents of the dependency source \n\n# repo placed in it minus the hg config files.  A dependencies folder with most/all of the necessary changes should already exist in the repo and be reusable from one \n\n# version of Ogre to the next for the foreseeable future.\n\n#\n\n## Ogre Core Setup\n\n#\n\n# In ogresvnsrc/CMakeLists.txt:\n\n# Around line 547 the cmake configuration will add the Samples subdirectory regardless of the cmake config, where additional code is run that depends on data not set.\n\n# Commenting out this line resolves the issue of this cmake config running on CMake 3.4+.  A better solution to the cmake config should be made for something long term.\n\n#\n\n# In ogresvnsrc/OgreMain/Src/OgreZip.cpp:\n\n# At around line 37 change the include '#include <zzip/zzip.h>' to '#include <zzip.h>'\n\n#\n\n# On windows, you need to change line 260 in ogresvnsrc/Rendersystems/GL/src/Win32/OgreWin32Window.cpp from\n\n# + ::Ogre::StringConverter::toString(le)\n\n# to this,\n\n# + ::Ogre::StringConverter::toString(static_cast<unsigned int>(le))\n\n# \n\n# OpenGL and OpenGL3Plus rendersystems don't seem to want to play nice.  It's entirely possible that other similar rendersystems have similar behavior.  The issue with the OGL\n\n# rendersystems is that in the include paths they have an identically named file, one that includes OGL2 headers, and another includes OGL3 headers.  These headers are entirely \n\n# incompatible and if both are included in the same file/include chain then a compilation error will result.  Exactly that happens in graphicsmanager.cpp.  Even if they aren't,\n\n# there isn't much guarentee that the wrong \"OgreGLSLExtSupport.h\" file will be included.  The directory structure for the GL and GL3Plus rendersystems differs greatly though\n\n# and it seems like the cleanest fix is to use this and alter the include entry in the files to ensure it gets the proper file.\n\n# So a find and replace should be performed where \"#include \"OgreGLSL\" is replaced with \"#include \"GLSL/OgreGLSL\" for all files stored under the \"ogresvnsrc\\RenderSystems\\GL3Plus\"\n\n# directory.\n\n# \n\n## Ogre Dependencies Setup\n\n#\n\n# The \"ios\" and \"Cg\" folders of the dependencies should be deleted and their entries to their directory \n\n#   in the cmake configuration removed, as we do not use Ogre functionality that requires them.\n\n# \n\n# In ogresvnsrc/Dependencies/src/zziplib/CMakeLists.txt:\n\n# At line 38, remove the \"zzip/\" portion of the filename.  Also move the actual file to it's parent folder to properly account for the other change.\n\n# The above change also necessitates removal of the \"zzip/\" portion of the includes in each file of the zziplib that needs it.  The files that need it are below:\n\n# 1. lib.h\n\n# 2. plugin.h\n\n#\n\n# In ogresvnsrc/Dependencies/src/FreeImage/CMakeLists.txt\n\n# Add a line that explicitly tells cmake we need to link against winsock2 if we are on windows.  Add an \"if(WIN32)\" block with \"target_link_libraries(FreeImage ws2_32)\" to around line 536.\n\n#\n\n# --ogresvnsrc/Dependencies/src/FreeImage/Source/LibMNG/libmng_conf.h\n\n# --remark out line 80 to disable the definition of MNG_OPTIMIZE_CHUNKREADER to allow compilation\n\n#\n\n# To get -std=c++11\n\n# in dcraw_common.cpp \n\n# around 9125 this: tiff_set (&th->ntag, 270, , 512, TOFF(th->t_desc));\n\n# should change to: tiff_set (&th->ntag, 270, 0, 512, TOFF(th->t_desc));\n\n# and \n\n# around 9125 this: strcpy (th->soft, \"dcraw v\"DCRAW_VERSION);\n\n# should change to: strcpy (th->soft, \"dcraw v9.12\");\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Ogre Core\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Ogre Components\n\n#set(OGRE_BUILD_COMPONENT_HLMS FALSE CACHE BOOL \"Forcing minimal build for Mezzanine build.\" FORCE)\n\n#set(OGRE_BUILD_COMPONENT_MESHLODGENERATOR FALSE CACHE BOOL \"Forcing minimal build for Mezzanine build.\" FORCE)\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Ogre Dependencies\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Ogre Extras\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Ogre Paths\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Ogre indirect\n",
        "Line" : 127,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Ogre Core\n",
        "Line" : 137,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Ogre Components\n",
        "Line" : 166,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Ogre Dependencies\n",
        "Line" : 178,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Ogre Extras\n",
        "Line" : 190,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Ogre Paths\n",
        "Line" : 200,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 15
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/CMake/CMakeLists.txt" : {
      "ObjectId" : "4c496b7cf5b26ae77a89f3cc3bca4fdf7a8495c5",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#############################################################\n\n# Install useful CMake modules.\n\n# These are necessary to compile the samples from the install\n\n# directory, but can also be used for custom projects.\n\n#############################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/CMake/ConfigureBuild.cmake" : {
      "ObjectId" : "5b3a213bcb34c9aa9a3147a7e4b7a0f0e9413a09",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#######################################################################\n\n# This file takes care of configuring Ogre to build with the settings\n\n# given in CMake. It creates the necessary config.h file and will\n\n# also prepare package files for pkg-config and CMake.\n\n#######################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# should we build static libs?\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# configure threading options\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# On MSVC Boost usually tries to autolink boost libraries. However since\n\n# this behaviour is not available on all compilers, we need to find the libraries\n\n# ourselves, anyway. Disable auto-linking to avoid mess-ups.\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# mingw needs this to link against static thread libraries\n",
        "Line" : 48,
        "CharPositionInLine" : 12
      },
      "6" : {
        "Text" : "# determine config values depending on build options\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# generate OgreBuildSettings.h\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Create the pkg-config package files on Unix systems\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# there is no pkgconfig file for freeimage, so we need to add that lib manually\n",
        "Line" : 229,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# configure additional packages\n",
        "Line" : 237,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "#We statically link to reduce dependencies\n",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "### Commented because the FindOGRE script can currently fill this role better ###\n\n# # Create the CMake package files\n\n# if (WIN32)\n\n#   set(OGRE_CMAKE_DIR CMake)\n\n# elseif (UNIX)\n\n#   set(OGRE_CMAKE_DIR lib/cmake)\n\n# elseif (APPLE)\n\n# endif ()\n\n# configure_file(${OGRE_TEMPLATES_DIR}/OGREConfig.cmake.in ${OGRE_BINARY_DIR}/cmake/OGREConfig.cmake @ONLY)\n\n# configure_file(${OGRE_TEMPLATES_DIR}/OGREConfigVersion.cmake.in ${OGRE_BINARY_DIR}/cmake/OGREConfigVersion.cmake @ONLY)\n\n# install(FILES\n\n#   ${OGRE_BINARY_DIR}/cmake/OGREConfig.cmake\n\n#   ${OGRE_BINARY_DIR}/cmake/OGREConfigVersion.cmake\n\n#   DESTINATION ${OGRE_CMAKE_DIR}\n\n# )\n\n#\n",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/CMake/Dependencies.cmake" : {
      "ObjectId" : "7b77ace4d59ff5d5a3d52470ce566141bf965ccc",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#######################################################################\n\n# Find all necessary and optional OGRE dependencies\n\n#######################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# OGRE_DEPENDENCIES_DIR can be used to specify a single base\n\n# folder where the required dependencies may be found.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set hardcoded path guesses for various platforms\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Ubuntu 11.10 has an inconvenient path to OpenGL libraries\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# give guesses as hints to the find_package calls\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#######################################################################\n\n# Core dependencies\n\n#######################################################################\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Find zlib\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Find zziplib\n",
        "Line" : 81,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Find FreeImage\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Find FreeType\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Find X11\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#######################################################################\n\n# RenderSystem dependencies\n\n#######################################################################\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Find OpenGL\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Find OpenGL 3+\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Find OpenGL ES 1.x\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Find OpenGL ES 2.x\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Find OpenGL ES 3.x\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Find DirectX\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Find DirectX Stereo Driver Libraries\n",
        "Line" : 140,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "#######################################################################\n\n# Additional features\n\n#######################################################################\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Find Cg\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Find Boost\n\n# Prefer static linking in all cases\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Statically linking boost to a dynamic Ogre build doesn't work on Linux 64bit\n",
        "Line" : 164,
        "CharPositionInLine" : 1
      },
      "24" : {
        "Text" : "# FindBoost needs extra hint on android \n",
        "Line" : 172,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# Components that need linking (NB does not include header-only components like bind)\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Try again with the other type of libs\n",
        "Line" : 181,
        "CharPositionInLine" : 1
      },
      "27" : {
        "Text" : "# Use boost threading version 4 for boost 1.53 and above\n",
        "Line" : 200,
        "CharPositionInLine" : 1
      },
      "28" : {
        "Text" : "# Optional Boost libs (Boost_${COMPONENT}_FOUND\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# POCO\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# ThreadingBuildingBlocks\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# GLSL-Optimizer\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# HLSL2GLSL\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Python\n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#######################################################################\n\n# Samples dependencies\n\n#######################################################################\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Find OIS\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# for WinRT we need only includes\n",
        "Line" : 248,
        "CharPositionInLine" : 1
      },
      "37" : {
        "Text" : "#######################################################################\n\n# Tools\n\n#######################################################################\n",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Find Softimage SDK\n",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#######################################################################\n\n# Tests\n\n#######################################################################\n",
        "Line" : 272,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# now see if we have a buildable Dependencies package in\n\n# the source tree. If so, include that, and it will take care of\n\n# setting everything up, including overriding any of the above\n\n# findings.\n",
        "Line" : 279,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Display results, terminate if anything required is missing\n",
        "Line" : 291,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Add library and include paths from the dependencies\n",
        "Line" : 294,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# provide option to install dependencies on Windows\n",
        "Line" : 329,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 44
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/CMake/FeatureSummary.cmake" : {
      "ObjectId" : "8417b1fe3d694521052144f29f06bece4cb1db14",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This file prints a summary of the selected build features.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#summarise components\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# summarise plugins\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# summarise rendersystems\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# summarise programs\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# summarise core features\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# miscellaneous\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# allocator settings\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# assert settings\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# various true/false settings\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# threading settings\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# build type\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/CMake/InstallDependencies.cmake" : {
      "ObjectId" : "813704c8ee4968a7bcef4a27136f9ac2f2017f40",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#####################################################\n\n# Install dependencies \n\n#####################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO - most of this file assumes a common dependencies root folder\n\n# This is not robust, we should instead source dependencies from their individual locations\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# for static builds, projects must link against all Ogre dependencies themselves, so copy full include and lib dir\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# for non-static builds, we only need OIS for the samples\n",
        "Line" : 95,
        "CharPositionInLine" : 5
      },
      "5" : {
        "Text" : "# OGRE_STATIC\n",
        "Line" : 98,
        "CharPositionInLine" : 10
      },
      "6" : {
        "Text" : "# MINGW\n",
        "Line" : 130,
        "CharPositionInLine" : 12
      },
      "7" : {
        "Text" : "# WIN32\n",
        "Line" : 131,
        "CharPositionInLine" : 10
      },
      "8" : {
        "Text" : "# OGRE_INSTALL_DEPENDENCIES\n",
        "Line" : 132,
        "CharPositionInLine" : 9
      },
      "9" : {
        "Text" : "# copy the dependency DLLs to the right places\n",
        "Line" : 135,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# if MinGW or NMake, the release/debug cg.dll's would conflict, so just pick one\n",
        "Line" : 142,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# OGRE_BUILD_PLUGIN_CG\n",
        "Line" : 153,
        "CharPositionInLine" : 13
      },
      "12" : {
        "Text" : "# install GLES dlls\n",
        "Line" : 155,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# install GLES2 dlls\n",
        "Line" : 161,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# WIN32\n",
        "Line" : 166,
        "CharPositionInLine" : 11
      },
      "15" : {
        "Text" : "# If we're installing the sample source for an SDK, also install Boost headers & libraries\n",
        "Line" : 168,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# headers (try to exclude things we don't need)\n",
        "Line" : 170,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# License\n",
        "Line" : 224,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# libraries\n",
        "Line" : 230,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# copy the required DLLs to the build directory (configure_file is the only copy-like op I found in CMake)\n",
        "Line" : 253,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# if MinGW or NMake, the release/debug cg.dll's would conflict, so just pick one\n",
        "Line" : 264,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 21
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/CMake/InstallResources.cmake" : {
      "ObjectId" : "cb4a1a96b0b70035a783343203a458fb013871f7",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##################################################################\n\n# Generate and install the config files needed for the samples\n\n##################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# configure plugins.cfg\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# CREATE CONFIG FILES - INSTALL VERSIONS\n\n# create resources.cfg\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# create plugins.cfg\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# create quakemap.cfg\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# create samples.cfg\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# create samples.cfg\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# install resource files\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Need a special case here for the iOS SDK, configuration is not being matched, could be a CMake bug.\n",
        "Line" : 171,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# CREATE CONFIG FILES - BUILD DIR VERSIONS\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# iOS needs to use relative paths in the config files\n",
        "Line" : 193,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# not used on OS X, uses Resources\n",
        "Line" : 206,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# These platfroms requires all resources to be packaged inside the application bundle,\n\n# therefore install versions of configs would be copied and added as content file to each project.\n",
        "Line" : 219,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# create resources.cfg\n",
        "Line" : 222,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# create plugins.cfg\n",
        "Line" : 227,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# create quakemap.cfg\n",
        "Line" : 232,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# create samples.cfg\n",
        "Line" : 237,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# create tests.cfg\n",
        "Line" : 242,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# other OS only need one cfg file\n",
        "Line" : 247,
        "CharPositionInLine" : 7
      },
      "20" : {
        "Text" : "# create resources.cfg\n",
        "Line" : 252,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# create plugins.cfg\n",
        "Line" : 254,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# create quakemap.cfg\n",
        "Line" : 256,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# create samples.cfg\n",
        "Line" : 258,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# create tests.cfg\n",
        "Line" : 260,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 25
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/CMake/Packages/FindAMDQBS.cmake" : {
      "ObjectId" : "ef09ac6b5123d7ad474b980762b95beb4f80b920",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Try to find AMDQBS\n\n# Once done, this will define\n\n#\n\n#  AMDQBS_FOUND - system has AMDQBS\n\n#  AMDQBS_INCLUDE_DIRS - the AMDQBS include directories \n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Get path, convert backslashes as ${ENV_${var}}\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# construct search paths\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# redo search if prefix path changed\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/CMake/Packages/FindCg.cmake" : {
      "ObjectId" : "4501cf93b770cdde45f0da8a9061cf442a5b87b9",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Try to find Cg\n\n# Once done, this will define\n\n#\n\n#  Cg_FOUND - system has Cg\n\n#  Cg_INCLUDE_DIRS - the Cg include directories \n\n#  Cg_LIBRARIES - link these to use Cg\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Get path, convert backslashes as ${ENV_${var}}\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# construct search paths\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# redo search if prefix path changed\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/CMake/Packages/FindCppUnit.cmake" : {
      "ObjectId" : "be795143d06eec4b22787a72c368fb0631aa2d24",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Try to find CppUnit\n\n# Once done, this will define\n\n#\n\n#  CppUnit_FOUND - system has CppUnit\n\n#  CppUnit_INCLUDE_DIRS - the CppUnit include directories \n\n#  CppUnit_LIBRARIES - link these to use CppUnit\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Get path, convert backslashes as ${ENV_${var}}\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# construct search paths\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# redo search if prefix path changed\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/CMake/Packages/FindDirectX.cmake" : {
      "ObjectId" : "76703fa87197020cd5238444bd839faa7de98075",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Find DirectX9 SDK\n\n# Define:\n\n# DirectX9_FOUND\n\n# DirectX9_INCLUDE_DIR\n\n# DirectX9_LIBRARY\n\n# DirectX9_ROOT_DIR\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The only platform it makes sense to check for DirectX9 SDK\n",
        "Line" : 18,
        "CharPositionInLine" : 10
      },
      "3" : {
        "Text" : "# Get path, convert backslashes as ${ENV_DXSDK_DIR}\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# construct search paths\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# redo search if prefix path changed\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# dlls are in DirectX9_ROOT_DIR/Developer Runtime/x64|x86\n\n# lib files are in DirectX9_ROOT_DIR/Lib/x64|x86\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/CMake/Packages/FindDirectX11.cmake" : {
      "ObjectId" : "839a673df70974cbc1157de69ecedfd6ef48acfd",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Find DirectX11 SDK\n\n# Define:\n\n# DirectX11_FOUND\n\n# DirectX11_INCLUDE_DIRS\n\n# DirectX11_LIBRARIES\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The only platform it makes sense to check for DirectX11 SDK\n",
        "Line" : 17,
        "CharPositionInLine" : 10
      },
      "3" : {
        "Text" : "# Windows Phone 8.1 SDK\n",
        "Line" : 21,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# in \"C:/Program Files (x86)/Windows Phone Kits/8.1/lib/${MSVC_CXX_ARCHITECTURE_ID}/\"\n",
        "Line" : 24,
        "CharPositionInLine" : 55
      },
      "5" : {
        "Text" : "# Windows Phone 8.0 SDK\n",
        "Line" : 26,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# in \"C:/Program Files (x86)/Windows Phone Kits/8.0/lib/${MSVC_CXX_ARCHITECTURE_ID}/\"\n",
        "Line" : 29,
        "CharPositionInLine" : 55
      },
      "7" : {
        "Text" : "# Windows 8.1 SDK\n",
        "Line" : 31,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# in \"C:/Program Files (x86)/Windows Kits/8.1/lib/winv6.3/um/${MSVC_CXX_ARCHITECTURE_ID}/\"\n",
        "Line" : 34,
        "CharPositionInLine" : 55
      },
      "9" : {
        "Text" : "# Windows 8.0 SDK\n",
        "Line" : 36,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# in \"C:/Program Files (x86)/Windows Kits/8.0/lib/win8/um/${MSVC_CXX_ARCHITECTURE_ID}/\"\n",
        "Line" : 39,
        "CharPositionInLine" : 55
      },
      "11" : {
        "Text" : "# Legacy Direct X SDK\n",
        "Line" : 41,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# Get path, convert backslashes as ${ENV_DXSDK_DIR}\n",
        "Line" : 44,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# construct search paths\n",
        "Line" : 50,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# redo search if prefix path changed\n",
        "Line" : 64,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "# dlls are in DirectX11_ROOT_DIR/Developer Runtime/x64|x86\n\n# lib files are in DirectX11_ROOT_DIR/Lib/x64|x86\n",
        "Line" : 70,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "# look for D3D11 components\n",
        "Line" : 78,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "# Legacy Direct X SDK\n",
        "Line" : 113,
        "CharPositionInLine" : 10
      },
      "CommentCount" : 18
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/CMake/Packages/FindDoxygen.cmake" : {
      "ObjectId" : "6a790b2966f4e0d07e71de7b602729884005a1bd",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - This module looks for Doxygen and the path to Graphviz's dot\n\n# Doxygen is a documentation generation tool.  Please see\n\n# http://www.doxygen.org\n\n#\n\n# This module accepts the following optional variables:\n\n#\n\n#   DOXYGEN_SKIP_DOT       = If true this module will skip trying to find Dot\n\n#                            (an optional component often used by Doxygen)\n\n#\n\n# This modules defines the following variables:\n\n#\n\n#   DOXYGEN_EXECUTABLE     = The path to the doxygen command.\n\n#   DOXYGEN_FOUND          = Was Doxygen found or not?\n\n#\n\n#   DOXYGEN_DOT_EXECUTABLE = The path to the dot program used by doxygen.\n\n#   DOXYGEN_DOT_FOUND      = Was Dot found or not?\n\n#   DOXYGEN_DOT_PATH       = The path to dot not including the executable\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2001-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distributed this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For backwards compatibility support\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ===== Rationale for OS X AppBundle mods below =====\n\n#     With the OS X GUI version, Doxygen likes to be installed to /Applications and\n\n#     it contains the doxygen executable in the bundle. In the versions I've \n\n#     seen, it is located in Resources, but in general, more often binaries are \n\n#     located in MacOS.\n\n#\n\n#     NOTE: The official Doxygen.app that is distributed for OS X uses non-standard \n\n#     conventions.  Instead of the command-line \"doxygen\" tool being placed in\n\n#     Doxygen.app/Contents/MacOS, \"Doxywizard\" is placed there instead and \n\n#     \"doxygen\" is placed in Contents/Resources.  This is most likely done\n\n#     so that something happens when people double-click on the Doxygen.app\n\n#     package.  Unfortunately, CMake gets confused by this as when it sees the\n\n#     bundle it uses \"Doxywizard\" as the executable to use instead of\n\n#     \"doxygen\".  Therefore to work-around this issue we temporarily disable\n\n#     the app-bundle feature, just for this CMake module:\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#  Save the old setting\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Disable the App-bundle detection feature\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#     FYI:\n\n#     In the older versions of OS X Doxygen, dot was included with the \n\n#     Doxygen bundle. But the new versions require you to download\n\n#     Graphviz.app which contains \"dot\" in it's bundle.\n\n# ============== End OSX stuff ================\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# Find Doxygen...\n\n#\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n\n# Find Dot...\n\n#\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# The Doxyfile wants the path to Dot, not the entire path and executable\n",
        "Line" : 102,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "#\n\n# Backwards compatibility...\n\n#\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Restore the old app-bundle setting setting\n",
        "Line" : 113,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Maintain the _FOUND variables as \"YES\" or \"NO\" for backwards compatibility\n\n# (allows people to stuff them directly into Doxyfile with configure_file())\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# For backwards compatibility support\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/CMake/Packages/FindFreeImage.cmake" : {
      "ObjectId" : "7c89ec53b85443f5e7d6e9565ccb6d657fb87786",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Try to find FreeImage\n\n# Once done, this will define\n\n#\n\n#  FreeImage_FOUND - system has FreeImage\n\n#  FreeImage_INCLUDE_DIRS - the FreeImage include directories \n\n#  FreeImage_LIBRARIES - link these to use FreeImage\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Get path, convert backslashes as ${ENV_${var}}\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# construct search paths\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# redo search if prefix path changed\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/CMake/Packages/FindFreetype.cmake" : {
      "ObjectId" : "ece43021bc72f531e10169dafff02ac0efbdc57c",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Try to find FreeType\n\n# Once done, this will define\n\n#\n\n#  FREETYPE_FOUND - system has FreeType\n\n#  FREETYPE_INCLUDE_DIRS - the FreeType include directories \n\n#  FREETYPE_LIBRARIES - link these to use FreeType\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Get path, convert backslashes as ${ENV_${var}}\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# construct search paths\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# redo search if prefix path changed\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# prefer static library over framework \n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Reset framework finding\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/CMake/Packages/FindGLSLOptimizer.cmake" : {
      "ObjectId" : "dd4b179ceb46fe5d54b370b721e514ad53288494",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Try to find GLSL Optimizer\n\n# Once done, this will define\n\n#\n\n#  GLSL_Optimizer_FOUND - system has GLSL_Optimizer\n\n#  GLSL_Optimizer_INCLUDE_DIRS - the GLSL_Optimizer include directories \n\n#  GLSL_Optimizer_LIBRARIES - link these to use GLSL_Optimizer\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# construct search paths\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# redo search if prefix path changed\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/CMake/Packages/FindHLSL2GLSL.cmake" : {
      "ObjectId" : "7125895677905f1a88f5d3023de15cb266a0943f",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Try to find HLSL2GLSL\n\n# Once done, this will define\n\n#\n\n#  HLSL2GLSL_FOUND - system has HLSL2GLSL\n\n#  HLSL2GLSL_INCLUDE_DIRS - the HLSL2GLSL include directories \n\n#  HLSL2GLSL_LIBRARIES - link these to use HLSL2GLSL\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# construct search paths\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# redo search if prefix path changed\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/CMake/Packages/FindNVAPI.cmake" : {
      "ObjectId" : "95c70cddab7defa1baa4d8469c670ff2cbb328c4",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Try to find NVAPI\n\n# Once done, this will define\n\n#\n\n#  NVAPI_FOUND - system has NVAPI\n\n#  NVAPI_INCLUDE_DIRS - the NVAPI include directories \n\n#  NVAPI_LIBRARIES - link these to use NVAPI\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Get path, convert backslashes as ${ENV_${var}}\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# construct search paths\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# redo search if prefix path changed\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/CMake/Packages/FindOGRE.cmake" : {
      "ObjectId" : "698bb39bb0a43a9e3efca22c0bedf0a93684111f",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Try to find OGRE\n\n# If you have multiple versions of Ogre installed, use the CMake or\n\n# the environment variable OGRE_HOME to point to the path where the\n\n# desired Ogre version can be found.\n\n# By default this script will look for a dynamic Ogre build. If you\n\n# need to link against static Ogre libraries, set the CMake variable\n\n# OGRE_STATIC to TRUE.\n\n#\n\n# Once done, this will define\n\n#\n\n#  OGRE_FOUND - system has OGRE\n\n#  OGRE_INCLUDE_DIRS - the OGRE include directories \n\n#  OGRE_LIBRARIES - link these to use the OGRE core\n\n#  OGRE_BINARY_REL - location of the main Ogre binary (win32 non-static only, release)\n\n#  OGRE_BINARY_DBG - location of the main Ogre binaries (win32 non-static only, debug)\n\n#\n\n# Additionally this script searches for the following optional\n\n# parts of the Ogre package:\n\n#  Plugin_BSPSceneManager, Plugin_CgProgramManager,\n\n#  Plugin_OctreeSceneManager, Plugin_OctreeZone,\n\n#  Plugin_ParticleFX, Plugin_PCZSceneManager,\n\n#  RenderSystem_GL, RenderSystem_GL3Plus,\n\n#  RenderSystem_GLES, RenderSystem_GLES2,\n\n#  RenderSystem_Direct3D9, RenderSystem_Direct3D11\n\n#  Paging, Terrain, Volume, Overlay\n\n#\n\n# For each of these components, the following variables are defined:\n\n#\n\n#  OGRE_${COMPONENT}_FOUND - ${COMPONENT} is available\n\n#  OGRE_${COMPONENT}_INCLUDE_DIRS - additional include directories for ${COMPONENT}\n\n#  OGRE_${COMPONENT}_LIBRARIES - link these to use ${COMPONENT} \n\n#  OGRE_${COMPONENT}_BINARY_REL - location of the component binary (win32 non-static only, release)\n\n#  OGRE_${COMPONENT}_BINARY_DBG - location of the component binary (win32 non-static only, debug)\n\n#\n\n# Finally, the following variables are defined:\n\n#\n\n#  OGRE_PLUGIN_DIR_REL - The directory where the release versions of\n\n#       the OGRE plugins are located\n\n#  OGRE_PLUGIN_DIR_DBG - The directory where the debug versions of\n\n#       the OGRE plugins are located\n\n#  OGRE_MEDIA_DIR - The directory where the OGRE sample media is\n\n#       located, if available\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Get path, convert backslashes as ${ENV_${var}}\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Determine whether to search for a dynamic or static build\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# construct search paths from environmental hints and\n\n# OS specific guesses\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If both OGRE_BUILD and OGRE_SOURCE are set, prepare to find Ogre in a build dir\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# redo search if any of the environmental hints changed\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# try to locate Ogre via pkg-config\n",
        "Line" : 169,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# Set the framework search path for OS X\n",
        "Line" : 172,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# locate Ogre include files\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# determine Ogre version\n",
        "Line" : 195,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# determine configuration settings\n",
        "Line" : 204,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# If working from source rather than SDK, add samples include\n",
        "Line" : 251,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# look for required Ogre dependencies in case of static build and/or threading\n",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# find binaries\n",
        "Line" : 363,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#########################################################\n\n# Find Ogre components\n\n#########################################################\n",
        "Line" : 375,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# find binaries\n",
        "Line" : 401,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# look for Paging component\n",
        "Line" : 413,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# look for Terrain component\n",
        "Line" : 415,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# look for Property component\n",
        "Line" : 417,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# look for RTShaderSystem component\n",
        "Line" : 419,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# look for Volume component\n",
        "Line" : 421,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# look for Overlay component\n",
        "Line" : 423,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#########################################################\n\n# Find Ogre plugins\n\n#########################################################        \n",
        "Line" : 426,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# On Unix, the plugins might have no prefix\n",
        "Line" : 430,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# strip RenderSystem_ or Plugin_ prefix from plugin name\n",
        "Line" : 436,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# header files for plugins are not usually needed, but find them anyway if they are present\n",
        "Line" : 440,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# find link libraries for plugins\n",
        "Line" : 447,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# look for plugin dirs\n",
        "Line" : 467,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# find binaries\n",
        "Line" : 493,
        "CharPositionInLine" : 1
      },
      "30" : {
        "Text" : "# check if dependencies for plugins are met\n",
        "Line" : 523,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# look for the media directory\n",
        "Line" : 570,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 32
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/CMake/Packages/FindOIS.cmake" : {
      "ObjectId" : "7d007520ea30e5d4a988d014a3a49b3153622a1b",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Try to find OIS\n\n# Once done, this will define\n\n#\n\n#  OIS_FOUND - system has OIS\n\n#  OIS_INCLUDE_DIRS - the OIS include directories \n\n#  OIS_LIBRARIES - link these to use OIS\n\n#  OIS_BINARY_REL / OIS_BINARY_DBG - DLL names (windows only)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Get path, convert backslashes as ${ENV_${var}}\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# construct search paths\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# redo search if prefix path changed\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# For OIS, prefer static library over framework (important when referencing OIS source build)\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# OIS uses the 'includes' path for its headers in the source release, not 'include'\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# OIS source build on Mac stores libs in a different location\n\n# Also this is for static build\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# add parent of OIS folder to support OIS/OIS.h\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Reset framework finding\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/CMake/Packages/FindOpenGLES.cmake" : {
      "ObjectId" : "af894e9753aae61ca5fd808134ad5539fc01f082",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Try to find OpenGLES\n\n# Once done this will define\n\n#  \n\n#  OPENGLES_FOUND        - system has OpenGLES\n\n#  OPENGLES_INCLUDE_DIR  - the GL include directory\n\n#  OPENGLES_LIBRARIES    - Link these to use OpenGLES\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#MS compiler - todo - fix the following line:\n",
        "Line" : 29,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "# On Unix OpenGL most certainly always requires X11.\n\n# Feel free to tighten up these conditions if you don't \n\n# think this is always true.\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/CMake/Packages/FindOpenGLES2.cmake" : {
      "ObjectId" : "781e1b39e78f6faa830d4ddc2bc707a99b3a1317",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Try to find OpenGLES and EGL\n\n# If using ARM Mali emulation you can specify the parent directory that contains the bin and include directories by \n\n# setting the MALI_SDK_ROOT variable in the environment.\n\n#\n\n# For AMD emulation use the AMD_SDK_ROOT variable\n\n#\n\n# Once done this will define\n\n#  \n\n#  OPENGLES2_FOUND        - system has OpenGLES\n\n#  OPENGLES2_INCLUDE_DIR  - the GL include directory\n\n#  OPENGLES2_LIBRARIES    - Link these to use OpenGLES\n\n#\n\n#  EGL_FOUND        - system has EGL\n\n#  EGL_INCLUDE_DIR  - the EGL include directory\n\n#  EGL_LIBRARIES    - Link these to use EGL\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# On Unix OpenGL most certainly always requires X11.\n\n# Feel free to tighten up these conditions if you don't \n\n# think this is always true.\n\n# It's not true on OSX.\n",
        "Line" : 127,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/CMake/Packages/FindOpenGLES3.cmake" : {
      "ObjectId" : "357143126ca72356e46502f02d0a2f14dcf51df9",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Try to find OpenGLES and EGL\n\n# If using ARM Mali emulation you can specify the parent directory that contains the bin and include directories by \n\n# setting the MALI_SDK_ROOT variable in the environment.\n\n#\n\n# For AMD emulation use the AMD_SDK_ROOT variable\n\n#\n\n# Once done this will define\n\n#  \n\n#  OPENGLES3_FOUND        - system has OpenGLES\n\n#  OPENGLES3_INCLUDE_DIR  - the GL include directory\n\n#  OPENGLES3_LIBRARIES    - Link these to use OpenGLES\n\n#\n\n#  EGL_FOUND        - system has EGL\n\n#  EGL_INCLUDE_DIR  - the EGL include directory\n\n#  EGL_LIBRARIES    - Link these to use EGL\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# On Unix OpenGL most certainly always requires X11.\n\n# Feel free to tighten up these conditions if you don't \n\n# think this is always true.\n\n# It's not true on OSX.\n",
        "Line" : 123,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/CMake/Packages/FindPOCO.cmake" : {
      "ObjectId" : "6b6d7fa34061d6c219d3f2848e6c572fb7cbc97b",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Try to find POCO libraries\n\n# Once done, this will define\n\n#\n\n#  POCO_FOUND - system has POCO\n\n#  POCO_INCLUDE_DIRS - the POCO include directories \n\n#  POCO_LIBRARIES - link these to use POCO\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Get path, convert backslashes as ${ENV_${var}}\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# construct search paths\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# redo search if prefix path changed\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Look for Poco's Util package\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Look for Poco's Net package\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Look for Poco's NetSSL package\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Look for Poco's XML package\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/CMake/Packages/FindSoftimage.cmake" : {
      "ObjectId" : "75544a398162b01e47fd3bbc37af1e9ee3e15031",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Try to find Softimage SDK\n\n# Once done, this will define\n\n#\n\n#  Softimage_FOUND - system has Softimage SDK\n\n#  Softimage_INCLUDE_DIRS - the Softimage include directories \n\n#  Softimage_LIBRARIES - link these to use OIS\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# construct search paths\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# redo search if prefix path changed\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/CMake/Packages/FindTBB.cmake" : {
      "ObjectId" : "a72d434ef436c5d70dc57186e5043934a7dd10e6",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Try to find ThreadingBuildingBlocks libraries\n\n# Once done, this will define\n\n#\n\n#  TBB_FOUND - system has TBB\n\n#  TBB_INCLUDE_DIRS - the TBB include directories \n\n#  TBB_LIBRARIES - link these to use TBB\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Get path, convert backslashes as ${ENV_${var}}\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# construct search paths\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# redo search if prefix path changed\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# For Windows, let's assume that the user might be using the precompiled\n\n# TBB packages from the main website. These use a rather awkward directory\n\n# structure (at least for automatically finding the right files) depending\n\n# on platform and compiler, but we'll do our best to accommodate it.\n\n# Not adding the same effort for the precompiled linux builds, though. Those\n\n# have different versions for CC compiler versions and linux kernels which\n\n# will never adequately match the user's setup, so there is no feasible way\n\n# to detect the \"best\" version to use. The user will have to manually\n\n# select the right files. (Chances are the distributions are shipping their\n\n# custom version of tbb, anyway, so the problem is probably nonexistant.)\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# for each prefix path, add ia32/64\\${COMPILER_PREFIX}\\lib to the lib search path\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# use_pkgconfig(TBB_PKGC TBB)\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Look for TBB's malloc package\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Look for TBB's malloc proxy package\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/CMake/Packages/FindTinyXML.cmake" : {
      "ObjectId" : "2f3bc3c6bb22baefda37762eb58ed0e642e47d90",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find TinyXML\n\n# Find the native TinyXML includes and library\n\n#\n\n#   TINYXML_FOUND       - True if TinyXML found.\n\n#   TINYXML_INCLUDE_DIR - where to find tinyxml.h, etc.\n\n#   TINYXML_LIBRARIES   - List of libraries when using TinyXML.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 10,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set TINYXML_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/CMake/Packages/FindWix.cmake" : {
      "ObjectId" : "1167d3a2d051fb513bdbb0a301656fd4824f145e",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Try to find Wix\n\n# You can help this by defining WIX_HOME in the environment / CMake\n\n# Once done, this will define\n\n#\n\n#  Wix_FOUND - system has Wix\n\n#  Wix_BINARY_DIR - location of the Wix binaries\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Get path, convert backslashes as ${ENV_${var}}\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# construct search paths\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/CMake/Packages/FindZLIB.cmake" : {
      "ObjectId" : "f87fb08457178bf61d01abe51280773e2e062bc6",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Try to find ZLIB\n\n# Once done, this will define\n\n#\n\n#  ZLIB_FOUND - system has ZLIB\n\n#  ZLIB_INCLUDE_DIRS - the ZLIB include directories \n\n#  ZLIB_LIBRARIES - link these to use ZLIB\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Get path, convert backslashes as ${ENV_${var}}\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# construct search paths\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# redo search if prefix path changed\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/CMake/Packages/FindZZip.cmake" : {
      "ObjectId" : "c1120712cd9f71dcdba231f7c593f3af483419dc",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Try to find zziplib\n\n# Once done, this will define\n\n#\n\n#  ZZip_FOUND - system has ZZip\n\n#  ZZip_INCLUDE_DIRS - the ZZip include directories \n\n#  ZZip_LIBRARIES - link these to use ZZip\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Get path, convert backslashes as ${ENV_${var}}\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# construct search paths\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# redo search if prefix path changed\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/CMake/Packaging.cmake" : {
      "ObjectId" : "ea111d6fdf3ce506926a00788c2e7e57eb1d6ca1",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CPack won't allow file without recognized extension to be used as\n\n# license file.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#set(CPACK_PACKAGE_ICON \"${OGRE_SOURCE_DIR}\\\\\\\\ogrelogo.gif\")\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/CMake/PrepareThreadingOptions.cmake" : {
      "ObjectId" : "56a92a79c174acf0a988dda49e36f832f2f2b2fd",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#######################################################################\n\n# This file determines which threading options are available for the\n\n# build, depending on the dependencies found.\n\n#######################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# sanitise threading choices\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/CMake/Utils/AndroidMacros.cmake" : {
      "ObjectId" : "ef0fb0a81c3cb0ad67addfb9df64e1371b501e6e",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# strip lib prefix\n",
        "Line" : 22,
        "CharPositionInLine" : 52
      },
      "2" : {
        "Text" : "##################################################################\n\n# Creates a basic android JNI project\n\n# Expects :\n\n#    - ANDROID_MOD_NAME    Name of the android module\n\n#    - JNI_PATH            Path to the jni directory containing .cpp files\n\n#    - JNI_SRC_FILES       A list of native .cpp file names to compile\n\n#    - PKG_NAME            The name of the output android package ex\"Org.Ogre.OgreJNI\"\n\n#    - NDKOUT              The directory for the Ndk project to be written to\n\n#    - HAS_CODE            Set this variable to \"false\" if no java code will be present \n\n#                          (google android:hasCode for more info)\n\n#    - MAIN_ACTIVITY       Name of the main java activity ex \"android.app.MainActivity\" \n\n##################################################################    \n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/CMake/Utils/FindPkgMacros.cmake" : {
      "ObjectId" : "53111e074ab345fea81ad29cf0bf8aedbf76fa62",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##################################################################\n\n# Provides some common functionality for the FindPackage modules\n\n##################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Begin processing of package\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Display a status message unless FIND_QUIETLY is set\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Get environment variable, define it as ENV_$var and make sure backslashes are converted to forward slashes\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# replace won't work if var is blank\n",
        "Line" : 31,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "# Construct search paths for includes and libraries from a PREFIX_PATH\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# clear cache variables if a certain variable changed\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# test against internal check variable\n\n# HACK: Apparently, adding a variable to the cache cleans up the list\n\n# a bit. We need to also remove any empty strings from the list, but\n\n# at the same time ensure that we are actually dealing with a list.\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Try to get some hints from pkg-config, if available\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Couple a set of release AND debug libraries (or frameworks)\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Generate debug names from given release names\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Add the parent dir from DIR to VAR \n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Do the final processing for the package find.\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# skip if already processed during this run\n",
        "Line" : 108,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Slightly customised framework finder\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# These could be arrays of paths, add each individually to the search paths\n",
        "Line" : 144,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 17
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/CMake/Utils/MacroLogFeature.cmake" : {
      "ObjectId" : "2cdead94dd36344bb3585e8adaa906bd6b29ce3a",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This file defines the Feature Logging macros.\n\n#\n\n# MACRO_LOG_FEATURE(VAR FEATURE DESCRIPTION URL [REQUIRED [MIN_VERSION [COMMENTS]]])\n\n#   Logs the information so that it can be displayed at the end\n\n#   of the configure run\n\n#   VAR : TRUE or FALSE, indicating whether the feature is supported\n\n#   FEATURE: name of the feature, e.g. \"libjpeg\"\n\n#   DESCRIPTION: description what this feature provides\n\n#   URL: home page\n\n#   REQUIRED: TRUE or FALSE, indicating whether the feature is required\n\n#   MIN_VERSION: minimum version number. empty string if unneeded\n\n#   COMMENTS: More info you may want to provide.  empty string if unnecessary\n\n#\n\n# MACRO_DISPLAY_FEATURE_LOG()\n\n#   Call this to display the collected results.\n\n#   Exits CMake with a FATAL error message if a required feature is missing\n\n#\n\n# Example:\n\n#\n\n# INCLUDE(MacroLogFeature)\n\n#\n\n# FIND_PACKAGE(JPEG)\n\n# MACRO_LOG_FEATURE(JPEG_FOUND \"libjpeg\" \"Support JPEG images\" \"http://www.ijg.org\" TRUE \"3.2a\" \"\")\n\n# ...\n\n# MACRO_DISPLAY_FEATURE_LOG()\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Copyright (c) 2006, Alexander Neundorf, <neundorf@kde.org>\n\n# Copyright (c) 2006, Allen Winter, <winter@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# _required _minvers _comments)\n",
        "Line" : 62,
        "CharPositionInLine" : 58
      },
      "4" : {
        "Text" : "#      SET(_logtext \"${_logtext}\\n\") #double-space missing features?\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/CMake/Utils/OgreAddTargets.cmake" : {
      "ObjectId" : "761ac5a796e731db33ae3d76ecdc17609396cf54",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# check the contents of a given source file. If they differ from the\n\n# expected content, or the file does not exist, rewrite it with the\n\n# provided content.\n\n# This function is used in order to update Unity build files only when\n\n# necessary. If we rewrote them unconditionally, it might trigger an\n\n# unnecessary rebuild of the file.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# read current file contents\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# create empty file\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# rewrite file with new contents\n",
        "Line" : 26,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# generate unity build files for the given target.\n\n# If in the list of source files the key word SEPARATE is specified, then\n\n# any source file after that will be compiled separately.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# first step: build the primary and separate lists\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# create Unity compilation units\n\n# all source files given will be put into a certain number of\n\n# compilation units.\n\n# if certain source files should be excluded from the unity build\n\n# and built separately, they need to also be named in the SEPARATE\n\n# list.\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# test if file is more than just a header\n",
        "Line" : 70,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# exclude the original source file from the compilation\n",
        "Line" : 84,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# don't forget the last set of files\n",
        "Line" : 88,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# add a new library target\n\n# usage: ogre_add_library(TARGETNAME LIBTYPE SOURCE_FILES [SEPARATE SOURCE_FILES])\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# add a new executable target\n\n# usage: ogre_add_executable(TARGETNAME [WIN32] [MACOSX_BUNDLE] SOURCE_FILES [SEPARATE SOURCE_FILES])\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# test if WIN32 or MACOSX_BUNDLE options were provided\n",
        "Line" : 107,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 14
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/CMake/Utils/OgreConfigTargets.cmake" : {
      "ObjectId" : "48d4528d671adf1fe4c3e7cc03f05dd099361fbd",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configure settings and install targets\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Default build output paths\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# create vcproj.user file for Visual Studio to set debug working directory\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# install targets according to current build type\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Skip all install targets in SDK\n",
        "Line" : 99,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "#EXPORT Ogre-exports\n",
        "Line" : 105,
        "CharPositionInLine" : 33
      },
      "7" : {
        "Text" : "#EXPORT Ogre-exports\n",
        "Line" : 112,
        "CharPositionInLine" : 33
      },
      "8" : {
        "Text" : "#EXPORT Ogre-exports\n",
        "Line" : 119,
        "CharPositionInLine" : 33
      },
      "9" : {
        "Text" : "#EXPORT Ogre-exports\n",
        "Line" : 126,
        "CharPositionInLine" : 33
      },
      "10" : {
        "Text" : "#install(EXPORT Ogre-exports DESTINATION ${OGRE_LIB_DIRECTORY})\n",
        "Line" : 133,
        "CharPositionInLine" : 3
      },
      "11" : {
        "Text" : "# setup common target settings\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# add GCC visibility flags to shared library build\n",
        "Line" : 185,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "#set_target_properties(${TARGETNAME} PROPERTIES XCODE_ATTRIBUTE_GCC_INLINES_ARE_PRIVATE_EXTERN[arch=x86_64] \"YES\")\n",
        "Line" : 189,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# setup library build\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# add static prefix, if compiling static version\n",
        "Line" : 199,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# remove lib prefix from DLL outputs\n",
        "Line" : 203,
        "CharPositionInLine" : 3
      },
      "17" : {
        "Text" : "# install debug pdb files\n",
        "Line" : 215,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Set the INSTALL_PATH so that frameworks can be installed in the application package\n",
        "Line" : 246,
        "CharPositionInLine" : 6
      },
      "19" : {
        "Text" : "# setup plugin build\n",
        "Line" : 261,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# add static prefix, if compiling static version\n",
        "Line" : 266,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# disable \"lib\" prefix on Unix\n",
        "Line" : 278,
        "CharPositionInLine" : 6
      },
      "22" : {
        "Text" : "# export only if static\n",
        "Line" : 282,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# install debug pdb files\n",
        "Line" : 286,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# setup Ogre sample build\n",
        "Line" : 309,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# set install RPATH for Unix systems\n",
        "Line" : 313,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# On OS X, create .app bundle\n",
        "Line" : 321,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# Add the path where the Ogre framework was found\n",
        "Line" : 324,
        "CharPositionInLine" : 6
      },
      "28" : {
        "Text" : "# disable \"lib\" prefix on Unix\n",
        "Line" : 338,
        "CharPositionInLine" : 6
      },
      "29" : {
        "Text" : "# install debug pdb files - no _d on exe\n",
        "Line" : 356,
        "CharPositionInLine" : 3
      },
      "30" : {
        "Text" : "# Add the path where the Ogre framework was found\n",
        "Line" : 368,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# install debug pdb files - with a _d on lib\n",
        "Line" : 381,
        "CharPositionInLine" : 3
      },
      "32" : {
        "Text" : "# Add the path where the Ogre framework was found\n",
        "Line" : 393,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "# Add sample to the list of link targets\n\n# Global property so that we can build this up across entire sample tree\n\n# since vars are local to containing scope of directories / functions\n",
        "Line" : 402,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# setup Ogre tool build\n",
        "Line" : 411,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#set _d debug postfix\n",
        "Line" : 415,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# set install RPATH for Unix systems\n",
        "Line" : 420,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# install debug pdb files\n",
        "Line" : 430,
        "CharPositionInLine" : 6
      },
      "38" : {
        "Text" : "# Get component include dir (different when referencing SDK)\n",
        "Line" : 444,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 39
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/CMake/Utils/OgreFindFrameworks.cmake" : {
      "ObjectId" : "a8052d305bfe726f7a07157e724fe2b5ea9f58b8",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - helper module to find OSX frameworks\n\n# Adapted from standard CMake version, but added dependencies\n\n# Standard finder does not look in any variable locations such as \n\n# CMAKE_FRAMEWORK_PATH (not sure why not)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/CMake/Utils/OgreGetVersion.cmake" : {
      "ObjectId" : "abf839df778f5eacefb9c32caf5d8e9089874649",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/CMake/Utils/PrecompiledHeader.cmake" : {
      "ObjectId" : "ff033c012fb9ff5649a274e2dee12b80b111bfe3",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##################################################################\n\n# Support macro to use a precompiled header\n\n# Usage:\n\n#   use_precompiled_header(TARGET HEADER_FILE SRC_FILE)\n\n##################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use MSVC_IDE to exclude NMake from using PCHs\n",
        "Line" : 19,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# disabled because it seems to increase compile time\n\n## this is some serious hack... we definitely need native \n\n## support in CMake for this!\n\n## we will generate the precompiled header via a workaround\n\n## first give the header a new name with the proper extension\n\n#set(PRECOMP_HEADER ${CMAKE_CURRENT_BINARY_DIR}/hacked/${HEADER}.gch)\n\n#configure_file(${HEADER_FILE} ${PRECOMP_HEADER} COPYONLY)\n\n## retrieve some info about the target's build settings\n\n#get_target_property(${TARGET} PRECOMP_TYPE TYPE)\n\n#if (PRECOMP_TYPE STREQUAL \"SHARED_LIBRARY\")\n\n#  set(PRECOMP_LIBTYPE \"SHARED\")\n\n#else ()\n\n#  set(PRECOMP_LIBTYPE \"STATIC\")\n\n#endif ()\n\n#get_target_property(${TARGET} PRECOMP_DEFINITIONS COMPILE_DEFINITIONS)\n\n#get_target_property(${TARGET} PRECOMP_FLAGS COMPILE_FLAGS)\n\n#\n\n## add a new target which compiles the header\n\n#add_library(__precomp_header ${PRECOMP_LIBTYPE} ${PRECOMP_HEADER})\n\n#add_dependencies(${TARGET} __precomp_header)\n\n#set_target_properties(__precomp_header PROPERTIES\n\n#  COMPILE_DEFINITIONS ${PRECOMP_DEFINITIONS}\n\n#  COMPILE_FLAGS ${PRECOMP_FLAGS}\n\n#  HAS_CXX TRUE\n\n#)\n\n#set_source_files_properties(${PRECOMP_HEADER} PROPERTIES\n\n#  HEADER_FILE_ONLY FALSE\n\n#  KEEP_EXTENSION TRUE\n\n#  COMPILE_FLAGS \"-x c++-header\"\n\n#  LANGUAGE CXX\n\n#)\n\n#\n\n## finally, we need to ensure that gcc can find the precompiled header\n\n## this is another dirty hack\n\n#include_directories(BEFORE \"${CMAKE_CURRENT_BINARY_DIR}/CMakeFiles/__precomp_header.dir/hacked\")\n",
        "Line" : 27,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/CMake/Utils/PreprocessorUtils.cmake" : {
      "ObjectId" : "38462a98d42c08688901712076b543757043094e",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/CMake/toolchain/AndroidJNI.cmake" : {
      "ObjectId" : "dabdf010ff1d9137e33a30f902800998213036e9",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Include the CreateAndroidProj macro to create a basic android setup\n\n# and add_static_libs macro to define additional target static libs\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Setup create_android_proj macro requirements\n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Set this variable to false if no java code will be present (google android:hasCode for more info)\n",
        "Line" : 24,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Copy and create resource files\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Create CMake target\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/CMake/toolchain/android.toolchain.cmake" : {
      "ObjectId" : "fe3063df3819adb292b229d12d62be7fa855a36d",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2010-2011, Ethan Rublee\n\n# Copyright (c) 2011-2014, Andrey Kamaev\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# 1.  Redistributions of source code must retain the above copyright notice,\n\n#     this list of conditions and the following disclaimer.\n\n#\n\n# 2.  Redistributions in binary form must reproduce the above copyright notice,\n\n#     this list of conditions and the following disclaimer in the documentation\n\n#     and/or other materials provided with the distribution.\n\n#\n\n# 3.  Neither the name of the copyright holder nor the names of its\n\n#     contributors may be used to endorse or promote products derived from this\n\n#     software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ------------------------------------------------------------------------------\n\n#  Android CMake toolchain file, for use with the Android NDK r5-r9\n\n#  Requires cmake 2.6.3 or newer (2.8.5 or newer is recommended).\n\n#  See home page: https://github.com/taka-no-me/android-cmake\n\n#\n\n#  The file is mantained by the OpenCV project. The latest version can be get at\n\n#  http://code.opencv.org/projects/opencv/repository/revisions/master/changes/android/android.toolchain.cmake\n\n#\n\n#  Usage Linux:\n\n#   $ export ANDROID_NDK=/absolute/path/to/the/android-ndk\n\n#   $ mkdir build && cd build\n\n#   $ cmake -DCMAKE_TOOLCHAIN_FILE=path/to/the/android.toolchain.cmake ..\n\n#   $ make -j8\n\n#\n\n#  Usage Linux (using standalone toolchain):\n\n#   $ export ANDROID_STANDALONE_TOOLCHAIN=/absolute/path/to/android-toolchain\n\n#   $ mkdir build && cd build\n\n#   $ cmake -DCMAKE_TOOLCHAIN_FILE=path/to/the/android.toolchain.cmake ..\n\n#   $ make -j8\n\n#\n\n#  Usage Windows:\n\n#     You need native port of make to build your project.\n\n#     Android NDK r7 (or newer) already has make.exe on board.\n\n#     For older NDK you have to install it separately.\n\n#     For example, this one: http://gnuwin32.sourceforge.net/packages/make.htm\n\n#\n\n#   $ SET ANDROID_NDK=C:\\absolute\\path\\to\\the\\android-ndk\n\n#   $ mkdir build && cd build\n\n#   $ cmake.exe -G\"MinGW Makefiles\"\n\n#       -DCMAKE_TOOLCHAIN_FILE=path\\to\\the\\android.toolchain.cmake\n\n#       -DCMAKE_MAKE_PROGRAM=\"%ANDROID_NDK%\\prebuilt\\windows\\bin\\make.exe\" ..\n\n#   $ cmake.exe --build .\n\n#\n\n#\n\n#  Options (can be set as cmake parameters: -D<option_name>=<value>):\n\n#    ANDROID_NDK=/opt/android-ndk - path to the NDK root.\n\n#      Can be set as environment variable. Can be set only at first cmake run.\n\n#\n\n#    ANDROID_STANDALONE_TOOLCHAIN=/opt/android-toolchain - path to the\n\n#      standalone toolchain. This option is not used if full NDK is found\n\n#      (ignored if ANDROID_NDK is set).\n\n#      Can be set as environment variable. Can be set only at first cmake run.\n\n#\n\n#    ANDROID_ABI=armeabi-v7a - specifies the target Application Binary\n\n#      Interface (ABI). This option nearly matches to the APP_ABI variable\n\n#      used by ndk-build tool from Android NDK.\n\n#\n\n#      Possible targets are:\n\n#        \"armeabi\" - matches to the NDK ABI with the same name.\n\n#           See ${ANDROID_NDK}/docs/CPU-ARCH-ABIS.html for the documentation.\n\n#        \"armeabi-v7a\" - matches to the NDK ABI with the same name.\n\n#           See ${ANDROID_NDK}/docs/CPU-ARCH-ABIS.html for the documentation.\n\n#        \"armeabi-v7a with NEON\" - same as armeabi-v7a, but\n\n#            sets NEON as floating-point unit\n\n#        \"armeabi-v7a with VFPV3\" - same as armeabi-v7a, but\n\n#            sets VFPV3 as floating-point unit (has 32 registers instead of 16).\n\n#        \"armeabi-v6 with VFP\" - tuned for ARMv6 processors having VFP.\n\n#        \"arm64-v8a\" - matches to the NDK ABI with the same name.\n\n#            See ${ANDROID_NDK}/docs/CPU-ARCH-ABIS.html for the documentation.\n\n#        \"x86\" - matches to the NDK ABI with the same name.\n\n#            See ${ANDROID_NDK}/docs/CPU-ARCH-ABIS.html for the documentation.\n\n#        \"x86_64\" - matches to the NDK ABI with the same name.\n\n#            See ${ANDROID_NDK}/docs/CPU-ARCH-ABIS.html for the documentation.\n\n#        \"mips\" - matches to the NDK ABI with the same name.\n\n#            See ${ANDROID_NDK}/docs/CPU-ARCH-ABIS.html for the documentation.\n\n#        \"mips64\" - matches to the NDK ABI with the same name.\n\n#            See ${ANDROID_NDK}/docs/CPU-ARCH-ABIS.html for the documentation.\n\n#\n\n#    ANDROID_NATIVE_API_LEVEL=android-8 - level of Android API compile for.\n\n#      Option is read-only when standalone toolchain is used.\n\n#\n\n#    ANDROID_TOOLCHAIN_NAME=arm-linux-androideabi-4.6 - the name of compiler\n\n#      toolchain to be used. The list of possible values depends on the NDK\n\n#      version. For NDK r8c the possible values are:\n\n#\n\n#        * arm-linux-androideabi-4.4.3\n\n#        * arm-linux-androideabi-4.6\n\n#        * arm-linux-androideabi-clang3.1\n\n#        * mipsel-linux-android-4.4.3\n\n#        * mipsel-linux-android-4.6\n\n#        * mipsel-linux-android-clang3.1\n\n#        * x86-4.4.3\n\n#        * x86-4.6\n\n#        * x86-clang3.1\n\n#\n\n#    ANDROID_FORCE_ARM_BUILD=OFF - set ON to generate 32-bit ARM instructions\n\n#      instead of Thumb. Is not available for \"x86\" (inapplicable) and\n\n#      \"armeabi-v6 with VFP\" (is forced to be ON) ABIs.\n\n#\n\n#    ANDROID_NO_UNDEFINED=ON - set ON to show all undefined symbols as linker\n\n#      errors even if they are not used.\n\n#\n\n#    ANDROID_SO_UNDEFINED=OFF - set ON to allow undefined symbols in shared\n\n#      libraries. Automatically turned for NDK r5x and r6x due to GLESv2\n\n#      problems.\n\n#\n\n#    LIBRARY_OUTPUT_PATH_ROOT=${CMAKE_SOURCE_DIR} - where to output binary\n\n#      files. See additional details below.\n\n#\n\n#    ANDROID_SET_OBSOLETE_VARIABLES=ON - if set, then toolchain defines some\n\n#      obsolete variables which were used by previous versions of this file for\n\n#      backward compatibility.\n\n#\n\n#    ANDROID_STL=gnustl_static - specify the runtime to use.\n\n#\n\n#      Possible values are:\n\n#        none           -> Do not configure the runtime.\n\n#        system         -> Use the default minimal system C++ runtime library.\n\n#                          Implies -fno-rtti -fno-exceptions.\n\n#                          Is not available for standalone toolchain.\n\n#        system_re      -> Use the default minimal system C++ runtime library.\n\n#                          Implies -frtti -fexceptions.\n\n#                          Is not available for standalone toolchain.\n\n#        gabi++_static  -> Use the GAbi++ runtime as a static library.\n\n#                          Implies -frtti -fno-exceptions.\n\n#                          Available for NDK r7 and newer.\n\n#                          Is not available for standalone toolchain.\n\n#        gabi++_shared  -> Use the GAbi++ runtime as a shared library.\n\n#                          Implies -frtti -fno-exceptions.\n\n#                          Available for NDK r7 and newer.\n\n#                          Is not available for standalone toolchain.\n\n#        stlport_static -> Use the STLport runtime as a static library.\n\n#                          Implies -fno-rtti -fno-exceptions for NDK before r7.\n\n#                          Implies -frtti -fno-exceptions for NDK r7 and newer.\n\n#                          Is not available for standalone toolchain.\n\n#        stlport_shared -> Use the STLport runtime as a shared library.\n\n#                          Implies -fno-rtti -fno-exceptions for NDK before r7.\n\n#                          Implies -frtti -fno-exceptions for NDK r7 and newer.\n\n#                          Is not available for standalone toolchain.\n\n#        gnustl_static  -> Use the GNU STL as a static library.\n\n#                          Implies -frtti -fexceptions.\n\n#        gnustl_shared  -> Use the GNU STL as a shared library.\n\n#                          Implies -frtti -fno-exceptions.\n\n#                          Available for NDK r7b and newer.\n\n#                          Silently degrades to gnustl_static if not available.\n\n#\n\n#    ANDROID_STL_FORCE_FEATURES=ON - turn rtti and exceptions support based on\n\n#      chosen runtime. If disabled, then the user is responsible for settings\n\n#      these options.\n\n#\n\n#  What?:\n\n#    android-cmake toolchain searches for NDK/toolchain in the following order:\n\n#      ANDROID_NDK - cmake parameter\n\n#      ANDROID_NDK - environment variable\n\n#      ANDROID_STANDALONE_TOOLCHAIN - cmake parameter\n\n#      ANDROID_STANDALONE_TOOLCHAIN - environment variable\n\n#      ANDROID_NDK - default locations\n\n#      ANDROID_STANDALONE_TOOLCHAIN - default locations\n\n#\n\n#    Make sure to do the following in your scripts:\n\n#      SET( CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} ${my_cxx_flags}\" )\n\n#      SET( CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} ${my_cxx_flags}\" )\n\n#    The flags will be prepopulated with critical flags, so don't loose them.\n\n#    Also be aware that toolchain also sets configuration-specific compiler\n\n#    flags and linker flags.\n\n#\n\n#    ANDROID and BUILD_ANDROID will be set to true, you may test any of these\n\n#    variables to make necessary Android-specific configuration changes.\n\n#\n\n#    Also ARMEABI or ARMEABI_V7A or ARM64_V8A or X86 or X86_64 or MIPS or MIPS64 will be set true, mutually\n\n#    exclusive. NEON option will be set true if VFP is set to NEON.\n\n#\n\n#    LIBRARY_OUTPUT_PATH_ROOT should be set in cache to determine where Android\n\n#    libraries will be installed.\n\n#    Default is ${CMAKE_SOURCE_DIR}, and the android libs will always be\n\n#    under the ${LIBRARY_OUTPUT_PATH_ROOT}/libs/${ANDROID_NDK_OUTPUT_ABI_NAME}\n\n#    (depending on the target ABI). This is convenient for Android packaging.\n\n#\n\n#  Change Log:\n\n#   - initial version December 2010\n\n#   - April 2011\n\n#     [+] added possibility to build with NDK (without standalone toolchain)\n\n#     [+] support cross-compilation on Windows (native, no cygwin support)\n\n#     [+] added compiler option to force \"char\" type to be signed\n\n#     [+] added toolchain option to compile to 32-bit ARM instructions\n\n#     [+] added toolchain option to disable SWIG search\n\n#     [+] added platform \"armeabi-v7a with VFPV3\"\n\n#     [~] ARM_TARGETS renamed to ARM_TARGET\n\n#     [+] EXECUTABLE_OUTPUT_PATH is set by toolchain (required on Windows)\n\n#     [~] Fixed bug with ANDROID_API_LEVEL variable\n\n#     [~] turn off SWIG search if it is not found first time\n\n#   - May 2011\n\n#     [~] ANDROID_LEVEL is renamed to ANDROID_API_LEVEL\n\n#     [+] ANDROID_API_LEVEL is detected by toolchain if not specified\n\n#     [~] added guard to prevent changing of output directories on the first\n\n#         cmake pass\n\n#     [~] toolchain exits with error if ARM_TARGET is not recognized\n\n#   - June 2011\n\n#     [~] default NDK path is updated for version r5c\n\n#     [+] variable CMAKE_SYSTEM_PROCESSOR is set based on ARM_TARGET\n\n#     [~] toolchain install directory is added to linker paths\n\n#     [-] removed SWIG-related stuff from toolchain\n\n#     [+] added macro find_host_package, find_host_program to search\n\n#         packages/programs on the host system\n\n#     [~] fixed path to STL library\n\n#   - July 2011\n\n#     [~] fixed options caching\n\n#     [~] search for all supported NDK versions\n\n#     [~] allowed spaces in NDK path\n\n#   - September 2011\n\n#     [~] updated for NDK r6b\n\n#   - November 2011\n\n#     [*] rewritten for NDK r7\n\n#     [+] x86 toolchain support (experimental)\n\n#     [+] added \"armeabi-v6 with VFP\" ABI for ARMv6 processors.\n\n#     [~] improved compiler and linker flags management\n\n#     [+] support different build flags for Release and Debug configurations\n\n#     [~] by default compiler flags the same as used by ndk-build (but only\n\n#         where reasonable)\n\n#     [~] ANDROID_NDK_TOOLCHAIN_ROOT is splitted to ANDROID_STANDALONE_TOOLCHAIN\n\n#         and ANDROID_TOOLCHAIN_ROOT\n\n#     [~] ARM_TARGET is renamed to ANDROID_ABI\n\n#     [~] ARMEABI_NDK_NAME is renamed to ANDROID_NDK_ABI_NAME\n\n#     [~] ANDROID_API_LEVEL is renamed to ANDROID_NATIVE_API_LEVEL\n\n#   - January 2012\n\n#     [+] added stlport_static support (experimental)\n\n#     [+] added special check for cygwin\n\n#     [+] filtered out hidden files (starting with .) while globbing inside NDK\n\n#     [+] automatically applied GLESv2 linkage fix for NDK revisions 5-6\n\n#     [+] added ANDROID_GET_ABI_RAWNAME to get NDK ABI names by CMake flags\n\n#   - February 2012\n\n#     [+] updated for NDK r7b\n\n#     [~] fixed cmake try_compile() command\n\n#     [~] Fix for missing install_name_tool on OS X\n\n#   - March 2012\n\n#     [~] fixed incorrect C compiler flags\n\n#     [~] fixed CMAKE_SYSTEM_PROCESSOR change on ANDROID_ABI change\n\n#     [+] improved toolchain loading speed\n\n#     [+] added assembler language support (.S)\n\n#     [+] allowed preset search paths and extra search suffixes\n\n#   - April 2012\n\n#     [+] updated for NDK r7c\n\n#     [~] fixed most of problems with compiler/linker flags and caching\n\n#     [+] added option ANDROID_FUNCTION_LEVEL_LINKING\n\n#   - May 2012\n\n#     [+] updated for NDK r8\n\n#     [+] added mips architecture support\n\n#   - August 2012\n\n#     [+] updated for NDK r8b\n\n#     [~] all intermediate files generated by toolchain are moved to CMakeFiles\n\n#     [~] libstdc++ and libsupc are removed from explicit link libraries\n\n#     [+] added CCache support (via NDK_CCACHE environment or cmake variable)\n\n#     [+] added gold linker support for NDK r8b\n\n#     [~] fixed mips linker flags for NDK r8b\n\n#   - September 2012\n\n#     [+] added NDK release name detection (see ANDROID_NDK_RELEASE)\n\n#     [+] added support for all C++ runtimes from NDK\n\n#         (system, gabi++, stlport, gnustl)\n\n#     [+] improved warnings on known issues of NDKs\n\n#     [~] use gold linker as default if available (NDK r8b)\n\n#     [~] globally turned off rpath\n\n#     [~] compiler options are aligned with NDK r8b\n\n#   - October 2012\n\n#     [~] fixed C++ linking: explicitly link with math library (OpenCV #2426)\n\n#   - November 2012\n\n#     [+] updated for NDK r8c\n\n#     [+] added support for clang compiler\n\n#   - December 2012\n\n#     [+] suppress warning about unused CMAKE_TOOLCHAIN_FILE variable\n\n#     [+] adjust API level to closest compatible as NDK does\n\n#     [~] fixed ccache full path search\n\n#     [+] updated for NDK r8d\n\n#     [~] compiler options are aligned with NDK r8d\n\n#   - March 2013\n\n#     [+] updated for NDK r8e (x86 version)\n\n#     [+] support x86_64 version of NDK\n\n#   - April 2013\n\n#     [+] support non-release NDK layouts (from Linaro git and Android git)\n\n#     [~] automatically detect if explicit link to crtbegin_*.o is needed\n\n#   - June 2013\n\n#     [~] fixed stl include path for standalone toolchain made by NDK >= r8c\n\n#   - July 2013\n\n#     [+] updated for NDK r9\n\n#   - November 2013\n\n#     [+] updated for NDK r9b\n\n#   - December 2013\n\n#     [+] updated for NDK r9c\n\n#   - January 2014\n\n#     [~] fix copying of shared STL\n\n#   - April 2014\n\n#     [+] updated for NDK r9d\n\n#   - July 2014\n\n#     [+] updated for NDK r10c\n\n#     [+] arm64_v8a, x86_64, mips64 toolchain support (experimental)\n\n# ------------------------------------------------------------------------------\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# subsequent toolchain loading is not really needed\n",
        "Line" : 320,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# touch toolchain variable only to suppress \"unused variable\" warning\n",
        "Line" : 325,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# this one is important\n",
        "Line" : 333,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# this one not so much\n",
        "Line" : 341,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# rpath makes low sence for Android\n",
        "Line" : 344,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# fight against cygwin\n",
        "Line" : 479,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# remove cygwin from PATH\n",
        "Line" : 488,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# detect current host platform\n",
        "Line" : 497,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# see if we have path to Android NDK\n",
        "Line" : 522,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# see if we have path to Android standalone toolchain\n",
        "Line" : 525,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "#try to find Android NDK in one of the the default locations\n",
        "Line" : 529,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "#try to find Android standalone toolchain in one of the the default locations\n",
        "Line" : 543,
        "CharPositionInLine" : 3
      },
      "14" : {
        "Text" : "# remember found paths\n",
        "Line" : 554,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# try to detect change\n",
        "Line" : 568,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "# android NDK layout\n",
        "Line" : 592,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# try to automatically detect the layout\n",
        "Line" : 595,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# only 32-bit at the moment\n",
        "Line" : 607,
        "CharPositionInLine" : 71
      },
      "19" : {
        "Text" : "# only 32-bit at the moment\n",
        "Line" : 612,
        "CharPositionInLine" : 71
      },
      "20" : {
        "Text" : "# ANDROID_NDK_LAYOUT STREQUAL \"RELEASE\"\n",
        "Line" : 616,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "# try to detect change of NDK\n",
        "Line" : 623,
        "CharPositionInLine" : 1
      },
      "22" : {
        "Text" : "# get all the details about standalone toolchain\n",
        "Line" : 637,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# get all the details about NDK\n",
        "Line" : 696,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# do not go through all toolchains if we know the name\n",
        "Line" : 705,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# we need clang to go after gcc\n",
        "Line" : 718,
        "CharPositionInLine" : 39
      },
      "26" : {
        "Text" : "# build list of available ABIs\n",
        "Line" : 736,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# choose target ABI\n",
        "Line" : 749,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# verify that target ABI is supported\n",
        "Line" : 751,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# set target ABI options\n",
        "Line" : 761,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# need always fallback to older platform\n",
        "Line" : 804,
        "CharPositionInLine" : 1
      },
      "31" : {
        "Text" : "# really dirty hack\n\n# it is not possible to change CMAKE_SYSTEM_PROCESSOR after the first run...\n",
        "Line" : 850,
        "CharPositionInLine" : 1
      },
      "32" : {
        "Text" : "# choose toolchain\n",
        "Line" : 863,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# adjust API level\n",
        "Line" : 914,
        "CharPositionInLine" : 1
      },
      "34" : {
        "Text" : "# validate\n",
        "Line" : 926,
        "CharPositionInLine" : 1
      },
      "35" : {
        "Text" : "# remember target ABI\n",
        "Line" : 948,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# runtime choice (STL, rtti, exceptions)\n",
        "Line" : 956,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# honor legacy ANDROID_USE_STLPORT\n",
        "Line" : 958,
        "CharPositionInLine" : 1
      },
      "38" : {
        "Text" : "# setup paths and STL for standalone toolchain\n",
        "Line" : 1033,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# old location ( pre r8c )\n",
        "Line" : 1042,
        "CharPositionInLine" : 3
      },
      "40" : {
        "Text" : "# always search static GNU STL to get the location of libsupc++.a\n",
        "Line" : 1052,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# clang\n",
        "Line" : 1087,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# setup paths and STL for NDK\n",
        "Line" : 1111,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# do nothing\n",
        "Line" : 1117,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# gnustl binary for 4.7 compiler is buggy :(\n\n# TODO: look for right fix\n",
        "Line" : 1152,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "# find libsupc++.a - rtti & exceptions\n",
        "Line" : 1170,
        "CharPositionInLine" : 1
      },
      "46" : {
        "Text" : "# r8b or newer\n",
        "Line" : 1172,
        "CharPositionInLine" : 137
      },
      "47" : {
        "Text" : "# r7-r8\n",
        "Line" : 1174,
        "CharPositionInLine" : 110
      },
      "48" : {
        "Text" : "# before r7\n",
        "Line" : 1176,
        "CharPositionInLine" : 36
      },
      "49" : {
        "Text" : "# case of shared STL linkage\n",
        "Line" : 1196,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# TODO: check if .so file exists before the renaming\n",
        "Line" : 1199,
        "CharPositionInLine" : 1
      },
      "51" : {
        "Text" : "# ccache support\n",
        "Line" : 1203,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# setup the cross-compiler\n",
        "Line" : 1216,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# Force set compilers because standard identification works badly for us\n",
        "Line" : 1259,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# force ASM compiler (required for CMake < 2.8.5)\n",
        "Line" : 1290,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# flags and definitions\n",
        "Line" : 1298,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# try to convert path to 8.3 form\n",
        "Line" : 1304,
        "CharPositionInLine" : 2
      },
      "57" : {
        "Text" : "# quotes can break try_compile and compiler identification\n",
        "Line" : 1319,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# NDK flags\n",
        "Line" : 1326,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# always compile ARMEABI_V6 in arm mode; otherwise there is no difference from ARMEABI\n",
        "Line" : 1336,
        "CharPositionInLine" : 2
      },
      "60" : {
        "Text" : "# good/necessary when porting desktop libraries\n",
        "Line" : 1365,
        "CharPositionInLine" : 62
      },
      "61" : {
        "Text" : "# see https://android-review.googlesource.com/#/c/47564/\n",
        "Line" : 1372,
        "CharPositionInLine" : 72
      },
      "62" : {
        "Text" : "# ABI-specific flags\n",
        "Line" : 1375,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# vfp == vfpv2\n",
        "Line" : 1386,
        "CharPositionInLine" : 91
      },
      "64" : {
        "Text" : "# STL\n",
        "Line" : 1403,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# C objects:\n",
        "Line" : 1414,
        "CharPositionInLine" : 2
      },
      "66" : {
        "Text" : "# variables controlling optional build flags\n",
        "Line" : 1432,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# libGLESv2.so in NDK's prior to r7 refers to missing external symbols.\n\n# So this flag option is required for all projects using OpenGL from native.\n",
        "Line" : 1434,
        "CharPositionInLine" : 1
      },
      "68" : {
        "Text" : "# linker flags\n",
        "Line" : 1454,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# this is *required* to use the following linker flags that routes around\n\n# a CPU bug in some Cortex-A8 implementations:\n",
        "Line" : 1458,
        "CharPositionInLine" : 1
      },
      "70" : {
        "Text" : "# there is some sysroot-related problem in mips linker...\n",
        "Line" : 1465,
        "CharPositionInLine" : 2
      },
      "71" : {
        "Text" : "# version 4.6\n",
        "Line" : 1494,
        "CharPositionInLine" : 8
      },
      "72" : {
        "Text" : "# cache flags\n",
        "Line" : 1522,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# put flags to cache (for debug purpose only)\n",
        "Line" : 1533,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# finish flags\n",
        "Line" : 1539,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# configure rtti\n",
        "Line" : 1556,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# configure exceptios\n",
        "Line" : 1565,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# global includes and link directories\n",
        "Line" : 1576,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# avoid CMP0015 policy warning\n",
        "Line" : 1578,
        "CharPositionInLine" : 111
      },
      "79" : {
        "Text" : "# detect if need link crtbegin_so.o explicitly\n",
        "Line" : 1581,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "# setup output directories\n",
        "Line" : 1618,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# copy shaed stl library to build directory\n",
        "Line" : 1631,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "# set these global flags for cmake client scripts to change behavior\n",
        "Line" : 1643,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# where is the target environment\n",
        "Line" : 1647,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# only search for libraries and includes in the ndk toolchain\n",
        "Line" : 1650,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# macro to find packages on the host OS\n",
        "Line" : 1656,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# macro to find programs on the host OS\n",
        "Line" : 1678,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "# export toolchain settings for the try_compile() command\n",
        "Line" : 1721,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "# force cmake to produce / instead of \\ in build commands for Ninja generator\n",
        "Line" : 1757,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# it is a bad hack after all\n\n# CMake generates Ninja makefiles with UNIX paths only if it thinks that we are going to build with MinGW\n",
        "Line" : 1759,
        "CharPositionInLine" : 1
      },
      "90" : {
        "Text" : "# tell CMake that we are MinGW\n\n# stop recursion\n",
        "Line" : 1761,
        "CharPositionInLine" : 37
      },
      "91" : {
        "Text" : "# unset( CMAKE_COMPILER_IS_MINGW ) # can't unset because CMake does not convert back-slashes in response files without it\n",
        "Line" : 1765,
        "CharPositionInLine" : 1
      },
      "92" : {
        "Text" : "# set some obsolete variables for backward compatibility\n",
        "Line" : 1770,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "# Variables controlling behavior or set by cmake toolchain:\n\n#   ANDROID_ABI : \"armeabi-v7a\" (default), \"armeabi\", \"armeabi-v7a with NEON\", \"armeabi-v7a with VFPV3\", \"armeabi-v6 with VFP\", \"arm64-v8a\", \"x86\", \"x86_64\", \"mips\", \"mips64\"\n\n#   ANDROID_NATIVE_API_LEVEL : 3,4,5,8,9,14 (depends on NDK version)\n\n#   ANDROID_STL : gnustl_static/gnustl_shared/stlport_static/stlport_shared/gabi++_static/gabi++_shared/system_re/system/none\n\n#   ANDROID_FORBID_SYGWIN : ON/OFF\n\n#   ANDROID_NO_UNDEFINED : ON/OFF\n\n#   ANDROID_SO_UNDEFINED : OFF/ON  (default depends on NDK version)\n\n#   ANDROID_FUNCTION_LEVEL_LINKING : ON/OFF\n\n#   ANDROID_GOLD_LINKER : ON/OFF\n\n#   ANDROID_NOEXECSTACK : ON/OFF\n\n#   ANDROID_RELRO : ON/OFF\n\n#   ANDROID_FORCE_ARM_BUILD : ON/OFF\n\n#   ANDROID_STL_FORCE_FEATURES : ON/OFF\n\n#   ANDROID_SET_OBSOLETE_VARIABLES : ON/OFF\n\n# Can be set only at the first run:\n\n#   ANDROID_NDK\n\n#   ANDROID_STANDALONE_TOOLCHAIN\n\n#   ANDROID_TOOLCHAIN_NAME : the NDK name of compiler toolchain\n\n#   ANDROID_NDK_HOST_X64 : try to use x86_64 toolchain (default for x64 host systems)\n\n#   ANDROID_NDK_LAYOUT : the inner NDK structure (RELEASE, LINARO, ANDROID)\n\n#   LIBRARY_OUTPUT_PATH_ROOT : <any valid path>\n\n#   NDK_CCACHE : <path to your ccache executable>\n\n# Obsolete:\n\n#   ANDROID_API_LEVEL : superseded by ANDROID_NATIVE_API_LEVEL\n\n#   ARM_TARGET : superseded by ANDROID_ABI\n\n#   ARM_TARGETS : superseded by ANDROID_ABI (can be set only)\n\n#   ANDROID_NDK_TOOLCHAIN_ROOT : superseded by ANDROID_STANDALONE_TOOLCHAIN (can be set only)\n\n#   ANDROID_USE_STLPORT : superseded by ANDROID_STL=stlport_static\n\n#   ANDROID_LEVEL : superseded by ANDROID_NATIVE_API_LEVEL (completely removed)\n\n#\n\n# Primary read-only variables:\n\n#   ANDROID : always TRUE\n\n#   ARMEABI : TRUE for arm v6 and older devices\n\n#   ARMEABI_V6 : TRUE for arm v6\n\n#   ARMEABI_V7A : TRUE for arm v7a\n\n#   ARM64_V8A : TRUE for arm64 v8a\n\n#   NEON : TRUE if NEON unit is enabled\n\n#   VFPV3 : TRUE if VFP version 3 is enabled\n\n#   X86 : TRUE if configured for x86\n\n#   X86_64 : TRUE if configured for x86_64\n\n#   MIPS64 : TRUE if configured for mips64\n\n#   MIPS : TRUE if configured for mips\n\n#   BUILD_ANDROID : always TRUE\n\n#   BUILD_WITH_ANDROID_NDK : TRUE if NDK is used\n\n#   BUILD_WITH_STANDALONE_TOOLCHAIN : TRUE if standalone toolchain is used\n\n#   ANDROID_NDK_HOST_SYSTEM_NAME : \"windows\", \"linux-x86\" or \"darwin-x86\" depending on host platform\n\n#   ANDROID_NDK_ABI_NAME : \"armeabi\", \"armeabi-v7a\", \"x86\" or \"mips\" depending on ANDROID_ABI\n\n#   ANDROID_NDK_RELEASE : one of r5, r5b, r5c, r6, r6b, r7, r7b, r7c, r8, r8b, r8c, r8d, r8e, r9, r9b, r9c, r9d, r10d; set only for NDK\n\n#   ANDROID_ARCH_NAME : \"arm\" or \"x86\" or \"mips\" depending on ANDROID_ABI\n\n#   ANDROID_SYSROOT : path to the compiler sysroot\n\n#   TOOL_OS_SUFFIX : \"\" or \".exe\" depending on host platform\n\n#   ANDROID_COMPILER_IS_CLANG : TRUE if clang compiler is used\n\n# Obsolete:\n\n#   ARMEABI_NDK_NAME : superseded by ANDROID_NDK_ABI_NAME\n\n#\n\n# Secondary (less stable) read-only variables:\n\n#   ANDROID_COMPILER_VERSION : GCC version used\n\n#   ANDROID_CXX_FLAGS : C/C++ compiler flags required by Android platform\n\n#   ANDROID_SUPPORTED_ABIS : list of currently allowed values for ANDROID_ABI\n\n#   ANDROID_TOOLCHAIN_MACHINE_NAME : \"arm-linux-androideabi\", \"arm-eabi\" or \"i686-android-linux\"\n\n#   ANDROID_TOOLCHAIN_ROOT : path to the top level of toolchain (standalone or placed inside NDK)\n\n#   ANDROID_CLANG_TOOLCHAIN_ROOT : path to clang tools\n\n#   ANDROID_SUPPORTED_NATIVE_API_LEVELS : list of native API levels found inside NDK\n\n#   ANDROID_STL_INCLUDE_DIRS : stl include paths\n\n#   ANDROID_RTTI : if rtti is enabled by the runtime\n\n#   ANDROID_EXCEPTIONS : if exceptions are enabled by the runtime\n\n#   ANDROID_GCC_TOOLCHAIN_NAME : read-only, differs from ANDROID_TOOLCHAIN_NAME only if clang is used\n\n#   ANDROID_CLANG_VERSION : version of clang compiler if clang is used\n\n#   ANDROID_LIBM_PATH : path to libm.so (set to something like $(TOP)/out/target/product/<product_name>/obj/lib/libm.so) to workaround unresolved `sincos`\n\n#\n\n# Defaults:\n\n#   ANDROID_DEFAULT_NDK_API_LEVEL\n\n#   ANDROID_DEFAULT_NDK_API_LEVEL_${ARCH}\n\n#   ANDROID_NDK_SEARCH_PATHS\n\n#   ANDROID_STANDALONE_TOOLCHAIN_SEARCH_PATH\n\n#   ANDROID_SUPPORTED_ABIS_${ARCH}\n\n#   ANDROID_SUPPORTED_NDK_VERSIONS\n",
        "Line" : 1780,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 94
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/CMakeLists.txt" : {
      "ObjectId" : "5b86bb6f01706b8999b8d104285101331c9b803e",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "######################################################################\n\n# OGRE BUILD SYSTEM\n\n# Welcome to the CMake build system for OGRE.\n\n# This is the main file where we prepare the general build environment\n\n# and provide build configuration options.\n\n######################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CMake 2.8.2 has a bug that creates unusable Xcode projects when using ARCHS_STANDARD_32_BIT\n\n# to specify both armv6 and armv7.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Use relative paths\n\n# This is mostly to reduce path size for command-line limits on windows\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This seems to break Xcode projects so definitely don't enable on Apple builds\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Include necessary submodules\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#####################################################################\n\n# Set up the basic build environment\n\n#####################################################################\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# CMake defaults to leaving CMAKE_BUILD_TYPE empty. This screws up\n\n# differentiation between debug and release builds.\n",
        "Line" : 80,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# determine Ogre version numbers\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Configure version file for use by scripts\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# determine if we are compiling for a 32bit or 64bit system\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Create debug libraries with _d postfix\n",
        "Line" : 102,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Set compiler specific build flags\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# This is a set of sensible warnings that provide meaningful output\n",
        "Line" : 116,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# set variable to state that we are using nmake makefiles\n",
        "Line" : 127,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Enable intrinsics on MSVC in debug mode\n",
        "Line" : 131,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Visual Studio bails out on debug builds in 64bit mode unless\n",
        "Line" : 134,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# this flag is set...\n",
        "Line" : 135,
        "CharPositionInLine" : 1
      },
      "18" : {
        "Text" : "# object files can get large with Unity builds\n",
        "Line" : 140,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# set architecture to i686, since otherwise some versions of MinGW can't link\n\n# the atomic primitives\n",
        "Line" : 163,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Fpermissive required to let some \"non-standard\" casting operations in the plugins pass\n",
        "Line" : 167,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# disable this optimisation because it breaks release builds (reason unknown)\n",
        "Line" : 169,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# Ignore some really annoying warnings which also happen in dependencies\n",
        "Line" : 171,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# Test for GCC visibility\n",
        "Line" : 176,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# determine gcc version\n",
        "Line" : 180,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# check if we can safely add -fvisibility-inlines-hidden\n",
        "Line" : 188,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# Fix x64 issues on Linux\n",
        "Line" : 203,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# determine system endianess\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# This doesn't work on VS 2010\n\n# MSVC only builds for intel anyway\n",
        "Line" : 211,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# Add OgreMain include path\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Set static early for proper dependency detection\n",
        "Line" : 226,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# Find dependencies\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# definitions for samples\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Specify build paths\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# We don't want to install in default system location, install is really for the SDK, so call it that\n",
        "Line" : 250,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# Set up iOS overrides.\n",
        "Line" : 257,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Set build variables\n",
        "Line" : 261,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# 10.7 is the minimum for libc++ support\n",
        "Line" : 354,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "# Make sure that the OpenGL render system is selected for non-iOS Apple builds\n",
        "Line" : 357,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "# Enable the PVRTC codec if OpenGL ES is being built\n",
        "Line" : 370,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Enable the ETC codec if OpenGL 3+ is being built\n",
        "Line" : 376,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "######################################################################\n\n# Provide user options to customise the build process\n\n######################################################################\n",
        "Line" : 381,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Customise what to build\n",
        "Line" : 385,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# WinRT can only use the standard allocator\n",
        "Line" : 417,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# determine threading options\n",
        "Line" : 433,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Customise what to install\n",
        "Line" : 451,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Unity build options\n\n# A Unity build includes all sources files in just a few actual compilation units\n\n# to potentially speed up the compilation.\n",
        "Line" : 469,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# hide advanced options\n",
        "Line" : 475,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "###################################################################\n\n# configure global build settings based on selected build options\n\n###################################################################\n",
        "Line" : 507,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "###################################################################\n\n# disable (useless) compiler warnings on project level\n\n###################################################################\n",
        "Line" : 512,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "##################################################################\n\n# Now setup targets\n\n##################################################################\n",
        "Line" : 519,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# install resource files\n",
        "Line" : 523,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# Setup OgreMain project\n",
        "Line" : 526,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# Setup RenderSystems\n",
        "Line" : 529,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# Setup Plugins\n",
        "Line" : 532,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# Setup Components\n",
        "Line" : 535,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# Setup tests (before samples so that PlayPen is included in browser)\n",
        "Line" : 538,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# enable CTest\n",
        "Line" : 540,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# Setup samples\n\n#add_subdirectory(Samples)\n",
        "Line" : 546,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# Add android JNI binding\n",
        "Line" : 549,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# Setup command-line tools\n",
        "Line" : 554,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# Setup XSIExporter\n",
        "Line" : 559,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Install documentation\n",
        "Line" : 564,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# Install media files\n",
        "Line" : 567,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# Install CMake modules\n",
        "Line" : 572,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# Provide CPack packaging target\n",
        "Line" : 575,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# Show feature summary\n",
        "Line" : 579,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 67
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/CTestConfig.cmake" : {
      "ObjectId" : "cdf5abbfb949c00d6373bb31a08af699b78c13cb",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## This file should be placed in the root directory of your project.\n\n## Then modify the CMakeLists.txt file in the root directory of your\n\n## project to incorporate the testing dashboard.\n\n## # The following are required to uses Dart and the Cdash dashboard\n\n##   ENABLE_TESTING()\n\n##   INCLUDE(CTest)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# this is temporary, my personal hosting:\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Components/CMakeLists.txt" : {
      "ObjectId" : "6647ed3b5e6bfe10bd1233642d178c1bf4c2f784",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configure Components build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use same build type for components as main build\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Components/HLMS/CMakeLists.txt" : {
      "ObjectId" : "c35bf17e80b19203930c21ddb2f5512db3591186",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "############################################################\n\n# HLMS optional component\n\n############################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# define header and source files for the library\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add needed definitions \n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# include headers\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# setup target\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# install \n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Components/MeshLodGenerator/CMakeLists.txt" : {
      "ObjectId" : "0ad2fe6199bc3a99c4bd5e944277580d5807400a",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "############################################################\n\n# MeshLodGenerator optional component\n\n############################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# define header and source files for the library\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add needed definitions \n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# include headers\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# setup target\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# install \n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Components/Overlay/CMakeLists.txt" : {
      "ObjectId" : "7767132b24aa9321f27ca0462917b219db6b62c6",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "############################################################\n\n# Overlay optional component\n\n############################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# define header and source files for the library\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add needed definitions \n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# include headers\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# setup target\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# install \n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Components/Paging/CMakeLists.txt" : {
      "ObjectId" : "29d852c56093f2f6677442543c4956f77dcc5c36",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "############################################################\n\n# Paging optional component\n\n############################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# define header and source files for the library\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add needed definitions \n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# include headers\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# setup target\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# install \n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Components/Property/CMakeLists.txt" : {
      "ObjectId" : "9cc1ccb995c9db4ed857d3ad7157669772a299b0",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "############################################################\n\n# Paging optional component\n\n############################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# define header and source files for the library\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add needed definitions \n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# include headers\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# setup target\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# install \n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Components/RTShaderSystem/CMakeLists.txt" : {
      "ObjectId" : "7db93497301dbdcf65fc89fd76ce595811dfce3a",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configure Ogre RTShader System build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Components/Terrain/CMakeLists.txt" : {
      "ObjectId" : "8c0238607409fca12c1291ee48be362131e1eaee",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "############################################################\n\n# Terrain optional component\n\n############################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# define header and source files for the library\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add needed definitions \n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# include headers\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# setup target\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# install \n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Components/Volume/CMakeLists.txt" : {
      "ObjectId" : "74e801d2c1899b518eb27620bc6b92d2e1d7a02f",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "############################################################\n\n# Volume optional component\n\n############################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# define header and source files for the library\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add needed definitions \n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# include headers\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# setup target\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# install \n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Dependencies/CMakeLists.txt" : {
      "ObjectId" : "a07d5507127a69171c18cd03b98a90d77068f850",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# look for DirectX which is needed by OIS\n\n#find_package(DirectX REQUIRED)\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Set build variables\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Set 10.5 as the base SDK by default\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Dependencies/cmake/FindDirectX.cmake" : {
      "ObjectId" : "aaeea411f2c247d614db2de2b6161a0770fe4788",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Find DirectX SDK\n\n# Define:\n\n# DirectX_FOUND\n\n# DirectX_INCLUDE_DIR\n\n# DirectX_LIBRARY\n\n# DirectX_ROOT_DIR\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The only platform it makes sense to check for DirectX SDK\n",
        "Line" : 18,
        "CharPositionInLine" : 10
      },
      "3" : {
        "Text" : "# Get path, convert backslashes as ${ENV_DXSDK_DIR}\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# construct search paths\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# redo search if prefix path changed\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# dlls are in DirectX_ROOT_DIR/Developer Runtime/x64|x86\n\n# lib files are in DirectX_ROOT_DIR/Lib/x64|x86\n\n# determine if we are compiling for a 32bit or 64bit system\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# look for dxgi (needed by both 10 and 11)\n",
        "Line" : 66,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# look for d3dcompiler (needed by 11)\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# look for D3D10 and D3D10.1 components\n",
        "Line" : 83,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# look for D3D11 components\n",
        "Line" : 104,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 11
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Dependencies/cmake/FindPkgMacros.cmake" : {
      "ObjectId" : "473b27b2a712ce91eb359ea066fb5b5616881d98",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##################################################################\n\n# Provides some common functionality for the FindPackage modules\n\n##################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Begin processing of package\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Display a status message unless FIND_QUIETLY is set\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Get environment variable, define it as ENV_$var and make sure backslashes are converted to forward slashes\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# replace won't work if var is blank\n",
        "Line" : 31,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "# Construct search paths for includes and libraries from a PREFIX_PATH\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# clear cache variables if a certain variable changed\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# test against internal check variable\n\n# HACK: Apparently, adding a variable to the cache cleans up the list\n\n# a bit. We need to also remove any empty strings from the list, but\n\n# at the same time ensure that we are actually dealing with a list.\n",
        "Line" : 52,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Try to get some hints from pkg-config, if available\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Couple a set of release AND debug libraries (or frameworks)\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Generate debug names from given release names\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Add the parent dir from DIR to VAR \n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Do the final processing for the package find.\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# skip if already processed during this run\n",
        "Line" : 103,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Slightly customised framework finder\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# These could be arrays of paths, add each individually to the search paths\n",
        "Line" : 140,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 17
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Dependencies/cmake/android.toolchain.cmake" : {
      "ObjectId" : "3bfd8e02e4a5aa0beecb88a19738690b136dc87a",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ------------------------------------------------------------------------------\n\n#  Android CMake toolchain file, for use with the Android NDK r5-r8b\n\n#  Requires cmake 2.6.3 or newer (2.8.3 or newer is recommended).\n\n#  See home page: http://code.google.com/p/android-cmake/\n\n#\n\n#  The file is mantained by the OpenCV project. And also can be found at\n\n#  http://code.opencv.org/svn/opencv/trunk/opencv/android/android.toolchain.cmake\n\n#\n\n#  Usage Linux:\n\n#   $ export ANDROID_NDK=/absolute/path/to/the/android-ndk\n\n#   $ mkdir build && cd build\n\n#   $ cmake -DCMAKE_TOOLCHAIN_FILE=path/to/the/android.toolchain.cmake ..\n\n#   $ make -j8\n\n#\n\n#  Usage Linux (using standalone toolchain):\n\n#   $ export ANDROID_STANDALONE_TOOLCHAIN=/absolute/path/to/android-toolchain\n\n#   $ mkdir build && cd build\n\n#   $ cmake -DCMAKE_TOOLCHAIN_FILE=path/to/the/android.toolchain.cmake ..\n\n#   $ make -j8\n\n#\n\n#  Usage Windows:\n\n#     You need native port of make to build your project.\n\n#     Android NDK r7 (or newer) already has make.exe on board.\n\n#     For older NDK you have to install it separately.\n\n#     For example, this one: http://gnuwin32.sourceforge.net/packages/make.htm\n\n#\n\n#   $ SET ANDROID_NDK=C:\\absolute\\path\\to\\the\\android-ndk\n\n#   $ mkdir build && cd build\n\n#   $ cmake.exe -G\"MinGW Makefiles\"\n\n#       -DCMAKE_TOOLCHAIN_FILE=path\\to\\the\\android.toolchain.cmake\n\n#       -DCMAKE_MAKE_PROGRAM=\"%ANDROID_NDK%\\prebuilt\\windows\\bin\\make.exe\" ..\n\n#   $ \"%ANDROID_NDK%\\prebuilt\\windows\\bin\\make.exe\"\n\n#\n\n#\n\n#  Options (can be set as cmake parameters: -D<option_name>=<value>):\n\n#    ANDROID_NDK=/opt/android-ndk - path to the NDK root.\n\n#      Can be set as environment variable. Can be set only at first cmake run.\n\n#\n\n#    ANDROID_STANDALONE_TOOLCHAIN=/opt/android-toolchain - path to the \n\n#      standalone toolchain. This option is not used if full NDK is found\n\n#      (ignored if ANDROID_NDK is set).\n\n#      Can be set as environment variable. Can be set only at first cmake run.\n\n#\n\n#    ANDROID_ABI=armeabi-v7a -  specifies the target Application Binary\n\n#      Interface (ABI). This option nearly matches to the APP_ABI variable \n\n#      used by ndk-build tool from Android NDK.\n\n#      Possible values are:\n\n#        \"armeabi\" - matches to the NDK ABI with the same name.\n\n#           See ${ANDROID_NDK}/docs/CPU-ARCH-ABIS.html for the documentation.\n\n#        \"armeabi-v7a\" - matches to the NDK ABI with the same name.\n\n#           See ${ANDROID_NDK}/docs/CPU-ARCH-ABIS.html for the documentation.\n\n#        \"armeabi-v7a with NEON\" - same as armeabi-v7a, but\n\n#            sets NEON as floating-point unit\n\n#        \"armeabi-v7a with VFPV3\" - same as armeabi-v7a, but\n\n#            sets VFPV3 as floating-point unit (has 32 registers instead of 16).\n\n#        \"armeabi-v6 with VFP\" - tuned for ARMv6 processors having VFP.\n\n#        \"x86\" - matches to the NDK ABI with the same name.\n\n#           See ${ANDROID_NDK}/docs/CPU-ARCH-ABIS.html for the documentation.\n\n#\n\n#    ANDROID_NATIVE_API_LEVEL=android-8 - level of Android API compile for.\n\n#      Option is read-only when standalone toolchain used.\n\n#\n\n#    ANDROID_FORCE_ARM_BUILD=OFF - set true to generate 32-bit ARM instructions\n\n#      instead of Thumb-1. Is not available for \"x86\" (inapplicable) and\n\n#      \"armeabi-v6 with VFP\" (forced) ABIs.\n\n#\n\n#    ANDROID_NO_UNDEFINED=ON - set true to show all undefined symbols as linker\n\n#      errors even if they are not used.\n\n#\n\n#    ANDROID_SO_UNDEFINED=OFF - set true to allow undefined symbols in shared\n\n#      libraries. Automatically turned on for NDK r5x and r6x due to GLESv2\n\n#      problems.\n\n#\n\n#    LIBRARY_OUTPUT_PATH_ROOT=${CMAKE_SOURCE_DIR} - where to output binary\n\n#      files. See additional details below.\n\n#\n\n#    ANDROID_SET_OBSOLETE_VARIABLES=ON - it set, then toolchain defines some\n\n#      obsolete variables which were set by previous versions of this file for\n\n#      backward compatibility.\n\n#\n\n#\n\n#  What?:\n\n#    android-cmake toolchain searches for NDK/toolchain in the following order:\n\n#      ANDROID_NDK - cmake parameter\n\n#      ANDROID_NDK - environment variable\n\n#      ANDROID_STANDALONE_TOOLCHAIN - cmake parameter\n\n#      ANDROID_STANDALONE_TOOLCHAIN - environment variable\n\n#      ANDROID_NDK - default locations\n\n#      ANDROID_STANDALONE_TOOLCHAIN - default locations\n\n#\n\n#    Make sure to do the following in your scripts:\n\n#      SET( CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} ${my_cxx_flags}\" )\n\n#      SET( CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} ${my_cxx_flags}\" )\n\n#      The flags will be prepopulated with critical flags, so don't loose them.\n\n#      Also be aware that toolchain also sets configuration-specific compiler\n\n#      flags and linker flags.\n\n#    \n\n#    ANDROID and BUILD_ANDROID will be set to true, you may test any of these \n\n#    variables to make necessary Android-specific configuration changes.\n\n#    \n\n#    Also ARMEABI or ARMEABI_V7A or X86 will be set true, mutually exclusive.\n\n#    NEON option will be set true if VFP is set to NEON.\n\n#\n\n#    LIBRARY_OUTPUT_PATH_ROOT should be set in cache to determine where Android\n\n#    libraries will be installed.\n\n#    Default is ${CMAKE_SOURCE_DIR}, and the android libs will always be\n\n#    under the ${LIBRARY_OUTPUT_PATH_ROOT}/libs/${ANDROID_NDK_ABI_NAME}\n\n#    (depending on the target ABI). This is convenient for Android packaging.\n\n#\n\n#  Authors:\n\n#    Ethan Rublee ethan.ruble@gmail.com\n\n#    Andrey Kamaev andrey.kamaev@itseez.com\n\n#\n\n#  Change Log:\n\n#   - initial version December 2010\n\n#   - modified April 2011\n\n#     [+] added possibility to build with NDK (without standalone toolchain)\n\n#     [+] support cross-compilation on Windows (native, no cygwin support)\n\n#     [+] added compiler option to force \"char\" type to be signed\n\n#     [+] added toolchain option to compile to 32-bit ARM instructions\n\n#     [+] added toolchain option to disable SWIG search\n\n#     [+] added platform \"armeabi-v7a with VFPV3\"\n\n#     [~] ARM_TARGETS renamed to ARM_TARGET\n\n#     [+] EXECUTABLE_OUTPUT_PATH is set by toolchain (required on Windows)\n\n#     [~] Fixed bug with ANDROID_API_LEVEL variable\n\n#     [~] turn off SWIG search if it is not found first time\n\n#   - modified May 2011\n\n#     [~] ANDROID_LEVEL is renamed to ANDROID_API_LEVEL\n\n#     [+] ANDROID_API_LEVEL is detected by toolchain if not specified\n\n#     [~] added guard to prevent changing of output directories on the first\n\n#         cmake pass\n\n#     [~] toolchain exits with error if ARM_TARGET is not recognized\n\n#   - modified June 2011\n\n#     [~] default NDK path is updated for version r5c \n\n#     [+] variable CMAKE_SYSTEM_PROCESSOR is set based on ARM_TARGET\n\n#     [~] toolchain install directory is added to linker paths\n\n#     [-] removed SWIG-related stuff from toolchain\n\n#     [+] added macro find_host_package, find_host_program to search\n\n#         packages/programs on the host system\n\n#     [~] fixed path to STL library\n\n#   - modified July 2011\n\n#     [~] fixed options caching\n\n#     [~] search for all supported NDK versions\n\n#     [~] allowed spaces in NDK path\n\n#   - modified September 2011\n\n#     [~] updated for NDK r6b\n\n#   - modified November 2011\n\n#     [*] rewritten for NDK r7\n\n#     [+] x86 toolchain support (experimental)\n\n#     [+] added \"armeabi-v6 with VFP\" ABI for ARMv6 processors.\n\n#     [~] improved compiler and linker flags management\n\n#     [+] support different build flags for Release and Debug configurations\n\n#     [~] by default compiler flags the same as used by ndk-build (but only\n\n#         where reasonable)\n\n#     [~] ANDROID_NDK_TOOLCHAIN_ROOT is splitted to ANDROID_STANDALONE_TOOLCHAIN\n\n#         and ANDROID_TOOLCHAIN_ROOT\n\n#     [~] ARM_TARGET is renamed to ANDROID_ABI\n\n#     [~] ARMEABI_NDK_NAME is renamed to ANDROID_NDK_ABI_NAME\n\n#     [~] ANDROID_API_LEVEL is renamed to ANDROID_NATIVE_API_LEVEL\n\n#   - modified January 2012\n\n#     [+] added stlport_static support (experimental)\n\n#     [+] added special check for cygwin\n\n#     [+] filtered out hidden files (starting with .) while globbing inside NDK\n\n#     [+] automatically applied GLESv2 linkage fix for NDK revisions 5-6\n\n#     [+] added ANDROID_GET_ABI_RAWNAME to get NDK ABI names by CMake flags\n\n#   - modified February 2012\n\n#     [+] updated for NDK r7b\n\n#     [~] fixed cmake try_compile() command\n\n#     [~] Fix for missing install_name_tool on OS X\n\n#   - modified March 2012\n\n#     [~] fixed incorrect C compiler flags\n\n#     [~] fixed CMAKE_SYSTEM_PROCESSOR change on ANDROID_ABI change\n\n#     [+] improved toolchain loading speed\n\n#     [+] added assembler language support (.S)\n\n#     [+] allowed preset search paths and extra search suffixes\n\n#   - modified April 2012\n\n#     [+] updated for NDK r7c\n\n#     [~] fixed most of problems with compiler/linker flags and caching\n\n#     [+] added option ANDROID_FUNCTION_LEVEL_LINKING\n\n#   - modified May 2012\n\n#     [+] updated for NDK r8\n\n#     [+] added mips architecture support\n\n#   - modified July 2012 by ifreedom.cn@gmail.com\n\n#     [+] updated for NDK r8b\n\n#     [+] fixed compiler version get\n\n#     [+] fixed gnu-stl version choose\n\n# ------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#subsequent toolchain loading is not really needed\n",
        "Line" : 192,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# this one is important\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#this one not so much\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#stl version: by default gnustl_static will be used\n",
        "Line" : 335,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#fight against cygwin\n",
        "Line" : 339,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#remove cygwin from PATH\n",
        "Line" : 348,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#detect current host platform\n",
        "Line" : 356,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#see if we have path to Android NDK\n",
        "Line" : 369,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#see if we have path to Android standalone toolchain\n",
        "Line" : 372,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "#try to find Android NDK in one of the the default locations\n",
        "Line" : 376,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "#try to find Android standalone toolchain in one of the the default locations\n",
        "Line" : 390,
        "CharPositionInLine" : 3
      },
      "12" : {
        "Text" : "#remember found paths\n",
        "Line" : 401,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#try to detect change\n",
        "Line" : 404,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "#try to detect change\n",
        "Line" : 418,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "#get all the details about standalone toolchain\n",
        "Line" : 442,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#do not run gcc every time because it is relatevely expencive\n",
        "Line" : 459,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "#get all the details about NDK\n",
        "Line" : 468,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#is ndk r8b?\n",
        "Line" : 497,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#build list of available ABIs\n",
        "Line" : 505,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#choose target ABI\n",
        "Line" : 520,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#verify that target ABI is supported\n",
        "Line" : 522,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#remember target ABI\n",
        "Line" : 532,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#set target ABI options\n",
        "Line" : 535,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#need always fallback to older platform\n",
        "Line" : 560,
        "CharPositionInLine" : 1
      },
      "25" : {
        "Text" : "#really dirty hack\n\n#it is not possible to change CMAKE_SYSTEM_PROCESSOR after the first run...\n",
        "Line" : 588,
        "CharPositionInLine" : 1
      },
      "26" : {
        "Text" : "#choose toolchain\n",
        "Line" : 607,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#choose native API level\n",
        "Line" : 652,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#validate\n",
        "Line" : 655,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#setup paths\n",
        "Line" : 674,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# specify the cross compiler\n",
        "Line" : 697,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#there may be a way to make cmake deduce these TODO deduce the rest of the tools\n",
        "Line" : 704,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#export directories\n",
        "Line" : 720,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#setup output directories\n",
        "Line" : 724,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#includes\n",
        "Line" : 735,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#STL bits includes\n",
        "Line" : 741,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#flags and definitions\n",
        "Line" : 755,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# quotes will break try_compile and compiler identification\n",
        "Line" : 758,
        "CharPositionInLine" : 1
      },
      "38" : {
        "Text" : "# Force set compilers because standard identification works badly for us\n",
        "Line" : 767,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#force ASM compiler (required for CMake < 2.8.5)\n",
        "Line" : 779,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# NDK flags\n",
        "Line" : 786,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# NDK also defines -ffunction-sections -funwind-tables but they result in worse OpenCV performance\n",
        "Line" : 788,
        "CharPositionInLine" : 1
      },
      "42" : {
        "Text" : "# extra arm-specific flags\n",
        "Line" : 793,
        "CharPositionInLine" : 1
      },
      "43" : {
        "Text" : "#release and debug flags\n",
        "Line" : 815,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "#It is recommended to use the -mthumb compiler flag to force the generation\n\n#of 16-bit Thumb-1 instructions (the default being 32-bit ARM ones).\n\n# O3 instead of O2/Os in release mode - like cmake sets for desktop gcc\n",
        "Line" : 818,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "# always compile ARMEABI_V6 in arm mode; otherwise there is no difference from ARMEABI\n\n# O3 instead of O2/Os in release mode - like cmake sets for desktop gcc\n",
        "Line" : 826,
        "CharPositionInLine" : 2
      },
      "46" : {
        "Text" : "#ABI-specific flags\n",
        "Line" : 849,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#sse?\n",
        "Line" : 864,
        "CharPositionInLine" : 48
      },
      "48" : {
        "Text" : "#linker flags\n",
        "Line" : 867,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "#STL\n",
        "Line" : 870,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "#gcc exception & rtti support\n",
        "Line" : 894,
        "CharPositionInLine" : 1
      },
      "51" : {
        "Text" : "#cleanup for STL search\n",
        "Line" : 911,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "#other linker flags\n",
        "Line" : 915,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "#libGLESv2.so in NDK's prior to r7 refers to exteranal symbols. So this flag option is required for all projects using OpenGL from native.\n",
        "Line" : 924,
        "CharPositionInLine" : 1
      },
      "54" : {
        "Text" : "# this is *required* to use the following linker flags that routes around\n\n# a CPU bug in some Cortex-A8 implementations:\n",
        "Line" : 945,
        "CharPositionInLine" : 1
      },
      "55" : {
        "Text" : "#cache flags\n",
        "Line" : 950,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "#finish flags\n",
        "Line" : 964,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "#set these global flags for cmake client scripts to change behavior\n",
        "Line" : 979,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# where is the target environment \n",
        "Line" : 983,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# only search for libraries and includes in the ndk toolchain\n",
        "Line" : 986,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "#macro to find packages on the host OS\n",
        "Line" : 992,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "#macro to find programs on the host OS\n",
        "Line" : 1014,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# export toolchain settings for the try_compile() command\n",
        "Line" : 1049,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# set some obsolete variables for backward compatibility\n",
        "Line" : 1062,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# Variables controlling behavior or set by cmake toolchain:\n\n#   ANDROID_ABI : \"armeabi-v7a\" (default), \"armeabi\", \"armeabi-v7a with NEON\", \"armeabi-v7a with VFPV3\", \"armeabi-v6 with VFP\", \"x86\", \"mips\"\n\n#   ANDROID_NATIVE_API_LEVEL : 3,4,5,8,9,14 (depends on NDK version)\n\n#   ANDROID_SET_OBSOLETE_VARIABLES : ON/OFF\n\n#   ANDROID_USE_STLPORT : OFF/ON - EXPERIMENTAL!!! \n\n#   ANDROID_FORBID_SYGWIN : ON/OFF\n\n#   ANDROID_NO_UNDEFINED : ON/OFF\n\n#   ANDROID_SO_UNDEFINED : OFF/ON  (default depends on NDK version)\n\n#   ANDROID_FUNCTION_LEVEL_LINKING : ON/OFF\n\n# Variables that takes effect only at first run:\n\n#   ANDROID_FORCE_ARM_BUILD : ON/OFF\n\n#   LIBRARY_OUTPUT_PATH_ROOT : <any valid path>\n\n# Can be set only at the first run:\n\n#   ANDROID_NDK\n\n#   ANDROID_STANDALONE_TOOLCHAIN\n\n# Obsolete:\n\n#   ANDROID_API_LEVEL : superseded by ANDROID_NATIVE_API_LEVEL\n\n#   ARM_TARGET : superseded by ANDROID_ABI\n\n#   ARM_TARGETS : superseded by ANDROID_ABI (can be set only)\n\n#   ANDROID_NDK_TOOLCHAIN_ROOT : superseded by ANDROID_STANDALONE_TOOLCHAIN (can be set only)\n\n#   ANDROID_LEVEL : superseded by ANDROID_NATIVE_API_LEVEL (completely removed)\n\n#\n\n# Primary read-only variables:\n\n#   ANDROID : always TRUE\n\n#   ARMEABI : TRUE for arm v6 and older devices\n\n#   ARMEABI_V6 : TRUE for arm v6\n\n#   ARMEABI_V7A : TRUE for arm v7a\n\n#   NEON : TRUE if NEON unit is enabled\n\n#   VFPV3 : TRUE if VFP version 3 is enabled\n\n#   X86 : TRUE if configured for x86\n\n#   BUILD_ANDROID : always TRUE\n\n#   BUILD_WITH_ANDROID_NDK : TRUE if NDK is used\n\n#   BUILD_WITH_STANDALONE_TOOLCHAIN : TRUE if standalone toolchain is used\n\n#   ANDROID_NDK_HOST_SYSTEM_NAME : \"windows\", \"linux-x86\" or \"darwin-x86\" depending on host platform\n\n#   ANDROID_NDK_ABI_NAME : \"armeabi\", \"armeabi-v7a\" or \"x86\" depending on ANDROID_ABI\n\n#   ANDROID_ARCH_NAME : \"arm\" or \"x86\" or \"mips\" depending on ANDROID_ABI\n\n#   TOOL_OS_SUFFIX : \"\" or \".exe\" depending on host platform\n\n#   ANDROID_SYSROOT : path to the compiler sysroot\n\n#   ANDROID_SYSTEM_INCLUDE_DIRS\n\n#   ANDROID_SYSTEM_LIB_DIRS\n\n# Obsolete:\n\n#   ARMEABI_NDK_NAME : superseded by ANDROID_NDK_ABI_NAME\n\n#\n\n# Secondary (less stable) read-only variables:\n\n#   ANDROID_COMPILER_VERSION : GCC version used\n\n#   ANDROID_CXX_FLAGS : C/C++ compiler flags required by Android platform\n\n#   ANDROID_SUPPORTED_ABIS : list of currently allowed values for ANDROID_ABI\n\n#   ANDROID_TOOLCHAIN_NAME : \"standalone\", \"arm-linux-androideabi-4.4.3\" or \"x86-4.4.3\" or something similar.\n\n#   ANDROID_TOOLCHAIN_MACHINE_NAME : \"arm-linux-androideabi\", \"arm-eabi\" or \"i686-android-linux\"\n\n#   ANDROID_TOOLCHAIN_ROOT : path to the top level of toolchain (standalone or placed inside NDK)\n\n#   ANDROID_SUPPORTED_NATIVE_API_LEVELS : list of native API levels found inside NDK\n\n#\n\n# Defaults:\n\n#   ANDROID_DEFAULT_NDK_API_LEVEL\n\n#   ANDROID_DEFAULT_NDK_API_LEVEL_${ARCH}\n\n#   ANDROID_NDK_SEARCH_PATHS\n\n#   ANDROID_STANDALONE_TOOLCHAIN_SEARCH_PATH\n\n#   ANDROID_SUPPORTED_ABIS_${ARCH}\n\n#   ANDROID_SUPPORTED_NDK_VERSIONS\n",
        "Line" : 1072,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 65
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Dependencies/src/CMakeLists.txt" : {
      "ObjectId" : "99fe33a2a09a029a3b11c3a492f600f33862082f",
      "LastModified" : "2017-10-27T00:14:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# provide configuration options to choose which of the dependencies to build\n\n#if(WIN32)\n\n#  option(OGREDEPS_BUILD_CG \"Build Cg dependency\" TRUE)\n\n#endif()\n\n#option(OGREDEPS_BUILD_FREEIMAGE \"Build FreeImage dependency\" TRUE)\n\n#option(OGREDEPS_BUILD_FREETYPE \"Build FreeType dependency\" TRUE)\n\n#option(OGREDEPS_BUILD_OIS \"Build OIS dependency\" TRUE)\n\n#option(OGREDEPS_BUILD_ZLIB \"Build zlib dependency\" TRUE)\n\n#option(OGREDEPS_BUILD_ZZIPLIB \"Build zziplib dependency\" TRUE)\n\n#option(OGREDEPS_INSTALL_DEV \"Install development headers and libraries\" TRUE)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(OGREDEPS_LIB_DIRECTORY \"lib${LIB_SUFFIX}\" CACHE STRING \"Install path for libraries, e.g. 'lib64' on some 64-bit Linux distros.\")\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# choose paths to build and install dependencies to\n\n#if (NOT OGREDEPS_RUNTIME_OUTPUT)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#set(OGREDEPS_RUNTIME_OUTPUT ${OgreDeps_BINARY_DIR}/bin)\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#endif ()\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#set(OGREDEPS_RELEASE_PATH \"/Release\")\n\n#set(OGREDEPS_DEBUG_PATH \"/Debug\")\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# postfix debug libraries with a _d\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# determine if we are compiling for a 32bit or 64bit system\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add -fPIC flag to x64 GCC builds\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# by default, install to ogredeps subfolder in build directory\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# enforce that CMAKE_BUILD_TYPE is set, otherwise install commands\n\n# will not work for Makefile based generators.\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# configure and install dependency LIBRARY\n\n# INCLUDE_DIR specifies where header files need to be installed\n\n# Any additional parameters are treated as a list of header files\n\n# to install.\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#RUNTIME_OUTPUT_DIRECTORY ${OGREDEPS_RUNTIME_OUTPUT}\n",
        "Line" : 81,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# always install runtime libraries (i.e. DLL, so)\n",
        "Line" : 91,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# also install development parts\n",
        "Line" : 104,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# setup the individual dependencies\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Dependencies/src/FreeImage/CMakeLists.txt" : {
      "ObjectId" : "a3da60eb101942201a416fac31fde2f5a0768815",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# need include directories for FreeImage and all the sub libs\n",
        "Line" : 516,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Dependencies/src/FreeImage/Source/LibTIFF4/Makefile.am" : {
      "ObjectId" : "b918bb95cd2fefc47256707a888e639f1e5d053e",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Tag Image File Format (TIFF) Software\n\n#\n\n# Copyright (C) 2004, Andrey Kiselev <dron@ak4719.spb.edu>\n\n#\n\n# Permission to use, copy, modify, distribute, and sell this software and \n\n# its documentation for any purpose is hereby granted without fee, provided\n\n# that (i) the above copyright notices and this permission notice appear in\n\n# all copies of the software and related documentation, and (ii) the names of\n\n# Sam Leffler and Silicon Graphics may not be used in any advertising or\n\n# publicity relating to the software without the specific, prior written\n\n# permission of Sam Leffler and Silicon Graphics.\n\n# \n\n# THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND, \n\n# EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY \n\n# WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  \n\n# \n\n# IN NO EVENT SHALL SAM LEFFLER OR SILICON GRAPHICS BE LIABLE FOR\n\n# ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND,\n\n# OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,\n\n# WHETHER OR NOT ADVISED OF THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF \n\n# LIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE \n\n# OF THIS SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Process this file with automake to produce Makefile.in.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# The finite state machine tables used by the G3/G4 decoders\n\n# are generated by the mkg3states program.  On systems without\n\n# make these rules have to be manually carried out.\n\n#\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Dependencies/src/FreeImage/Source/OpenEXR/Half/Makefile.am" : {
      "ObjectId" : "c591f55fef95c962e4399d2a5ee5acdd6101cbf6",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# these are used to build eLut.h and toFloat.h dynamically\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Dependencies/src/FreeImage/Source/OpenEXR/Iex/Makefile.am" : {
      "ObjectId" : "9b6df1bd65e1cf2f9e348a407c1d8650a1ae89f3",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Dependencies/src/FreeImage/Source/OpenEXR/IlmImf/Makefile.am" : {
      "ObjectId" : "d5b2b1c6b6572e37289db7e1a0d3d2758984cb83",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Dependencies/src/FreeImage/Source/OpenEXR/IlmThread/Makefile.am" : {
      "ObjectId" : "d46368acdf4522c0c977906fc3f9bbc0e2e11f3b",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Dependencies/src/FreeImage/Source/OpenEXR/Imath/Makefile.am" : {
      "ObjectId" : "5f0484e358a2a51ff29859a4865a65e23ff82b16",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Dependencies/src/FreeImage/Source/ZLib/Makefile" : {
      "ObjectId" : "6bba86c73fca2abda416baa1a7cf883b3494fb29",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Dependencies/src/zlib/CMakeLists.txt" : {
      "ObjectId" : "1cb1448259ff58311ecda1a0b7d477561da40aad",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Dependencies/src/zziplib/CMakeLists.txt" : {
      "ObjectId" : "50c51b05632f640d8db13084c01def03ca866c98",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# need zlib includes\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Docs/CMakeLists.txt" : {
      "ObjectId" : "cce710ff5b0c7699c6e36addca269d404d0f1abb",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################################\n\n# Install documentation\n\n# Build API docs, if doxygen is available\n\n###############################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set docs target directory\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Build and install API documentation if doxygen is available\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/OgreMain/CMakeLists.txt" : {
      "ObjectId" : "c5c32b2714ded8a9783114b3ce7ba9744a86ac60",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "############################################################\n\n# OgreMain core library\n\n############################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# define header and source files for the library\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Remove optional header files\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Remove optional source files\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add threading (backport from 2.X)\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add platform specific files\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Older CMake versions do not know how to deal with resource files on MinGW.\n\n# Newer ones do, but pass along invalid command options to windres.\n\n# This is a manual fix for the moment.\n",
        "Line" : 120,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# required by OgrePlatformInformation.cpp\n",
        "Line" : 166,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# some platforms require explicit linking to libdl, see if it's available\n",
        "Line" : 184,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Configure threading files\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Add needed definitions and nedmalloc include dir\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# setup OgreMain target\n",
        "Line" : 293,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# exclude OgreTimer.cpp from unity builds; causes problem\n",
        "Line" : 295,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# exclude OgreAlignedAllocator.cpp from unity builds; causes problems on Linux\n",
        "Line" : 299,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "# In visual studio 2010 - 64 bit we get this error: \"LINK : fatal error LNK1210: exceeded internal ILK size limit; link with /INCREMENTAL:NO\"\n",
        "Line" : 302,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Framework is called 'Ogre'\n",
        "Line" : 359,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# may need winsock htons functions for FreeImage\n",
        "Line" : 364,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# specify a precompiled header to use\n",
        "Line" : 368,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# install OgreMain\n",
        "Line" : 374,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/PlugIns/BSPSceneManager/CMakeLists.txt" : {
      "ObjectId" : "33b29d9308ec06017131de0cd973f1630274b717",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configure BSP SceneManager build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/PlugIns/CMakeLists.txt" : {
      "ObjectId" : "aa2351f8c1c561426950fcadb50dcb15bab69542",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configure Plugins build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/PlugIns/CgProgramManager/CMakeLists.txt" : {
      "ObjectId" : "4b6a393c09d9547566ec70f709d91abe32bd6c70",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configure CgProgramManager build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/PlugIns/OctreeSceneManager/CMakeLists.txt" : {
      "ObjectId" : "3d30fc3e97ffa135bd69e00f1dc1d8a203971c3b",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configure Octree SceneManager build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/PlugIns/OctreeZone/CMakeLists.txt" : {
      "ObjectId" : "64f609b3c33ba5927a557127f7524f157772018f",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configure OctreeZone SceneManager build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# need to include the plugins directory in the RPATH for OctreeZone to be able\n\n# to find the PCZSceneManager library\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/PlugIns/PCZSceneManager/CMakeLists.txt" : {
      "ObjectId" : "f972ba6ba9bc110e1089b4e69f22982ddb8cdc24",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configure PCZ SceneManager build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/PlugIns/ParticleFX/CMakeLists.txt" : {
      "ObjectId" : "2511e3c3ef67a14cf05c631e0b5f11715cf3163b",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configure BSP SceneManager build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/RenderSystems/CMakeLists.txt" : {
      "ObjectId" : "8f328c1aeb4686b8478e4b46fbd0c1f6204c2d18",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configure RenderSystem build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/RenderSystems/Direct3D11/CMakeLists.txt" : {
      "ObjectId" : "bfc787d68648f6ea339568c77fdff097bc0cccdd",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configure Direct3D11 RenderSystem build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/RenderSystems/Direct3D9/CMakeLists.txt" : {
      "ObjectId" : "beb69d227ad74f5771866f394d608013e3350e59",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configure Direct3D9 RenderSystem build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/RenderSystems/GL/CMakeLists.txt" : {
      "ObjectId" : "d1afd2bc8b8374d1430eb74f3f3d7314e77c492d",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configure OpenGL RenderSystem build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Remove test app file\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add system specific settings\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Note that in the next row SOURCE_FILES are added last. This is to prevent compilation problems of unity build found on Windows Visual Studio. \n\n#In this situation any file added after the \"glew.cpp\" file, which belongs to the SOURCE_FILES package, does not compile\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/RenderSystems/GL3Plus/CMakeLists.txt" : {
      "ObjectId" : "ea74714c8cf954a0b558e92301b7130d36a167db",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configure OpenGL 3+ RenderSystem build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add system specific settings\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Separate GLSupport and Window out to fix Unity builds\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/RenderSystems/GLES/CMakeLists.txt" : {
      "ObjectId" : "67a2321e0e0270ba88419736a1fcba8da8f63425",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configure OpenGL ES 1.x RenderSystem build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add system specific settings\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add system specific settings\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/RenderSystems/GLES2/CMakeLists.txt" : {
      "ObjectId" : "cec179a8315c6e2696771679f1a92f0fb0f25c68",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configure OpenGL ES 2.0 RenderSystem build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add system specific settings\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add support for the RT Shader System\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Samples/AtomicCounters/CMakeLists.txt" : {
      "ObjectId" : "5f7a97bffde33a010754863fef6598cb2ae96282",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configure AtomicCounters demo build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the INSTALL_PATH so that Samples can be installed in the application package\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Samples/BSP/CMakeLists.txt" : {
      "ObjectId" : "569d0f05f6e8347471a84c737bf5304bce2345cd",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configure BSP demo build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the INSTALL_PATH so that Samples can be installed in the application package\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Samples/BezierPatch/CMakeLists.txt" : {
      "ObjectId" : "e0ddd35d793077779775064f7aa9f156fb1876ed",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configure Bezier demo build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the INSTALL_PATH so that Samples can be installed in the application package\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Samples/Browser/CMakeLists.txt" : {
      "ObjectId" : "93f727ec004c42bac37deffe3f43faf849c8d493",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configure Browser demo build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Get the list of configured samples\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find all samples headers, and copy them to a single include folder\n\n# We do this instead of including every sample in the include_directories directive, \n\n# because this creates a list that is too long for the MSVC command line sometimes.\n",
        "Line" : 76,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Fix for static build with MinGW\n",
        "Line" : 88,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Inspired by http://cmakems.codeplex.com/SourceControl/latest#Tests/VSWinStorePhone/CMakeLists.txt\n",
        "Line" : 104,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Generate manifest.\n",
        "Line" : 106,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Make symlink to Media folder\n",
        "Line" : 119,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Get OS dependent path to use in `execute_process`\n",
        "Line" : 121,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Copy other resources\n",
        "Line" : 127,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Mark resources as deployment content, so that it would be packaged\n",
        "Line" : 149,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Set this variable to false if no java code will be present (google android:hasCode for more info)\n",
        "Line" : 193,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Fix for static build with MinGW\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Fix for static build with MinGW\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Add samples as dependencies\n",
        "Line" : 255,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Link to samples too\n",
        "Line" : 259,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "# configure SampleBrowser build\n",
        "Line" : 268,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# append _d for debug builds\n",
        "Line" : 272,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# set install RPATH for Unix systems\n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# On OS X, create .app bundle\n",
        "Line" : 291,
        "CharPositionInLine" : 1
      },
      "20" : {
        "Text" : "# Add the path where the Ogre framework was found, if it has been found somewhere\n",
        "Line" : 328,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# also, symlink frameworks so .app is standalone\n\n# NOTE: $(CONFIGURATION) is not resolvable at CMake run time, it's only \n\n# valid at build time (hence parenthesis rather than braces)\n",
        "Line" : 335,
        "CharPositionInLine" : 1
      },
      "22" : {
        "Text" : "# now cfg files\n",
        "Line" : 348,
        "CharPositionInLine" : 1
      },
      "23" : {
        "Text" : "# now plugins\n",
        "Line" : 371,
        "CharPositionInLine" : 1
      },
      "24" : {
        "Text" : "# Add links for the sample plugins\n",
        "Line" : 398,
        "CharPositionInLine" : 1
      },
      "25" : {
        "Text" : "# install debug pdb files\n",
        "Line" : 419,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 26
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Samples/CMakeLists.txt" : {
      "ObjectId" : "1bee51ac53d1fdb31d54d8c4965fb1570a2096c7",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configure Samples build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Make sure all plugins are built\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Static linking means we need to directly use plugins\n",
        "Line" : 81,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "# Link to all enabled plugins\n",
        "Line" : 107,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# Need to include resource files so that icons are linked\n",
        "Line" : 110,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# Link to RT Shader System if enabled.\n",
        "Line" : 120,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# Add browser last\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Install sample sources\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# install a new CMakeLists.txt file to allow building of samples\n",
        "Line" : 217,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Install sample headers, some people rely on these\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Create WiX setup for demo build\n",
        "Line" : 232,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Configure files, set media dir temporarily\n",
        "Line" : 241,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# restore\n",
        "Line" : 246,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# Make sure we build samples first\n",
        "Line" : 254,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 14
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Samples/CameraTrack/CMakeLists.txt" : {
      "ObjectId" : "863a0f58923f1ce72693f2a90b2d034ccec74d99",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configure CameraTrack demo build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the INSTALL_PATH so that Samples can be installed in the application package\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Samples/CelShading/CMakeLists.txt" : {
      "ObjectId" : "533fb5eff44d6ab656bc84dce3f8db3bb003f9fa",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configure Bezier demo build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the INSTALL_PATH so that Samples can be installed in the application package\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Samples/Character/CMakeLists.txt" : {
      "ObjectId" : "20cb9580359afd7195cae7a74d4f4968a9af2623",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configure Character demo build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the INSTALL_PATH so that Samples can be installed in the application package\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Samples/Compositor/CMakeLists.txt" : {
      "ObjectId" : "c852093f92e13e6a22d8f14d708b9318ee9f5c18",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configure Compositor demo build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the INSTALL_PATH so that Samples can be installed in the application package\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Samples/Compute/CMakeLists.txt" : {
      "ObjectId" : "e213276de02327eb1516132a83b0e39fd7694ccd",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configure computer sample build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# include/CharacterSample.h\n\n# include/SinbadCharacterController.h\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Set the INSTALL_PATH so that Samples can be installed in the application package\n",
        "Line" : 19,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Samples/CubeMapping/CMakeLists.txt" : {
      "ObjectId" : "3cf99a2abe60c9a76b16a230c3611d8f5fa47c57",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configure CubeMapping demo build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the INSTALL_PATH so that Samples can be installed in the application package\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Samples/DeferredShading/CMakeLists.txt" : {
      "ObjectId" : "4d519714bb2e6a46fbc3259b39192c969a592688",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configure DeferredShading demo build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the INSTALL_PATH so that Samples can be installed in the application package\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Samples/Dot3Bump/CMakeLists.txt" : {
      "ObjectId" : "7bd5cbe557eb80f026fe935d19405a7b7b445369",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configure Dot3Bump demo build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the INSTALL_PATH so that Samples can be installed in the application package\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Samples/DualQuaternion/CMakeLists.txt" : {
      "ObjectId" : "745616ecf321efd2b4f07c61ea81632d8b06adaa",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configure DualQuaternion demo build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the INSTALL_PATH so that Samples can be installed in the application package\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Samples/DynTex/CMakeLists.txt" : {
      "ObjectId" : "c7b10791df8a3fd390c105d74bec0a9eff0b2fc0",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configure DynTex demo build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the INSTALL_PATH so that Samples can be installed in the application package\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Samples/EndlessWorld/CMakeLists.txt" : {
      "ObjectId" : "8506f3ca4de05ae02edfe82fa183c58dc42ad38f",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configure EndlessWorld demo build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the INSTALL_PATH so that Samples can be installed in the application package\n",
        "Line" : 20,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Samples/FacialAnimation/CMakeLists.txt" : {
      "ObjectId" : "9e1c8e456f577c71e406b590a57e8483ab81b439",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configure FacialAnimation demo build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the INSTALL_PATH so that Samples can be installed in the application package\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Samples/Fresnel/CMakeLists.txt" : {
      "ObjectId" : "2eeed19444c220d55cc4f2b1d36ea58dd6aa98eb",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configure Fresnel demo build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the INSTALL_PATH so that Samples can be installed in the application package\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Samples/Grass/CMakeLists.txt" : {
      "ObjectId" : "1eab5d5cb30db4d1d82b37f4c58e264debc20438",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configure Grass demo build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the INSTALL_PATH so that Samples can be installed in the application package\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Samples/Hair/CMakeLists.txt" : {
      "ObjectId" : "0585473281988780644383991ce8940d2731041b",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configure Hair demo build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the INSTALL_PATH so that Samples can be installed in the application package\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Samples/Instancing/CMakeLists.txt" : {
      "ObjectId" : "498746eb184587da16ac8d91ea680fa767ace982",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configure Isosurf demo build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the INSTALL_PATH so that Samples can be installed in the application package\n",
        "Line" : 27,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Samples/Island/CMakeLists.txt" : {
      "ObjectId" : "f8da087dedce842fd6b0217f99f869acc731b7bb",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configure Island demo build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the INSTALL_PATH so that Samples can be installed in the application package\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Samples/Isosurf/CMakeLists.txt" : {
      "ObjectId" : "0e14472d793523a646747b70c36c11142525ad1b",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configure Isosurf demo build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the INSTALL_PATH so that Samples can be installed in the application package\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Samples/Lighting/CMakeLists.txt" : {
      "ObjectId" : "7cd298199e3540b6b19fd13b9df308858abc985a",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configure Lighting demo build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the INSTALL_PATH so that Samples can be installed in the application package\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Samples/Media/CMakeLists.txt" : {
      "ObjectId" : "bdcf6a10c5a33977daad03501f82f61b7729ad0a",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################################\n\n# Install media\n\n###############################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set media target directory\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Samples/MeshLod/CMakeLists.txt" : {
      "ObjectId" : "29d5558faf264c4a26f2626c45610fb7d1448037",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configure Mesh Lod demo build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the INSTALL_PATH so that Samples can be installed in the application package\n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Samples/NewInstancing/CMakeLists.txt" : {
      "ObjectId" : "6ac873b6d03c090f4c43358f50d482fe18050cb1",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configure NewInstancing demo build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the INSTALL_PATH so that Samples can be installed in the application package\n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Samples/OceanDemo/CMakeLists.txt" : {
      "ObjectId" : "9db4c73b6b1f823f256d2791e754ace3e77bde99",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configure Water demo build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the INSTALL_PATH so that Samples can be installed in the application package\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Samples/PCZTestApp/CMakeLists.txt" : {
      "ObjectId" : "e448b99c1064f7d393d0756f6b1094fdf0b023cc",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configure PCZTestApp demo build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# need to include plugins directory in RPATH for the demo to be able to find the PCZ libs\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Samples/PNTrianglesTessellation/CMakeLists.txt" : {
      "ObjectId" : "7c0e5a05d039ec8321769792011adf37328478e7",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configure Parametric PN Triangles Tessellation demo build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the INSTALL_PATH so that Samples can be installed in the application package\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Samples/ParticleFX/CMakeLists.txt" : {
      "ObjectId" : "0290a7b8d0ce3ee2742d93d41230182f150592aa",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configure ParticleFX demo build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the INSTALL_PATH so that Samples can be installed in the application package\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Samples/ParticleGS/CMakeLists.txt" : {
      "ObjectId" : "682792b70f7bc98c4d9b398634e4b8ed7b7f1c0c",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configure ParticleGS demo build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the INSTALL_PATH so that Samples can be installed in the application package\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Samples/SSAO/CMakeLists.txt" : {
      "ObjectId" : "d7906f537b3328a34c875f4b400e7a6fb29ec34e",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#----------------------------------------------------------\n\n# Sample SSAO CMake file\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the INSTALL_PATH so that Samples can be installed in the application package\n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Samples/ShaderSystem/CMakeLists.txt" : {
      "ObjectId" : "96b05b333bffa469700a00f02e86914d49a57182",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configure ShaderSystem demo build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the INSTALL_PATH so that Samples can be installed in the application package\n",
        "Line" : 24,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Samples/ShaderSystemMultiLight/CMakeLists.txt" : {
      "ObjectId" : "a747495e16dbc495953b432348f07e7f30eb3868",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configure ShaderSystemMultiLight demo build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the INSTALL_PATH so that Samples can be installed in the application package\n",
        "Line" : 24,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Samples/ShaderSystemTexturedFog/CMakeLists.txt" : {
      "ObjectId" : "cf066af95b13f369067165db2990f05d97cadc57",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configure ShaderSystemTexturedFog demo build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the INSTALL_PATH so that Samples can be installed in the application package\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Samples/Shadows/CMakeLists.txt" : {
      "ObjectId" : "ee5e0f5a292480184a5d6da49301f50cff4f99fa",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configure Shadows demo build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the INSTALL_PATH so that Samples can be installed in the application package\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Samples/SkeletalAnimation/CMakeLists.txt" : {
      "ObjectId" : "cea063ef81b6175aff4cae605f0474e1412af772",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configure SkeletalAnimation demo build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the INSTALL_PATH so that Samples can be installed in the application package\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Samples/SkyBox/CMakeLists.txt" : {
      "ObjectId" : "51daca1a69ee51c69d869ce3bf9225ec27c202bd",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configure SkyBox demo build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the INSTALL_PATH so that Samples can be installed in the application package\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Samples/SkyDome/CMakeLists.txt" : {
      "ObjectId" : "32733b9fdd269b58e235447b40d90a2bf39c4134",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configure SkyDome demo build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the INSTALL_PATH so that Samples can be installed in the application package\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Samples/SkyPlane/CMakeLists.txt" : {
      "ObjectId" : "52a60f832d2e04e3870b52ccea4f02819826eb45",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configure SkyPlane demo build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the INSTALL_PATH so that Samples can be installed in the application package\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Samples/Smoke/CMakeLists.txt" : {
      "ObjectId" : "bc803f4757d5cdc7f28bc06f00e4ea566af48cf7",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configure Smoke demo build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the INSTALL_PATH so that Samples can be installed in the application package\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Samples/SphereMapping/CMakeLists.txt" : {
      "ObjectId" : "16f014e2d6ad9b1cbac35c5c10867655ff7c8e81",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configure SphereMapping demo build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the INSTALL_PATH so that Samples can be installed in the application package\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Samples/Terrain/CMakeLists.txt" : {
      "ObjectId" : "92a5a3bcf1fb7a579c938c66050f00137b1dd710",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configure Terrain demo build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the INSTALL_PATH so that Samples can be installed in the application package\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Samples/TerrainTessellation/CMakeLists.txt" : {
      "ObjectId" : "f3af49a4f9859a0152fd3f256ac2278de3da6223",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configure Terrain Tessellation demo build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the INSTALL_PATH so that Samples can be installed in the application package\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Samples/Tessellation/CMakeLists.txt" : {
      "ObjectId" : "4135463fa41b66a1debb183124f63e5f975d2d04",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configure Tessellation demo build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the INSTALL_PATH so that Samples can be installed in the application package\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Samples/TextureArray/CMakeLists.txt" : {
      "ObjectId" : "15e5fb825a8fdffd0ce04a3bd741d370e105efe5",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configure TextureArray demo build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the INSTALL_PATH so that Samples can be installed in the application package\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Samples/TextureFX/CMakeLists.txt" : {
      "ObjectId" : "4719031108e6385bdb1f235cc441d9abd46f83a8",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configure TextureFX demo build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the INSTALL_PATH so that Samples can be installed in the application package\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Samples/Transparency/CMakeLists.txt" : {
      "ObjectId" : "8d58c077026ce9c649efcbfd2e84d75b801a5985",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configure Transparency demo build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the INSTALL_PATH so that Samples can be installed in the application package\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Samples/VolumeCSG/CMakeLists.txt" : {
      "ObjectId" : "513e9fd5137a5858a3c3684c334e622571489a9e",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configure VolumeCSG demo build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the INSTALL_PATH so that Samples can be installed in the application package\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Samples/VolumeTerrain/CMakeLists.txt" : {
      "ObjectId" : "552375a38ee7adb1714075af74b6b46e73e4c6b1",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configure VolumeTerrain demo build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the INSTALL_PATH so that Samples can be installed in the application package\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Samples/VolumeTex/CMakeLists.txt" : {
      "ObjectId" : "1a6d033bbaddac36f653f711bdf45396c11c0838",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configure VolumeTex demo build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the INSTALL_PATH so that Samples can be installed in the application package\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Samples/Water/CMakeLists.txt" : {
      "ObjectId" : "27e6397fed8b14490f4e7e0e528301b429f2df98",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configure Water demo build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the INSTALL_PATH so that Samples can be installed in the application package\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Tests/CMakeLists.txt" : {
      "ObjectId" : "645caa1f76a18c3ce4f7fd69b4e0f2e7ec5babde",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configure Tests build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Make sure all plugins are built\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Static linking means we need to directly use plugins\n",
        "Line" : 75,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Link to all enabled plugins\n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Need to include resource files so that icons are linked\n",
        "Line" : 98,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# unit tests are go!\n",
        "Line" : 111,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Components\n",
        "Line" : 254,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# not APPLE\n",
        "Line" : 298,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Copy necessary unit test data\n",
        "Line" : 299,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Necessary for tests to link when CppUnit is unavailable.\n",
        "Line" : 309,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Configure interactive test build\n",
        "Line" : 320,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# PlayPen gets included always\n",
        "Line" : 323,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# add VisualTests directory\n",
        "Line" : 326,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 14
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Tests/PlayPen/CMakeLists.txt" : {
      "ObjectId" : "4580efc60d91f4665635a63bd955b76d5cca3a1b",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configure PlayPen build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the INSTALL_PATH so that Samples can be installed in the application package\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Tests/VisualTests/CMakeLists.txt" : {
      "ObjectId" : "c1e053a62707197ee31e70f712f9600be2513da2",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configure Visual Test build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add Context directory\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# add the PlayPen test plugin's directory\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# add VTests plugin directory\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# setup cmake scripts\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# CTest configuration (this seems to need to be placed in the root of the build dir to be found)\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# build a list of render systems to test\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Figure out the home directory for this system (this is where the context outputs result data for now)\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# other platforms?\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# define a list of the visual tests\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Since CTest expects one command per test, but the Visual Testing setup runs all at once\n\n# (since unloading and reloading everything for each test wouldn't be practical) we\n\n# run the context first, outputting a file of results, then the tests themselves just\n\n# cat (or 'type' in windows) the file out and CTest's regex checking does the rest\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# define a macro for tests\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# In Unix we can just cat the file\n",
        "Line" : 172,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# In Windows we'll have to call a separate script (the cat equivalent is 'type', but\n\n# this seems to require a 'cmd /c type [file]', which doesn't seem to get called\n\n# properly with add_test, so CheckResult.cmake just does this via exec_program)\n",
        "Line" : 177,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# look for failure message (either [test]=Failed, or a file not found message from cat/type)\n",
        "Line" : 186,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# this test must be run after the appropriate test context has run\n",
        "Line" : 191,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# an extra measure to be sure the context runs first\n",
        "Line" : 196,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# function for running visual tests for a given render system\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# strip spaces from rendersystem name\n",
        "Line" : 205,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Run a CMake script that handles the test context\n",
        "Line" : 208,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# executable name\n",
        "Line" : 211,
        "CharPositionInLine" : 9
      },
      "22" : {
        "Text" : "# path to executable (this one's tricker than it seems, since it'll vary based on build config)\n",
        "Line" : 213,
        "CharPositionInLine" : 9
      },
      "23" : {
        "Text" : "# the render system to use\n",
        "Line" : 215,
        "CharPositionInLine" : 9
      },
      "24" : {
        "Text" : "# the directory where the output file will go\n",
        "Line" : 217,
        "CharPositionInLine" : 9
      },
      "25" : {
        "Text" : "# the script that carries this out\n",
        "Line" : 219,
        "CharPositionInLine" : 9
      },
      "26" : {
        "Text" : "# so we're extra sure this gets run first\n",
        "Line" : 222,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# and add_test for each test\n",
        "Line" : 226,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# Run the tests once for each rendersystem\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 29
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Tests/VisualTests/CTestCustom.cmake" : {
      "ObjectId" : "11db8e4cf29eeb249fc5fb1f8852753993013aa6",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set pre/post commands:\n\n#set(CTEST_CUSTOM_PRE_TEST \"\")\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Tests/VisualTests/CheckResult.cmake" : {
      "ObjectId" : "b3812df27d562478241a75fc0db4d0b77be6778b",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Since Windows cmd utils seem touchy about forward slash path separators\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Output results to the command line, for CTest to regex search\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Tests/VisualTests/Context/CMakeLists.txt" : {
      "ObjectId" : "972189e0e674cfeffb40526e8c98c965e8a1bad6",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Fix for static build with MinGW\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Make sure all plugins are built\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# now cfg files\n",
        "Line" : 136,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# now plugins\n",
        "Line" : 161,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# Components\n",
        "Line" : 209,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# In Windows TestContext cannot be run from the build directory\n\n# and thus must be installed to be useful.\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Tests/VisualTests/PlayPen/CMakeLists.txt" : {
      "ObjectId" : "0411087cbd4c3fd9a26ebc765672dc73e522eeaa",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the INSTALL_PATH so that Samples can be installed in the application package\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Tests/VisualTests/PostTest.cmake" : {
      "ObjectId" : "ae82848ee10383dc44d65f964b572f7dfc7f405b",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# escape spaces\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# make sure to use backslashes\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# other platforms?\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# clean up output files\n\n# Use platform-specific utils, since 'cmake -E remove' didn't seem to handle spaces in filepaths properly\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# other platforms?\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Tests/VisualTests/RunVTests.cmake" : {
      "ObjectId" : "c4274c063ea9e6f17a071e12bec079c7091cc751",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# strip spaces from render system name\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use platform-specific utils, since 'cmake -E remove' didn't seem to handle spaces in filepaths properly\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# other platforms?\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# needs the ./ in Unix-like systems\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# now run the context\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Pick rendersystem\n\n# Name it, so it overwrites itself each run\n\n# A brief comment\n\n# Where to output result summary\n",
        "Line" : 28,
        "CharPositionInLine" : 58
      },
      "CommentCount" : 7
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Tests/VisualTests/VTests/CMakeLists.txt" : {
      "ObjectId" : "a7f8e22d30d971fa5556d519eafa96bd7be0b9ad",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the INSTALL_PATH so that Samples can be installed in the application package\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Tools/CMakeLists.txt" : {
      "ObjectId" : "615c67706f9493bdc33920ec4c4f88212c5d5f50",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configure Tools build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Tools can't be run on the iOS so don't build them\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Tools/MeshUpgrader/CMakeLists.txt" : {
      "ObjectId" : "409059a99cd33fab57efe3cacbfaabaefe889ae7",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configure MeshUpgrader\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Tools/Wings3DExporter/Makefile" : {
      "ObjectId" : "7a07b62ac5ba63925edbcf1ac9ed4f1f3b91b91c",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Tools/XMLConverter/CMakeLists.txt" : {
      "ObjectId" : "d59d701feadc58adf33a18c4fd5e869b76bdbc56",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configure XMLConverter\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If TinyXML is not found on the system use the embedded version.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Mezzanine/libincludes/common/ogresrc/ogresvnsrc/Tools/XSIExport/CMakeLists.txt" : {
      "ObjectId" : "46accb03f7af4d08e4a25ecd4f54ae9db72e5ad7",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Mezzanine/libincludes/common/openalsoftsrc/CMakeLists.txt" : {
      "ObjectId" : "e1e5fb2914db2c98a62b716dae62360aff550525",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Choose the destination directory\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Open AL soft options\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/openalsoftsrc/openalsoft/CMakeLists.txt" : {
      "ObjectId" : "125b0713034de24600ae09f9bdc551bc873ba5b1",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake build file list for OpenAL\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This option is mainly for static linking OpenAL Soft into another project\n\n# that already defines the IDs. It is up to that project to ensure all\n\n# required IDs are defined.\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# QNX's gcc do not uses /usr/include and /usr/lib pathes by default\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# MSVC may need workarounds for C99 restrict and inline\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# TODO: Once we truly require C99, these restrict and inline checks should go\n\n# away.\n",
        "Line" : 123,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Slightly convoluted way to do this, because MSVC may barf if restrict is\n\n# defined to __restrict.\n",
        "Line" : 128,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Make sure we have C99-style inline semantics with GCC (4.3 or newer).\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Force no inlining for the next test.\n",
        "Line" : 160,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Add definitions, compiler switches, etc.\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ???\n",
        "Line" : 194,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Set visibility/export options if available\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Yes GCC, really don't accept visibility modes you don't support\n",
        "Line" : 263,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Some systems need libm for some of the following math functions to work\n",
        "Line" : 329,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Check for the dlopen API (for dynamicly loading backend libs)\n",
        "Line" : 417,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Check if we have Windows headers\n",
        "Line" : 428,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# These are needed on some systems for extra features\n",
        "Line" : 431,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# We need pthreads outside of Windows\n",
        "Line" : 445,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Some systems need pthread_np.h to get recursive mutexes\n",
        "Line" : 450,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Check for a 64-bit type\n",
        "Line" : 478,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Windows needs winmm for timeGetTime, even if the backend is disabled\n",
        "Line" : 496,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Check for SSE support\n",
        "Line" : 549,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Check for ARM Neon support\n",
        "Line" : 566,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Check for FluidSynth support\n",
        "Line" : 589,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Default backends, always available\n",
        "Line" : 607,
        "CharPositionInLine" : 14
      },
      "24" : {
        "Text" : "# Check ALSA backend\n",
        "Line" : 627,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Check OSS backend\n",
        "Line" : 648,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Check Solaris backend\n",
        "Line" : 661,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Check SndIO backend\n",
        "Line" : 674,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Check QSA backend\n",
        "Line" : 691,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Check for MMDevApi backend\n",
        "Line" : 708,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Check DSound/MMSystem backend\n",
        "Line" : 724,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Check PortAudio backend\n",
        "Line" : 760,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Check PulseAudio backend\n",
        "Line" : 781,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Check CoreAudio backend\n",
        "Line" : 802,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Some versions of OSX may need the AudioToolbox framework. Add it if\n\n# it's found.\n",
        "Line" : 813,
        "CharPositionInLine" : 8
      },
      "35" : {
        "Text" : "# Check for OpenSL (Android) backend\n",
        "Line" : 830,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Optionally enable the Wave Writer backend\n",
        "Line" : 847,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# This is always available\n",
        "Line" : 854,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Needed for openal.pc.in\n",
        "Line" : 875,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# End configuration\n",
        "Line" : 883,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Build a library\n",
        "Line" : 892,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Add an install target here\n",
        "Line" : 910,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Install alsoft.conf configuration file\n",
        "Line" : 948,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Install HRTF definitions\n",
        "Line" : 957,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 44
    },
    "Mezzanine/libincludes/common/openalsoftsrc/openalsoft/cmake/CheckSharedFunctionExists.cmake" : {
      "ObjectId" : "4980effad4c2ab45c3782e89c352eb4989206247",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check if a symbol exists as a function, variable, or macro\n\n# CHECK_SYMBOL_EXISTS(<symbol> <files> <variable>)\n\n#\n\n# Check that the <symbol> is available after including given header\n\n# <files> and store the result in a <variable>.  Specify the list\n\n# of files in one argument as a semicolon-separated list.\n\n#\n\n# If the header files define the symbol as a macro it is considered\n\n# available and assumed to work.  If the header files declare the\n\n# symbol as a function or variable then the symbol must also be\n\n# available for linking.  If the symbol is a type or enum value\n\n# it will not be recognized (consider using CheckTypeSize or\n\n# CheckCSourceCompiles).\n\n#\n\n# The following variables may be set before calling this macro to\n\n# modify the way the check is run:\n\n#\n\n#  CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n#  CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n#  CMAKE_REQUIRED_INCLUDES = list of include directories\n\n#  CMAKE_REQUIRED_LIBRARIES = list of libraries to link\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2003-2011 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/openalsoftsrc/openalsoft/cmake/FindFluidSynth.cmake" : {
      "ObjectId" : "7d5cb6a8ede8650431a88c44d7041c98f2cbcba6",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find fluidsynth\n\n# Find the native fluidsynth includes and library\n\n#\n\n#  FLUIDSYNTH_INCLUDE_DIR - where to find fluidsynth.h\n\n#  FLUIDSYNTH_LIBRARIES   - List of libraries when using fluidsynth.\n\n#  FLUIDSYNTH_FOUND       - True if fluidsynth found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set FLUIDSYNTH_FOUND to TRUE if \n\n# all listed variables are TRUE\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Mezzanine/libincludes/common/openalsoftsrc/openalsoft/cmake/FindSDL_sound.cmake" : {
      "ObjectId" : "97d2a84c9ea772c1403db17fcc5a9c61d2c91e6c",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Locates the SDL_sound library\n\n#\n\n# This module depends on SDL being found and\n\n# must be called AFTER FindSDL.cmake is called.\n\n#\n\n# This module defines\n\n#  SDL_SOUND_INCLUDE_DIR, where to find SDL_sound.h\n\n#  SDL_SOUND_FOUND, if false, do not try to link to SDL_sound\n\n#  SDL_SOUND_LIBRARIES, this contains the list of libraries that you need\n\n#    to link against. This is a read-only variable and is marked INTERNAL.\n\n#  SDL_SOUND_EXTRAS, this is an optional variable for you to add your own\n\n#    flags to SDL_SOUND_LIBRARIES. This is prepended to SDL_SOUND_LIBRARIES.\n\n#    This is available mostly for cases this module failed to anticipate for\n\n#    and you must add additional flags. This is marked as ADVANCED.\n\n#  SDL_SOUND_VERSION_STRING, human-readable string containing the version of SDL_sound\n\n#\n\n# This module also defines (but you shouldn't need to use directly)\n\n#   SDL_SOUND_LIBRARY, the name of just the SDL_sound library you would link\n\n#   against. Use SDL_SOUND_LIBRARIES for you link instructions and not this one.\n\n# And might define the following as needed\n\n#   MIKMOD_LIBRARY\n\n#   MODPLUG_LIBRARY\n\n#   OGG_LIBRARY\n\n#   VORBIS_LIBRARY\n\n#   SMPEG_LIBRARY\n\n#   FLAC_LIBRARY\n\n#   SPEEX_LIBRARY\n\n#\n\n# Typically, you should not use these variables directly, and you should use\n\n# SDL_SOUND_LIBRARIES which contains SDL_SOUND_LIBRARY and the other audio libraries\n\n# (if needed) to successfully compile on your system.\n\n#\n\n# Created by Eric Wing.\n\n# This module is a bit more complicated than the other FindSDL* family modules.\n\n# The reason is that SDL_sound can be compiled in a large variety of different ways\n\n# which are independent of platform. SDL_sound may dynamically link against other 3rd\n\n# party libraries to get additional codec support, such as Ogg Vorbis, SMPEG, ModPlug,\n\n# MikMod, FLAC, Speex, and potentially others.\n\n# Under some circumstances which I don't fully understand,\n\n# there seems to be a requirement\n\n# that dependent libraries of libraries you use must also be explicitly\n\n# linked against in order to successfully compile. SDL_sound does not currently\n\n# have any system in place to know how it was compiled.\n\n# So this CMake module does the hard work in trying to discover which 3rd party\n\n# libraries are required for building (if any).\n\n# This module uses a brute force approach to create a test program that uses SDL_sound,\n\n# and then tries to build it. If the build fails, it parses the error output for\n\n# known symbol names to figure out which libraries are needed.\n\n#\n\n# Responds to the $SDLDIR and $SDLSOUNDDIR environmental variable that would\n\n# correspond to the ./configure --prefix=$SDLDIR used in building SDL.\n\n#\n\n# On OSX, this will prefer the Framework version (if found) over others.\n\n# People will have to manually change the cache values of\n\n# SDL_LIBRARY to override this selectionor set the CMake environment\n\n# CMAKE_INCLUDE_PATH to modify the search paths.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2005-2009 Kitware, Inc.\n\n# Copyright 2012 Benjamin Eikel\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find SDL_sound.h\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# CMake is giving me problems using TRY_COMPILE with the CMAKE_FLAGS\n\n# for the :STRING syntax if I have multiple values contained in a\n\n# single variable. This is a problem for the SDL_LIBRARY variable\n\n# because it does just that. When I feed this variable to the command,\n\n# only the first value gets the appropriate modifier (e.g. -I) and\n\n# the rest get dropped.\n\n# To get multiple single variables to work, I must separate them with a \"\\;\"\n\n# I could go back and modify the FindSDL.cmake module, but that's kind of painful.\n\n# The solution would be to try something like:\n\n# set(SDL_TRY_COMPILE_LIBRARY_LIST \"${SDL_TRY_COMPILE_LIBRARY_LIST}\\;${CMAKE_THREAD_LIBS_INIT}\")\n\n# Instead, it was suggested on the mailing list to write a temporary CMakeLists.txt\n\n# with a temporary test project and invoke that with TRY_COMPILE.\n\n# See message thread \"Figuring out dependencies for a library in order to build\"\n\n# 2005-07-16\n\n#     try_compile(\n\n#             MY_RESULT\n\n#             ${CMAKE_BINARY_DIR}\n\n#             ${PROJECT_SOURCE_DIR}/DetermineSoundLibs.c\n\n#             CMAKE_FLAGS\n\n#                     -DINCLUDE_DIRECTORIES:STRING=${SDL_INCLUDE_DIR}\\;${SDL_SOUND_INCLUDE_DIR}\n\n#                     -DLINK_LIBRARIES:STRING=${SDL_SOUND_LIBRARY}\\;${SDL_LIBRARY}\n\n#             OUTPUT_VARIABLE MY_OUTPUT\n\n#     )\n",
        "Line" : 92,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# To minimize external dependencies, create a sdlsound test program\n\n# which will be used to figure out if additional link dependencies are\n\n# required for the link phase.\n",
        "Line" : 116,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Calling\n\n# target_link_libraries(DetermineSoundLibs \"${SDL_SOUND_LIBRARY} ${SDL_LIBRARY})\n\n# causes problems when SDL_LIBRARY looks like\n\n# /Library/Frameworks/SDL.framework;-framework Cocoa\n\n# The ;-framework Cocoa seems to be confusing CMake once the OS X\n\n# framework support was added. I was told that breaking up the list\n\n# would fix the problem.\n",
        "Line" : 142,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "# message(\"TMP_TRY_LIBS ${TMP_TRY_LIBS}\")\n",
        "Line" : 154,
        "CharPositionInLine" : 3
      },
      "7" : {
        "Text" : "# Write the CMakeLists.txt and test project\n\n# Weird, this is still sketchy. If I don't quote the variables\n\n# in the TARGET_LINK_LIBRARIES, I seem to loose everything\n\n# in the SDL_LIBRARY string after the \"-framework\".\n\n# But if I quote the stuff in INCLUDE_DIRECTORIES, it doesn't work.\n",
        "Line" : 156,
        "CharPositionInLine" : 3
      },
      "8" : {
        "Text" : "# message(\"${MY_RESULT}\")\n\n# message(${MY_OUTPUT})\n",
        "Line" : 177,
        "CharPositionInLine" : 3
      },
      "9" : {
        "Text" : "# I expect that MPGLIB, VOC, WAV, AIFF, and SHN are compiled in statically.\n\n# I think Timidity is also compiled in statically.\n\n# I've never had to explcitly link against Quicktime, so I'll skip that for now.\n",
        "Line" : 182,
        "CharPositionInLine" : 5
      },
      "10" : {
        "Text" : "# Find MikMod\n",
        "Line" : 188,
        "CharPositionInLine" : 5
      },
      "11" : {
        "Text" : "# Find ModPlug\n",
        "Line" : 208,
        "CharPositionInLine" : 5
      },
      "12" : {
        "Text" : "# Find Ogg and Vorbis\n",
        "Line" : 229,
        "CharPositionInLine" : 5
      },
      "13" : {
        "Text" : "# Find SMPEG\n",
        "Line" : 269,
        "CharPositionInLine" : 5
      },
      "14" : {
        "Text" : "# Find FLAC\n",
        "Line" : 290,
        "CharPositionInLine" : 5
      },
      "15" : {
        "Text" : "# Hmmm...Speex seems to depend on Ogg. This might be a problem if\n\n# the TRY_COMPILE attempt gets blocked at SPEEX before it can pull\n\n# in the Ogg symbols. I'm not sure if I should duplicate the ogg stuff\n\n# above for here or if two ogg entries will screw up things.\n",
        "Line" : 311,
        "CharPositionInLine" : 5
      },
      "16" : {
        "Text" : "# Find OGG (needed for Speex)\n",
        "Line" : 333,
        "CharPositionInLine" : 7
      },
      "17" : {
        "Text" : "# We might have already found Ogg for Vorbis, so skip it if so.\n",
        "Line" : 334,
        "CharPositionInLine" : 5
      },
      "CommentCount" : 18
    },
    "Mezzanine/libincludes/common/openalsoftsrc/openalsoft/utils/alsoft-config/CMakeLists.txt" : {
      "ObjectId" : "a6707a3de3e19fa43fae2642ab45e81a3ddb57d6",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Need Qt 4.8.0 or newer for the iconset theme attribute to work\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Mezzanine/libincludes/common/ruby200/CMakeLists.txt" : {
      "ObjectId" : "30391b344c36101e83fc8ab35b812f01aba6a8e8",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Â© Copyright 2010 - 2011 BlackTopp Studios Inc.\n\n# This file is part of The Mezzanine Engine.\n\n#\n\n#    The Mezzanine Engine is free software: you can redistribute it and/or modify\n\n#    it under the terms of the GNU General Public License as published by\n\n#    the Free Software Foundation, either version 3 of the License, or\n\n#    (at your option) any later version.\n\n#\n\n#    The Mezzanine Engine is distributed in the hope that it will be useful,\n\n#    but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n#    GNU General Public License for more details.\n\n#\n\n#    You should have received a copy of the GNU General Public License\n\n#    along with The Mezzanine Engine.  If not, see <http://www.gnu.org/licenses/>.\n\n#\n\n#   The original authors have included a copy of the license specified above in the\n\n#   'Docs' folder. See 'gpl.txt'\n\n#\n\n#   We welcome the use of the Mezzanine engine to anyone, including companies who wish to\n\n#   Build professional software and charge for their product.\n\n#\n\n#   However there are some practical restrictions, so if your project involves\n\n#   any of the following you should contact us and we will try to work something\n\n#   out:\n\n#    - DRM or Copy Protection of any kind(except Copyrights)\n\n#    - Software Patents You Do Not Wish to Freely License\n\n#    - Any Kind of Linking to Non-GPL licensed Works\n\n#    - Are Currently In Violation of Another Copyright Holder's GPL License\n\n#    - If You want to change our code and not add a few hundred MB of stuff to\n\n#        your distribution\n\n#\n\n#   These and other limitations could cause serious legal problems if you ignore\n\n#   them, so it is best to simply contact us or the Free Software Foundation, if\n\n#   you have any questions.\n\n#\n\n#   Joseph Toppi - toppij@gma il.com\n\n#   John Blackwood - makoenergy02@gmail.com\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#check for new builds at: https://www.ruby-lang.org/en/downloads/\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Mezzanine/libincludes/common/ruby200/ruby-2.0.0-p247/.indent.pro" : {
      "ObjectId" : "6a207a05545545dece06932ae8d047370de42e54",
      "LastModified" : "2017-07-30T20:16:40Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "Mezzanine/libincludes/common/sdlsrc/CMakeLists.txt" : {
      "ObjectId" : "9d6a9c82c8bf12080433f1d11972fe151e8e1a86",
      "LastModified" : "2017-10-27T00:14:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# When updating the version of SDL, apply all the patches located in the \"Pending Patches\" folder located in the same directory as this file.  Patches may need to be applied manually.\n\n# Also, when updating check SDL for any mention of \"-mwindows\" in it's CMake files(Note: Not configure files where I also saw it used, probably because of the CMake files).  \n\n#  Any entries that add it to the linker flags should be commented out and replaced with lines that do all the same flags minus \"-mwindows\".  If adding \"-mwindows\" is the only \n\n#  thing it does then the line can be commented out entirely.\n\n# Lastly, around line 1134 of the cmakelists.txt -fPIC had to be added in an non-windows conditional check to allow compilation on linux.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# SDL Sub-Systems\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# SDL Low-Level Options\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# SDL Video Options\n",
        "Line" : 58,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# SDL Audio Options\n",
        "Line" : 81,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# SDL Threading Options\n",
        "Line" : 100,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# SDL Options\n",
        "Line" : 105,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# Updated Options\n",
        "Line" : 113,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# SDL Indirect Options\n",
        "Line" : 120,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 9
    },
    "Mezzanine/libincludes/common/sdlsrc/SDL/CMakeLists.txt" : {
      "ObjectId" : "070fa52bb06dca903c83c81d181d4b79441d84e0",
      "LastModified" : "2018-03-29T04:24:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# !!! FIXME: this should probably do \"MACOSX_RPATH ON\" as a target property\n\n# !!! FIXME:  for the SDL2 shared library (so you get an\n\n# !!! FIXME:  install_name (\"soname\") of \"@rpath/libSDL-whatever.dylib\"\n\n# !!! FIXME:  instead of \"/usr/local/lib/libSDL-whatever.dylib\"), but I'm\n\n# !!! FIXME:  punting for now and leaving the existing behavior. Until this\n\n# !!! FIXME:  properly resolved, this line silences a warning in CMake 3.0+.\n\n# !!! FIXME:  remove it and this comment entirely once the problem is\n\n# !!! FIXME:  properly resolved.\n\n#cmake_policy(SET CMP0042 OLD)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# General settings\n\n# Edit include/SDL_version.h and change the version, then:\n\n#   SDL_MICRO_VERSION += 1;\n\n#   SDL_INTERFACE_AGE += 1;\n\n#   SDL_BINARY_AGE += 1;\n\n# if any functions have been added, set SDL_INTERFACE_AGE to 0.\n\n# if backwards compatibility has been broken,\n\n# set SDL_BINARY_AGE and SDL_INTERFACE_AGE to 0.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set defaults preventing destination file conflicts\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Calculate a libtool-like version number\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# General settings & flags\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Check for 64 or 32 bit\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Get the platform\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# TODO: iOS?\n",
        "Line" : 119,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Don't mistake osx for unix\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# JavaScript does not yet have threading support, so disable pthreads when building for Emscripten.\n",
        "Line" : 139,
        "CharPositionInLine" : 40
      },
      "10" : {
        "Text" : "# Default option knobs\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Compiler info\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# VisualStudio 8.0+\n",
        "Line" : 162,
        "CharPositionInLine" : 34
      },
      "13" : {
        "Text" : "#set(CMAKE_C_FLAGS \"/ZI /WX- /\n",
        "Line" : 164,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Default flags, if not set otherwise\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Hackish, but does the trick on Win32\n",
        "Line" : 184,
        "CharPositionInLine" : 37
      },
      "16" : {
        "Text" : "# Make sure /RTC1 is disabled, otherwise it will use functions from the CRT\n",
        "Line" : 200,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Those are used for pkg-config and friends, so that the SDL2.pc, sdl2-config,\n\n# etc. are created correctly.\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Emscripten toolchain has a nonempty default value for this, and the checks \n\n# in this file need to change that, so remember the original value, and \n\n# restore back to that afterwards. For check_function_exists() to work in\n\n# Emscripten, this value must be at its default value.\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# We build SDL on cygwin without the UNIX emulation layer\n",
        "Line" : 220,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# General includes\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# All these ENABLED_BY_DEFAULT vars will default to ON if not specified, so\n\n#  you only need to have a platform override them if they are disabling.\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Set up default values for the currently supported set of subsystems:\n\n# Emscripten/Javascript does not have assembly support, a dynamic library \n\n# loading architecture, low-level CPU inspection or multithreading.\n",
        "Line" : 246,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "#set_option(SDL_DEPENDENCY_TRACKING \"Use gcc -MMD -MT dependency tracking\" ON)\n",
        "Line" : 274,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# TODO: We should (should we?) respect cmake's ${BUILD_SHARED_LIBS} flag here\n\n# The options below are for compatibility to configure's default behaviour.\n",
        "Line" : 337,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# General source files\n",
        "Line" : 344,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Do nada - use optimization settings to determine the assertion level\n",
        "Line" : 363,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# Compiler option evaluation\n",
        "Line" : 377,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Check for -Wall first, so later things can override pieces of it.\n",
        "Line" : 379,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# TODO: Those all seem to be quite GCC specific - needs to be\n\n# reworked for better compiler support\n",
        "Line" : 458,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# if only HAVE_ALTIVEC_H_HDR is set\n",
        "Line" : 597,
        "CharPositionInLine" : 31
      },
      "31" : {
        "Text" : "# TODO: SDL_cpuinfo.h needs to support the user's configuration wish\n\n# for MSVC - right now it is always activated\n",
        "Line" : 606,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# TODO:\n\n#else()\n\n#  if(USE_GCC OR USE_CLANG)\n\n#    list(APPEND EXTRA_CFLAGS \"-mno-sse\" \"-mno-sse2\" \"-mno-sse3\" \"-mno-mmx\")\n\n#  endif()\n",
        "Line" : 617,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# TODO: Can't deactivate on FreeBSD? w/o LIBC, SDL_stdinc.h can't define\n\n# anything.\n",
        "Line" : 624,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# needed for M_PI\n",
        "Line" : 649,
        "CharPositionInLine" : 41
      },
      "35" : {
        "Text" : "# TODO: refine the mprotect check\n",
        "Line" : 665,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# Enable/disable various subsystems of the SDL library\n",
        "Line" : 721,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Haptic requires some private functions from the joystick subsystem.\n",
        "Line" : 734,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# TODO: in configure.in, the test for LOADSO and SDL_DLOPEN is a bit weird:\n\n# if LOADSO is not wanted, SDL_LOADSO_DISABLED is set\n\n# If however on Unix or APPLE dlopen() is detected via CheckDLOPEN(),\n\n# SDL_LOADSO_DISABLED will not be set, regardless of the LOADSO settings\n",
        "Line" : 744,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# General SDL subsystem options, valid for all platforms\n",
        "Line" : 749,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# CheckDummyAudio/CheckDiskAudio - valid for all platforms\n",
        "Line" : 751,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# Relevant for Unix/Darwin only\n",
        "Line" : 767,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "# SDL_spinlock.c Needs to be compiled in ARM mode.\n\n# There seems to be no better way currently to set the ARM mode.\n\n# see: https://issuetracker.google.com/issues/62264618\n\n# Another option would be to set ARM mode to all compiled files\n",
        "Line" : 787,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "# Core stuff\n",
        "Line" : 847,
        "CharPositionInLine" : 4
      },
      "44" : {
        "Text" : "#enable gles\n",
        "Line" : 854,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "# Platform-specific options and settings\n",
        "Line" : 885,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Hide noisy warnings that intend to aid mostly during initial stages of porting a new\n\n# project. Uncomment at will for verbose cross-compiling -I/../ path info.\n",
        "Line" : 887,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "#enable gles\n",
        "Line" : 930,
        "CharPositionInLine" : 4
      },
      "48" : {
        "Text" : "# Need to check for Raspberry PI first and add platform specific compiler flags, otherwise the test for GLES fails!\n",
        "Line" : 969,
        "CharPositionInLine" : 4
      },
      "49" : {
        "Text" : "# seems to be BSD specific - limit the test to BSD only?\n",
        "Line" : 1055,
        "CharPositionInLine" : 20
      },
      "50" : {
        "Text" : "# Prevent codegen that would use the VC runtime libraries.\n",
        "Line" : 1136,
        "CharPositionInLine" : 4
      },
      "51" : {
        "Text" : "# Check for DirectX\n",
        "Line" : 1143,
        "CharPositionInLine" : 2
      },
      "52" : {
        "Text" : "# xinput.h may need windows.h, but doesn't include it itself.\n",
        "Line" : 1156,
        "CharPositionInLine" : 6
      },
      "53" : {
        "Text" : "# TODO: change $ENV{DXSDL_DIR} to get the path from the include checks\n",
        "Line" : 1187,
        "CharPositionInLine" : 6
      },
      "54" : {
        "Text" : "# requires SDL_LOADSO on Windows (IME, DX, etc.)\n",
        "Line" : 1221,
        "CharPositionInLine" : 4
      },
      "55" : {
        "Text" : "# Libraries for Win32 native and MinGW\n",
        "Line" : 1264,
        "CharPositionInLine" : 2
      },
      "56" : {
        "Text" : "# TODO: in configure.in the check for timers is set on\n\n# cygwin | mingw32* - does this include mingw32CE?\n",
        "Line" : 1267,
        "CharPositionInLine" : 2
      },
      "57" : {
        "Text" : "#set(SDL_VIDEO_OPENGL 1) Does this need to be set with the option rename?\n",
        "Line" : 1288,
        "CharPositionInLine" : 6
      },
      "58" : {
        "Text" : "#list(APPEND EXTRA_LDFLAGS \"-mwindows\")\n",
        "Line" : 1344,
        "CharPositionInLine" : 4
      },
      "59" : {
        "Text" : "#list(APPEND SDL_LIBS \"-lmingw32\" \"-lSDL2main\" \"-mwindows\")\n",
        "Line" : 1346,
        "CharPositionInLine" : 4
      },
      "60" : {
        "Text" : "# TODO: rework this all for proper MacOS X, iOS and Darwin support\n",
        "Line" : 1350,
        "CharPositionInLine" : 2
      },
      "61" : {
        "Text" : "# We always need these libs on macOS at the moment.\n\n# !!! FIXME: we need Carbon for some very old API calls in\n\n# !!! FIXME:  src/video/cocoa/SDL_cocoakeyboard.c, but we should figure out\n\n# !!! FIXME:  how to dump those.\n",
        "Line" : 1352,
        "CharPositionInLine" : 2
      },
      "62" : {
        "Text" : "# Requires the darwin file implementation\n",
        "Line" : 1361,
        "CharPositionInLine" : 2
      },
      "63" : {
        "Text" : "# !!! FIXME: modern CMake doesn't need \"LANGUAGE C\" for Objective-C.\n",
        "Line" : 1365,
        "CharPositionInLine" : 4
      },
      "64" : {
        "Text" : "# !!! FIXME: why is COREVIDEO inside this if() block?\n",
        "Line" : 1368,
        "CharPositionInLine" : 4
      },
      "65" : {
        "Text" : "# !!! FIXME: modern CMake doesn't need \"LANGUAGE C\" for Objective-C.\n",
        "Line" : 1435,
        "CharPositionInLine" : 4
      },
      "66" : {
        "Text" : "# Actually load the frameworks at the end so we don't duplicate include.\n",
        "Line" : 1441,
        "CharPositionInLine" : 2
      },
      "67" : {
        "Text" : "# iOS hack needed - http://code.google.com/p/ios-cmake/ ?\n",
        "Line" : 1471,
        "CharPositionInLine" : 2
      },
      "68" : {
        "Text" : "#set(SDL_VIDEO_OPENGL 1) Does this need to be set with the option rename?\n",
        "Line" : 1480,
        "CharPositionInLine" : 8
      },
      "69" : {
        "Text" : "# TODO: Use FIND_PACKAGE(OpenGL) instead\n\n#set(SDL_VIDEO_OPENGL 1) Does this need to be set with the option rename?\n",
        "Line" : 1509,
        "CharPositionInLine" : 6
      },
      "70" : {
        "Text" : "#set(SDL_VIDEO_VULKAN 1) #Does this need to be set with the option rename?\n",
        "Line" : 1522,
        "CharPositionInLine" : 2
      },
      "71" : {
        "Text" : "# Dummies\n\n# configure.in does it differently:\n\n# if not have X\n\n#   if enable_X {  SDL_X_DISABLED = 1 }\n\n#   [add dummy sources]\n\n# so it always adds a dummy, without checking, if it was actually requested.\n\n# This leads to missing internal references on building, since the\n\n# src/X/*.c does not get included.\n",
        "Line" : 1525,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# results in unresolved symbols on OSX\n",
        "Line" : 1535,
        "CharPositionInLine" : 33
      },
      "73" : {
        "Text" : "# We always need to have threads and timers around\n",
        "Line" : 1557,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# Append the -MMD -MT flags\n\n# if(DEPENDENCY_TRACKING)\n\n#   if(COMPILER_IS_GNUCC)\n\n#     set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -MMD -MT \\$@\")\n\n#   endif()\n\n# endif()\n",
        "Line" : 1573,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# Prepare the flags and remove duplicates\n",
        "Line" : 1583,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# Compat helpers for the configuration files\n",
        "Line" : 1596,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# TODO: we need a Windows script, too\n",
        "Line" : 1598,
        "CharPositionInLine" : 2
      },
      "78" : {
        "Text" : "# Clean up the different lists\n",
        "Line" : 1621,
        "CharPositionInLine" : 2
      },
      "79" : {
        "Text" : "# MESSAGE(STATUS \"SDL_LIBS: ${SDL_LIBS}\")\n\n# MESSAGE(STATUS \"SDL_STATIC_LIBS: ${SDL_STATIC_LIBS}\")\n",
        "Line" : 1630,
        "CharPositionInLine" : 2
      },
      "80" : {
        "Text" : "##### Info output #####\n",
        "Line" : 1643,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# Longest option is SDL_VIDEO_X11_XSCREENSAVER = 26 characters\n\n# Get the padding\n",
        "Line" : 1660,
        "CharPositionInLine" : 2
      },
      "82" : {
        "Text" : "# Ensure that the extra cflags are used at compile time\n",
        "Line" : 1686,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# Always build SDLmain\n",
        "Line" : 1689,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# Don't try to link with the default set of libraries.\n",
        "Line" : 1710,
        "CharPositionInLine" : 4
      },
      "85" : {
        "Text" : "# Note: Apparently, OUTPUT_NAME must really be unique; even when\n\n# CMAKE_IMPORT_LIBRARY_SUFFIX or the like are given. Otherwise\n\n# the static build may race with the import lib and one will get\n\n# clobbered, when the suffix is realized via subsequent rename.\n",
        "Line" : 1725,
        "CharPositionInLine" : 4
      },
      "86" : {
        "Text" : "# TODO: Win32 platforms keep the same suffix .lib for import and static\n\n# libraries - do we need to consider this?\n",
        "Line" : 1736,
        "CharPositionInLine" : 2
      },
      "87" : {
        "Text" : "##### Installation targets #####\n",
        "Line" : 1743,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "##### Export files #####\n",
        "Line" : 1749,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# FreeBSD uses ${PREFIX}/libdata/pkgconfig\n",
        "Line" : 1799,
        "CharPositionInLine" : 4
      },
      "90" : {
        "Text" : "# TODO: what about the .spec file? Is it only needed for RPM creation?\n",
        "Line" : 1806,
        "CharPositionInLine" : 2
      },
      "91" : {
        "Text" : "##### Uninstall target #####\n",
        "Line" : 1810,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 92
    },
    "Mezzanine/libincludes/common/sdlsrc/SDL/SDL2Config.cmake" : {
      "ObjectId" : "4a5f646020ef4c415e082c799932104c37ddaa3a",
      "LastModified" : "2017-10-27T00:14:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Mezzanine/libincludes/common/sdlsrc/SDL/android-project/build.xml" : {
      "ObjectId" : "9f19a077b1b7a029013d33e3c3d602effdf53f14",
      "LastModified" : "2017-10-27T00:14:24Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " This should be changed to the name of your project ",
        "Line" : 2,
        "CharPositionInLine" : 60
      },
      "1" : {
        "Text" : " The local.properties file is created and updated by the 'android' tool.\n         It contains the path to the SDK. It should *NOT* be checked into\n         Version Control Systems. ",
        "Line" : 7,
        "CharPositionInLine" : 38
      },
      "2" : {
        "Text" : " The ant.properties file can be created by you. It is only edited by the\n         'android' tool to add properties to it.\n         This is the place to change some Ant specific build properties.\n         Here are some properties you may want to change/update:\n\n         source.dir\n             The name of the source directory. Default is 'src'.\n         out.dir\n             The name of the output directory. Default is 'bin'.\n\n         For other overridable properties, look at the beginning of the rules\n         files in the SDK, at tools/ant/build.xml\n\n         Properties related to the SDK location or the project target should\n         be updated using the 'android' tool with the 'update' action.\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems.\n\n         ",
        "Line" : 29,
        "CharPositionInLine" : 13
      },
      "3" : {
        "Text" : " if sdk.dir was not set from one of the property file, then\n         get it from the ANDROID_HOME env var.\n         This must be done before we load project.properties since\n         the proguard config can use sdk.dir ",
        "Line" : 35,
        "CharPositionInLine" : 49
      },
      "4" : {
        "Text" : " The project.properties file is created and updated by the 'android'\n         tool, as well as ADT.\n\n         This contains project specific properties such as project target, and library\n         dependencies. Lower level build properties are stored in ant.properties\n         (or in .classpath for Eclipse projects).\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems. ",
        "Line" : 49,
        "CharPositionInLine" : 77
      },
      "5" : {
        "Text" : " quick check on sdk.dir ",
        "Line" : 52,
        "CharPositionInLine" : 36
      },
      "6" : {
        "Text" : "\n        Import per project custom build rules if present at the root of the project.\n        This is the place to put custom intermediary targets such as:\n            -pre-build\n            -pre-compile\n            -post-compile (This is typically used for code obfuscation.\n                           Compiled code location: ${out.classes.absolute.dir}\n                           If this is not done in place, override ${out.dex.input.absolute.dir})\n            -post-package\n            -post-build\n            -pre-clean\n    ",
        "Line" : 69,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : " Import the actual build file.\n\n         To customize existing targets, there are two options:\n         - Customize only one target:\n             - copy/paste the target into this file, *before* the\n               <import> task.\n             - customize it to your needs.\n         - Customize the whole content of build.xml\n             - copy/paste the content of the rules files (minus the top node)\n               into this file, replacing the <import> task.\n             - customize to your needs.\n\n         ***********************\n         ****** IMPORTANT ******\n         ***********************\n         In all cases you must update the value of version-tag below to read 'custom' instead of an integer,\n         in order to avoid having your file be overridden by tools such as \"android update project\"\n    ",
        "Line" : 89,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : " version-tag: 1 ",
        "Line" : 90,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 9
    },
    "Mezzanine/libincludes/common/sdlsrc/SDL/cmake/macros.cmake" : {
      "ObjectId" : "96a7ce8b1406692acaf32a25d9c864da3f94cb45",
      "LastModified" : "2017-10-27T00:14:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Message Output\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# prefix for each element\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Do not use string(REPLACE \";\" \" \") here to avoid messing up list\n\n# entries\n",
        "Line" : 60,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "Mezzanine/libincludes/common/sdlsrc/SDL/cmake/sdlchecks.cmake" : {
      "ObjectId" : "f30c6646c68878e9f94d3b59317727eac95884db",
      "LastModified" : "2017-10-27T00:14:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# reduce the library name for shared linking\n",
        "Line" : 7,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# resolves symlinks\n",
        "Line" : 9,
        "CharPositionInLine" : 69
      },
      "2" : {
        "Text" : "# Requires:\n\n# - n/a\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Requires:\n\n# - n/a\n\n# Optional:\n\n# - ALSA_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Requires:\n\n# - PkgCheckModules\n\n# Optional:\n\n# - PULSEAUDIO_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Requires:\n\n# - PkgCheckModules\n\n# Optional:\n\n# - JACK_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Requires:\n\n# - PkgCheckModules\n\n# Optional:\n\n# - ESD_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Requires:\n\n# - n/a\n\n# Optional:\n\n# - ARTS_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# TODO\n",
        "Line" : 243,
        "CharPositionInLine" : 10
      },
      "9" : {
        "Text" : "# Requires:\n\n# - n/a\n\n# Optional:\n\n# - NAS_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# TODO: set include paths properly, so the NAS headers are found\n",
        "Line" : 263,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Requires:\n\n# - n/a\n\n# Optional:\n\n# - SNDIO_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 287,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# TODO: set include paths properly, so the sndio headers are found\n",
        "Line" : 294,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Requires:\n\n# - PkgCheckModules\n\n# Optional:\n\n# - FUSIONSOUND_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 318,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Requires:\n\n# - LIBSAMPLERATE\n\n# Optional:\n\n# - LIBSAMPLERATE_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 348,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Requires:\n\n# - n/a\n\n# Optional:\n\n# - X11_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 371,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Check for multitouch\n",
        "Line" : 498,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# Requires:\n\n# - EGL\n\n# - PkgCheckModules\n\n# Optional:\n\n# - MIR_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 555,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Requires:\n\n# - EGL\n\n# - PkgCheckModules\n\n# Optional:\n\n# - WAYLAND_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 616,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# We have to generate some protocol interface code for some various Wayland features.\n",
        "Line" : 626,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# We have to generate some protocol interface code for some unstable Wayland features.\n",
        "Line" : 682,
        "CharPositionInLine" : 6
      },
      "21" : {
        "Text" : "# Requires:\n\n# - n/a\n\n#\n",
        "Line" : 720,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Apple always has Cocoa.\n",
        "Line" : 725,
        "CharPositionInLine" : 14
      },
      "23" : {
        "Text" : "# Requires:\n\n# - PkgCheckModules\n\n# Optional:\n\n# - DIRECTFB_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 738,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Requires:\n\n# - n/a\n",
        "Line" : 769,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Requires:\n\n# - nada\n",
        "Line" : 799,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Requires:\n\n# - nada\n",
        "Line" : 817,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Requires:\n\n# - nada\n\n# Optional:\n\n# - THREADS opt\n\n# Sets:\n\n# PTHREAD_CFLAGS\n\n# PTHREAD_LIBS\n",
        "Line" : 850,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# the android libc provides built-in support for pthreads, so no\n\n# additional linking or compile flags are necessary\n",
        "Line" : 860,
        "CharPositionInLine" : 6
      },
      "29" : {
        "Text" : "# causes Carbon.p complaints?\n\n# set(PTHREAD_CFLAGS \"-D_REENTRANT -D_THREAD_SAFE\")\n",
        "Line" : 870,
        "CharPositionInLine" : 6
      },
      "30" : {
        "Text" : "# Run some tests\n",
        "Line" : 902,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# Can be faked, if necessary\n\n# Can be faked, if necessary\n",
        "Line" : 969,
        "CharPositionInLine" : 65
      },
      "32" : {
        "Text" : "# Requires\n\n# - nada\n\n# Optional:\n\n# Sets:\n\n# USB_LIBS\n\n# USB_CFLAGS\n",
        "Line" : 986,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Requires:\n\n# - n/a\n",
        "Line" : 1126,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Requires:\n\n# - EGL\n\n# - PkgCheckModules\n\n# Optional:\n\n# - KMSDRM_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 1156,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 35
    },
    "Mezzanine/libincludes/common/sdlsrc/SDL/include/SDL_config.h.cmake" : {
      "ObjectId" : "9befa422f10118315a276c83bb6990b5f2d1e638",
      "LastModified" : "2017-10-27T00:14:24Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/*\n  Simple DirectMedia Layer\n  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>\n\n  This software is provided 'as-is', without any express or implied\n  warranty.  In no event will the authors be held liable for any damages\n  arising from the use of this software.\n\n  Permission is granted to anyone to use this software for any purpose,\n  including commercial applications, and to alter it and redistribute it\n  freely, subject to the following restrictions:\n\n  1. The origin of this software must not be misrepresented; you must not\n     claim that you wrote the original software. If you use this software\n     in a product, an acknowledgment in the product documentation would be\n     appreciated but is not required.\n  2. Altered source versions must be plainly marked as such, and must not be\n     misrepresented as being the original software.\n  3. This notice may not be removed or altered from any source distribution.\n*/",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/**\n *  \\file SDL_config.h.in\n *\n *  This is a set of defines to configure the SDL features\n */",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/* General platform specific identifiers */",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* C language features */",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/* C datatypes */\n/* Define SIZEOF_VOIDP for 64/32 architectures */",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/* Comment this if you want to build without any C library requirements */",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/* Useful headers */",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "/* C library functions */",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "/* We may need some replacement for stdarg.h here */",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "/* SDL internal assertion support */",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "/* Allow disabling of core subsystems */",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "/* Enable various audio drivers */",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "/* Enable various input drivers */",
        "Line" : 251,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "/* Enable various shared object loading systems */",
        "Line" : 274,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "/* Enable various threading systems */",
        "Line" : 280,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "/* Enable various timer systems */",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "/* Enable various video drivers */",
        "Line" : 293,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "/* Enable OpenGL support */",
        "Line" : 349,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "/* Enable Vulkan support */",
        "Line" : 361,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "/* Enable system power support */",
        "Line" : 364,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "/* Enable system filesystem support */",
        "Line" : 373,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "/* Enable assembly routines */",
        "Line" : 382,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "/* Enable dynamic libsamplerate support */",
        "Line" : 386,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "/* Platform specific definitions */",
        "Line" : 389,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "/* Older Visual C++ headers don't have the Win64-compatible typedefs... */",
        "Line" : 424,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "Mezzanine/libincludes/common/sdlsrc/SDL/test/nacl/Makefile" : {
      "ObjectId" : "9ca166c12742e3c6ae23d6c7ac84a421244e9c1d",
      "LastModified" : "2017-10-27T00:14:24Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (c) 2013 The Chromium Authors. All rights reserved.\n\n# Use of this source code is governed by a BSD-style license that can be\n\n# found in the LICENSE file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# GNU Makefile based on shared rules provided by the Native Client SDK.\n\n# See README.Makefiles for more details.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# NACL_SDK_ROOT ?= $(abspath $(CURDIR)/../../..)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ppapi_simple and SDL2 end up being listed twice due to dependency solving issues -- Gabriel\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Build rules generated by macros from common.mk:\n\n# Overriden macro from NACL SDK to be able to customize the library search path -- Gabriel\n\n# Specific Link Macro \n\n#\n\n# $1 = Target Name\n\n# $2 = List of inputs\n\n# $3 = List of libs\n\n# $4 = List of deps\n\n# $5 = List of lib dirs\n\n# $6 = Other Linker Args\n\n#\n\n# For debugging, we translate the pre-finalized .bc file.\n\n#\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Tools/Armadillo/CMakeLists.txt" : {
      "ObjectId" : "dc1359285a6e58f61a54a1279e69f5b5fd8e6fe1",
      "LastModified" : "2017-10-27T00:14:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Â© Copyright 2010 - 2016 BlackTopp Studios Inc.\n\n# This file is part of The Mezzanine Engine.\n\n#\n\n#    The Mezzanine Engine is free software: you can redistribute it and/or modify\n\n#    it under the terms of the GNU General Public License as published by\n\n#    the Free Software Foundation, either version 3 of the License, or\n\n#    (at your option) any later version.\n\n#\n\n#    The Mezzanine Engine is distributed in the hope that it will be useful,\n\n#    but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n#    GNU General Public License for more details.\n\n#\n\n#    You should have received a copy of the GNU General Public License\n\n#    along with The Mezzanine Engine.  If not, see <http://www.gnu.org/licenses/>.\n\n#\n\n#   The original authors have included a copy of the license specified above in the\n\n#   'Docs' folder. See 'gpl.txt'\n\n#\n\n#   We welcome the use of the Mezzanine engine to anyone, including companies who wish to\n\n#   Build professional software and charge for their product.\n\n#\n\n#   However there are some practical restrictions, so if your project involves\n\n#   any of the following you should contact us and we will try to work something\n\n#   out:\n\n#    - DRM or Copy Protection of any kind(except Copyrights)\n\n#    - Software Patents You Do Not Wish to Freely License\n\n#    - Any Kind of Linking to Non-GPL licensed Works\n\n#    - Are Currently In Violation of Another Copyright Holder's GPL License\n\n#    - If You want to change our code and not add a few hundred MB of stuff to\n\n#        your distribution\n\n#\n\n#   These and other limitations could cause serious legal problems if you ignore\n\n#   them, so it is best to simply contact us or the Free Software Foundation, if\n\n#   you have any questions.\n\n#\n\n#   Joseph Toppi - toppij@gmail.com\n\n#   John Blackwood - makoenergy02@gmail.com\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# EntreLua initializations\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#add_definitions( ${CommonBuildFlags} )\n\n#target_compile_options( ${PROJECT_NAME} PRIVATE ${CommonBuildFlags} )\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##############################################################################\n\n#A complete list of our source files and headers\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##############################################################################\n\n# Functions to use to copy files at build time\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#Description: This function copies items from the Data/lib directory into it's expected location in the output directory During build time. It does not need leading slashes\n\n#PreCondition: This function can only be called after \"add_library(${PROJECT_NAME} ...)\" is called, otherwise it will fail silently\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#Description: This function copies items from the output directory in Mezzanine into the location of the EntreLua executable.\n\n#PreCondition: This function can only be called after \"add_library(${PROJECT_NAME} ...)\" is called, otherwise it will fail silently\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#Description: This function copies license files in Mezzanine into the EntreLua License folder.\n\n#PreCondition: This function can only be called after \"add_library(${PROJECT_NAME} ...)\" is called, otherwise it will fail silently\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\n\n# Define Extra Dependencies only the EntreLua Shell Requires\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "##############################################################################\n\n# Define the executable and say it requires Mezzanine\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "##############################################################################\n\n# File copies during all builds\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#CopyFilesDuringBuild( common/r2skin.jpg data/common/r2skin.jpg )\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\n\n# Copy System Dependant files during build time\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Windows File Copy Specific Items\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -mwindows\" )\n",
        "Line" : 162,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Linux File Copy Specific Items\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Mac File Copy Specific Items\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "Tools/Armadillo/libs/CMakeLists.txt" : {
      "ObjectId" : "381e584556c96f8d57955de722b13de9c415d306",
      "LastModified" : "2017-10-27T00:14:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Â© Copyright 2010 - 2016 BlackTopp Studios Inc.\n\n# This file is part of The Mezzanine Engine.\n\n#\n\n#    The Mezzanine Engine is free software: you can redistribute it and/or modify\n\n#    it under the terms of the GNU General Public License as published by\n\n#    the Free Software Foundation, either version 3 of the License, or\n\n#    (at your option) any later version.\n\n#\n\n#    The Mezzanine Engine is distributed in the hope that it will be useful,\n\n#    but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n#    GNU General Public License for more details.\n\n#\n\n#    You should have received a copy of the GNU General Public License\n\n#    along with The Mezzanine Engine.  If not, see <http://www.gnu.org/licenses/>.\n\n#\n\n#   The original authors have included a copy of the license specified above in the\n\n#   'Docs' folder. See 'gpl.txt'\n\n#\n\n#   We welcome the use of the Mezzanine engine to anyone, including companies who wish to\n\n#   Build professional software and charge for their product.\n\n#\n\n#   However there are some practical restrictions, so if your project involves\n\n#   any of the following you should contact us and we will try to work something\n\n#   out:\n\n#    - DRM or Copy Protection of any kind(except Copyrights)\n\n#    - Software Patents You Do Not Wish to Freely License\n\n#    - Any Kind of Linking to Non-GPL licensed Works\n\n#    - Are Currently In Violation of Another Copyright Holder's GPL License\n\n#    - If You want to change our code and not add a few hundred MB of stuff to\n\n#        your distribution\n\n#\n\n#   These and other limitations could cause serious legal problems if you ignore\n\n#   them, so it is best to simply contact us or the Free Software Foundation, if\n\n#   you have any questions.\n\n#\n\n#   Joseph Toppi - toppij@gmail.com\n\n#   John Blackwood - makoenergy02@gmail.com\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Check for new builds at: http://tclap.sourceforge.net/\n\n## This version of Tclap is slightly modified to accept -v in addition to --version\n\n#include(ExternalProject)\n\n#ExternalProject_Add(${TclapProject}\n\n#  PREFIX ${TclapDir}\n\n#  SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/${TclapDir}\n\n#  CONFIGURE_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/${TclapDir}/configure --prefix=<INSTALL_DIR>\n\n#  BUILD_COMMAND ${MAKE})\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#set(TclapIncludeDirectory\n\n#    #\"${CMAKE_CURRENT_SOURCE_DIR}/${TclapDir}/include\"\n\n#    \"${EntreLua_BINARY_DIR}../libs/${TclapDir}/include\"\n\n#    PARENT_SCOPE)\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Tools/Armadillo/libs/tclap-1.2.1/Makefile.am" : {
      "ObjectId" : "0a6ebc978b828d2e87e3607270d8614bb423e043",
      "LastModified" : "2017-10-27T00:14:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Tools/Armadillo/libs/tclap-1.2.1/config/Makefile.am" : {
      "ObjectId" : "0fbccaec91aa8d3277c3d4969a117667a6811294",
      "LastModified" : "2017-10-27T00:14:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Tools/Armadillo/libs/tclap-1.2.1/docs/Makefile.am" : {
      "ObjectId" : "8315b3621ec1665015c73db92b2a2a39d4b352e5",
      "LastModified" : "2017-10-27T00:14:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Tools/Armadillo/libs/tclap-1.2.1/examples/Makefile.am" : {
      "ObjectId" : "1dd898c884ac9ddb6acb4b6efbe5761760e07b70",
      "LastModified" : "2017-10-27T00:14:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Tools/Armadillo/libs/tclap-1.2.1/include/Makefile.am" : {
      "ObjectId" : "766f299913969b4a2b6d50828d284966907222ca",
      "LastModified" : "2017-10-27T00:14:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Tools/Armadillo/libs/tclap-1.2.1/include/tclap/Makefile.am" : {
      "ObjectId" : "0e247bf5bf317de4a0e1a40270598092c56d95fc",
      "LastModified" : "2017-10-27T00:14:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Tools/Armadillo/libs/tclap-1.2.1/msc/Makefile.am" : {
      "ObjectId" : "bc6e8d9ee9792039520548da8cdff9cf11afbe00",
      "LastModified" : "2017-10-27T00:14:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Tools/Armadillo/libs/tclap-1.2.1/msc/examples/Makefile.am" : {
      "ObjectId" : "0c178ce1aff91eda09721f3bd35c3fa772456c35",
      "LastModified" : "2017-10-27T00:14:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Tools/Armadillo/libs/tclap-1.2.1/tests/Makefile.am" : {
      "ObjectId" : "4c0f40975827119c9167cc19527d41d047c98931",
      "LastModified" : "2017-10-27T00:14:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Tools/EntreLua/CMakeLists.txt" : {
      "ObjectId" : "a775dea4107d291a7b4b2a396d18f84d071d09fd",
      "LastModified" : "2017-10-27T00:14:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Â© Copyright 2010 - 2016 BlackTopp Studios Inc.\n\n# This file is part of The Mezzanine Engine.\n\n#\n\n#    The Mezzanine Engine is free software: you can redistribute it and/or modify\n\n#    it under the terms of the GNU General Public License as published by\n\n#    the Free Software Foundation, either version 3 of the License, or\n\n#    (at your option) any later version.\n\n#\n\n#    The Mezzanine Engine is distributed in the hope that it will be useful,\n\n#    but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n#    GNU General Public License for more details.\n\n#\n\n#    You should have received a copy of the GNU General Public License\n\n#    along with The Mezzanine Engine.  If not, see <http://www.gnu.org/licenses/>.\n\n#\n\n#   The original authors have included a copy of the license specified above in the\n\n#   'Docs' folder. See 'gpl.txt'\n\n#\n\n#   We welcome the use of the Mezzanine engine to anyone, including companies who wish to\n\n#   Build professional software and charge for their product.\n\n#\n\n#   However there are some practical restrictions, so if your project involves\n\n#   any of the following you should contact us and we will try to work something\n\n#   out:\n\n#    - DRM or Copy Protection of any kind(except Copyrights)\n\n#    - Software Patents You Do Not Wish to Freely License\n\n#    - Any Kind of Linking to Non-GPL licensed Works\n\n#    - Are Currently In Violation of Another Copyright Holder's GPL License\n\n#    - If You want to change our code and not add a few hundred MB of stuff to\n\n#        your distribution\n\n#\n\n#   These and other limitations could cause serious legal problems if you ignore\n\n#   them, so it is best to simply contact us or the Free Software Foundation, if\n\n#   you have any questions.\n\n#\n\n#   Joseph Toppi - toppij@gmail.com\n\n#   John Blackwood - makoenergy02@gmail.com\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# EntreLua initializations\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#add_definitions( ${CommonBuildFlags} )\n\n#target_compile_options( ${PROJECT_NAME} PRIVATE ${CommonBuildFlags} )\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##############################################################################\n\n#A complete list of our source files and headers\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##############################################################################\n\n# Functions to use to copy files at build time\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#Description: This function copies items from the Data/lib directory into it's expected location in the output directory During build time. It does not need leading slashes\n\n#PreCondition: This function can only be called after \"add_library(${PROJECT_NAME} ...)\" is called, otherwise it will fail silently\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#Description: This function copies items from the output directory in Mezzanine into the location of the EntreLua executable.\n\n#PreCondition: This function can only be called after \"add_library(${PROJECT_NAME} ...)\" is called, otherwise it will fail silently\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#Description: This function copies license files in Mezzanine into the EntreLua License folder.\n\n#PreCondition: This function can only be called after \"add_library(${PROJECT_NAME} ...)\" is called, otherwise it will fail silently\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\n\n# Define Extra Dependencies only the EntreLua Shell Requires\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "##############################################################################\n\n# Define the executable and say it requires Mezzanine\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "##############################################################################\n\n# File copies during all builds\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#CopyFilesDuringBuild( common/r2skin.jpg data/common/r2skin.jpg )\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\n\n# Copy System Dependant files during build time\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Windows File Copy Specific Items\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -mwindows\" )\n",
        "Line" : 176,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Linux File Copy Specific Items\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Mac File Copy Specific Items\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "Tools/EntreLua/libs/CMakeLists.txt" : {
      "ObjectId" : "bb90616bee9f40c551214490a0c449e0031b0783",
      "LastModified" : "2017-10-27T00:14:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Â© Copyright 2010 - 2016 BlackTopp Studios Inc.\n\n# This file is part of The Mezzanine Engine.\n\n#\n\n#    The Mezzanine Engine is free software: you can redistribute it and/or modify\n\n#    it under the terms of the GNU General Public License as published by\n\n#    the Free Software Foundation, either version 3 of the License, or\n\n#    (at your option) any later version.\n\n#\n\n#    The Mezzanine Engine is distributed in the hope that it will be useful,\n\n#    but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n#    GNU General Public License for more details.\n\n#\n\n#    You should have received a copy of the GNU General Public License\n\n#    along with The Mezzanine Engine.  If not, see <http://www.gnu.org/licenses/>.\n\n#\n\n#   The original authors have included a copy of the license specified above in the\n\n#   'Docs' folder. See 'gpl.txt'\n\n#\n\n#   We welcome the use of the Mezzanine engine to anyone, including companies who wish to\n\n#   Build professional software and charge for their product.\n\n#\n\n#   However there are some practical restrictions, so if your project involves\n\n#   any of the following you should contact us and we will try to work something\n\n#   out:\n\n#    - DRM or Copy Protection of any kind(except Copyrights)\n\n#    - Software Patents You Do Not Wish to Freely License\n\n#    - Any Kind of Linking to Non-GPL licensed Works\n\n#    - Are Currently In Violation of Another Copyright Holder's GPL License\n\n#    - If You want to change our code and not add a few hundred MB of stuff to\n\n#        your distribution\n\n#\n\n#   These and other limitations could cause serious legal problems if you ignore\n\n#   them, so it is best to simply contact us or the Free Software Foundation, if\n\n#   you have any questions.\n\n#\n\n#   Joseph Toppi - toppij@gmail.com\n\n#   John Blackwood - makoenergy02@gmail.com\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Check for new builds at: http://tclap.sourceforge.net/\n\n## This version of Tclap is slightly modified to accept -v in addition to --version\n\n#include(ExternalProject)\n\n#ExternalProject_Add(${TclapProject}\n\n#  PREFIX ${TclapDir}\n\n#  SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/${TclapDir}\n\n#  CONFIGURE_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/${TclapDir}/configure --prefix=<INSTALL_DIR>\n\n#  BUILD_COMMAND ${MAKE})\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#set(TclapIncludeDirectory\n\n#    #\"${CMAKE_CURRENT_SOURCE_DIR}/${TclapDir}/include\"\n\n#    \"${EntreLua_BINARY_DIR}../libs/${TclapDir}/include\"\n\n#    PARENT_SCOPE)\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Tools/EntreLua/libs/tclap-1.2.1/Makefile.am" : {
      "ObjectId" : "0a6ebc978b828d2e87e3607270d8614bb423e043",
      "LastModified" : "2017-10-27T00:14:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Tools/EntreLua/libs/tclap-1.2.1/config/Makefile.am" : {
      "ObjectId" : "0fbccaec91aa8d3277c3d4969a117667a6811294",
      "LastModified" : "2017-10-27T00:14:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Tools/EntreLua/libs/tclap-1.2.1/docs/Makefile.am" : {
      "ObjectId" : "8315b3621ec1665015c73db92b2a2a39d4b352e5",
      "LastModified" : "2017-10-27T00:14:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Tools/EntreLua/libs/tclap-1.2.1/examples/Makefile.am" : {
      "ObjectId" : "1dd898c884ac9ddb6acb4b6efbe5761760e07b70",
      "LastModified" : "2017-10-27T00:14:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Tools/EntreLua/libs/tclap-1.2.1/include/Makefile.am" : {
      "ObjectId" : "766f299913969b4a2b6d50828d284966907222ca",
      "LastModified" : "2017-10-27T00:14:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Tools/EntreLua/libs/tclap-1.2.1/include/tclap/Makefile.am" : {
      "ObjectId" : "0e247bf5bf317de4a0e1a40270598092c56d95fc",
      "LastModified" : "2017-10-27T00:14:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Tools/EntreLua/libs/tclap-1.2.1/msc/Makefile.am" : {
      "ObjectId" : "bc6e8d9ee9792039520548da8cdff9cf11afbe00",
      "LastModified" : "2017-10-27T00:14:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Tools/EntreLua/libs/tclap-1.2.1/msc/examples/Makefile.am" : {
      "ObjectId" : "0c178ce1aff91eda09721f3bd35c3fa772456c35",
      "LastModified" : "2017-10-27T00:14:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Tools/EntreLua/libs/tclap-1.2.1/tests/Makefile.am" : {
      "ObjectId" : "4c0f40975827119c9167cc19527d41d047c98931",
      "LastModified" : "2017-10-27T00:14:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "UnitTests/CMakeLists.txt" : {
      "ObjectId" : "d9cb6b246063e794954b81f5872cb1d22ec0b920",
      "LastModified" : "2018-09-29T22:01:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Â© Copyright 2010 - 2011 BlackTopp Studios Inc.\n\n# This file is part of The Mezzanine Engine.\n\n#\n\n#    The Mezzanine Engine is free software: you can redistribute it and/or modify\n\n#    it under the terms of the GNU General Public License as published by\n\n#    the Free Software Foundation, either version 3 of the License, or\n\n#    (at your option) any later version.\n\n#\n\n#    The Mezzanine Engine is distributed in the hope that it will be useful,\n\n#    but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n#    GNU General Public License for more details.\n\n#\n\n#    You should have received a copy of the GNU General Public License\n\n#    along with The Mezzanine Engine.  If not, see <http://www.gnu.org/licenses/>.\n\n#\n\n#   The original authors have included a copy of the license specified above in the\n\n#   'Docs' folder. See 'gpl.txt'\n\n#\n\n#   We welcome the use of the Mezzanine engine to anyone, including companies who wish to\n\n#   Build professional software and charge for their product.\n\n#\n\n#   However there are some practical restrictions, so if your project involves\n\n#   any of the following you should contact us and we will try to work something\n\n#   out:\n\n#    - DRM or Copy Protection of any kind(except Copyrights)\n\n#    - Software Patents You Do Not Wish to Freely License\n\n#    - Any Kind of Linking to Non-GPL licensed Works\n\n#    - Are Currently In Violation of Another Copyright Holder's GPL License\n\n#    - If You want to change our code and not add a few hundred MB of stuff to\n\n#        your distribution\n\n#\n\n#   These and other limitations could cause serious legal problems if you ignore\n\n#   them, so it is best to simply contact us or the Free Software Foundation, if\n\n#   you have any questions.\n\n#\n\n#   Joseph Toppi - toppij@gmail.com\n\n#   John Blackwood - makoenergy02@gmail.com\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################################################\n\n#Variables\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#add_definitions( ${CommonBuildFlags} )\n\n#target_compile_options( ${PROJECT_NAME} PRIVATE ${CommonBuildFlags} )\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###############################################################################\n\n# Sources\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#message (${TargetLength})\n\n#message (${DirtyName})\n\n#message(\"${TargetName}\")\n",
        "Line" : 88,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#exist to maintain compatibilty with DAG frameScheduler Unit tests\n",
        "Line" : 135,
        "CharPositionInLine" : 53
      },
      "6" : {
        "Text" : "###############################################################################\n\n# Functions to use to copy files at build time\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#Description: This function copies items from the Data/lib directory into it's expected location in the output directory During build time. It does not need leading slashes\n\n#PreCondition: This function can only be called after \"add_library(${PROJECT_NAME} ...)\" is called, otherwise it will fail silently\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#Description: This function copies items from the output directory in Mezzanine into the location of the Catch executable.\n\n#PreCondition: This function can only be called after \"add_library(${PROJECT_NAME} ...)\" is called, otherwise it will fail silently\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#Description: This function copies items from the Data/lib directory in Mezzanine into it's renamed location in the output directory for Unittests during build time. It does not need leading slashes\n\n#PreCondition: This function can only be called after \"add_library(${PROJECT_NAME} ...)\" is called, otherwise it will fail silently\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#Description: This function copies items from the Data/lib directory in Mezzanine into it's renamed location in the output directory for Unittests during build time. It does not need leading slashes\n\n#PreCondition: This function can only be called after \"add_library(${PROJECT_NAME} ...)\" is called, otherwise it will fail silently\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\n\n# Accessing correct headers\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\n\n#Executable definitions\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#only for windows which doesn't compile OGRE\n",
        "Line" : 235,
        "CharPositionInLine" : 59
      },
      "14" : {
        "Text" : "# Link to all of the Mezzanine Dependencies\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#target_link_libraries( ${PROJECT_NAME} ${MezzanineLinkName} ${OgreLinkName})\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "##############################################################################\n\n# File copies during all builds\n",
        "Line" : 260,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#The Engine itself\n",
        "Line" : 368,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "##############################################################################\n\n#Copy System Dependant files during build time\n",
        "Line" : 371,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Windows File Copy Specific Items\n",
        "Line" : 374,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Linux File Copy Specific Items\n",
        "Line" : 380,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Mac File Copy pecific Items\n",
        "Line" : 391,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 22
    }
  },
  "FileTypes" : {
    "CMAKE" : 222,
    "CMAKESOURCE" : 1,
    "QMAKE" : 1,
    "MAKEFILE" : 6,
    "AUTOMAKE" : 39,
    "ANT" : 1
  },
  "ElapsedTime" : 13766
}