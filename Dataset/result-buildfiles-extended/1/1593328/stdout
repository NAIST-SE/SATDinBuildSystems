{
  "Repository" : "1593328",
  "Revision" : "HEAD",
  "ObjectId" : "74e643bd0352b0eca96e95536066929614516a4d",
  "CommitTime" : "2019-04-13T08:00:16Z",
  "Files" : {
    "build.xml" : {
      "ObjectId" : "e2fd489df2adbbee4f574d0b5f2307045267c9dc",
      "LastModified" : "2019-02-08T22:48:09Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " $Id$ ",
        "Line" : 3,
        "CharPositionInLine" : 14
      },
      "1" : {
        "Text" : " Directory definitions ",
        "Line" : 6,
        "CharPositionInLine" : 35
      },
      "2" : {
        "Text" : "\n      Controls Swing UI scaling. If you're using a HiDPI display,\n      try setting this value to 2. Note: this only applies to the\n      \"jar.runlarge9\" and \"debug.runlarge9\" targets (they use Java 9).\n    ",
        "Line" : 32,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "\n      This section attempts to set the path to the local ADDE servers in\n      a platform independent way. In order to take advantage of this, you\n      MUST install McIDAS-V into the directory suggested by the installer.\n\n      The installer will suggest the following (depending on platform):\n\n        Windows: C:\\Program Files\\McIDAS-V-System\n        Linux  : /home/YOUR_USER/McIDAS-V-System\n        OS X   : /Applications/McIDAS-V-System\n\n      If you need to use a specific path, you must run Ant like so:\n        ant -Daddeservers.dir=\"<McIDAS-V INSTALL PATH>/adde\" <TARGET>\n\n      Some examples:\n        ant -Daddeservers.dir=\"/Applications/mcidasv/nightly/adde\" jar.runlarge\n        ant -Daddeservers.dir=\"C:\\\\mcidasv\\\\nightly\\\\adde\" jar.runlarge\n    ",
        "Line" : 52,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : " end of local server path stuff ",
        "Line" : 67,
        "CharPositionInLine" : 44
      },
      "5" : {
        "Text" : "\n      This section attempts to set the McIDAS-V userpath (where RESOLV.SRV is)\n      in a platform independent way. In order to take advantage of this, you\n      simply need to have run McIDAS-V.\n\n      The installer will suggest the following (depending on platform):\n\n        Windows: C:\\Users\\YOUR_USER\\McIDAS-V\n        Linux  : /home/YOUR_USER/McIDAS-V\n        OS X   : /Users/YOUR_USER/Documents/McIDAS-V\n\n      If you need to use a specific path, you must run Ant like so:\n        ant -Duserpath.dir=\"<USER PATH>\" <TARGET>\n\n      Some examples:\n        ant -Duserpath.dir=\"/tmp/mcidasv\" jar.runlarge\n        ant -Duserpath.dir=\"C:\\\\temp\\\\mcidasv\" jar.runlarge\n      ",
        "Line" : 86,
        "CharPositionInLine" : 10
      },
      "6" : {
        "Text" : " end of userpath stuff ",
        "Line" : 101,
        "CharPositionInLine" : 35
      },
      "7" : {
        "Text" : " Attempt to load the version property file ",
        "Line" : 104,
        "CharPositionInLine" : 55
      },
      "8" : {
        "Text" : " Binary file definitions ",
        "Line" : 111,
        "CharPositionInLine" : 37
      },
      "9" : {
        "Text" : " Required library jar file names ",
        "Line" : 116,
        "CharPositionInLine" : 45
      },
      "10" : {
        "Text" : " Property file names ",
        "Line" : 120,
        "CharPositionInLine" : 33
      },
      "11" : {
        "Text" : " Jar file names ",
        "Line" : 124,
        "CharPositionInLine" : 28
      },
      "12" : {
        "Text" : " Jar signing ",
        "Line" : 131,
        "CharPositionInLine" : 25
      },
      "13" : {
        "Text" : " Main class for jar and run targets ",
        "Line" : 135,
        "CharPositionInLine" : 48
      },
      "14" : {
        "Text" : " Main class for startup manager ",
        "Line" : 138,
        "CharPositionInLine" : 44
      },
      "15" : {
        "Text" : " Properties for the Jython console ",
        "Line" : 143,
        "CharPositionInLine" : 47
      },
      "16" : {
        "Text" : " Run target options ",
        "Line" : 149,
        "CharPositionInLine" : 32
      },
      "17" : {
        "Text" : " run.log.levels may be one of: TRACE, DEBUG, INFO, WARN, ERROR or OFF ",
        "Line" : 150,
        "CharPositionInLine" : 82
      },
      "18" : {
        "Text" : " VisAD Properties ",
        "Line" : 157,
        "CharPositionInLine" : 30
      },
      "19" : {
        "Text" : " visad.texturemax is a workaround for the bizarro problem detailed at\n         dcdbs.ssec.wisc.edu/mcidasv/forums/viewtopic.php?f=24&t=1378 ",
        "Line" : 159,
        "CharPositionInLine" : 74
      },
      "20" : {
        "Text" : " Compiler options ",
        "Line" : 162,
        "CharPositionInLine" : 30
      },
      "21" : {
        "Text" : " Which warnings to show, use javac -X for help ",
        "Line" : 168,
        "CharPositionInLine" : 59
      },
      "22" : {
        "Text" : " Javadoc options ",
        "Line" : 171,
        "CharPositionInLine" : 29
      },
      "23" : {
        "Text" : " Maximum number of errors javadoc should report.\n         \n         This value can be overridden by launching Ant like so:\n         $ ant -Djavadoc.errors.maxnum=31337 javadoc\n         \n         Higher values means javadoc will take longer to finish. ",
        "Line" : 179,
        "CharPositionInLine" : 69
      },
      "24" : {
        "Text" : " Maximum number of errors javadoc should report.\n         \n         This value can be overridden by launching Ant like so:\n         $ ant -Djavadoc.warnings.maxnum=31337 javadoc\n         \n         Higher values means javadoc will take longer to finish. ",
        "Line" : 187,
        "CharPositionInLine" : 69
      },
      "25" : {
        "Text" : " Use these properties to make changing the versions of related JARs\n        (see SLF4J or Logback) a bit less tedious. ",
        "Line" : 191,
        "CharPositionInLine" : 55
      },
      "26" : {
        "Text" : " note that the J3D JARs available from http://jogamp.org/deployment/java3d/\n         do not (as of 20140915) have the version string in the filenames.\n         this must be done manually for now. ",
        "Line" : 211,
        "CharPositionInLine" : 49
      },
      "27" : {
        "Text" : " The CLASSPATH specified within McV's manifest \n         Note: if you're going to modify this property, be sure to make similar\n         modifications to the \"mcv.libs\" fileset. ",
        "Line" : 216,
        "CharPositionInLine" : 54
      },
      "28" : {
        "Text" : " List of McIDAS-V JAR files. \n         Note: if you're going to modify this fileset, be sure to make similar\n         modifications to the \"jar.base.classpath\" property. ",
        "Line" : 221,
        "CharPositionInLine" : 65
      },
      "29" : {
        "Text" : " <include name=\"jansi-1.14.jar\" /> ",
        "Line" : 223,
        "CharPositionInLine" : 51
      },
      "30" : {
        "Text" : " need to extract ncIdv.jar so that it comes first on the classpath.\n         it turns out that both ncIdv.jar and external.jar ship different\n         versions of org.apache.http.impl.client.AbstractHttpClient! ",
        "Line" : 249,
        "CharPositionInLine" : 73
      },
      "31" : {
        "Text" : " List of IDV jars ",
        "Line" : 254,
        "CharPositionInLine" : 30
      },
      "32" : {
        "Text" : " Shared classpath ",
        "Line" : 263,
        "CharPositionInLine" : 30
      },
      "33" : {
        "Text" : " Files to include in application jar ",
        "Line" : 281,
        "CharPositionInLine" : 49
      },
      "34" : {
        "Text" : " Files to include in local-idv jar ",
        "Line" : 291,
        "CharPositionInLine" : 47
      },
      "35" : {
        "Text" : " Files to include in the startup manager jar ",
        "Line" : 303,
        "CharPositionInLine" : 57
      },
      "36" : {
        "Text" : " Files that needed by the Jython console JAR. ",
        "Line" : 312,
        "CharPositionInLine" : 58
      },
      "37" : {
        "Text" : " Controls the status of Java's assertion feature. ",
        "Line" : 364,
        "CharPositionInLine" : 62
      },
      "38" : {
        "Text" : " Enable all assertions: ",
        "Line" : 366,
        "CharPositionInLine" : 40
      },
      "39" : {
        "Text" : " <enable/> ",
        "Line" : 367,
        "CharPositionInLine" : 27
      },
      "40" : {
        "Text" : " Disable all assertions (remember the system assert attr above! ",
        "Line" : 369,
        "CharPositionInLine" : 80
      },
      "41" : {
        "Text" : " <disable/> ",
        "Line" : 370,
        "CharPositionInLine" : 28
      },
      "42" : {
        "Text" : "\n         Enable assertions for the Mcv choosers, but disable any assertions in\n         VisAD's HDF5 package:\n         ",
        "Line" : 376,
        "CharPositionInLine" : 13
      },
      "43" : {
        "Text" : " <enable package=\"edu.wisc.ssec.mcidasv.chooser\"/> ",
        "Line" : 377,
        "CharPositionInLine" : 67
      },
      "44" : {
        "Text" : " <disable package=\"visad.data.hdf5\"/> ",
        "Line" : 378,
        "CharPositionInLine" : 54
      },
      "45" : {
        "Text" : " Print out some of the setting for this build file ",
        "Line" : 381,
        "CharPositionInLine" : 63
      },
      "46" : {
        "Text" : " Delete all class files and temporary build files ",
        "Line" : 418,
        "CharPositionInLine" : 62
      },
      "47" : {
        "Text" : " Set nightly build properties ",
        "Line" : 468,
        "CharPositionInLine" : 42
      },
      "48" : {
        "Text" : " Build the edu tree ",
        "Line" : 482,
        "CharPositionInLine" : 32
      },
      "49" : {
        "Text" : "<fileset dir=\"${idvlib.dir}\">",
        "Line" : 487,
        "CharPositionInLine" : 49
      },
      "50" : {
        "Text" : "<include name=\"**/*.jar\" />",
        "Line" : 488,
        "CharPositionInLine" : 51
      },
      "51" : {
        "Text" : "<exclude name=\"**/jython.jar\" />",
        "Line" : 489,
        "CharPositionInLine" : 56
      },
      "52" : {
        "Text" : "</fileset>",
        "Line" : 490,
        "CharPositionInLine" : 30
      },
      "53" : {
        "Text" : "<fileset dir=\"${lib.dir}\" includes=\"**/*.jar\" />",
        "Line" : 491,
        "CharPositionInLine" : 68
      },
      "54" : {
        "Text" : " Build only the startup manager ",
        "Line" : 540,
        "CharPositionInLine" : 44
      },
      "55" : {
        "Text" : " <mkdir dir=\"${dist.dir}\" /> ",
        "Line" : 544,
        "CharPositionInLine" : 45
      },
      "56" : {
        "Text" : " <fileset dir=\"${base.dir}\"> ",
        "Line" : 546,
        "CharPositionInLine" : 49
      },
      "57" : {
        "Text" : " Create the standalone Jython console jar file ",
        "Line" : 560,
        "CharPositionInLine" : 59
      },
      "58" : {
        "Text" : " <mkdir dir=\"${dist.dir}\" /> ",
        "Line" : 563,
        "CharPositionInLine" : 45
      },
      "59" : {
        "Text" : " <fileset dir=\"${base.dir}\"> ",
        "Line" : 566,
        "CharPositionInLine" : 49
      },
      "60" : {
        "Text" : " Jar the base application jar file ",
        "Line" : 579,
        "CharPositionInLine" : 47
      },
      "61" : {
        "Text" : " <mkdir dir=\"${dist.dir}\" /> ",
        "Line" : 581,
        "CharPositionInLine" : 45
      },
      "62" : {
        "Text" : " <delete file=\"${dist.dir}/${app.jarname}\" failonerror=\"false\" /> ",
        "Line" : 582,
        "CharPositionInLine" : 82
      },
      "63" : {
        "Text" : " <fileset dir=\"${base.dir}\"> ",
        "Line" : 590,
        "CharPositionInLine" : 49
      },
      "64" : {
        "Text" : " Jar the local-idv jar file ",
        "Line" : 607,
        "CharPositionInLine" : 40
      },
      "65" : {
        "Text" : " <mkdir dir=\"${dist.dir}\" /> ",
        "Line" : 609,
        "CharPositionInLine" : 45
      },
      "66" : {
        "Text" : " <delete file=\"${dist.dir}/${local-idv.jarname}\" failonerror=\"false\" /> ",
        "Line" : 610,
        "CharPositionInLine" : 88
      },
      "67" : {
        "Text" : " <fileset dir=\"${base.dir}\"> ",
        "Line" : 616,
        "CharPositionInLine" : 49
      },
      "68" : {
        "Text" : " Create jar files and documentation ",
        "Line" : 629,
        "CharPositionInLine" : 48
      },
      "69" : {
        "Text" : " <target name=\"jar\"\n    depends=\"clean, build, copy.build.props, jar.base, jar.local-idv\"\n    description=\"Create jar files and documentation\" />\n    ",
        "Line" : 633,
        "CharPositionInLine" : 8
      },
      "70" : {
        "Text" : " Create nightly jar files and documentation ",
        "Line" : 638,
        "CharPositionInLine" : 56
      },
      "71" : {
        "Text" : " Create signed jar files ",
        "Line" : 643,
        "CharPositionInLine" : 37
      },
      "72" : {
        "Text" : " Include dependencies in single jar file ",
        "Line" : 653,
        "CharPositionInLine" : 53
      },
      "73" : {
        "Text" : " this doesn't appear to work when j3d/jogl is included… ",
        "Line" : 654,
        "CharPositionInLine" : 68
      },
      "74" : {
        "Text" : " <fileset refid=\"newj3d.libs\" /> ",
        "Line" : 664,
        "CharPositionInLine" : 53
      },
      "75" : {
        "Text" : " Override default VisAD classes with custom ones ",
        "Line" : 667,
        "CharPositionInLine" : 65
      },
      "76" : {
        "Text" : " Override default IDV classes with custom ones ",
        "Line" : 670,
        "CharPositionInLine" : 63
      },
      "77" : {
        "Text" : " <unzip src=\"${idvlib.dir}/local-idv.jar\" dest=\"${build.dir}\" /> ",
        "Line" : 671,
        "CharPositionInLine" : 81
      },
      "78" : {
        "Text" : "         <copy todir=\"${build.dir}\">\n            <fileset dir=\"${.dir}\">\n                <patternset refid=\"jar.includes\" />\n                <patternset refid=\"local-idv.includes\" />\n            </fileset>\n        </copy>\n ",
        "Line" : 679,
        "CharPositionInLine" : 5
      },
      "79" : {
        "Text" : " Create distribution product ",
        "Line" : 692,
        "CharPositionInLine" : 41
      },
      "80" : {
        "Text" : " Create nightly webstart distribution product ",
        "Line" : 704,
        "CharPositionInLine" : 58
      },
      "81" : {
        "Text" : " Build and run McIDAS-V application (small memory) ",
        "Line" : 709,
        "CharPositionInLine" : 63
      },
      "82" : {
        "Text" : " TODO: need a way to generalize these run.* targets...  ",
        "Line" : 721,
        "CharPositionInLine" : 66
      },
      "83" : {
        "Text" : " Build and run McIDAS-V application (large memory) ",
        "Line" : 723,
        "CharPositionInLine" : 61
      },
      "84" : {
        "Text" : " <jvmarg value=\"-XX:+UseG1GC\" /> ",
        "Line" : 728,
        "CharPositionInLine" : 47
      },
      "85" : {
        "Text" : " <jvmarg value=\"-XX:+UseConcMarkSweepGC\" /> ",
        "Line" : 729,
        "CharPositionInLine" : 58
      },
      "86" : {
        "Text" : " <jvmarg value=\"-XX:+CMSClassUnloadingEnabled\" /> ",
        "Line" : 730,
        "CharPositionInLine" : 64
      },
      "87" : {
        "Text" : " <jvmarg value=\"-XX:+ExplicitGCInvokesConcurrentAndUnloadsClasses\" /> ",
        "Line" : 731,
        "CharPositionInLine" : 84
      },
      "88" : {
        "Text" : "\n        these tiered compilation flags are apparently equivalent to -client.\n        that said, i am deeply ambivalent about encouraging their use, as the\n        \"client\" JIT is nowhere near as smart as the \"server\" JIT…despite the\n        faster startup times with -client.\n      ",
        "Line" : 738,
        "CharPositionInLine" : 10
      },
      "89" : {
        "Text" : " <jvmarg value=\"-XX:+TieredCompilation\" /> ",
        "Line" : 739,
        "CharPositionInLine" : 57
      },
      "90" : {
        "Text" : " <jvmarg value=\"-XX:TieredStopAtLevel=1\" /> ",
        "Line" : 740,
        "CharPositionInLine" : 58
      },
      "91" : {
        "Text" : "\n        The following two lines will allow the JVM to dump the heap's\n        ${heap.dir} defaults to \"/tmp/mcidasv-heapdump.hprof\" but feel free\n        to change it.\n      ",
        "Line" : 748,
        "CharPositionInLine" : 10
      },
      "92" : {
        "Text" : "\n      <sysproperty key=\"debug.localadde.rootdir\" value=\"${addeservers.dir}\" />\n      <sysproperty key=\"debug.adde.reqs\" value=\"false\" />\n      ",
        "Line" : 755,
        "CharPositionInLine" : 10
      },
      "93" : {
        "Text" : "<sysproperty key=\"textureWidthMax\" value=\"${visad.texturemax}\" />",
        "Line" : 756,
        "CharPositionInLine" : 79
      },
      "94" : {
        "Text" : "\n      <sysproperty key=\"sun.java2d.opengl\" value=\"True\" />\n      <sysproperty key=\"sun.java2d.trace\" value=\"log,timestamp,count,out:./java2d.log,verbose\" />\n      ",
        "Line" : 776,
        "CharPositionInLine" : 10
      },
      "95" : {
        "Text" : " required for jython stuff to work without jigsaw-specific changes ",
        "Line" : 788,
        "CharPositionInLine" : 81
      },
      "96" : {
        "Text" : "<jvmarg value=\"&#45;&#45;permit-illegal-access\"/>",
        "Line" : 789,
        "CharPositionInLine" : 63
      },
      "97" : {
        "Text" : " add-exports allows reading from public types ",
        "Line" : 791,
        "CharPositionInLine" : 60
      },
      "98" : {
        "Text" : " add-opens opens up everything ",
        "Line" : 803,
        "CharPositionInLine" : 45
      },
      "99" : {
        "Text" : "<jvmarg value=\"-XX:+DoEscapeAnalysis\" />",
        "Line" : 867,
        "CharPositionInLine" : 54
      },
      "100" : {
        "Text" : "<jvmarg value=\"-XX:+UnlockExperimentalVMOptions\" />",
        "Line" : 868,
        "CharPositionInLine" : 65
      },
      "101" : {
        "Text" : "<jvmarg value=\"-XX:+UseZGC\" />",
        "Line" : 869,
        "CharPositionInLine" : 44
      },
      "102" : {
        "Text" : "<jvmarg value=\"-Xlog:gc\" />",
        "Line" : 870,
        "CharPositionInLine" : 41
      },
      "103" : {
        "Text" : " Prepares the JVM for a debugging session on port 8001 ",
        "Line" : 899,
        "CharPositionInLine" : 69
      },
      "104" : {
        "Text" : " flags for attempting to workaround PermGen issues ",
        "Line" : 902,
        "CharPositionInLine" : 65
      },
      "105" : {
        "Text" : " Misc performance flags ",
        "Line" : 907,
        "CharPositionInLine" : 38
      },
      "106" : {
        "Text" : "\n      <jvmarg value=\"-noverify\" />\n      <jvmarg value=\"-XX:+DoEscapeAnalysis\" />\n      ",
        "Line" : 911,
        "CharPositionInLine" : 10
      },
      "107" : {
        "Text" : "\n        You might want to uncomment the following two lines. They'll have the\n        JVM dump the heap's contents on an OutOfMemory exception (very helpful!)\n        ${heap.dir} defaults to \"/tmp/javaheaps/\", but feel free to change it.\n      ",
        "Line" : 916,
        "CharPositionInLine" : 10
      },
      "108" : {
        "Text" : "<sysproperty key=\"idv.usetimedriver\" value=\"true\" />",
        "Line" : 929,
        "CharPositionInLine" : 66
      },
      "109" : {
        "Text" : "&lt;!&ndash; required for jython stuff to work without jigsaw-specific changes &ndash;&gt;",
        "Line" : 941,
        "CharPositionInLine" : 110
      },
      "110" : {
        "Text" : " add-exports allows reading from public types ",
        "Line" : 943,
        "CharPositionInLine" : 66
      },
      "111" : {
        "Text" : " add-opens opens up everything ",
        "Line" : 955,
        "CharPositionInLine" : 51
      },
      "112" : {
        "Text" : " Prepares the JVM for a debugging session on port 8001 ",
        "Line" : 1018,
        "CharPositionInLine" : 75
      },
      "113" : {
        "Text" : " Build McIDAS-V and run a Jython script (large memory). ",
        "Line" : 1046,
        "CharPositionInLine" : 66
      },
      "114" : {
        "Text" : " Here's an example shell function (should work in bash/zsh):\n\n    function freshmcv {\n      if [ -z \"$1\" ]; then\n        ant jar.runlarge\n      else\n        ant -Dpyfile=\"${1}\" jar.runscript\n      fi\n    }\n  ",
        "Line" : 1056,
        "CharPositionInLine" : 6
      },
      "115" : {
        "Text" : "\n        these tiered compilation flags are apparently equivalent to -client.\n        that said, i am deeply ambivalent about encouraging their use, as the\n        \"client\" JIT is nowhere near as smart as the \"server\" JIT…despite the\n        faster startup times with -client.\n      ",
        "Line" : 1070,
        "CharPositionInLine" : 10
      },
      "116" : {
        "Text" : " <jvmarg value=\"-XX:+TieredCompilation\" /> ",
        "Line" : 1071,
        "CharPositionInLine" : 57
      },
      "117" : {
        "Text" : " <jvmarg value=\"-XX:TieredStopAtLevel=1\" /> ",
        "Line" : 1072,
        "CharPositionInLine" : 58
      },
      "118" : {
        "Text" : "<jvmarg value=\"-XX:+DoEscapeAnalysis\" />",
        "Line" : 1074,
        "CharPositionInLine" : 54
      },
      "119" : {
        "Text" : "\n        The following two lines will allow the JVM to dump the heap's\n        contents on an OutOfMemory exception (very helpful!).\n        ${heap.dir} defaults to \"/tmp/mcidasv-heapdump.hprof\" but feel free\n        to change it.\n      ",
        "Line" : 1080,
        "CharPositionInLine" : 10
      },
      "120" : {
        "Text" : "\n      <sysproperty key=\"debug.localadde.rootdir\" value=\"${addeservers.dir}\" />\n      <sysproperty key=\"debug.adde.reqs\" value=\"false\" />\n      ",
        "Line" : 1086,
        "CharPositionInLine" : 10
      },
      "121" : {
        "Text" : "<sysproperty key=\"textureWidthMax\" value=\"${visad.texturemax}\" />",
        "Line" : 1087,
        "CharPositionInLine" : 79
      },
      "122" : {
        "Text" : "\n      <sysproperty key=\"sun.java2d.opengl\" value=\"True\" />\n      <sysproperty key=\"sun.java2d.trace\" value=\"log,timestamp,count,out:./java2d.log,verbose\" />\n      ",
        "Line" : 1105,
        "CharPositionInLine" : 10
      },
      "123" : {
        "Text" : " Run McIDAS-V application (small memory) ",
        "Line" : 1114,
        "CharPositionInLine" : 53
      },
      "124" : {
        "Text" : " Disables bytecode verification; seems to bring the snappy  ",
        "Line" : 1122,
        "CharPositionInLine" : 80
      },
      "125" : {
        "Text" : " <jvmarg value=\"-noverify\" /> ",
        "Line" : 1123,
        "CharPositionInLine" : 50
      },
      "126" : {
        "Text" : " This will make the JVM output the contents of the heap upon You can\n             control the output directory and/or filename with HeapDumpPath...\n             but it requires HeapDumpOnOutOfMemoryError to be enabled. ",
        "Line" : 1127,
        "CharPositionInLine" : 75
      },
      "127" : {
        "Text" : " <jvmarg value=\"-XX:+HeapDumpOnOutOfMemoryError\" /> ",
        "Line" : 1128,
        "CharPositionInLine" : 72
      },
      "128" : {
        "Text" : " <jvmarg value=\"-XX:HeapDumpPath=${heap.dir}\" /> ",
        "Line" : 1129,
        "CharPositionInLine" : 69
      },
      "129" : {
        "Text" : " Allows you to point at arbitrary local ADDE servers ",
        "Line" : 1131,
        "CharPositionInLine" : 73
      },
      "130" : {
        "Text" : " <sysproperty key=\"debug.localadde.rootdir\" value=\"${addeservers.dir}\" /> ",
        "Line" : 1132,
        "CharPositionInLine" : 94
      },
      "131" : {
        "Text" : " Forces McIDAS-V to use Apple's Aqua L&F (only on OS X) ",
        "Line" : 1134,
        "CharPositionInLine" : 76
      },
      "132" : {
        "Text" : " <arg value=\"-forceaqua\" /> ",
        "Line" : 1135,
        "CharPositionInLine" : 48
      },
      "133" : {
        "Text" : " Run McIDAS-V application (large memory) ",
        "Line" : 1142,
        "CharPositionInLine" : 53
      },
      "134" : {
        "Text" : " Disables bytecode verification; seems to bring the snappy  ",
        "Line" : 1150,
        "CharPositionInLine" : 80
      },
      "135" : {
        "Text" : " <jvmarg value=\"-noverify\" /> ",
        "Line" : 1151,
        "CharPositionInLine" : 50
      },
      "136" : {
        "Text" : " This will make the JVM output the contents of the heap upon You can\n             control the output directory and/or filename with HeapDumpPath...\n             but it requires HeapDumpOnOutOfMemoryError to be enabled. ",
        "Line" : 1155,
        "CharPositionInLine" : 75
      },
      "137" : {
        "Text" : " <jvmarg value=\"-XX:+HeapDumpOnOutOfMemoryError\" /> ",
        "Line" : 1156,
        "CharPositionInLine" : 72
      },
      "138" : {
        "Text" : " <jvmarg value=\"-XX:HeapDumpPath=${heap.dir}\" /> ",
        "Line" : 1157,
        "CharPositionInLine" : 69
      },
      "139" : {
        "Text" : " Allows you to point at arbitrary local ADDE servers ",
        "Line" : 1159,
        "CharPositionInLine" : 73
      },
      "140" : {
        "Text" : " <sysproperty key=\"debug.localadde.rootdir\" value=\"${addeservers.dir}\" /> ",
        "Line" : 1160,
        "CharPositionInLine" : 94
      },
      "141" : {
        "Text" : " Forces McIDAS-V to use Apple's Aqua L&F (only on OS X) ",
        "Line" : 1162,
        "CharPositionInLine" : 76
      },
      "142" : {
        "Text" : " <arg value=\"-forceaqua\" /> ",
        "Line" : 1163,
        "CharPositionInLine" : 48
      },
      "143" : {
        "Text" : " flags for attempting to workaround PermGen issues ",
        "Line" : 1168,
        "CharPositionInLine" : 69
      },
      "144" : {
        "Text" : "<sysproperty key=\"logback.configurationFile\" value=\"${logback.default.config}\" />",
        "Line" : 1177,
        "CharPositionInLine" : 99
      },
      "145" : {
        "Text" : " Generate the javadoc documentation ",
        "Line" : 1182,
        "CharPositionInLine" : 48
      },
      "146" : {
        "Text" : " Create javadoc jar file ",
        "Line" : 1221,
        "CharPositionInLine" : 37
      },
      "147" : {
        "Text" : " Create the userguide jar file ",
        "Line" : 1236,
        "CharPositionInLine" : 43
      },
      "148" : {
        "Text" : " Remove the docs/ directory from auxdata.jar ",
        "Line" : 1258,
        "CharPositionInLine" : 57
      },
      "149" : {
        "Text" : " Remove the org/slf4j directory from ncIdv.jar. ",
        "Line" : 1270,
        "CharPositionInLine" : 60
      },
      "150" : {
        "Text" : " \n    Removes the following from external.jar:\n        org/slf4j directory\n        jythonlib.jar\n    ",
        "Line" : 1289,
        "CharPositionInLine" : 8
      },
      "151" : {
        "Text" : " Create source jar file ",
        "Line" : 1304,
        "CharPositionInLine" : 36
      },
      "152" : {
        "Text" : " Move the source file to install4j directory ",
        "Line" : 1318,
        "CharPositionInLine" : 57
      },
      "153" : {
        "Text" : " Move the source files to various destinations ",
        "Line" : 1319,
        "CharPositionInLine" : 59
      },
      "154" : {
        "Text" : " this step is due entirely to web server permissions; the scripts\n             that sync the nightly javadocs expect mcv_javadoc.jar, and I can't\n             modify 'em! ",
        "Line" : 1333,
        "CharPositionInLine" : 29
      },
      "155" : {
        "Text" : " Make the installers with install4j ",
        "Line" : 1339,
        "CharPositionInLine" : 48
      },
      "156" : {
        "Text" : " exactly the same as the \"installers\" target, but places the created \n         installers in a directory that's more accessible to Jenkins ",
        "Line" : 1347,
        "CharPositionInLine" : 73
      },
      "157" : {
        "Text" : " This builds a preferences store that will not generate tons of\n         warnings for Linux users attempting to install McV. This stuff\n         is only applicable to the Linux (and generic unix) installers. ",
        "Line" : 1369,
        "CharPositionInLine" : 76
      },
      "158" : {
        "Text" : " Zip up McIDAS-V JARs. mcidasv-tiny.zip contains only local-idv.jar  ",
        "Line" : 1383,
        "CharPositionInLine" : 81
      },
      "159" : {
        "Text" : " and mcidasv.jar. mcidasv-alljars.zip contains all McIDAS-V JARs.    ",
        "Line" : 1384,
        "CharPositionInLine" : 81
      },
      "160" : {
        "Text" : " zip task defaults to overwriting destfile.  ",
        "Line" : 1386,
        "CharPositionInLine" : 61
      },
      "161" : {
        "Text" : " BEGIN OSX APP BUNDLE STUFF ",
        "Line" : 1395,
        "CharPositionInLine" : 40
      },
      "162" : {
        "Text" : " \n        This is the name associated with the key from Apple. \n        NOTE: pass the actual value in via a property on the command line:\n        \n          ant -Dbundle.identity=\"SIGNING IDENTITY HERE\" appbundle.sign\n        \n        The command line definition of \"bundle.identity\" will take precedence \n        over the defintion below.\n    ",
        "Line" : 1414,
        "CharPositionInLine" : 8
      },
      "163" : {
        "Text" : " \n    This checks for a non-empty value in bundle.identity. If the value is an \n    empty string, the \"appbundle.sign\" target will not run\n    ",
        "Line" : 1420,
        "CharPositionInLine" : 8
      },
      "164" : {
        "Text" : " get SHA512 checksum of edu/wisc/ssec/mcidasv/resources/version.properties ",
        "Line" : 1438,
        "CharPositionInLine" : 91
      },
      "165" : {
        "Text" : " locate the system's Java 1.8 ",
        "Line" : 1444,
        "CharPositionInLine" : 46
      },
      "166" : {
        "Text" : " TODO(jon): can/should we bundle the local servers in the repo? ",
        "Line" : 1469,
        "CharPositionInLine" : 84
      },
      "167" : {
        "Text" : " NOTE: osx local servers need to be $PWD/lib/build/adde ",
        "Line" : 1470,
        "CharPositionInLine" : 76
      },
      "168" : {
        "Text" : " Workaround since the icon parameter for bundleapp doesn't work ",
        "Line" : 1475,
        "CharPositionInLine" : 84
      },
      "169" : {
        "Text" : "\n        This target will use the \"codesign\" utility to sign the bundle that was\n        created by the \"bundle_18\" target.\n    ",
        "Line" : 1497,
        "CharPositionInLine" : 8
      },
      "170" : {
        "Text" : " \n        It turns out that the \"codesign\" utility is not compatible with \n        symlinks. Regrettably, the OSX JRE contains a symlink. \n        \n        The following exec task removes the symlink and places a copy of \n        the linked file in the directory that contained said symlink.\n        ",
        "Line" : 1511,
        "CharPositionInLine" : 12
      },
      "171" : {
        "Text" : " END OSX APP BUNDLE STUFF ",
        "Line" : 1535,
        "CharPositionInLine" : 38
      },
      "172" : {
        "Text" : "                           HERE BE DRAGONS                           ",
        "Line" : 1537,
        "CharPositionInLine" : 81
      },
      "173" : {
        "Text" : " These things allow you to automatically use YourKit to profile an   ",
        "Line" : 1538,
        "CharPositionInLine" : 81
      },
      "174" : {
        "Text" : " ant build. Everything is still rather simplistic, but you may find  ",
        "Line" : 1539,
        "CharPositionInLine" : 81
      },
      "175" : {
        "Text" : " one of the \"memory.profiler\", \"sampling.profiler\", or               ",
        "Line" : 1540,
        "CharPositionInLine" : 81
      },
      "176" : {
        "Text" : " \"tracing.profiler\" targets useful. Don't use \"profiler.runlarge\"!   ",
        "Line" : 1541,
        "CharPositionInLine" : 81
      },
      "177" : {
        "Text" : " For the time being, I'm using the testing release of YourKit 11.    ",
        "Line" : 1543,
        "CharPositionInLine" : 81
      },
      "178" : {
        "Text" : " It's free and there is no registration process (last I checked):    ",
        "Line" : 1544,
        "CharPositionInLine" : 81
      },
      "179" : {
        "Text" : " http://www.yourkit.com/eap/                                         ",
        "Line" : 1545,
        "CharPositionInLine" : 81
      },
      "180" : {
        "Text" : " YourKit is especially generous in that they provide free licenses   ",
        "Line" : 1546,
        "CharPositionInLine" : 81
      },
      "181" : {
        "Text" : " This value will regrettably be user and platform depedent. Look at  ",
        "Line" : 1548,
        "CharPositionInLine" : 81
      },
      "182" : {
        "Text" : " http://www.yourkit.com/docs/11/help/agent.jsp                       ",
        "Line" : 1549,
        "CharPositionInLine" : 81
      },
      "183" : {
        "Text" : " Build and run McIDAS-V application (large memory) ",
        "Line" : 1576,
        "CharPositionInLine" : 63
      },
      "184" : {
        "Text" : "\n              The following two lines will allow the JVM to dump the heap's\n              contents on an OutOfMemory exception (very helpful!).\n              ${heap.dir} defaults to \"/tmp/mcidasv-heapdump.hprof\" but feel free\n              to change it.\n            ",
        "Line" : 1592,
        "CharPositionInLine" : 16
      },
      "185" : {
        "Text" : "\n            <sysproperty key=\"sun.java2d.opengl\" value=\"True\" />\n            <sysproperty key=\"sun.java2d.trace\" value=\"log,timestamp,count,out:./java2d.log,verbose\" />\n            ",
        "Line" : 1611,
        "CharPositionInLine" : 16
      },
      "CommentCount" : 186
    }
  },
  "FileTypes" : {
    "ANT" : 1
  },
  "ElapsedTime" : 2636
}