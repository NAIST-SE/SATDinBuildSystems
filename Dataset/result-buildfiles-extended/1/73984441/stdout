{
  "Repository" : "73984441",
  "Revision" : "HEAD",
  "ObjectId" : "013bc3d1a396cf373de681a050ef0cad53bc4934",
  "CommitTime" : "2019-01-29T00:13:50Z",
  "Files" : {
    "src/CMakeLists.txt" : {
      "ObjectId" : "2978ef06541440e1a819d911e6689c8440de521b",
      "LastModified" : "2016-03-26T16:19:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# toplevel CMakeLists.txt for a catkin workspace\n\n# catkin/cmake/toplevel.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# search for catkin within the workspace\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# searching fot catkin resulted in an error\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# include catkin from workspace or via find_package()\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# include all.cmake without add_subdirectory to let it operate in same scope\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# use either CMAKE_PREFIX_PATH explicitly passed to CMake as a command line argument\n\n# or CMAKE_PREFIX_PATH from the environment\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# list of catkin workspaces\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# search for catkin in all workspaces\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "src/abridge/CMakeLists.txt" : {
      "ObjectId" : "c5e579004317fa27d6e1310a977490848ffaaefb",
      "LastModified" : "2019-01-04T20:34:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/behaviours/CMakeLists.txt" : {
      "ObjectId" : "e3c7c3091b84bef8c3125778da8d98d8fe8dc60d",
      "LastModified" : "2019-01-04T20:34:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/diagnostics/CMakeLists.txt" : {
      "ObjectId" : "8100263a383957038c47b1ffeaab0e858b23a6aa",
      "LastModified" : "2017-08-25T22:35:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Depend on system install of Gazebo\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/gazebo_plugins/CMakeLists.txt" : {
      "ObjectId" : "61459fa0537fc866050562278f1449a6a410f8b1",
      "LastModified" : "2017-08-25T22:35:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Load catkin and all dependencies required for this package\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Depend on system install of Gazebo\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/rqt_rover_gui/CMakeLists.txt" : {
      "ObjectId" : "26930eef12ad9e9f35eaae64b5c729a6a93f5a8b",
      "LastModified" : "2019-01-04T20:34:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Get version info from git and pass it into compiled code\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/sbridge/CMakeLists.txt" : {
      "ObjectId" : "50d22432964442863a947fb1469bea9ce9d019f4",
      "LastModified" : "2019-01-04T20:34:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/swarmie_msgs/CMakeLists.txt" : {
      "ObjectId" : "3348db238999c1fc86267060853d9dfd745d97c2",
      "LastModified" : "2019-01-04T20:34:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Compile as C++11, supported in ROS Kinetic and newer\n\n# add_compile_options(-std=c++11)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Find catkin macros and libraries\n\n## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)\n\n## is used, also find other catkin packages\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## System dependencies are found with CMake's conventions\n\n# find_package(Boost REQUIRED COMPONENTS system)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Uncomment this if the package has a setup.py. This macro ensures\n\n## modules and global scripts declared therein get installed\n\n## See http://ros.org/doc/api/catkin/html/user_guide/setup_dot_py.html\n\n# catkin_python_setup()\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "################################################\n\n## Declare ROS messages, services and actions ##\n\n################################################\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## To declare and build messages, services or actions from within this\n\n## package, follow these steps:\n\n## * Let MSG_DEP_SET be the set of packages whose message types you use in\n\n##   your messages/services/actions (e.g. std_msgs, actionlib_msgs, ...).\n\n## * In the file package.xml:\n\n##   * add a build_depend tag for \"message_generation\"\n\n##   * add a build_depend and a run_depend tag for each package in MSG_DEP_SET\n\n##   * If MSG_DEP_SET isn't empty the following dependency has been pulled in\n\n##     but can be declared for certainty nonetheless:\n\n##     * add a run_depend tag for \"message_runtime\"\n\n## * In this file (CMakeLists.txt):\n\n##   * add \"message_generation\" and every package in MSG_DEP_SET to\n\n##     find_package(catkin REQUIRED COMPONENTS ...)\n\n##   * add \"message_runtime\" and every package in MSG_DEP_SET to\n\n##     catkin_package(CATKIN_DEPENDS ...)\n\n##   * uncomment the add_*_files sections below as needed\n\n##     and list every .msg/.srv/.action file to be processed\n\n##   * uncomment the generate_messages entry below\n\n##   * add every package in MSG_DEP_SET to generate_messages(DEPENDENCIES ...)\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Generate messages in the 'msg' folder\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## Generate services in the 'srv' folder\n\n# add_service_files(\n\n#   FILES\n\n#   Service1.srv\n\n#   Service2.srv\n\n# )\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Generate actions in the 'action' folder\n\n# add_action_files(\n\n#   FILES\n\n#   Action1.action\n\n#   Action2.action\n\n# )\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## Generate added messages and services with any dependencies listed here\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "################################################\n\n## Declare ROS dynamic reconfigure parameters ##\n\n################################################\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## To declare and build dynamic reconfigure parameters within this\n\n## package, follow these steps:\n\n## * In the file package.xml:\n\n##   * add a build_depend and a run_depend tag for \"dynamic_reconfigure\"\n\n## * In this file (CMakeLists.txt):\n\n##   * add \"dynamic_reconfigure\" to\n\n##     find_package(catkin REQUIRED COMPONENTS ...)\n\n##   * uncomment the \"generate_dynamic_reconfigure_options\" section below\n\n##     and list every .cfg file to be processed\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## Generate dynamic reconfigure parameters in the 'cfg' folder\n\n# generate_dynamic_reconfigure_options(\n\n#   cfg/DynReconf1.cfg\n\n#   cfg/DynReconf2.cfg\n\n# )\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n\n## The catkin_package macro generates cmake config files for your package\n\n## Declare things to be passed to dependent projects\n\n## INCLUDE_DIRS: uncomment this if you package contains header files\n\n## LIBRARIES: libraries you create in this project that dependent projects also need\n\n## CATKIN_DEPENDS: catkin_packages dependent projects also need\n\n## DEPENDS: system dependencies of this project that dependent projects also need\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#  INCLUDE_DIRS include\n\n#  LIBRARIES swarmie_msgs\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#  DEPENDS system_lib\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "## Specify additional locations of header files\n\n## Your package locations should be listed before other locations\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# include\n\n# ${catkin_INCLUDE_DIRS}\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## Declare a C++ library\n\n# add_library(${PROJECT_NAME}\n\n#   src/${PROJECT_NAME}/swarmie_msgs.cpp\n\n# )\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## Add cmake target dependencies of the library\n\n## as an example, code may need to be generated before libraries\n\n## either from message generation or dynamic reconfigure\n\n# add_dependencies(${PROJECT_NAME} ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "## Declare a C++ executable\n\n## With catkin_make all packages are built within a single CMake context\n\n## The recommended prefix ensures that target names across packages don't collide\n\n# add_executable(${PROJECT_NAME}_node src/swarmie_msgs_node.cpp)\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "## Rename C++ executable without prefix\n\n## The above recommended prefix causes long target names, the following renames the\n\n## target back to the shorter version for ease of user use\n\n## e.g. \"rosrun someones_pkg node\" instead of \"rosrun someones_pkg someones_pkg_node\"\n\n# set_target_properties(${PROJECT_NAME}_node PROPERTIES OUTPUT_NAME node PREFIX \"\")\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "## Add cmake target dependencies of the executable\n\n## same as for the library above\n\n# add_dependencies(${PROJECT_NAME}_node ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "## Specify libraries to link a library or executable target against\n\n# target_link_libraries(${PROJECT_NAME}_node\n\n#   ${catkin_LIBRARIES}\n\n# )\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#############\n\n## Install ##\n\n#############\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# all install targets should use catkin DESTINATION variables\n\n# See http://ros.org/doc/api/catkin/html/adv_user_guide/variables.html\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "## Mark executable scripts (Python etc.) for installation\n\n## in contrast to setup.py, you can choose the destination\n\n# install(PROGRAMS\n\n#   scripts/my_python_script\n\n#   DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n# )\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "## Mark executables and/or libraries for installation\n\n# install(TARGETS ${PROJECT_NAME} ${PROJECT_NAME}_node\n\n#   ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n\n#   LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n\n#   RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n# )\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "## Mark cpp header files for installation\n\n# install(DIRECTORY include/${PROJECT_NAME}/\n\n#   DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}\n\n#   FILES_MATCHING PATTERN \"*.h\"\n\n#   PATTERN \".svn\" EXCLUDE\n\n# )\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "## Mark other files for installation (e.g. launch and bag files, etc.)\n\n# install(FILES\n\n#   # myfile1\n\n#   # myfile2\n\n#   DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}\n\n# )\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#############\n\n## Testing ##\n\n#############\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "## Add gtest based cpp test target and link libraries\n\n# catkin_add_gtest(${PROJECT_NAME}-test test/test_swarmie_msgs.cpp)\n\n# if(TARGET ${PROJECT_NAME}-test)\n\n#   target_link_libraries(${PROJECT_NAME}-test ${PROJECT_NAME})\n\n# endif()\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "## Add folders to be run by python nosetests\n\n# catkin_add_nosetests(test)\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 34
    }
  },
  "FileTypes" : {
    "CMAKE" : 8
  },
  "ElapsedTime" : 2713
}