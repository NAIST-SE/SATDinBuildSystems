{
  "Repository" : "4934089",
  "Revision" : "HEAD",
  "ObjectId" : "54764f2c2b95b748141034464a87e29ad0f72fb7",
  "CommitTime" : "2017-05-10T02:42:55Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "6b0ca756c939900302990a53790bb4cf72e15333",
      "LastModified" : "2016-04-25T06:22:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The default home directory is the omegalib source directoy. At runtime this\n\n# will be replaced by the OMEGA_HOME environment variable when available.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n# Create a build name depending on the OS, Toolset and architecture.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# NOTE: If I add following line to disable some gcc warnings\n\n# I will get failed link errors due to the -fPIC x86_64 invalid relocation\n\n# on osgBullet. Maybe some CXX flags gets rewritten somewhat?\n",
        "Line" : 55,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wp,-w -Wno-int-to-pointer-cast -Wno-unused-value -Wno-enum-compare -Wno-write-strings\")\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# needed on Redhat-based ditros or you will get a link error for forkpty/openpty\n\n# (move this to omega CmakeLists only?)\n",
        "Line" : 60,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "#set(CMAKE_POSITION_INDEPENDENT_CODE On)\n",
        "Line" : 63,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n# Set the output directories for libraries and binary files\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Since visual studio builds are multiconfiguration, set two separate directories for debug and release builds\n",
        "Line" : 81,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Make sure the output bin directories exist, so the cmake scripts can copy \n\n# third party dlls there if needed.\n",
        "Line" : 91,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Add subdirectiories\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "CMakeModules/FileInformation.cmake" : {
      "ObjectId" : "2c19f873771f939d90070dce9b07d43e9634c7bc",
      "LastModified" : "2014-03-02T01:21:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - CMake module for getting file information such as size and modification date\n\n#\n\n# This module overrides the built-in CMake command file to provide two additional sub-commands\n\n# SIZE and TIMESTAMP on all platforms. Under UNIX the sub-commands USER_NAME, GROUP_NAME and\n\n# PERMISSIONS are also provided.\n\n#\n\n#  file (SIZE filename var)\n\n#  SIZE will store the size of the file in bytes into the variable.\n\n#\n\n#  file (TIMESTAMP filename var)\n\n#  TIMESTAMP will store the modification date of the file into the variable as an ISO 8601\n\n#  formatted string (e.g., \"2011-07-02T13:00:22\"). The chronological order of two timestamps\n\n#  can be determined with a STRLESS, STRGREATER or STREQUAL expression.\n\n#\n\n#  get_timestamp_component (var timestamp TIMESTAMP|DATE|TIME|YEAR|MONTH|DAY|HOUR|MINUTE|SECOND|TIMEZONE ...)\n\n#  gets a specific component of a ISO 8601 formatted string. Multiple components can be\n\n#  retrieved at the same time as a list.\n\n#\n\n#  current_timestamp (var [ TIMESTAMP|DATE|TIME|YEAR|MONTH|DAY|HOUR|MINUTE|SECOND|TIMEZONE ... ])\n\n#  will store the current date and time into the variable as an ISO 8601 formatted string.\n\n#  Optionally components of the current date and time can be retrieved as a list instead.\n\n#\n\n#  The following sub-commands are available on UNIX and Apple (Mac OS X) only:\n\n#\n\n#  file (USER_NAME filename var)\n\n#  USER_NAME will store the user name of the file owner into the variable.\n\n#\n\n#  file (GROUP_NAME filename var)\n\n#  GROUP_NAME will store the group name of the file owner into the variable.\n\n#\n\n#  file (PERMISSIONS filename var)\n\n#  PERMISSIONS will store the the permissions of the file into the variable as a list.\n\n#  Valid permissions are OWNER_READ, OWNER_WRITE, OWNER_EXECUTE, GROUP_READ, GROUP_WRITE,\n\n#  GROUP_EXECUTE, WORLD_READ, WORLD_WRITE, WORLD_EXECUTE, SETUID, and SETGID.\n\n#\n\n#=============================================================================\n\n# Copyright 2011-2013 Sascha Kratky\n\n#\n\n# Permission is hereby granted, free of charge, to any person\n\n# obtaining a copy of this software and associated documentation\n\n# files (the \"Software\"), to deal in the Software without\n\n# restriction, including without limitation the rights to use,\n\n# copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the\n\n# Software is furnished to do so, subject to the following\n\n# conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be\n\n# included in all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\n# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\n# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\n# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n\n# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n\n# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\n# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\n# OTHER DEALINGS IN THE SOFTWARE.\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# private function which invokes platform specific helper script\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# make sure helper script is executable\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Windows requires native paths\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# do not override get_timestamp_component if it already exists\n",
        "Line" : 92,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# if time is UTC, use +00:00\n",
        "Line" : 116,
        "CharPositionInLine" : 5
      },
      "6" : {
        "Text" : "# use canonical representation of time zone\n",
        "Line" : 118,
        "CharPositionInLine" : 5
      },
      "7" : {
        "Text" : "# do not override current_timestamp if it already exists\n",
        "Line" : 150,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# pass call to original file function\n",
        "Line" : 183,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 9
    },
    "CMakeModules/FindOmegalib.cmake" : {
      "ObjectId" : "025c4e12d9db1a2df33e90559e55f80d54f1d2c2",
      "LastModified" : "2017-05-10T02:42:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# fix for OSX 10.9\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Detect whether we are setting up omegalib for a build or an \n\n# install environment. Build environments always have a cmake \n\n# cache file, so look for it.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Adjust several config variables to work with an install environment\n",
        "Line" : 18,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# fix OpenSceneGraph libs\n",
        "Line" : 20,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# fix osgWorks libs\t\n",
        "Line" : 22,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "#message(\"${OSG_LIBS}\")\n\n# fix osg include dir\n",
        "Line" : 24,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "#message(\"${OSG_INCLUDES}\")\n",
        "Line" : 27,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "#Finally, replace OMEGA_BINARY_DIR with Omegalib_DIR\n",
        "Line" : 29,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "#set(OMICRON_BIN_DIR ${OMEGA_BINARY_DIR}/bin)\n\n#set(OMICRON_LIB_DIR ${OMEGA_BINARY_DIR}/lib)\n",
        "Line" : 36,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# the following are the include directories needed to build a 3rd party omegalib application.\n\n# in the future, just ${OMEGA_ROOT_DIR}/include will be needed, but for now, multiple paths \n\n# have to be specified. If building a project without Cmake, remember to specify ALL these directories\n\n# as include paths for your compiler.\n",
        "Line" : 40,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# No debug libs in an install environment\n",
        "Line" : 54,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# No debug binaries in an install environment\n",
        "Line" : 64,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "###################################################################################################\n\n# Set the output directories for libraries and binary files\n",
        "Line" : 74,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# Since visual studio and Xcode builds are multiconfiguration, set two separate directories for debug and release builds\n",
        "Line" : 77,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# omega\n",
        "Line" : 82,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# omegaToolkit\n",
        "Line" : 86,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# omegaOsg\n",
        "Line" : 90,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# omegaVtk\n",
        "Line" : 94,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# cyclops\n",
        "Line" : 98,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# omega\n",
        "Line" : 107,
        "CharPositionInLine" : 3
      },
      "20" : {
        "Text" : "# omegaToolkit\n",
        "Line" : 111,
        "CharPositionInLine" : 3
      },
      "21" : {
        "Text" : "# oosg\n",
        "Line" : 115,
        "CharPositionInLine" : 3
      },
      "22" : {
        "Text" : "# oosg\n",
        "Line" : 119,
        "CharPositionInLine" : 3
      },
      "23" : {
        "Text" : "# cyclops\n",
        "Line" : 123,
        "CharPositionInLine" : 3
      },
      "24" : {
        "Text" : "# generic linux\n",
        "Line" : 127,
        "CharPositionInLine" : 9
      },
      "25" : {
        "Text" : "# omega\n",
        "Line" : 131,
        "CharPositionInLine" : 3
      },
      "26" : {
        "Text" : "# omegaToolkit\n",
        "Line" : 135,
        "CharPositionInLine" : 3
      },
      "27" : {
        "Text" : "# oosg\n",
        "Line" : 139,
        "CharPositionInLine" : 3
      },
      "28" : {
        "Text" : "# oosg\n",
        "Line" : 143,
        "CharPositionInLine" : 3
      },
      "29" : {
        "Text" : "# cyclops\n",
        "Line" : 147,
        "CharPositionInLine" : 3
      },
      "30" : {
        "Text" : "#set(OMEGA_LIB debug ${OMEGA_LIB_DEBUG} debug ${OPENGL_LIBRARY} debug ${GLEW_LIB_DEBUG} debug ${LIBCONFIG_LIB_DEBUG} optimized ${OMEGA_LIB_RELEASE} optimized ${GLEW_LIB_RELEASE} optimized ${OPENGL_LIBRARY} optimized ${LIBCONFIG_LIB_RELEASE})\n",
        "Line" : 153,
        "CharPositionInLine" : 1
      },
      "31" : {
        "Text" : "# add pthreads dependency for linux build\n",
        "Line" : 156,
        "CharPositionInLine" : 1
      },
      "32" : {
        "Text" : "###################################################################################################\n\n# Visual studio specific options.\n",
        "Line" : 166,
        "CharPositionInLine" : 1
      },
      "33" : {
        "Text" : "# Exclude libcmt when linking in visual studio\n",
        "Line" : 169,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 34
    },
    "CMakeModules/ModuleUtils.cmake" : {
      "ObjectId" : "bd55100d6afe8d81df56ee9bec2d93186f3a845b",
      "LastModified" : "2016-12-03T05:20:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Can we find a tag with the branch name?\n",
        "Line" : 4,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#message(\"${MODULE_NAME}: looking for branch ${BRANCH_NAME}\")\n",
        "Line" : 8,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Branch found: check it out\n\n#message(\"${MODULE_NAME}: switching to branch ${BRANCH_NAME}\")\n",
        "Line" : 10,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#message(\"in module ${MODULE_NAME}\")\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# substitute dashes with underscores in macro module names ('-' is\n\n# not a valid character\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# find dependencies\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# find module version\n",
        "Line" : 61,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# add module pack file\n",
        "Line" : 71,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# parse a module version from CMakeLists or add a version.txt file\n",
        "Line" : 86,
        "CharPositionInLine" : 12
      },
      "11" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# MODULE_ID = git_org/module_name\n",
        "Line" : 97,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Local module support\n",
        "Line" : 105,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# If we don't have a module description in the cache, pull it from the\n\n# online repository now.\n",
        "Line" : 109,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "#module_def(${MODULE_NAME} https://github.com/${MODULE_GIT_ORG}/${MODULE_NAME}.git ${MODULES_${MODULE_NAME}_DESCRIPTION})\n",
        "Line" : 127,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#message(\"Requesting dep ${MODULE_FULLNAME}\")\n",
        "Line" : 132,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# hub-less modules always contain an org/user name. If we are requesting\n\n# a hub-less module, add it here.\n\n#if(NOT \"${MODULE_GIT_ORG}\" STREQUAL \"\")\n\n#endif()\n",
        "Line" : 144,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# I'd like to use if(NOT .. IN_LIST here but that's supported by cmake 3.3+\n\n# and we don't have it installed on travis.\n",
        "Line" : 149,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# we always add the module to the dependency list even if it exists already,\n\n# to make sure dependencies are processed in the right order.\n",
        "Line" : 155,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n# updated the enabled modules list (MODULES) based on the MODULES_ADD and \n\n# MODULES_REMOVE variables\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# MODULES_LIST = modules that the user wants installed\n\n# REQUESTED_MODULES = modules requested by the user + all resolved dependencies\n",
        "Line" : 165,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# Add modules from the MODULES_ADD variable to the list of initial modules\n\n# remove modules from the MODULES_REMOVE variable from the list of initial modules\n",
        "Line" : 170,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n# creates the initial modulesConfig.h file\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n# creates the initial pack script file\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# create the pack.cmake file. This file contains the commands to create\n\n# packaged modules for the omegalib installer. Each module will append\n\n# its own pack.cmake file to this one.\n",
        "Line" : 197,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n# Entry point for module processing, used by src/CMakeLists.txt\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# First step: request modules that the user wants. \n",
        "Line" : 219,
        "CharPositionInLine" : 8
      },
      "29" : {
        "Text" : "# Keep running until all module dependencies are resolved.\n",
        "Line" : 224,
        "CharPositionInLine" : 8
      },
      "30" : {
        "Text" : "# Loop through all the requested modules, loading the module definitions.\n\n# The module_def call will process dependencies for each module, adding\n\n# missing dependencies to REQUESTED_MODULES until all dependencies are\n\n# resolved and REGENERATE_REQUESTED stays false.\n",
        "Line" : 234,
        "CharPositionInLine" : 12
      },
      "31" : {
        "Text" : "# Split module id into module name and (optional) git organization\n",
        "Line" : 241,
        "CharPositionInLine" : 16
      },
      "32" : {
        "Text" : "# Local module support\n",
        "Line" : 248,
        "CharPositionInLine" : 16
      },
      "33" : {
        "Text" : "################################################################################\n\n# MODULE API\n\n# The following macros are used inside module CMakeList.txt files\n",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 280,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 285,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Copy a list of files from one directory to another. Relative files paths are maintained.\n",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 37
    },
    "CMakeModules/OmegalibVersion.cmake" : {
      "ObjectId" : "a84b64aa122525d769b49611af4ce7424bf8df64",
      "LastModified" : "2016-04-25T06:22:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the current branch\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMakeModules/UsePch.cmake" : {
      "ObjectId" : "b13b3753cee6df2442d1f754f0a5ae96a2fc6413",
      "LastModified" : "2016-04-25T06:22:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Instructs the MSVC toolset to use the precompiled header PRECOMPILED_HEADER\r\n\n# for each source file given in the collection named by SOURCE_VARIABLE_NAME.\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Generate precompiled header translation unit\r\n",
        "Line" : 7,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Update properties of source files to use the precompiled header.\r\n\n# Additionally, force the inclusion of the precompiled header at beginning of each source file.\r\n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Finally, update the source file collection to contain the precompiled header translation unit\r\n",
        "Line" : 24,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "etc/helloModule/CMakeLists.txt" : {
      "ObjectId" : "a6e1d1896f1b32d7216b6cf703a3d6a079774d9c",
      "LastModified" : "2016-04-25T06:22:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "etc/mtools/add.cmake" : {
      "ObjectId" : "c78c0d084a684b7bb9c3cbb1959c30a9e61061a2",
      "LastModified" : "2016-05-16T04:00:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set default arguments\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Update the installed modules\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "etc/mtools/bootstrap.cmake" : {
      "ObjectId" : "c4fbd546663c3da7c8c9cab910c75f9d10312462",
      "LastModified" : "2016-04-25T06:22:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "etc/mtools/build.cmake" : {
      "ObjectId" : "dcc6d54fcd00db106ab01200bb3e95cc170aac21",
      "LastModified" : "2016-04-25T06:22:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set default arguments\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "etc/mtools/choose.cmake" : {
      "ObjectId" : "2d40aa6c6b3323164aea4b65310182be0495d641",
      "LastModified" : "2016-12-03T05:20:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set default arguments\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "etc/mtools/module.stat.cmake" : {
      "ObjectId" : "26dd88638bb5e8bd5fec89a6d99ad5c7cef5488b",
      "LastModified" : "2016-04-25T06:22:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "etc/mtools/pack.app.cmake" : {
      "ObjectId" : "c7b979b77906c79b84c9861f17293fbcc5b0eb95",
      "LastModified" : "2016-12-03T05:20:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ARG2 - distribution\n\n# ARG3 - app name (also name of the module in distribution)\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# copy the core install files to the package target dir\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Prepare to run process_modules in pack-app mode. Set all the \n\n# required variables\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Delete the local repositoryor the repogen command will fail\n\n#file(REMOVE_RECURSE ${ARG2}/install/repository)\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "etc/mtools/pack.build.cmake" : {
      "ObjectId" : "9e1b6749086c1a2c1227ca0ae31d48989a90afb1",
      "LastModified" : "2016-04-25T06:22:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set default arguments\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Delete the local repositoryor the repogen command will fail\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "etc/mtools/pack.cmake" : {
      "ObjectId" : "610c57592248e6e701ad3914b3fb936be1bb8d61",
      "LastModified" : "2016-04-25T06:22:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "etc/mtools/pack.prepare.cmake" : {
      "ObjectId" : "f683e20728193a151f9100722f2c2511e2640805",
      "LastModified" : "2016-04-25T06:22:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set default arguments\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#if(NOT WIN32)\n\n#    message(\"ERROR: omega pack is currently only supported on windows\")\n\n#    return()\n\n#endif()\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Make sure the pack.cmake file is updated\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#include file with functions used by packaging scripts\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Run the pack commands\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "etc/mtools/pack.publish.cmake" : {
      "ObjectId" : "ec12a697d39677fdd5ea51af2bf601dc59979785",
      "LastModified" : "2016-04-25T06:22:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#If we are building an offline installer, there is nothing we need to do here.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set default arguments\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#NOTE: On OSX we expect AWS to be installed system-wide.\n",
        "Line" : 41,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 3
    },
    "etc/mtools/remove.cmake" : {
      "ObjectId" : "2eaaa9e22fdba8029d3aaf5d5b5ebe2646445828",
      "LastModified" : "2016-12-03T05:20:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set default arguments\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Update the installed modules\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "etc/mtools/set.cmake" : {
      "ObjectId" : "8eea008bf4bf75bba4413024226e14347cd4e396",
      "LastModified" : "2016-12-03T05:20:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set default arguments\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Update the installed modules\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "etc/mtools/update.cmake" : {
      "ObjectId" : "98145406098a302d9caa4b8e3aff2671466dd9b8",
      "LastModified" : "2016-12-03T05:20:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set default arguments\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Update core lib\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# update modules\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "external/UseFreeImage.cmake" : {
      "ObjectId" : "09758eaa75b8bde5703965e67c074e7cfa2ff2d9",
      "LastModified" : "2016-12-03T05:20:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#file(DOWNLOAD http://omegalib.googlecode.com/files/${EXTLIB_NAME}.tar.gz ${EXTLIB_TGZ} SHOW_PROGRESS)\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "external/UseFreeType.cmake" : {
      "ObjectId" : "aec744e3e61bd88b5f3feadb42062f04e5c90539",
      "LastModified" : "2016-12-03T05:20:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external/UseFtgl.cmake" : {
      "ObjectId" : "036e0ff77f897bc880f66820d6171432b017f89f",
      "LastModified" : "2016-12-03T05:20:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external/UseOmicron.cmake" : {
      "ObjectId" : "df586b91963738c15e000bd34f8fcb08747d5d35",
      "LastModified" : "2016-12-03T05:20:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Disable build of omicron examples (they se external projects and look for binary files in the wrong place\n\n# due to binary file redirection we do here.\n",
        "Line" : 29,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "#-DCMAKE_OSX_SYSROOT:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.7.sdk\n\n#-DCMAKE_OSX_DEPLOYMENT_TARGET:VAR=10.7\n",
        "Line" : 44,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# the following are the include directories needed to build a 3rd party omegalib application.\n\n# in the future, just ${OMICRON_ROOT_DIR}/include will be needed, but for now, multiple paths \n\n# have to be specified. If building a project without Cmake, remember to specify ALL these directories\n\n# as include paths for your compiler.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###################################################################################################\n\n# Set the output directories for libraries and binary files\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# omicron\n",
        "Line" : 64,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# On linux, asio depends on pthreads so add it as a dependency.\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "external/UsePython.cmake" : {
      "ObjectId" : "2236ce5ba21c9e814990ecf9dcd6c5a128dbd749",
      "LastModified" : "2017-01-08T02:43:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# On windows use the included python distribution\n",
        "Line" : 13,
        "CharPositionInLine" : 12
      },
      "1" : {
        "Text" : "# copy the python dll to the output folders\n",
        "Line" : 36,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 2
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "ca4bf1fa346eafbb948b7f5ebebcc48e6647c9ed",
      "LastModified" : "2016-12-03T05:20:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Visual studio 2013 runtime\n",
        "Line" : 10,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n# Set include paths\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n# Add libraries and applications to the project.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# External projects\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Omegalib core libs\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n# Process optional modules\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# We need to add orun here because its config file uses build options defined above\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Generate the Omegalib config fule used by external applications to find omegalib.\n\n# The @ONLY option is to substitute only variables in form @VAR@. This is because\n\n# OmegalibConfig.cmake uses ${VAR} variables that will be substituted by the\n\n# external application.\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "src/displaySystem_GLFW/CMakeLists.txt" : {
      "ObjectId" : "c958487e69ac3145fd71b1df2f0999b16128edbb",
      "LastModified" : "2016-12-03T05:20:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Download and build GLFW\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# directories\n",
        "Line" : 15,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# build displaySystem_GLFW\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/glew/CMakeLists.txt" : {
      "ObjectId" : "b45f0f14cfa298b93872eae72bb737f27dbafd96",
      "LastModified" : "2016-12-03T05:20:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###################################################################################################\n\n# THE OMEGA LIB PROJECT\n\n#-------------------------------------------------------------------------------------------------\n\n# Copyright 2010-2015\t\tElectronic Visualization Laboratory, University of Illinois at Chicago\n\n# Authors:\t\t\t\t\t\t\t\t\t\t\n\n#  Alessandro Febretti\t\tfebret@gmail.com\n\n#-------------------------------------------------------------------------------------------------\n\n# Copyright (c) 2010-2015, Electronic Visualization Laboratory, University of Illinois at Chicago\n\n# All rights reserved.\n\n# Redistribution and use in source and binary forms, with or without modification, are permitted \n\n# provided that the following conditions are met:\n\n# \n\n# Redistributions of source code must retain the above copyright notice, this list of conditions \n\n# and the following disclaimer. Redistributions in binary form must reproduce the above copyright \n\n# notice, this list of conditions and the following disclaimer in the documentation and/or other \n\n# materials provided with the distribution. \n\n# \n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR \n\n# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY AND \n\n# FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR \n\n# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL \n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE  GOODS OR SERVICES; LOSS OF \n\n# USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, \n\n# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN \n\n# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n###################################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/omega/CMakeLists.txt" : {
      "ObjectId" : "362bd8c9d0d5b8c5d39b3e3e531a8133febc7ae2",
      "LastModified" : "2017-04-28T15:36:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# Find required packages\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################################################\n\n# Compile definitions\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###############################################################################\n\n# Source files\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###############################################################################\n\n# Headers\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###############################################################################\n\n# Enable / disable specific modules within omegalib\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "###############################################################################\n\n# Group source files into separate folders for visual studio project \n\n# (this is just eye candy)\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "###############################################################################\n\n# Create the library with the provided sources and headers\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "###############################################################################\n\n# Setup module-specific link info\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "###############################################################################\n\n# See if we can setup Python support for this build\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# AF - 9/21/2016  This line just generates a warning.\n\n#add_dependencies( omega Python )\n",
        "Line" : 193,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# On linux the python thread uses readline to read user input: look for the readline library.\n",
        "Line" : 199,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Boost includes\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "###############################################################################\n\n# Generate omegaConfig.h.\n\n# If the file already exists, do an md5 compare to check if the genrated file\n\n# contents are different from the existing file. This is to avoid a forced rebuild\n\n# due to a touched file if file contents stay the same.\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "src/omegaToolkit/CMakeLists.txt" : {
      "ObjectId" : "f1c51120d85644a99291b0d51952ab52201ac7eb",
      "LastModified" : "2016-12-03T05:20:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Compile definitions\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Source files\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# omega::ui\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Headers\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# omega::ui\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Set source groups (VS eye candy)\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Setup compile info\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Setup link info.\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "src/orun/CMakeLists.txt" : {
      "ObjectId" : "f3a0a57c2cd700aea663cdaa86b745c8b1fb9d0e",
      "LastModified" : "2016-12-03T05:20:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/pack_core.cmake" : {
      "ObjectId" : "6fe0d4dec20a682fa6315bc2fe261b8c4722b1ab",
      "LastModified" : "2016-12-03T05:20:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copy core files.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Dlls\n",
        "Line" : 12,
        "CharPositionInLine" : 12
      },
      "2" : {
        "Text" : "# Executables\n",
        "Line" : 21,
        "CharPositionInLine" : 12
      },
      "3" : {
        "Text" : "# Executables\n",
        "Line" : 37,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 4
    },
    "src/pack_functions.cmake" : {
      "ObjectId" : "b2a1f45137cb483e4345046f2eae7fbab5a64fc7",
      "LastModified" : "2016-12-03T05:20:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n# For simple script modules, this macro will package the full module directory\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "src/pack_header.cmake" : {
      "ObjectId" : "3ca3190765249d09a730deeee48d175a30a2a39e",
      "LastModified" : "2016-12-03T05:20:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n# Helper macro to setup installer packages\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set the default configuration for packages\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n# pack instructions for the omegalib core.\n\n# Copy over some variables, they will be substituted by configure_file.\n\n# Needed since this file will be executed from outside the main omegalib cmake\n\n# run.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# needed to avoid wrong substitutions in installer files\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Save the current date to a variable. Will be used during packaging.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    }
  },
  "FileTypes" : {
    "CMAKE" : 34
  },
  "ElapsedTime" : 1598
}