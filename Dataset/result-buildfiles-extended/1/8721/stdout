{
  "Repository" : "8721",
  "Revision" : "HEAD",
  "ObjectId" : "fb335dfe57ed51a5fb8c9782a4b56bc7f26aca8a",
  "CommitTime" : "2019-04-13T19:32:16Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "2e3ed498ef0b7b652a324d242cb95319988ca717",
      "LastModified" : "2019-03-12T01:42:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# CMake build system for OpenSCAD\n\n#\n\n# Configuration variables\n\n#   -DHEADLESS=<ON|OFF>\n\n#   -DNULLGL=<ON|OFF>\n\n#   -DSNAPSHOT=<ON|OFF>\n\n#   -DEXPERIMENTAL=<ON|OFF>\n\n#\n\n#  TODO\n\n#   find packages for spnav, hidapi\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMP0071 introduced in 3.10.2\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Default to Release build\n\n#if(NOT CMAKE_BUILD_TYPE)\n\n#  message(STATUS \"CMAKE_BUILD_TYPE not specified.  Defaulting to 'Release'\")\n\n#  message(STATUS \"Usage: cmake -DCMAKE_BUILD_TYPE=[Debug|Release|RelWithDebInfo|MinSizeRel] .\")\n\n#  set(CMAKE_BUILD_TYPE Release)\n\n#else()\n\n#  message(STATUS \"CMAKE_BUILD_TYPE: ${CMAKE_BUILD_TYPE}\")\n\n#endif()\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Use same optimization as qmake build\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Stack size 8MB; github issue 116\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# gcc bug spams warnings, See issue #2771\n",
        "Line" : 66,
        "CharPositionInLine" : 13
      },
      "6" : {
        "Text" : "# NULLGL - Allow us to build without OpenGL(TM). run 'cmake .. -DNULLGL=1'\n\n# Most tests will fail, but it can be used for testing/experiments\n",
        "Line" : 76,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# NOTE FindCGAL.cmake resets the BOOST_* and Boost_* variables,\n\n#   because it looks for Boost itself, so it has to be called\n\n#   before we look for our own required boost libraries.\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# revert any changes to module path from CGAL_Macros.cmake\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Flex lexer options\n",
        "Line" : 130,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Check if boost dependency libraries have been found too\n",
        "Line" : 145,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# call before setting local CMAKE_MODULE_PATH so we use VCPKG version of FindGLEW\n",
        "Line" : 170,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# needed for Qt5QScintilla, maybe others\n",
        "Line" : 173,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Ubuntu Trusty Eigen package installs FindEigen3.cmake but assumes cmake-2.8, not cmake3\n\n# See https://packages.ubuntu.com/trusty/all/libeigen3-dev/filelist\n",
        "Line" : 182,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Check if boost dependency libraries have been found too\n",
        "Line" : 201,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Output compilation database (compile_commands.json), so we can e.g. run clang-tidy or other tools separately\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Use clang-tidy if run with -DCLANG_TIDY=1\n",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#  add_definitions(${Qt5Widgets_DEFINITIONS})\n\n#  add_definitions(${Qt5OpenGL_DEFINITIONS})\n\n#  add_definitions(${Qt5Widgets_EXECUTABLE_COMPILE_FLAGS})\n\n#  add_definitions(${Qt5OpenGL_EXECUTABLE_COMPILE_FLAGS})\n",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Setup ccache (if available) to speed up recompiles. It's especially useful\n\n# when switching back and forth between branches where large numbers of files\n\n# would otherwise need to be re-compiled each time.\n",
        "Line" : 331,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#\n\n# Version\n\n#\n",
        "Line" : 340,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# get rid of leading zero\n",
        "Line" : 349,
        "CharPositionInLine" : 44
      },
      "21" : {
        "Text" : "# get rid of leading zero\n",
        "Line" : 353,
        "CharPositionInLine" : 42
      },
      "22" : {
        "Text" : "#\n\n# Platform specific settings\n\n#\n",
        "Line" : 364,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\n\n# Offscreen OpenGL context source code\n\n#\n",
        "Line" : 542,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# contains several 'nullified' versions of above .cc files\n",
        "Line" : 548,
        "CharPositionInLine" : 18
      },
      "25" : {
        "Text" : "# header-only code\n",
        "Line" : 633,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#file(GLOB Headers src/*.h src/*.hpp src/polyclipping/*.hpp)\n\n#list(REMOVE_ITEM Headers ${CMAKE_SOURCE_DIR}/src/SparkleAutoUpdater.h)\n",
        "Line" : 641,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 27
    },
    "bison.pri" : {
      "ObjectId" : "d83458cf77587e5c3cd0fb363ac65de3fdfc44a3",
      "LastModified" : "2017-02-11T18:52:18Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "c++11.pri" : {
      "ObjectId" : "0a2c3b6a0f70f26d281d5f5fa32e9c30123f0907",
      "LastModified" : "2018-11-04T19:38:46Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Mac needs special care to link against the correct C++ library\n\n# We attempt to auto-detect it by inspecting Boost\n",
        "Line" : 2,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# libc++ is a requirement for using C++11 \n",
        "Line" : 14,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# 3rd party libraries will probably violate this for a long time\n",
        "Line" : 33,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# boost/algorithm/string.hpp does this\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# CGAL\n",
        "Line" : 37,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "cgal/decompose.pro" : {
      "ObjectId" : "5ff20c3c8a2c26f46925a31552319b568b385b0d",
      "LastModified" : "2018-11-04T19:38:46Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Handle custom library location.\n\n# Used when manually installing 3rd party libraries\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Default to MacPorts on Mac OS X\n",
        "Line" : 18,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "# Mac needs special care to link against the correct C++ library\n\n# We attempt to auto-detect it by inspecting Boost\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# libc++ on requires Mac OS X 10.7+\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# See Dec 2011 OpenSCAD mailing list, re: CGAL/GCC bugs.\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# ignored before 4.8\n",
        "Line" : 60,
        "CharPositionInLine" : 55
      },
      "6" : {
        "Text" : "# use of 'auto'\n",
        "Line" : 61,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# http://llvm.org/bugs/show_bug.cgi?id=9182\n",
        "Line" : 66,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# disable enormous amount of warnings about CGAL / boost / etc\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# might want to actually turn this on once in a while\n",
        "Line" : 73,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Application configuration\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "cgal/export_nef.pro" : {
      "ObjectId" : "f75df45f6a15aaa55cc1a08021887d52306be0b7",
      "LastModified" : "2018-11-04T19:38:46Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Handle custom library location.\n\n# Used when manually installing 3rd party libraries\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Default to MacPorts on Mac OS X\n",
        "Line" : 18,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "# Mac needs special care to link against the correct C++ library\n\n# We attempt to auto-detect it by inspecting Boost\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# libc++ on requires Mac OS X 10.7+\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# See Dec 2011 OpenSCAD mailing list, re: CGAL/GCC bugs.\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ignored before 4.8\n",
        "Line" : 60,
        "CharPositionInLine" : 55
      },
      "6" : {
        "Text" : "# http://llvm.org/bugs/show_bug.cgi?id=9182\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# disable enormous amount of warnings about CGAL / boost / etc\n",
        "Line" : 66,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# might want to actually turn this on once in a while\n",
        "Line" : 71,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Application configuration\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "cgal/polyhole-tessellator-libtess2.pro" : {
      "ObjectId" : "bbfa68bffe003e4af1f90af25cd6e60dd72c5330",
      "LastModified" : "2018-11-04T19:38:46Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Handle custom library location.\n\n# Used when manually installing 3rd party libraries\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Default to MacPorts on Mac OS X\n",
        "Line" : 16,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "# Mac needs special care to link against the correct C++ library\n\n# We attempt to auto-detect it by inspecting Boost\n",
        "Line" : 37,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# libc++ on requires Mac OS X 10.7+\n",
        "Line" : 51,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# See Dec 2011 OpenSCAD mailing list, re: CGAL/GCC bugs.\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ignored before 4.8\n",
        "Line" : 59,
        "CharPositionInLine" : 55
      },
      "6" : {
        "Text" : "# http://llvm.org/bugs/show_bug.cgi?id=9182\n",
        "Line" : 63,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# disable enormous amount of warnings about CGAL / boost / etc\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# might want to actually turn this on once in a while\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Application configuration\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "cgal/polyhole-tessellator.pro" : {
      "ObjectId" : "906d089f12f2b9717573d74ed34f23a02451e976",
      "LastModified" : "2014-12-27T22:58:20Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Handle custom library location.\n\n# Used when manually installing 3rd party libraries\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Default to MacPorts on Mac OS X\n",
        "Line" : 16,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "# Mac needs special care to link against the correct C++ library\n\n# We attempt to auto-detect it by inspecting Boost\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# libc++ on requires Mac OS X 10.7+\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# See Dec 2011 OpenSCAD mailing list, re: CGAL/GCC bugs.\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ignored before 4.8\n",
        "Line" : 58,
        "CharPositionInLine" : 55
      },
      "6" : {
        "Text" : "# http://llvm.org/bugs/show_bug.cgi?id=9182\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# disable enormous amount of warnings about CGAL / boost / etc\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# might want to actually turn this on once in a while\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Application configuration\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "cmake/Modules/FindFontConfig.cmake" : {
      "ObjectId" : "e30401c7ba39e386a277078fb127186c2fdb0448",
      "LastModified" : "2018-11-04T19:38:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the  Fontconfig\n\n# Once done this will define\n\n#\n\n#  FONTCONFIG_FOUND - system has Fontconfig\n\n#  FONTCONFIG_INCLUDE_DIR - The include directory to use for the fontconfig headers\n\n#  FONTCONFIG_LIBRARIES - Link these to use FONTCONFIG\n\n#  FONTCONFIG_DEFINITIONS - Compiler switches required for using FONTCONFIG\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006,2007 Laurent Montel, <montel@kde.org>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# 1. Redistributions of source code must retain the copyright\n\n#    notice, this list of conditions and the following disclaimer.\n\n# 2. Redistributions in binary form must reproduce the copyright\n\n#    notice, this list of conditions and the following disclaimer in the\n\n#    documentation and/or other materials provided with the distribution.\n\n# 3. The name of the author may not be used to endorse or promote products \n\n#    derived from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n\n# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n\n# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n\n# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\n\n# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n\n# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n\n# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 37,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "cmake/Modules/FindGLEW.cmake" : {
      "ObjectId" : "8620d452b3bda5fdaf56b98a9cdeeb79fff3dd0f",
      "LastModified" : "2019-03-12T22:41:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Try to find GLEW library and include path.\n\n# Once done this will define\n\n#\n\n# GLEW_FOUND\n\n# GLEW_INCLUDE_DIR\n\n# GLEW_LIBRARY\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# a few lines of this file are based on the LGPL code found at \n\n# http://openlibraries.org/browser/trunk/FindGLEW.cmake?rev=1383 \n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# passed from caller\n",
        "Line" : 14,
        "CharPositionInLine" : 26
      },
      "3" : {
        "Text" : "# static, non-debug (Release)\n",
        "Line" : 15,
        "CharPositionInLine" : 42
      },
      "4" : {
        "Text" : "# other. untested with OpenSCAD\n",
        "Line" : 17,
        "CharPositionInLine" : 41
      },
      "5" : {
        "Text" : "# GCC\n",
        "Line" : 19,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 6
    },
    "cmake/Modules/FindGLIB2.cmake" : {
      "ObjectId" : "63d31b03330673536b5cb2f97b865ff31593ac85",
      "LastModified" : "2019-02-05T02:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# GLIB2 requires pkg-config to build. \n\n# If we are did an OPENSCAD_LIBRARIES dependency build of glib2, we need to \n\n# tell pkg-config to look under OPENSCAD_LIBRARIES dir.\n\n# Otherwise, we need to use the system's pkg-config to find system's glib2\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#message(STATUS \"GLIB2_LIBRARIES ${GLIB2_LIBRARIES}\")\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#message(STATUS \"GLIB2_LDFLAGS ${GLIB2_LDFLAGS}\")\n\n#message(STATUS \"GLIB2_LDFLAGS_OTHER ${GLIB2_LDFLAGS_OTHER}\")\n\n#message(STATUS \"GLIB2_INCLUDE_DIRS ${GLIB2_INCLUDE_DIRS}\")\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#message(STATUS \"GLIB2_CFLAGS ${GLIB2_CFLAGS}\")\n\n#message(STATUS \"GLIB2_CFLAGS_OTHER ${GLIB2_CFLAGS_OTHER}\")\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#message(STATUS \"GLIB2_DEFINITIONS ${GLIB2_DEFINITIONS}\")\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#  message(STATUS \"lib: ${GLIB2_LIB}\")\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#  message(STATUS \"TMP: ${TMP}\")\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cmake/Modules/FindHarfBuzz.cmake" : {
      "ObjectId" : "c73ecb7949f1a6a9429df43177f06498337d2919",
      "LastModified" : "2018-11-04T19:38:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2012, Intel Corporation\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright notice, this\n\n#   list of conditions and the following disclaimer.\n\n# * Redistributions in binary form must reproduce the above copyright notice,\n\n#   this list of conditions and the following disclaimer in the documentation\n\n#   and/or other materials provided with the distribution.\n\n# * Neither the name of Intel Corporation nor the names of its contributors may\n\n#   be used to endorse or promote products derived from this software without\n\n#   specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n# Try to find Harfbuzz include and library directories.\n\n#\n\n# After successful discovery, this will set for inclusion where needed:\n\n# HARFBUZZ_INCLUDE_DIRS - containg the HarfBuzz headers\n\n# HARFBUZZ_LIBRARIES - containg the HarfBuzz library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindLib3MF.cmake" : {
      "ObjectId" : "4f41ccb0826d944baf433d551b354ed2af042b70",
      "LastModified" : "2019-03-12T22:41:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Try to find 3MF library and include path.\n\n# Once done this will define\n\n#\n\n# LIB3MF_FOUND\n\n# LIB3MF_CFLAGS\n\n# LIB3MF_LIBDIR\n\n# LIB3MF_INCLUDE_DIRS\n\n# LIB3MF_LIBRARIES\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Don't specify REQUIRED here in case pkg-config fails.\n\n# We still fall back to the rest of detection code here.\n\n# Travis CI Ubuntu Trusty environment has some issue with pkg-config\n\n# not finding the version.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Modules/FindLibZip.cmake" : {
      "ObjectId" : "f63b63cf847e8489bd80846becc190c68824f14b",
      "LastModified" : "2018-11-04T19:38:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Finds libzip.\n\n#\n\n# This module defines:\n\n# LIBZIP_INCLUDE_DIR_ZIP\n\n# LIBZIP_INCLUDE_DIR_ZIPCONF\n\n# LIBZIP_LIBRARY\n\n# LIBZIP_VERSION\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindOpenCSG.cmake" : {
      "ObjectId" : "5780e417bd560f39d65f7413cddb38e6a792e506",
      "LastModified" : "2018-11-04T19:38:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# version\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindQt5QScintilla.cmake" : {
      "ObjectId" : "16eb6445a3a0d80898f5e97e9f43566766745d94",
      "LastModified" : "2018-11-04T19:38:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# QScintilla is a port to Qt of Neil Hodgson's Scintilla C++ editor control\n\n# available at http://www.riverbankcomputing.com/software/qscintilla/\n\n#\n\n# The module defines the following variables:\n\n#  QT5QSCINTILLA_FOUND - the system has QScintilla\n\n#  QT5QSCINTILLA_INCLUDE_DIR - where to find qsciscintilla.h\n\n#  QT5QSCINTILLA_INCLUDE_DIRS - qscintilla includes\n\n#  QT5QSCINTILLA_LIBRARY - where to find the QScintilla library\n\n#  QT5QSCINTILLA_LIBRARIES - aditional libraries\n\n#  QT5QSCINTILLA_MAJOR_VERSION - major version\n\n#  QT5QSCINTILLA_MINOR_VERSION - minor version\n\n#  QT5QSCINTILLA_PATCH_VERSION - patch version\n\n#  QT5QSCINTILLA_VERSION_STRING - version (ex. 2.6.2)\n\n#  QT5QSCINTILLA_ROOT_DIR - root dir (ex. /usr/local)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2010-2013, Julien Schueller\n\n# All rights reserved.\n\n# \n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met: \n\n# \n\n# 1. Redistributions of source code must retain the above copyright notice, this\n\n#    list of conditions and the following disclaimer. \n\n# 2. Redistributions in binary form must reproduce the above copyright notice,\n\n#    this list of conditions and the following disclaimer in the documentation\n\n#    and/or other materials provided with the distribution. \n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n\n# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\n# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\n# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\n# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n\n# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\n# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The views and conclusions contained in the software and documentation are those\n\n# of the authors and should not be interpreted as representing official policies, \n\n# either expressed or implied, of the FreeBSD Project.\n\n#=============================================================================\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# version\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# check version\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#IF( QT5QSCINTILLA_FOUND )\n\n#                MESSAGE( STATUS \"Found QScintilla-Qt5 header files in ${QT5QSCINTILLA_INCLUDE_DIR}\")\n\n#                MESSAGE( STATUS \"Found QScintilla-Qt5 libraries: ${QT5QSCINTILLA_LIBRARY}\")\n\n#ENDIF(QT5QSCINTILLA_FOUND)\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# try to guess root dir from include dir\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# try to guess root dir from library dir\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "cmake/Modules/PkgConfigTools.cmake" : {
      "ObjectId" : "ab67c0b8f128fa9eea84d4743a747ee2085d5f12",
      "LastModified" : "2018-11-04T19:38:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use this to save the existing pkg-config settings\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use this to restore to the original pkg-config settings\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Modules/RegexUtils.cmake" : {
      "ObjectId" : "b59dfc340f524d25add382306ba143e662baabdb",
      "LastModified" : "2018-11-04T19:38:46Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Modules/info.cmake" : {
      "ObjectId" : "c3d3ed2d25da6daed595e20a56cb06620ae39c67",
      "LastModified" : "2019-03-12T22:41:04Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "common.pri" : {
      "ObjectId" : "1110757014fb00a0f7d19702ffe4647a2ba5ac47",
      "LastModified" : "2019-03-12T22:41:04Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Handle custom library location.\n\n# Used when manually installing 3rd party libraries\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Default to MacPorts on Mac OS X\n",
        "Line" : 14,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 2
    },
    "defaults.pri" : {
      "ObjectId" : "becb7ebf5dff29f77a980ccedf1c432f68bc8637",
      "LastModified" : "2019-03-12T22:41:04Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "flex.pri" : {
      "ObjectId" : "977888e27328c95e3accde114a839fa0b79d17e3",
      "LastModified" : "2019-03-12T22:41:04Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "info.pri" : {
      "ObjectId" : "84c50b1ba975c8d889fc22d7527ef2b655fa6e37",
      "LastModified" : "2019-03-12T22:41:04Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "mingw-cross-env.pri" : {
      "ObjectId" : "4084c41b0578602067c0b4de8187985e443a5327",
      "LastModified" : "2019-03-12T22:41:04Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# cross compilation unix->win32\n\n# To use static linking, pass CONFIG+=mingw-cross-env to qmake\n\n# To use shared linking, pass CONFIG+=mingw-cross-env-shared to qmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#eigen3\n",
        "Line" : 7,
        "CharPositionInLine" : 55
      },
      "CommentCount" : 2
    },
    "opengl.pri" : {
      "ObjectId" : "0a3d8d0cb7d8921e8426fa71cbcf5399f8ec5f0b",
      "LastModified" : "2019-03-12T22:41:04Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Prefer QOpenGLWidget for non-Windows platforms\n\n# To explicitly enable QOpenGLWidget: qmake CONFIG += qopenglwidget\n\n# To explicitly enable QGLWidget: qmake CONFIG += qglwidget\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# see http://fedoraproject.org/wiki/UnderstandingDSOLinkChange\n\n# and https://github.com/openscad/openscad/pull/119\n\n# ( QT += opengl does not automatically link glu on some DSO systems. )\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "openscad.pro" : {
      "ObjectId" : "bbbd143ccf8809b1e8cd4c2aafb5caee95a16525",
      "LastModified" : "2019-03-12T22:41:04Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Environment variables which can be set to specify library locations:\n\n# MPIRDIR\n\n# MPFRDIR\n\n# BOOSTDIR\n\n# CGALDIR\n\n# EIGENDIR\n\n# GLEWDIR\n\n# OPENCSGDIR\n\n# OPENSCAD_LIBRARIES\n\n#\n\n# qmake Variables to define the installation:\n\n#\n\n#   PREFIX defines the base installation folder\n\n#\n\n#   SUFFIX defines an optional suffix for the binary and the\n\n#   resource folder. E.g. using SUFFIX=-nightly will name the\n\n#   resulting binary openscad-nightly.\n\n#\n\n# Please see the 'Building' sections of the OpenSCAD user manual\n\n# for updated tips & workarounds.\n\n#\n\n# https://en.wikibooks.org/wiki/OpenSCAD_User_Manual\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Local settings are read from local.pri\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Auto-include config_<variant>.pri if the VARIANT variable is given on the\n\n# command-line, e.g. qmake VARIANT=mybuild\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If VERSION is not set, populate VERSION, VERSION_YEAR, VERSION_MONTH from system date\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# add CONFIG+=deploy to the qmake command-line to make a deployment build\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# add CONFIG+=idprefix to the qmake command-line to debug node ID's in csg output\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set same stack size for the linker and #define used in PlatformUtils.h\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# 8MB # github issue 116\n",
        "Line" : 103,
        "CharPositionInLine" : 20
      },
      "8" : {
        "Text" : "# needed to prevent compilation error on MSYS2:\n\n# as.exe: objects/cgalutils.o: too many sections (76541)\n\n# using -Wa,-mbig-obj did not help\n",
        "Line" : 114,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# FIXME: Can the lines below be removed in favour of the OPENSCAD_LIBDIR handling above?\n",
        "Line" : 127,
        "CharPositionInLine" : 3
      },
      "10" : {
        "Text" : "# Prevent LD_LIBRARY_PATH problems when running the openscad binary\n\n# on systems where uni-build-dependencies.sh was used.\n\n# Will not affect 'normal' builds.\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# need /lib64 beause GLEW installs itself there on 64 bit machines\n",
        "Line" : 142,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# See Dec 2011 OpenSCAD mailing list, re: CGAL/GCC bugs.\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# ignored before 4.8\n",
        "Line" : 150,
        "CharPositionInLine" : 55
      },
      "14" : {
        "Text" : "# Disable attributes warnings on MSYS/MXE due to gcc bug spamming the logs: Issue #2771\n",
        "Line" : 152,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# http://llvm.org/bugs/show_bug.cgi?id=9182\n",
        "Line" : 159,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# disable enormous amount of warnings about CGAL / boost / etc\n",
        "Line" : 161,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# gettext\n",
        "Line" : 165,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# might want to actually turn this on once in a while\n",
        "Line" : 167,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# force the use of outdated libraries\n",
        "Line" : 172,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Application configuration\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#Uncomment the following line to enable the QScintilla editor\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Make experimental features available\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# mingw has to come after other items so OBJECT_DIRS will work properly\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Qt5 removed access to the QMAKE_UIC variable, the following\n\n# way works for both Qt4 and Qt5\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# AST nodes\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Comment parser\n",
        "Line" : 271,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# CGAL\n",
        "Line" : 561,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# LodePNG\n",
        "Line" : 567,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ClipperLib\n",
        "Line" : 571,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# libtess2\n",
        "Line" : 575,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Run translation update scripts as last step after linking the target\n",
        "Line" : 687,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Create install targets for the languages defined in LINGUAS\n",
        "Line" : 690,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Use .extra and copy manually as the source path might not exist,\n\n# e.g. on a clean checkout. In that case qmake would not create\n\n# the needed targets in the generated Makefile.\n",
        "Line" : 696,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 34
    },
    "qt.pri" : {
      "ObjectId" : "5f3d3bbb3b673517f4a5107c7889b1424c2abffe",
      "LastModified" : "2019-03-12T22:41:04Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "scripts/examples-html/Makefile" : {
      "ObjectId" : "1ecd6e51adb44594f6a1bf9b33d8846e45a64aa3",
      "LastModified" : "2019-03-12T22:41:04Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#echo $(notdir $(patsubst %.scad,%.png,$<))\n",
        "Line" : 48,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "test-code/exportdxf.pro" : {
      "ObjectId" : "62c27347f50a92bebe6c8e6573873a905c1b5687",
      "LastModified" : "2019-03-12T22:41:04Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "217d4d8c57b2196040d90420036461c82a15ed0c",
      "LastModified" : "2019-04-13T19:32:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# instructions - see ../doc/testing.txt\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(DEBUG_OSCD 1) # print debug info during cmake\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Explicitly use new include policy to avoid globally shadowing included modules\n\n# http://www.cmake.org/cmake/help/cmake-2-8-docs.html#policy:CMP0017\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Needed for cmake < 2.8.3\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# MCAD\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Image comparison - expected test image vs actual generated image\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Imagemagick\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# cross-building depends on this\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# http://www.daniloaz.com/en/617/systems/high-cpu-load-when-converting-images-with-imagemagick\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# compare arguments taken from test_cmdline_tool.py\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Search for MCAD in correct place\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Platform specific settings\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#\n\n# GUI binary tests\n\n#\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#\n\n# Tags tests as disabled. This is more convenient than removing them manually\n\n# from the lists of filenames\n\n#\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#    message(\"Disabling ${TESTNAME}\")\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#\n\n# Tags tests as experimental. This will add all the --enable=<feature>\n\n# options for the tagged tests.\n\n#\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#    message(\"Marking as experimental ${TESTNAME}\")\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#\n\n# Tags the given tests as belonging to the given CONFIG, i.e. will\n\n# only be executed when run using ctest -C <CONFIG>\n\n#\n\n# Usage example: set_test_config(Heavy dumptest_testname opencsgtest_testname2)\n\n#\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Export to parent scope\n",
        "Line" : 143,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Export to parent scope\n",
        "Line" : 146,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "#\n\n# Returns a list of test configs \n\n#\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Convert to a format understood by add_test()\n",
        "Line" : 161,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Export to parent scope\n",
        "Line" : 163,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "#\n\n# Returns into the FULLNAME variable the global full test name (identifier) \n\n# given a test command and source filename\n\n#\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Test names cannot include spaces\n",
        "Line" : 175,
        "CharPositionInLine" : 47
      },
      "25" : {
        "Text" : "# Export to parent scope\n",
        "Line" : 177,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "#\n\n# Check if a test file is a 2D test\n\n#\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#\n\n# This functions adds cmd-line tests given files.\n\n#\n\n# Usage add_cmdline_test(testbasename [EXE <executable>] [ARGS <args to exe>]\n\n#                        [SCRIPT <script>]\n\n#                        [EXPECTEDDIR <shared dir>] SUFFIX <suffix> FILES <test files>)\n\n#\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# If sharing results with another test, pass on this to the python script\n",
        "Line" : 204,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# If no executable was specified, assume it was built by us and resides here\n",
        "Line" : 212,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# Add tests from args\n",
        "Line" : 216,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# Test names cannot include spaces\n",
        "Line" : 219,
        "CharPositionInLine" : 59
      },
      "32" : {
        "Text" : "# add global experimental options here\n",
        "Line" : 230,
        "CharPositionInLine" : 8
      },
      "33" : {
        "Text" : "# 2D tests should be viewed from the top, not an angle.\n",
        "Line" : 234,
        "CharPositionInLine" : 6
      },
      "34" : {
        "Text" : "# Handle configurations\n",
        "Line" : 241,
        "CharPositionInLine" : 6
      },
      "35" : {
        "Text" : "# The python script cannot extract the testname when given extra parameters\n",
        "Line" : 258,
        "CharPositionInLine" : 6
      },
      "36" : {
        "Text" : "# debug message\n\n#message(\"${TEST_FULLNAME} ${CONFVAL} ${PYTHON_EXECUTABLE} ${tests_SOURCE_DIR}/test_cmdline_tool.py --comparator=${COMPARATOR} -c ${IMAGE_COMPARE_EXECUTABLE} -s ${TESTCMD_SUFFIX} ${EXTRA_OPTIONS} ${TESTNAME_OPTION} ${FILENAME_OPTION} ${TESTCMD_EXE} ${TESTCMD_SCRIPT} \"${SCADFILE}\" ${CAMERA_OPTION} ${EXPERIMENTAL_OPTION} ${TESTCMD_ARGS}\")\n",
        "Line" : 263,
        "CharPositionInLine" : 6
      },
      "37" : {
        "Text" : "#\n\n# Usage add_failing_test(testbasename RETVAL <expected return value>\n\n#                        [EXE <executable>] [SCRIPT <script>] [ARGS <args to exe>]\n\n#                        FILES <test files>)\n\n#\n",
        "Line" : 271,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# If no executable was specified, assume it was built by us and resides here\n",
        "Line" : 282,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "# Add tests from args\n",
        "Line" : 286,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# Test names cannot include spaces\n",
        "Line" : 289,
        "CharPositionInLine" : 59
      },
      "41" : {
        "Text" : "# Handle configurations\n",
        "Line" : 294,
        "CharPositionInLine" : 6
      },
      "42" : {
        "Text" : "# The python script cannot extract the testname when given extra parameters\n",
        "Line" : 306,
        "CharPositionInLine" : 6
      },
      "43" : {
        "Text" : "# Subst files\n",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Find all scad files\n",
        "Line" : 339,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Issue #910\n",
        "Line" : 522,
        "CharPositionInLine" : 2
      },
      "46" : {
        "Text" : "# These don't output anything\n",
        "Line" : 543,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "# Not useful\n",
        "Line" : 551,
        "CharPositionInLine" : 2
      },
      "48" : {
        "Text" : "# these take too long, for little relative gain in testing\n",
        "Line" : 556,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "# z-fighting different on different machines\n",
        "Line" : 564,
        "CharPositionInLine" : 2
      },
      "50" : {
        "Text" : "# FIXME: This test illustrates a weakness in child() combined with modifiers.\n\n# Reenable it when this is improved\n",
        "Line" : 571,
        "CharPositionInLine" : 2
      },
      "51" : {
        "Text" : "# These tests only makes sense in OpenCSG mode\n",
        "Line" : 575,
        "CharPositionInLine" : 2
      },
      "52" : {
        "Text" : "# This test won't render anything meaningful in throwntogether mode\n",
        "Line" : 588,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "# The inf/nan tests fail when exporting CSG and rendering that output again\n\n# as currently inf/nan is written directly to the CSG file (e.g. r = inf)\n\n# which is not valid or even misleading in case a variable inf exists.\n\n# FIXME: define export behavior for inf/nan when exporting CSG files\n\n# These tests return error code 1.\n\n# FIXME: We should have a way of running these and verify the return code\n",
        "Line" : 591,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "# Triggers a floating point accuracy issue causing loaded .csg to\n\n# render slightly differently\n",
        "Line" : 601,
        "CharPositionInLine" : 2
      },
      "55" : {
        "Text" : "# 2D tests\n",
        "Line" : 610,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# No tests related to experimental features currently\n\n#experimental_tests()\n",
        "Line" : 615,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# Test config handling\n",
        "Line" : 618,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# Heavy tests are tests taking more than 10 seconds on a development computer\n",
        "Line" : 620,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# We know that we cannot import weakly manifold files into CGAL, so to make tests easier\n\n# to manage, don't try. Once we improve import, we can reenable this\n\n# Known good manifold files -> EXPORT3D_CGALCGAL_TEST_FILES\n\n# Known weak manifold files -> EXPORT3D_CGAL_TEST_FILES\n\n# Known non-manifold files -> EXPORT3D_TEST_FILES\n",
        "Line" : 670,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "#list(REMOVE_ITEM EXPORT3D_CGALCGAL_TEST_FILES\n\n#)\n\n#list(APPEND EXPORT3D_CGAL_TEST_FILES\n\n#)\n",
        "Line" : 676,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# Examples\n",
        "Line" : 706,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Workaround Gallium bugs\n",
        "Line" : 735,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# Set up custom commands to run before & after Ctest run.\n\n# 1. Start/stop Virtual Framebuffer for linux/bsd. 2. Pretty Print\n\n# Please see the CTestCustom.template file for more info. \n",
        "Line" : 742,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "#\n\n# Add tests\n\n#\n\n# Types of tests:\n\n# o echotest: Just record console output\n\n# o dumptest: Export .csg\n\n# o cgalpngtest: Export to PNG using --render\n\n# o opencsgtest: Export to PNG using OpenCSG\n\n# o throwntogethertest: Export to PNG using the Throwntogether renderer\n\n# o csgpngtest: 1) Export to .csg, 2) import .csg and export to PNG (--render)\n\n# o monotonepngtest: Same as cgalpngtest but with the \"Monotone\" color scheme\n\n# o stlpngtest: Export to STL, Re-import and render to PNG (--render)\n\n# o stlcgalpngtest: Export to STL, Re-import and render to PNG (--render=cgal)\n\n# o offpngtest: Export to OFF, Re-import and render to PNG (--render)\n\n# o offcgalpngtest: Export to STL, Re-import and render to PNG (--render=cgal)\n\n# o dxfpngtest: Export to DXF, Re-import and render to PNG (--render=cgal)\n\n#\n",
        "Line" : 764,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# generate a very large scad file which we would rather not commit to the source tree\n\n# this is for stress-testing the parser\n",
        "Line" : 790,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# FIXME: We don't actually need to compare the output of cgalstlsanitytest\n\n# with anything. It's self-contained and returns != 0 on error\n",
        "Line" : 810,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "#\n\n# Trivial Export/Import files\n\n# This sanity-checks bidirectional file format import/export\n\n#\n",
        "Line" : 827,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "#\n\n# Corner-case Export/Import tests\n\n#\n",
        "Line" : 845,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# Disabled for now, needs implementation of #420 to be stable\n\n# add_cmdline_test(stlexport EXE ${OPENSCAD_BINPATH} ARGS -o SUFFIX stl FILES ${EXPORT_STL_TEST_FILES})\n",
        "Line" : 851,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# stlpngtest: direct STL output, preview rendering\n",
        "Line" : 856,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# cgalstlpngtest: CGAL STL output, normal rendering\n",
        "Line" : 858,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# cgalstlcgalpngtest: CGAL STL output, CGAL rendering\n",
        "Line" : 860,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "#\n\n# Failing tests\n\n#\n",
        "Line" : 870,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# Hardwarning Test       \n",
        "Line" : 877,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# Verify that test framework is paying attention to alpha channel, issue 1492\n\n#add_cmdline_test(openscad-colorscheme-cornfield-alphafail EXE ${OPENSCAD_BINPATH} ARGS --colorscheme=Cornfield -o SUFFIX png FILES ${CMAKE_SOURCE_DIR}/../examples/Basics/logo.scad)\n",
        "Line" : 880,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# The \"expected image\" supplied for this \"alphafail\" test has the alpha channel for all background pixels cleared (a==0), when they should be opaque (a==1) for this colorscheme.  so if test framework is functioning properly then the image comparison should fail\n\n# Commented out because the master branch isn't capable of making the expected image yet. Also TEST_GENERATE=1 makes an expected image that makes the test fail.\n\n#set_property(TEST openscad-colorscheme-cornfield-alphafail_logo PROPERTY WILL_FAIL TRUE)\n",
        "Line" : 883,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "#\n\n# Customizer tests\n\n#\n",
        "Line" : 888,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# Tests using the actual OpenSCAD binary\n",
        "Line" : 905,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# non-ASCII filenames\n",
        "Line" : 907,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "# Variable override (-D arg)\n",
        "Line" : 912,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# FIXME - this breaks on older cmake that is very common 'in the wild' on linux\n\n# Override simple variable\n",
        "Line" : 914,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "# Image output parameters\n",
        "Line" : 923,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# Perspective gimbal cam\n",
        "Line" : 936,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# Perspective gimbal cam\n",
        "Line" : 941,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# Perspective gimbal cam\n",
        "Line" : 946,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# Perspective gimbal cam, viewall\n",
        "Line" : 951,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "# Perspective gimbal cam, viewall, autocenter, off-center\n",
        "Line" : 956,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "# Orthographic gimbal cam\n",
        "Line" : 961,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# Orthographic gimbal cam viewall\n",
        "Line" : 966,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "# Perspective vector cam\n",
        "Line" : 971,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "# Perspective vector cam\n",
        "Line" : 1001,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "# Perspective vector cam\n",
        "Line" : 1006,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "# Perspective vector cam viewall\n",
        "Line" : 1011,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "# Orthographic vector cam\n",
        "Line" : 1016,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "# Orthographic vector cam viewall\n",
        "Line" : 1021,
        "CharPositionInLine" : 0
      },
      "96" : {
        "Text" : "# View Options tests\n",
        "Line" : 1027,
        "CharPositionInLine" : 0
      },
      "97" : {
        "Text" : "# Colorscheme tests\n",
        "Line" : 1035,
        "CharPositionInLine" : 0
      },
      "98" : {
        "Text" : "#message(\"Available test configurations: ${TEST_CONFIGS}\")\n\n#foreach(CONF ${TEST_CONFIGS})\n\n#  message(\"${CONF}: ${${CONF}_TEST_CONFIG}\")\n\n#endforeach()\n",
        "Line" : 1061,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 99
    },
    "tests/CMakeParseArguments.cmake" : {
      "ObjectId" : "406780eb4b6c9fef76a485251c5f18a3ea020ff8",
      "LastModified" : "2019-03-12T22:41:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMAKE_PARSE_ARGUMENTS(<prefix> <options> <one_value_keywords> <multi_value_keywords> args...)\n\n#\n\n# CMAKE_PARSE_ARGUMENTS() is intended to be used in macros or functions for\n\n# parsing the arguments given to that macro or function.\n\n# It processes the arguments and defines a set of variables which hold the\n\n# values of the respective options.\n\n#\n\n# The <options> argument contains all options for the respective macro,\n\n# i.e. keywords which can be used when calling the macro without any value\n\n# following, like e.g. the OPTIONAL keyword of the install() command.\n\n#\n\n# The <one_value_keywords> argument contains all keywords for this macro\n\n# which are followed by one value, like e.g. DESTINATION keyword of the\n\n# install() command.\n\n#\n\n# The <multi_value_keywords> argument contains all keywords for this macro\n\n# which can be followed by more than one value, like e.g. the TARGETS or\n\n# FILES keywords of the install() command.\n\n#\n\n# When done, CMAKE_PARSE_ARGUMENTS() will have defined for each of the\n\n# keywords listed in <options>, <one_value_keywords> and\n\n# <multi_value_keywords> a variable composed of the given <prefix>\n\n# followed by \"_\" and the name of the respective keyword.\n\n# These variables will then hold the respective value from the argument list.\n\n# For the <options> keywords this will be TRUE or FALSE.\n\n#\n\n# All remaining arguments are collected in a variable\n\n# <prefix>_UNPARSED_ARGUMENTS, this can be checked afterwards to see whether\n\n# your macro was called with unrecognized parameters.\n\n#\n\n# As an example here a my_install() macro, which takes similar arguments as the\n\n# real install() command:\n\n#\n\n#   function(MY_INSTALL)\n\n#     set(options OPTIONAL FAST)\n\n#     set(oneValueArgs DESTINATION RENAME)\n\n#     set(multiValueArgs TARGETS CONFIGURATIONS)\n\n#     cmake_parse_arguments(MY_INSTALL \"${options}\" \"${oneValueArgs}\" \"${multiValueArgs}\" ${ARGN} )\n\n#     ...\n\n#\n\n# Assume my_install() has been called like this:\n\n#   my_install(TARGETS foo bar DESTINATION bin OPTIONAL blub)\n\n#\n\n# After the cmake_parse_arguments() call the macro will have set the following\n\n# variables:\n\n#   MY_INSTALL_OPTIONAL = TRUE\n\n#   MY_INSTALL_FAST = FALSE (this option was not used when calling my_install()\n\n#   MY_INSTALL_DESTINATION = \"bin\"\n\n#   MY_INSTALL_RENAME = \"\" (was not used)\n\n#   MY_INSTALL_TARGETS = \"foo;bar\"\n\n#   MY_INSTALL_CONFIGURATIONS = \"\" (was not used)\n\n#   MY_INSTALL_UNPARSED_ARGUMENTS = \"blub\" (no value expected after \"OPTIONAL\"\n\n#\n\n# You can the continue and process these variables.\n\n#\n\n# Keywords terminate lists of values, e.g. if directly after a one_value_keyword\n\n# another recognized keyword follows, this is interpreted as the beginning of\n\n# the new option.\n\n# E.g. my_install(TARGETS foo DESTINATION OPTIONAL) would result in\n\n# MY_INSTALL_DESTINATION set to \"OPTIONAL\", but MY_INSTALL_DESTINATION would\n\n# be empty and MY_INSTALL_OPTIONAL would be set to TRUE therefor.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2010 Alexander Neundorf <neundorf@kde.org>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# first set all result variables to empty/FALSE\n",
        "Line" : 84,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# now iterate over all arguments and fill the result variables\n",
        "Line" : 98,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# ... then this marks the end of the arguments belonging to this keyword\n",
        "Line" : 100,
        "CharPositionInLine" : 57
      },
      "5" : {
        "Text" : "# ... then this marks the end of the arguments belonging to this keyword\n",
        "Line" : 101,
        "CharPositionInLine" : 63
      },
      "6" : {
        "Text" : "# ... then this marks the end of the arguments belonging to this keyword\n",
        "Line" : 102,
        "CharPositionInLine" : 61
      },
      "7" : {
        "Text" : "# propagate the result variables to the caller:\n",
        "Line" : 132,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "tests/CMingw-cross-env.cmake" : {
      "ObjectId" : "50be4d05d72a16de70cebb37a27c221e668c7378",
      "LastModified" : "2019-03-12T22:41:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# CMake Toolchain file for cross compiling OpenSCAD tests linux->mingw-win32\n\n# --------------------------------------------------------------------------\n\n#\n\n# This CMake Toolchain file will cross-compile the regression test \n\n# programs for OpenSCAD, and generate a CTestTestfile.cmake\n\n#\n\n# The result will not be directly usable. Please see doc/testing.txt\n\n# for complete instructions for running the regression tests under Windows(TM) \n\n# \n\n# Prerequisites:\n\n# \n\n# Please see doc/testing.txt for pre-requisites.\n\n#\n\n# Usage:\n\n#\n\n# Please see doc/testing.txt for usage\n\n#\n\n# Please do not use this file directly unless you are experimenting. \n\n# This file is typically called from release-common.sh automatically, \n\n# not used directly by a human.\n\n#\n\n# Assuming you want to build 64bit:\n\n# \n\n# cd openscad\n\n# source scripts/setenv-mingw-xbuild.sh 64\n\n# cd openscad/tests && mkdir build-mingw64 && cd build-mingw64\n\n# export OPENSCADPATH=../../libraries # (to find MCAD for some tests)\n\n# cmake .. -DCMAKE_TOOLCHAIN_FILE=../CMingw-cross-env.cmake \\\n\n#          -DMINGW_CROSS_ENV_DIR=$MXEDIR \\\n\n#          -DMACHINE=x86_64-w64-mingw32\n\n#\n\n# For 32 bit, change '64' to '32' in setenv/mkdir and use this machine:\n\n#          -DMACHINE=i686-pc-mingw32\n\n#\n\n# make # (should proceed as normal.)\n\n#\n\n# See also:\n\n# \n\n# http://lists.gnu.org/archive/html/mingw-cross-env-list/2010-11/threads.html#00078\n\n#  (thread \"Qt with Cmake\")\n\n# http://lists.gnu.org/archive/html/mingw-cross-env-list/2011-01/threads.html#00012\n\n#  (thread \"Qt: pkg-config files?\")\n\n# http://mingw-cross-env.nongnu.org/#requirements\n\n# http://www.vtk.org/Wiki/CMake_Cross_Compiling\n\n# https://bitbucket.org/muellni/mingw-cross-env-cmake/src/2067fcf2d52e/src/cmake-1-toolchain-file.patch\n\n# http://code.google.com/p/qtlobby/source/browse/trunk/toolchain-mingw.cmake\n\n# http://gcc.gnu.org/onlinedocs/gcc-3.4.6/gcc/Link-Options.html\n\n# Makefile.Release generated by qmake \n\n# cmake's FindQt4.cmake & Qt4ConfigDependentSettings.cmake files\n\n# mingw-cross-env's qmake.conf and *.prl files\n\n# mingw-cross-env's pkg-config files in usr/${MACHINE}/lib/pkgconfig\n\n# (may have to add to env var PKG_CONFIG_PATH to find qt .pc files)\n\n# http://www.vtk.org/Wiki/CMake:How_To_Find_Libraries\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Notes: \n\n#\n\n# To debug the build process run \"make VERBOSE=1\". 'strace -f' is also useful. \n\n#\n\n# This file is actually called multiple times by cmake, so various 'if NOT set' \n\n# guards are used to keep programs from running twice.\n\n#\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Part 1: Skip imagemagick search.\n\n#\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Part 2. cross-compiler setup\n\n#\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Fix for finding PkgConfig: see https://github.com/mxe/mxe/issues/1023\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# Part 3. library settings for mingw-cross-env\n\n#\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# set( Boost_DEBUG TRUE ) # for debugging cmake's FindBoost, not boost itself\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# Qt4\n\n# \n\n# To workaround problems with CMake's FindQt4.cmake when combined with \n\n# mingw-cross-env (circa early 2012), we here instead use pkg-config. To \n\n# workaround Cmake's insertion of -bdynamic, we stick 'static' on the \n\n# end of QT_LIBRARIES\n\n#\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# called from CMakeLists.txt\n",
        "Line" : 124,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#\n\n# Part 4. -D definitions\n\n#\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# FindGLEW.cmake needs this\n",
        "Line" : 154,
        "CharPositionInLine" : 35
      },
      "11" : {
        "Text" : "# because qmake does it\n",
        "Line" : 157,
        "CharPositionInLine" : 31
      },
      "CommentCount" : 12
    },
    "tests/EnforceConfig.cmake" : {
      "ObjectId" : "8ef7be8d7436bf46dd695f351597c2670f0e6240",
      "LastModified" : "2019-03-12T22:41:04Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "version.pri" : {
      "ObjectId" : "30ff5c6b54f80cf8f40245c82ca414e6dbff43d8",
      "LastModified" : "2019-03-12T22:41:04Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# get VERSION from system date\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# \n\n# Windows XP date command only has one argument, /t\n\n# and it can print the date in various localized formats. \n\n# This code will detect MM/DD/YYYY, YYYY/MM/DD, and DD/MM/YYYY\n\n#\n",
        "Line" : 5,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# remove name of day\n",
        "Line" : 12,
        "CharPositionInLine" : 29
      },
      "3" : {
        "Text" : "# message(\"Assuming YYYY/MM/DD format\")\n",
        "Line" : 26,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# message(\"Assuming DD/MM/YYYY format\" $$DATE_X $$DATE_Y $$DATE_Z )\n",
        "Line" : 34,
        "CharPositionInLine" : 10
      },
      "5" : {
        "Text" : "# message(\"Assuming MM/DD/YYYY format\" $$DATE_X $$DATE_Y $$DATE_Z )\n",
        "Line" : 39,
        "CharPositionInLine" : 10
      },
      "6" : {
        "Text" : "# test1 and test2 both empty\n",
        "Line" : 45,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# isEmpty(TEST1)\n",
        "Line" : 48,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# message(\"YMD Version:\" $$VERSION)\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Unix/Mac \n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Split off patch level indicator\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Split version into Year Month [Day]\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Fix for problem with integers with leading zeros\n\n# being interpreted by C++ as octals. Now they're doubles.\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "win.pri" : {
      "ObjectId" : "b5db5157a34811a0aa54ddabc51cba19fc937456",
      "LastModified" : "2019-03-12T22:41:04Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# win32-specific MSVC compiler general settings\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#configure additional directories\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# don't know where the __WIN32__ is usually set\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# disable MSVC warnings that are of very low importance\n\n# disable warning about too long decorated names\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# CGAL casting int to bool\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# CGAL's unreferenced formal parameters\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# lexer uses strdup() & other POSIX stuff\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Treat WChar_t as a builtin type, allows Qt to call boost funcions\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# increases the number of sections in .obj file\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 9
    },
    "winconsole/winconsole.pro" : {
      "ObjectId" : "8b423a6a1144505680c611e9ccf94b453cd33789",
      "LastModified" : "2019-03-12T22:41:04Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Windows console issues workaround stub.\n\n#\n\n# This attempts to solve the problem of piping OpenSCAD under windows\n\n# command line (GUI mode programs in Windows dont allow this). We use\n\n# the 'devenv' solution, which means building two binaries:\n\n# openscad.exe, and openscad.com, the latter being a wrapper for the\n\n# former. See src/winconsole.c for more details.\n\n#\n\n# Qmake doesn't like building two binaries in the same directory so we\n\n# depend on release-common.sh to call qmake twice and package the file\n\n# properly\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# sets IMAGE_SUBSYSTEM_WINDOWS_CUI in binary\n",
        "Line" : 22,
        "CharPositionInLine" : 18
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "CMAKE" : 16,
    "QMAKE" : 18,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 4254
}