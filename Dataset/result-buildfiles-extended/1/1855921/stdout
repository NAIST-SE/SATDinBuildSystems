{
  "Repository" : "1855921",
  "Revision" : "HEAD",
  "ObjectId" : "b406f6029eee466b88a3734854d7acc33293c0d6",
  "CommitTime" : "2019-02-08T21:20:10Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "06d605bdeebfb67fc3d56fd73d5d888bb92f1571",
      "LastModified" : "2010-05-16T20:42:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake file for development of OLX\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Note: This must be a relative path because AUX_SOURCE_DIRECTORY would not work otherwise with CMake 2.4\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add debug info to release build in linker flags\n",
        "Line" : 14,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 3
    },
    "CMakeOlxCommon.cmake" : {
      "ObjectId" : "001f8afafe20df90a2439278c27741c848642a46",
      "LastModified" : "2019-02-07T00:00:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake common file for OpenLieroX\n\n# sets up the source lists and vars\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Policy CMP0011 was introduced in 2.6.3.\n\n# We cannot do if(POLCY CMP0011) as a check because 2.4 would fail then.\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# We explicitly want to export variables here.\n",
        "Line" : 13,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "# Platform specific things can be put here\n\n# Compilers and other specific variables can be found here:\n\n# http://www.cmake.org/Wiki/CMake_Useful_Variables\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#SET(BOOST_LINK_STATIC ON)\n",
        "Line" : 63,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Linux library as of now\n",
        "Line" : 67,
        "CharPositionInLine" : 20
      },
      "6" : {
        "Text" : "# We already have prebuilt HawkNL library\n",
        "Line" : 75,
        "CharPositionInLine" : 25
      },
      "7" : {
        "Text" : "# We already have prebuilt HawkNL library\n",
        "Line" : 84,
        "CharPositionInLine" : 26
      },
      "8" : {
        "Text" : "# commented out because only devs need these options anyway\n\n#MESSAGE( \"PCH = ${PCH} (Precompiled header, CMake 2.6 only)\" )\n\n#MESSAGE( \"ADVASSERT = ${ADVASSERT}\" )\n\n#MESSAGE( \"PYTHON_DED_EMBEDDED = ${PYTHON_DED_EMBEDDED}\" )\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# main includes\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# TODO: don't hardcode path here\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# TODO: Make this even more dynamic, search for the directory somehow? Like you can search for linking options with pkg-config?\n\n#Search for lua5.1 first\n",
        "Line" : 203,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "#On some systems, e.g. Fedora, it may be lua-5.1\n",
        "Line" : 209,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "#If not found, try \"lua\", but give a warning\n",
        "Line" : 216,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "#Set the header path, or display a warning if it doesn't exist\n",
        "Line" : 224,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "# hm, don't know, at least it works for me (ppc32/amd32)\n",
        "Line" : 234,
        "CharPositionInLine" : 41
      },
      "16" : {
        "Text" : "# debugging stuff for STLport\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Generic defines\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# _XBOX to link OpenAL statically\n",
        "Line" : 275,
        "CharPositionInLine" : 100
      },
      "19" : {
        "Text" : "# as long as we dont have breakpad, this doesnt make sense\n",
        "Line" : 284,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# By default GDB uses STABS and produces 300Mb exe - DWARF will produce 40Mb and no line numbers, -g2 will give 170Mb\n",
        "Line" : 285,
        "CharPositionInLine" : 33
      },
      "21" : {
        "Text" : "#Always optimize these files - they make debug build unusable otherwise\n",
        "Line" : 294,
        "CharPositionInLine" : 1
      },
      "22" : {
        "Text" : "# SDL libs\n",
        "Line" : 299,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# seems this is the way for Debian:\n",
        "Line" : 338,
        "CharPositionInLine" : 1
      },
      "24" : {
        "Text" : "# and this on newer CMake (>=2.6?)\n",
        "Line" : 343,
        "CharPositionInLine" : 1
      },
      "25" : {
        "Text" : "#Search for lua5.1 first because newer versions seem to be incompatible\n",
        "Line" : 406,
        "CharPositionInLine" : 91
      },
      "26" : {
        "Text" : "#On some systems, e.g. Fedora, it may be lua-5.1\n",
        "Line" : 408,
        "CharPositionInLine" : 93
      },
      "27" : {
        "Text" : "#On Arch Linux pkg-config wants lua51 even though the result is still -llua5.1 -lm...\n",
        "Line" : 411,
        "CharPositionInLine" : 91
      },
      "28" : {
        "Text" : "#Search for lua if neither found\n",
        "Line" : 415,
        "CharPositionInLine" : 89
      },
      "29" : {
        "Text" : "#Set default if nothing works, although this will likely lead to errors\n",
        "Line" : 419,
        "CharPositionInLine" : 24
      },
      "30" : {
        "Text" : "#SET(LIBS ${LIBS} \"-framework GD\")\n",
        "Line" : 442,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 31
    },
    "PCHSupport_26.cmake" : {
      "ObjectId" : "83e3c55ecc16798aafd0a827828a14e33267eb96",
      "LastModified" : "2010-01-21T17:25:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find precompiled headers support for GCC 3.4 and 4.x\n\n# Once done this will define:\n\n#\n\n# Variable:\n\n#   PCHSupport_FOUND\n\n#\n\n# Macro:\n\n#   ADD_PRECOMPILED_HEADER  _targetName _input  _dowarn\n\n#   ADD_PRECOMPILED_HEADER_TO_TARGET _targetName _input _pch_output_to_use _dowarn\n\n#   ADD_NATIVE_PRECOMPILED_HEADER _targetName _input _dowarn\n\n#   GET_NATIVE_PRECOMPILED_HEADER _targetName _input\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#MESSAGE(\"GCC Version: ${gcc_compiler_version}\")\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# for experimental msvc support\n",
        "Line" : 32,
        "CharPositionInLine" : 29
      },
      "3" : {
        "Text" : "#STRING(TOUPPER \"CMAKE_CXX_FLAGS_${CMAKE_BUILD_TYPE}\" _flags_var_name)\n\n#SET(${_out_compile_flags} ${${_flags_var_name}} )\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#MESSAGE(\"_out_compile_flags1 ${${_out_compile_flags}}\" )\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#hack to get rid of nasty warning\n",
        "Line" : 48,
        "CharPositionInLine" : 56
      },
      "6" : {
        "Text" : "## TODO ... ? or does it work out of the box \n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#MESSAGE(\"DIRINC ${DIRINC}\" )\n",
        "Line" : 63,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#MESSAGE(\"_out_compile_flags2 ${${_out_compile_flags}}\" )\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#MESSAGE(\"_directory_flags ${_directory_flags}\" )\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# remove leading space in compiler argument\n",
        "Line" : 101,
        "CharPositionInLine" : 5
      },
      "11" : {
        "Text" : "#/out:${_output}\n",
        "Line" : 120,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# for use with distcc and gcc >4.0.1 if preprocessed files are accessible\n\n# on all remote machines set\n\n# PCH_ADDITIONAL_COMPILER_FLAGS to -fpch-preprocess\n\n# if you want warnings for invalid header files (which is very inconvenient\n\n# if you have different versions of the headers for different build types\n\n# you may set _pch_dowarn\n",
        "Line" : 133,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# to do: test whether compiler flags match between target  _targetName\n\n# and _pch_output_to_use\n",
        "Line" : 161,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "#   MESSAGE(\"Add flags ${_target_cflags} to ${_targetName} \" )\n",
        "Line" : 173,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "#MESSAGE(\"_compile_FLAGS: ${_compile_FLAGS}\")\n\n#message(\"COMMAND ${CMAKE_CXX_COMPILER}\t${_compile_FLAGS} -x c++-header -o ${_output} ${_input}\")\n",
        "Line" : 225,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# ensure same directory! Required by gcc\n",
        "Line" : 230,
        "CharPositionInLine" : 84
      },
      "17" : {
        "Text" : "#message(\"_command  ${_input} ${_output}\")\n",
        "Line" : 234,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "#message(${_input} )\n\n#message(\"_output ${_output}\")\n",
        "Line" : 237,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Generates the use of precompiled in a target,\n\n# without using depency targets (2 extra for each target)\n\n# Using Visual, must also add ${_targetName}_pch to sources\n\n# Not needed by Xcode\n",
        "Line" : 251,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Use of cxx extension for generated files (as Qt does)\n",
        "Line" : 264,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# Check if contents is the same, if not rewrite\n\n# todo\n",
        "Line" : 267,
        "CharPositionInLine" : 3
      },
      "22" : {
        "Text" : "# Auto include the precompile (useful for moc processing, since the use of \n\n# precompiled is specified at the target level\n\n# and I don't want to specifiy /F- for each moc/res/ui generated files (using Qt)\n",
        "Line" : 286,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "#also inlude ${oldProps} to have the same compile options \n",
        "Line" : 298,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# For Xcode, cmake needs my patch to process\n\n# GCC_PREFIX_HEADER and GCC_PRECOMPILE_PREFIX_HEADER as target properties\n",
        "Line" : 304,
        "CharPositionInLine" : 3
      },
      "25" : {
        "Text" : "# When buiding out of the tree, precompiled may not be located\n\n# Use full path instead.\n",
        "Line" : 312,
        "CharPositionInLine" : 3
      },
      "26" : {
        "Text" : "#Fallback to the \"old\" precompiled suppport\n\n#ADD_PRECOMPILED_HEADER(${_targetName} ${_input} ${_dowarn})\n",
        "Line" : 321,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 27
    },
    "build/Xcode/freealut/include/Makefile.am" : {
      "ObjectId" : "9423e7b28b78df8e196fa92310614fc69e924332",
      "LastModified" : "2010-01-21T17:25:20Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "build/Xcode/freealut/src/Makefile.am" : {
      "ObjectId" : "8bd9a2782e6e1a16e51d037b05acca0a2c7fdee2",
      "LastModified" : "2010-01-21T17:25:20Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# The following files should be in our source distribution in addition to the\n\n# standard ones included by automake itself:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We want to build a libalut library with libtool.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# libalut consists of the followin sources and internal headers:\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# We use sin and floor, so we might need -lm, autoconf takes care of this.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The following libtool flag is neccessary for building DLLs on Windows.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Append -version-info for correct library versioning with libtool.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Specifying the following path is needed to find <AL/alut.h>.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "libs/breakpad/Makefile.am" : {
      "ObjectId" : "6a6ca3fc0c7b7e936f7648ffc8ea575c900c69ed",
      "LastModified" : "2011-12-25T03:52:49Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2011, Google Inc.\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are\n\n# met:\n\n#\n\n#     * Redistributions of source code must retain the above copyright\n\n# notice, this list of conditions and the following disclaimer.\n\n#     * Redistributions in binary form must reproduce the above\n\n# copyright notice, this list of conditions and the following disclaimer\n\n# in the documentation and/or other materials provided with the\n\n# distribution.\n\n#     * Neither the name of Google Inc. nor the names of its\n\n# contributors may be used to endorse or promote products derived from\n\n# this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This allows #includes to be relative to src/\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Specify include paths for ac macros\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Documentation\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Libraries\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Programs\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## Tests\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Non-installables\n",
        "Line" : 783,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## Additional files to be included in a source distribution\n\n##\n\n## find src/client src/common src/processor/testdata src/tools \\\n##     -type f \\! -path '*/.svn/*' -print | sort | \\\n##     sed -e s/'^\\(.*\\)$'/'\\t\\1 \\\\'/\n",
        "Line" : 824,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "libs/breakpad/src/third_party/libdisasm/Makefile.am" : {
      "ObjectId" : "bd3129e1adf9d7ccf2e6b646378f72f50b6bfe99",
      "LastModified" : "2011-12-25T02:49:33Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Cheat to get non-autoconf swig into tarball,\n\n# even if it doesn't build by default.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "libs/pstreams/Makefile" : {
      "ObjectId" : "c9776dfe386e371fbe677d3d784035f4695accbb",
      "LastModified" : "2011-12-25T02:49:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# $Id: Makefile,v 1.24 2005/06/11 09:38:40 redi Exp $\n\n# PStreams Makefile\n\n# Copyright (C) Jonathan Wakely\n\n#\n\n# This file is part of PStreams.\n\n# \n\n# PStreams is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU Lesser General Public License as\n\n# published by the Free Software Foundation; either version 2.1 of\n\n# the License, or (at your option) any later version.\n\n# \n\n# PStreams is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU Lesser General Public License for more details.\n\n# \n\n# You should have received a copy of the GNU Lesser General Public License\n\n# along with PStreams; if not, write to the Free Software Foundation, Inc.,\n\n# 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO configure script (allow doxgenating of EVISCERATE functions)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2,
      "Errorlog" : "line 60:14 token recognition error at: '\"s/^(<p>Version) [0-9\\.]*(<\\/p>)/\\1'\nline 60:57 token recognition error at: '\\2'\nline 60:60 token recognition error at: '\" $@\\n\\nChangeLog:\\n\\t@if [ -f CVS/Root ] ; then cvs2cl.pl ; fi\\n\\ndist: pstreams-$(VERS).tar.gz pstreams-docs-$(VERS).tar.gz\\n\\npstreams-$(VERS).tar.gz: pstream.h $(GENERATED_FILES)\\n\\t@ln -s . pstreams-$(VERS)\\n\\t@tar -czvf $@ `cat MANIFEST`\\n\\t@rm pstreams-$(VERS)\\n\\npstreams-docs-$(VERS).tar.gz: docs\\n\\t@ln -s doc/html pstreams-docs-$(VERS)\\n\\t@tar -czvhf $@ pstreams-docs-$(VERS)\\n\\t@rm pstreams-docs-$(VERS)\\n\\nTODO : pstream.h mainpage.html test_pstreams.cc\\n\\t@grep -nH TODO $^ | sed -e 's@ *// *@@' > $@\\n\\nclean:\\n\\t@rm -f  test_minimum test_pstreams\\n\\ninstall:\\n\\t@install -d $(INSTALL_PREFIX)/include/pstreams\\n\\t@install -Cv -m0644 pstream.h $(INSTALL_PREFIX)/include/pstreams\\n\\n.PHONY: TODO test ChangeLog\\n\\n\u0000'\n"
    },
    "src/breakpad/breakpad.pro" : {
      "ObjectId" : "7b42fdedaa3e0e7dab1ea6fb2f9f022d367e4c61",
      "LastModified" : "2011-12-25T02:49:33Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "src/gusanos/BUILD" : {
      "ObjectId" : "bd9edc1e94af3a7bc93f4ac17d8fca102d180e9f",
      "LastModified" : "2011-12-25T02:49:33Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "tools/FontGenerator/CMakeLists.txt" : {
      "ObjectId" : "bd524d3a44442212a9d336004999651359f7b1e1",
      "LastModified" : "2011-12-25T02:49:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/GameCompiler/CMakeLists.txt" : {
      "ObjectId" : "b761c781e812fc0b64101e6d7be02b5d40ebd1c5",
      "LastModified" : "2011-12-25T02:49:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake file for GameCompiler\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# main includes\n\n#ADD_DEFINITIONS(\"-I-\")\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO: don't hardcode path here\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#ADD_DEFINITIONS(\"-DLX_VERSION=\\\\\\\"${OLXVER}\\\\\\\"\") # This will trigger whole project rebuild\n\n# Escaping backslashes overkill, yay.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "tools/GameDecompiler/CMakeLists.txt" : {
      "ObjectId" : "7d22b0d1926e71ab2ed4875493b8f7dd19033823",
      "LastModified" : "2011-12-25T02:49:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake file for GameCompiler\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tools/MinidumpExtractInfo/CMakeLists.txt" : {
      "ObjectId" : "8f0e61d213c64ecf8991b36b7932623d9878905d",
      "LastModified" : "2011-12-25T02:49:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake file for GameCompiler\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 7,
    "QMAKE" : 1,
    "MAKEFILE" : 1,
    "AUTOMAKE" : 4,
    "BAZEL" : 1
  },
  "ElapsedTime" : 11477
}