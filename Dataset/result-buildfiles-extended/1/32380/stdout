{
  "Repository" : "32380",
  "Revision" : "HEAD",
  "ObjectId" : "693d91cd49fda3e728b59e6885bea8d7b01958ef",
  "CommitTime" : "2019-04-17T21:59:39Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "f64f96d1cae3b8efe7cbe4aaa894568a6dec2c3e",
      "LastModified" : "2019-02-25T20:26:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Limit framework build to Xcode generator\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# for a framework build on macOS, use:\n\n# cmake -DBUILD_FRAMEWORK=ON -Bbuild -H. -GXcode && cmake --build build\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "## Disallow in-source builds, as CMake generated make files can collide with autotools ones\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## HarfBuzz build configurations\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#set (HB_HAVE_GOBJECT ON)\n\n#set (HB_HAVE_INTROSPECTION ON)\n",
        "Line" : 76,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# We need PYTHON_EXECUTABLE to be set for running the tests...\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Functions and headers\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Similar to AC_CHECK_FUNCS of autotools\n",
        "Line" : 101,
        "CharPositionInLine" : 20
      },
      "8" : {
        "Text" : "## Detect if we are running inside a distribution or regular repository folder\n\n# if (EXISTS \"${PROJECT_SOURCE_DIR}/ChangeLog\")\n\n#   # perhaps we are on dist directory\n\n#   set (IN_HB_DIST TRUE)\n\n#   #set (HB_VERSION_H \"${PROJECT_SOURCE_DIR}/src/hb-version.h\")\n\n# endif ()\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## Extract variables from Makefile files\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# http://stackoverflow.com/a/27630120\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#if (IN_HB_DIST)\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#else ()\n\n#  add_prefix_to_list(HB_BASE_RAGEL_GENERATED_sources \"${PROJECT_BINARY_DIR}/src/\")\n\n#endif ()\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## Define ragel tasks\n\n# if (NOT IN_HB_DIST)\n\n#  foreach (ragel_output IN ITEMS ${HB_BASE_RAGEL_GENERATED_sources})\n\n#    string(REGEX MATCH \"([^/]+)\\\\.hh\" temp ${ragel_output})\n\n#    set (target_name ${CMAKE_MATCH_1})\n\n#    add_custom_command(OUTPUT ${ragel_output}\n\n#      COMMAND ${RAGEL} -G2 -o ${ragel_output} ${PROJECT_SOURCE_DIR}/src/${target_name}.rl -I ${PROJECT_SOURCE_DIR} ${ARGN}\n\n#      DEPENDS ${PROJECT_SOURCE_DIR}/src/${target_name}.rl\n\n#    )\n\n#    add_custom_target(harfbuzz_${target_name} DEPENDS ${PROJECT_BINARY_DIR}/src/${target_name})\n\n#  endforeach ()\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#  mark_as_advanced(RAGEL)\n\n# endif ()\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "## Generate hb-version.h\n\n# if (NOT IN_HB_DIST)\n\n#  set (HB_VERSION_H_IN \"${PROJECT_SOURCE_DIR}/src/hb-version.h.in\")\n\n#  set (HB_VERSION_H \"${PROJECT_BINARY_DIR}/src/hb-version.h\")\n\n#  set_source_files_properties(\"${HB_VERSION_H}\" PROPERTIES GENERATED true)\n\n#  configure_file(\"${HB_VERSION_H_IN}\" \"${HB_VERSION_H}.tmp\" @ONLY)\n\n#  execute_process(COMMAND \"${CMAKE_COMMAND}\" -E copy_if_different\n\n#    \"${HB_VERSION_H}.tmp\"\n\n#    \"${HB_VERSION_H}\"\n\n#  )\n\n#  file(REMOVE \"${HB_VERSION_H}.tmp\")\n\n# endif ()\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## Define sources and headers of the project\n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#${HB_VERSION_H}\n",
        "Line" : 251,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "## Find and include needed header folders and libraries\n",
        "Line" : 261,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# So check_funcs can find its headers\n",
        "Line" : 275,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# https://github.com/WebKit/webkit/blob/master/Source/cmake/FindGLIB.cmake\n",
        "Line" : 309,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# https://github.com/WebKit/webkit/blob/master/Source/cmake/FindICU.cmake\n",
        "Line" : 330,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# Apple Advanced Typography\n",
        "Line" : 348,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# Use the hints from glib-2.0.pc to find glib-mkenums\n",
        "Line" : 403,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# In Visual Studio builds, shebang lines are not supported\n\n# in the standard cmd.exe shell that we use, so we need to\n\n# first determine whether glib-mkenums is a Python or PERL\n\n# script\n",
        "Line" : 412,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "## Atomic ops availability detection\n",
        "Line" : 505,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "## Define harfbuzz library\n",
        "Line" : 537,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "## Define harfbuzz-subset library\n",
        "Line" : 541,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Make symbols link locally\n",
        "Line" : 553,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# Make sure we don't link to libstdc++\n",
        "Line" : 561,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# libm\n",
        "Line" : 563,
        "CharPositionInLine" : 48
      },
      "31" : {
        "Text" : "# No threadsafe statics as we do it ourselves\n",
        "Line" : 570,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "## Define harfbuzz-gobject library\n",
        "Line" : 583,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# On Windows, g-ir-scanner requires a DLL build in order for it to work\n",
        "Line" : 604,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Note that since we already enable HB_HAVE_GOBJECT\n\n# we would already have PYTHON_EXECUTABLE handy\n",
        "Line" : 626,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# We need to account for the varying output directories\n\n# when we build using Visual Studio projects\n",
        "Line" : 633,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# Get the CFlags that we used to build HarfBuzz/HarfBuzz-GObject\n",
        "Line" : 641,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# Get the other dependent libraries we used to build HarfBuzz/HarfBuzz-GObject\n",
        "Line" : 647,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "# We don't want the .lib extension here...\n",
        "Line" : 650,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "# Nasty issue: We need to make drive letters lower case,\n\n# otherwise g-ir-scanner won't like it and give us a bunch\n\n# of invalid items and unresolved types...\n",
        "Line" : 665,
        "CharPositionInLine" : 6
      },
      "40" : {
        "Text" : "# Finally, build the introspection files...\n",
        "Line" : 686,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "## Additional framework build configs\n",
        "Line" : 735,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "## Additional harfbuzz build artifacts\n",
        "Line" : 749,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# https://github.com/WebKit/webkit/blob/master/Source/cmake/FindCairo.cmake\n",
        "Line" : 751,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "## Install\n",
        "Line" : 778,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "## src/ executables\n",
        "Line" : 846,
        "CharPositionInLine" : 2
      },
      "46" : {
        "Text" : "# test can not be used as a valid executable name on cmake, lets special case it\n",
        "Line" : 850,
        "CharPositionInLine" : 6
      },
      "47" : {
        "Text" : "## Tests\n",
        "Line" : 858,
        "CharPositionInLine" : 2
      },
      "48" : {
        "Text" : "# generate harfbuzz.def after build completion\n",
        "Line" : 861,
        "CharPositionInLine" : 6
      },
      "49" : {
        "Text" : "# ugly hack\n",
        "Line" : 868,
        "CharPositionInLine" : 89
      },
      "50" : {
        "Text" : "# Needs to come last so that variables defined above are passed to\n\n# subdirectories.\n",
        "Line" : 891,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 51
    },
    "Makefile.am" : {
      "ObjectId" : "f9f6e36306fb907fddc54f4d18297b87ab98e366",
      "LastModified" : "2019-03-26T20:44:39Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# ChangeLog generation\n\n#\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Release engineering\n\n#\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# TODO: Copy infrastructure from cairo\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# TAR_OPTIONS is not set as env var for 'make dist'.  How to fix that?\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Clean up any sticky bits we may inherit from parent dir\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "docs/Makefile.am" : {
      "ObjectId" : "9b54b40e141ce09609cf0293b036a19591c64248",
      "LastModified" : "2019-03-26T20:44:39Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We require automake 1.6 at least.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This is a blank Makefile.am for using gtk-doc.\n\n# Copy this to your project's API docs directory and modify the variables to\n\n# suit your project. See the GTK+ Makefiles in gtk+/docs/reference for examples\n\n# of using the various options.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The name of the module, e.g. 'glib'.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Uncomment for versioned docs and specify the version of the module, e.g. '2'.\n\n#DOC_MODULE_VERSION=$(HB_VERSION_MAJOR)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The top-level SGML file. You can change this if you want to.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Directories containing the source code.\n\n# gtk-doc will search all .c and .h files beneath these paths\n\n# for inline comments documenting functions and macros.\n\n# e.g. DOC_SOURCE_DIR=$(top_srcdir)/gtk $(top_srcdir)/gdk\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Extra options to pass to gtkdoc-scangobj. Not normally needed.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Extra options to supply to gtkdoc-scan.\n\n# e.g. SCAN_OPTIONS=--deprecated-guards=\"GTK_DISABLE_DEPRECATED\"\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Header files or dirs to ignore when scanning. Use base file/dir names\n\n# e.g. IGNORE_HFILES=gtkdebug.h gtkintl.h private_code\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Extra options to supply to gtkdoc-mkdb.\n\n# e.g. MKDB_OPTIONS=--xml-mode --output-format=xml\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Extra options to supply to gtkdoc-mktmpl\n\n# e.g. MKTMPL_OPTIONS=--only-section-tmpl\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Extra options to supply to gtkdoc-mkhtml\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Extra options to supply to gtkdoc-fixref. Not normally needed.\n\n# e.g. FIXXREF_OPTIONS=--extra-dir=../gdk-pixbuf/html --extra-dir=../gdk/html\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Used for dependencies. The docs will be rebuilt if any of these change.\n\n# e.g. HFILE_GLOB=$(top_srcdir)/gtk/*.h\n\n# e.g. CFILE_GLOB=$(top_srcdir)/gtk/*.c\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Extra header to include when scanning, which are not under DOC_SOURCE_DIR\n\n# e.g. EXTRA_HFILES=$(top_srcdir}/contrib/extra.h\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Images to copy into HTML directory.\n\n# e.g. HTML_IMAGES=$(top_srcdir)/gtk/stock-icons/stock_about_24.png\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Extra SGML files that are included by $(DOC_MAIN_SGML_FILE).\n\n# e.g. content_files=running.sgml building.sgml changes-2.0.sgml\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# SGML files where gtk-doc abbrevations (#GtkWidget) are expanded\n\n# These files must be listed here *and* in content_files\n\n# e.g. expand_content_files=running.sgml\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# CFLAGS and LDFLAGS for compiling gtkdoc-scangobj with your library.\n\n# Only needed if you are using gtkdoc-scangobj to dynamically query widget\n\n# signals and properties.\n\n# e.g. GTKDOC_CFLAGS=-I$(top_srcdir) -I$(top_builddir) $(GTK_DEBUG_FLAGS)\n\n# e.g. GTKDOC_LIBS=$(top_builddir)/gtk/$(gtktargetlib)\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# This includes the standard gtk-doc make rules, copied by gtkdocize.\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Other files to distribute\n\n# e.g. EXTRA_DIST += version.xml.in\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Files not to distribute\n\n# for --rebuild-types in $(SCAN_OPTIONS), e.g. $(DOC_MODULE).types\n\n# for --rebuild-sections in $(SCAN_OPTIONS) e.g. $(DOC_MODULE)-sections.txt\n\n#DISTCLEANFILES +=\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Comment this out if you don't want 'make check' to test you doc status\n\n# and run some sanity checks\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#TESTS = $(GTKDOC_CHECK)\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "replace-enum-strings.cmake" : {
      "ObjectId" : "42fdbff900206aa00719a63087c89a10debb429a",
      "LastModified" : "2017-10-18T15:48:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake script to replace items\r\n\n# in sources generated by glib-mkenums\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/Makefile.am" : {
      "ObjectId" : "66a3b317760a5a26479b4093b1cd450bdcf144ab",
      "LastModified" : "2019-03-29T04:26:50Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Convenience targets:\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# XXX\n\n# The following creates a recursive dependency on FreeType if FreeType is\n\n# built with HarfBuzz support enabled.  Newer pkg-config handles that just\n\n# fine but pkg-config 0.26 as shipped in Ubuntu 14.04 crashes.  Remove\n\n# in a year or two, or otherwise work around it...\n\n#HBDEPS   += $(FREETYPE_DEPS)\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Put the library together\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Use a C linker for GCC, not C++; Don't link to libstdc++\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# For check-symbols.sh\n",
        "Line" : 240,
        "CharPositionInLine" : 20
      },
      "6" : {
        "Text" : "# We decided to add ragel-generated files to git...\n\n#MAINTAINERCLEANFILES += $(RAGEL_GENERATED)\n",
        "Line" : 303,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# HAVE_CAIRO_FT\n\n# HAVE_FREETYPE\n",
        "Line" : 349,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# What does the 0 mean anyway?!\n",
        "Line" : 419,
        "CharPositionInLine" : 38
      },
      "CommentCount" : 9
    },
    "src/hb-ucdn/Makefile.am" : {
      "ObjectId" : "73b5502547780c42487bed2474e456519039652a",
      "LastModified" : "2017-10-18T15:48:11Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "d2b199428466f9a1f54612e5ab71ec8f5ea6bf23",
      "LastModified" : "2019-03-26T20:44:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/Makefile.am" : {
      "ObjectId" : "66b3e6e2e462d583f2675f88b59aab26ffa4cd29",
      "LastModified" : "2019-03-26T20:44:39Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Convenience targets:\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "test/api/CMakeLists.txt" : {
      "ObjectId" : "0c7337cb5a25e4adfb68220956cbdb32ed26b425",
      "LastModified" : "2019-03-26T20:44:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/api/Makefile.am" : {
      "ObjectId" : "67d66e16d2c7b759fc90e79654cebca4686be59a",
      "LastModified" : "2019-03-26T20:44:39Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Convenience targets:\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The auto-generated link rule somehow includes CFLAGS as well.  Without\n\n# it, pthread link fails, because, who knows why, $PTHREAD_LIBS is empty.\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# HAVE_FREETYPE\n",
        "Line" : 105,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# Tests for header compilation\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Default test running environment\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# check-tool: Run tests under $(TOOL)\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# TODO: The following check does not fail if valgrind finds error.  It should.\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# check-symbols: Finds untested API symbols\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# !HAVE_GLIB\n",
        "Line" : 195,
        "CharPositionInLine" : 5
      },
      "10" : {
        "Text" : "# HAVE_GLIB\n",
        "Line" : 200,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 11
    },
    "test/fuzzing/CMakeLists.txt" : {
      "ObjectId" : "577d13ceaa0312bd05bdaeab9184fec92385b6d4",
      "LastModified" : "2019-03-26T20:44:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO: enable these two\n\n#extract_make_variable (FUZZING_CPPFLAGS ${MAKEFILEAM}) # extracting regex fail\n\n#add_executable (hb-shape-fuzzer # it should be run only after ragel execution\n\n#  ${project_sources} ${project_extra_sources} ${project_headers}\n\n#  ${hb_shape_fuzzer_SOURCES})\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "test/fuzzing/Makefile.am" : {
      "ObjectId" : "a77df7061e49eeeab6dfe47605743193b813e02f",
      "LastModified" : "2019-03-26T20:44:39Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Convenience targets:\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "test/shaping/CMakeLists.txt" : {
      "ObjectId" : "8e33edeec0e3655127a16b9511e7881c19c9338b",
      "LastModified" : "2019-03-26T20:44:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/shaping/Makefile.am" : {
      "ObjectId" : "66272da8e0fda76bc566aa2ae0a0a6f3b9f69eb1",
      "LastModified" : "2019-03-26T20:44:39Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Convenience targets:\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO Figure out Python stuff\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "test/shaping/data/Makefile.am" : {
      "ObjectId" : "01f6c5a32c12c795a5da5473ab415cabddf985f5",
      "LastModified" : "2019-03-26T20:44:39Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Convenience targets:\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "test/shaping/data/aots/Makefile.am" : {
      "ObjectId" : "3b1faee5f885f5f1fdb6b2ca0a5e3a91dd6229ec",
      "LastModified" : "2019-03-26T20:44:39Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Convenience targets:\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "test/shaping/data/in-house/Makefile.am" : {
      "ObjectId" : "8a2a07657115d05f3422e5e770ad31ac9b805523",
      "LastModified" : "2019-03-26T20:44:39Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Convenience targets:\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "test/shaping/data/text-rendering-tests/Makefile.am" : {
      "ObjectId" : "cad03580f940673c923aa2c56c598d000c57674f",
      "LastModified" : "2019-03-26T20:44:39Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Convenience targets:\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "test/subset/CMakeLists.txt" : {
      "ObjectId" : "af2b41ab4a99c60ce6472b54029f515fa9a058ba",
      "LastModified" : "2019-03-26T20:44:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/subset/Makefile.am" : {
      "ObjectId" : "1673cfbd168d022de7913ab7806a86dea45c578a",
      "LastModified" : "2019-03-26T20:44:39Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Convenience targets:\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "test/subset/data/Makefile.am" : {
      "ObjectId" : "06771205539ab8ebfb0cefc242c16d60dce22766",
      "LastModified" : "2019-03-26T20:44:39Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Convenience targets:\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "util/Makefile.am" : {
      "ObjectId" : "e24a6f3dcdc84c86ceb701e7f750c861d70c44c3",
      "LastModified" : "2019-03-26T20:44:39Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Convenience targets:\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# HAVE_CAIRO_FT\n\n# HAVE_FREETYPE\n",
        "Line" : 45,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# HAVE_GLIB\n",
        "Line" : 60,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "#if HAVE_FONTCONFIG\n\n#hb_fc_list_SOURCES = \\\n#\thb-fc.cc \\\n#\thb-fc.h \\\n#\thb-fc-list.c \\\n#\t$(NULL)\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#hb_fc_list_LDADD = \\\n#\t$(LDADD) \\\n#\t$(FONTCONFIG_LIBS) \\\n#\t$(NULL)\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#bin_PROGRAMS += hb-fc-list\n\n#endif # HAVE_FONTCONFIG\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    }
  },
  "FileTypes" : {
    "CMAKE" : 7,
    "AUTOMAKE" : 15
  },
  "ElapsedTime" : 2942
}