{
  "Repository" : "2389412",
  "Revision" : "HEAD",
  "ObjectId" : "3d4e412694359f826757b0ca71dea184ff00b457",
  "CommitTime" : "2019-04-16T14:36:14Z",
  "Files" : {
    "ext/drampower/test/libdrampowertest/Makefile" : {
      "ObjectId" : "d7f76a2c4687919dcccb220737d5d129b2e91083",
      "LastModified" : "2017-11-16T16:39:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (c) 2012-2014, TU Delft\n\n# Copyright (c) 2012-2014, TU Eindhoven\n\n# Copyright (c) 2012-2014, TU Kaiserslautern\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are\n\n# met:\n\n#\n\n# 1. Redistributions of source code must retain the above copyright\n\n# notice, this list of conditions and the following disclaimer.\n\n#\n\n# 2. Redistributions in binary form must reproduce the above copyright\n\n# notice, this list of conditions and the following disclaimer in the\n\n# documentation and/or other materials provided with the distribution.\n\n#\n\n# 3. Neither the name of the copyright holder nor the names of its\n\n# contributors may be used to endorse or promote products derived from\n\n# this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n\n# IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED\n\n# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A\n\n# PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\n# TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\n# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\n# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\n# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\n# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n# Authors: Matthias Jung, Omar Naji, Sven Goossens\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Optimization flags. Usually you should not optimize until you have finished\n\n# debugging, except when you want to detect dead code.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Debugging flags.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Common warning flags shared by both C and C++.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Sum up the flags.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Name of the generated binary.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "ext/dsent/CMakeLists.txt" : {
      "ObjectId" : "555606c861cf5940bff05674040ba470cfc01607",
      "LastModified" : "2017-11-16T16:39:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2014 Mark D. Hill and David A. Wood\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are\n\n# met: redistributions of source code must retain the above copyright\n\n# notice, this list of conditions and the following disclaimer;\n\n# redistributions in binary form must reproduce the above copyright\n\n# notice, this list of conditions and the following disclaimer in the\n\n# documentation and/or other materials provided with the distribution;\n\n# neither the name of the copyright holders nor the names of its\n\n# contributors may be used to endorse or promote products derived from\n\n# this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# find out all the file that need to be compiled\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add the library\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# add the binary tree to the search path for include files\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "ext/fputils/Makefile.am" : {
      "ObjectId" : "c8aaac410d14e5468b796bc67fae5de068b4779d",
      "LastModified" : "2017-11-16T16:39:19Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "ext/fputils/tests/Makefile.am" : {
      "ObjectId" : "6faffead2281308a58f4d9df52a74290e92783d2",
      "LastModified" : "2017-11-16T16:39:19Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "ext/googletest/googlemock/CMakeLists.txt" : {
      "ObjectId" : "beb259a2e9dbb5dcb50f61c7a779f563528983f6",
      "LastModified" : "2018-12-06T11:52:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# CMake build script for Google Mock.\n\n#\n\n# To run the tests for Google Mock itself on Linux, use 'make test' or\n\n# ctest.  You can select which tests to run using 'ctest -R regex'.\n\n# For more options, run 'ctest --help'.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BUILD_SHARED_LIBS is a standard CMake variable, but we declare it here to\n\n# make it prominent in the GUI.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# A directory to find Google Test sources.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Defines pre_project_set_up_hermetic_build() and set_up_hermetic_build().\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Google Test also calls hermetic setup functions from add_subdirectory,\n\n# although its changes will not affect things at the current scope.\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "########################################################################\n\n#\n\n# Project-wide settings\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Name of the project.\n\n#\n\n# CMake files in this project can refer to the root source directory\n\n# as ${gmock_SOURCE_DIR} and to the root binary directory as\n\n# ${gmock_BINARY_DIR}.\n\n# Language \"C\" is required for find_package(Threads).\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Instructs CMake to process Google Test's CMakeLists.txt and add its\n\n# targets to the current scope.  We are placing Google Test's binary\n\n# directory in a subdirectory of our own as VC compilation may break\n\n# if they are the same (the default).\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Although Google Test's CMakeLists.txt calls this function, the\n\n# changes there don't affect the current scope.  Therefore we have to\n\n# call it again here.\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# from ${gtest_dir}/cmake/internal_utils.cmake\n",
        "Line" : 56,
        "CharPositionInLine" : 30
      },
      "10" : {
        "Text" : "# Adds Google Mock's and Google Test's header directories to the search path.\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# This directory is needed to build directly from Google\n\n# Test sources.\n",
        "Line" : 62,
        "CharPositionInLine" : 20
      },
      "12" : {
        "Text" : "# Summary of tuple support for Microsoft Visual Studio:\n\n# Compiler    version(MS)  version(cmake)  Support\n\n# ----------  -----------  --------------  -----------------------------\n\n# <= VS 2010  <= 10        <= 1600         Use Google Tests's own tuple.\n\n# VS 2012     11           1700            std::tr1::tuple + _VARIADIC_MAX=10\n\n# VS 2013     12           1800            std::tr1::tuple\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "########################################################################\n\n#\n\n# Defines the gmock & gmock_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Google Mock libraries.  We build them using more strict warnings than what\n\n# are used for other targets, to ensure that Google Mock can be compiled by\n\n# a user aggressive about warnings.\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# If the CMake version supports it, attach header directory information\n\n# to the targets for when we are part of a parent build (ie being pulled\n\n# in via add_subdirectory() rather than being a standalone build).\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "########################################################################\n\n#\n\n# Install rules\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "########################################################################\n\n#\n\n# Google Mock's own tests.\n\n#\n\n# You can skip this section if you aren't interested in testing\n\n# Google Mock itself.\n\n#\n\n# The tests are not built by default.  To build them, set the\n\n# gmock_build_tests option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgmock_build_tests=ON flag when running cmake.\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# This must be set in the root directory for the tests to be run by\n\n# 'make test' or ctest.\n",
        "Line" : 123,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "############################################################\n\n# C++ tests built with standard compiler flags.\n",
        "Line" : 127,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# gmock_all_test is commented to save time building and running tests.\n\n# Uncomment if necessary.\n\n# cxx_test(gmock_all_test gmock_main)\n",
        "Line" : 150,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "############################################################\n\n# C++ tests built with non-standard compiler flags.\n",
        "Line" : 154,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# 1600 is Visual Studio 2010.\n",
        "Line" : 163,
        "CharPositionInLine" : 43
      },
      "23" : {
        "Text" : "# Visual Studio 2010, 2012, and 2013 define symbols in std::tr1 that\n\n# conflict with our own definitions. Therefore using our own tuple does not\n\n# work on those compilers.\n",
        "Line" : 164,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# Tests that a binary can be built with Google Mock as a shared library.  On\n\n# some system configurations, it may not possible to run the binary without\n\n# knowing more details about the system configurations. We do not try to run\n\n# this binary. To get a more robust shared library coverage, configure with\n\n# -DBUILD_SHARED_LIBS=ON.\n",
        "Line" : 183,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "############################################################\n\n# Python tests.\n",
        "Line" : 194,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 26
    },
    "ext/googletest/googlemock/Makefile.am" : {
      "ObjectId" : "9adbc5163dd7191a14a887a384fb5d6d2956b44d",
      "LastModified" : "2018-12-06T11:52:57Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Automake file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Nonstandard package files for distribution.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We may need to build our internally packaged gtest. If so, it will be\n\n# included in the 'subdirs' variable.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This is generated by the configure script, so clean it for distribution.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# We define the global AM_CPPFLAGS as everything we compile includes from these\n\n# directories.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Modifies compiler and linker flags for pthreads compatibility.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build rules for libraries.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Build rules for tests. Automake's naming for some of these variables isn't\n\n# terribly obvious, so this is a brief reference:\n\n#\n\n# TESTS -- Programs run automatically by \"make check\"\n\n# check_PROGRAMS -- Programs built by \"make check\" but not necessarily run\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# This exercises all major components of Google Mock.  It also\n\n# verifies that libgmock works.\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# This tests using Google Mock in multiple translation units.  It also\n\n# verifies that libgmock_main and libgmock work.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Tests that fused gmock files compile and work.\n",
        "Line" : 81,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Google Mock source files that we don't compile directly.\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# C++ tests that we don't compile using autotools.\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Python tests, which we don't run using autotools.\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Nonstandard package files for distribution.\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Pump scripts for generating Google Mock headers.\n\n# TODO(chandlerc@google.com): automate the generation of *.h from *.h.pump.\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Script for fusing Google Mock and Google Test source files.\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# The Google Mock Generator tool from the cppclean project.\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Script for diagnosing compiler errors in programs that use Google\n\n# Mock.\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# CMake scripts.\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Microsoft Visual Studio 2005 projects.\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Microsoft Visual Studio 2010 projects.\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# gmock_test.cc does not really depend on files generated by the\n\n# fused-gmock-internal rule.  However, gmock_test.o does, and it is\n\n# important to include test/gmock_test.cc as part of this rule in order to\n\n# prevent compiling gmock_test.o until all dependent files have been\n\n# generated.\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# TODO(vladl@google.com): Find a way to add Google Tests's sources here.\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Death tests may produce core dumps in the build directory. In case\n\n# this happens, clean them to keep distcleancheck happy.\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Disables 'make install' as installing a compiled version of Google\n\n# Mock can lead to undefined behavior due to violation of the\n\n# One-Definition Rule.\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 26
    },
    "ext/googletest/googlemock/make/Makefile" : {
      "ObjectId" : "7c13e05fa961dd3a37ee05def12de08ce0e86a88",
      "LastModified" : "2018-12-06T11:52:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# A sample Makefile for building both Google Mock and Google Test and\n\n# using them in user tests.  This file is self-contained, so you don't\n\n# need to use the Makefile in Google Test's source tree.  Please tweak\n\n# it to suit your environment and project.  You may want to move it to\n\n# your project's root directory.\n\n#\n\n# SYNOPSIS:\n\n#\n\n#   make [all]  - makes everything.\n\n#   make TARGET - makes the given target.\n\n#   make clean  - removes all files generated by make.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Please tweak the following variable definitions as needed by your\n\n# project, except GMOCK_HEADERS and GTEST_HEADERS, which you can use\n\n# in your own targets but shouldn't modify.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Points to the root of Google Test, relative to where this file is.\n\n# Remember to tweak this if you move this file, or if you want to use\n\n# a copy of Google Test at a different location.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Points to the root of Google Mock, relative to where this file is.\n\n# Remember to tweak this if you move this file.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Where to find user code.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Flags passed to the preprocessor.\n\n# Set Google Test and Google Mock's header directories as system\n\n# directories, such that the compiler doesn't generate warnings in\n\n# these headers.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Flags passed to the C++ compiler.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# All tests produced by this Makefile.  Remember to add new tests you\n\n# created to the list.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# All Google Test headers.  Usually you shouldn't change this\n\n# definition.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# All Google Mock headers. Note that all Google Test headers are\n\n# included here too, as they are #included by Google Mock headers.\n\n# Usually you shouldn't change this definition.\t\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# House-keeping build targets.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Builds gmock.a and gmock_main.a.  These libraries contain both\n\n# Google Mock and Google Test.  A test should link with either gmock.a\n\n# or gmock_main.a, depending on whether it defines its own main()\n\n# function.  It's fine if your test only uses features from Google\n\n# Test (and not Google Mock).\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Usually you shouldn't tweak such internal variables, indicated by a\n\n# trailing _.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# For simplicity and to avoid depending on implementation details of\n\n# Google Mock and Google Test, the dependencies specified below are\n\n# conservative and not optimized.  This is fine as Google Mock and\n\n# Google Test compile fast and for ordinary users their source rarely\n\n# changes.\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Builds a sample test.\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "ext/googletest/googletest/CMakeLists.txt" : {
      "ObjectId" : "621d0f0421543eba41e1d69f497814104bb9c6a7",
      "LastModified" : "2018-12-06T11:52:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# CMake build script for Google Test.\n\n#\n\n# To run the tests for Google Test itself on Linux, use 'make test' or\n\n# ctest.  You can select which tests to run using 'ctest -R regex'.\n\n# For more options, run 'ctest --help'.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BUILD_SHARED_LIBS is a standard CMake variable, but we declare it here to\n\n# make it prominent in the GUI.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# When other libraries are using a shared version of runtime libraries,\n\n# Google Test also has to use one.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Defines pre_project_set_up_hermetic_build() and set_up_hermetic_build().\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "########################################################################\n\n#\n\n# Project-wide settings\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Name of the project.\n\n#\n\n# CMake files in this project can refer to the root source directory\n\n# as ${gtest_SOURCE_DIR} and to the root binary directory as\n\n# ${gtest_BINARY_DIR}.\n\n# Language \"C\" is required for find_package(Threads).\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define helper functions and macros used by Google Test.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Defined in internal_utils.cmake.\n",
        "Line" : 62,
        "CharPositionInLine" : 30
      },
      "8" : {
        "Text" : "# Where Google Test's .h files can be found.\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Where Google Test's libraries can be found.\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Summary of tuple support for Microsoft Visual Studio:\n\n# Compiler    version(MS)  version(cmake)  Support\n\n# ----------  -----------  --------------  -----------------------------\n\n# <= VS 2010  <= 10        <= 1600         Use Google Tests's own tuple.\n\n# VS 2012     11           1700            std::tr1::tuple + _VARIADIC_MAX=10\n\n# VS 2013     12           1800            std::tr1::tuple\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "########################################################################\n\n#\n\n# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Google Test libraries.  We build them using more strict warnings than what\n\n# are used for other targets, to ensure that gtest can be compiled by a user\n\n# aggressive about warnings.\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# If the CMake version supports it, attach header directory information\n\n# to the targets for when we are part of a parent build (ie being pulled\n\n# in via add_subdirectory() rather than being a standalone build).\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "########################################################################\n\n#\n\n# Install rules\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "########################################################################\n\n#\n\n# Samples on how to link user tests with gtest or gtest_main.\n\n#\n\n# They are not built by default.  To build them, set the\n\n# gtest_build_samples option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_samples=ON flag when running cmake.\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "########################################################################\n\n#\n\n# Google Test's own tests.\n\n#\n\n# You can skip this section if you aren't interested in testing\n\n# Google Test itself.\n\n#\n\n# The tests are not built by default.  To build them, set the\n\n# gtest_build_tests option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_tests=ON flag when running cmake.\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# This must be set in the root directory for the tests to be run by\n\n# 'make test' or ctest.\n",
        "Line" : 143,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "############################################################\n\n# C++ tests built with standard compiler flags.\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "############################################################\n\n# C++ tests built with non-standard compiler flags.\n",
        "Line" : 178,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 181,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# 1600 is Visual Studio 2010.\n",
        "Line" : 210,
        "CharPositionInLine" : 43
      },
      "22" : {
        "Text" : "# Visual Studio 2010, 2012, and 2013 define symbols in std::tr1 that\n\n# conflict with our own definitions. Therefore using our own tuple does not\n\n# work on those compilers.\n",
        "Line" : 211,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "############################################################\n\n# Python tests.\n",
        "Line" : 225,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Visual Studio .NET 2003 does not support STL with exceptions disabled.\n",
        "Line" : 231,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# 1310 is Visual Studio .NET 2003\n",
        "Line" : 232,
        "CharPositionInLine" : 46
      },
      "26" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 268,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 27
    },
    "ext/googletest/googletest/Makefile.am" : {
      "ObjectId" : "29797e4e9de4e1d5e5f93bba14288de87f623946",
      "LastModified" : "2018-12-06T11:52:57Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Automake file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Nonstandard package files for distribution\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# gtest source files that we don't compile directly.  They are\n\n# #included by gtest-all.cc.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Sample files that we don't compile.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# C++ test files that we don't compile directly.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Python tests that we don't run.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# CMake script\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# MSVC project files\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# xcode project files\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# xcode sample files\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# C++Builder project files\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Distribute and install M4 macro\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# We define the global AM_CPPFLAGS as everything we compile includes from these\n\n# directories.\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Modifies compiler and linker flags for pthreads compatibility.\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Build rules for libraries.\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Bulid rules for samples and tests. Automake's naming for some of\n\n# these variables isn't terribly obvious, so this is a brief\n\n# reference:\n\n#\n\n# TESTS -- Programs run automatically by \"make check\"\n\n# check_PROGRAMS -- Programs built by \"make check\" but not necessarily run\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# A simple sample on using gtest.\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Another sample.  It also verifies that libgtest works.\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# This tests most constructs of gtest and verifies that libgtest_main\n\n# and libgtest work.\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Tests that fused gtest files compile and work.\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Build rules for putting fused Google Test files into the distribution\n\n# package. The user can also create those files by manually running\n\n# scripts/fuse_gtest_files.py.\n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Death tests may produce core dumps in the build directory. In case\n\n# this happens, clean them to keep distcleancheck happy.\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Disables 'make install' as installing a compiled version of Google\n\n# Test can lead to undefined behavior due to violation of the\n\n# One-Definition Rule.\n",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "ext/googletest/googletest/cmake/internal_utils.cmake" : {
      "ObjectId" : "777b91ed4b8caa226ea55cfa61fe7ec433ffb452",
      "LastModified" : "2018-12-06T11:52:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Defines functions and macros useful for building Google Test and\n\n# Google Mock.\n\n#\n\n# Note:\n\n#\n\n# - This file will be run twice when building Google Mock (once via\n\n#   Google Test's CMakeLists.txt, and once via Google Mock's).\n\n#   Therefore it shouldn't have any side effects other than defining\n\n#   the functions and macros.\n\n#\n\n# - The functions/macros defined in this file may depend on Google\n\n#   Test and Google Mock's option() definitions, and thus must be\n\n#   called *after* the options have been defined.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Tweaks CMake's default compiler/linker settings to suit Google Test's needs.\n\n#\n\n# This must be a macro(), as inside a function string() can only\n\n# update variables in the function scope.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For MSVC, CMake sets certain flags to defaults we want to override.\n\n# This replacement code is taken from sample in the CMake Wiki at\n\n# http://www.cmake.org/Wiki/CMake_FAQ#Dynamic_Replace.\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# When Google Test is built as a shared library, it should also use\n\n# shared runtime libraries.  Otherwise, it may end up with multiple\n\n# copies of runtime library data in different modules, resulting in\n\n# hard-to-find crashes. When it is built as a static library, it is\n\n# preferable to use CRT as static libraries, as we don't have to rely\n\n# on CRT DLLs being available. CMake always defaults to using shared\n\n# CRT libraries, so we override that default here.\n",
        "Line" : 28,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# We prefer more strict warning checking for building Google Test.\n\n# Replaces /W3 with /W4 in defaults.\n",
        "Line" : 38,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Defines the compiler/linker flags used to build Google Test and\n\n# Google Mock.  You can tweak these definitions to suit your need.  A\n\n# variable's value is empty before it's explicitly assigned to.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Defines CMAKE_USE_PTHREADS_INIT and CMAKE_THREAD_LIBS_INIT.\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Newlines inside flags variables break CMake's NMake generator.\n\n# TODO(vladl@google.com): Add -RTCs and -RTCu to debug builds.\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# 1400 is Visual Studio 2005\n",
        "Line" : 59,
        "CharPositionInLine" : 33
      },
      "9" : {
        "Text" : "# Suppress spurious warnings MSVC 7.1 sometimes issues.\n\n# Forcing value to bool.\n",
        "Line" : 60,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# Copy constructor and assignment operator could not be generated.\n",
        "Line" : 63,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# Compatibility warnings not applicable to Google Test.\n\n# Resolved overload was found by argument-dependent lookup.\n",
        "Line" : 65,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# 1500 is Visual Studio 2008\n",
        "Line" : 69,
        "CharPositionInLine" : 33
      },
      "13" : {
        "Text" : "# Conditional expression is constant.\n\n# When compiling with /W4, we get several instances of C4127\n\n# (Conditional expression is constant). In our code, we disable that\n\n# warning on a case-by-case basis. However, on Visual Studio 2005,\n\n# the warning fires on std::list. Therefore on that compiler and earlier,\n\n# we disable the warning project-wide.\n",
        "Line" : 70,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# 1700 is Visual Studio 2012.\n",
        "Line" : 78,
        "CharPositionInLine" : 39
      },
      "15" : {
        "Text" : "# Suppress \"unreachable code\" warning on VS 2012 and later.\n\n# http://stackoverflow.com/questions/3232669 explains the issue.\n",
        "Line" : 79,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# 1900 is Visual Studio 2015\n",
        "Line" : 83,
        "CharPositionInLine" : 42
      },
      "17" : {
        "Text" : "# BigObj required for tests.\n",
        "Line" : 84,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "# Until version 4.3.2, GCC doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 97,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Sun Pro doesn't provide macros to indicate whether exceptions and\n\n# RTTI are enabled, so we define GTEST_HAS_* explicitly.\n",
        "Line" : 105,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# CMake 2.8 changes Visual Age's compiler ID to \"XL\".\n",
        "Line" : 111,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Until version 9.0, Visual Age doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 114,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# RTTI can not be disabled in HP aCC compiler.\n",
        "Line" : 122,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# The pthreads library is available and allowed.\n",
        "Line" : 126,
        "CharPositionInLine" : 32
      },
      "24" : {
        "Text" : "# For building gtest's own tests and samples.\n",
        "Line" : 132,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# For building the gtest libraries.\n",
        "Line" : 140,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# type can be either STATIC or SHARED to denote a static or shared library.\n\n# ARGN refers to additional arguments after 'cxx_flags'.\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "########################################################################\n\n#\n\n# Helper functions for creating build targets.\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# cxx_executable_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ executable that depends on the given libraries and\n\n# is built from the given source files with the given compiler flags.\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# To support mixing linking in static and dynamic libraries, link each\n\n# library in with an extra call to target_link_libraries.\n",
        "Line" : 191,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# cxx_executable(name dir lib srcs...)\n\n#\n\n# creates a named target that depends on the given libs and is built\n\n# from the given source files.  dir/name.cc is implicitly included in\n\n# the source file list.\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Sets PYTHONINTERP_FOUND and PYTHON_EXECUTABLE.\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# cxx_test_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ test that depends on the given libs and is built\n\n# from the given source files with the given compiler flags.\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# cxx_test(name libs srcs...)\n\n#\n\n# creates a named test target that depends on the given libs and is\n\n# built from the given source files.  Unlike cxx_test_with_flags,\n\n# test/name.cc is already implicitly included in the source file list.\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# py_test(name)\n\n#\n\n# creates a Python test with the given name whose main module is in\n\n# test/name.py.  It does nothing if Python is not installed.\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# We are not supporting Python tests on Linux yet as they consider\n\n# all Linux environments to be google3 and try to use google3 features.\n",
        "Line" : 235,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# ${CMAKE_BINARY_DIR} is known at configuration time, so we can\n\n# directly bind it from cmake. ${CTEST_CONFIGURATION_TYPE} is known\n\n# only at ctest runtime (by calling ctest -c <Configuration>), so\n\n# we have to escape $ to delay variable substitution here.\n",
        "Line" : 238,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 38
    },
    "ext/googletest/googletest/make/Makefile" : {
      "ObjectId" : "9ac74493ba55246597e90b898fae847ae358eab5",
      "LastModified" : "2018-12-06T11:52:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# A sample Makefile for building Google Test and using it in user\n\n# tests.  Please tweak it to suit your environment and project.  You\n\n# may want to move it to your project's root directory.\n\n#\n\n# SYNOPSIS:\n\n#\n\n#   make [all]  - makes everything.\n\n#   make TARGET - makes the given target.\n\n#   make clean  - removes all files generated by make.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Please tweak the following variable definitions as needed by your\n\n# project, except GTEST_HEADERS, which you can use in your own targets\n\n# but shouldn't modify.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Points to the root of Google Test, relative to where this file is.\n\n# Remember to tweak this if you move this file.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Where to find user code.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Flags passed to the preprocessor.\n\n# Set Google Test's header directory as a system directory, such that\n\n# the compiler doesn't generate warnings in Google Test headers.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Flags passed to the C++ compiler.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# All tests produced by this Makefile.  Remember to add new tests you\n\n# created to the list.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# All Google Test headers.  Usually you shouldn't change this\n\n# definition.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# House-keeping build targets.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Builds gtest.a and gtest_main.a.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Usually you shouldn't tweak such internal variables, indicated by a\n\n# trailing _.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# For simplicity and to avoid depending on Google Test's\n\n# implementation details, the dependencies specified below are\n\n# conservative and not optimized.  This is fine as Google Test\n\n# compiles fast and for ordinary users its source rarely changes.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Builds a sample test.  A test should link with either gtest.a or\n\n# gtest_main.a, depending on whether it defines its own main()\n\n# function.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "ext/googletest/googletest/scripts/test/Makefile" : {
      "ObjectId" : "cdff584637b7a6e9df1fa43ce8f588c43815e561",
      "LastModified" : "2018-12-06T11:52:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# A Makefile for fusing Google Test and building a sample test against it.\n\n#\n\n# SYNOPSIS:\n\n#\n\n#   make [all]  - makes everything.\n\n#   make TARGET - makes the given target.\n\n#   make check  - makes everything and runs the built sample test.\n\n#   make clean  - removes all files generated by make.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Points to the root of fused Google Test, relative to where this file is.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Paths to the fused gtest files.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Where to find the sample test.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Where to find gtest_main.cc.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Flags passed to the preprocessor.\n\n# We have no idea here whether pthreads is available in the system, so\n\n# disable its use.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Flags passed to the C++ compiler.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "ext/nomali/Makefile" : {
      "ObjectId" : "171ce266856db182c053d5377c17eabfbd2519cf",
      "LastModified" : "2018-12-06T11:52:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2014-2015 ARM Limited\n\n# All rights reserved\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n\n# Authors: Andreas Sandberg\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Default targets\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Test targets\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Dependency includes\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Files/directories to remove in the clean target\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Include dependencies\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "ext/pybind11/CMakeLists.txt" : {
      "ObjectId" : "4280ba742d3ef19a72ed7d8cd7db19adbdfbc866",
      "LastModified" : "2018-12-06T11:52:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt -- Build system for the pybind11 modules\n\n#\n\n# Copyright (c) 2015 Wenzel Jakob <wenzel@inf.ethz.ch>\n\n#\n\n# All rights reserved. Use of this source code is governed by a\n\n# BSD-style license that can be found in the LICENSE file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# cmake warns if loaded from a min-3.0-required parent dir, so silence the warning:\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# CMake versions < 3.4.0 do not support try_compile/pthread checks without C as active language.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Check if pybind11 is being used directly or via add_subdirectory\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Cache variables so pybind11_add_module can be used in parent projects\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# NB: when adding a header don't forget to also add it to setup.py\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# extract project version from source\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# CMake >= 3.0\n",
        "Line" : 94,
        "CharPositionInLine" : 42
      },
      "8" : {
        "Text" : "# Build an interface library target:\n",
        "Line" : 95,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# to match exported target\n",
        "Line" : 97,
        "CharPositionInLine" : 50
      },
      "10" : {
        "Text" : "# GNUInstallDirs \"DATADIR\" wrong here; CMake search path wants \"share\".\n",
        "Line" : 122,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Remove CMAKE_SIZEOF_VOID_P from ConfigVersion.cmake since the library does\n\n# not depend on architecture specific settings or libraries.\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 12
    },
    "ext/pybind11/tests/CMakeLists.txt" : {
      "ObjectId" : "25e06662c8e7da8c307811df6cc0bd33d6fd0a60",
      "LastModified" : "2018-12-06T11:52:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt -- Build system for the pybind11 test suite\n\n#\n\n# Copyright (c) 2015 Wenzel Jakob <wenzel@inf.ethz.ch>\n\n#\n\n# All rights reserved. Use of this source code is governed by a\n\n# BSD-style license that can be found in the LICENSE file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We're being loaded directly, i.e. not via add_subdirectory, so make this\n\n# work as its own project and load the pybind11Config to get the tools we need\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Full set of test files (you can override these; see below)\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Invoking cmake with something like:\n\n#     cmake -DPYBIND11_TEST_OVERRIDE=\"test_callbacks.cpp;test_picking.cpp\" ..\n\n# lets you override the tests that get compiled and run.  You can restore to all tests with:\n\n#     cmake -DPYBIND11_TEST_OVERRIDE= ..\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Contains the set of test files that require pybind11_cross_module_tests to be\n\n# built; if none of these are built (i.e. because TEST_OVERRIDE is used and\n\n# doesn't include them) the second module doesn't get built.\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Check if Eigen is available; if not, remove from PYBIND11_TEST_FILES (but\n\n# keep it in PYBIND11_PYTEST_FILES, so that we get the \"eigen is not installed\"\n\n# skip message).\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Try loading via newer Eigen's Eigen3Config first (bypassing tools/FindEigen3.cmake).\n\n# Eigen 3.3.1+ exports a cmake 3.0+ target for handling dependency requirements, but also\n\n# produces a fatal error if loaded from a pre-3.0 cmake.\n",
        "Line" : 88,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Couldn't load via target, so fall back to allowing module mode finding, which will pick up\n\n# tools/FindEigen3.cmake\n",
        "Line" : 100,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Eigen 3.3.1+ cmake sets EIGEN3_VERSION_STRING (and hard codes the version when installed\n\n# rather than looking it up in the cmake script); older versions, and the\n\n# tools/FindEigen3.cmake, set EIGEN3_VERSION instead.\n",
        "Line" : 106,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Optional dependency for some tests (boost::variant is only supported with version >= 1.56)\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Compile with compiler warnings turned on\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Build pybind11_cross_module_tests if any test_whatever.py are being built that require it\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Create the binding library\n",
        "Line" : 157,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Always write the output file directly into the 'tests' directory (even on MSVC)\n",
        "Line" : 179,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Make sure pytest is found or produce a fatal error\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# A single command to compile and run the tests\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Add a check target to run all the tests, starting with pytest (we add dependencies to this below)\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# The remaining tests only apply when being built as part of the pybind11 project, but not if the\n\n# tests are being built independently.\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Add a post-build comment to show the primary test suite .so size and, if a previous size, compare it:\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Test embedding the interpreter. Provides the `cpptest` target.\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Test CMake build using functions and targets from subdirectory or installed location\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "ext/pybind11/tests/test_cmake_build/CMakeLists.txt" : {
      "ObjectId" : "c9b5fcb2e72ab3cb87eff93e8a7ac3dd7f67000c",
      "LastModified" : "2018-12-06T11:52:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# 3.0 needed for interface library for subdirectory_target/installed_target\n\n# 3.1 needed for cmake -E env for testing\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "ext/pybind11/tests/test_cmake_build/installed_embed/CMakeLists.txt" : {
      "ObjectId" : "f7fc09c2191b45564091443f5e1b7069896738cb",
      "LastModified" : "2018-12-06T11:52:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Do not treat includes from IMPORTED target as SYSTEM (Python headers in pybind11::embed).\n\n# This may be needed to resolve header conflicts, e.g. between Python release and debug headers.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ext/pybind11/tests/test_cmake_build/installed_function/CMakeLists.txt" : {
      "ObjectId" : "e0c20a8a3634ea7e33859c5009ba2c9edd1b011a",
      "LastModified" : "2018-12-06T11:52:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ext/pybind11/tests/test_cmake_build/installed_target/CMakeLists.txt" : {
      "ObjectId" : "cd3ae6f7d84ccb6b7cf9ff58c71cd37a90d6710a",
      "LastModified" : "2018-12-06T11:52:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# make sure result is, for example, test_installed_target.so, not libtest_installed_target.dylib\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Do not treat includes from IMPORTED target as SYSTEM (Python headers in pybind11::module).\n\n# This may be needed to resolve header conflicts, e.g. between Python release and debug headers.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "ext/pybind11/tests/test_cmake_build/subdirectory_embed/CMakeLists.txt" : {
      "ObjectId" : "88ba60dd523ce0e5ba98a3604fb91fcd4376f980",
      "LastModified" : "2018-12-06T11:52:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test basic target functionality\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Test custom export group -- PYBIND11_EXPORT_NAME\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "ext/pybind11/tests/test_cmake_build/subdirectory_function/CMakeLists.txt" : {
      "ObjectId" : "278007aebd1c130cce62772decb6a19cd77e3fbb",
      "LastModified" : "2018-12-06T11:52:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ext/pybind11/tests/test_cmake_build/subdirectory_target/CMakeLists.txt" : {
      "ObjectId" : "6b142d62a931a3636e4074a6d39be5a0e7052689",
      "LastModified" : "2018-12-06T11:52:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# make sure result is, for example, test_installed_target.so, not libtest_installed_target.dylib\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ext/pybind11/tests/test_embed/CMakeLists.txt" : {
      "ObjectId" : "0a43e0e22eb425e85fc8c06826beb3b28b4ca346",
      "LastModified" : "2018-12-06T11:52:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Dummy target on PyPy. Embedding is not supported.\n",
        "Line" : 2,
        "CharPositionInLine" : 30
      },
      "CommentCount" : 1
    },
    "ext/pybind11/tools/FindCatch.cmake" : {
      "ObjectId" : "9d490c5aade2151ebdd8cc84509361ba1c061f84",
      "LastModified" : "2018-12-06T11:52:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find the Catch test framework or download it (single header)\n\n#\n\n# This is a quick module for internal use. It assumes that Catch is\n\n# REQUIRED and that a minimum version is provided (not EXACT). If\n\n# a suitable version isn't found locally, the single header file\n\n# will be downloaded and placed in the build dir: PROJECT_BINARY_DIR.\n\n#\n\n# This code sets the following variables:\n\n#  CATCH_INCLUDE_DIR      - path to catch.hpp\n\n#  CATCH_VERSION          - version number\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Extract the version number from catch.hpp\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Download the single-header version of Catch\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Look for catch locally\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Download the header if it wasn't found or if it's outdated\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "ext/pybind11/tools/FindEigen3.cmake" : {
      "ObjectId" : "9c546a05d859b18c49554d7ee7221cc486b7760e",
      "LastModified" : "2018-12-06T11:52:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Eigen3 lib\n\n#\n\n# This module supports requiring a minimum version, e.g. you can do\n\n#   find_package(Eigen3 3.1.2)\n\n# to require version 3.1.2 or newer of Eigen3.\n\n#\n\n# Once done this will define\n\n#\n\n#  EIGEN3_FOUND - system has eigen lib with correct version\n\n#  EIGEN3_INCLUDE_DIR - the eigen include directory\n\n#  EIGEN3_VERSION - eigen version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>\n\n# Copyright (c) 2009 Benoit Jacob <jacob.benoit.1@gmail.com>\n\n# Redistribution and use is allowed according to the terms of the 2-clause BSD license.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "ext/pybind11/tools/FindPythonLibsNew.cmake" : {
      "ObjectId" : "ad3ed48fae50d461a08d925840d244a760f5da51",
      "LastModified" : "2018-12-06T11:52:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find python libraries\n\n# This module finds the libraries corresponding to the Python interpeter\n\n# FindPythonInterp provides.\n\n# This code sets the following variables:\n\n#\n\n#  PYTHONLIBS_FOUND           - have the Python libs been found\n\n#  PYTHON_PREFIX              - path to the Python installation\n\n#  PYTHON_LIBRARIES           - path to the python library\n\n#  PYTHON_INCLUDE_DIRS        - path to where Python.h is found\n\n#  PYTHON_MODULE_EXTENSION    - lib extension, e.g. '.so' or '.pyd'\n\n#  PYTHON_MODULE_PREFIX       - lib name prefix: usually an empty string\n\n#  PYTHON_SITE_PACKAGES       - path to installation site-packages\n\n#  PYTHON_IS_DEBUG            - whether the Python interpreter is a debug build\n\n#\n\n# Thanks to talljimbo for the patch adding the 'LDVERSION' config\n\n# variable usage.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2001-2009 Kitware, Inc.\n\n# Copyright 2012 Continuum Analytics, Inc.\n\n#\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright\n\n# notice, this list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright\n\n# notice, this list of conditions and the following disclaimer in the\n\n# documentation and/or other materials provided with the distribution.\n\n#\n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n# nor the names of their contributors may be used to endorse or promote\n\n# products derived from this software without specific prior written\n\n# permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# # A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Checking for the extension makes sure that `LibsNew` was found and not just `Libs`.\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Use the Python interpreter to find the libs.\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# According to http://stackoverflow.com/questions/646518/python-how-to-detect-debug-interpreter\n\n# testing whether sys has the gettotalrefcount function is a reliable, cross-platform\n\n# way to detect a CPython debug interpreter.\n\n#\n\n# The library suffix is from the config var LDVERSION sometimes, otherwise\n\n# VERSION. VERSION will typically be like \"2.7\" on unix, and \"27\" on windows.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Convert the process output into a list\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Make sure the Python has the same pointer-size as the chosen compiler\n\n# Skip if CMAKE_SIZEOF_VOID_P is not defined\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# The built-in FindPython didn't always give the version numbers\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Make sure all directory separators are '/'\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# when run in a venv, PYTHON_PREFIX points to it. But the libraries remain in the\n\n# original python installation. They may be found relative to PYTHON_INCLUDE_DIR.\n",
        "Line" : 145,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# raise an error if the python libs are still not found.\n",
        "Line" : 153,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "#message(STATUS \"Searching for Python libs in ${_PYTHON_LIBS_SEARCH}\")\n\n# Probably this needs to be more involved. It would be nice if the config\n\n# information the python interpreter itself gave us were more complete.\n",
        "Line" : 164,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# If all else fails, just set the name/version and let the linker figure out the path.\n",
        "Line" : 172,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# We use PYTHON_INCLUDE_DIR, PYTHON_LIBRARY and PYTHON_DEBUG_LIBRARY for the\n\n# cache entries because they are meant to specify the location of a single\n\n# library. We now set the variables listed by the documentation for this\n\n# module.\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "ext/pybind11/tools/pybind11Tools.cmake" : {
      "ObjectId" : "a7c471a07a38e158ab4fde3a304c53b27ca774c9",
      "LastModified" : "2018-12-06T11:52:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# tools/pybind11Tools.cmake -- Build system for the pybind11 modules\n\n#\n\n# Copyright (c) 2015 Wenzel Jakob <wenzel@inf.ethz.ch>\n\n#\n\n# All rights reserved. Use of this source code is governed by a\n\n# BSD-style license that can be found in the LICENSE file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add a CMake parameter for choosing a desired Python version\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Checks whether the given CXX/linker flags can compile and link a cxx file.  cxxflags and\n\n# linkerflags are lists of flags to use.  The result variable is a unique variable name for each set\n\n# of flags: the compilation result will be cached base on the result variable.  If the flags work,\n\n# sets them in cxxflags_out/linkerflags_out internal cache variables (in addition to ${result}).\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Internal: find the appropriate link time optimization flags for this compiler\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Clang Gold plugin does not support -Os; append -O3 to MinSizeRel builds to override it\n",
        "Line" : 66,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Intel equivalent to LTO is called IPO\n",
        "Line" : 84,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# cmake only interprets libraries as linker flags when they start with a - (otherwise it\n\n# converts /LTCG to \\LTCG as if it was a Windows path).  Luckily MSVC supports passing flags\n\n# with - instead of /, even if it is a bit non-standard:\n",
        "Line" : 88,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# Enable LTO flags if found, except for Debug builds\n",
        "Line" : 102,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Build a Python extension module:\n\n# pybind11_add_module(<name> [MODULE | SHARED] [EXCLUDE_FROM_ALL]\n\n#                     [NO_EXTRAS] [THIN_LTO] source1 [source2 ...])\n\n#\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# from project CMakeLists.txt\n\n# from pybind11Config\n",
        "Line" : 134,
        "CharPositionInLine" : 37
      },
      "10" : {
        "Text" : "# The prefix and extension are provided by FindPythonLibsNew.cmake\n",
        "Line" : 138,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# -fvisibility=hidden is required to allow multiple modules compiled against\n\n# different pybind versions to work properly, and for some features (e.g.\n\n# py::module_local).  We force it on everything inside the `pybind11`\n\n# namespace; also turning it on for a pybind module compilation here avoids\n\n# potential warnings or issues from having mixed hidden/non-hidden types.\n",
        "Line" : 142,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Link against the Python shared library on Windows\n",
        "Line" : 150,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# It's quite common to have multiple copies of the same Python version\n\n# installed on one's system. E.g.: one copy from the OS and another copy\n\n# that's statically linked into an application like Blender or Maya.\n\n# If we link our plugin library against the OS Python here and import it\n\n# into Blender or Maya later on, this will cause segfaults when multiple\n\n# conflicting Python instances are active at the same time (even when they\n\n# are of the same version).\n",
        "Line" : 153,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Windows is not affected by this issue since it handles DLL imports\n\n# differently. The solution for Linux and Mac OS is simple: we just don't\n\n# link against the Python library. The resulting shared library will have\n\n# missing symbols, but that's perfectly fine -- they will be resolved at\n\n# import time.\n",
        "Line" : 161,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Suppress CMake >= 3.0 warning for shared libraries\n",
        "Line" : 170,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# Make sure C++11/14 are enabled\n",
        "Line" : 175,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Strip unnecessary sections of the binary on Linux/Mac OS\n",
        "Line" : 185,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# /MP enables multithreaded builds (relevant when there are many files), /bigobj is\n\n# needed for bigger binding projects due to the limit to 64k addressable sections\n",
        "Line" : 198,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 19
    },
    "ext/sst/Makefile" : {
      "ObjectId" : "3eb0a8e6c8f12fad6dd050b01701c9ecc8fe64d3",
      "LastModified" : "2018-12-06T11:52:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# These two variables are designed to be modifiable.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "system/alpha/console/Makefile" : {
      "ObjectId" : "9fea133a2fa4303f83a29cda7f4e962371e21a6b",
      "LastModified" : "2018-12-06T11:52:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (c) 2005 The Regents of The University of Michigan\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are\n\n# met: redistributions of source code must retain the above copyright\n\n# notice, this list of conditions and the following disclaimer;\n\n# redistributions in binary form must reproduce the above copyright\n\n# notice, this list of conditions and the following disclaimer in the\n\n# documentation and/or other materials provided with the distribution;\n\n# neither the name of the copyright holders nor the names of its\n\n# contributors may be used to endorse or promote products derived from\n\n# this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n# Authors: Nathan L. Binkert\n\n#          Ali G. Saidi\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Point to the M5 diretory so we can get some headers\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "### If we are not compiling on an alpha, we must use cross tools ###    \n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "system/alpha/palcode/Makefile" : {
      "ObjectId" : "2f1eded33ff2c4a3e9e09b5cd17375e4a343cc98",
      "LastModified" : "2018-12-06T11:52:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (c) 2003, 2004\n\n# The Regents of The University of Michigan\n\n# All Rights Reserved\n\n#\n\n# This code is part of the M5 simulator.\n\n#\n\n# Permission is granted to use, copy, create derivative works and\n\n# redistribute this software and such derivative works for any purpose,\n\n# so long as the copyright notice above, this grant of permission, and\n\n# the disclaimer below appear in all copies made; and so long as the\n\n# name of The University of Michigan is not used in any advertising or\n\n# publicity pertaining to the use or distribution of this software\n\n# without specific, written prior authorization.\n\n#\n\n# THIS SOFTWARE IS PROVIDED AS IS, WITHOUT REPRESENTATION FROM THE\n\n# UNIVERSITY OF MICHIGAN AS TO ITS FITNESS FOR ANY PURPOSE, AND WITHOUT\n\n# WARRANTY BY THE UNIVERSITY OF MICHIGAN OF ANY KIND, EITHER EXPRESS OR\n\n# IMPLIED, INCLUDING WITHOUT LIMITATION THE IMPLIED WARRANTIES OF\n\n# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE REGENTS OF\n\n# THE UNIVERSITY OF MICHIGAN SHALL NOT BE LIABLE FOR ANY DAMAGES,\n\n# INCLUDING DIRECT, SPECIAL, INDIRECT, INCIDENTAL, OR CONSEQUENTIAL\n\n# DAMAGES, WITH RESPECT TO ANY CLAIM ARISING OUT OF OR IN CONNECTION\n\n# WITH THE USE OF THE SOFTWARE, EVEN IF IT HAS BEEN OR IS HEREAFTER\n\n# ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.\n\n#\n\n# Authors: Nathan L. Binkert\n\n#          Ali G. Saidi\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Makefile for palcode\n\n# Works on alpha-linux and builds elf executable\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "### If we are not compiling on an alpha, we must use cross tools ###    \n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "system/arm/dt/Makefile" : {
      "ObjectId" : "626ff0891f079a4fbca2c1a214680ade744cbcfc",
      "LastModified" : "2019-02-12T14:06:00Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (c) 2015-2016 ARM Limited\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are\n\n# met: redistributions of source code must retain the above copyright\n\n# notice, this list of conditions and the following disclaimer;\n\n# redistributions in binary form must reproduce the above copyright\n\n# notice, this list of conditions and the following disclaimer in the\n\n# documentation and/or other materials provided with the distribution;\n\n# neither the name of the copyright holders nor the names of its\n\n# contributors may be used to endorse or promote products derived from\n\n# this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n# Authors: Andreas Sandberg\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "system/arm/simple_bootloader/Makefile" : {
      "ObjectId" : "17b35ab19ee93db9760c832aab548f62db64e529",
      "LastModified" : "2018-12-06T11:52:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (c) 2011 ARM Limited\n\n# All rights reserved.\n\n#\n\n# The license below extends only to copyright in the software and shall\n\n# not be construed as granting a license to any other intellectual\n\n# property including but not limited to intellectual property relating\n\n# to a hardware implementation of the functionality of the software\n\n# licensed hereunder.  You may use the software subject to the license\n\n# terms below provided that you ensure that this notice is replicated\n\n# unmodified and in its entirety in all distributions of the software,\n\n# modified or unmodified, in source code or in binary form.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are\n\n# met: redistributions of source code must retain the above copyright\n\n# notice, this list of conditions and the following disclaimer;\n\n# redistributions in binary form must reproduce the above copyright\n\n# notice, this list of conditions and the following disclaimer in the\n\n# documentation and/or other materials provided with the distribution;\n\n# neither the name of the copyright holders nor the names of its\n\n# contributors may be used to endorse or promote products derived from\n\n# this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n# Authors: Ali Saidi\n\n#          Prakash Ramrakhyani\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Need to have CROSS_COMPILE set to /path/to/bin/arm-unknown-linux-gnu-\n\n# or have arm-unknown-linux-gnu in your path\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tests/test-progs/asmtest/src/riscv/Makefile" : {
      "ObjectId" : "c1fe47d9ddeb7dad8b4bbebf4dbb2a61e61ad25b",
      "LastModified" : "2018-12-06T11:52:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#=======================================================================\n\n# Makefile for riscv-tests/isa\n\n#-----------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Build rules\n\n#--------------------------------------------------------------------\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#------------------------------------------------------------\n\n# Build assembly tests\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#------------------------------------------------------------\n\n# Targets\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# build tests with ps environment\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#------------------------------------------------------------\n\n# Clean up\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "tests/test-progs/insttest/src/riscv/Makefile" : {
      "ObjectId" : "921e37259a968daf22d6a5d50af718dca27cd83f",
      "LastModified" : "2018-12-06T11:52:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (c) 2016 The University of Virginia\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are\n\n# met: redistributions of source code must retain the above copyright\n\n# notice, this list of conditions and the following disclaimer;\n\n# redistributions in binary form must reproduce the above copyright\n\n# notice, this list of conditions and the following disclaimer in the\n\n# documentation and/or other materials provided with the distribution;\n\n# neither the name of the copyright holders nor the names of its\n\n# contributors may be used to endorse or promote products derived from\n\n# this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n# Authors: Alec Roelke\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/test-progs/mwait/Makefile" : {
      "ObjectId" : "6b888118d96541968b6bfc5b7997f6a0ae662d44",
      "LastModified" : "2018-12-06T11:52:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# ==== Rules ==================================================================\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/test-progs/threads/src/Makefile" : {
      "ObjectId" : "e5abfd0f5912af0cde0c428ec503b3c1ba1428d2",
      "LastModified" : "2018-12-06T11:52:57Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "util/Makefile" : {
      "ObjectId" : "f7254518bcd17218b5fde5956924c543d8821311",
      "LastModified" : "2018-12-06T11:52:57Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "util/ccdrv/Makefile" : {
      "ObjectId" : "123333533dd40a6a83370acadf4d4a2a619cb71d",
      "LastModified" : "2018-12-06T11:52:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (c) 2004 The Regents of The University of Michigan\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are\n\n# met: redistributions of source code must retain the above copyright\n\n# notice, this list of conditions and the following disclaimer;\n\n# redistributions in binary form must reproduce the above copyright\n\n# notice, this list of conditions and the following disclaimer in the\n\n# documentation and/or other materials provided with the distribution;\n\n# neither the name of the copyright holders nor the names of its\n\n# contributors may be used to endorse or promote products derived from\n\n# this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n# Authors: Ali Saidi\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "util/cxx_config/Makefile" : {
      "ObjectId" : "e8f4912251b7fcac453793bcd4b47491529b28ba",
      "LastModified" : "2018-12-06T11:52:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (c) 2014 ARM Limited\n\n# All rights reserved\n\n#\n\n# The license below extends only to copyright in the software and shall\n\n# not be construed as granting a license to any other intellectual\n\n# property including but not limited to intellectual property relating\n\n# to a hardware implementation of the functionality of the software\n\n# licensed hereunder.  You may use the software subject to the license\n\n# terms below provided that you ensure that this notice is replicated\n\n# unmodified and in its entirety in all distributions of the software,\n\n# modified or unmodified, in source code or in binary form.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are\n\n# met: redistributions of source code must retain the above copyright\n\n# notice, this list of conditions and the following disclaimer;\n\n# redistributions in binary form must reproduce the above copyright\n\n# notice, this list of conditions and the following disclaimer in the\n\n# documentation and/or other materials provided with the distribution;\n\n# neither the name of the copyright holders nor the names of its\n\n# contributors may be used to endorse or promote products derived from\n\n# this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n# Authors: Andrew Bardsley\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## You may also need protobuf flags\n\n# CXXFLAGS += $(shell pkg-config --cflags --libs-only-L protobuf)\n\n# LIBS += $(shell pkg-config --libs protobuf)\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "util/systemc/gem5_within_systemc/Makefile" : {
      "ObjectId" : "100402c15ff8453139454d91c22a4de88598e21b",
      "LastModified" : "2018-12-06T11:52:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (c) 2012-2014 ARM Limited\n\n# All rights reserved\n\n#\n\n# The license below extends only to copyright in the software and shall\n\n# not be construed as granting a license to any other intellectual\n\n# property including but not limited to intellectual property relating\n\n# to a hardware implementation of the functionality of the software\n\n# licensed hereunder.  You may use the software subject to the license\n\n# terms below provided that you ensure that this notice is replicated\n\n# unmodified and in its entirety in all distributions of the software,\n\n# modified or unmodified, in source code or in binary form.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are\n\n# met: redistributions of source code must retain the above copyright\n\n# notice, this list of conditions and the following disclaimer;\n\n# redistributions in binary form must reproduce the above copyright\n\n# notice, this list of conditions and the following disclaimer in the\n\n# documentation and/or other materials provided with the distribution;\n\n# neither the name of the copyright holders nor the names of its\n\n# contributors may be used to endorse or promote products derived from\n\n# this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n# Authors: Andrew Bardsley\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "util/tap/Makefile" : {
      "ObjectId" : "ff0e9945375a53889102852ae4dd4019850720dd",
      "LastModified" : "2018-12-06T11:52:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (c) 2003, 2005 The Regents of The University of Michigan\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are\n\n# met: redistributions of source code must retain the above copyright\n\n# notice, this list of conditions and the following disclaimer;\n\n# redistributions in binary form must reproduce the above copyright\n\n# notice, this list of conditions and the following disclaimer in the\n\n# documentation and/or other materials provided with the distribution;\n\n# neither the name of the copyright holders nor the names of its\n\n# contributors may be used to endorse or promote products derived from\n\n# this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n# Authors: Nathan Binkert\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#*\n",
        "Line" : 44,
        "CharPositionInLine" : 26
      },
      "2" : {
        "Text" : "# C++ Compilation\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C Compilation\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "util/term/Makefile" : {
      "ObjectId" : "161cdd1f85bc0edaa922f78eaa45bdd516f35bf8",
      "LastModified" : "2018-12-06T11:52:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (c) 2003, 2005 The Regents of The University of Michigan\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are\n\n# met: redistributions of source code must retain the above copyright\n\n# notice, this list of conditions and the following disclaimer;\n\n# redistributions in binary form must reproduce the above copyright\n\n# notice, this list of conditions and the following disclaimer in the\n\n# documentation and/or other materials provided with the distribution;\n\n# neither the name of the copyright holders nor the names of its\n\n# contributors may be used to endorse or promote products derived from\n\n# this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n# Authors: Nathan Binkert\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#*\n",
        "Line" : 40,
        "CharPositionInLine" : 19
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "CMAKE" : 18,
    "MAKEFILE" : 20,
    "AUTOMAKE" : 4
  },
  "ElapsedTime" : 7113
}