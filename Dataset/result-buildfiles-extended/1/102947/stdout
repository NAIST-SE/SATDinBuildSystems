{
  "Repository" : "102947",
  "Revision" : "HEAD",
  "ObjectId" : "18815c499b770f51cdb58cc6720dca4f254b2019",
  "CommitTime" : "2018-08-09T12:21:56Z",
  "Files" : {
    "end-to-end-tests/pom.xml" : {
      "ObjectId" : "83007c694cb845e654bfaf71f99fbd3cbb31ed92",
      "LastModified" : "2015-08-28T18:01:58Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " TODO: should the test data be in a different module? then they could have both main and test sources ",
        "Line" : 25,
        "CharPositionInLine" : 118
      },
      "1" : {
        "Text" : " Testing ",
        "Line" : 49,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : " Misc ",
        "Line" : 57,
        "CharPositionInLine" : 22
      },
      "3" : {
        "Text" : " Bytecode Analyzing ",
        "Line" : 71,
        "CharPositionInLine" : 36
      },
      "4" : {
        "Text" : " Annotations ",
        "Line" : 79,
        "CharPositionInLine" : 29
      },
      "5" : {
        "Text" : " Don't deploy tests to Maven Central ",
        "Line" : 107,
        "CharPositionInLine" : 57
      },
      "6" : {
        "Text" : " All tests in this module are run in the 'integration-test' phase.\n                 Use the `mvn verify` command to build the project. ",
        "Line" : 117,
        "CharPositionInLine" : 72
      },
      "7" : {
        "Text" : " Used by project artifact tests ",
        "Line" : 154,
        "CharPositionInLine" : 52
      },
      "8" : {
        "Text" : " JUnit 4.10 is the last all-in-one JAR release; we use it here to avoid handling the transitive dependencies manually ",
        "Line" : 225,
        "CharPositionInLine" : 162
      },
      "9" : {
        "Text" : " Disable mutation testing ",
        "Line" : 257,
        "CharPositionInLine" : 66
      },
      "CommentCount" : 10
    },
    "jumi-api/pom.xml" : {
      "ObjectId" : "1c2f8285806ee0fbdd9d9ae42aa8b0d4b44e9d18",
      "LastModified" : "2013-07-14T20:17:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "jumi-core/pom.xml" : {
      "ObjectId" : "c83ab69aeb27c8355050a9ea2e50ff07eb6d154a",
      "LastModified" : "2015-08-28T18:01:58Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " The tests contain utility classes that may be of use to consumers ",
        "Line" : 72,
        "CharPositionInLine" : 87
      },
      "1" : {
        "Text" : " Hide external dependencies ",
        "Line" : 98,
        "CharPositionInLine" : 48
      },
      "2" : {
        "Text" : " Regular dependencies (transitive) ",
        "Line" : 110,
        "CharPositionInLine" : 79
      },
      "3" : {
        "Text" : " Hidden dependencies ",
        "Line" : 116,
        "CharPositionInLine" : 61
      },
      "4" : {
        "Text" : " Throw away non-class files of hidden dependencies ",
        "Line" : 135,
        "CharPositionInLine" : 91
      },
      "CommentCount" : 5
    },
    "jumi-daemon/pom.xml" : {
      "ObjectId" : "3b33b13dcfc9a9b4d7b975796fbd192318fa3272",
      "LastModified" : "2015-08-28T18:01:58Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Hide external dependencies ",
        "Line" : 38,
        "CharPositionInLine" : 48
      },
      "1" : {
        "Text" : " XXX: We don't have a direct reference to JUnitCompatibilityDriver (it's loaded with use reflection), so it gets optimized away ",
        "Line" : 48,
        "CharPositionInLine" : 164
      },
      "2" : {
        "Text" : " Hidden dependencies ",
        "Line" : 58,
        "CharPositionInLine" : 61
      },
      "3" : {
        "Text" : " Throw away non-class files of hidden dependencies ",
        "Line" : 61,
        "CharPositionInLine" : 91
      },
      "CommentCount" : 4
    },
    "jumi-launcher/pom.xml" : {
      "ObjectId" : "261234f4762b0f8d13093f97706d9877faa21bd0",
      "LastModified" : "2015-09-06T14:17:14Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Embed the daemon JAR inside the launcher JAR ",
        "Line" : 62,
        "CharPositionInLine" : 66
      },
      "1" : {
        "Text" : " Hide external dependencies ",
        "Line" : 87,
        "CharPositionInLine" : 48
      },
      "2" : {
        "Text" : " Regular dependencies (transitive) ",
        "Line" : 99,
        "CharPositionInLine" : 79
      },
      "3" : {
        "Text" : " Hidden dependencies ",
        "Line" : 106,
        "CharPositionInLine" : 61
      },
      "4" : {
        "Text" : " Throw away non-class files of hidden dependencies ",
        "Line" : 113,
        "CharPositionInLine" : 91
      },
      "CommentCount" : 5
    },
    "parent/pom.xml" : {
      "ObjectId" : "1e9852479854ff72ef6e0ba2db4e21a8742fa4c6",
      "LastModified" : "2018-08-09T12:21:56Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Testing ",
        "Line" : 60,
        "CharPositionInLine" : 25
      },
      "1" : {
        "Text" : " Annotations ",
        "Line" : 92,
        "CharPositionInLine" : 29
      },
      "2" : {
        "Text" : " Jumi ",
        "Line" : 105,
        "CharPositionInLine" : 26
      },
      "3" : {
        "Text" : " Jumi Actors ",
        "Line" : 134,
        "CharPositionInLine" : 33
      },
      "4" : {
        "Text" : " Networking ",
        "Line" : 147,
        "CharPositionInLine" : 32
      },
      "5" : {
        "Text" : " Misc ",
        "Line" : 155,
        "CharPositionInLine" : 26
      },
      "6" : {
        "Text" : " Bytecode Manipulation ",
        "Line" : 187,
        "CharPositionInLine" : 43
      },
      "7" : {
        "Text" : " XXX: There is some incompatibility with version 3.1, so we use an older version ",
        "Line" : 198,
        "CharPositionInLine" : 105
      },
      "8" : {
        "Text" : " Testing ",
        "Line" : 202,
        "CharPositionInLine" : 29
      },
      "9" : {
        "Text" : " Version must be defined here instead of <pluginManagement>, because oss-parent otherwise overrides it ",
        "Line" : 313,
        "CharPositionInLine" : 127
      },
      "10" : {
        "Text" : " XXX: Using a different ID than in oss-parent to avoid overriding its checks by accident. See https://issues.sonatype.org/browse/OSSRH-2004 ",
        "Line" : 318,
        "CharPositionInLine" : 172
      },
      "11" : {
        "Text" : " We prefer the fine-grained artifacts ",
        "Line" : 358,
        "CharPositionInLine" : 86
      },
      "12" : {
        "Text" : " XXX: It would be nicer to place these properties into pom.properties\n                             by using maven-jar-plugin's /archive/pomPropertiesFile, but that is broken.\n                             See http://jira.codehaus.org/browse/MSHARED-154 ",
        "Line" : 375,
        "CharPositionInLine" : 81
      },
      "13" : {
        "Text" : " TODO: Java 8, remove me ",
        "Line" : 401,
        "CharPositionInLine" : 49
      },
      "14" : {
        "Text" : " Create custom temporary directory. Our tests use memory-mapped files which the tests\n                         cannot remove themselves (the OS may keep them locked until the process dies) ",
        "Line" : 419,
        "CharPositionInLine" : 107
      },
      "15" : {
        "Text" : " XXX: workaround for an issue with maven-shade-plugin\n                         There appears to be some stale state from previous executions of the Shade plugin,\n                         which manifest themselves as \"We have a duplicate\" warnings on build and also as\n                         some classes not being updated on build. ",
        "Line" : 437,
        "CharPositionInLine" : 70
      },
      "16" : {
        "Text" : " TODO: Java 8, remove me ",
        "Line" : 460,
        "CharPositionInLine" : 53
      },
      "17" : {
        "Text" : " Generate external links to Java 7 API instead of Java 8 API (due to Retrolambda use) ",
        "Line" : 499,
        "CharPositionInLine" : 118
      },
      "18" : {
        "Text" : " TODO: Java 8, remove me ",
        "Line" : 500,
        "CharPositionInLine" : 57
      },
      "19" : {
        "Text" : " NOTE: This also minimizes jumi-core when it's included in jumi-daemon ",
        "Line" : 529,
        "CharPositionInLine" : 103
      },
      "20" : {
        "Text" : " Keep the generated POM file out of the base directory ",
        "Line" : 531,
        "CharPositionInLine" : 87
      },
      "21" : {
        "Text" : " Exclude generated classes ",
        "Line" : 617,
        "CharPositionInLine" : 67
      },
      "22" : {
        "Text" : " Lambdas don't have debug information so PIT can't mutate them (and anyways they are generated) ",
        "Line" : 619,
        "CharPositionInLine" : 136
      },
      "23" : {
        "Text" : " Avoid warnings due to trivial boilerplate code ",
        "Line" : 623,
        "CharPositionInLine" : 88
      },
      "CommentCount" : 24
    },
    "pom.xml" : {
      "ObjectId" : "873d7286fc7934173c30c7b73d05e4947a33b22c",
      "LastModified" : "2013-07-14T20:17:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Don't deploy the project's aggregate module to Maven Central ",
        "Line" : 31,
        "CharPositionInLine" : 82
      },
      "CommentCount" : 1
    },
    "simpleunit/pom.xml" : {
      "ObjectId" : "32557e88954a88cdb7c4e10424abb6b45ee48bfa",
      "LastModified" : "2013-07-14T20:17:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "MAVEN" : 8
  },
  "ElapsedTime" : 754
}