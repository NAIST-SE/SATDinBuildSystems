{
  "Repository" : "10363277",
  "Revision" : "HEAD",
  "ObjectId" : "9f8df9c30693b7ad0727a6dbbff6a60ae6ef0a47",
  "CommitTime" : "2016-07-06T18:34:17Z",
  "Files" : {
    "api/build.xml" : {
      "ObjectId" : "1fcb4d3ce5fff51761b4a6a5ae6650e5f197665c",
      "LastModified" : "2016-05-12T19:23:20Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " for use primarily by the build server to extract the required 3rd-party libraries into the\n         javarosa source tree. to use this in your own build, set the 'extract-libs-fresh' property,\n         then also set the 'javarosa-deps' property to the path of the library archive (make sure you\n         are using the version of the archive compatible with the version you wish to build) ",
        "Line" : 49,
        "CharPositionInLine" : 97
      },
      "1" : {
        "Text" : " import user specific properties                          ",
        "Line" : 57,
        "CharPositionInLine" : 70
      },
      "CommentCount" : 2
    },
    "application/build.xml" : {
      "ObjectId" : "1a5fba2fb731042d64fcfe95d545d6762421e146",
      "LastModified" : "2016-05-12T19:23:20Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " The JavaRosa build script is structured as follows:\n     Modifiable properties are stored in the external build.properties file\n     The classpath for external jars is defined in the Build taskdef\n\n     NOTE: Binary Libraries (.zip is the convention in j2me) are declared\n     seperately in the binaryLibraries property. Not on the classpath!\n\n     The BuildPolish target is associated with building the jar/jad files\n\n     All other non-test targets essentially modify properties associated with the\n     Build target\n",
        "Line" : 12,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : " Main Target: Call to build the project ",
        "Line" : 14,
        "CharPositionInLine" : 52
      },
      "2" : {
        "Text" : " This is the main work target, it actually builds the code ",
        "Line" : 15,
        "CharPositionInLine" : 71
      },
      "3" : {
        "Text" : " Definition of the J2ME Polish task:                      ",
        "Line" : 18,
        "CharPositionInLine" : 74
      },
      "4" : {
        "Text" : " If not already set, set to nothing ",
        "Line" : 23,
        "CharPositionInLine" : 52
      },
      "5" : {
        "Text" : " If not already set, set to nothing ",
        "Line" : 26,
        "CharPositionInLine" : 52
      },
      "6" : {
        "Text" : " extract shared resources for j2merosa lib ",
        "Line" : 29,
        "CharPositionInLine" : 59
      },
      "7" : {
        "Text" : " selection of supported devices, set this in build.properties ",
        "Line" : 47,
        "CharPositionInLine" : 82
      },
      "8" : {
        "Text" : " build settings ",
        "Line" : 56,
        "CharPositionInLine" : 36
      },
      "9" : {
        "Text" : " 'menu' here designates that we're using the fullscreen Polish UI with native menus ",
        "Line" : 57,
        "CharPositionInLine" : 104
      },
      "10" : {
        "Text" : " We should see if we can set these first two attributes as properties instead",
        "Line" : 58,
        "CharPositionInLine" : 97
      },
      "11" : {
        "Text" : "        <library file=\"${dir.tools}/j2meunit-javarosa.jar\" if=\"unittests\" />  ",
        "Line" : 68,
        "CharPositionInLine" : 98
      },
      "12" : {
        "Text" : " Release property can't go in jad if it will be changed ",
        "Line" : 81,
        "CharPositionInLine" : 84
      },
      "13" : {
        "Text" : "attribute name=\"CommCare-Release\"    value=\"${commcare.release}\" /",
        "Line" : 82,
        "CharPositionInLine" : 94
      },
      "14" : {
        "Text" : " We rely on the jad file to be able to change properties post-compile, so\n                we need to ensure that any non-static properties don't make it into the manifest file",
        "Line" : 94,
        "CharPositionInLine" : 105
      },
      "15" : {
        "Text" : " midlets definition ",
        "Line" : 107,
        "CharPositionInLine" : 44
      },
      "16" : {
        "Text" : " Code source files to include in compilation ",
        "Line" : 110,
        "CharPositionInLine" : 69
      },
      "17" : {
        "Text" : " All source-level inclusions should be made here ",
        "Line" : 111,
        "CharPositionInLine" : 73
      },
      "18" : {
        "Text" : "Taking this out for now...",
        "Line" : 118,
        "CharPositionInLine" : 54
      },
      "19" : {
        "Text" : "source dir=\"${dir.test}\"/",
        "Line" : 119,
        "CharPositionInLine" : 53
      },
      "20" : {
        "Text" : " Build variables ",
        "Line" : 122,
        "CharPositionInLine" : 41
      },
      "21" : {
        "Text" : " Resources that should be used in the Polish build (images, the polish.css file, etc) ",
        "Line" : 131,
        "CharPositionInLine" : 110
      },
      "22" : {
        "Text" : " Set the language for the strings in the application ",
        "Line" : 139,
        "CharPositionInLine" : 81
      },
      "23" : {
        "Text" : " Whether to run the obfuscator, which makes reverse engineering the byte-code\n                     more difficult, and compresses the built JAR ",
        "Line" : 147,
        "CharPositionInLine" : 70
      },
      "24" : {
        "Text" : " obfuscator settings: do not obfuscate when the test-property is true ",
        "Line" : 148,
        "CharPositionInLine" : 94
      },
      "25" : {
        "Text" : " removing until there's a fix ",
        "Line" : 151,
        "CharPositionInLine" : 58
      },
      "26" : {
        "Text" : " Unfortunately, the ${polish.device} identifier isn't available in the regular ANT context, so we can't actually properly\n                         place these obfuscation maps anywhere yet ",
        "Line" : 154,
        "CharPositionInLine" : 71
      },
      "27" : {
        "Text" : "parameter name=\"printmapping\" value=\"'dist/obfuscation_mapping.txt'\"/",
        "Line" : 155,
        "CharPositionInLine" : 97
      },
      "28" : {
        "Text" : "  <parameter name=\"dontobfuscate\" value=\"\" />  ",
        "Line" : 160,
        "CharPositionInLine" : 65
      },
      "29" : {
        "Text" : " none of the parameter names below can be the same, or else they will clobber previous parameters; hence the varied spacing ",
        "Line" : 162,
        "CharPositionInLine" : 152
      },
      "30" : {
        "Text" : " needed to avoid preverify error ",
        "Line" : 166,
        "CharPositionInLine" : 163
      },
      "31" : {
        "Text" : " log settings: only use debug setting when the test-property is true ",
        "Line" : 187,
        "CharPositionInLine" : 93
      },
      "32" : {
        "Text" : " Properties of the actual javac compiler ",
        "Line" : 191,
        "CharPositionInLine" : 65
      },
      "33" : {
        "Text" : " execution of emulator(s) ",
        "Line" : 204,
        "CharPositionInLine" : 46
      },
      "34" : {
        "Text" : " Target one: Run emulator and profiling tools if debugging is enabled ",
        "Line" : 205,
        "CharPositionInLine" : 90
      },
      "35" : {
        "Text" : " Enable the following line to test memory constraints on the device ",
        "Line" : 207,
        "CharPositionInLine" : 92
      },
      "36" : {
        "Text" : "parameter name=\"-Xheapsize\" value=\"850000\"/",
        "Line" : 208,
        "CharPositionInLine" : 67
      },
      "37" : {
        "Text" : " Target two: Run emulator only, with no profiling tools if debugging is disabled but testing is ",
        "Line" : 212,
        "CharPositionInLine" : 116
      },
      "38" : {
        "Text" : " Enable the following line to test memory constraints on the device ",
        "Line" : 214,
        "CharPositionInLine" : 92
      },
      "39" : {
        "Text" : " Get the full device definitions ",
        "Line" : 256,
        "CharPositionInLine" : 49
      },
      "40" : {
        "Text" : " Main Target: Call to build the project and call up the emulator ",
        "Line" : 260,
        "CharPositionInLine" : 77
      },
      "41" : {
        "Text" : " Builds the code and invokes the emulator ",
        "Line" : 261,
        "CharPositionInLine" : 54
      },
      "42" : {
        "Text" : " Main Target: Set for release, clean and build with obfuscator ",
        "Line" : 265,
        "CharPositionInLine" : 75
      },
      "43" : {
        "Text" : " Main Target: Call to clean directories created by a build ",
        "Line" : 269,
        "CharPositionInLine" : 71
      },
      "44" : {
        "Text" : " Main Target: Set for MVPTZ release, clean and build with obfuscator ",
        "Line" : 280,
        "CharPositionInLine" : 81
      },
      "45" : {
        "Text" : " Main Target: Cleans, and then runs the build target ",
        "Line" : 283,
        "CharPositionInLine" : 65
      },
      "46" : {
        "Text" : " Main Target: Cleans, and then runs the build target ",
        "Line" : 286,
        "CharPositionInLine" : 65
      },
      "47" : {
        "Text" : " Main Target: Cleans, and then runs the build target with the emulator ",
        "Line" : 289,
        "CharPositionInLine" : 83
      },
      "48" : {
        "Text" : " Main Target: Runs the build with all debug properties enabled ",
        "Line" : 292,
        "CharPositionInLine" : 75
      },
      "49" : {
        "Text" : " Main Target: Builds project and runs j2mepolish Unit Tests on constructed jars ",
        "Line" : 295,
        "CharPositionInLine" : 92
      },
      "50" : {
        "Text" : " Note that most of this testing code was here to test our auto-integration tester, and isn't actually\n             usable for testing J2ME code ",
        "Line" : 298,
        "CharPositionInLine" : 46
      },
      "51" : {
        "Text" : " The classpath that should be used for tests ",
        "Line" : 299,
        "CharPositionInLine" : 61
      },
      "52" : {
        "Text" : "pathelement location=\"${dir.test}\" /",
        "Line" : 302,
        "CharPositionInLine" : 54
      },
      "53" : {
        "Text" : " add new test suites here ",
        "Line" : 308,
        "CharPositionInLine" : 42
      },
      "54" : {
        "Text" : " This target should prevent us from needing to re-run BuildClean for additional targets ",
        "Line" : 368,
        "CharPositionInLine" : 100
      },
      "55" : {
        "Text" : " Initialization for the build targets                    ",
        "Line" : 389,
        "CharPositionInLine" : 69
      },
      "56" : {
        "Text" : " Disable the Emulator by default ",
        "Line" : 391,
        "CharPositionInLine" : 49
      },
      "57" : {
        "Text" : " for use primarily by the build server to extract the required 3rd-party libraries into the\n         commcare source tree. (see javarosa-core buildfile for details) ",
        "Line" : 404,
        "CharPositionInLine" : 77
      },
      "58" : {
        "Text" : " Sets the 'debug' ANT variable to true ",
        "Line" : 412,
        "CharPositionInLine" : 51
      },
      "59" : {
        "Text" : " Enables the emulator by setting 'test' to be true, and setting a working directory ",
        "Line" : 417,
        "CharPositionInLine" : 96
      },
      "60" : {
        "Text" : " Macro: Runs a test suite, and sets testresult.global to be true on failure ",
        "Line" : 423,
        "CharPositionInLine" : 88
      },
      "61" : {
        "Text" : " Note: The reason that we are using @{suite} as a property is because properties in ANT\n            are immutable, and this is a unique identifier ",
        "Line" : 428,
        "CharPositionInLine" : 63
      },
      "62" : {
        "Text" : " import properties which introduce localization hacks for\n         j2me polish commands and UI elements                     ",
        "Line" : 451,
        "CharPositionInLine" : 70
      },
      "63" : {
        "Text" : " import non-version-controlled local properties           ",
        "Line" : 454,
        "CharPositionInLine" : 70
      },
      "64" : {
        "Text" : " import user specific properties                          ",
        "Line" : 457,
        "CharPositionInLine" : 70
      },
      "65" : {
        "Text" : " import global properties                                 ",
        "Line" : 460,
        "CharPositionInLine" : 70
      },
      "CommentCount" : 66
    },
    "backend/build.xml" : {
      "ObjectId" : "46af3de92fd428336386b0910efaf17879930630",
      "LastModified" : "2015-09-21T20:13:25Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " for use primarily by the build server to extract the required 3rd-party libraries into the\n         javarosa source tree. to use this in your own build, set the 'extract-libs-fresh' property,\n         then also set the 'javarosa-deps' property to the path of the library archive (make sure you\n         are using the version of the archive compatible with the version you wish to build) ",
        "Line" : 45,
        "CharPositionInLine" : 97
      },
      "CommentCount" : 1
    },
    "javarosa/j2me/buildfiles/build.xml" : {
      "ObjectId" : "6b2246c58fa6c33e1fb23e8486ca5a38f336fe56",
      "LastModified" : "2016-06-24T22:06:20Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " exclude this until we've worked out issues with bluetooth apis ",
        "Line" : 12,
        "CharPositionInLine" : 76
      },
      "1" : {
        "Text" : " exclude this until we've worked out issues with barcode apis ",
        "Line" : 15,
        "CharPositionInLine" : 74
      },
      "2" : {
        "Text" : " don't want to put this in the jar for phones that don't suport location ",
        "Line" : 19,
        "CharPositionInLine" : 85
      },
      "3" : {
        "Text" : " We'll actually handle that with polish processors rather than manual exclusion ",
        "Line" : 20,
        "CharPositionInLine" : 92
      },
      "4" : {
        "Text" : "exclude name=\"j2me/location/src/org/javarosa/location/**/*.java\"/",
        "Line" : 21,
        "CharPositionInLine" : 77
      },
      "5" : {
        "Text" : " exclude the demo app code ",
        "Line" : 23,
        "CharPositionInLine" : 39
      },
      "6" : {
        "Text" : " stuff that hasn't been updated to build on the new framework ",
        "Line" : 26,
        "CharPositionInLine" : 74
      },
      "7" : {
        "Text" : " Exclude all BouncyCastle sources ",
        "Line" : 31,
        "CharPositionInLine" : 46
      },
      "8" : {
        "Text" : " first set source compliance. Java5 is correct, since we're postprocessing ",
        "Line" : 36,
        "CharPositionInLine" : 87
      },
      "9" : {
        "Text" : " Get the resource files which'll be used ",
        "Line" : 63,
        "CharPositionInLine" : 53
      },
      "10" : {
        "Text" : " Get the resource files which'll be used ",
        "Line" : 69,
        "CharPositionInLine" : 52
      },
      "11" : {
        "Text" : " collect all relevant sources and put them into one big source chunk ",
        "Line" : 79,
        "CharPositionInLine" : 81
      },
      "12" : {
        "Text" : " Now it's time to make the big file that lets Polish index the source code. This part's tricky,\n    so pay attention.\n\n    First, create a fileset containing all of the source we've collected ",
        "Line" : 88,
        "CharPositionInLine" : 77
      },
      "13" : {
        "Text" : " Now, convert that source list into a property which is newline seperated, and contains references\n    that start assuming you're in a zip file and in the src directory already ",
        "Line" : 92,
        "CharPositionInLine" : 82
      },
      "14" : {
        "Text" : " first, make sure we're using zip file file seperators ",
        "Line" : 95,
        "CharPositionInLine" : 71
      },
      "15" : {
        "Text" : " Now, cut all non-local elements from the path ",
        "Line" : 99,
        "CharPositionInLine" : 63
      },
      "16" : {
        "Text" : " Finally, trim leading seperators ",
        "Line" : 101,
        "CharPositionInLine" : 50
      },
      "17" : {
        "Text" : " This is where our magic polish source map goes ",
        "Line" : 106,
        "CharPositionInLine" : 60
      },
      "18" : {
        "Text" : " This echo dumps our filelist path from above into the file j2mepolish.index.text, and creates\n    the file itself ",
        "Line" : 110,
        "CharPositionInLine" : 24
      },
      "19" : {
        "Text" : " The file also needs to contain the files from polish, so we'll grab them from the resources\n    directory. In the future this should be set up even more thoroughly to pull the file _directly_ from\n    a polish jar file, which should be easy enough ",
        "Line" : 115,
        "CharPositionInLine" : 55
      },
      "20" : {
        "Text" : " Ok, so now compile all of the source so that when people put this jar on their eclipse path and\n    stuff, they can link to the bytecode. It's not necessary for the polsh build, but important for if\n    one wants to look at this like it's a real jar file (it's not) ",
        "Line" : 122,
        "CharPositionInLine" : 71
      },
      "21" : {
        "Text" : " Schweet, now turn it into a 'jar' file! ",
        "Line" : 134,
        "CharPositionInLine" : 53
      },
      "22" : {
        "Text" : " Ok, so now compile all of the source so that when people put this jar on their eclipse path and\n        stuff, they can link to the bytecode. It's not necessary for the polsh build, but important for if\n        one wants to look at this like it's a real jar file (it's not) ",
        "Line" : 153,
        "CharPositionInLine" : 75
      },
      "23" : {
        "Text" : "target name=\"RunUnitTests\" description=\"Runs all unit tests found in the code\" depends=\"buildTests\"",
        "Line" : 164,
        "CharPositionInLine" : 109
      },
      "24" : {
        "Text" : " Now, convert that source list into a property which is newline seperated, and contains references\n        that start assuming you're in a zip file and in the src directory already ",
        "Line" : 169,
        "CharPositionInLine" : 86
      },
      "25" : {
        "Text" : " Cut all non-local elements from the path ",
        "Line" : 172,
        "CharPositionInLine" : 58
      },
      "26" : {
        "Text" : " Now covert from seperators to package seperators ",
        "Line" : 174,
        "CharPositionInLine" : 66
      },
      "27" : {
        "Text" : " Trim leading seperators ",
        "Line" : 179,
        "CharPositionInLine" : 41
      },
      "28" : {
        "Text" : " snip the .class, we should now be left with fully qualified classnames ",
        "Line" : 181,
        "CharPositionInLine" : 88
      },
      "29" : {
        "Text" : " Macro: Runs a test suite, and sets testresult.global to be true on failure ",
        "Line" : 234,
        "CharPositionInLine" : 86
      },
      "30" : {
        "Text" : " Note: The reason that we are using @{suite} as a property is because properties in ANT\n      are immutable, and this is a unique identifier ",
        "Line" : 238,
        "CharPositionInLine" : 57
      },
      "CommentCount" : 31
    },
    "javarosa/j2me/javarosa-app/build.xml" : {
      "ObjectId" : "aa89f48c6d8314fd9e23a573d4b5dc839a00489b",
      "LastModified" : "2016-06-24T20:30:14Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " The JavaRosa build script is structured as follows:\n     Modifiable properties are stored in the external build.properties file\n     The classpath for external jars is defined in the Build taskdef\n\n     NOTE: Binary Libraries (.zip is the convention in j2me) are declared\n     seperately in the binaryLibraries property. Not on the classpath!\n\n     The BuildPolish target is associated with building the jar/jad files\n\n     All other non-test targets essentially modify properties associated with the\n     Build target\n",
        "Line" : 12,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : " Main Target: Call to build the project ",
        "Line" : 14,
        "CharPositionInLine" : 49
      },
      "2" : {
        "Text" : " This is the main work target, it actually builds the code ",
        "Line" : 15,
        "CharPositionInLine" : 68
      },
      "3" : {
        "Text" : " Definition of the J2ME Polish task:                      ",
        "Line" : 17,
        "CharPositionInLine" : 68
      },
      "4" : {
        "Text" : " Note that this takes place here (rather than in the script in general) in order to allow the libraries jar to be compiled from source before the classpath is evaluated",
        "Line" : 18,
        "CharPositionInLine" : 178
      },
      "5" : {
        "Text" : " If not already set, set to nothing ",
        "Line" : 23,
        "CharPositionInLine" : 46
      },
      "6" : {
        "Text" : " If not already set, set to nothing ",
        "Line" : 26,
        "CharPositionInLine" : 46
      },
      "7" : {
        "Text" : " selection of supported devices, set this in build.properties ",
        "Line" : 38,
        "CharPositionInLine" : 73
      },
      "8" : {
        "Text" : " build settings ",
        "Line" : 47,
        "CharPositionInLine" : 27
      },
      "9" : {
        "Text" : " 'menu' here designates that we're using the fullscreen Polish UI with native menus ",
        "Line" : 48,
        "CharPositionInLine" : 95
      },
      "10" : {
        "Text" : " We should see if we can set these first two attributes as properties instead",
        "Line" : 49,
        "CharPositionInLine" : 88
      },
      "11" : {
        "Text" : "library file=\"${dir.lib}${file.separator}kxml2-2.3.0.jar\"/",
        "Line" : 60,
        "CharPositionInLine" : 71
      },
      "12" : {
        "Text" : "library file=\"${dir.lib}${file.separator}regexp-me.jar\"/",
        "Line" : 61,
        "CharPositionInLine" : 69
      },
      "13" : {
        "Text" : " We rely on the jad file to be able to change properties post-compile, so\n\t\t\t\twe need to ensure that any non-static properties don't make it into the manifest file",
        "Line" : 76,
        "CharPositionInLine" : 93
      },
      "14" : {
        "Text" : " midlets definition ",
        "Line" : 87,
        "CharPositionInLine" : 32
      },
      "15" : {
        "Text" : " Code source files to include in compilation ",
        "Line" : 90,
        "CharPositionInLine" : 57
      },
      "16" : {
        "Text" : " All source-level inclusions should be made here ",
        "Line" : 91,
        "CharPositionInLine" : 61
      },
      "17" : {
        "Text" : " Build variables ",
        "Line" : 97,
        "CharPositionInLine" : 29
      },
      "18" : {
        "Text" : " Resources that should be used in the Polish build (images, the polish.css file, etc) ",
        "Line" : 106,
        "CharPositionInLine" : 98
      },
      "19" : {
        "Text" : " Set the language for the strings in the application ",
        "Line" : 110,
        "CharPositionInLine" : 81
      },
      "20" : {
        "Text" : " Whether to run the obfuscator, which makes reverse engineering the byte-code\n\t\t\t\t\t more difficult, and compresses the built JAR ",
        "Line" : 117,
        "CharPositionInLine" : 55
      },
      "21" : {
        "Text" : " obfuscator settings: do not obfuscate when the test-property is true  ",
        "Line" : 118,
        "CharPositionInLine" : 83
      },
      "22" : {
        "Text" : "parameter name=\"printmapping\" value=\"obfuscation_mapping.txt\" /",
        "Line" : 121,
        "CharPositionInLine" : 76
      },
      "23" : {
        "Text" : " none of the parameter names below can be the same, or else they will clobber previous parameters; hence the varied spacing ",
        "Line" : 123,
        "CharPositionInLine" : 137
      },
      "24" : {
        "Text" : " log settings: only use debug setting when the test-property is true ",
        "Line" : 146,
        "CharPositionInLine" : 81
      },
      "25" : {
        "Text" : " Properties of the actual javac compiler ",
        "Line" : 150,
        "CharPositionInLine" : 53
      },
      "26" : {
        "Text" : " execution of emulator(s) ",
        "Line" : 159,
        "CharPositionInLine" : 37
      },
      "27" : {
        "Text" : " Target one: Run emulator and profiling tools if debugging is enabled ",
        "Line" : 160,
        "CharPositionInLine" : 81
      },
      "28" : {
        "Text" : " Enable the following line to test memory constraints on the device ",
        "Line" : 162,
        "CharPositionInLine" : 80
      },
      "29" : {
        "Text" : "parameter name=\"-Xheapsize\" value=\"2897152\"/",
        "Line" : 163,
        "CharPositionInLine" : 56
      },
      "30" : {
        "Text" : " Target two: Run emulator only, with no profiling tools if debugging is disabled but testing is ",
        "Line" : 166,
        "CharPositionInLine" : 107
      },
      "31" : {
        "Text" : " Enable the following line to test memory constraints on the device ",
        "Line" : 168,
        "CharPositionInLine" : 80
      },
      "32" : {
        "Text" : "debugger port=\"6001\" /",
        "Line" : 170,
        "CharPositionInLine" : 34
      },
      "33" : {
        "Text" : " Main Target: Call to build the project and call up the emulator ",
        "Line" : 188,
        "CharPositionInLine" : 74
      },
      "34" : {
        "Text" : " Builds the code and invokes the emulator ",
        "Line" : 189,
        "CharPositionInLine" : 51
      },
      "35" : {
        "Text" : " Main Target: Call to clean directories created by a build ",
        "Line" : 193,
        "CharPositionInLine" : 68
      },
      "36" : {
        "Text" : " Main Target: Call to clean the emulator's RMS ",
        "Line" : 199,
        "CharPositionInLine" : 56
      },
      "37" : {
        "Text" : " Main Target: Cleans, and then runs the build target ",
        "Line" : 204,
        "CharPositionInLine" : 62
      },
      "38" : {
        "Text" : " Main Target: Cleans, enables all release configurations and runs the build target ",
        "Line" : 207,
        "CharPositionInLine" : 92
      },
      "39" : {
        "Text" : " Main Target: Cleans, and then runs the build target with the emulator ",
        "Line" : 210,
        "CharPositionInLine" : 80
      },
      "40" : {
        "Text" : " Main Target: Runs the build with all debug properties enabled ",
        "Line" : 216,
        "CharPositionInLine" : 72
      },
      "41" : {
        "Text" : " This target should prevent us from needing to re-run BuildClean for additional targets ",
        "Line" : 227,
        "CharPositionInLine" : 97
      },
      "42" : {
        "Text" : " Initialization for the build targets                    ",
        "Line" : 236,
        "CharPositionInLine" : 66
      },
      "43" : {
        "Text" : " Disable the Emulator by default ",
        "Line" : 240,
        "CharPositionInLine" : 43
      },
      "44" : {
        "Text" : " Sets the 'debug' ANT variable to true ",
        "Line" : 281,
        "CharPositionInLine" : 48
      },
      "45" : {
        "Text" : " Enables the emulator by setting 'test' to be true, and setting a working directory ",
        "Line" : 286,
        "CharPositionInLine" : 93
      },
      "46" : {
        "Text" : " import properties which introduce localization hacks for \n\t\t     j2me polish commands and UI elements                     ",
        "Line" : 293,
        "CharPositionInLine" : 68
      },
      "47" : {
        "Text" : " import local specific properties                          ",
        "Line" : 296,
        "CharPositionInLine" : 68
      },
      "48" : {
        "Text" : " import build specific properties                          ",
        "Line" : 299,
        "CharPositionInLine" : 68
      },
      "49" : {
        "Text" : " import global properties                                 ",
        "Line" : 302,
        "CharPositionInLine" : 67
      },
      "CommentCount" : 50
    },
    "javarosa/util/schema-gen/build.xml" : {
      "ObjectId" : "4e3c02f02d75fcf9c0f232e6106fc893695baae5",
      "LastModified" : "2016-06-24T20:30:14Z",
      "FileType" : "ANT",
      "CommentCount" : 0
    },
    "javarosa/util/validator/org.javarosa.shellformtest/build.xml" : {
      "ObjectId" : "f9e81474804d4678a6313be07668abdaa958cb25",
      "LastModified" : "2016-06-24T20:30:14Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " The JavaRosa build script is structured as follows:\n     Modifiable properties are stored in the external build.properties file\n     The classpath for external jars is defined in the Build taskdef\n\n     NOTE: Binary Libraries (.zip is the convention in j2me) are declared\n     seperately in the binaryLibraries property. Not on the classpath!\n\n     The BuildPolish target is associated with building the jar/jad files\n\n     All other non-test targets essentially modify properties associated with the\n     Build target\n",
        "Line" : 12,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : " Main Target: Call to build the project ",
        "Line" : 14,
        "CharPositionInLine" : 49
      },
      "2" : {
        "Text" : " This is the main work target, it actually builds the code ",
        "Line" : 15,
        "CharPositionInLine" : 68
      },
      "3" : {
        "Text" : " A property containing the path to the preprocessed source files ",
        "Line" : 17,
        "CharPositionInLine" : 75
      },
      "4" : {
        "Text" : " Definition of the J2ME Polish task:                      ",
        "Line" : 21,
        "CharPositionInLine" : 68
      },
      "5" : {
        "Text" : " Note that this takes place here (rather than in the script in general) in order to allow the libraries jar to be compiled from source before the classpath is evaluated",
        "Line" : 22,
        "CharPositionInLine" : 178
      },
      "6" : {
        "Text" : " selection of supported devices, set this in build.properties ",
        "Line" : 36,
        "CharPositionInLine" : 73
      },
      "7" : {
        "Text" : " build settings ",
        "Line" : 41,
        "CharPositionInLine" : 27
      },
      "8" : {
        "Text" : " 'menu' here designates that we're using the fullscreen Polish UI with native menus ",
        "Line" : 42,
        "CharPositionInLine" : 95
      },
      "9" : {
        "Text" : " We should see if we can set these first two attributes as properties instead",
        "Line" : 43,
        "CharPositionInLine" : 88
      },
      "10" : {
        "Text" : " midlets definition ",
        "Line" : 59,
        "CharPositionInLine" : 32
      },
      "11" : {
        "Text" : " Code source files to include in compilation ",
        "Line" : 62,
        "CharPositionInLine" : 57
      },
      "12" : {
        "Text" : " All source-level inclusions should be made here ",
        "Line" : 63,
        "CharPositionInLine" : 61
      },
      "13" : {
        "Text" : " Build variables ",
        "Line" : 68,
        "CharPositionInLine" : 29
      },
      "14" : {
        "Text" : " Resources that should be used in the Polish build (images, the polish.css file, etc) ",
        "Line" : 73,
        "CharPositionInLine" : 98
      },
      "15" : {
        "Text" : " Set the language for the strings in the application ",
        "Line" : 77,
        "CharPositionInLine" : 81
      },
      "16" : {
        "Text" : " Properties of the actual javac compiler ",
        "Line" : 83,
        "CharPositionInLine" : 53
      },
      "17" : {
        "Text" : " execution of emulator(s) ",
        "Line" : 92,
        "CharPositionInLine" : 37
      },
      "18" : {
        "Text" : " Target one: Run emulator and profiling tools if debugging is enabled ",
        "Line" : 93,
        "CharPositionInLine" : 81
      },
      "19" : {
        "Text" : " Enable the following line to test memory constraints on the device ",
        "Line" : 95,
        "CharPositionInLine" : 80
      },
      "20" : {
        "Text" : "parameter name=\"-Xheapsize\" value=\"2897152\"/",
        "Line" : 96,
        "CharPositionInLine" : 56
      },
      "21" : {
        "Text" : " Target two: Run emulator only, with no profiling tools if debugging is disabled but testing is ",
        "Line" : 99,
        "CharPositionInLine" : 107
      },
      "22" : {
        "Text" : " Enable the following line to test memory constraints on the device ",
        "Line" : 101,
        "CharPositionInLine" : 80
      },
      "23" : {
        "Text" : "parameter name=\"-Xheapsize\" value=\"2897152\"/",
        "Line" : 102,
        "CharPositionInLine" : 56
      },
      "24" : {
        "Text" : "debugger port=\"6001\" /",
        "Line" : 103,
        "CharPositionInLine" : 34
      },
      "25" : {
        "Text" : " Main Target: Call to clean directories created by a build ",
        "Line" : 116,
        "CharPositionInLine" : 68
      },
      "26" : {
        "Text" : " Main Target: Cleans, and then runs the build target with the emulator ",
        "Line" : 122,
        "CharPositionInLine" : 80
      },
      "27" : {
        "Text" : " Initialization for the build targets                    ",
        "Line" : 125,
        "CharPositionInLine" : 66
      },
      "28" : {
        "Text" : " import local specific properties                          ",
        "Line" : 153,
        "CharPositionInLine" : 68
      },
      "29" : {
        "Text" : " import build specific properties                          ",
        "Line" : 156,
        "CharPositionInLine" : 68
      },
      "30" : {
        "Text" : " import global properties                                 ",
        "Line" : 159,
        "CharPositionInLine" : 67
      },
      "CommentCount" : 31
    },
    "javarosa/util/validator/org.javarosa.xform.validator/build.xml" : {
      "ObjectId" : "50482e746ccd0a79eb7716caded0b7b4c7177c65",
      "LastModified" : "2016-06-24T20:30:14Z",
      "FileType" : "ANT",
      "CommentCount" : 0
    },
    "modern/build.xml" : {
      "ObjectId" : "3030c2432329d33ffd01531c438a97e02372c488",
      "LastModified" : "2016-06-24T20:30:14Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " for use primarily by the build server to extract the required 3rd-party libraries into the\n         javarosa source tree. to use this in your own build, set the 'extract-libs-fresh' property,\n         then also set the 'javarosa-deps' property to the path of the library archive (make sure you\n         are using the version of the archive compatible with the version you wish to build) ",
        "Line" : 43,
        "CharPositionInLine" : 97
      },
      "1" : {
        "Text" : " import user specific properties                          ",
        "Line" : 51,
        "CharPositionInLine" : 70
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "ANT" : 9
  },
  "ElapsedTime" : 1978
}