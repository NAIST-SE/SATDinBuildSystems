{
  "Repository" : "3105682",
  "Revision" : "HEAD",
  "ObjectId" : "5b4638e5b13a0bf9b0dfce0412351c07afba98b6",
  "CommitTime" : "2019-04-17T13:59:57Z",
  "Files" : {
    "Makefile" : {
      "ObjectId" : "bb13bce5bf0bdab3afee4dc29561a544ba30babc",
      "LastModified" : "2019-04-12T10:37:44Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# PRERULE_CMD display the files imply that the rule is running with the files dates\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO: add --disallow-untyped-defs\n",
        "Line" : 292,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Verify that we don't directly use the CI project name in the scaffolds\n",
        "Line" : 342,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# i18n\n",
        "Line" : 350,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Import ngeo templates\n",
        "Line" : 383,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Templates\n",
        "Line" : 528,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6,
      "Errorlog" : "line 13:21 token recognition error at: '\"Build \\0'\nline 13:40 token recognition error at: '\\0'\nline 13:68 token recognition error at: '\\0'\nline 13:80 token recognition error at: '\\0'\nline 106:60 token recognition error at: '\"\\n\\n.PHONY: docker-pull\\ndocker-pull:\\n\\tfor image in `find -name Dockerfile -o -name Dockerfile.mako | xargs grep --no-filename FROM | awk '{print $$2}' | sort -u`; do docker pull $$image; done\\n\\tdocker pull camptocamp/qgis-server:latest\\n\\tdocker pull camptocamp/qgis-server:3.4  # LTR\\n\\tdocker pull camptocamp/qgis-server:3.6\\n\\n.PHONY: docker-build\\ndocker-build: docker-pull\\n\\tdocker build --tag=camptocamp/geomapfish-build-dev:${MAJOR_VERSION} docker/build\\n\\t./docker-run --env=RELEASE_TAG make build\\n\\n.PHONY: build\\nbuild: \\\\n\\tdocker-build-build \\\\n\\tdocker-build-qgisserver \\\\n\\tprepare-tests\\n\\n.PHONY: doc\\ndoc: $(BUILD_DIR)/sphinx.timestamp\\n\\n.PHONY: checks\\nchecks: flake8 mypy git-attributes quote spell yamllint pylint eof-newline additionallint\\n\\n.PHONY: clean\\nclean:\\n\\trm --force $(BUILD_DIR)/venv.timestamp\\n\\trm --force $(BUILD_DIR)/c2ctemplate-cache.json\\n\\trm --force $(BUILD_DIR)/ngeo.timestamp\\n\\trm --force geoportal/c2cgeoportal_geoportal/locale/*.pot\\n\\trm --force geoportal/c2cgeoportal_admin/locale/*.pot\\n\\trm --force geoportal/c2cgeoportal_geoportal/locale/en/LC_MESSAGES/c2cgeoportal_geoportal.po\\n\\trm --force geoportal/c2cgeoportal_admin/locale/en/LC_MESSAGES/c2cgeoportal_admin.po\\n\\trm --recursive --force geoportal/c2cgeoportal_geoportal/static/build\\n\\trm --force $(MAKO_FILES:.mako=)\\n\\trm --force $(API_FILES) $(APPS_FILES) $(APPS_FILES_ALT)\\n\\trm --force geoportal/tests/functional/alembic.yaml\\n\\trm --force docker/qgisserver/tests/geomapfish.yaml\\n\\n.PHONY: clean-all\\nclean-all: clean\\n\\trm --recursive --force geoportal/node_modules\\n\\trm --force $(PO_FILES)\\n\\trm --recursive --force $(BUILD_DIR)/*\\n\\n$(BUILD_DIR)/sphinx.timestamp: $(SPHINX_FILES) $(SPHINX_MAKO_FILES:.mako=)\\n\\t$(PRERULE_CMD)\\n\\tmkdir --parent doc/_build/html\\n\\tdoc/build.sh\\n\\ttouch $@\\n\\ngeoportal/tests/functional/alembic.yaml: $(BUILD_DIR)/c2ctemplate-cache.json\\n\\t$(PRERULE_CMD)\\n\\tc2c-template --cache $(BUILD_DIR)/c2ctemplate-cache.json --get-config $@ srid schema schema_static sqlalchemy.url\\n\\ndocker/qgisserver/tests/geomapfish.yaml: $(BUILD_DIR)/c2ctemplate-cache.json\\n\\t$(PRERULE_CMD)\\n\\tc2c-template --cache $(BUILD_DIR)/c2ctemplate-cache.json --get-config $@ srid schema schema_static sqlalchemy_slave.url\\n\\ndocker-build-test: docker-build-testdb docker-build-testexternaldb docker-build-testmapserver\\n\\ndocker/test-db/12-alembic.sql: \\\\n\\t\\tgeoportal/tests/functional/alembic.ini \\\\n\\t\\tgeoportal/tests/functional/alembic.yaml \\\\n\\t\\t$(shell ls -1 commons/c2cgeoportal_commons/alembic/main/*.py)\\n\\t$(PRERULE_CMD)\\n\\talembic --config=$< --name=main upgrade --sql head > $@\\n\\ndocker/test-db/13-alembic-static.sql: \\\\n\\t\\tgeoportal/tests/functional/alembic.ini \\\\n\\t\\tgeoportal/tests/functional/alembic.yaml \\\\n\\t\\t$(shell ls -1 commons/c2cgeoportal_commons/alembic/static/*.py)\\n\\t$(PRERULE_CMD)\\n\\talembic --config=$< --name=static upgrade --sql head > $@\\n\\n.PHONY: docker-build-gisdb\\ndocker-build-gisdb: $(shell docker-required --path docker/gis-db)\\n\\tdocker build --tag=$(DOCKER_TEST_BASE)-gis-db:latest docker/gis-db\\n\\n.PHONY: docker-build-testdb\\ndocker-build-testdb: docker/test-db/12-alembic.sql docker/test-db/13-alembic-static.sql \\\\n\\t\\tdocker-build-gisdb\\n\\tdocker build --tag=$(DOCKER_TEST_BASE)-db:latest docker/test-db\\n\\n.PHONY: docker-build-testexternaldb\\ndocker-build-testexternaldb: docker-build-gisdb\\n\\tdocker build --tag=$(DOCKER_TEST_BASE)-external-db:latest docker/test-external-db\\n\\n.PHONY: docker-build-testmapserver\\ndocker-build-testmapserver: $(shell docker-required --path docker/test-mapserver)\\n\\tdocker build --tag=$(DOCKER_TEST_BASE)-mapserver:latest docker/test-mapserver\\n\\n.PHONY: docker-build-build\\ndocker-build-build: $(shell docker-required --path . --replace-pattern='^test(.*).mako$/test/\\1'\n"
    },
    "admin/Makefile" : {
      "ObjectId" : "7a09fedb9b90e2593dccbe329cc0f256c7fe05dc",
      "LastModified" : "2018-03-27T12:58:52Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Run your project's tests.\n",
        "Line" : 22,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Run your project.\n",
        "Line" : 34,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Create a Python virtual environment.\n",
        "Line" : 38,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# Upgrade packaging tools.\n",
        "Line" : 40,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# Install the project in editable mode.\n",
        "Line" : 48,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# Install the project in editable mode with its testing requirements.\n",
        "Line" : 57,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 6
    },
    "doc/Makefile" : {
      "ObjectId" : "91fdc49ea34f6ceb1c0b3e904eb0456adc85c93a",
      "LastModified" : "2017-10-17T14:59:49Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Internal variables.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "docker/qgisserver/Makefile" : {
      "ObjectId" : "3f3ef649126cb83737569d45cb91043627a781ba",
      "LastModified" : "2019-02-12T16:26:15Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# local target for development purpose\n",
        "Line" : 4,
        "CharPositionInLine" : 23
      },
      "CommentCount" : 1
    },
    "geoportal/tests/testegg/BUILD" : {
      "ObjectId" : "0e9412810479c3410f760cc5b1dc4d18bc28d03f",
      "LastModified" : "2019-02-12T16:26:15Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 4,
    "BAZEL" : 1
  },
  "ElapsedTime" : 4254
}