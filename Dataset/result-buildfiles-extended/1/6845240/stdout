{
  "Repository" : "6845240",
  "Revision" : "HEAD",
  "ObjectId" : "5fd792499bae65bae831880e1db04c5a09ccf560",
  "CommitTime" : "2019-03-29T21:56:15Z",
  "Files" : {
    "arduino/standard/mooltipass/Makefile" : {
      "ObjectId" : "f5cfc2fd804e0005dc78dfda0575108c3cfb8e9f",
      "LastModified" : "2016-09-09T19:59:47Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "bitmaps/standard/Makefile" : {
      "ObjectId" : "3218cbe34a8a85810f4dc7d2d6bba3543ac4db64",
      "LastModified" : "2016-09-09T19:59:47Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "bootloader/standard/LUFA-111009/Bootloaders/HID/HostLoaderApp/Makefile" : {
      "ObjectId" : "7b2833e62f798067a7d4a949069bf32f88e99b3e",
      "LastModified" : "2016-09-09T19:59:47Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#OS ?= WINDOWS\n\n#OS ?= MACOSX\n\n#OS ?= BSD\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# also works on FreeBSD\n",
        "Line" : 6,
        "CharPositionInLine" : 21
      },
      "2" : {
        "Text" : "# works on NetBSD and OpenBSD\n",
        "Line" : 28,
        "CharPositionInLine" : 24
      },
      "CommentCount" : 3
    },
    "bootloader/standard/Makefile" : {
      "ObjectId" : "cc354b7692c5c54b8acb02f66d82d416d8e2dc86",
      "LastModified" : "2016-09-09T19:59:47Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Hey Emacs, this is a -*- makefile -*-\n\n#----------------------------------------------------------------------------\n\n# WinAVR Makefile Template written by Eric B. Weddington, Jï¿½rg Wunsch, et al.\n\n#  >> Modified for use with the LUFA project. <<\n\n#\n\n# Released to the Public Domain\n\n#\n\n# Additional material for this makefile was written by:\n\n# Peter Fleury\n\n# Tim Henigan\n\n# Colin O'Flynn\n\n# Reiner Patommel\n\n# Markus Pfaff\n\n# Sander Pool\n\n# Frederik Rouleau\n\n# Carlos Lamas\n\n# Dean Camera\n\n# Opendous Inc.\n\n# Denver Gingerich\n\n#\n\n#----------------------------------------------------------------------------\n\n# On command line:\n\n#\n\n# make all = Make software.\n\n#\n\n# make clean = Clean out built project files.\n\n#\n\n# make coff = Convert ELF to AVR COFF.\n\n#\n\n# make extcoff = Convert ELF to AVR Extended COFF.\n\n#\n\n# make program = Download the hex file to the device, using avrdude.\n\n#                Please customize the avrdude settings below first!\n\n#\n\n# make doxygen = Generate DoxyGen documentation for the project (must have\n\n#                DoxyGen installed)\n\n#\n\n# make debug = Start either simulavr or avarice as specified for debugging,\n\n#              with avr-gdb or avr-insight as the front end for debugging.\n\n#\n\n# make filename.s = Just compile filename.c into the assembler code only.\n\n#\n\n# make filename.i = Create a preprocessed source file for use in submitting\n\n#                   bug reports to the GCC project.\n\n#\n\n# To rebuild project do \"make clean\" then \"make all\".\n\n#----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# USB vendor ID (VID)\n\n# reuse of this VID by others is forbidden by USB-IF\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# USB product ID (PID)\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# MCU name\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Target architecture (see library \"Board Types\" documentation).\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Target board (see library \"Board Types\" documentation, NONE for projects not requiring\n\n# LUFA board drivers). If USER is selected, put custom board drivers in a directory called\n\n# \"Board\" inside the application directory.\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Processor frequency.\n\n#     This will define a symbol, F_CPU, in all source code files equal to the\n\n#     processor frequency in Hz. You can then use this symbol in your source code to\n\n#     calculate timings. Do NOT tack on a 'UL' at the end, this will be done\n\n#     automatically to create a 32-bit value in your source code.\n\n#\n\n#     This will be an integer division of F_USB below, as it is sourced by\n\n#     F_USB after it has run through any CPU prescalers. Note that this value\n\n#     does not *change* the processor frequency - it should merely be updated to\n\n#     reflect the processor speed set externally so that the code can use accurate\n\n#     software delays.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Input clock frequency.\n\n#     This will define a symbol, F_USB, in all source code files equal to the\n\n#     input clock frequency (before any prescaling is performed) in Hz. This value may\n\n#     differ from F_CPU if prescaling is used on the latter, and is required as the\n\n#     raw input clock is fed directly to the PLL sections of the AVR for high speed\n\n#     clock generation for the USB and other AVR subsections. Do NOT tack on a 'UL'\n\n#     at the end, this will be done automatically to create a 32-bit value in your\n\n#     source code.\n\n#\n\n#     If no clock division is performed on the input clock inside the AVR (via the\n\n#     CPU clock adjust registers or the clock division fuses), this will be equal to F_CPU.\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Starting byte address of the bootloader, as a byte address - computed via the formula\n\n#   BOOT_START = ((FLASH_SIZE_KB - BOOT_SECTION_SIZE_KB) * 1024)\n\n#\n\n# Note that the bootloader size and start address given in AVRStudio is in words and not\n\n# bytes, and so will need to be doubled to obtain the byte address needed by AVR-GCC.\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Output format. (can be srec, ihex, binary)\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Target file name (without extension).\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Object files directory\n\n#     To put object files in current directory, use a dot (.), do NOT make\n\n#     this an empty or blank macro!\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Path to the LUFA library\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# LUFA library compile-time options and predefined tokens\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#LUFA_OPTS += -D NO_BLOCK_SUPPORT\n\n#LUFA_OPTS += -D NO_EEPROM_BYTE_SUPPORT\n\n#LUFA_OPTS += -D NO_FLASH_BYTE_SUPPORT\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Create the LUFA source path variables by including the LUFA root makefile\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# List C source files here. (C dependencies are automatically generated.)\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# List C++ source files here. (C dependencies are automatically generated.)\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# List Assembler source files here.\n\n#     Make them always end in a capital .S.  Files ending in a lowercase .s\n\n#     will not be considered source files but generated files (assembler\n\n#     output from the compiler), and will be deleted upon \"make clean\"!\n\n#     Even though the DOS/Win* filesystem matches both .s and .S the same,\n\n#     it will preserve the spelling of the filenames, and gcc itself does\n\n#     care about how the name is spelled on its command-line.\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Optimization level, can be [0, 1, 2, 3, s].\n\n#     0 = turn off optimization. s = optimize for size.\n\n#     (Note: 3 is not always the best optimization level. See avr-libc FAQ.)\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Debugging format.\n\n#     Native formats for AVR-GCC's -g are dwarf-2 [default] or stabs.\n\n#     AVR Studio 4.10 requires dwarf-2.\n\n#     AVR [Extended] COFF format requires stabs, plus an avr-objcopy run.\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# List any extra directories to look for include files here.\n\n#     Each directory must be seperated by a space.\n\n#     Use forward slashes for directory separators.\n\n#     For a directory that has spaces, enclose it in quotes.\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Compiler flag to set the C Standard level.\n\n#     c89   = \"ANSI\" C\n\n#     gnu89 = c89 plus GCC extensions\n\n#     c99   = ISO C99 standard (not yet fully implemented)\n\n#     gnu99 = c99 plus GCC extensions\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Place -D or -U options here for C sources\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Place -D or -U options here for ASM sources\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Place -D or -U options here for C++ sources\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#CPPDEFS += -D__STDC_LIMIT_MACROS\n\n#CPPDEFS += -D__STDC_CONSTANT_MACROS\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#---------------- Compiler Options C ----------------\n\n#  -g*:          generate debugging information\n\n#  -O*:          optimization level\n\n#  -f...:        tuning, see GCC manual and avr-libc documentation\n\n#  -Wall...:     warning level\n\n#  -Wa,...:      tell GCC to pass this to the assembler.\n\n#    -adhlns...: create assembler listing\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#CFLAGS += -mshort-calls\n\n#CFLAGS += -fno-unit-at-a-time\n\n#CFLAGS += -Wundef\n\n#CFLAGS += -Wunreachable-code\n\n#CFLAGS += -Wsign-compare\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#---------------- Compiler Options C++ ----------------\n\n#  -g*:          generate debugging information\n\n#  -O*:          optimization level\n\n#  -f...:        tuning, see GCC manual and avr-libc documentation\n\n#  -Wall...:     warning level\n\n#  -Wa,...:      tell GCC to pass this to the assembler.\n\n#    -adhlns...: create assembler listing\n",
        "Line" : 254,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#CPPFLAGS += -mshort-calls\n\n#CPPFLAGS += -fno-unit-at-a-time\n\n#CPPFLAGS += -Wstrict-prototypes\n\n#CPPFLAGS += -Wunreachable-code\n\n#CPPFLAGS += -Wsign-compare\n",
        "Line" : 271,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#CPPFLAGS += $(CSTANDARD)\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#---------------- Assembler Options ----------------\n\n#  -Wa,...:   tell GCC to pass this to the assembler.\n\n#  -adhlns:   create listing\n\n#  -gstabs:   have the assembler create line number information; note that\n\n#             for use in COFF files, additional information about filenames\n\n#             and function names needs to be present in the assembler source\n\n#             files -- see avr-libc docs [FIXME: not yet described there]\n\n#  -listing-cont-lines: Sets the maximum number of continuation lines of hex\n\n#       dump that will be displayed for a given single line of source input.\n",
        "Line" : 281,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#---------------- Library Options ----------------\n\n# Minimalistic printf version\n",
        "Line" : 293,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Floating point printf version (requires MATH_LIB = -lm below)\n",
        "Line" : 297,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# If this is left blank, then it will use the Standard printf version.\n",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#PRINTF_LIB = $(PRINTF_LIB_MIN)\n\n#PRINTF_LIB = $(PRINTF_LIB_FLOAT)\n",
        "Line" : 302,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Minimalistic scanf version\n",
        "Line" : 306,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Floating point + %[ scanf version (requires MATH_LIB = -lm below)\n",
        "Line" : 309,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# If this is left blank, then it will use the Standard scanf version.\n",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#SCANF_LIB = $(SCANF_LIB_MIN)\n\n#SCANF_LIB = $(SCANF_LIB_FLOAT)\n",
        "Line" : 314,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List any extra directories to look for libraries here.\n\n#     Each directory must be seperated by a space.\n\n#     Use forward slashes for directory separators.\n\n#     For a directory that has spaces, enclose it in quotes.\n",
        "Line" : 321,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "#---------------- External Memory Options ----------------\n",
        "Line" : 329,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# 64 KB of external RAM, starting after internal RAM (ATmega128!),\n\n# used for variables (.data/.bss) and heap (malloc()).\n\n#EXTMEMOPTS = -Wl,-Tdata=0x801100,--defsym=__heap_end=0x80ffff\n",
        "Line" : 331,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# 64 KB of external RAM, starting after internal RAM (ATmega128!),\n\n# only used for heap (malloc()).\n\n#EXTMEMOPTS = -Wl,--section-start,.data=0x801100,--defsym=__heap_end=0x80ffff\n",
        "Line" : 335,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#---------------- Linker Options ----------------\n\n#  -Wl,...:     tell GCC to pass this to linker.\n\n#    -Map:      create map file\n\n#    --cref:    add cross reference to  map file\n",
        "Line" : 343,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#LDFLAGS += -T linker_script.x\n",
        "Line" : 354,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#---------------- Programming Options (avrdude) ----------------\n",
        "Line" : 358,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# Programming hardware\n\n# Type: avrdude -c ?\n\n# to get a full listing.\n\n#\n",
        "Line" : 360,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# com1 = serial port. Use lpt1 to connect to parallel port.\n",
        "Line" : 366,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "#AVRDUDE_WRITE_EEPROM = -U eeprom:w:$(TARGET).eep\n",
        "Line" : 370,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Uncomment the following if you want avrdude's erase cycle counter.\n\n# Note that this counter needs to be initialized first using -Yn,\n\n# see avrdude manual.\n\n#AVRDUDE_ERASE_COUNTER = -y\n",
        "Line" : 373,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# Uncomment the following if you do /not/ wish a verification to be\n\n# performed after programming the device.\n\n#AVRDUDE_NO_VERIFY = -V\n",
        "Line" : 378,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# Increase verbosity level.  Please use this when submitting bug\n\n# reports about avrdude. See <http://savannah.nongnu.org/projects/avrdude>\n\n# to submit bug reports.\n\n#AVRDUDE_VERBOSE = -v -v\n",
        "Line" : 382,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "#---------------- Debugging Options ----------------\n",
        "Line" : 394,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# For simulavr only - target MCU frequency.\n",
        "Line" : 396,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# Set the DEBUG_UI to either gdb or insight.\n\n# DEBUG_UI = gdb\n",
        "Line" : 399,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# Set the debugging back-end to either avarice, simulavr.\n",
        "Line" : 403,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "#DEBUG_BACKEND = simulavr\n",
        "Line" : 405,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# GDB Init Filename.\n",
        "Line" : 407,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# When using avarice settings for the JTAG\n",
        "Line" : 410,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# Debugging port used to communicate between GDB / avarice / simulavr.\n",
        "Line" : 413,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Debugging host used to communicate between GDB / avarice / simulavr, normally\n\n#     just set to localhost unless doing some sort of crazy debugging when\n\n#     avarice is running on a different computer.\n",
        "Line" : 416,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "#============================================================================\n",
        "Line" : 423,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# Define programs and commands.\n",
        "Line" : 426,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# Define Messages\n\n# English\n",
        "Line" : 441,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# Define all object files.\n",
        "Line" : 464,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# Define all listing files.\n",
        "Line" : 467,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# Compiler flags to generate dependency files.\n",
        "Line" : 471,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# Combine all necessary flags and optional flags.\n\n# Add target processor to flags.\n",
        "Line" : 475,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# Default target.\n",
        "Line" : 485,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# Change the build target to build a HEX file or a library.\n",
        "Line" : 488,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "#build: lib\n",
        "Line" : 490,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# Eye candy.\n\n# AVR Studio 3.x does not check make's exit code but relies on\n\n# the following magic strings to be generated by the compile job.\n",
        "Line" : 503,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# Display size of file.\n",
        "Line" : 515,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# Display compiler version information.\n",
        "Line" : 532,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# Program the device.\n",
        "Line" : 537,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# Generate avr-gdb config/init file which does the following:\n\n#     define the reset signal, load the target file, connect to target, and set\n\n#     a breakpoint at main().\n",
        "Line" : 542,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# Convert ELF to COFF for use in debugging / simulating in AVR Studio or VMLAB.\n",
        "Line" : 573,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# Create final output files (.hex, .eep) from ELF output file.\n",
        "Line" : 595,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "# Create extended listing file from ELF output file.\n",
        "Line" : 607,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# Create a symbol table from ELF output file.\n",
        "Line" : 613,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "# Create library from object files.\n",
        "Line" : 621,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# Link: create ELF output file from object files.\n",
        "Line" : 630,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# Compile: create object files from C source files.\n",
        "Line" : 639,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# Compile: create object files from C++ source files.\n",
        "Line" : 646,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# Compile: create assembler files from C source files.\n",
        "Line" : 653,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "# Compile: create assembler files from C++ source files.\n",
        "Line" : 658,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "# Assemble: create object files from assembler source files.\n",
        "Line" : 663,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# Create preprocessed source for use in sending a bug report.\n",
        "Line" : 670,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "# Target: clean project.\n",
        "Line" : 675,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "# Create object files directory\n",
        "Line" : 712,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "# Include the dependency files.\n",
        "Line" : 716,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "# Listing of phony targets.\n",
        "Line" : 720,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 94
    },
    "kicad/mini/kicad_folder_smc_chinese_con/mooltipass_mini.pro" : {
      "ObjectId" : "f1c0fcd480dd2be42dd19d192783a4fef6f22c7b",
      "LastModified" : "2019-03-29T07:01:41Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "kicad/mini/kicad_folder_smc_te_con/mooltipass_mini.pro" : {
      "ObjectId" : "87299e1907345f78490d44e22bd19a98c8b49941",
      "LastModified" : "2016-11-24T21:47:15Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "kicad/standard/limpkin_design_v1_v2/password.pro" : {
      "ObjectId" : "0f5694071afb82e1967404c3c59563d6202d3755",
      "LastModified" : "2016-11-24T21:47:15Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "kicad/standard/olivier_design_v1/mooltipass.pro" : {
      "ObjectId" : "90033b30aa7b7d7eb8496689e833b95be3939d0e",
      "LastModified" : "2016-11-24T21:47:15Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "kicad/standard/olivier_design_v1_for_prod/mooltipass.pro" : {
      "ObjectId" : "a7509f7af65736196bee81a23085d0c779ad6b89",
      "LastModified" : "2016-11-24T21:47:15Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "kicad/standard/olivier_design_v1_top/mooltipass_top.pro" : {
      "ObjectId" : "9a7ac62e5a0d3e6a0ab660b5e966cfd3d0b76fcd",
      "LastModified" : "2016-11-24T21:47:15Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "sauce_labs_tests/pom.xml" : {
      "ObjectId" : "d26b8e50f685d2a907fff786a8b42d65e4ee8f36",
      "LastModified" : "2019-03-29T07:01:41Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "source_code/Makefile" : {
      "ObjectId" : "0d3a845ac9c85ae351b756485d2010204e8e64d9",
      "LastModified" : "2019-03-29T07:01:41Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Makefile\n\n#\n\n# Created: 2014-01-29\n\n# Author: Mikael Albertsson\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Mooltipass version: vMAJOR.MINOR\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If we are in a git controlled dir, let (matching) tag override version\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Oops, no matching tags, fall back to git hash\n",
        "Line" : 26,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# LTO is available in avr-gcc 4.9.2 of Ubuntu 16.04 and avr-gcc 5.3 of Arch\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Some helpers to get all the .c and .h files.\n\n# $(TARGET) is included inside $(OBJECTS).\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Bootloader build settings\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Special bootloader flags\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Flash size and bootloader section sizes of the target, in KB. These must\n\n# match the target's total FLASH size and the bootloader size set in the\n\n# device's fuses.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Bootloader address calculation formulas\n\n# Do not modify these macros, but rather modify the dependent values above.\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Bootloader linker section flags for relocating the API table sections to\n\n# known FLASH addresses - these should not normally be user-edited.\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Compiler and linker configuration.\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Set CONFIG=DEBUG in the shell from which you invoke make to build a debug\n\n# build.\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#DEFINES := F_CPU=16000000UL F_USB=16000000UL MOOLTIPASS_VERSION=\"\\\"$(VERSION)\\\"\"\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# new from dmbs\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# not used normally\n\n#CFLAGS  += -Wstrict-prototypes\n\n#CFLAGS  += -fno-strict-aliasing\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#LDFLAGS  += -Werror\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Add all defines, each prefixed with -D.\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Use the --mcu and --format=avr options if they are supported by the local\n\n# avr-size program.\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Display the size of generated elf file\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Pattern rule to generate .d files from .c files. The .d files are make-files,\n\n# generated by gcc with all the dependencies of the .c file. They are included\n\n# above and will make all .o files depend on the correct prerequisite sources.\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Include the auto-generated make files that gcc generated in the %.d rule\n\n# above.\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Target to link the object files into the final hex file.\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Extract the sections that should be in the .hex file from the .elf file.\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Extract the eeprom parts from the .elf file.\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# tag the current git state with the next build number, then build that version\n",
        "Line" : 184,
        "CharPositionInLine" : 1
      },
      "26" : {
        "Text" : "#git tag build.$(version_build)\n\n#git push --tags\n",
        "Line" : 186,
        "CharPositionInLine" : 1
      },
      "27" : {
        "Text" : "# Target to set the fuses of the mooltipass device.\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Target to flash the hex image to the mooltipass device.\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Upload the hex image via the dfu bootloader\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Upload the hex image via the dfu bootloader\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 31,
      "Errorlog" : "line 150:88 token recognition error at: '\\1'\n"
    },
    "source_code/doxygen_doc/latex/Makefile" : {
      "ObjectId" : "8cc3866f4a039e77b793bd33774ce84e52a9ae16",
      "LastModified" : "2019-03-29T07:01:41Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "test_bed/standard/kicad/mooltipass.pro" : {
      "ObjectId" : "ae9691ac13ca274e26d08089f49ad5b8c91c2d21",
      "LastModified" : "2019-03-29T07:01:41Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "tools/ent_utility/Makefile" : {
      "ObjectId" : "2a150cf3711090dba55390fa7873798530965806",
      "LastModified" : "2019-03-29T07:01:41Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#   Unix make file for random test program\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#CFLAGS = -O\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "QMAKE" : 7,
    "MAKEFILE" : 7,
    "MAVEN" : 1
  },
  "ElapsedTime" : 7420
}