{
  "Repository" : "21696790",
  "Revision" : "HEAD",
  "ObjectId" : "81f4e5eb797489568a9ddbd4b0c3ce7cde0bb748",
  "CommitTime" : "2019-04-16T19:35:30Z",
  "Files" : {
    "build/fbcode_builder/CMake/FindGMock.cmake" : {
      "ObjectId" : "7a785044a0c5f3b5251f8a90559ac04681d6c967",
      "LastModified" : "2019-04-02T15:09:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Find libgmock\n\n#\n\n#  LIBGMOCK_DEFINES     - List of defines when using libgmock.\n\n#  LIBGMOCK_INCLUDE_DIR - where to find gmock/gmock.h, etc.\n\n#  LIBGMOCK_LIBRARIES   - List of libraries when using libgmock.\n\n#  LIBGMOCK_FOUND       - True if libgmock found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Explicitly set to empty string if not found to avoid it being\n\n# set to NOTFOUND and breaking compilation\n",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# The GTEST_LINKED_AS_SHARED_LIBRARY macro must be set properly on Windows.\n\n#\n\n# There isn't currently an easy way to determine if a library was compiled as\n\n# a shared library on Windows, so just assume we've been built against a\n\n# shared build of gmock for now.\n",
        "Line" : 51,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LIBGMOCK_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "build/fbcode_builder/CMake/FindGflags.cmake" : {
      "ObjectId" : "246ceacdd091fed1a7850d6e3d4cff92c6f8383a",
      "LastModified" : "2019-04-02T15:09:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) Facebook, Inc. and its affiliates.\n\n# Find libgflags.\n\n# There's a lot of compatibility cruft going on in here, both\n\n# to deal with changes across the FB consumers of this and also\n\n# to deal with variances in behavior of cmake itself.\n\n#\n\n# Since this file is named FindGflags.cmake the cmake convention\n\n# is for the module to export both GFLAGS_FOUND and Gflags_FOUND.\n\n# The convention expected by consumers is that we export the\n\n# following variables, even though these do not match the cmake\n\n# conventions:\n\n#\n\n#  LIBGFLAGS_INCLUDE_DIR - where to find gflags/gflags.h, etc.\n\n#  LIBGFLAGS_LIBRARY     - List of libraries when using libgflags.\n\n#  LIBGFLAGS_FOUND       - True if libgflags found.\n\n#\n\n# We need to be able to locate gflags both from an installed\n\n# cmake config file and just from the raw headers and libs, so\n\n# test for the former and then the latter, and then stick\n\n# the results together and export them into the variables\n\n# listed above.\n\n#\n\n# For forwards compatibility, we export the following variables:\n\n#\n\n#  gflags_INCLUDE_DIR - where to find gflags/gflags.h, etc.\n\n#  gflags_TARGET / GFLAGS_TARGET / gflags_LIBRARIES\n\n#                     - List of libraries when using libgflags.\n\n#  gflags_FOUND       - True if libgflags found.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 32,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Re-export the config-specified libs with our local names\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# cmake module compat\n",
        "Line" : 45,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LIBGFLAGS_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# cmake module compat\n",
        "Line" : 61,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# compat with some existing FindGflags consumers\n",
        "Line" : 63,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Compat with the gflags CONFIG based detection\n",
        "Line" : 66,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Compat with the gflags CONFIG based detection\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "build/fbcode_builder/CMake/FindGlog.cmake" : {
      "ObjectId" : "a589b2e37d31af883b59096005474a4e01416833",
      "LastModified" : "2019-04-02T15:09:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) Facebook, Inc. and its affiliates.\n\n# - Try to find Glog\n\n# Once done, this will define\n\n#\n\n# GLOG_FOUND - system has Glog\n\n# GLOG_INCLUDE_DIRS - the Glog include directories\n\n# GLOG_LIBRARIES - link these to use Glog\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "build/fbcode_builder/CMake/FindLibEvent.cmake" : {
      "ObjectId" : "dd11ebd8435d7d475d78855d2baa2e2009299ea4",
      "LastModified" : "2019-04-08T17:59:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) Facebook, Inc. and its affiliates.\n\n# - Find LibEvent (a cross event library)\n\n# This module defines\n\n# LIBEVENT_INCLUDE_DIR, where to find LibEvent headers\n\n# LIBEVENT_LIB, LibEvent libraries\n\n# LibEvent_FOUND, If false, do not try to use libevent\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Re-export the config under our own names\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Somewhat gross, but some vcpkg installed libevents have a relative\n\n# `include` path exported into LIBEVENT_INCLUDE_DIRS, which triggers\n\n# a cmake error because it resolves to the `include` dir within the\n\n# folly repo, which is not something cmake allows to be in the\n\n# INTERFACE_INCLUDE_DIRECTORIES.  Thankfully on such a system the\n\n# actual include directory is already part of the global include\n\n# directories, so we can just skip it.\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Unfortunately, with a bare target name `event`, downstream consumers\n\n# of the package that depends on `Libevent` located via CONFIG end\n\n# up exporting just a bare `event` in their libraries.  This is problematic\n\n# because this in interpreted as just `-levent` with no library path.\n\n# When libevent is not installed in the default installation prefix\n\n# this results in linker errors.\n\n# To resolve this, we ask cmake to lookup the full path to the library\n\n# and use that instead.\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Allow reading the LOCATION property\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "build/fbcode_builder/CMake/FindPCRE.cmake" : {
      "ObjectId" : "32ccb372536f92a3b983baf2f8b4641823a19ea4",
      "LastModified" : "2019-04-02T15:09:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) Facebook, Inc. and its affiliates.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "build/fbcode_builder/CMake/ThriftCppLibrary.cmake" : {
      "ObjectId" : "2613e888a4f36da9b37aa006dad6e8d2187f3c96",
      "LastModified" : "2019-04-02T15:09:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) Facebook, Inc. and its affiliates.\n\n# NOTE: If you change this file, fbcode/fboss/github/ThriftCppLibrary.cmake also\n\n# needs to be changed.  TODO: this should be handled via shipit.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Parse the arguments\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# CMake 3.12 is finally getting a list(JOIN) function, but until then\n\n# treating the list as a string and replacing the semicolons is good enough.\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Compute the list of generated files\n",
        "Line" : 45,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Emit the rule to run the thrift compiler\n",
        "Line" : 73,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Now emit the library rule to compile the sources\n",
        "Line" : 96,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "wangle/CMakeLists.txt" : {
      "ObjectId" : "294ecf74dd6c860e7b005c570a52354969bea549",
      "LastModified" : "2019-04-08T17:59:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  Copyright (c) 2014, Facebook, Inc.\n\n#  All rights reserved.\n\n#\n\n#  This source code is licensed under the BSD-style license found in the\n\n#  LICENSE file in the root directory of this source tree. An additional grant\n\n#  of patent rights can be found in the PATENTS file in the same directory.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# for in-fbsource builds\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# For shipit-transformed builds\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# When installing Folly & Wangle in a non-default prefix, this will let\n\n# projects linking against libwangle.so to find libfolly.so automatically.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Try finding folly via its installed CMake configuration file first.\n\n# This should work if folly was built with CMake.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Look for folly using our FindFolly.cmake module.  This may work if the\n\n# folly was built with its older autoconf build files rather than with CMake.\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# We unfortunately cannot install wangle's headers with the install()\n\n# statement above.  install(TARGETS) appears to only support installing\n\n# PUBLIC_HEADER in a flat include directory, and not a deeper tree.\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Install CMake package configuration files for wangle\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Download and install GoogleMock\n",
        "Line" : 208,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Disable install step\n",
        "Line" : 214,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# Create a libgmock target to be used as a dependency by test programs\n",
        "Line" : 224,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Set gmock properties\n",
        "Line" : 230,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# this test segfaults\n",
        "Line" : 259,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# this test fails with an exception\n\n#  add_gtest(service/test/ServiceTest.cpp ServiceTest)\n\n# this test requires arguments?\n\n#  add_gtest(ssl/test/SSLCacheTest.cpp SSLCacheTest)\n",
        "Line" : 273,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 14
    },
    "wangle/cmake/CheckAtomic.cmake" : {
      "ObjectId" : "b0cadee9b4732008194e55dd27265028c3249724",
      "LastModified" : "2019-04-02T15:09:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# University of Illinois/NCSA\n\n# Open Source License\n\n#\n\n# Copyright (c) 2003-2017 University of Illinois at Urbana-Champaign.\n\n# All rights reserved.\n\n#\n\n# Developed by:\n\n#\n\n#     LLVM Team\n\n#\n\n#     University of Illinois at Urbana-Champaign\n\n#\n\n#     http://llvm.org\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy of\n\n# this software and associated documentation files (the \"Software\"), to deal with\n\n# the Software without restriction, including without limitation the rights to\n\n# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n\n# of the Software, and to permit persons to whom the Software is furnished to do\n\n# so, subject to the following conditions:\n\n#\n\n#     * Redistributions of source code must retain the above copyright notice,\n\n#       this list of conditions and the following disclaimers.\n\n#\n\n#     * Redistributions in binary form must reproduce the above copyright notice,\n\n#       this list of conditions and the following disclaimers in the\n\n#       documentation and/or other materials provided with the distribution.\n\n#\n\n#     * Neither the names of the LLVM Team, University of Illinois at\n\n#       Urbana-Champaign, nor the names of its contributors may be used to\n\n#       endorse or promote products derived from this Software without specific\n\n#       prior written permission.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n\n# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n\n# CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS WITH THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sometimes linking against libatomic is required for atomic ops, if\n\n# the platform doesn't support lock-free atomics.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This isn't necessary on MSVC, so avoid command-line switch annoyance\n\n# by only running on GCC-like hosts.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# First check if atomics work without the library.\n",
        "Line" : 77,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# If not, check if the library exists, and atomics work with it.\n",
        "Line" : 79,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "wangle/cmake/FindDoubleConversion.cmake" : {
      "ObjectId" : "fee62ced19911ab2c0df6de0ab0f687bed70b4b4",
      "LastModified" : "2019-04-02T15:09:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find double-conversion\n\n# Once done, this will define\n\n#\n\n# DOUBLE_CONVERSION_FOUND - system has double-conversion\n\n# DOUBLE_CONVERSION_INCLUDE_DIRS - the double-conversion include directories\n\n# DOUBLE_CONVERSION_LIBRARIES - link these to use double-conversion\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "wangle/cmake/FindFolly.cmake" : {
      "ObjectId" : "93708aff5193276e34bda0f2435b7d0f8ceaa9ff",
      "LastModified" : "2019-04-02T15:09:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  Copyright (c) 2014, Facebook, Inc.\n\n#  All rights reserved.\n\n#\n\n#  This source code is licensed under the BSD-style license found in the\n\n#  LICENSE file in the root directory of this source tree. An additional grant\n\n#  of patent rights can be found in the PATENTS file in the same directory.\n\n#\n\n# - Try to find folly\n\n# This will define\n\n# FOLLY_FOUND\n\n# FOLLY_INCLUDE_DIR\n\n# FOLLY_LIBRARIES\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "wangle/cmake/FindLibrt.cmake" : {
      "ObjectId" : "0e104edf8e5056d8e9a53200b03fdd100a5cc1d6",
      "LastModified" : "2019-04-02T15:09:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find librt\n\n# Once done, this will define\n\n#\n\n# LIBRT_FOUND - system has librt\n\n# LIBRT_LIBRARIES - link these to use librt\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 11
  },
  "ElapsedTime" : 1421
}