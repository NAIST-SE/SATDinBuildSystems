{
  "Repository" : "17381660",
  "Revision" : "HEAD",
  "ObjectId" : "bc62d8ae5034ea1cca381878edb067ea26d8c020",
  "CommitTime" : "2019-01-16T17:01:21Z",
  "Files" : {
    "Makefile" : {
      "ObjectId" : "87cfa5ffa62cd3b1811b934fc742ae5c4cf9a555",
      "LastModified" : "2017-07-26T12:45:48Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Add help text after each target name starting with ' \\#\\# '\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##/\\1\\t/'\n",
        "Line" : 5,
        "CharPositionInLine" : 75
      },
      "2" : {
        "Text" : "## \t Run development buildout\n",
        "Line" : 8,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "########################################################################\n\n## Setup\n\n## You don't run these rules unless you're a prototype dev\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Get the latest version of the prototype\n",
        "Line" : 30,
        "CharPositionInLine" : 11
      },
      "5" : {
        "Text" : "# demo buildout with CSRF disabled\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "####################################################################\n\n# docker.io\n\n# see comments for using boot2docker on MacOSX\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## Create docker container\n",
        "Line" : 71,
        "CharPositionInLine" : 45
      },
      "8" : {
        "Text" : "# re-uses ssh agent\n\n# also loads your standard .bashrc\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## Start docker container\n",
        "Line" : 76,
        "CharPositionInLine" : 13
      },
      "10" : {
        "Text" : "# double $ only in makefile\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "####################################################################\n\n# Guido's lazy targets\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "####################################################################\n\n# Solr\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "####################################################################\n\n# Testing\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "## Verify that docsplit dependencies are installed\n",
        "Line" : 141,
        "CharPositionInLine" : 16
      },
      "15" : {
        "Text" : "# inspect robot traceback:\n\n# bin/robot-server ploneintranet.suite.testing.PLONEINTRANET_SUITE_ROBOT\n\n# firefox localhost:55001/plone\n\n# To see the tests going on, use DISPLAY=:0, or use Xephyr -screen 1280x1024 :1 instead of Xvfb\n\n# ROBOT_SELENIUM_RUN_ON_FAILURE=Debug DISPLAY=:0 bin/test -s ploneintranet.suite -t post_file.robot\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## Run robot tests with a virtual X server\n",
        "Line" : 151,
        "CharPositionInLine" : 12
      },
      "17" : {
        "Text" : "## Run all tests apart from robot tests\n",
        "Line" : 155,
        "CharPositionInLine" : 14
      },
      "18" : {
        "Text" : "## \t Run all tests, including robot tests with a virtual X server\n",
        "Line" : 158,
        "CharPositionInLine" : 7
      },
      "19" : {
        "Text" : "####################################################################\n\n# Documentation\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Re-generate\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 1843
}