{
  "Repository" : "27698755",
  "Revision" : "HEAD",
  "ObjectId" : "dbc514c371b96db96a492d281d3e904a26fa6459",
  "CommitTime" : "2018-02-24T20:06:30Z",
  "Files" : {
    "Lib/Eigen/CMakeLists.txt" : {
      "ObjectId" : "a92dd6f6cafd2206f8be1a50f1294e2ae49feb5a",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Lib/Eigen/src/CMakeLists.txt" : {
      "ObjectId" : "c326f374d9ee89c953dd9caefbfaffccb905511c",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Lib/Eigen/src/Cholesky/CMakeLists.txt" : {
      "ObjectId" : "d01488b41a826850277a918f555e3668167dd367",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Lib/Eigen/src/CholmodSupport/CMakeLists.txt" : {
      "ObjectId" : "814dfa61313847c0f33538e11c4ac4557ec3e32e",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Lib/Eigen/src/Core/CMakeLists.txt" : {
      "ObjectId" : "2346fc2bbca4d9bd699efc4c366afd7abd400e3c",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Lib/Eigen/src/Core/arch/AltiVec/CMakeLists.txt" : {
      "ObjectId" : "9f8d2e9c46765f4253d6877d040e5c2a90612086",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Lib/Eigen/src/Core/arch/CMakeLists.txt" : {
      "ObjectId" : "8456dec1581554a4f7798ebe7d9d292369f21607",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Lib/Eigen/src/Core/arch/Default/CMakeLists.txt" : {
      "ObjectId" : "339c091d156100d46f3acbc67ad205749d8f4b3d",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Lib/Eigen/src/Core/arch/NEON/CMakeLists.txt" : {
      "ObjectId" : "fd4d4af50cb46dac7e6b29ef8654e70528e1f3ca",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Lib/Eigen/src/Core/arch/SSE/CMakeLists.txt" : {
      "ObjectId" : "46ea7cc623c62394c78425b15e100b84126b40a7",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Lib/Eigen/src/Core/products/CMakeLists.txt" : {
      "ObjectId" : "21fc94ae38a5574289ae4e304ce087f3ed6897f0",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Lib/Eigen/src/Core/util/CMakeLists.txt" : {
      "ObjectId" : "a1e2e521fc11124c92768621c4edf784bc10f51f",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Lib/Eigen/src/Eigen2Support/CMakeLists.txt" : {
      "ObjectId" : "7ae41b3cbe9c568f7efdaf45cd1a1ef874bf309b",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Lib/Eigen/src/Eigen2Support/Geometry/CMakeLists.txt" : {
      "ObjectId" : "c347a8f26228694dc67e0e89ff6d509152dac738",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Lib/Eigen/src/Eigenvalues/CMakeLists.txt" : {
      "ObjectId" : "193e0268599516e2515318ed04eb6dda37b2dd59",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Lib/Eigen/src/Geometry/CMakeLists.txt" : {
      "ObjectId" : "f8f728b84faf0e08d91fac04e2986260368b9063",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Lib/Eigen/src/Geometry/arch/CMakeLists.txt" : {
      "ObjectId" : "1267a79c78767c43d11c529cc84468cbdd1052a2",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Lib/Eigen/src/Householder/CMakeLists.txt" : {
      "ObjectId" : "ce4937db061bbadb0357ccc45547b141761a70e3",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Lib/Eigen/src/IterativeLinearSolvers/CMakeLists.txt" : {
      "ObjectId" : "59ccc0072cc4ed78e6aa783bfab2486aac757fca",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Lib/Eigen/src/Jacobi/CMakeLists.txt" : {
      "ObjectId" : "490dac626439ade5e05baaba504689366db22e6d",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Lib/Eigen/src/LU/CMakeLists.txt" : {
      "ObjectId" : "e0d8d78c1720abb27432f41aa2ace29ef3f3794f",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Lib/Eigen/src/LU/arch/CMakeLists.txt" : {
      "ObjectId" : "f6b7ed9ecc3a25e3885c7fece60428481e51c696",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Lib/Eigen/src/OrderingMethods/CMakeLists.txt" : {
      "ObjectId" : "9f4bb275808257ac71d6c04d9c602ce5c0b5be8d",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Lib/Eigen/src/PaStiXSupport/CMakeLists.txt" : {
      "ObjectId" : "28c657e9bcf7d3e0ecc800f6d5a11d54020b58cc",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Lib/Eigen/src/PardisoSupport/CMakeLists.txt" : {
      "ObjectId" : "a097ab401920ea1b7068f790edcfcf9086b3038b",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Lib/Eigen/src/QR/CMakeLists.txt" : {
      "ObjectId" : "96f43d7f5b30fa024b9bd2d9e3a5dacb9d401ecb",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Lib/Eigen/src/SVD/CMakeLists.txt" : {
      "ObjectId" : "55efc44b12970d5ec715393cb68cd061203ce941",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Lib/Eigen/src/SparseCholesky/CMakeLists.txt" : {
      "ObjectId" : "375a59d7a577877313a1ff2a6bf1c8fac138768b",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Lib/Eigen/src/SparseCore/CMakeLists.txt" : {
      "ObjectId" : "d860452a65cb20850a12a120ab1fd3e3fd83dccc",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Lib/Eigen/src/StlSupport/CMakeLists.txt" : {
      "ObjectId" : "0f094f637acd51b0931e58a199c30f550beaa282",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Lib/Eigen/src/SuperLUSupport/CMakeLists.txt" : {
      "ObjectId" : "b28ebe5839cf5c664abdb44c186547507ce688d3",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Lib/Eigen/src/UmfPackSupport/CMakeLists.txt" : {
      "ObjectId" : "a57de00209d3bc746b050d1b8aa736bccc66f2bc",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Lib/Eigen/src/misc/CMakeLists.txt" : {
      "ObjectId" : "a58ffb7457e06a7a69426a21a9d46d07a6a8ee91",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Lib/Eigen/src/plugins/CMakeLists.txt" : {
      "ObjectId" : "1a1d3ffbd724d17e161c40c48ac56c8b1aeb2e1f",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Lib/vtk/lib/vtk-5.8/CMake/FindMySQL.cmake" : {
      "ObjectId" : "afe3577d0bc190a4685662338bb3ba20d31b9b0f",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\r\n\n# Find the MySQL client includes and library\r\n\n# \r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module defines\r\n\n# MYSQL_INCLUDE_DIRECTORIES, where to find mysql.h\r\n\n# MYSQL_LIBRARIES, the libraries to link against to connect to MySQL\r\n\n# MYSQL_FOUND, If false, you cannot build anything that requires MySQL.\r\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# also defined, but not for general use are\r\n\n# MYSQL_LIBRARY, where to find the MySQL library.\r\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# \r\n\n# XXX NOTE: This is not yet for general use.  I'm pretty sure there\r\n\n# are other libraries I have to link against at the same time.\r\n\n#\r\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# On Windows you typically don't need to include any extra libraries\r\n\n# to build MYSQL stuff.\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Lib/vtk/lib/vtk-5.8/CMake/FindPythonLibs.cmake" : {
      "ObjectId" : "9fd2a088d1e24d644610b43633f02ba9c05aa271",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find python libraries\r\n\n# This module finds if Python is installed and determines where the\r\n\n# include files and libraries are. It also determines what the name of\r\n\n# the library is. This code sets the following variables:\r\n\n#\r\n\n#  PYTHONLIBS_FOUND           - have the Python libs been found\r\n\n#  PYTHON_LIBRARIES           - path to the python library\r\n\n#  PYTHON_INCLUDE_PATH        - path to where Python.h is found (deprecated)\r\n\n#  PYTHON_INCLUDE_DIRS        - path to where Python.h is found\r\n\n#  PYTHON_DEBUG_LIBRARIES     - path to the debug library\r\n\n#  PYTHON_VERSION             - python version string e.g. 2.7.1\r\n\n#  PYTHON_MAJOR_VERSION       - python major version number\r\n\n#  PYTHON_MINOR_VERSION       - python minor version number\r\n\n#  PYTHON_MICRO_VERSION       - python release version number\r\n\n#\r\n\n# This code uses the following variables:\r\n\n#  Python_ADDITIONAL_VERSIONS - list of additional Python versions to search for\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\r\n\n# Copyright 2001-2009 Kitware, Inc.\r\n\n#\r\n\n# Distributed under the OSI-approved BSD License (the \"License\");\r\n\n# see accompanying file Copyright.txt for details.\r\n\n#\r\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\r\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n\n# See the License for more information.\r\n\n#=============================================================================\r\n\n# (To distribute this file outside of CMake, substitute the full\r\n\n#  License text for the above reference.)\r\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search for the python framework on Apple.\r\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set up the versions we know about, in the order we will search. Always add\r\n\n# the user supplied additional versions to the front.\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Avoid finding the .dll in the PATH.  We want the .lib.\r\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Look for the static library in the Python config directory\r\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Avoid finding the .dll in the PATH.  We want the .lib.\r\n",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# This is where the static library is usually located\r\n",
        "Line" : 64,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# For backward compatibility, honour value of PYTHON_INCLUDE_PATH, if\r\n\n# PYTHON_INCLUDE_DIR is not set.\r\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# For backward compatibility, set PYTHON_INCLUDE_PATH, but make it internal.\r\n",
        "Line" : 92,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# look in PYTHON_INCLUDE_DIR for patchlevel.h, which contains the\r\n\n# version number macros in all versions of python from 1.5 through\r\n\n# at least version 3.2, and set these vars:  PYTHON_VERSION,\r\n\n# PYTHON_MAJOR_VERSION, PYTHON_MINOR_VERSION, PYTHON_MICRO_VERSION.\r\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# We use PYTHON_INCLUDE_DIR, PYTHON_LIBRARY and PYTHON_DEBUG_LIBRARY for the\r\n\n# cache entries because they are meant to specify the location of a single\r\n\n# library. We now set the variables listed by the documentation for this\r\n\n# module.\r\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# PYTHON_ADD_MODULE(<name> src1 src2 ... srcN) is used to build modules for python.\r\n\n# PYTHON_WRITE_MODULES_HEADER(<filename>) writes a header file you can include\r\n\n# in your sources to initialize the static python modules\r\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Mark these options as advanced\r\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "#    TARGET_LINK_LIBRARIES(${_NAME} ${PYTHON_LIBRARIES})\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# with CONFIGURE_FILE() cmake complains that you may not use a file created using FILE(WRITE) as input file for CONFIGURE_FILE()\r\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "Lib/vtk/lib/vtk-5.8/CMake/FindTCL.cmake" : {
      "ObjectId" : "6324dca371968d372e61b32ff724e1f16c5443b1",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find Tcl includes and libraries.\r\n\n# This module finds if Tcl is installed and determines where the\r\n\n# include files and libraries are. It also determines what the name of\r\n\n# the library is. This code sets the following variables:\r\n\n#  TCL_FOUND              = Tcl was found\r\n\n#  TK_FOUND               = Tk was found\r\n\n#  TCLTK_FOUND            = Tcl and Tk were found\r\n\n#  TCL_LIBRARY            = path to Tcl library (tcl tcl80)\r\n\n#  TCL_INCLUDE_PATH       = path to where tcl.h can be found\r\n\n#  TCL_TCLSH              = path to tclsh binary (tcl tcl80)\r\n\n#  TK_LIBRARY             = path to Tk library (tk tk80 etc)\r\n\n#  TK_INCLUDE_PATH        = path to where tk.h can be found\r\n\n#  TK_WISH                = full path to the wish executable\r\n\n#\r\n\n# In an effort to remove some clutter and clear up some issues for people\r\n\n# who are not necessarily Tcl/Tk gurus/developpers, some variables were\r\n\n# moved or removed. Changes compared to CMake 2.4 are:\r\n\n# - The stub libraries are now found in FindTclStub.cmake\r\n\n#   => they were only useful for people writing Tcl/Tk extensions.\r\n\n# - TCL_LIBRARY_DEBUG and TK_LIBRARY_DEBUG were removed.\r\n\n#   => these libs are not packaged by default with Tcl/Tk distributions. \r\n\n#      Even when Tcl/Tk is built from source, several flavors of debug libs\r\n\n#      are created and there is no real reason to pick a single one\r\n\n#      specifically (say, amongst tcl84g, tcl84gs, or tcl84sgx). \r\n\n#      Let's leave that choice to the user by allowing him to assign \r\n\n#      TCL_LIBRARY to any Tcl library, debug or not.\r\n\n# - TK_INTERNAL_PATH was removed.\r\n\n#   => this ended up being only a Win32 variable, and there is a lot of\r\n\n#      confusion regarding the location of this file in an installed Tcl/Tk\r\n\n#      tree anyway (see 8.5 for example). If you need the internal path at\r\n\n#      this point it is safer you ask directly where the *source* tree is\r\n\n#      and dig from there.\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set TCL_FOUND to TRUE if \r\n\n# all listed variables are TRUE\r\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Lib/vtk/lib/vtk-5.8/CMake/VTKVersionMacros.cmake" : {
      "ObjectId" : "e07f52148ea8056e4d32eaebc281689e34389e13",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ---------------------------------------------------------------------------\r\n\n# VTK_GET_SOURCE_REVISION_AND_DATE\r\n\n# Get vtkVTKVersion's source revision and date and store them in\r\n\n# ${revision_varname} and ${date_varname} respectively.\r\n\n#\r\n\n# This macro can be used to require a specific revision of the VTK\r\n\n# library in between version changes.\r\n\n# For example:\r\n\n#   INCLUDE(\"${VTK_CMAKE_DIR}/VTKVersionMacros.cmake\")\r\n\n#   VTK_GET_SOURCE_REVISION_AND_DATE(source_revision source_date)\r\n\n#   IF(source_revision LESS 1.4)\r\n\n#    MESSAGE(FATAL_ERROR \"Sorry, your VTK library was last updated on ${source_date}. Its source revision, according to vtkVTKVersion.h, is ${source_revision}. Please update to a newer revision.\")\r\n\n#   ENDIF(source_revision LESS 1.4)\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Lib/vtk/lib/vtk-5.8/CMake/vtkExportKit.cmake" : {
      "ObjectId" : "c3737cf7163675c6e9deb8c00aead8965e723f8d",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Export the list of classes from the install tree.\r\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Get the class name from the full file name.  All class headers\r\n\n# will be installed to the same directory for this kit in the\r\n\n# install tree.\r\n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Export the list of classes from the build tree.\r\n\n# This file is also used when converting Tcl tests to python tests.\r\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Get the class name with the directory if any.  Some class\r\n\n# headers may be in the build tree while others are in the source\r\n\n# tree.\r\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#-----------------------------------------------------------------------------\r\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "Lib/vtk/lib/vtk-5.8/CMake/vtkMakeInstantiator.cmake" : {
      "ObjectId" : "f0b50e03a7598ce02a280493d9c5e8f64da20a91",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\r\n\n# a cmake implementation of the Wrap Tcl command\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# VTK_MAKE_INSTANTIATOR(className \r\n\n#                       outSourceList\r\n\n#                       src-list1\r\n\n#                       EXPORT_MACRO\r\n\n#                       HEADER_LOCATION\r\n\n#                       INCLUDES)\r\n\n#\r\n\n# Generates a new class with the given name and adds its files to the\r\n\n# given outSourceList.  It registers the classes from the other given\r\n\n# source lists with vtkInstantiator when it is loaded.  The output\r\n\n# source list should be added to the library with the classes it\r\n\n# registers.\r\n\n# The EXPORT_MACRO argument must be given and followed by the export\r\n\n# macro to use when generating the class (ex. VTK_COMMON_EXPORT).\r\n\n# The HEADER_LOCATION option must be followed by a path.  It specifies\r\n\n# the directory in which to place the generated class's header file.\r\n\n# The generated class implementation files always go in the build\r\n\n# directory corresponding to the CMakeLists.txt file containing\r\n\n# the command.  This is the default location for the header.\r\n\n# The INCLUDES option can be followed by a list of zero or more files.\r\n\n# These files will be #included by the generated instantiator header,\r\n\n# and can be used to gain access to the specified exportMacro in the\r\n\n# C++ code.\r\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# convert to the WRAP3 signature\r\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Initialize local variables\r\n",
        "Line" : 73,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# make the arguments available to the configured files\r\n",
        "Line" : 79,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# For each include\r\n",
        "Line" : 83,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# generate the header\r\n",
        "Line" : 85,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# For each class\r\n",
        "Line" : 90,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# should we wrap the file?\r\n",
        "Line" : 93,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# if it is abstract or wrap exclude then don't wrap it\r\n",
        "Line" : 98,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# don't wrap vtkIndent or vtkTimeStamp\r\n",
        "Line" : 103,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# finally if we should wrap it, then ...\r\n",
        "Line" : 114,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# what is the filename without the extension\r\n",
        "Line" : 117,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# generate the implementation\r\n",
        "Line" : 120,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# add the source file to the source list\r\n",
        "Line" : 133,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 15
    },
    "Lib/vtk/lib/vtk-5.8/CMake/vtkTclTkMacros.cmake" : {
      "ObjectId" : "241910616235d0a53356a01bddd268902004513b",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ----------------------------------------------------------------------------\r\n\n# VTK_GET_TCL_TK_VERSION\r\n\n# Return the major/minor version of the Tcl/Tk library used by VTK.\r\n\n#\r\n\n# in: tcl_tk_major_version: name of the var the major version is written to\r\n\n#     tcl_tk_minor_version: name of the var the minor version is written to\r\n\n#\r\n\n# ex: VTK_GET_TCL_TK_VERSION (\"TCL_TK_MAJOR_VERSION\" \"TCL_TK_MINOR_VERSION\")\r\n\n#     SET (TCL_TK_VERSION \"${TCL_TK_MAJOR_VERSION}.${TCL_TK_MINOR_VERSION}\")\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Try to find the current Tcl/Tk version by matching TK_INTERNAL_PATH\r\n\n# or TCL_LIBRARY against some version numbers\r\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Mac\r\n",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\r\n\n# VTK_GET_TCL_SUPPORT_FILES, VTK_GET_TK_SUPPORT_FILES\r\n\n# Get a list of Tcl/Tk support files for a given Tcl/Tk repository.\r\n\n# Tcl/Tk support files are additional files that are mandatory for Tcl/Tk\r\n\n# to work properly. Linking against Tcl/Tk shared/static library is just\r\n\n# not enough, Tcl/Tk needs to access those files at run-time.\r\n\n# A typical Tcl/Tk installation will store support files in sub-directories \r\n\n# inside the Tcl/Tk lib directory, organized by version number. \r\n\n# Example:\r\n\n#    c:/tcl/lib/tcl8.4\r\n\n#    c:/tcl/lib/tcl8.3\r\n\n#    c:/tcl/lib/tk8.4\r\n\n#    c:/tcl/lib/tk8.3\r\n\n# A typical source repository is organized differently:\r\n\n#    c:/tcl8.4.5/library\r\n\n#    c:/tk8.4.5/library\r\n\n# Given the path to the Tcl support lib dir, VTK_GET_TCL_SUPPORT_FILES will\r\n\n# return the corresponding list of support files.\r\n\n# Given the path to the Tk support lib dir, VTK_GET_TK_SUPPORT_FILES will\r\n\n# return the corresponding list of support files.\r\n\n#\r\n\n# in: support_lib_dir: path to the Tcl (or Tk) support lib dir\r\n\n#     list:            name of the var the list is written to\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Tcl support files (*.tcl + encoding + tclIndex, etc.)\r\n",
        "Line" : 86,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Tk support files (*.tcl + tclIndex, etc.)\r\n",
        "Line" : 102,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# ----------------------------------------------------------------------------\r\n\n# VTK_COPY_TCL_TK_SUPPORT_FILES\r\n\n# Copy (or install) Tcl/Tk support files to a specific location.\r\n\n# See VTK_GET_TCL_SUPPORT_FILES for more info about support files.\r\n\n# Given the paths to the Tcl and Tk support lib dirs, this macro will \r\n\n# copy (or install) the appropriate support files to destination dirs, \r\n\n# recreating the subdirs.\r\n\n# This macro takes an optional last parameter, if set to INSTALL the \r\n\n# files will be scheduled for installation (using CMake's INSTALL)\r\n\n# instead of copied.\r\n\n#\r\n\n# in: tcl_support_lib_dir:  path to the Tcl support lib dir\r\n\n#     tcl_support_lib_dest: destination dir for the Tcl support lib files\r\n\n#     tk_support_lib_dir:   path to the Tk support lib dir\r\n\n#     tk_support_lib_dest:  destination dir for the Tk support lib files\r\n\n#     INSTALL:              optional parameter (install files instead of copy)\r\n\n#\r\n\n# ex: VTK_COPY_TCL_TK_SUPPORT_FILES (\r\n\n#       \"c:/tcl/lib/tcl8.4\" \"d:/vtk-bin/TclTk/lib/tcl8.4\"\r\n\n#       \"c:/tcl/lib/tk8.4\" \"d:/vtk-bin/TclTk/lib/tk8.4\")\r\n\n#     this will copy support files from:\r\n\n#       c:/tcl/lib/tcl8.4\r\n\n#       c:/tcl/lib/tk8.4\r\n\n#     to:\r\n\n#       d:/vtk-bin/TclTk/lib/tcl8.4\r\n\n#       d:/vtk-bin/TclTk/lib/tk8.4\r\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Get the support files and copy them to dest dir\r\n\n# Check if EXISTS to work around CONFIGURE_FILE bug (if file does not\r\n\n# exist, it would create the subdirs anyway)\r\n",
        "Line" : 145,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# ----------------------------------------------------------------------------\r\n\n# VTK_COPY_TCL_TK_SUPPORT_FILES_TO_DIR\r\n\n# Front-end to VTK_COPY_TCL_TK_SUPPORT_FILES, this macro will \r\n\n# copy (or install) the appropriate Tcl/Tk support files to a directory.\r\n\n# The Tcl/Tk version is retrieved automatically and used to create\r\n\n# the subdirectories (see example below)\r\n\n# This macro takes an optional last parameter, if set to INSTALL the \r\n\n# files will be scheduled for installation (using CMake's INSTALL)\r\n\n# instead of copied.\r\n\n#\r\n\n# in: tcl_support_lib_dir: path to the Tcl support lib dir\r\n\n#     tk_support_lib_dir:  path to the Tk support lib dir\r\n\n#     target_dir:          target directory\r\n\n#     INSTALL:             optional parameter (install files instead of copy)\r\n\n#\r\n\n# ex: VTK_COPY_TCL_TK_SUPPORT_FILES_TO_DIR (\r\n\n#        \"c:/tcl/lib/tcl8.4\" \"c:/tcl/lib/tk8.4\" \"d:/vtk-bin/lib\")\r\n\n#     if this project is configured to use TclTk 8.4, this will copy support \r\n\n#     files from:\r\n\n#       c:/tcl/lib/tcl8.4\r\n\n#       c:/tcl/lib/tk8.4\r\n\n#     to:\r\n\n#       d:/vtk-bin/lib/tcl8.4\r\n\n#       d:/vtk-bin/lib/tk8.4\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ----------------------------------------------------------------------------\r\n\n# VTK_COPY_TCL_TK_SUPPORT_FILES_TO_BUILD_DIR\r\n\n# Front-end to VTK_COPY_TCL_TK_SUPPORT_FILES_TO_DIR, this macro will copy the\r\n\n# appropriate Tcl/Tk support files to a project build directory.\r\n\n# The support files will be copied simultaneously to all configuration \r\n\n# sub-directories (Release, RelInfo, Debug, etc.) if needed.\r\n\n# The Tcl/Tk version is retrieved automatically and used to create\r\n\n# the subdirectories (see example below)\r\n\n#\r\n\n# in: tcl_support_lib_dir: path to the Tcl support lib dir\r\n\n#     tk_support_lib_dir:  path to the Tk support lib dir\r\n\n#     build_dir:           project build dir\r\n\n#     dir:                 relative subdir inside the build dir, into which the\r\n\n#                          support files will be copied.\r\n\n#\r\n\n# ex: VTK_COPY_TCL_TK_SUPPORT_FILES_TO_BUILD_DIR (\r\n\n#        \"c:/tcl/lib/tcl8.4\" \"c:/tcl/lib/tk8.4\" \"d:/vtk-bin\" \"TclTk/lib\")\r\n\n#     if this project is configured to use TclTk 8.4, this will copy support \r\n\n#     files from:\r\n\n#       c:/tcl/lib/tcl8.4\r\n\n#       c:/tcl/lib/tk8.4\r\n\n#     to:\r\n\n#       d:/vtk-bin/TclTk/lib/tcl8.4\r\n\n#       d:/vtk-bin/TclTk/lib/tk8.4\r\n\n#     or (if configuration types are supported by the generator):\r\n\n#       d:/vtk-bin/Release/TclTk/lib/tcl8.4\r\n\n#       d:/vtk-bin/Release/TclTk/lib/tk8.4\r\n\n#       d:/vtk-bin/Debug/TclTk/lib/tcl8.4\r\n\n#       d:/vtk-bin/Debug/TclTk/lib/tk8.4\r\n\n#       etc.\r\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# For each configuration type (Debug, RelInfo, Release, etc.)\r\n\n# Copy the TclTk support files to the corresponding sub-directory inside\r\n\n# the build dir\r\n",
        "Line" : 256,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 11
    },
    "Lib/vtk/lib/vtk-5.8/CMake/vtkTestingObjectFactory.cmake" : {
      "ObjectId" : "402ff8223795c350975316871480341fc19f12a9",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Lib/vtk/lib/vtk-5.8/CMake/vtkWrapJava.cmake" : {
      "ObjectId" : "cb1f3a3a4386a3cb2454cc4aafa01691066cf750",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\r\n\n# a cmake implementation of the Wrap Java command\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# convert to the WRAP3 signature\r\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Initialize the custom target counter.\r\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# For each class\r\n",
        "Line" : 63,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# should we wrap the file?\r\n",
        "Line" : 65,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# if we should wrap it\r\n",
        "Line" : 68,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# what is the filename without the extension\r\n",
        "Line" : 71,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# the input file might be full path so handle that\r\n",
        "Line" : 74,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# compute the input filename\r\n",
        "Line" : 77,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# is it abstract?\r\n",
        "Line" : 84,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# new source file is nameJava.cxx, add to resulting list\r\n",
        "Line" : 92,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# add custom command to output\r\n",
        "Line" : 96,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# add custom command to output\r\n",
        "Line" : 113,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# Add this output to a custom target if needed.\r\n",
        "Line" : 134,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# VS 6 does not like needing to run a huge number of custom commands\r\n\n# when building a single target.  Generate some extra custom targets\r\n\n# that run the custom commands before the main target is built.  This\r\n\n# is a hack to work-around the limitation.  The test to enable it is\r\n\n# done here since it does not need to be done for every macro\r\n\n# invocation.\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Limit the number of custom commands in each target\r\n\n# to 2^7.\r\n",
        "Line" : 169,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# get the classes for this lib\r\n",
        "Line" : 189,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# what is the filename without the extension\r\n",
        "Line" : 192,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# the input file might be full path so handle that\r\n",
        "Line" : 195,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 19
    },
    "Lib/vtk/lib/vtk-5.8/CMake/vtkWrapPython.cmake" : {
      "ObjectId" : "7a62a46a35ff41833f850df7dfec891c2dfd1b39",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\r\n\n# a cmake implementation of the Wrap Python command\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# convert to the WRAP3 signature\r\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# The shell into which nmake.exe executes the custom command has some issues\r\n\n# with mixing quoted and unquoted arguments :( Let's help.\r\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Initialize the custom target counter.\r\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# start writing the input file for the init file\r\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# For each class\r\n",
        "Line" : 66,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# should we wrap the file?\r\n",
        "Line" : 68,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# if we should wrap it\r\n",
        "Line" : 72,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# what is the filename without the extension\r\n",
        "Line" : 75,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# the input file might be full path so handle that\r\n",
        "Line" : 78,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# compute the input filename\r\n",
        "Line" : 81,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# is it abstract?\r\n",
        "Line" : 88,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# is it special?\r\n",
        "Line" : 96,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# add the info to the init file\r\n",
        "Line" : 103,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# new source file is namePython.cxx, add to resulting list\r\n",
        "Line" : 107,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "# add custom command to output\r\n",
        "Line" : 111,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# Add this output to a custom target if needed.\r\n",
        "Line" : 130,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# finish the data file for the init file\r\n",
        "Line" : 146,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Create the Init File\r\n",
        "Line" : 166,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Use separate debug/optimized libraries if they are different.\r\n",
        "Line" : 175,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Some python installations on UNIX need to link to extra libraries\r\n\n# such as zlib (-lz).  It is hard to automatically detect the needed\r\n\n# libraries so instead just give the user an easy way to specify\r\n\n# the libraries.  This should be needed only rarely.  It should\r\n\n# also be moved to the CMake FindPython.cmake module at some point.\r\n",
        "Line" : 194,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# Include any extra libraries for python.\r\n",
        "Line" : 207,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# VS 6 does not like needing to run a huge number of custom commands\r\n\n# when building a single target.  Generate some extra custom targets\r\n\n# that run the custom commands before the main target is built.  This\r\n\n# is a hack to work-around the limitation.  The test to enable it is\r\n\n# done here since it does not need to be done for every macro\r\n\n# invocation.\r\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Limit the number of custom commands in each target\r\n\n# to 2^7.\r\n",
        "Line" : 220,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 24
    },
    "Lib/vtk/lib/vtk-5.8/CMake/vtkWrapTcl.cmake" : {
      "ObjectId" : "8ef26b7e5781c30d3018db9df56282983093961c",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\r\n\n# a cmake implementation of the Wrap Tcl command\r\n\n# it takes an optional VERSION parameter that will be output\r\n\n# to the .data file as VERSION ${VERSION}.\r\n\n# vtkWrapTclInit will then recognize the VERSION keyword, extract the version\r\n\n# and make sure the corresponding Tcl package is 'provided' with that version.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# convert to the WRAP3 signature\r\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Initialize the custom target counter.\r\n",
        "Line" : 56,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# start writing the input file for the init file\r\n",
        "Line" : 63,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# For each class\r\n",
        "Line" : 98,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# should we wrap the file?\r\n",
        "Line" : 100,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# if we should wrap it\r\n",
        "Line" : 103,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# what is the filename without the extension\r\n",
        "Line" : 106,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# the input file might be full path so handle that\r\n",
        "Line" : 109,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# compute the input filename\r\n",
        "Line" : 112,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# is it abstract?\r\n",
        "Line" : 119,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# add the info to the init file\r\n",
        "Line" : 125,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# new source file is nameTcl.cxx, add to resulting list\r\n",
        "Line" : 130,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# add custom command to output\r\n",
        "Line" : 134,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# Add this output to a custom target if needed.\r\n",
        "Line" : 153,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "# finish the data file for the init file\r\n",
        "Line" : 169,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Create the Init File\r\n",
        "Line" : 195,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# The tcl library needs the math library on unix.\r\n",
        "Line" : 217,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Hide useless settings provided by FindTCL.\r\n",
        "Line" : 227,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Need Tk sources on windows\r\n",
        "Line" : 233,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# VS 6 does not like needing to run a huge number of custom commands\r\n\n# when building a single target.  Generate some extra custom targets\r\n\n# that run the custom commands before the main target is built.  This\r\n\n# is a hack to work-around the limitation.  The test to enable it is\r\n\n# done here since it does not need to be done for every macro\r\n\n# invocation.\r\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Limit the number of custom commands in each target\r\n\n# to 2^7.\r\n",
        "Line" : 253,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 22
    },
    "Lib/vtk/lib/vtk-5.8/UseVTK.cmake" : {
      "ObjectId" : "a8967699065cc37dfb263308b9a656f59cd841fe",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\r\n\n# This module is provided as VTK_USE_FILE by VTKConfig.cmake.  It can\r\n\n# be INCLUDEd in a project to load the needed compiler and linker\r\n\n# settings to use VTK.\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Update CMAKE_MODULE_PATH so includes work.\r\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Load the compiler settings used for VTK.\r\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Add compiler flags needed to use VTK.\r\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Add include directories needed to use VTK.\r\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Import the VTK_LOAD_CMAKE_EXTENSIONS macro.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "Lib/vtk/lib/vtk-5.8/VTKBuildSettings.cmake" : {
      "ObjectId" : "54cfa07d24bb1abbd9206586f3595ecc5ddc9af6",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The command CMAKE_EXPORT_BUILD_SETTINGS(...) was used by\r\n\n# VTK to generate this file.  As of CMake 2.8 the\r\n\n# functionality of this command has been dropped as it was deemed\r\n\n# harmful (confusing users by changing their compiler).\r\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMake 2.6 and below do not support loading their equivalent of this\r\n\n# file if it was produced by a newer version of CMake.  CMake 2.8 and\r\n\n# above simply do not load this file.  Therefore we simply error out.\r\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Lib/vtk/lib/vtk-5.8/VTKConfig.cmake" : {
      "ObjectId" : "0dd1fad52d7967c95b3f780c6f169c9afa412cd5",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\r\n\n#\r\n\n# VTKConfig.cmake - VTK CMake configuration file for external projects.\r\n\n#\r\n\n# This file is configured by VTK and used by the UseVTK.cmake module\r\n\n# to load VTK's settings for an external project.\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compute the installation prefix from VTK_DIR.\r\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The set of VTK libraries\r\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The VTK include file directories.\r\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The VTK library directories.\r\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The VTK binary executable directories.  Note that if\r\n\n# VTK_CONFIGURATION_TYPES is set (see below) then these directories\r\n\n# will be the parent directories under which there will be a directory\r\n\n# of runtime binaries for each configuration type.\r\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The VTK runtime library directories.  Note that if\r\n\n# VTK_CONFIGURATION_TYPES is set (see below) then these directories\r\n\n# will be the parent directories under which there will be a directory\r\n\n# of runtime libraries for each configuration type.\r\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# The runtime library path variable name e.g. LD_LIBRARY_PATH,\r\n\n# this environment variable should be set to VTK_RUNTIME_LIBRARY_DIRS\r\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# The C and C++ flags added by VTK to the cmake-configured flags.\r\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# The VTK version number\r\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# The location of the UseVTK.cmake file.\r\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# The build settings file.\r\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# The directory containing class list files for each kit.\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# The wrapping hints file.\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# CMake extension module directory and macro file.\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# The list of available kits.\r\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# The list of available languages.\r\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# VTK Configuration options.\r\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# The Hybrid and VolumeRendering kits are now switched with Rendering.\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# The MPI configuration\r\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# The Tcl/Tk configuration.\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# The Java configuration.\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# The Matlab configuration.\r\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# The Python configuration.\r\n\n# If VTK_CONFIGURATION_TYPES is set (see below) then the VTK_PYTHONPATH_DIRS\r\n\n# will have subdirectories for each configuration type.\r\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Other executables\r\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# The Doxygen configuration.\r\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# The VTK test script locations.\r\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# The names of utility libraries used by VTK.\r\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# The VTK Qt configuration.\r\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Relative install paths in the VTK install tree\r\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# A VTK install tree always provides one build configuration.  A VTK\r\n\n# build tree may provide either one or multiple build configurations\r\n\n# depending on the CMake generator used.  Since VTK can be used either\r\n\n# from a build tree or an install tree it is useful for outside\r\n\n# projects to know the configurations available.  If this\r\n\n# VTKConfig.cmake is in a VTK install tree VTK_CONFIGURATION_TYPES\r\n\n# will be empty and VTK_BUILD_TYPE will be set to the value of\r\n\n# CMAKE_BUILD_TYPE used to build VTK.  If VTKConfig.cmake is in a VTK\r\n\n# build tree then VTK_CONFIGURATION_TYPES and VTK_BUILD_TYPE will have\r\n\n# values matching CMAKE_CONFIGURATION_TYPES and CMAKE_BUILD_TYPE for\r\n\n# that build tree (only one will ever be set).\r\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# The VTK targets file.\r\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# The old, less clear name for VTK_RUNTIME_LIBRARY_DIRS.  Kept here\r\n\n# for compatibility.\r\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# The name of the encoders used by VTK\r\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 34
    },
    "Lib/vtk/lib/vtk-5.8/VTKConfigVersion.cmake" : {
      "ObjectId" : "64425b3834704ce9303919d4ea237157b15bd7f4",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The full VTK version number.\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This version is compatible only with matching major.minor versions.\r\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This version is compatible with equal or lesser patch versions.\r\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "Lib/vtk/lib/vtk-5.8/VTKTargets-release.cmake" : {
      "ObjectId" : "ba405cb8a2d2b0a649a04d76e445cc627790a758",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#----------------------------------------------------------------\r\n\n# Generated CMake target import file for configuration \"Release\".\r\n\n#----------------------------------------------------------------\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Commands may need to know the format version.\r\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Import target \"vtksys\" for configuration \"Release\"\r\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Import target \"vtkzlib\" for configuration \"Release\"\r\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Import target \"vtkhdf5\" for configuration \"Release\"\r\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Import target \"vtkjpeg\" for configuration \"Release\"\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Import target \"vtkpng\" for configuration \"Release\"\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Import target \"vtktiff\" for configuration \"Release\"\r\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Import target \"vtkexpat\" for configuration \"Release\"\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Import target \"vtkfreetype\" for configuration \"Release\"\r\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Import target \"vtklibxml2\" for configuration \"Release\"\r\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Import target \"vtkDICOMParser\" for configuration \"Release\"\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Import target \"vtkproj4\" for configuration \"Release\"\r\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Import target \"mpistubs\" for configuration \"Release\"\r\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Import target \"MapReduceMPI\" for configuration \"Release\"\r\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Import target \"vtkverdict\" for configuration \"Release\"\r\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Import target \"vtkNetCDF\" for configuration \"Release\"\r\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Import target \"vtkNetCDF_cxx\" for configuration \"Release\"\r\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Import target \"vtkmetaio\" for configuration \"Release\"\r\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Import target \"vtksqlite\" for configuration \"Release\"\r\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Import target \"vtkexoIIc\" for configuration \"Release\"\r\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Import target \"vtkalglib\" for configuration \"Release\"\r\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Import target \"vtkEncodeString\" for configuration \"Release\"\r\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Import target \"vtkftgl\" for configuration \"Release\"\r\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Import target \"vtkCommon\" for configuration \"Release\"\r\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Import target \"vtkFiltering\" for configuration \"Release\"\r\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Import target \"vtkImaging\" for configuration \"Release\"\r\n",
        "Line" : 260,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Import target \"vtkGraphics\" for configuration \"Release\"\r\n",
        "Line" : 271,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Import target \"vtkGenericFiltering\" for configuration \"Release\"\r\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Import target \"vtkIO\" for configuration \"Release\"\r\n",
        "Line" : 294,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Import target \"vtkRendering\" for configuration \"Release\"\r\n",
        "Line" : 306,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Import target \"vtkVolumeRendering\" for configuration \"Release\"\r\n",
        "Line" : 318,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Import target \"vtkHybrid\" for configuration \"Release\"\r\n",
        "Line" : 329,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Import target \"vtkWidgets\" for configuration \"Release\"\r\n",
        "Line" : 341,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Import target \"vtkInfovis\" for configuration \"Release\"\r\n",
        "Line" : 352,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Import target \"vtkGeovis\" for configuration \"Release\"\r\n",
        "Line" : 364,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Import target \"vtkViews\" for configuration \"Release\"\r\n",
        "Line" : 376,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Import target \"vtkMFC\" for configuration \"Release\"\r\n",
        "Line" : 387,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Import target \"vtkCharts\" for configuration \"Release\"\r\n",
        "Line" : 398,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Commands beyond this point should not need to know the version.\r\n",
        "Line" : 410,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 40
    },
    "Lib/vtk/lib/vtk-5.8/VTKTargets.cmake" : {
      "ObjectId" : "410b2fb16413667c89da9701cd27effb2e9523c2",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Generated by CMake 3.1.0\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#----------------------------------------------------------------\r\n\n# Generated CMake target import file.\r\n\n#----------------------------------------------------------------\r\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Commands may need to know the format version.\r\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Protect against multiple inclusion, which would fail when already imported targets are added once more.\r\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Compute the installation prefix relative to this file.\r\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Create imported target vtksys\r\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Create imported target vtkzlib\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Create imported target vtkhdf5\r\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Create imported target vtkjpeg\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Create imported target vtkpng\r\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Create imported target vtktiff\r\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Create imported target vtkexpat\r\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Create imported target vtkfreetype\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Create imported target vtklibxml2\r\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Create imported target vtkDICOMParser\r\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Create imported target vtkproj4\r\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Create imported target mpistubs\r\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Create imported target MapReduceMPI\r\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Create imported target vtkverdict\r\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Create imported target vtkNetCDF\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Create imported target vtkNetCDF_cxx\r\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Create imported target vtkmetaio\r\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Create imported target vtksqlite\r\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Create imported target vtkexoIIc\r\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Create imported target vtkalglib\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Create imported target vtkEncodeString\r\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Create imported target vtkftgl\r\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Create imported target vtkCommon\r\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Create imported target vtkFiltering\r\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Create imported target vtkImaging\r\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Create imported target vtkGraphics\r\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Create imported target vtkGenericFiltering\r\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Create imported target vtkIO\r\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Create imported target vtkRendering\r\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Create imported target vtkVolumeRendering\r\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Create imported target vtkHybrid\r\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Create imported target vtkWidgets\r\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Create imported target vtkInfovis\r\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Create imported target vtkGeovis\r\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Create imported target vtkViews\r\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Create imported target vtkMFC\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Create imported target vtkCharts\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Load information for each installed configuration.\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Cleanup temporary variables.\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Loop over all imported files and verify that they actually exist\r\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# This file does not depend on other imported targets which have\r\n\n# been exported from the same project but in a separate export set.\r\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Commands beyond this point should not need to know the version.\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 47
    },
    "Lib/vtk/lib/vtk-5.8/vtkChartsKit.cmake" : {
      "ObjectId" : "34f1db37fa8cf4168d9dd057e226c98776dea887",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Directory containing class headers.\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Classes in vtkCharts.\r\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Abstract classes in vtkCharts.\r\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Wrap-exclude classes in vtkCharts.\r\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Wrap-special classes in vtkCharts.\r\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Wrappable non-class headers for vtkCharts.\r\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set convenient variables to test each class.\r\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Lib/vtk/lib/vtk-5.8/vtkCommonKit.cmake" : {
      "ObjectId" : "e4dbe33bef934649810d40b97c4f9244306a2f0f",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Directory containing class headers.\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Classes in vtkCommon.\r\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Abstract classes in vtkCommon.\r\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Wrap-exclude classes in vtkCommon.\r\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Wrap-special classes in vtkCommon.\r\n",
        "Line" : 304,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Wrappable non-class headers for vtkCommon.\r\n",
        "Line" : 322,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set convenient variables to test each class.\r\n",
        "Line" : 329,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Lib/vtk/lib/vtk-5.8/vtkFilteringKit.cmake" : {
      "ObjectId" : "081adbcb7136b7a375df138eba1f8c2247931bab",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Directory containing class headers.\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Classes in vtkFiltering.\r\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Abstract classes in vtkFiltering.\r\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Wrap-exclude classes in vtkFiltering.\r\n",
        "Line" : 325,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Wrap-special classes in vtkFiltering.\r\n",
        "Line" : 334,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Wrappable non-class headers for vtkFiltering.\r\n",
        "Line" : 337,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set convenient variables to test each class.\r\n",
        "Line" : 341,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Lib/vtk/lib/vtk-5.8/vtkGenericFilteringKit.cmake" : {
      "ObjectId" : "49969ee755d1808819d5662eb0b57c5365b011e3",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Directory containing class headers.\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Classes in vtkGenericFiltering.\r\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Abstract classes in vtkGenericFiltering.\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Wrap-exclude classes in vtkGenericFiltering.\r\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Wrap-special classes in vtkGenericFiltering.\r\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Wrappable non-class headers for vtkGenericFiltering.\r\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set convenient variables to test each class.\r\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Lib/vtk/lib/vtk-5.8/vtkGeovisKit.cmake" : {
      "ObjectId" : "569c6a765ba493c7e782e83c70f7a4b68fb04346",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Directory containing class headers.\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Classes in vtkGeovis.\r\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Abstract classes in vtkGeovis.\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Wrap-exclude classes in vtkGeovis.\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Wrap-special classes in vtkGeovis.\r\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Wrappable non-class headers for vtkGeovis.\r\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set convenient variables to test each class.\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Lib/vtk/lib/vtk-5.8/vtkGraphicsKit.cmake" : {
      "ObjectId" : "eb0f91d66772eba2a0c54a59e6db8dfd7499f11b",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Directory containing class headers.\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Classes in vtkGraphics.\r\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Abstract classes in vtkGraphics.\r\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Wrap-exclude classes in vtkGraphics.\r\n",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Wrap-special classes in vtkGraphics.\r\n",
        "Line" : 298,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Wrappable non-class headers for vtkGraphics.\r\n",
        "Line" : 301,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set convenient variables to test each class.\r\n",
        "Line" : 304,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Lib/vtk/lib/vtk-5.8/vtkHybridKit.cmake" : {
      "ObjectId" : "4fb1c219e8fb49b4d0e81ed09558e7c768b14e6b",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Directory containing class headers.\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Classes in vtkHybrid.\r\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Abstract classes in vtkHybrid.\r\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Wrap-exclude classes in vtkHybrid.\r\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Wrap-special classes in vtkHybrid.\r\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Wrappable non-class headers for vtkHybrid.\r\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set convenient variables to test each class.\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Lib/vtk/lib/vtk-5.8/vtkIOKit.cmake" : {
      "ObjectId" : "caae484c53fac7841ab75550b286ec5ddc7eaaa4",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Directory containing class headers.\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Classes in vtkIO.\r\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Abstract classes in vtkIO.\r\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Wrap-exclude classes in vtkIO.\r\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Wrap-special classes in vtkIO.\r\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Wrappable non-class headers for vtkIO.\r\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set convenient variables to test each class.\r\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Lib/vtk/lib/vtk-5.8/vtkImagingKit.cmake" : {
      "ObjectId" : "e6e06647a149b6a05a545c59872dc393bfc21afe",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Directory containing class headers.\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Classes in vtkImaging.\r\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Abstract classes in vtkImaging.\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Wrap-exclude classes in vtkImaging.\r\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Wrap-special classes in vtkImaging.\r\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Wrappable non-class headers for vtkImaging.\r\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set convenient variables to test each class.\r\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Lib/vtk/lib/vtk-5.8/vtkInfovisKit.cmake" : {
      "ObjectId" : "31c832da75d3caa0a2e324f1c13a7b5e46f4775a",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Directory containing class headers.\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Classes in vtkInfovis.\r\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Abstract classes in vtkInfovis.\r\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Wrap-exclude classes in vtkInfovis.\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Wrap-special classes in vtkInfovis.\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Wrappable non-class headers for vtkInfovis.\r\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set convenient variables to test each class.\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Lib/vtk/lib/vtk-5.8/vtkRenderingKit.cmake" : {
      "ObjectId" : "59c65e58a8846b5e461ab6293cb3d3acc3269158",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Directory containing class headers.\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Classes in vtkRendering.\r\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Abstract classes in vtkRendering.\r\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Wrap-exclude classes in vtkRendering.\r\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Wrap-special classes in vtkRendering.\r\n",
        "Line" : 279,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Wrappable non-class headers for vtkRendering.\r\n",
        "Line" : 282,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set convenient variables to test each class.\r\n",
        "Line" : 285,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Lib/vtk/lib/vtk-5.8/vtkViewsKit.cmake" : {
      "ObjectId" : "c814ff2528a22efefa4be4a710a6082f46709f6b",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Directory containing class headers.\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Classes in vtkViews.\r\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Abstract classes in vtkViews.\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Wrap-exclude classes in vtkViews.\r\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Wrap-special classes in vtkViews.\r\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Wrappable non-class headers for vtkViews.\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set convenient variables to test each class.\r\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Lib/vtk/lib/vtk-5.8/vtkVolumeRenderingKit.cmake" : {
      "ObjectId" : "a7b9667b657ce1febd66c0808e6546b07f4e9ee8",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Directory containing class headers.\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Classes in vtkVolumeRendering.\r\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Abstract classes in vtkVolumeRendering.\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Wrap-exclude classes in vtkVolumeRendering.\r\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Wrap-special classes in vtkVolumeRendering.\r\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Wrappable non-class headers for vtkVolumeRendering.\r\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set convenient variables to test each class.\r\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Lib/vtk/lib/vtk-5.8/vtkWidgetsKit.cmake" : {
      "ObjectId" : "558dbd6311624da988d1f4716ec150ca35b0939f",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Directory containing class headers.\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Classes in vtkWidgets.\r\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Abstract classes in vtkWidgets.\r\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Wrap-exclude classes in vtkWidgets.\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Wrap-special classes in vtkWidgets.\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Wrappable non-class headers for vtkWidgets.\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set convenient variables to test each class.\r\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "lwpr-1.2.6/Makefile.am" : {
      "ObjectId" : "b38bc708c089f8b32abf3fe761a8f92fb719e2f4",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "lwpr-1.2.6/MinGW/Makefile" : {
      "ObjectId" : "b3b79cf317187e24f86ccf59f25ad6e3e0a739ad",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "lwpr-1.2.6/example_c/Makefile.am" : {
      "ObjectId" : "2bb2d5ca68cf0f09fc7f8956ce004c361ec06cff",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "lwpr-1.2.6/example_cpp/Makefile.am" : {
      "ObjectId" : "f94841156c2a8a6291201290f8568e35e544746f",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "lwpr-1.2.6/include/Makefile.am" : {
      "ObjectId" : "b4ed0500cfa8b61241a3a00ccf135cb8a27dc444",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "lwpr-1.2.6/python/Makefile" : {
      "ObjectId" : "30a5ffebbf3695f28663443f2ad61767c55b2383",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This Makefile should only be used in case  \"setup.py\"  fails,\r\n\n# for example, because Python's \"distutils\" is not available\r\n\n# \r\n\n# Modify CFLAGS and LDFLAGS so that they point to the Python\r\n\n# inlude and extension directories.\r\n\n#\r\n\n# If you installed the LWPR library in a non-standard location,\r\n\n# you also need to include this as well\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lwpr-1.2.6/src/Makefile.am" : {
      "ObjectId" : "50a672c2d93b04dcd7c7ba7282740b5de2c6941b",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "lwpr-1.2.6/tests/Makefile.am" : {
      "ObjectId" : "492dfa4075cd8ae8ddc68290cf66e09ee40f2a64",
      "LastModified" : "2015-11-17T01:34:13Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 65,
    "MAKEFILE" : 2,
    "AUTOMAKE" : 6
  },
  "ElapsedTime" : 3754
}