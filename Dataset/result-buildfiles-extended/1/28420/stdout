{
  "Repository" : "28420",
  "Revision" : "HEAD",
  "ObjectId" : "e49885293bf32dad701cb08a3394719d4f844a64",
  "CommitTime" : "2016-06-03T16:58:30Z",
  "Files" : {
    "build.xml" : {
      "ObjectId" : "fcc69f9702c6a6d5c8bf0adc08c975083508381a",
      "LastModified" : "2016-01-04T00:50:53Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " GENERAL HELPER MACROS ",
        "Line" : 7,
        "CharPositionInLine" : 31
      },
      "1" : {
        "Text" : " PATHS AND PROPERTIES ",
        "Line" : 24,
        "CharPositionInLine" : 30
      },
      "2" : {
        "Text" : " make environment var foo available as env.foo ",
        "Line" : 26,
        "CharPositionInLine" : 55
      },
      "3" : {
        "Text" : " allow env.VOLTBUILD to override \"build\" property ",
        "Line" : 29,
        "CharPositionInLine" : 58
      },
      "4" : {
        "Text" : " <property name='build.dir'                   location='obj/${build}' /> ",
        "Line" : 32,
        "CharPositionInLine" : 81
      },
      "5" : {
        "Text" : " Supplmental H-Store Files ",
        "Line" : 65,
        "CharPositionInLine" : 35
      },
      "6" : {
        "Text" : " BerkeleyDB Source ",
        "Line" : 72,
        "CharPositionInLine" : 27
      },
      "7" : {
        "Text" : " ProtocolBuffer Source ",
        "Line" : 76,
        "CharPositionInLine" : 31
      },
      "8" : {
        "Text" : " emma build instrumentation location ",
        "Line" : 81,
        "CharPositionInLine" : 45
      },
      "9" : {
        "Text" : " JProfiler Parameters ",
        "Line" : 84,
        "CharPositionInLine" : 30
      },
      "10" : {
        "Text" : "\n******************************************************************************\n** H-STORE CONFIGURATION\n******************************************************************************\n",
        "Line" : 98,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : " Default H-Store Configuration File  ",
        "Line" : 100,
        "CharPositionInLine" : 45
      },
      "12" : {
        "Text" : " IMPORTANT: We always need to set global.defaulthost if the user doesn't ",
        "Line" : 106,
        "CharPositionInLine" : 81
      },
      "13" : {
        "Text" : " SITE ASSERTS ",
        "Line" : 111,
        "CharPositionInLine" : 22
      },
      "14" : {
        "Text" : " CLIENT ASSERTS ",
        "Line" : 125,
        "CharPositionInLine" : 24
      },
      "15" : {
        "Text" : "\n******************************************************************************\n** BENCHMARK CONFIGURATION\n******************************************************************************\n",
        "Line" : 143,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : " Default Project ",
        "Line" : 145,
        "CharPositionInLine" : 25
      },
      "17" : {
        "Text" : " Project Jar File ",
        "Line" : 164,
        "CharPositionInLine" : 26
      },
      "18" : {
        "Text" : "\n******************************************************************************\n** ADDITIONAL CONFIGURATION\n******************************************************************************\n",
        "Line" : 174,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : " Default heap size for utility programs (MB)  ",
        "Line" : 176,
        "CharPositionInLine" : 54
      },
      "20" : {
        "Text" : " Overridden in the Hudson test script. ",
        "Line" : 181,
        "CharPositionInLine" : 47
      },
      "21" : {
        "Text" : " select which set of regression suite configuration types to run ",
        "Line" : 197,
        "CharPositionInLine" : 73
      },
      "22" : {
        "Text" : " Workload Tracer Properties ",
        "Line" : 207,
        "CharPositionInLine" : 36
      },
      "23" : {
        "Text" : "\n******************************************************************************\nPRIMARY ENTRY POINTS\n******************************************************************************\n",
        "Line" : 222,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : " \"junit, eecheck, doc, eedoc, jars\" ",
        "Line" : 248,
        "CharPositionInLine" : 44
      },
      "25" : {
        "Text" : "\n******************************************************************************\nENVIRONMENT SETUP\n******************************************************************************\n",
        "Line" : 280,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "<target name=\"default_properties.check\">\n   <available property=\"default_properties.exists\" file=\"${propeties.dir}/default.properties\" />\n</target>\n\n<target name=\"default_properties\" depends=\"default_properties.check\" unless=\"default_properties.exists\">\n    <property name=\"default.properties\" location=\"log4j.properties\"/>\n    <symlink link=\"${build.prod.dir}\" resource=\"${log4j.properties}\" failonerror=\"false\"/>\n</target>",
        "Line" : 301,
        "CharPositionInLine" : 13
      },
      "27" : {
        "Text" : "\n******************************************************************************\nDISTRIBUTION\n******************************************************************************\n",
        "Line" : 308,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : " prepare release directory for new content ",
        "Line" : 311,
        "CharPositionInLine" : 55
      },
      "29" : {
        "Text" : " populate selected server/compiler javadoc documentation ",
        "Line" : 321,
        "CharPositionInLine" : 69
      },
      "30" : {
        "Text" : " populate selected client javadoc documentation ",
        "Line" : 342,
        "CharPositionInLine" : 60
      },
      "31" : {
        "Text" : " populate java and native libraries ",
        "Line" : 370,
        "CharPositionInLine" : 48
      },
      "32" : {
        "Text" : " populate top level README by copying and renaming user_guide ",
        "Line" : 378,
        "CharPositionInLine" : 74
      },
      "33" : {
        "Text" : " populate examples top level README ",
        "Line" : 381,
        "CharPositionInLine" : 48
      },
      "34" : {
        "Text" : " populate the other examples ",
        "Line" : 384,
        "CharPositionInLine" : 41
      },
      "35" : {
        "Text" : " populate the ad hoc tool ",
        "Line" : 391,
        "CharPositionInLine" : 38
      },
      "36" : {
        "Text" : " copy fastserializer.py for python examples ",
        "Line" : 398,
        "CharPositionInLine" : 56
      },
      "37" : {
        "Text" : " populate project generator ",
        "Line" : 402,
        "CharPositionInLine" : 40
      },
      "38" : {
        "Text" : " copy licenses ",
        "Line" : 413,
        "CharPositionInLine" : 27
      },
      "39" : {
        "Text" : " create an archive for distribution ",
        "Line" : 417,
        "CharPositionInLine" : 48
      },
      "40" : {
        "Text" : "\n******************************************************************************\nCLEANING\n******************************************************************************\n",
        "Line" : 439,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "\n******************************************************************************\nJAR BUILDING\n******************************************************************************\n",
        "Line" : 475,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "\n******************************************************************************\nJAVA COMPILATION\n******************************************************************************\n",
        "Line" : 537,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "    <exec dir='.'\n          executable='${tools.dir}/preprocessor.py'\n          failonerror='true' >\n        <arg line='${src.frontend.dir} ${build.preprocessor.dir}' />\n    </exec>",
        "Line" : 552,
        "CharPositionInLine" : 15
      },
      "44" : {
        "Text" : " copy resources needed for logging messages ",
        "Line" : 561,
        "CharPositionInLine" : 56
      },
      "45" : {
        "Text" : " pick src//** schemas as package resources ",
        "Line" : 574,
        "CharPositionInLine" : 55
      },
      "46" : {
        "Text" : " the ddl files used by tests and benchmark clients are copied\n         relative to the client class and found with class.getResource() ",
        "Line" : 582,
        "CharPositionInLine" : 77
      },
      "47" : {
        "Text" : " compile the individual source directories ",
        "Line" : 606,
        "CharPositionInLine" : 55
      },
      "48" : {
        "Text" : " compile the individual test directories ",
        "Line" : 657,
        "CharPositionInLine" : 53
      },
      "49" : {
        "Text" : "    <javac includeantruntime=\"false\"\n        target=\"${global.jvm_version}\"\n        srcdir=\"${build.preprocessor.dir}\"\n        destdir='${build.prod.dir}'\n        debug='true'>\n        <classpath refid=\"project.classpath\" />\n    </javac>",
        "Line" : 685,
        "CharPositionInLine" : 16
      },
      "50" : {
        "Text" : "     <antcall target=\"log4j_properties\" /> ",
        "Line" : 689,
        "CharPositionInLine" : 51
      },
      "51" : {
        "Text" : "<target name=\"log4j_properties.check\">\n   <available property=\"log4j_properties.exists\" file=\"${build.prod.dir}/log4j.properties\" />\n</target>\n\n<target name=\"log4j_properties\" depends=\"log4j_properties.check\" unless=\"log4j_properties.exists\">\n    <property name=\"log4j.properties\" location=\"log4j.properties\"/>\n    <symlink link=\"${build.prod.dir}\" resource=\"${log4j.properties}\" failonerror=\"false\"/>\n</target>",
        "Line" : 699,
        "CharPositionInLine" : 13
      },
      "52" : {
        "Text" : "\n******************************************************************************\nDOCUMENTATION\n******************************************************************************\n",
        "Line" : 705,
        "CharPositionInLine" : 4
      },
      "53" : {
        "Text" : "\n******************************************************************************\nBERKELEYDB LIBRARY\n******************************************************************************\n",
        "Line" : 735,
        "CharPositionInLine" : 4
      },
      "54" : {
        "Text" : " Check whether we've already built the BerkeleyDB libraries ",
        "Line" : 742,
        "CharPositionInLine" : 72
      },
      "55" : {
        "Text" : " These are features that we don't need ",
        "Line" : 763,
        "CharPositionInLine" : 55
      },
      "56" : {
        "Text" : "\n******************************************************************************\nNATIVE EE STUFF\n******************************************************************************\n",
        "Line" : 782,
        "CharPositionInLine" : 4
      },
      "57" : {
        "Text" : "     <exec dir='.' executable='/bin/sh'>\n        <arg line=\"-c 'rm -f ${build.dir}/nativelibs/libvoltdb.so'\"/>\n    </exec>\n   <symlink link=\"${build.dir}/nativelibs/libvoltdb.so\" resource=\"${build.dir}/nativelibs/libvoltdb-${dist.version}.so\" overwrite=\"true\" failonerror=\"false\"/>",
        "Line" : 880,
        "CharPositionInLine" : 162
      },
      "58" : {
        "Text" : "\n******************************************************************************\nTEST CASES\n******************************************************************************\n",
        "Line" : 912,
        "CharPositionInLine" : 4
      },
      "59" : {
        "Text" : " Default ",
        "Line" : 915,
        "CharPositionInLine" : 67
      },
      "60" : {
        "Text" : " set up emma ",
        "Line" : 928,
        "CharPositionInLine" : 25
      },
      "61" : {
        "Text" : " enable emma ",
        "Line" : 934,
        "CharPositionInLine" : 25
      },
      "62" : {
        "Text" : " instrument the code ",
        "Line" : 936,
        "CharPositionInLine" : 33
      },
      "63" : {
        "Text" : " don't instrument build.test.dir or any non-voltdb code ",
        "Line" : 940,
        "CharPositionInLine" : 72
      },
      "64" : {
        "Text" : " common junit parameters go here ",
        "Line" : 950,
        "CharPositionInLine" : 41
      },
      "65" : {
        "Text" : " Following two env vars are used by Java code\n                 when running ant check -Dbuild=memcheck\n                 The voltdbipc client is used in concert with valgrind\n                 for most tests (those that would normally run against\n                 the single process JNI backend. ",
        "Line" : 987,
        "CharPositionInLine" : 53
      },
      "66" : {
        "Text" : " Brown Benchmark Parameters ",
        "Line" : 991,
        "CharPositionInLine" : 48
      },
      "67" : {
        "Text" : "             <env key=\"TPCE_LOADER_FILES\" value=\"${src.tpce.dir}\" /> ",
        "Line" : 992,
        "CharPositionInLine" : 77
      },
      "68" : {
        "Text" : " code coverage output settings, harmless if not in use ",
        "Line" : 995,
        "CharPositionInLine" : 75
      },
      "69" : {
        "Text" : " ",
        "Line" : 998,
        "CharPositionInLine" : 21
      },
      "70" : {
        "Text" : " A set of junit tests that only run on hudson and have an extended timeout ",
        "Line" : 1008,
        "CharPositionInLine" : 83
      },
      "71" : {
        "Text" : " Run this before junit to pick up these tests in the reporting ",
        "Line" : 1009,
        "CharPositionInLine" : 71
      },
      "72" : {
        "Text" : " currently empty! ",
        "Line" : 1017,
        "CharPositionInLine" : 42
      },
      "73" : {
        "Text" : " Fetch the files that we need to run the full tests ",
        "Line" : 1027,
        "CharPositionInLine" : 60
      },
      "74" : {
        "Text" : " Junit tests that run quickly ",
        "Line" : 1046,
        "CharPositionInLine" : 38
      },
      "75" : {
        "Text" : " Busted tests because of hacking ",
        "Line" : 1073,
        "CharPositionInLine" : 57
      },
      "76" : {
        "Text" : " VoltDB Regression Suite ",
        "Line" : 1077,
        "CharPositionInLine" : 49
      },
      "77" : {
        "Text" : " Misc VoltDB stuff ",
        "Line" : 1088,
        "CharPositionInLine" : 43
      },
      "78" : {
        "Text" : " Generate unit test reports. ",
        "Line" : 1095,
        "CharPositionInLine" : 41
      },
      "79" : {
        "Text" : " Fail the build if there were any problems.\n        This runs all the tests before failing. ",
        "Line" : 1111,
        "CharPositionInLine" : 52
      },
      "80" : {
        "Text" : " Run the unit tests ",
        "Line" : 1120,
        "CharPositionInLine" : 32
      },
      "81" : {
        "Text" : " Brown Tests ",
        "Line" : 1140,
        "CharPositionInLine" : 37
      },
      "82" : {
        "Text" : " Canadian Tests ",
        "Line" : 1144,
        "CharPositionInLine" : 40
      },
      "83" : {
        "Text" : " VoltDB Tests ",
        "Line" : 1149,
        "CharPositionInLine" : 38
      },
      "84" : {
        "Text" : " VoltDB Regression Suite ",
        "Line" : 1159,
        "CharPositionInLine" : 49
      },
      "85" : {
        "Text" : " Tests that use too much memory ",
        "Line" : 1170,
        "CharPositionInLine" : 56
      },
      "86" : {
        "Text" : " Generate unit test reports. ",
        "Line" : 1176,
        "CharPositionInLine" : 41
      },
      "87" : {
        "Text" : " Fail the build if there were any problems.\n        This runs all the tests before failing. ",
        "Line" : 1200,
        "CharPositionInLine" : 52
      },
      "88" : {
        "Text" : " Regenerate milestoneOneCatalog/ ",
        "Line" : 1207,
        "CharPositionInLine" : 45
      },
      "89" : {
        "Text" : "    <delete dir='${build.dir}/expanded/milestoneOneCatalog' />\n    <mkdir dir='${build.dir}/expanded/milestoneOneCatalog' />\n    <unjar\n        src='${build.testobjects.dir}/milestoneOneCatalog.jar'\n        dest='${build.dir}/expanded/milestoneOneCatalog'\n    />",
        "Line" : 1213,
        "CharPositionInLine" : 10
      },
      "90" : {
        "Text" : " Run the unit tests ",
        "Line" : 1217,
        "CharPositionInLine" : 35
      },
      "91" : {
        "Text" : " Generate unit test reports. ",
        "Line" : 1249,
        "CharPositionInLine" : 45
      },
      "92" : {
        "Text" : " Fail the build if there were any problems.\n        This runs all the tests before failing. ",
        "Line" : 1273,
        "CharPositionInLine" : 52
      },
      "93" : {
        "Text" : "\n    this target is intended to be called only with antcall!\n    set two properties beforehand or as part of the call:\n    lcov.dir is the directory in which to put the coverage report\n    lcov.target is the ant target to run under coverage\n",
        "Line" : 1307,
        "CharPositionInLine" : 4
      },
      "94" : {
        "Text" : " Generate instrumented objects ",
        "Line" : 1312,
        "CharPositionInLine" : 41
      },
      "95" : {
        "Text" : " Whether any work needs doing is left to the C++ makefile ",
        "Line" : 1313,
        "CharPositionInLine" : 68
      },
      "96" : {
        "Text" : " Reset all counters ",
        "Line" : 1318,
        "CharPositionInLine" : 30
      },
      "97" : {
        "Text" : " Get baseline coverage (zero coverage) ",
        "Line" : 1323,
        "CharPositionInLine" : 49
      },
      "98" : {
        "Text" : " Run the tests ",
        "Line" : 1330,
        "CharPositionInLine" : 25
      },
      "99" : {
        "Text" : " Get test coverage ",
        "Line" : 1334,
        "CharPositionInLine" : 29
      },
      "100" : {
        "Text" : " Combine the baseline coverage and the test coverage ",
        "Line" : 1341,
        "CharPositionInLine" : 63
      },
      "101" : {
        "Text" : " Remove standard library and third party coverages ",
        "Line" : 1347,
        "CharPositionInLine" : 61
      },
      "102" : {
        "Text" : " Generate HTML report ",
        "Line" : 1354,
        "CharPositionInLine" : 32
      },
      "103" : {
        "Text" : " This target will run a junit suite. It will also run a single\n     suite under valgrind with -Dbuild=memcheck.  NOTE: to use valgrind,\n     you must \"cd obj/memcheck && make prod/voltdbipc\" separately. ",
        "Line" : 1445,
        "CharPositionInLine" : 71
      },
      "104" : {
        "Text" : " Default ",
        "Line" : 1504,
        "CharPositionInLine" : 67
      },
      "CommentCount" : 105
    },
    "src/benchmarks/edu/brown/benchmark/auctionmark/docs/Makefile" : {
      "ObjectId" : "7638b106c10361b3676359ce2df37cf695ecdde9",
      "LastModified" : "2012-06-20T20:50:38Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/benchmarks/org/voltdb/benchmark/dedupe/build.xml" : {
      "ObjectId" : "0d470a2d6a8d88ad55e0ca927df665f40cd30f1f",
      "LastModified" : "2012-06-20T20:50:38Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "\n***************************************\nPATHS AND PROPERTIES\n***************************************\n",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : " make environment var FOO available as env.FOO ",
        "Line" : 10,
        "CharPositionInLine" : 55
      },
      "2" : {
        "Text" : "\n***************************************\nPRIMARY ENTRY POINTS\n***************************************\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "        <param name=\"txnrate\" value=\"30000\"/>    ",
        "Line" : 84,
        "CharPositionInLine" : 57
      },
      "4" : {
        "Text" : "        <param name=\"txnrate\" value=\"30000\"/>   ",
        "Line" : 108,
        "CharPositionInLine" : 56
      },
      "5" : {
        "Text" : " project file ",
        "Line" : 115,
        "CharPositionInLine" : 57
      },
      "6" : {
        "Text" : " servers ",
        "Line" : 116,
        "CharPositionInLine" : 52
      },
      "7" : {
        "Text" : " partitions per server ",
        "Line" : 117,
        "CharPositionInLine" : 66
      },
      "8" : {
        "Text" : " leader ",
        "Line" : 118,
        "CharPositionInLine" : 51
      },
      "9" : {
        "Text" : " output ",
        "Line" : 119,
        "CharPositionInLine" : 50
      },
      "10" : {
        "Text" : "\n***************************************\nCLEANING\n***************************************\n",
        "Line" : 131,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "\n***************************************\nJAVA COMPILATION\n***************************************\n",
        "Line" : 147,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 12
    },
    "src/benchmarks/org/voltdb/benchmark/twentyindex/build.xml" : {
      "ObjectId" : "cb4b138819e4bc432b96501e0accaeebadc193e9",
      "LastModified" : "2012-06-20T20:50:38Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "\n***************************************\nPATHS AND PROPERTIES\n***************************************\n",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : " make environment var FOO available as env.FOO ",
        "Line" : 10,
        "CharPositionInLine" : 55
      },
      "2" : {
        "Text" : "\n***************************************\nPRIMARY ENTRY POINTS\n***************************************\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "        <param name=\"txnrate\" value=\"30000\"/>    ",
        "Line" : 81,
        "CharPositionInLine" : 57
      },
      "4" : {
        "Text" : "        <param name=\"txnrate\" value=\"500\"/>   ",
        "Line" : 105,
        "CharPositionInLine" : 54
      },
      "5" : {
        "Text" : " project file ",
        "Line" : 112,
        "CharPositionInLine" : 57
      },
      "6" : {
        "Text" : " servers ",
        "Line" : 113,
        "CharPositionInLine" : 52
      },
      "7" : {
        "Text" : " partitions per server ",
        "Line" : 114,
        "CharPositionInLine" : 66
      },
      "8" : {
        "Text" : " leader ",
        "Line" : 115,
        "CharPositionInLine" : 51
      },
      "9" : {
        "Text" : " output ",
        "Line" : 116,
        "CharPositionInLine" : 51
      },
      "10" : {
        "Text" : "\n***************************************\nCLEANING\n***************************************\n",
        "Line" : 128,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "\n***************************************\nJAVA COMPILATION\n***************************************\n",
        "Line" : 144,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 12
    },
    "src/dtxn/Makefile" : {
      "ObjectId" : "4da8692bddeedb37f0bdbcfc8514528f94cb5e68",
      "LastModified" : "2012-06-20T20:50:38Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# -Woverloaded-virtual -Wconversion\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## ------------------------------------------------------------------\n\n## Protocol Buffer Stuff\n\n## ------------------------------------------------------------------\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## ------------------------------------------------------------------\n\n## PROTORPC\n\n## ------------------------------------------------------------------\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## ------------------------------------------------------------------\n\n## LIBEVENT\n\n## ------------------------------------------------------------------\n\n#libevent:  $(PREFIX)/libevent/strlcpy.o $(PREFIX)/libevent/poll.o $(PREFIX)/libevent/http.o $(PREFIX)/libevent/epoll.o $(PREFIX)/libevent/epoll_sub.o $(PREFIX)/libevent/evutil.o $(PREFIX)/libevent/log.o $(PREFIX)/libevent/select.o $(PREFIX)/libevent/signal.o $(PREFIX)/libevent/event.o $(PREFIX)/libevent/event_tagging.o $(PREFIX)/libevent/buffer.o  $(PREFIX)/libevent/libevent_core.a $(PREFIX)/libevent/libevent_http.a\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#$(PREFIX)/libevent/http.o: libevent/http.c\n\n#\t$(CC_COMPILE)\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#$(PREFIX)/libevent/libevent_http.a: $(PREFIX)/libevent/http.o $(PREFIX)/libevent/strlcpy.o\n\n#\t$(CC_LIBRARY)\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## ------------------------------------------------------------------\n\n## IO\n\n## ------------------------------------------------------------------\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## ------------------------------------------------------------------\n\n## LOGGING\n\n## ------------------------------------------------------------------\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## ------------------------------------------------------------------\n\n## BASE TEST FILES\n\n## ------------------------------------------------------------------\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## ------------------------------------------------------------------\n\n## THE GOOD STUFF\n\n## ------------------------------------------------------------------\n",
        "Line" : 284,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "src/dtxn/libevent/Makefile.am" : {
      "ObjectId" : "204d8cf0e946ee0ecad16f375ac6e03dbf09fa44",
      "LastModified" : "2012-06-20T20:50:38Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# 'foreign' means that we're not enforcing GNU package rules strictly.\n\n# '1.7' means that we need automake 1.7 or later (and we do).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is the \"Release\" of the Libevent ABI.  It takes precedence over\n\n# the VERSION_INFO, so that two versions of Libevent with the same\n\n# \"Release\" are never binary-compatible.\n\n#\n\n# This number incremented once for the 2.0 release candidate, and\n\n# shouldn't increment again until Libevent 3.0.  Also, we shouldn't\n\n# increment to Libevent 3.0 unless we know in advance we're breaking\n\n# the ABI.\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#RELEASE =\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This is the version info for the libevent binary API.  It has three\n\n# numbers:\n\n#   Current  -- the number of the binary API that we're implementing\n\n#   Revision -- which iteration of the implementation of the binary\n\n#               API are we supplying?\n\n#   Age      -- How many previous binary API versions do we also\n\n#               support?\n\n#\n\n# To increment a VERSION_INFO (current:revision:age):\n\n#    If the ABI didn't change:\n\n#        Return (current:revision+1:age)\n\n#    If the ABI changed, but it's backward-compatible:\n\n#        Return (current+1:0:age+1)\n\n#    If the ABI changed and it isn't backward-compatible:\n\n#        Return (current+1:0:0)\n\n#\n\n# Once an RC is out, DO NOT MAKE ANY ABI-BREAKING CHANGES IN THAT SERIES\n\n# UNLESS YOU REALLY REALLY HAVE TO.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# History:          RELEASE    VERSION_INFO\n\n#  2.0.1-alpha --     2.0        1:0:0\n\n#  2.0.2-alpha --                2:0:0\n\n#  2.0.3-alpha --                2:0:0  (should have incremented; didn't.)\n\n#  2.0.4-alpha --                3:0:0\n\n#  2.0.5-beta  --                4:0:0\n\n#  2.0.6-rc    --     2.0        2:0:0\n\n#  2.0.7-rc    --     2.0        3:0:1\n\n#  2.0.8-rc    --     2.0        4:0:2\n\n#  2.0.9-rc    --     2.0        5:0:0 (ABI changed slightly)\n\n# Planned:\n\n#  2.0.10-stable--    2.0        6:0:1 if the ABI changes compatibly,\n\n#                             or 5:1:0 if the ABI does not change,\n\n#                             or 6:0:0 if the ABI breaks\n\n#\n\n# For Libevent 2.1:\n\n#  2.1.1-alpha --     2.1        1:0:0\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ABI version history for this package effectively restarts every time\n\n# we change RELEASE.  Version 1.4.x had RELEASE of 1.4.\n\n#\n\n# Ideally, we would not be using RELEASE at all; instead we could just\n\n# use the VERSION_INFO field to label our backward-incompatible ABI\n\n# changes, and those would be few and far between.  Unfortunately,\n\n# Libevent still exposes far too many volatile structures in its\n\n# headers, so we pretty much have to assume that most development\n\n# series will break ABI compatibility.  For now, it's simplest just to\n\n# keep incrementing the RELEASE between series and resetting VERSION_INFO.\n\n#\n\n# Eventually, when we get to the point where the structures in the\n\n# headers are all non-changing (or not there at all!), we can shift to\n\n# a more normal worldview where backward-incompatible ABI changes are\n\n# nice and rare.  For the next couple of years, though, 'struct event'\n\n# is user-visible, and so we can pretty much guarantee that release\n\n# series won't be binary-compatible.\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# These sources are conditionally added by configure.in or conditionally\n\n# included from other files.\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "src/dtxn/libevent/include/Makefile.am" : {
      "ObjectId" : "b109ff797a30840c7e6bc2203aa64cf6b12c73d5",
      "LastModified" : "2012-06-20T20:50:38Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/dtxn/libevent/sample/Makefile.am" : {
      "ObjectId" : "0071d26f2776fcc2231e3f3f83c71180ad52a7db",
      "LastModified" : "2012-06-20T20:50:38Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/dtxn/libevent/test/Makefile.am" : {
      "ObjectId" : "97682fb467c8be968504ac266be1bd356f6f8bc1",
      "LastModified" : "2012-06-20T20:50:38Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "tests/bench/yangmicrobench/Makefile" : {
      "ObjectId" : "888824fc2f94ae550c8f761c8e826a27390f64a5",
      "LastModified" : "2012-06-20T20:50:38Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/frontend/edu/brown/oltpgenerator/report/Makefile" : {
      "ObjectId" : "c1b2553ee5208fa322c8461da40687e28859f581",
      "LastModified" : "2012-06-20T20:50:38Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "third_party/cpp/berkeleydb/examples/c/csv/Makefile" : {
      "ObjectId" : "9d46cc7ea8296ed253be0133979edfa25f0ba855",
      "LastModified" : "2016-01-18T21:04:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# $Id$\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Berkeley DB installation.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "third_party/cpp/berkeleydb/lang/sql/sqlite/autoconf/Makefile.am" : {
      "ObjectId" : "6fc4f33c0e5a7331107ead6d6b6a110b467dccd7",
      "LastModified" : "2016-01-18T21:04:32Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "third_party/cpp/berkeleydb/lang/sql/sqlite/ext/bfile/build/Makefile" : {
      "ObjectId" : "46c08d9086299b9ca226ce674fc3864e78a8f280",
      "LastModified" : "2016-01-18T21:04:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#!/usr/make\n\n#\n\n# Makefile for DBSQL BFile\n\n#\n\n# This makefile is suppose to be build for linux and windriver-ovia.\n\n# But if that does not work for you, you can configure the makefile \n\n# manually.  Just set the parameters below to values that\n\n# work well for your system.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The toplevel directory of the source tree.\n\n#\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# When manipulating BFILE, if you want to use c-functions set it to 1;\n\n# Otherwise, set it to zero\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The ovia options\n\n#\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#TLIBS += -ldl\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# C Compile and options for use in building executables that \n\n# will run on the target platform.\n\n#\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Any target libraries which libsqlite must be linked against\n\n# \n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# The directory into which to store package information for\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Some standard variables and programs\n\n#\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# You should not have to change anything below this line\n\n###############################################################################\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# This is the default Makefile target.  The objects listed here\n\n# are what get build when you type just \"make\" with no arguments.\n\n#\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Makefile can not test for ovia. It sould be copy to ovia platform.\n\n# The follow target only suit for linux.\n\n#\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "third_party/cpp/berkeleydb/test/java/compat/Makefile" : {
      "ObjectId" : "fe1d0c32cb424e7900e4eb669773d037184acd38",
      "LastModified" : "2016-01-18T21:04:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Compile the tests and build the test jar\n",
        "Line" : 15,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Build the original version of TestSerial in the testserial directory\n",
        "Line" : 19,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    },
    "third_party/cpp/berkeleydb/test/java/compat/build.xml" : {
      "ObjectId" : "e6b6517cb84d46882e781e54da944fb64d13d1d8",
      "LastModified" : "2016-01-18T21:04:32Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " $Id$ ",
        "Line" : 1,
        "CharPositionInLine" : 14
      },
      "1" : {
        "Text" : "\n  <property name=\"build.compiler\"\n            value=\"org.apache.tools.ant.taskdefs.CloverCompilerAdapter\"/>\n  ",
        "Line" : 13,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : " Compile original version of TestSerial.java.original. ",
        "Line" : 59,
        "CharPositionInLine" : 67
      },
      "3" : {
        "Text" : " Compile original version of EvolveClasses. ",
        "Line" : 69,
        "CharPositionInLine" : 56
      },
      "4" : {
        "Text" : " Determine which tests to run. ",
        "Line" : 90,
        "CharPositionInLine" : 43
      },
      "5" : {
        "Text" : " Performs initialization needed before StoredClassCatalogTest. ",
        "Line" : 106,
        "CharPositionInLine" : 75
      },
      "6" : {
        "Text" : " Must be first ",
        "Line" : 110,
        "CharPositionInLine" : 63
      },
      "7" : {
        "Text" : " Performs initialization needed before persist EvolveTest. ",
        "Line" : 121,
        "CharPositionInLine" : 71
      },
      "8" : {
        "Text" : " Performs testcase if set, or batch tests. ",
        "Line" : 135,
        "CharPositionInLine" : 55
      },
      "9" : {
        "Text" : " Run the persist tests with -javaagent to enhance classes as they are\n         loaded.  In this, and the following two tests with enhanced classes,\n         set the expectEnhanced system property to cause the test to fail if\n         classes are not enhanced.  ",
        "Line" : 153,
        "CharPositionInLine" : 40
      },
      "10" : {
        "Text" : " Enhance persist test classes by rewriting the class files with the\n         enhancer ant task, and run the persist tests again.  Compile\n         ClassEnhancerTask here.  It is not compiled into db.jar because that\n         would create a primary build dependency on the Ant libraries. ",
        "Line" : 174,
        "CharPositionInLine" : 75
      },
      "11" : {
        "Text" : " <echo message=\"Run persist tests with ClassEnhancer ant task\"/>\n    <delete dir=\"testenhancedir\"/>\n    <mkdir dir=\"testenhancedir\"/>\n    <copy todir=\"testenhancedir\">\n      <fileset dir=\"classes\" includes=\"com/sleepycat/persist/**/*.class\"/>\n    </copy>\n    <javac destdir=\"testenhancedir\" debug=\"on\" source=\"1.5\" target=\"1.5\"\n\t    includeAntRuntime=\"true\" srcdir=\"${db}/lang/java/src\">\n      <include name=\"com/sleepycat/persist/model/ClassEnhancerTask.java\"/>\n      <classpath refid=\"classpath\"/>\n    </javac>\n    <taskdef name=\"enhancer\"\n             classname=\"com.sleepycat.persist.model.ClassEnhancerTask\">\n      <classpath refid=\"enhanced.classpath\"/>\n    </taskdef>\n    <enhancer verbose=\"on\">\n      <fileset dir=\"testenhancedir\"/>\n    </enhancer>\n    <junit fork=\"yes\" dir=\".\" printsummary=\"on\" haltonfailure=\"on\"\n           showoutput=\"on\">\n      <jvmarg value=\"-ea\"/>\n      <classpath refid=\"enhanced.classpath\"/>\n      <classpath refid=\"classpath\"/>\n      <sysproperty key=\"testdestdir\" value=\"./tmp\"/>\n      <sysproperty key=\"longtest\" value=\"${longtest}\"/>\n      <sysproperty key=\"expectEnhanced\" value=\"true\"/>\n      <formatter type=\"plain\" usefile=\"false\"/>\n      <formatter type=\"xml\"/>\n      <batchtest todir=\"reports\" unless=\"testcase\">\n        <fileset dir=\"classes\"\n                 includes=\"com/sleepycat/persist/**/*Test.class\"/>\n      </batchtest>\n    </junit> ",
        "Line" : 207,
        "CharPositionInLine" : 17
      },
      "12" : {
        "Text" : " Enhance persist test classes by rewriting the class files with the\n         ClassEnhancer main program, and run the persist tests again. ",
        "Line" : 210,
        "CharPositionInLine" : 74
      },
      "13" : {
        "Text" : " examples runs all examples, but does not include access_example because\n       it is interactive.\n  ",
        "Line" : 242,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "\n  Before running this example, first run another DPL example that writes to the\n  home directory.  Note that we do not clear the home directory here, in order\n  to use the DB in the home directory from a previous run.\n  ",
        "Line" : 315,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : " Test GSG examples ",
        "Line" : 332,
        "CharPositionInLine" : 29
      },
      "CommentCount" : 16
    },
    "third_party/cpp/berkeleydb/test/java/junit/Makefile" : {
      "ObjectId" : "2645eb90a4efc8e0a83da657894a93da9ad97b16",
      "LastModified" : "2016-01-18T21:04:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Compile the tests and build the test jar\n",
        "Line" : 7,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "third_party/cpp/berkeleydb/test/java/rep/build.xml" : {
      "ObjectId" : "f8f3674c3ea8ba47d5a8b029dfd4197f369e0d12",
      "LastModified" : "2016-01-18T21:04:32Z",
      "FileType" : "ANT",
      "CommentCount" : 0
    },
    "third_party/cpp/protobuf/Makefile.am" : {
      "ObjectId" : "b65daee0ef76fc16815001961dcf4a9f99621d1c",
      "LastModified" : "2016-01-18T21:04:32Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build . before src so that our all-local and clean-local hooks kicks in at\n\n# the right time.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Always include gtest in distributions.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Build gtest before we build protobuf tests.  We don't add gtest to SUBDIRS\n\n# because then \"make check\" would also build and run all of gtest's own tests,\n\n# which takes a lot of time and is generally not useful to us.  Also, we don't\n\n# want \"make install\" to recurse into gtest since we don't want to overwrite\n\n# the installed version of gtest if there is one.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# We would like to clean gtest when \"make clean\" is invoked.  But we have to\n\n# be careful because clean-local is also invoked during \"make distclean\", but\n\n# \"make distclean\" already recurses into gtest because it's listed among the\n\n# DIST_SUBDIRS.  distclean will delete gtest/Makefile, so if we then try to\n\n# cd to the directory again and \"make clean\" it will fail.  So, check that the\n\n# Makefile exists before recursing.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Deletes all the files generated by autogen.sh.\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "third_party/cpp/protobuf/examples/Makefile" : {
      "ObjectId" : "8dc90836f896aa1abef9c0038907994c179eb668",
      "LastModified" : "2016-01-18T21:04:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# See README.txt.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# fails if protobuf is not installed\n",
        "Line" : 25,
        "CharPositionInLine" : 31
      },
      "2" : {
        "Text" : "# fails if protobuf is not installed\n",
        "Line" : 29,
        "CharPositionInLine" : 31
      },
      "CommentCount" : 3
    },
    "third_party/cpp/protobuf/gtest/Makefile.am" : {
      "ObjectId" : "3a9233db7a960d9bdf35c9292517d7e572c07001",
      "LastModified" : "2016-01-18T21:04:32Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Automake file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO(chandlerc@google.com): automate the generation of *.h from *.h.pump.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Nonstandard package files for distribution\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# MSVC project files\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# xcode project files\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# xcode sample files\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# C++Builder project files\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# TODO(wan@google.com): integrate scripts/gen_gtest_pred_impl.py into\n\n#   the build system such that a user can specify the maximum predicate\n\n#   arity here and have the script automatically generate the\n\n#   corresponding .h and .cc files.\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Scripts and utilities\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Distribute and install M4 macro\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# We define the global AM_CPPFLAGS as everything we compile includes from these\n\n# directories.\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Build rules for libraries.\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Bulid rules for samples and tests. Automake's naming for some of\n\n# these variables isn't terribly obvious, so this is a brief\n\n# reference:\n\n#\n\n# TESTS -- Programs run automatically by \"make check\"\n\n# check_PROGRAMS -- Programs built by \"make check\" but not necessarily run\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Verifies that Google Test works when RTTI is disabled.\n",
        "Line" : 315,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Verifies that Google Test's own TR1 tuple implementation works.\n",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Verifies that Google Test's features that use its own TR1 tuple work.\n",
        "Line" : 331,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# The following tests depend on the presence of a Python installation and are\n\n# keyed off of it. TODO(chandlerc@google.com): While we currently only attempt\n\n# to build and execute these tests if Autoconf has found Python v2.4 on the\n\n# system, we don't use the PYTHON variable it specified as the valid\n\n# interpreter. The problem is that TESTS_ENVIRONMENT is a global variable, and\n\n# thus we cannot distinguish between C++ unit tests and Python unit tests.\n",
        "Line" : 340,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# These two Python modules are used by multiple Python tests below.\n",
        "Line" : 349,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# TODO(wan@google.com): make the build script compile and run the\n\n#   negative-compilation tests.  (The test/gtest_nc* files are unfinished\n\n#   implementation of tests for verifying that certain kinds of misuse\n\n#   of Google Test don't compile.)\n",
        "Line" : 433,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "third_party/cpp/protobuf/gtest/make/Makefile" : {
      "ObjectId" : "2d8806eb408301affbf6adc07048dc70cb835a55",
      "LastModified" : "2016-01-18T21:04:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# A sample Makefile for building Google Test and using it in user\n\n# tests.  Please tweak it to suit your environment and project.  You\n\n# may want to move it to your project's root directory.\n\n#\n\n# SYNOPSIS:\n\n#\n\n#   make [all]  - makes everything.\n\n#   make TARGET - makes the given target.\n\n#   make clean  - removes all files generated by make.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Please tweak the following variable definitions as needed by your\n\n# project, except GTEST_HEADERS, which you can use in your own targets\n\n# but shouldn't modify.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Points to the root of Google Test, relative to where this file is.\n\n# Remember to tweak this if you move this file.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Where to find user code.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Flags passed to the preprocessor.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Flags passed to the C++ compiler.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# All tests produced by this Makefile.  Remember to add new tests you\n\n# created to the list.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# All Google Test headers.  Usually you shouldn't change this\n\n# definition.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# House-keeping build targets.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Builds gtest.a and gtest_main.a.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Usually you shouldn't tweak such internal variables, indicated by a\n\n# trailing _.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# For simplicity and to avoid depending on Google Test's\n\n# implementation details, the dependencies specified below are\n\n# conservative and not optimized.  This is fine as Google Test\n\n# compiles fast and for ordinary users its source rarely changes.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Builds a sample test.  A test should link with either gtest.a or\n\n# gtest_main.a, depending on whether it defines its own main()\n\n# function.\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "third_party/cpp/protobuf/gtest/scripts/test/Makefile" : {
      "ObjectId" : "ffc0c90ad99572df94afb5b64136a9c29488ae06",
      "LastModified" : "2016-01-18T21:04:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# A Makefile for fusing Google Test and building a sample test against it.\n\n#\n\n# SYNOPSIS:\n\n#\n\n#   make [all]  - makes everything.\n\n#   make TARGET - makes the given target.\n\n#   make check  - makes everything and runs the built sample test.\n\n#   make clean  - removes all files generated by make.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Points to the root of fused Google Test, relative to where this file is.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Paths to the fused gtest files.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Where to find the sample test.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Where to find gtest_main.cc.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Flags passed to the preprocessor.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Flags passed to the C++ compiler.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "third_party/cpp/protobuf/java/pom.xml" : {
      "ObjectId" : "b07f29b0641418c84f948b9b1cb7c2f1d43550dd",
      "LastModified" : "2016-01-18T21:04:32Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "third_party/cpp/protobuf/src/Makefile.am" : {
      "ObjectId" : "35f5c0c521ad09a86ad2b3d5a4db9d7e9c79defe",
      "LastModified" : "2016-01-18T21:04:32Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# These are good warnings to turn on by default\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If I say \"dist_include_DATA\", automake complains that $(includedir) is not\n\n# a \"legitimate\" directory for DATA.  Screw you, automake.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Not sure why these don't get cleaned automatically.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Tests ==============================================================\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# We have to cd to $(srcdir) before executing protoc because $(protoc_inputs) is\n\n# relative to srcdir, which may not be the same as the current directory when\n\n# building out-of-tree.\n",
        "Line" : 257,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Disable optimization for tests unless the user explicitly asked for it,\n\n# since test_util.cc takes forever to compile with optimization (with GCC).\n\n# See configure.ac for more info.\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Run cpp_unittest again with PROTOBUF_TEST_NO_DESCRIPTORS defined.\n",
        "Line" : 320,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Build lite_unittest separately, since it doesn't use gtest.\n",
        "Line" : 333,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Test plugin binary.\n",
        "Line" : 342,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 11,
    "AUTOMAKE" : 8,
    "ANT" : 5,
    "MAVEN" : 1
  },
  "ElapsedTime" : 6513
}