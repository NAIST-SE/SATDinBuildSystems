{
  "Repository" : "31653721",
  "Revision" : "HEAD",
  "ObjectId" : "b9948f3075d6151f2822ab01194b1ba15ceec0ba",
  "CommitTime" : "2019-01-24T14:49:44Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "7eae119354854fd240b8f961e2201729c1f7b81f",
      "LastModified" : "2019-01-17T15:23:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# check cmake requirements\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "######################## begin of project\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Codecov\n\n# if(CMAKE_COMPILER_IS_GNUCXX)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# include(\"cmake/CodeCoverage.cmake\")\n\n# setup_target_for_coverage(${PROJECT_NAME}_coverage ${RDF_BINARY_NAME} coverage)\n",
        "Line" : 12,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# endif()\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# set output path when building for READ\n",
        "Line" : 23,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# include macros needed\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# different compile options\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# load paths from the user file if exists \n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Codecov\n",
        "Line" : 49,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# find Qt\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# find OpenCV\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# unit tests\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# loader\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# core\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# external headers\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# external headers\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# external headers\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# external headers\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# gather information for building\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# TODO: uncomment if we ever need translations\n\n# file(GLOB RDF_TRANSLATIONS \"translations/*.ts\")\n\n# QT5_ADD_TRANSLATION(RDF_QM ${RDF_TRANSLATIONS})\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# enable CTest\n",
        "Line" : 126,
        "CharPositionInLine" : 1
      },
      "22" : {
        "Text" : "# create build targets\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Codecov\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#debug for printing out all variables \n\n# get_cmake_property(_variableNames VARIABLES)\n\n# foreach (_variableName ${_variableNames})\n\n#     message(STATUS \"${_variableName}=${${_variableName}}\")\n\n# endforeach()\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "CMakeUserSkel.cmake" : {
      "ObjectId" : "91deb6f550c490936c24da38191ccf6f72e5ef33",
      "LastModified" : "2017-03-27T12:57:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If you want to use prefix paths with cmake, copy and rename this file to CMakeUser.cmake\n\n# Do not add this file to GIT!\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set your preferred library paths\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/BuildTargets.cmake" : {
      "ObjectId" : "a7790fcf6e26a0cb3eac1e62084ee041ac064fa9",
      "LastModified" : "2018-12-04T12:11:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# create the targets\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# binary\n",
        "Line" : 3,
        "CharPositionInLine" : 38
      },
      "2" : {
        "Text" : "# test binary\n",
        "Line" : 4,
        "CharPositionInLine" : 40
      },
      "3" : {
        "Text" : "# library\n",
        "Line" : 5,
        "CharPositionInLine" : 43
      },
      "4" : {
        "Text" : "#add resource file when compiling with MSVC \n",
        "Line" : 9,
        "CharPositionInLine" : 24
      },
      "5" : {
        "Text" : "#add libs directory to build dir\n",
        "Line" : 11,
        "CharPositionInLine" : 44
      },
      "6" : {
        "Text" : "# forward declarem\n",
        "Line" : 14,
        "CharPositionInLine" : 45
      },
      "7" : {
        "Text" : "#binary\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#changelog is added here, so that i appears in visual studio\n",
        "Line" : 20,
        "CharPositionInLine" : 135
      },
      "9" : {
        "Text" : "# define that changelog should not be compiled\n",
        "Line" : 21,
        "CharPositionInLine" : 79
      },
      "10" : {
        "Text" : "# add test target\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# add core\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# modules\n",
        "Line" : 40,
        "CharPositionInLine" : 38
      },
      "13" : {
        "Text" : "# graph-cut\n",
        "Line" : 41,
        "CharPositionInLine" : 32
      },
      "14" : {
        "Text" : "# LSD\n",
        "Line" : 42,
        "CharPositionInLine" : 34
      },
      "15" : {
        "Text" : "# LSD\n\n# word2vec\n",
        "Line" : 43,
        "CharPositionInLine" : 32
      },
      "16" : {
        "Text" : "# core flags\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# make RelWithDebInfo link against release instead of debug opencv dlls\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# create settings file for portable version while working\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# set properties for Visual Studio Projects\n",
        "Line" : 85,
        "CharPositionInLine" : 1
      },
      "20" : {
        "Text" : "# set as console project \n",
        "Line" : 96,
        "CharPositionInLine" : 1
      },
      "21" : {
        "Text" : "# set as console project \n",
        "Line" : 101,
        "CharPositionInLine" : 1
      },
      "22" : {
        "Text" : "# generate configuration file\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# just to show it goes into cmake.in\n",
        "Line" : 116,
        "CharPositionInLine" : 48
      },
      "24" : {
        "Text" : "# # tests\n\n# add_test(NAME BaselineTest COMMAND ${RDF_TEST_NAME} \"--baseline\")\n\n# add_test(NAME TableTest COMMAND ${RDF_TEST_NAME} \"--table\")\n\n# add_test(NAME PreProcessing COMMAND ${RDF_TEST_NAME} \"--pre-processing\")\n\n# add_test(NAME SuperPixel COMMAND ${RDF_TEST_NAME} \"--super-pixel\")\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#package \n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# install\n",
        "Line" : 154,
        "CharPositionInLine" : 1
      },
      "27" : {
        "Text" : "# \"make dist\" target\n",
        "Line" : 157,
        "CharPositionInLine" : 1
      },
      "28" : {
        "Text" : "# simulate autotools' \"make dist\"\n",
        "Line" : 165,
        "CharPositionInLine" : 1
      },
      "29" : {
        "Text" : "# cannot be incooperated into if one line above\n",
        "Line" : 168,
        "CharPositionInLine" : 31
      },
      "30" : {
        "Text" : "### DependencyCollector\n",
        "Line" : 173,
        "CharPositionInLine" : 1
      },
      "31" : {
        "Text" : "# CMAKE_MAKE_PROGRAM works for VS 2017 too\n",
        "Line" : 177,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 32
    },
    "cmake/CodeCoverage.cmake" : {
      "ObjectId" : "64f6d5f34fa7aa490bc7adb2df335155c163f5eb",
      "LastModified" : "2017-06-23T12:38:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2012 - 2015, Lars Bilke\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without modification,\n\n# are permitted provided that the following conditions are met:\n\n#\n\n# 1. Redistributions of source code must retain the above copyright notice, this\n\n#    list of conditions and the following disclaimer.\n\n#\n\n# 2. Redistributions in binary form must reproduce the above copyright notice,\n\n#    this list of conditions and the following disclaimer in the documentation\n\n#    and/or other materials provided with the distribution.\n\n#\n\n# 3. Neither the name of the copyright holder nor the names of its contributors\n\n#    may be used to endorse or promote products derived from this software without\n\n#    specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n\n# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\n# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\n# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\n# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n\n# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\n# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n#\n\n#\n\n# 2012-01-31, Lars Bilke\n\n# - Enable Code Coverage\n\n#\n\n# 2013-09-17, Joakim S�derberg\n\n# - Added support for Clang.\n\n# - Some additional usage instructions.\n\n#\n\n# USAGE:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# 0. (Mac only) If you use Xcode 5.1 make sure to patch geninfo as described here:\n\n#      http://stackoverflow.com/a/22404544/80480\n\n#\n\n# 1. Copy this file into your cmake modules path.\n\n#\n\n# 2. Add the following line to your CMakeLists.txt:\n\n#      INCLUDE(CodeCoverage)\n\n#\n\n# 3. Set compiler flags to turn off optimization and enable coverage:\n\n#    SET(CMAKE_CXX_FLAGS \"-g -O0 -fprofile-arcs -ftest-coverage\")\n\n#\t SET(CMAKE_C_FLAGS \"-g -O0 -fprofile-arcs -ftest-coverage\")\n\n#\n\n# 3. Use the function SETUP_TARGET_FOR_COVERAGE to create a custom make target\n\n#    which runs your test executable and produces a lcov code coverage report:\n\n#    Example:\n\n#\t SETUP_TARGET_FOR_COVERAGE(\n\n#\t\t\t\tmy_coverage_target  # Name for custom target.\n\n#\t\t\t\ttest_driver         # Name of the test driver executable that runs the tests.\n\n#\t\t\t\t\t\t\t\t\t# NOTE! This should always have a ZERO as exit code\n\n#\t\t\t\t\t\t\t\t\t# otherwise the coverage generation will not complete.\n\n#\t\t\t\tcoverage            # Name of output directory.\n\n#\t\t\t\t)\n\n#\n\n# 4. Build a Debug build:\n\n#\t cmake -DCMAKE_BUILD_TYPE=Debug ..\n\n#\t make\n\n#\t make my_coverage_target\n\n#\n\n#\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check prereqs\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# NOT GCOV_PATH\n",
        "Line" : 78,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# CHECK VALID COMPILER\n",
        "Line" : 86,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# NOT CMAKE_BUILD_TYPE STREQUAL \"Debug\"\n",
        "Line" : 112,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Param _targetname     The name of new the custom make target\n\n# Param _testrunner     The name of the target which runs the tests.\n\n#\t\t\t\t\t\tMUST return ZERO always, even on errors.\n\n#\t\t\t\t\t\tIf not, no coverage report will be created!\n\n# Param _outputname     lcov output is generated as _outputname.info\n\n#                       HTML report is generated in _outputname/index.html\n\n# Optional fourth parameter is passed as arguments to _testrunner\n\n#   Pass them in list form, e.g.: \"-j;2\" for -j 2\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# NOT LCOV_PATH\n",
        "Line" : 127,
        "CharPositionInLine" : 9
      },
      "8" : {
        "Text" : "# NOT GENHTML_PATH\n",
        "Line" : 131,
        "CharPositionInLine" : 9
      },
      "9" : {
        "Text" : "# Setup target\n",
        "Line" : 138,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# Cleanup lcov\n",
        "Line" : 141,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Run tests\n",
        "Line" : 144,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Capturing lcov counters and generating report\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Show info where to find the report\n",
        "Line" : 157,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# SETUP_TARGET_FOR_COVERAGE\n",
        "Line" : 163,
        "CharPositionInLine" : 14
      },
      "15" : {
        "Text" : "# Param _targetname     The name of new the custom make target\n\n# Param _testrunner     The name of the target which runs the tests\n\n# Param _outputname     cobertura output is generated as _outputname.xml\n\n# Optional fourth parameter is passed as arguments to _testrunner\n\n#   Pass them in list form, e.g.: \"-j;2\" for -j 2\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# NOT PYTHON_EXECUTABLE\n",
        "Line" : 174,
        "CharPositionInLine" : 9
      },
      "17" : {
        "Text" : "# NOT GCOVR_PATH\n",
        "Line" : 178,
        "CharPositionInLine" : 9
      },
      "18" : {
        "Text" : "# Run tests\n",
        "Line" : 182,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Running gcovr\n",
        "Line" : 185,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Show info where to find the report\n",
        "Line" : 191,
        "CharPositionInLine" : 1
      },
      "21" : {
        "Text" : "# SETUP_TARGET_FOR_COVERAGE_COBERTURA",
        "Line" : 197,
        "CharPositionInLine" : 14
      },
      "CommentCount" : 22
    },
    "cmake/Unix.cmake" : {
      "ObjectId" : "dd88e3b9f1b7422fa61d605c75171fce2838111c",
      "LastModified" : "2017-07-04T11:25:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ReadFramework cmake file for a Unix/Linux build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Utils.cmake" : {
      "ObjectId" : "4e9fc69600df413d1b34baade195555ff2b657c6",
      "LastModified" : "2018-06-07T09:52:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Searches for Qt with the required components\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# we should not need the Qt meta compiler in the framework!\n",
        "Line" : 4,
        "CharPositionInLine" : 24
      },
      "2" : {
        "Text" : "# add OpenCV dependency\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# search for opencv\n",
        "Line" : 31,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# unset include directories since OpenCV sets them global\n",
        "Line" : 56,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# check if the c++ compiler supports c++11 (our code uses parts of this standard)\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# check if c++11 is supported\n",
        "Line" : 70,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 7
    },
    "cmake/Win.cmake" : {
      "ObjectId" : "1caef55a5dac1db01310b1e10181deaaff8226a6",
      "LastModified" : "2017-07-05T14:48:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# prepare build directory\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# these variables need to be set before adding subdirectory with projects\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Platforms\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# add image plugins\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    }
  },
  "FileTypes" : {
    "CMAKE" : 7
  },
  "ElapsedTime" : 955
}