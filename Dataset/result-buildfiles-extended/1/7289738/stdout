{
  "Repository" : "7289738",
  "Revision" : "HEAD",
  "ObjectId" : "9bb7e6363c65f65e46f21df09bef98e404250f10",
  "CommitTime" : "2015-11-10T06:44:56Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "b988245555dfe7afccc7a420f0f3b63cacd2a76e",
      "LastModified" : "2015-05-27T18:33:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# available options\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# import our own nvbio_* macros\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# grab gcc flags\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# default to release builds\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# set up required system libs\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# shm_* live in librt on Linux\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# suppress automatic regeneration of VS project files\n\n#set(CMAKE_SUPPRESS_REGENERATION ON)\n",
        "Line" : 63,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# export our include directories in the cache for external projects to pick up\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cmake-local/gcc.cmake" : {
      "ObjectId" : "6898f652b480c36e1cd9be8e99b83eaae7419fef",
      "LastModified" : "2014-09-05T20:26:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# common GCC compiler flags\n\n# we add -Wno-unknown-pragmas because of nvcc's #pragma unroll\n",
        "Line" : 2,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "cmake-local/nvbio.cmake" : {
      "ObjectId" : "d2d22f7fe95fa74f8112db05be7dd1196f2d27bd",
      "LastModified" : "2014-09-05T20:26:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# this keeps track of the targets that are generated for doxygen,\n\n# used to set up the doc target later on\n\n# unfortunately, this has to be a property instead of a variable due to cmake's\n\n# weird scoping rules\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set up doxygen for a given nvbio module\n\n# checks if there's a Doxyfile.in in the module directory\n\n# and sets up build rules to generate documentation for this module\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# set up paths\n",
        "Line" : 12,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# set up the path to the Doxyfile.in for the current module\n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# set up the path to the Doxyfile that we'll generate from Doxyfile.in\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# test if the current module has a Doxyfile.in\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# parse the Doxyfile.in with cmake to substitute build variables and generate the Doxyfile\n",
        "Line" : 23,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# generate the doc target\n\n# doc will depend on all doc_* targets generated for any modules with doxygen.in files\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# start a new nvbio module (library or executable)\n\n# this will match a MSVC project\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# add sources to the current module or directory\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# add the directory path\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# chop the trailing '/' off the group name\n",
        "Line" : 65,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# convert '/' into '\\\\'\n",
        "Line" : 67,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# add a module directory\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "contrib/bamtools/CMakeLists.txt" : {
      "ObjectId" : "b9d24b0e71da8ae7700e531128b4f5225a9cce65",
      "LastModified" : "2014-09-05T20:26:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/crc/CMakeLists.txt" : {
      "ObjectId" : "4f86ff14a20df8c0fc7366d9fb4fa8b6e9fb5d6e",
      "LastModified" : "2014-09-05T20:26:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#============================================================================\n\n# crc\n\n#============================================================================\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "contrib/htslib/CMakeLists.txt" : {
      "ObjectId" : "d167fcbd06db0704d3fb88f08e497526bec24a31",
      "LastModified" : "2014-09-16T16:18:23Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/htslib/Makefile" : {
      "ObjectId" : "1087528fb9e30f40f7228ec25559a57a99968d79",
      "LastModified" : "2014-09-16T16:18:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for htslib, a C library for high-throughput sequencing data formats.\n\n#\n\n#    Copyright (C) 2013-2014 Genome Research Ltd.\n\n#\n\n#    Author: John Marshall <jm18@sanger.ac.uk>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO: edit cram code to remove need for -DSAMTOOLS\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO: probably update cram code to make it compile cleanly with -Wc++-compat\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# $(shell), :=, and ifeq/.../endif are GNU Make-specific.  If you don't have\n\n# GNU Make, comment out the parts of this conditional that don't apply.\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# $(NUMERIC_VERSION) is for items that must have a numeric X.Y.Z string\n\n# even if this is a dirty or untagged Git working tree.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If building from a Git repository, replace $(PACKAGE_VERSION) with the Git\n\n# description of the working tree: either a release tag with the same value\n\n# as $(PACKAGE_VERSION) above, or an exact description likely based on a tag.\n\n# Much of this is also GNU Make-specific.  If you don't have GNU Make and/or\n\n# are not building from a Git repository, comment out this conditional.\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Unless the Git description matches /\\d*\\.\\d*(\\.\\d*)?/, i.e., is exactly a tag\n\n# with a numeric name, revert $(NUMERIC_VERSION) to the original version number\n\n# written above, but with the patchlevel field bumped to 255.\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Force version.h to be remade if $(PACKAGE_VERSION) has changed.\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# The target here is libhts.so, as that is the built file that other rules\n\n# depend upon and that is used when -lhts appears in other program's recipes.\n\n# As a byproduct invisible to make, libhts.so.NN is also created, as it is the\n\n# file used at runtime (when $LD_LIBRARY_PATH includes the build directory).\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Similarly this also creates libhts.NN.dylib as a byproduct, so that programs\n\n# when run can find this uninstalled shared library (when $DYLD_LIBRARY_PATH\n\n# includes this project's build directory).\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# After installation, the real file in $(libdir) will be libhts.so.X.Y.Z,\n\n# with symlinks libhts.so (used via -lhts during linking of client programs)\n\n# and libhts.so.NN (used by client executables at runtime).\n",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "contrib/lz4/CMakeLists.txt" : {
      "ObjectId" : "adc030f9e3937e4fedf805c2186e2812b65379db",
      "LastModified" : "2015-02-19T09:13:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/lz4/Makefile" : {
      "ObjectId" : "faffb399842e12c19a5c2cc86bb0ab2dec1ed884",
      "LastModified" : "2015-02-19T09:13:14Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# ################################################################\n\n# LZ4 library - Makefile\n\n# Copyright (C) Yann Collet 2011-2015\n\n# All rights reserved.\n\n# \n\n# BSD license\n\n# Redistribution and use in source and binary forms, with or without modification,\n\n# are permitted provided that the following conditions are met:\n\n# \n\n# * Redistributions of source code must retain the above copyright notice, this\n\n#   list of conditions and the following disclaimer.\n\n# \n\n# * Redistributions in binary form must reproduce the above copyright notice, this\n\n#   list of conditions and the following disclaimer in the documentation and/or\n\n#   other materials provided with the distribution.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n\n# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\n# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\n# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\n# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n\n# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\n# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n# \n\n# You can contact the author at :\n\n#  - LZ4 source repository : http://code.google.com/p/lz4/\n\n#  - LZ4 source mirror : https://github.com/Cyan4973/lz4\n\n#  - LZ4 forum froup : https://groups.google.com/forum/#!forum/lz4c\n\n# ################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Version numbers\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# OS X linker doesn't support -soname, and use different extension\n\n# see : https://developer.apple.com/library/mac/documentation/DeveloperTools/Conceptual/DynamicLibraries/100-Articles/DynamicLibraryDesignGuidelines.html\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#------------------------------------------------------------------------\n\n#make install is validated only for Linux, OSX, kFreeBSD and Hurd targets\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4,
      "Errorlog" : "line 36:81 token recognition error at: '\\1'\nline 37:81 token recognition error at: '\\1'\nline 38:83 token recognition error at: '\\1'\n"
    },
    "contrib/moderngpu/CMakeLists.txt" : {
      "ObjectId" : "c82d66a492cb637182c0dac7cff4e9b8d9d5ebb0",
      "LastModified" : "2015-02-19T09:13:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/zlib-1.2.7/CMakeLists.txt" : {
      "ObjectId" : "3d0bf5144d4b905cd9bcb41699047eb6f02ce881",
      "LastModified" : "2015-02-19T09:13:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Check to see if we have large file support\n\n#\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We add these other definitions here because CheckTypeSize.cmake\n\n# in CMake 2.4.x does not automatically do so and we want\n\n# compatibility with CMake 2.4.x.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# clear variable\n",
        "Line" : 44,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "#\n\n# Check for fseeko\n\n#\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Check for unistd.h\n\n#\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If we're doing an out of source build and the user has a zconf.h\n\n# in their source tree...\n",
        "Line" : 67,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#============================================================================\n\n# zlib\n\n#============================================================================\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#if(NOT MINGW)\n\n#    set(ZLIB_SRCS ${ZLIB_SRCS}\n\n#        win32/zlib1.rc # If present will override custom build rule below.\n\n#    )\n\n#endif()\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# parse the full version number from zlib.h and include in ZLIB_FULL_VERSION\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# This gets us DLL resource information when compiling on MinGW.\n",
        "Line" : 135,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# This property causes shared libraries on Linux to have the full version\n\n# encoded into their final filename.  We disable this on Cygwin because\n\n# it causes cygz-${ZLIB_FULL_VERSION}.dll to be created when cygz.dll\n\n# seems to be the default.\n\n#\n\n# This has no effect with MSVC, on that platform the version info for\n\n# the DLL comes from the resource file win32/zlib1.rc\n",
        "Line" : 156,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# On unix-like platforms the library is almost always called libz\n",
        "Line" : 167,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "#set_target_properties(zlib PROPERTIES LINK_FLAGS \"-Wl,--version-script,${CMAKE_CURRENT_SOURCE_DIR}/zlib.map\")\n",
        "Line" : 169,
        "CharPositionInLine" : 3
      },
      "13" : {
        "Text" : "# Creates zlib1.dll when building shared library version\n",
        "Line" : 171,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "#============================================================================\n\n# Example binaries\n\n#============================================================================\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#add_executable(example test/example.c)\n\n#target_link_libraries(example zlib)\n\n#add_test(example example)\n\n#\n\n#add_executable(minigzip test/minigzip.c)\n\n#target_link_libraries(minigzip zlib)\n\n#\n\n#if(HAVE_OFF64_T)\n\n#    add_executable(example64 test/example.c)\n\n#    target_link_libraries(example64 zlib)\n\n#    set_target_properties(example64 PROPERTIES COMPILE_FLAGS \"-D_FILE_OFFSET_BITS=64\")\n\n#    add_test(example64 example64)\n\n#\n\n#    add_executable(minigzip64 test/minigzip.c)\n\n#    target_link_libraries(minigzip64 zlib)\n\n#    set_target_properties(minigzip64 PROPERTIES COMPILE_FLAGS \"-D_FILE_OFFSET_BITS=64\")\n\n#endif()\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "contrib/zlib-1.2.7/Makefile" : {
      "ObjectId" : "30cd72b89611ab91f6d768b6ed3e5a9e5394ae00",
      "LastModified" : "2015-02-19T09:13:14Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for zlib\n\n# Copyright (C) 1995-2011 Jean-loup Gailly.\n\n# For conditions of distribution and use, see copyright notice in zlib.h\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# To compile and test, type:\n\n#    ./configure; make test\n\n# Normally configure builds both a static and a shared library.\n\n# If you want to build just a static library, use: ./configure --static\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# To use the asm code, type:\n\n#    cp contrib/asm?86/match.S ./match.S\n\n#    make LOC=-DASMV OBJA=match.o\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# To install /usr/local/lib/libz.* and /usr/local/include/zlib.h, type:\n\n#    make install\n\n# To install in $HOME instead of /usr/local, use:\n\n#    make install prefix=$HOME\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#CFLAGS=-O -DMAX_WBITS=14 -DMAX_MEM_LEVEL=7\n\n#CFLAGS=-g -DDEBUG\n\n#CFLAGS=-O3 -Wall -Wwrite-strings -Wpointer-arith -Wconversion \\\n#           -Wstrict-prototypes -Wmissing-prototypes\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# to use the asm code: make OBJA=match.o, PIC_OBJA=match.lo\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The ranlib in install is needed on NeXTSTEP which checks file times\n\n# ldconfig is for Linux\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 268,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "examples/fmmap/CMakeLists.txt" : {
      "ObjectId" : "80f79961478ba7b56dcd19539c9e15ebfd58d396",
      "LastModified" : "2015-02-19T09:49:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/mem/CMakeLists.txt" : {
      "ObjectId" : "38521359b845e1ef084e0b04358ac8f9b5baddef",
      "LastModified" : "2015-02-19T09:49:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/proteinsw/CMakeLists.txt" : {
      "ObjectId" : "9f6f47be7268983b7f1eaa19ef167cf74d508f11",
      "LastModified" : "2015-02-19T09:49:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/qmap/CMakeLists.txt" : {
      "ObjectId" : "6a6fa991d5e927b1572f23fd7b63a05db7c4beca",
      "LastModified" : "2015-02-19T09:49:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/seeding/CMakeLists.txt" : {
      "ObjectId" : "5124d212ffa9a3053cf1c3908d0d90bdddc7898d",
      "LastModified" : "2015-02-19T09:49:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/waveletfm/CMakeLists.txt" : {
      "ObjectId" : "f5f2959488e3f8f09ad4e85fb67aec1c92877f26",
      "LastModified" : "2015-02-19T09:49:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "nvBWT/CMakeLists.txt" : {
      "ObjectId" : "f3142c05f437196b083668eddecba39e17462482",
      "LastModified" : "2015-02-19T09:13:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "nvBowtie/CMakeLists.txt" : {
      "ObjectId" : "0e888e1a705fb2d9001996154bf290c88f83d00e",
      "LastModified" : "2015-02-19T09:49:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "nvBowtie/bowtie2/CMakeLists.txt" : {
      "ObjectId" : "76313fc05ab6ad319fe5ff7bd5c0df6836d69c60",
      "LastModified" : "2015-02-19T09:13:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "nvBowtie/bowtie2/cuda/CMakeLists.txt" : {
      "ObjectId" : "170ff34af9eaf75f49fa0880a0d21d8d5a3e69c2",
      "LastModified" : "2015-02-19T09:13:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "nvExtractReads/CMakeLists.txt" : {
      "ObjectId" : "7571b8dd69adf9db49a86f504cf8141a9d81ab8b",
      "LastModified" : "2015-02-19T09:49:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "nvFM-server/CMakeLists.txt" : {
      "ObjectId" : "79289e47793b1df193f21177edbdd3c53f0066da",
      "LastModified" : "2015-02-19T09:13:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "nvLighter/CMakeLists.txt" : {
      "ObjectId" : "f76033a294d483b827b008b8b8c5ca3f7fd6e038",
      "LastModified" : "2015-05-27T18:33:46Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "nvMicroAssembly/CMakeLists.txt" : {
      "ObjectId" : "341205796fb5ddf794c3bb80f8a3caf3159d337b",
      "LastModified" : "2015-02-19T09:49:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "nvSSA/CMakeLists.txt" : {
      "ObjectId" : "2780c7b8ed90e52ce7582a0f31475eac55c29575",
      "LastModified" : "2015-02-19T09:13:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "nvSetBWT/CMakeLists.txt" : {
      "ObjectId" : "e0cadbe9d430904556d37841ef306cc68faed290",
      "LastModified" : "2015-02-19T09:49:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "nvbio-aln-diff/CMakeLists.txt" : {
      "ObjectId" : "a7e279cd0c1448a31bb7387418322f9a89852c47",
      "LastModified" : "2015-02-19T09:13:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "nvbio-test/CMakeLists.txt" : {
      "ObjectId" : "01b23596c6c4975f962a72da2c0f79d61b40893a",
      "LastModified" : "2015-02-23T12:16:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "nvbio/CMakeLists.txt" : {
      "ObjectId" : "90480f8779371a0f5ccb381373e67f39fe9f264e",
      "LastModified" : "2015-02-19T09:13:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# note: the order here matters as it determines link order\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "nvbio/basic/CMakeLists.txt" : {
      "ObjectId" : "5fb837f964778a8f6f53ff3cd1d3273549530e9b",
      "LastModified" : "2015-05-27T18:33:46Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "nvbio/basic/cuda/CMakeLists.txt" : {
      "ObjectId" : "64e8c9a23eced4c1aa1926e1970a61d700c750d8",
      "LastModified" : "2015-02-19T09:13:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "nvbio/fasta/CMakeLists.txt" : {
      "ObjectId" : "0402f2040b035b3b565d61318e2fe8a2f4b25a2a",
      "LastModified" : "2015-02-19T09:13:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "nvbio/fastq/CMakeLists.txt" : {
      "ObjectId" : "04a67c3bd5a3f3779f2da772319c1af4fc3b72c2",
      "LastModified" : "2015-02-19T09:13:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "nvbio/fmindex/CMakeLists.txt" : {
      "ObjectId" : "d4ad28fe87e165ae8280cd1331565983a9feecd7",
      "LastModified" : "2015-02-19T09:13:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "nvbio/io/CMakeLists.txt" : {
      "ObjectId" : "c578b6b03ea0217720296d9528dda756cffea33f",
      "LastModified" : "2015-05-27T18:33:46Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "nvbio/io/fmindex/CMakeLists.txt" : {
      "ObjectId" : "9260702a5df72ef56cce12f31a48880f100ce459",
      "LastModified" : "2015-02-19T09:13:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "nvbio/io/output/CMakeLists.txt" : {
      "ObjectId" : "ff9181a0558d0b6b827a123ee29541722d87ae67",
      "LastModified" : "2015-02-19T09:13:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "nvbio/io/reads/CMakeLists.txt" : {
      "ObjectId" : "a0d0df998fc5b426d301397011d5b5804e97e7ad",
      "LastModified" : "2015-02-19T09:13:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "nvbio/io/sequence/CMakeLists.txt" : {
      "ObjectId" : "adf8f0e424f448995dcfd58958dcaf582cbd950d",
      "LastModified" : "2015-02-19T09:13:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "nvbio/strings/CMakeLists.txt" : {
      "ObjectId" : "e964f1c72685a1196b3a833362007fb2f5d21aa8",
      "LastModified" : "2015-02-19T09:13:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "nvbio/sufsort/CMakeLists.txt" : {
      "ObjectId" : "feb1fe35eda14790068790b1f769b2dcfccfcbe3",
      "LastModified" : "2015-02-19T09:13:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "nvbio/trie/CMakeLists.txt" : {
      "ObjectId" : "ef62fed8b0f90752cf8ee861cf958ff59abc942a",
      "LastModified" : "2015-02-19T09:13:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "nvmem/CMakeLists.txt" : {
      "ObjectId" : "30ea43417a2d8b394bd87cf66b9cd3a34a7d924b",
      "LastModified" : "2015-05-27T18:33:46Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "prototypes/bamsort/CMakeLists.txt" : {
      "ObjectId" : "06789332b103345c40aebd4028ea72cce6311afa",
      "LastModified" : "2015-05-27T22:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# note: this assumes htslib is installed system-wide, need to fix\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "sufsort-test/CMakeLists.txt" : {
      "ObjectId" : "4803009ac1b43297fb20f7e95def0d3291ccf680",
      "LastModified" : "2015-05-27T22:21:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "sw-benchmark/CMakeLists.txt" : {
      "ObjectId" : "4c5904eb4588f8dd07702ef163adbb8d3d9a51ce",
      "LastModified" : "2015-05-27T22:21:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 45,
    "MAKEFILE" : 3
  },
  "ElapsedTime" : 1787
}