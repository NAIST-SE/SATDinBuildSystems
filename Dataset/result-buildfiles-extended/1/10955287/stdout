{
  "Repository" : "10955287",
  "Revision" : "HEAD",
  "ObjectId" : "689e3984e437bcc03cd7b95a3fccf8d126e90b7f",
  "CommitTime" : "2015-03-09T14:02:48Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "5b666c5fc437e281c3ebd9ad98742c6ffef5a995",
      "LastModified" : "2015-03-08T21:10:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# cmake modules\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# --- global compiler flags ---\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# needs to have dll-interface to be used by clients\n",
        "Line" : 68,
        "CharPositionInLine" : 33
      },
      "3" : {
        "Text" : "# exported class derived from non-exported class\n",
        "Line" : 69,
        "CharPositionInLine" : 24
      },
      "4" : {
        "Text" : "# activate C++ style exceptions\n",
        "Line" : 70,
        "CharPositionInLine" : 17
      },
      "5" : {
        "Text" : "# --- user options ---\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# --- global definitions ---\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# All source files using globs\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# configure a header file to pass some of the CMake settings\n\n# to the source code\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#Generate message library\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#Common library\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# executable name\n",
        "Line" : 195,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# source files\n",
        "Line" : 197,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "#Client Binary\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# executable name\n",
        "Line" : 217,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# source files\n",
        "Line" : 219,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "#Server Binary\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# source files\n",
        "Line" : 237,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "#Master Server Binary\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# source files\n",
        "Line" : 256,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "###############\n\n#Other Targets#\n\n###############\n",
        "Line" : 274,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# --- enable unit tests if desired ---\n",
        "Line" : 279,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# list(REMOVE_ITEM ALL_SRCS ${ui} ${f}.cpp ${f}Driver.cpp)\n",
        "Line" : 302,
        "CharPositionInLine" : 3
      },
      "23" : {
        "Text" : "# --- coverage report ---\n",
        "Line" : 332,
        "CharPositionInLine" : 6
      },
      "24" : {
        "Text" : "# --- Valgrind --- #\n",
        "Line" : 337,
        "CharPositionInLine" : 6
      },
      "25" : {
        "Text" : "# Execute ${CMAKE_CURRENT_BINARY_DIR}/${TEST_EXEC} binary to execute tests\n",
        "Line" : 342,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "#Extra targets:\n",
        "Line" : 373,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# --- cppcheck ---\n",
        "Line" : 375,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# --- cccc ---\n",
        "Line" : 383,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# --- SlocCount --- #\n",
        "Line" : 386,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# --- Doxygen --- #\n",
        "Line" : 392,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 31
    },
    "cmake/Modules/CMakeDependentOption.cmake" : {
      "ObjectId" : "365dae90bf10d82575e01a2ddd5e001946647b4e",
      "LastModified" : "2014-08-13T14:58:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Macro to provide an option dependent on other options.\n\n# This macro presents an option to the user only if a set of other\n\n# conditions are true.  When the option is not presented a default\n\n# value is used, but any value set by the user is preserved for when\n\n# the option is presented again.\n\n# Example invocation:\n\n#  CMAKE_DEPENDENT_OPTION(USE_FOO \"Use Foo\" ON\n\n#                         \"USE_BAR;NOT USE_ZOT\" OFF)\n\n# If USE_BAR is true and USE_ZOT is false, this provides an option called\n\n# USE_FOO that defaults to ON.  Otherwise, it sets USE_FOO to OFF.  If\n\n# the status of USE_BAR or USE_ZOT ever changes, any value for the\n\n# USE_FOO option is saved so that when the option is re-enabled it\n\n# retains its old value.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/CMakeVariableDump.cmake" : {
      "ObjectId" : "cd9be6a5b3c7ebd080ecc3291890fbf7d5d497bc",
      "LastModified" : "2014-08-13T14:58:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Dump all kind of usefule cmake variables\n\n# \n\n# Taken from here:\n\n#   http://cmake.org/Wiki/CMake_Useful_Variables/Logging_Useful_Variables\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# if you are building in-source, this is the same as CMAKE_SOURCE_DIR, otherwise \n\n# this is the top level directory of your build tree \n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# if you are building in-source, this is the same as CMAKE_CURRENT_SOURCE_DIR, otherwise this \n\n# is the directory where the compiled or generated files from the current CMakeLists.txt will go to \n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# this is the directory, from which cmake was started, i.e. the top level source directory \n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# this is the directory where the currently processed CMakeLists.txt is located in \n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# contains the full path to the top level directory of your build tree \n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# contains the full path to the root of your project source directory,\n\n# i.e. to the nearest directory where CMakeLists.txt contains the PROJECT() command \n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# set this variable to specify a common place where CMake should put all executable files\n\n# (instead of CMAKE_CURRENT_BINARY_DIR)\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# set this variable to specify a common place where CMake should put all libraries \n\n# (instead of CMAKE_CURRENT_BINARY_DIR)\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# tell CMake to search first in directories listed in CMAKE_MODULE_PATH\n\n# when you use FIND_PACKAGE() or INCLUDE()\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# this is the complete path of the cmake which runs currently (e.g. /usr/local/bin/cmake) \n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# this is the CMake installation directory \n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# this is the filename including the complete path of the file where this variable is used. \n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# this is linenumber where the variable is used\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# this is used when searching for include files e.g. using the FIND_PATH() command.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# this is used when searching for libraries e.g. using the FIND_LIBRARY() command.\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# the complete system name, e.g. \"Linux-2.4.22\", \"FreeBSD-5.4-RELEASE\" or \"Windows 5.1\" \n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# the short system name, e.g. \"Linux\", \"FreeBSD\" or \"Windows\"\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# only the version part of CMAKE_SYSTEM \n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# the processor name (e.g. \"Intel(R) Pentium(R) M processor 2.00GHz\") \n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# is TRUE on all UNIX-like OS's, including Apple OS X and CygWin\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# is TRUE on Windows, including CygWin \n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# is TRUE on Apple OS X\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# is TRUE when using the MinGW compiler in Windows\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# is TRUE on Windows when using the CygWin version of cmake\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# is TRUE on Windows when using a Borland compiler \n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Microsoft compiler \n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# set this to true if you don't want to rebuild the object files if the rules have changed, \n\n# but not the actual source files or headers (e.g. if you changed the some compiler switches) \n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# since CMake 2.1 the install rule depends on all, i.e. everything will be built before installing. \n\n# If you don't like this, set this one to true.\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# If set, runtime paths are not added when using shared libraries. Default it is set to OFF\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# set this to true if you are using makefiles and want to see the full compile and link \n\n# commands instead of only the shortened ones \n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# this will cause CMake to not put in the rules that re-run CMake. This might be useful if \n\n# you want to use the generated build files on another machine. \n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# A simple way to get switches to the compiler is to use ADD_DEFINITIONS(). \n\n# But there are also two variables exactly for this purpose: \n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# the compiler flags for compiling C sources \n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# the compiler flags for compiling C++ sources \n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Choose the type of build.  Example: SET(CMAKE_BUILD_TYPE Debug) \n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# if this is set to ON, then all libraries are built as shared libraries by default.\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# the compiler used for C files \n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# the compiler used for C++ files \n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# if the compiler is a variant of gcc, this should be set to 1 \n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# if the compiler is a variant of g++, this should be set to 1 \n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# the tools for creating libraries \n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "#\n\n#MESSAGE( STATUS \": \" ${} )\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 43
    },
    "cmake/Modules/CPackConfigDEB.cmake" : {
      "ObjectId" : "3c21394c8b1653a85af9b583b60ce69b405cb4a2",
      "LastModified" : "2014-08-13T14:58:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Scripts for pre or post installation\n\n#set( CPACK_DEBIAN_PACKAGE_CONTROL_EXTRA \"${CMAKE_CURRENT_SOURCE_DIR}/CMake/debian/postinst;${CMAKE_CURRENT_SOURCE_DIR}/CMake/debian/prerm;\" )\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/CPackConfigRPM.cmake" : {
      "ObjectId" : "6842b244f0f5d6fbc5e7c1c487568e0a9c53da41",
      "LastModified" : "2014-08-13T14:58:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Modules/CheckApplyCompilerFlags.cmake" : {
      "ObjectId" : "0fad7805c318cbde6a3a6d13318f9e5c010150e5",
      "LastModified" : "2014-11-21T23:44:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# This only works if included after the line containing the PROJECT call in\n\n# CMake.\n\n#\n\n# COMPILER_CXX_FLAGS(FLAGS;FLAGS_RELEASE;FLAGS_DEBUG)\n\n#\n\n# Copyright (C) 2011 by Hugues\n\n#\n\n# This file may be licensed under the terms of the\n\n# GNU Lesser General Public License Version 3 (the ``LGPL''),\n\n# or (at your option) any later version.\n\n#\n\n# Software distributed under the License is distributed\n\n# on an ``AS IS'' basis, WITHOUT WARRANTY OF ANY KIND, either\n\n# express or implied. See the LGPL for the specific language\n\n# governing rights and limitations.\n\n#\n\n# You should have received a copy of the LGPL along with this\n\n# program. If not, go to http://www.gnu.org/licenses/lgpl.html\n\n# or write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# \n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#General flags\n",
        "Line" : 34,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "#we make a good unique variable name for the check\n",
        "Line" : 36,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "#now we do the check\n",
        "Line" : 40,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "#if the check pass, lets add the definition\n",
        "Line" : 43,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "#Release flags\n",
        "Line" : 60,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "#we make a good unique variable name for the check\n",
        "Line" : 62,
        "CharPositionInLine" : 3
      },
      "8" : {
        "Text" : "#now we do the check\n",
        "Line" : 66,
        "CharPositionInLine" : 3
      },
      "9" : {
        "Text" : "#if the check pass, lets add the definition\n",
        "Line" : 69,
        "CharPositionInLine" : 3
      },
      "10" : {
        "Text" : "#Debug flags\n",
        "Line" : 80,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "#we make a good unique variable name for the check\n",
        "Line" : 82,
        "CharPositionInLine" : 3
      },
      "12" : {
        "Text" : "#now we do the check\n",
        "Line" : 86,
        "CharPositionInLine" : 3
      },
      "13" : {
        "Text" : "#if the check pass, lets add the definition\n",
        "Line" : 89,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 14
    },
    "cmake/Modules/CheckInitMethod.cmake" : {
      "ObjectId" : "aef8420ab820ab3de68d12908f36c22d5fc6df66",
      "LastModified" : "2014-11-21T23:44:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Determines which method to use for methods that will be executed before main\n\n# begins.\n\n#\n\n# Defines:\n\n# INIT_METHOD_ATTRIBUTE_CONSTRUCTOR - if __attribute__ ((constructor)) can be used\n\n# INIT_METHOD_CRT - if a CRT initialization on windows can be used\n\n#\n\n# Copyright (C) 2010 by Johannes Wienke <jwienke at techfak dot uni-bielefeld dot de>\n\n#\n\n# This file may be licensed under the terms of the\n\n# GNU Lesser General Public License Version 3 (the ``LGPL''),\n\n# or (at your option) any later version.\n\n#\n\n# Software distributed under the License is distributed\n\n# on an ``AS IS'' basis, WITHOUT WARRANTY OF ANY KIND, either\n\n# express or implied. See the LGPL for the specific language\n\n# governing rights and limitations.\n\n#\n\n# You should have received a copy of the LGPL along with this\n\n# program. If not, go to http://www.gnu.org/licenses/lgpl.html\n\n# or write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n\n#\n\n# The development of this software was supported by:\n\n#   CoR-Lab, Research Institute for Cognition and Robotics\n\n#     Bielefeld University\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/CheckLSBTypes.cmake" : {
      "ObjectId" : "776a9c842e57bdaf2f5e8df2bd591d4199f58d1c",
      "LastModified" : "2014-11-21T23:44:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - If included, system dependent information types like lsb_release name, architecture type\n\n#   and some other useful information stored for global CMAKE use\n\n#\n\n#   !!! The content of these variables should not be used in cross compilation projects !!!\n\n#\n\n# Copyright (C) 2011 by Michael Götting  <mgoettin at techfak dot uni-bielefeld dot de>\n\n#\n\n# This file may be licensed under the terms of the\n\n# GNU Lesser General Public License Version 3 (the ``LGPL''),\n\n# or (at your option) any later version.\n\n#\n\n# Software distributed under the License is distributed\n\n# on an ``AS IS'' basis, WITHOUT WARRANTY OF ANY KIND, either\n\n# express or implied. See the LGPL for the specific language\n\n# governing rights and limitations.\n\n#\n\n# You should have received a copy of the LGPL along with this\n\n# program. If not, go to http://www.gnu.org/licenses/lgpl.html\n\n# or write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n\n#\n\n# The development of this software was supported by:\n\n#   CoR-Lab, Research Institute for Cognition and Robotics\n\n#     Bielefeld University\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ---- (mgoettin 10/17/2011) TODO: Update this to match all OS ----\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ---- Get the system bit type ----\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ---- Get the system LSB data ----\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ---- Get the distribution codename ----\n",
        "Line" : 47,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# ---- Get the release name ----\n",
        "Line" : 52,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# ---- Get the distributor id ----\n",
        "Line" : 57,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 7
    },
    "cmake/Modules/CurrentDate.cmake" : {
      "ObjectId" : "8c8598575e5453e715b4670c49f95e389472b062",
      "LastModified" : "2014-11-21T23:44:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - A macro returning the current date.\n\n#\n\n# Copyright (C) 2012 by Johannes Wienke <jwienke at techfak dot uni-bielefeld dot de>\n\n#\n\n# This file may be licensed under the terms of the\n\n# GNU Lesser General Public License Version 3 (the ``LGPL''),\n\n# or (at your option) any later version.\n\n#\n\n# Software distributed under the License is distributed\n\n# on an ``AS IS'' basis, WITHOUT WARRANTY OF ANY KIND, either\n\n# express or implied. See the LGPL for the specific language\n\n# governing rights and limitations.\n\n#\n\n# You should have received a copy of the LGPL along with this\n\n# program. If not, go to http://www.gnu.org/licenses/lgpl.html\n\n# or write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n\n#\n\n# The development of this software was supported by:\n\n#   CoR-Lab, Research Institute for Cognition and Robotics\n\n#     Bielefeld University\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/DefineProjectVersion.cmake" : {
      "ObjectId" : "eee4e4b9eb6cf0b6e516e68ab5d18e3d0dfe5a0b",
      "LastModified" : "2014-11-21T23:44:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Defines several variables forming the version of a software project based\n\n# on a cascade as information sources like the VCS.\n\n#\n\n# DEFINE_PROJECT_VERSION(OUT_VARIABLE_PREFIX\n\n#                        MAJOR_DEFAULT MINOR_DEFAULT PATCH_DEFAULT COMMIT_ID_DEFAULT)\n\n# \n\n# Defines in the calling scope the variables:\n\n# * ${OUT_VARIABLE_PREFIX}VERSION_MAJOR\n\n# * ${OUT_VARIABLE_PREFIX}VERSION_MINOR\n\n# * ${OUT_VARIABLE_PREFIX}VERSION_PATCH\n\n# * ${OUT_VARIABLE_PREFIX}WC_REVISION\n\n#\n\n# The detailed cascade for defining these variables is as follows (earlier steps\n\n# preceede later ones):\n\n# 1. GIT or SVN-provided information (patch and revision)\n\n# 2. Above-like information provided by the project maintainer found in a\n\n#    vcsversion.cmake file in CMAKE_SOURCE_DIR (patch and revision)\n\n# 3. Defaults provided in the call to this function\n\n#\n\n# Inputs:\n\n#   OUT_VARIABLE_PREFIX: prefix for the defined variables\n\n#   MAJOR_DEFAULT: default major version to use as fallback\n\n#   MINOR_DEFAULT: default minor version to use as fallback\n\n#   PATCH_DEFAULT: default patch version to use as fallback\n\n#   COMMIT_ID_DEFAULT: default commit id to use as fallback\n\n#\n\n# The output variables are not generated in the cmake cache and hence cannot be\n\n# overridden by the user. If this behavior is desired, defined the default\n\n# values in the cache.\n\n#\n\n# To generate a vcsversion.cmake file from git you can use the python script\n\n# git2staticversion.py which is installed along this cmake module.\n\n#\n\n# TODO: still values from the VCS will take preceedence over the defaults, which\n\n# might anyways be a good idea\n\n#\n\n# Copyright (C) 2012 by Johannes Wienke <jwienke at techfak dot uni-bielefeld dot de>\n\n#\n\n# This file may be licensed under the terms of the\n\n# GNU Lesser General Public License Version 3 (the ``LGPL''),\n\n# or (at your option) any later version.\n\n#\n\n# Software distributed under the License is distributed\n\n# on an ``AS IS'' basis, WITHOUT WARRANTY OF ANY KIND, either\n\n# express or implied. See the LGPL for the specific language\n\n# governing rights and limitations.\n\n#\n\n# You should have received a copy of the LGPL along with this\n\n# program. If not, go to http://www.gnu.org/licenses/lgpl.html\n\n# or write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n\n#\n\n# The development of this software was supported by:\n\n#   CoR-Lab, Research Institute for Cognition and Robotics\n\n#     Bielefeld University\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# version information\n",
        "Line" : 61,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# 1a. try to check git for relevant information\n",
        "Line" : 65,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# 1b. try SVN\n",
        "Line" : 69,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# 2. use a provided version file if existing\n",
        "Line" : 85,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# alwayas assume that this is a release\n",
        "Line" : 88,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# 3. build variables using defaults\n",
        "Line" : 92,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# we should not make the next two a cache entry as they wouln't be updated\n\n# automatically otherwise when the VCS provides new information \n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "cmake/Modules/DemangleCppABI.cmake" : {
      "ObjectId" : "714215a789ee711e4b381b6098972fe325b35f9f",
      "LastModified" : "2014-11-21T23:44:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set DEMANGLE_ABI with the ABI you should use to demangle symbols\n\n#\n\n# Copyright (C) 2011 by Johannes Wienke <jwienke at techfak dot uni-bielefeld dot de>\n\n#\n\n# This file may be licensed under the terms of the\n\n# GNU Lesser General Public License Version 3 (the ``LGPL''),\n\n# or (at your option) any later version.\n\n#\n\n# Software distributed under the License is distributed\n\n# on an ``AS IS'' basis, WITHOUT WARRANTY OF ANY KIND, either\n\n# express or implied. See the LGPL for the specific language\n\n# governing rights and limitations.\n\n#\n\n# You should have received a copy of the LGPL along with this\n\n# program. If not, go to http://www.gnu.org/licenses/lgpl.html\n\n# or write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n\n#\n\n# The development of this software was supported by:\n\n#   CoR-Lab, Research Institute for Cognition and Robotics\n\n#     Bielefeld University\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# decide how to do name demangling\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Modules/EnableCoverageReport.cmake" : {
      "ObjectId" : "ccea1d8cff2f6c44284b22ac4e194b68c7556f9f",
      "LastModified" : "2014-11-21T23:44:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Creates a special coverage build type and target on GCC.\n\n#\n\n# Defines a function ENABLE_COVERAGE_REPORT which generates the coverage target\n\n# for selected targets. Optional arguments to this function are used to filter\n\n# unwanted results using globbing expressions. Moreover targets with tests for\n\n# the source code can be specified to trigger regenerating the report if the\n\n# test has changed\n\n#\n\n# ENABLE_COVERAGE_REPORT(TARGETS target... [FILTER filter...] [TESTS test targets...])\n\n#\n\n# The coverage report is based on gcov. Depending on the availability of lcov\n\n# a HTML report will be generated and/or an XML report of gcovr is found.\n\n# The generated coverage target executes all found solutions. Special targets\n\n# exist to create e.g. only the xml report: coverage-xml. \n\n#\n\n# Copyright (C) 2010 by Johannes Wienke <jwienke at techfak dot uni-bielefeld dot de>\n\n#\n\n# This file may be licensed under the terms of the\n\n# GNU Lesser General Public License Version 3 (the ``LGPL''),\n\n# or (at your option) any later version.\n\n#\n\n# Software distributed under the License is distributed\n\n# on an ``AS IS'' basis, WITHOUT WARRANTY OF ANY KIND, either\n\n# express or implied. See the LGPL for the specific language\n\n# governing rights and limitations.\n\n#\n\n# You should have received a copy of the LGPL along with this\n\n# program. If not, go to http://www.gnu.org/licenses/lgpl.html\n\n# or write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n\n#\n\n# The development of this software was supported by:\n\n#   CoR-Lab, Research Institute for Cognition and Robotics\n\n#     Bielefeld University\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# argument parsing\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# decide if there is any tool to create coverage data\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# create coverage build type\n",
        "Line" : 66,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# instrument targets\n",
        "Line" : 71,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# html report\n",
        "Line" : 75,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# set up coverage target\n",
        "Line" : 80,
        "CharPositionInLine" : 12
      },
      "7" : {
        "Text" : "# filter unwanted stuff\n",
        "Line" : 89,
        "CharPositionInLine" : 12
      },
      "8" : {
        "Text" : "# xml coverage report\n",
        "Line" : 119,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# gcovr cannot write directly to a file so the execution needs to\n\n# be wrapped in a cmake file that generates the file output\n",
        "Line" : 124,
        "CharPositionInLine" : 12
      },
      "10" : {
        "Text" : "# provide a global coverage target executing both steps if available\n",
        "Line" : 141,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 11
    },
    "cmake/Modules/EnableSlocCount.cmake" : {
      "ObjectId" : "0f6ffdd2eee4a1e6b79e29c77323a04522f7e06c",
      "LastModified" : "2014-11-21T23:44:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Creates a target to calculate the source lines of code\n\n#\n\n# If the sloccount executable is found, a special target will be created\n\n# that counts the source lines of code for specified folders. To create this\n\n# target, use this function that can also be used if sloccount was not found:\n\n#\n\n# ENABLE_SLOCCOUNT(FOLDERS Folder ... [RESULT_FILE file])\n\n#\n\n# Results will be given on the console and stored in a file. The default for\n\n# this file is CMAKE_BINARY_DIR/sloccount.sc.\n\n#\n\n# Copyright (C) 2011 by Johannes Wienke <jwienke at techfak dot uni-bielefeld dot de>\n\n#\n\n# This file may be licensed under the terms of the\n\n# GNU Lesser General Public License Version 3 (the ``LGPL''),\n\n# or (at your option) any later version.\n\n#\n\n# Software distributed under the License is distributed\n\n# on an ``AS IS'' basis, WITHOUT WARRANTY OF ANY KIND, either\n\n# express or implied. See the LGPL for the specific language\n\n# governing rights and limitations.\n\n#\n\n# You should have received a copy of the LGPL along with this\n\n# program. If not, go to http://www.gnu.org/licenses/lgpl.html\n\n# or write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n\n#\n\n# The development of this software was supported by:\n\n#   CoR-Lab, Research Institute for Cognition and Robotics\n\n#     Bielefeld University\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# argument parsing\n",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# argument parsing\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# sloccount cannot write directly to a file so the execution needs to\n\n# be wrapped in a cmake file that generates the file output\n",
        "Line" : 60,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 4
    },
    "cmake/Modules/FindBoostThreadpool.cmake" : {
      "ObjectId" : "ba49c82f4b3bf354fa3ca6251a19cd3ea6a472f1",
      "LastModified" : "2014-11-21T23:44:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the boost threadpool library\n\n# Will define:\n\n#\n\n# BOOSTTHREADPOOL_INCLUDE_DIRS - include directories needed to use the library\n\n#\n\n# Copyright (C) 2010 by Johannes Wienke <jwienke at techfak dot uni-bielefeld dot de>\n\n#\n\n# This file may be licensed under the terms of the\n\n# GNU Lesser General Public License Version 3 (the ``LGPL''),\n\n# or (at your option) any later version.\n\n#\n\n# Software distributed under the License is distributed\n\n# on an ``AS IS'' basis, WITHOUT WARRANTY OF ANY KIND, either\n\n# express or implied. See the LGPL for the specific language\n\n# governing rights and limitations.\n\n#\n\n# You should have received a copy of the LGPL along with this\n\n# program. If not, go to http://www.gnu.org/licenses/lgpl.html\n\n# or write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n\n#\n\n# The development of this software was supported by:\n\n#   CoR-Lab, Research Institute for Cognition and Robotics\n\n#     Bielefeld University\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# post-process inlude path\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# only visible in advanced view\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/Modules/FindBoostUUID.cmake" : {
      "ObjectId" : "7e1d1449fa97ea59949ff6e9d990b9da42680db3",
      "LastModified" : "2014-11-21T23:44:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Try to find the boost uuid library\n\n# Will define:\n\n#\n\n# BOOSTUUID_INCLUDE_DIRS - include directories needed to use the library\n\n#\n\n# Uses:\n\n#\n\n# BOOSTUUID_ROOT - hint for the installation root of boost uuid\n\n#\n\n# Copyright (C) 2010 by Johannes Wienke <jwienke at techfak dot uni-bielefeld dot de>\n\n#\n\n# This file may be licensed under the terms of the\n\n# GNU Lesser General Public License Version 3 (the ``LGPL''),\n\n# or (at your option) any later version.\n\n#\n\n# Software distributed under the License is distributed\n\n# on an ``AS IS'' basis, WITHOUT WARRANTY OF ANY KIND, either\n\n# express or implied. See the LGPL for the specific language\n\n# governing rights and limitations.\n\n#\n\n# You should have received a copy of the LGPL along with this\n\n# program. If not, go to http://www.gnu.org/licenses/lgpl.html\n\n# or write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n\n#\n\n# The development of this software was supported by:\n\n#   CoR-Lab, Research Institute for Cognition and Robotics\n\n#     Bielefeld University\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# we use a result of FindBoost as a hint for searching the uuid paths\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# only visible in advanced view\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/Modules/FindBox2D.cmake" : {
      "ObjectId" : "4e492d359e337916e23abc2c263bcbf3c29e1228",
      "LastModified" : "2015-02-21T23:14:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find Box2D\n\n# Find the native Box2D includes and libraries\n\n#\n\n#  BOX2D_INCLUDE_DIR - where to find box2d, etc.\n\n#  BOX2D_LIBRARIES   - List of libraries when using box2d.\n\n#  BOX2D_FOUND       - True if box2d found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Fink\n\n# DarwinPorts\n\n# Blastwave\n",
        "Line" : 20,
        "CharPositionInLine" : 15
      },
      "3" : {
        "Text" : "# Fink\n\n# DarwinPorts\n\n# Blastwave\n",
        "Line" : 36,
        "CharPositionInLine" : 15
      },
      "4" : {
        "Text" : "# Fink\n\n# DarwinPorts\n\n# Blastwave\n",
        "Line" : 52,
        "CharPositionInLine" : 15
      },
      "5" : {
        "Text" : "# Library found\n",
        "Line" : 61,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# If both were found, set BOX2D_LIBRARY to the release version\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set SNDFILE_FOUND to TRUE if\n\n# all listed variables are TRUE.\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cmake/Modules/FindCccc.cmake" : {
      "ObjectId" : "0f973ce1a7b9e65fd34b66e8016c8c35bf44899b",
      "LastModified" : "2015-02-21T23:14:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the CCCC utility\n\n# Will define:\n\n#\n\n# CCCC_EXECUTABLE - CCCC executable\n\n# CCCC_VERSION - version of CCCC\n\n#\n\n# Possible hints:\n\n# CCCC_ROOT - root directory of cccc installation\n\n#\n\n# Copyright (C) 2011 by Johannes Wienke <jwienke at techfak dot uni-bielefeld dot de>\n\n#\n\n# This file may be licensed under the terms of the\n\n# GNU Lesser General Public License Version 3 (the ``LGPL''),\n\n# or (at your option) any later version.\n\n#\n\n# Software distributed under the License is distributed\n\n# on an ``AS IS'' basis, WITHOUT WARRANTY OF ANY KIND, either\n\n# express or implied. See the LGPL for the specific language\n\n# governing rights and limitations.\n\n#\n\n# You should have received a copy of the LGPL along with this\n\n# program. If not, go to http://www.gnu.org/licenses/lgpl.html\n\n# or write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n\n#\n\n# The development of this software was supported by:\n\n#   CoR-Lab, Research Institute for Cognition and Robotics\n\n#     Bielefeld University\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# find server executable\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# get the version\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# only visible in advanced view\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/Modules/FindCppUnit.cmake" : {
      "ObjectId" : "4ed6c1a41b47226ec5cb14df9a1fd33da2ff14e7",
      "LastModified" : "2015-02-21T23:14:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find cppunit\n\n# based on a version found at:\n\n# https://id.eesti.ee/trac/browser/cmake/modules/FindCppUnit.cmake\n\n#\n\n# Find the native cppunit includes and library\n\n#\n\n#  CPPUNIT_INCLUDE_DIR - where to find cppunit/Test.h, etc.\n\n#  CPPUNIT_LIBRARIES   - List of libraries when using cppunit.\n\n#  CPPUNIT_FOUND       - True if cppunit found.\n\n#  CPPUNIT_DEFINITIONS - You should add_definitons(${LIBSMI_DEFINITIONS}) before\n\n#                       compiling code that includes cppunit library files.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set CPPUNIT_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#FIND_PACKAGE_HANDLE_STANDARD_ARGS(CppUnit DEFAULT_MSG CPPUNIT_LIBRARY\n\n#    CPPUNIT_INCLUDE_DIR CPPUNIT_LIBRARIES CPPUNIT_LIBRARY_DIRS)\n\n#\n\n#MARK_AS_ADVANCED( CPPUNIT_LIBRARY CPPUNIT_INCLUDE_DIR CPPUNIT_LIBRARIES\n\n#    CPPUNIT_LIBRARY_DIRS CPPUNIT_DEFINITIONS )\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/Modules/FindCppcheck.cmake" : {
      "ObjectId" : "ab686bc13e6bc56c70a6a0fda6bce5cf56a61b9a",
      "LastModified" : "2015-02-21T23:14:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the cppcheck utility\n\n# Will define:\n\n#\n\n# CPPCHECK_EXECUTABLE - cppcheck executable\n\n# CPPCHECK_VERSION - version of cppcheck\n\n#\n\n# Possible hints:\n\n# CPPCHECK_ROOT - root directory of the mongodb installation\n\n#\n\n# Copyright (C) 2011 by Johannes Wienke <jwienke at techfak dot uni-bielefeld dot de>\n\n#\n\n# This file may be licensed under the terms of the\n\n# GNU Lesser General Public License Version 3 (the ``LGPL''),\n\n# or (at your option) any later version.\n\n#\n\n# Software distributed under the License is distributed\n\n# on an ``AS IS'' basis, WITHOUT WARRANTY OF ANY KIND, either\n\n# express or implied. See the LGPL for the specific language\n\n# governing rights and limitations.\n\n#\n\n# You should have received a copy of the LGPL along with this\n\n# program. If not, go to http://www.gnu.org/licenses/lgpl.html\n\n# or write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n\n#\n\n# The development of this software was supported by:\n\n#   CoR-Lab, Research Institute for Cognition and Robotics\n\n#     Bielefeld University\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# find server executable\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# get the version\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# only visible in advanced view\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/Modules/FindDocker.cmake" : {
      "ObjectId" : "4b3b6d57012ea1071496f7324b9353172bb7435f",
      "LastModified" : "2015-02-26T13:42:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the DOCKER utility\n\n# Will define:\n\n#\n\n# DOCKER_EXECUTABLE - DOCKER executable\n\n# DOCKER_VERSION - version of DOCKER\n\n#\n\n# Possible hints:\n\n# DOCKER_ROOT - root directory of DOCKER installation\n\n#\n\n# Copyright (C) 2011 by Johannes Wienke <jwienke at techfak dot uni-bielefeld dot de>\n\n#\n\n# This file may be licensed under the terms of the\n\n# GNU Lesser General Public License Version 3 (the ``LGPL''),\n\n# or (at your option) any later version.\n\n#\n\n# Software distributed under the License is distributed\n\n# on an ``AS IS'' basis, WITHOUT WARRANTY OF ANY KIND, either\n\n# express or implied. See the LGPL for the specific language\n\n# governing rights and limitations.\n\n#\n\n# You should have received a copy of the LGPL along with this\n\n# program. If not, go to http://www.gnu.org/licenses/lgpl.html\n\n# or write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n\n#\n\n# The development of this software was supported by:\n\n#   CoR-Lab, Research Institute for Cognition and Robotics\n\n#     Bielefeld University\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# find server executable\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# get the version\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# only visible in advanced view\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/Modules/FindENet.cmake" : {
      "ObjectId" : "6d632fe333015d46c6147a2536ee3fbb24c9c6dc",
      "LastModified" : "2015-02-26T13:42:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find enet\n\n# Once done this will define\n\n#\n\n# ENET_FOUND - system has enet\n\n# ENet_INCLUDE_DIRS - the enet include directory\n\n# ENet_LIBRARIES - the libraries needed to use enet\n\n#\n\n# $ENET_ROOT is an environment variable used for finding enet.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set ENET_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Modules/FindEigen2.cmake" : {
      "ObjectId" : "6d129d7a5b13342469f561420e3acc81db6ec9e3",
      "LastModified" : "2015-02-26T13:42:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Eigen2 lib\n\n#\n\n# This module supports requiring a minimum version, e.g. you can do\n\n#   find_package(Eigen2 2.0.3)\n\n# to require version 2.0.3 to newer of Eigen2.\n\n#\n\n# Once done this will define\n\n#\n\n#  EIGEN2_FOUND - system has eigen lib with correct version\n\n#  EIGEN2_INCLUDE_DIR - the eigen include directory\n\n#  EIGEN2_VERSION - eigen version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/Modules/FindEigen3.cmake" : {
      "ObjectId" : "cc3d4051d0f7d199ac760f1765c612ac7b0dc3e6",
      "LastModified" : "2015-02-26T13:42:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Eigen3 lib\n\n#\n\n# This module supports requiring a minimum version, e.g. you can do\n\n#   find_package(Eigen3 3.0.3)\n\n# to require version 3.0.3 to newer of Eigen3.\n\n#\n\n# Once done this will define\n\n#\n\n#  EIGEN3_FOUND - system has eigen lib with correct version\n\n#  EIGEN3_INCLUDE_DIR - the eigen include directory\n\n#  EIGEN3_VERSION - eigen version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>\n\n# Copyright (c) 2012, Arne Nordmann, <anordman@cor-lab.de>\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/Modules/FindFRI.cmake" : {
      "ObjectId" : "e7a067e74889276df51d9d7144c7142771b9a129",
      "LastModified" : "2015-02-26T13:42:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find KUKA FRI (Fast Research Interface) \n\n# Will define:\n\n#\n\n# FRI_FOUND - If FRI was found\n\n# FRI_DIR - FRI root dir (where headers were found)\n\n# FRI_INCLUDE_DIRS - Include directories\n\n#\n\n# Possible hints:\n\n# FRI_ROOT - root directory of the FRI innstallation\n\n#\n\n# Copyright (C) 2012 by Arne Nordmann <anordman at cor-lab dot de>\n\n#\n\n# This file may be licensed under the terms of the\n\n# GNU Lesser General Public License Version 3 (the ``LGPL''),\n\n# or (at your option) any later version.\n\n#\n\n# Software distributed under the License is distributed\n\n# on an ``AS IS'' basis, WITHOUT WARRANTY OF ANY KIND, either\n\n# express or implied. See the LGPL for the specific language\n\n# governing rights and limitations.\n\n#\n\n# You should have received a copy of the LGPL along with this\n\n# program. If not, go to http://www.gnu.org/licenses/lgpl.html\n\n# or write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n\n#\n\n# The development of this software was supported by:\n\n#   CoR-Lab, Research Institute for Cognition and Robotics\n\n#     Bielefeld University\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Try to find friComm.h\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "cmake/Modules/FindJsonCpp.cmake" : {
      "ObjectId" : "53b578ce1077c1ac2cb76fca1b023bd732c315da",
      "LastModified" : "2015-02-26T13:42:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find JSONCpp\n\n#\n\n# This module defines\n\n#  JSONCPP_INCLUDE_DIR, where to find json.h, etc.\n\n#  JSONCPP_LIBRARIES, the libraries needed to use jsoncpp.\n\n#\n\n# Copyright (C) 2010 by Johannes Wienke <jwienke at techfak dot uni-bielefeld dot de>\n\n#\n\n# This file may be licensed under the terms of the\n\n# GNU Lesser General Public License Version 3 (the ``LGPL''),\n\n# or (at your option) any later version.\n\n#\n\n# Software distributed under the License is distributed\n\n# on an ``AS IS'' basis, WITHOUT WARRANTY OF ANY KIND, either\n\n# express or implied. See the LGPL for the specific language\n\n# governing rights and limitations.\n\n#\n\n# You should have received a copy of the LGPL along with this\n\n# program. If not, go to http://www.gnu.org/licenses/lgpl.html\n\n# or write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n\n#\n\n# The development of this software was supported by:\n\n#   CoR-Lab, Research Institute for Cognition and Robotics\n\n#     Bielefeld University\n\n#\n\n# adapted from http://code.google.com/p/emeraldviewer/\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# post-process inlude path\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# get the GCC compiler version\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/Modules/FindLcov.cmake" : {
      "ObjectId" : "2a905a210bbd328206e8f19151b35a438a57a508",
      "LastModified" : "2015-02-26T13:42:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find lcov \n\n# Will define:\n\n#\n\n# LCOV_EXECUTABLE - the lcov binary\n\n# GENHTML_EXECUTABLE - the genhtml executable\n\n#\n\n# Copyright (C) 2010 by Johannes Wienke <jwienke at techfak dot uni-bielefeld dot de>\n\n#\n\n# This file may be licensed under the terms of the\n\n# GNU Lesser General Public License Version 3 (the ``LGPL''),\n\n# or (at your option) any later version.\n\n#\n\n# Software distributed under the License is distributed\n\n# on an ``AS IS'' basis, WITHOUT WARRANTY OF ANY KIND, either\n\n# express or implied. See the LGPL for the specific language\n\n# governing rights and limitations.\n\n#\n\n# You should have received a copy of the LGPL along with this\n\n# program. If not, go to http://www.gnu.org/licenses/lgpl.html\n\n# or write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n\n#\n\n# The development of this software was supported by:\n\n#   CoR-Lab, Research Institute for Cognition and Robotics\n\n#     Bielefeld University\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# only visible in advanced view\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Modules/FindLog4cxx.cmake" : {
      "ObjectId" : "5c61c6b7fd122dfd208c6617c0251b0e5b0065af",
      "LastModified" : "2015-02-26T13:42:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the log4cxx logging library\n\n# Will define:\n\n#\n\n# LOG4CXX_INCLUDE_DIRS - include directories needed to use the library\n\n# LOG4CXX_LIBRARIES - Libraries to link agains fpr the driver\n\n# LOG4CXX_RUNTIME_LIBRARIES - if found, the runtime libraries for log4cxx (dlls on windows)\n\n#\n\n# Possible hints:\n\n# LOG4CXX_VISUAL_STUDIO_PROJECT - root directory of the log4cxx visual studio project on windows\n\n#\n\n# This file may be licensed under the terms of the\n\n# GNU Lesser General Public License Version 3 (the ``LGPL''),\n\n# or (at your option) any later version.\n\n#\n\n# Software distributed under the License is distributed\n\n# on an ``AS IS'' basis, WITHOUT WARRANTY OF ANY KIND, either\n\n# express or implied. See the LGPL for the specific language\n\n# governing rights and limitations.\n\n#\n\n# You should have received a copy of the LGPL along with this\n\n# program. If not, go to http://www.gnu.org/licenses/lgpl.html\n\n# or write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n\n#\n\n# The development of this software was supported by:\n\n#   CoR-Lab, Research Institute for Cognition and Robotics\n\n#     Bielefeld University\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# use pkg-config as a hint if available\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# post-process inlude path\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# only visible in advanced view\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/Modules/FindMongo.cmake" : {
      "ObjectId" : "3c080b7637324536fae92193829f7d64c2de5509",
      "LastModified" : "2015-02-26T13:42:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the C++ mongodb driver\n\n# Will define:\n\n#\n\n# MONGO_INCLUDE_DIRS - include directories needed to use the C++ driver\n\n# MONGO_LIBRARIES - Libraries to link agains fpr the driver\n\n# MONGOD_EXECUTABLE - mongod server executable\n\n#\n\n# Possible hints:\n\n# MONGO_ROOT - root directory of the mongodb installation\n\n#\n\n# Copyright (C) 2010 by Johannes Wienke <jwienke at techfak dot uni-bielefeld dot de>\n\n#\n\n# This file may be licensed under the terms of the\n\n# GNU Lesser General Public License Version 3 (the ``LGPL''),\n\n# or (at your option) any later version.\n\n#\n\n# Software distributed under the License is distributed\n\n# on an ``AS IS'' basis, WITHOUT WARRANTY OF ANY KIND, either\n\n# express or implied. See the LGPL for the specific language\n\n# governing rights and limitations.\n\n#\n\n# You should have received a copy of the LGPL along with this\n\n# program. If not, go to http://www.gnu.org/licenses/lgpl.html\n\n# or write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n\n#\n\n# The development of this software was supported by:\n\n#   CoR-Lab, Research Institute for Cognition and Robotics\n\n#     Bielefeld University\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# post-process inlude path\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# find server executable\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# get the version\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# check version information\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# only visible in advanced view\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/Modules/FindOpenKC.cmake" : {
      "ObjectId" : "5ba854d49e5c1c81ddf3cd79a78d75101bf5a5d7",
      "LastModified" : "2015-02-26T13:42:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Open KUKA Control FRI \n\n# Will define:\n\n#\n\n# OPENKC_FOUND - If OpenKC was found\n\n# OPENKC_DIR - OpenKC root dir (where headers were found)\n\n# OPENKC_INCLUDE_DIRS - Include directories\n\n# OPENKC_LIBRARIES - OpenKC library\n\n#\n\n# Possible hints:\n\n# OPENKC_ROOT - root directory of the OpenKC innstallation\n\n#\n\n# Copyright (C) 2012 by Arne Nordmann <anordman at cor-lab dot de>\n\n#\n\n# This file may be licensed under the terms of the\n\n# GNU Lesser General Public License Version 3 (the ``LGPL''),\n\n# or (at your option) any later version.\n\n#\n\n# Software distributed under the License is distributed\n\n# on an ``AS IS'' basis, WITHOUT WARRANTY OF ANY KIND, either\n\n# express or implied. See the LGPL for the specific language\n\n# governing rights and limitations.\n\n#\n\n# You should have received a copy of the LGPL along with this\n\n# program. If not, go to http://www.gnu.org/licenses/lgpl.html\n\n# or write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n\n#\n\n# The development of this software was supported by:\n\n#   CoR-Lab, Research Institute for Cognition and Robotics\n\n#     Bielefeld University\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Try to find xeno-config.h\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "cmake/Modules/FindProtocolBuffers.cmake" : {
      "ObjectId" : "997c78f4cb6d2d32f4cb1055b359f1d1e4d4ac52",
      "LastModified" : "2015-02-26T13:42:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate and configure the Google Protocol Buffers library.\n\n# A modified version of the original macro from CMake 2.8.\n\n# Defines the following variables:\n\n#\n\n#   PROTOBUF_FOUND - Found the Google Protocol Buffers library\n\n#   PROTOBUF_INCLUDE_DIRS - Include directories for Google Protocol Buffers\n\n#   PROTOBUF_LIBRARIES - The protobuf library\n\n#\n\n# The following cache variables are also defined:\n\n#   PROTOBUF_LIBRARY - The protobuf library\n\n#   PROTOBUF_PROTOC_LIBRARY   - The protoc library\n\n#   PROTOBUF_INCLUDE_DIR - The include directory for protocol buffers\n\n#   PROTOBUF_PROTOC_EXECUTABLE - The protoc compiler\n\n#\n\n# These variables are read for additional hints:\n\n#   PROTOBUF_ROOT - Root directory of the protobuf installation if not found\n\n#                   automatically\n\n#\n\n#  ====================================================================\n\n#  Example:\n\n#\n\n#   find_package(ProtocolBuffers REQUIRED)\n\n#   include_directories(${PROTOBUF_INCLUDE_DIRS})\n\n#\n\n#   include_directories(${CMAKE_CURRENT_BINARY_DIR})\n\n#   PROTOBUF_GENERATE_CPP(PROTO_SRCS PROTO_HDRS foo.proto)\n\n#   add_executable(bar bar.cc ${PROTO_SRCS} ${PROTO_HDRS})\n\n#   target_link_libraries(bar ${PROTOBUF_LIBRARY})\n\n#\n\n# NOTE: You may need to link against pthreads, depending\n\n# on the platform.\n\n#  ====================================================================\n\n#\n\n# PROTOBUF_GENERATE_CPP ([CPP srcs hdrs] [JAVA files] [PYTHON files] PROTOFILES files... [PROTOROOT root] [OUTPATH path] [EXPORT_MACRO macroName] [DEBUG])\n\n#   srcs = Variable to define with autogenerated\n\n#          source files\n\n#   hdrs = Variable to define with autogenerated\n\n#          header files\n\n#   PROTOROOT = Root under which the proto files are located. Paths starting\n\n#               from this root are used under OUTPATH as directory structure\n\n#               for the generated files. Defaults to CMAKE_CURRENT_SOURCE_DIR.\n\n#   OUTPATH = Path to store generated files under. Default is\n\n#             CMAKE_CURRENT_BINARY_DIR.\n\n#   EXPORT_MACRO = Tells protoc to generate DLL export definitions using the\n\n#                  specified macro name\n\n#   DEBUG = if set, debug messages will be generated\n\n#\n\n#  ====================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2009 Kitware, Inc.\n\n# Copyright 2009 Philip Lowman <philip@yhbt.com>\n\n# Copyright 2008 Esben Mose Hansen, Ange Optimization ApS\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distributed this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# argument parsing\n",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#IF(PROTOROOT_LENGTH GREATER 1)\n\n#    MESSAGE(SEND_ERROR \"Error: PROTOBUF_GENERATE() called with too many protoroots, only one is allowed\")\n\n#    RETURN()\n\n#ENDIF()\n",
        "Line" : 78,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# decide whether to build CPP\n",
        "Line" : 93,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# decide whether to build java\n",
        "Line" : 107,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# decide whether to build PYTHON\n",
        "Line" : 120,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# decide whether to build MATLAB\n",
        "Line" : 133,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# create proper export macro for CPP if desired\n",
        "Line" : 146,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# build command line for additional includes paths\n",
        "Line" : 166,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# ensure that the file ends with .proto\n",
        "Line" : 183,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# find out if the file is in one of the specified proto root\n\n# we mimic the protoc logic here by taking the first matching proto_path\n",
        "Line" : 203,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# we did not need to go directories up, hence the path is shorter\n\n# and this is a match... bad assumption but works\n",
        "Line" : 221,
        "CharPositionInLine" : 16
      },
      "13" : {
        "Text" : "# build the result file name\n",
        "Line" : 242,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# determine the java file name\n",
        "Line" : 256,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# first the package\n\n# TODO jwienke: ignore comments... see below TODO\n",
        "Line" : 259,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# then the java class name\n",
        "Line" : 276,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# this is the default\n\n# TODO jwienke: how to integrate that this line must not start with //?\n\n#               cmake regex are strange, because ^ and $ match beginning\n\n#               and end of file and not of each line\n",
        "Line" : 278,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# Now that we have the real java class name, this must be replaced\n\n# in the original file name proposal. However, the subpath in the\n\n# file system is also part of EXT_CLEANED_FILE. Hence, we need to\n\n# do some replace logic again...\n",
        "Line" : 290,
        "CharPositionInLine" : 12
      },
      "19" : {
        "Text" : "# finally deduce the real java name\n",
        "Line" : 299,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# generate and use a list of protoroot arguments to pass to protoc\n",
        "Line" : 309,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "# Google's provided vcproj files generate libraries with a \"lib\"\n\n# prefix on Windows\n",
        "Line" : 399,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# check whether this protoc version supports matlab\n",
        "Line" : 421,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# if we know the compiler version, we should favor it\n",
        "Line" : 447,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Restore original find library prefixes\n",
        "Line" : 473,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "cmake/Modules/FindQGLViewer.cmake" : {
      "ObjectId" : "1ab27d87753294c8d00c4df43f56c1419c88bf36",
      "LastModified" : "2015-02-26T13:42:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find QGLViewer\n\n# Once done this will define\n\n#\n\n#  QGLVIEWER_FOUND - system has QGLViewer\n\n#  QGLVIEWER_INCLUDE_DIR - the QGLViewer include directory\n\n#  QGLVIEWER_LIBRARIES - Link these to use QGLViewer\n\n#  QGLVIEWER_DEFINITIONS - Compiler switches required for using QGLViewer\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindSCC.cmake" : {
      "ObjectId" : "64e618056bb62dff52a1bd0738a96f555f0d9cbd",
      "LastModified" : "2015-02-26T13:42:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find qt-labs scxml binary \n\n# Will define:\n\n#\n\n# SCC_FOUND - If qt-labs scxml was found\n\n# SCC_EXECUTABLE - SCC binary path\n\n#\n\n# Possible hints:\n\n# SCC_ROOT - root directory of the SCC innstallation\n\n#\n\n# Copyright (C) 2012 by Arne Nordmann <anordman at cor-lab dot de>\n\n#\n\n# This file may be licensed under the terms of the\n\n# GNU Lesser General Public License Version 3 (the ``LGPL''),\n\n# or (at your option) any later version.\n\n#\n\n# Software distributed under the License is distributed\n\n# on an ``AS IS'' basis, WITHOUT WARRANTY OF ANY KIND, either\n\n# express or implied. See the LGPL for the specific language\n\n# governing rights and limitations.\n\n#\n\n# You should have received a copy of the LGPL along with this\n\n# program. If not, go to http://www.gnu.org/licenses/lgpl.html\n\n# or write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n\n#\n\n# The development of this software was supported by:\n\n#   CoR-Lab, Research Institute for Cognition and Robotics\n\n#     Bielefeld University\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Try to find scc binary\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "cmake/Modules/FindSFML.cmake" : {
      "ObjectId" : "99cbff2e0c23b72ed4d85c3c579fc957f7d8e618",
      "LastModified" : "2015-02-26T13:42:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This script locates the SFML library\n\n# ------------------------------------\n\n#\n\n# Usage\n\n# -----\n\n#\n\n# When you try to locate the SFML libraries, you must specify which modules you want to use (system, window, graphics, network, audio, main).\n\n# If none is given, the SFML_LIBRARIES variable will be empty and you'll end up linking to nothing.\n\n# example:\n\n#   find_package(SFML COMPONENTS graphics window system) // find the graphics, window and system modules\n\n#\n\n# You can enforce a specific version, either MAJOR.MINOR or only MAJOR.\n\n# If nothing is specified, the version won't be checked (ie. any version will be accepted).\n\n# example:\n\n#   find_package(SFML COMPONENTS ...)     // no specific version required\n\n#   find_package(SFML 2 COMPONENTS ...)   // any 2.x version\n\n#   find_package(SFML 2.4 COMPONENTS ...) // version 2.4 or greater\n\n#\n\n# By default, the dynamic libraries of SFML will be found. To find the static ones instead,\n\n# you must set the SFML_STATIC_LIBRARIES variable to TRUE before calling find_package(SFML ...).\n\n# In case of static linking, the SFML_STATIC macro will also be defined by this script.\n\n# example:\n\n#   set(SFML_STATIC_LIBRARIES TRUE)\n\n#   find_package(SFML 2 COMPONENTS network system)\n\n#\n\n# On Mac OS X if SFML_STATIC_LIBRARIES is not set to TRUE then by default CMake will search for frameworks unless\n\n# CMAKE_FIND_FRAMEWORK is set to \"NEVER\" for example. Please refer to CMake documentation for more details.\n\n# Moreover, keep in mind that SFML frameworks are only available as release libraries unlike dylibs which\n\n# are available for both release and debug modes.\n\n#\n\n# If SFML is not installed in a standard path, you can use the SFML_ROOT CMake (or environment) variable\n\n# to tell CMake where SFML is.\n\n#\n\n# Output\n\n# ------\n\n#\n\n# This script defines the following variables:\n\n# - For each specified module XXX (system, window, graphics, network, audio, main):\n\n#   - SFML_XXX_LIBRARY_DEBUG:   the name of the debug library of the xxx module (set to SFML_XXX_LIBRARY_RELEASE is no debug version is found)\n\n#   - SFML_XXX_LIBRARY_RELEASE: the name of the release library of the xxx module (set to SFML_XXX_LIBRARY_DEBUG is no release version is found)\n\n#   - SFML_XXX_LIBRARY:         the name of the library to link to for the xxx module (includes both debug and optimized names if necessary)\n\n#   - SFML_XXX_FOUND:           true if either the debug or release library of the xxx module is found\n\n# - SFML_LIBRARIES:   the list of all libraries corresponding to the required modules\n\n# - SFML_FOUND:       true if all the required modules are found\n\n# - SFML_INCLUDE_DIR: the path where SFML headers are located (the directory containing the SFML/Config.hpp file)\n\n#\n\n# example:\n\n#   find_package(SFML 2 COMPONENTS system window graphics audio REQUIRED)\n\n#   include_directories(${SFML_INCLUDE_DIR})\n\n#   add_executable(myapp ...)\n\n#   target_link_libraries(myapp ${SFML_LIBRARIES})\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# define the SFML_STATIC macro if static build was chosen\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# deduce the libraries suffix from the options\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# find the SFML include directory\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Fink\n\n# DarwinPorts\n\n# Blastwave\n",
        "Line" : 74,
        "CharPositionInLine" : 23
      },
      "5" : {
        "Text" : "# check the version number\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# extract the major and minor version numbers from SFML/Config.hpp\n\n# we have to handle framework a little bit differently :\n",
        "Line" : 82,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# if we could extract them, compare with the requested version number\n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# transform version numbers to an integer\n",
        "Line" : 97,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# compare them\n",
        "Line" : 100,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# SFML version is < 2.0\n",
        "Line" : 105,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# find the requested modules\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# will be set to false if one of the required modules is not found\n",
        "Line" : 115,
        "CharPositionInLine" : 21
      },
      "13" : {
        "Text" : "# no suffix for sfml-main, it is always a static library\n",
        "Line" : 132,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# debug library\n",
        "Line" : 137,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# release library\n",
        "Line" : 143,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# library found\n",
        "Line" : 150,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# if both are found, set SFML_XXX_LIBRARY to contain both\n",
        "Line" : 153,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# if only one debug/release variant is found, set the other to be equal to the found one\n",
        "Line" : 159,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# debug and not release\n",
        "Line" : 161,
        "CharPositionInLine" : 12
      },
      "20" : {
        "Text" : "# release and not debug\n",
        "Line" : 166,
        "CharPositionInLine" : 12
      },
      "21" : {
        "Text" : "# library not found\n",
        "Line" : 171,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# mark as advanced\n",
        "Line" : 178,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# add to the global list of libraries\n",
        "Line" : 183,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# handle errors\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# SFML version not ok\n",
        "Line" : 189,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# include directory or library not found\n",
        "Line" : 193,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# fatal error\n",
        "Line" : 198,
        "CharPositionInLine" : 8
      },
      "28" : {
        "Text" : "# error but continue\n",
        "Line" : 201,
        "CharPositionInLine" : 8
      },
      "29" : {
        "Text" : "# handle success\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 30
    },
    "cmake/Modules/FindSpread.cmake" : {
      "ObjectId" : "2bceb860195f2beebb71a1400f0c2ebf3e561c14",
      "LastModified" : "2015-02-26T13:42:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find the Spread Toolkit\n\n# This module defines:\n\n#  SPREAD_INCLUDE_DIRS, where to find sp.h, etc.\n\n#  SPREAD_LIBRARIES, the libraries needed to use spread.\n\n#  SPREAD_EXECUTABLE, the spread daemon executable.\n\n#\n\n# Will react on:\n\n#  SPREAD_ROOT, additional directory to search for spread\n\n#  SPREAD_USE_STATIC, if enabled, search for static lib instead of shared, default OFF\n\n#  SPREAD_IGNORE_EXECUTABLE, if set to true, a missing spread executable will be ignored, default OFF \n\n#\n\n# Copyright (C) 2010 by Johannes Wienke <jwienke at techfak dot uni-bielefeld dot de>\n\n#\n\n# This file may be licensed under the terms of the\n\n# GNU Lesser General Public License Version 3 (the ``LGPL''),\n\n# or (at your option) any later version.\n\n#\n\n# Software distributed under the License is distributed\n\n# on an ``AS IS'' basis, WITHOUT WARRANTY OF ANY KIND, either\n\n# express or implied. See the LGPL for the specific language\n\n# governing rights and limitations.\n\n#\n\n# You should have received a copy of the LGPL along with this\n\n# program. If not, go to http://www.gnu.org/licenses/lgpl.html\n\n# or write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n\n#\n\n# The development of this software was supported by:\n\n#   CoR-Lab, Research Institute for Cognition and Robotics\n\n#     Bielefeld University\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# the dfeault spread project for MSVC generates a static lib\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# find out the spread version that is present using a program to also work\n\n# if no executable is available\n",
        "Line" : 69,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Requested version could not be determined\n",
        "Line" : 80,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# store we do not want to repeat this check...\n",
        "Line" : 90,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 5
    },
    "cmake/Modules/FindSqlite3.cmake" : {
      "ObjectId" : "ceb27454dc2456b01ac2803a468f8eab5b6e4e17",
      "LastModified" : "2015-02-26T13:42:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Sqlite3\n\n# Once done this will define\n\n#\n\n#  SQLITE_ROOT\n\n#  SQLITE3_FOUND - system has Sqlite3\n\n#  SQLITE3_INCLUDE_DIRS - the Sqlite3 include directory\n\n#  SQLITE3_LIBRARIES - Link these to use Sqlite3\n\n#  SQLITE3_DEFINITIONS - Compiler switches required for using Sqlite3\n\n#\n\n#  Copyright (c) 2008 Andreas Schneider <mail@cynapses.org>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 19,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# show the SQLITE3_INCLUDE_DIRS and SQLITE3_LIBRARIES variables only in the advanced view\n",
        "Line" : 84,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "cmake/Modules/FindTBB.cmake" : {
      "ObjectId" : "064fdecb3e747164ca2aa8dcd335bf56e6241c33",
      "LastModified" : "2015-02-26T13:42:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the Intel Threading Building Blocks library\n\n# Will define:\n\n#\n\n# TBB_INCLUDE_DIRS - include directories needed to use the C++ driver\n\n# TBB_LIBRARIES - Libraries to link agains fpr the driver\n\n# TBB_LIBRARY_DIRS - Directories containing the libraries (win)\n\n# TBB_VERSION - Version of the TBB library that was found\n\n# TBB_RUNTIME_LIBRARIES - Runtime libraries if found (dll on windows)\n\n# TBB_RUNTIME_LIBRARY_DIRS - Directories containing runtime libraries\n\n#\n\n# Possible hints:\n\n# TBB_ROOT - root directory of the TBB installation\n\n# TBB_DEBUG - if true, use the debug libraries of tbb instead of stripped ones\n\n# TBB_BITS - value of 32 or 64 indicating the os type, default 32\n\n# TBB_LIB_PATH - path containing the libraries to use\n\n#\n\n# Copyright (C) 2010 by Johannes Wienke <jwienke at techfak dot uni-bielefeld dot de>\n\n#\n\n# This file may be licensed under the terms of the\n\n# GNU Lesser General Public License Version 3 (the ``LGPL''),\n\n# or (at your option) any later version.\n\n#\n\n# Software distributed under the License is distributed\n\n# on an ``AS IS'' basis, WITHOUT WARRANTY OF ANY KIND, either\n\n# express or implied. See the LGPL for the specific language\n\n# governing rights and limitations.\n\n#\n\n# You should have received a copy of the LGPL along with this\n\n# program. If not, go to http://www.gnu.org/licenses/lgpl.html\n\n# or write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n\n#\n\n# The development of this software was supported by:\n\n#   CoR-Lab, Research Institute for Cognition and Robotics\n\n#     Bielefeld University\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# post-process inlude path\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# find out the TBB version that is present\n",
        "Line" : 127,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "#MESSAGE(\"Version check compiled: ${TBB_VERSION_COMPILE_RESULT} - ${TBB_VERSION_COMPILE_OUT}\")\n",
        "Line" : 135,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# check if the version is acceptable\n",
        "Line" : 138,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# compiling did not work, no version extracted\n",
        "Line" : 145,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "# running did not work\n",
        "Line" : 148,
        "CharPositionInLine" : 3
      },
      "7" : {
        "Text" : "# wrong version\n",
        "Line" : 151,
        "CharPositionInLine" : 3
      },
      "8" : {
        "Text" : "# store we do not want to repeat this check...\n",
        "Line" : 154,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# only visible in advanced view\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "cmake/Modules/FindValgrind.cmake" : {
      "ObjectId" : "78005aebef8831abb37bed88351fea1c90b82a4d",
      "LastModified" : "2015-02-26T13:42:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the VALGRIND utility\n\n# Will define:\n\n#\n\n# VALGRIND_EXECUTABLE - VALGRIND executable\n\n# VALGRIND_VERSION - version of VALGRIND\n\n#\n\n# Possible hints:\n\n# VALGRIND_ROOT - root directory of valgrind installation\n\n#\n\n# Copyright (C) 2011 by Johannes Wienke <jwienke at techfak dot uni-bielefeld dot de>\n\n#\n\n# This file may be licensed under the terms of the\n\n# GNU Lesser General Public License Version 3 (the ``LGPL''),\n\n# or (at your option) any later version.\n\n#\n\n# Software distributed under the License is distributed\n\n# on an ``AS IS'' basis, WITHOUT WARRANTY OF ANY KIND, either\n\n# express or implied. See the LGPL for the specific language\n\n# governing rights and limitations.\n\n#\n\n# You should have received a copy of the LGPL along with this\n\n# program. If not, go to http://www.gnu.org/licenses/lgpl.html\n\n# or write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n\n#\n\n# The development of this software was supported by:\n\n#   CoR-Lab, Research Institute for Cognition and Robotics\n\n#     Bielefeld University\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# find server executable\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# get the version\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# only visible in advanced view\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/Modules/FindXenomai.cmake" : {
      "ObjectId" : "5ff9f5a3256ee17c42a1e5ecf3e6d659fe257abc",
      "LastModified" : "2015-02-26T13:42:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the Xenomai Real-Time \n\n# Will define:\n\n#\n\n# XENOMAI_INCLUDE_DIR - Include directories needed to use the C++ driver\n\n# XENOMAI_INCLUDE_POSIX_DIR - Include directories for POSIX systems\n\n# XENOMAI_POSIX_WRAPPERS - Directories containing the libraries (win)\n\n# XENOMAI_LIBRARY_XENOMAI - Xenomai library \n\n# XENOMAI_LIBRARY_NATIVE - Native library\n\n# XENOMAI_LIBRARY_PTHREAD_RT - \n\n# XENOMAI_LIBRARY_RTDM - \n\n# XENOMAI_DEFINITIONS - Xenomai definitions / compiler flags\n\n#\n\n# Possible hints:\n\n# XENOMAI_ROOT - root directory of the TBB installation\n\n#\n\n# Copyright (C) 2010 by Arne Nordmann <anordman at cor-lab dot de>\n\n#\n\n# This file may be licensed under the terms of the\n\n# GNU Lesser General Public License Version 3 (the ``LGPL''),\n\n# or (at your option) any later version.\n\n#\n\n# Software distributed under the License is distributed\n\n# on an ``AS IS'' basis, WITHOUT WARRANTY OF ANY KIND, either\n\n# express or implied. See the LGPL for the specific language\n\n# governing rights and limitations.\n\n#\n\n# You should have received a copy of the LGPL along with this\n\n# program. If not, go to http://www.gnu.org/licenses/lgpl.html\n\n# or write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n\n#\n\n# The development of this software was supported by:\n\n#   CoR-Lab, Research Institute for Cognition and Robotics\n\n#     Bielefeld University\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Search Path\n",
        "Line" : 38,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Try to find xeno-config.h\n",
        "Line" : 41,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# Set include directory\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# We are on ubuntu\n",
        "Line" : 50,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "# Find xenomai pthread\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Find posix wrappers\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Add compile/preprocess options\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "cmake/Modules/Findgcovr.cmake" : {
      "ObjectId" : "fbceb4eae5440d73ad7ab5a6c0f47f8becdd613b",
      "LastModified" : "2015-02-26T13:42:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find gcovr scrip \n\n# Will define:\n\n#\n\n# GCOVR_EXECUTABLE - the gcovr script\n\n#\n\n# Uses:\n\n#\n\n# GCOVR_ROOT - root to search for the script\n\n#\n\n# Copyright (C) 2011 by Johannes Wienke <jwienke at techfak dot uni-bielefeld dot de>\n\n#\n\n# This file may be licensed under the terms of the\n\n# GNU Lesser General Public License Version 3 (the ``LGPL''),\n\n# or (at your option) any later version.\n\n#\n\n# Software distributed under the License is distributed\n\n# on an ``AS IS'' basis, WITHOUT WARRANTY OF ANY KIND, either\n\n# express or implied. See the LGPL for the specific language\n\n# governing rights and limitations.\n\n#\n\n# You should have received a copy of the LGPL along with this\n\n# program. If not, go to http://www.gnu.org/licenses/lgpl.html\n\n# or write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n\n#\n\n# The development of this software was supported by:\n\n#   CoR-Lab, Research Institute for Cognition and Robotics\n\n#     Bielefeld University\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# only visible in advanced view\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Modules/Findsloccount.cmake" : {
      "ObjectId" : "c29b84a11500289af03f8bf2587736287c2bdc0d",
      "LastModified" : "2015-02-26T13:42:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find sloccount\n\n# Will define:\n\n#\n\n# SLOCCOUNT_EXECUTABLE - the sloccount binary\n\n#\n\n# Uses:\n\n#\n\n# SLOCCOUNT_ROOT - additional search hint for the binary\n\n#\n\n# Copyright (C) 2011 by Johannes Wienke <jwienke at techfak dot uni-bielefeld dot de>\n\n#\n\n# This file may be licensed under the terms of the\n\n# GNU Lesser General Public License Version 3 (the ``LGPL''),\n\n# or (at your option) any later version.\n\n#\n\n# Software distributed under the License is distributed\n\n# on an ``AS IS'' basis, WITHOUT WARRANTY OF ANY KIND, either\n\n# express or implied. See the LGPL for the specific language\n\n# governing rights and limitations.\n\n#\n\n# You should have received a copy of the LGPL along with this\n\n# program. If not, go to http://www.gnu.org/licenses/lgpl.html\n\n# or write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n\n#\n\n# The development of this software was supported by:\n\n#   CoR-Lab, Research Institute for Cognition and Robotics\n\n#     Bielefeld University\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# only visible in advanced view\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Modules/GenerateCccc.cmake" : {
      "ObjectId" : "f552e2cf6af5b0c7a276cbbbad238613adda7289",
      "LastModified" : "2015-02-26T13:42:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Generate a cccc documentation for a project.\n\n# The function GENERATE_CCCC is provided to create a \"cccc\" target that\n\n# performs static code analysis using the cccc utility program.\n\n#\n\n# GENERATE_CCCC(SOURCES <sources to check...>)\n\n#\n\n#\n\n# cccc will be executed with CMAKE_CURRENT_SOURCE_DIR as working directory.\n\n#\n\n# This function can always be called, even if no cccc was found. Then no\n\n# target is created.\n\n#\n\n# Copyright (C) 2011 by Johannes Wienke <jwienke at techfak dot uni-bielefeld dot de>\n\n#\n\n# This file may be licensed under the terms of the\n\n# GNU Lesser General Public License Version 3 (the ``LGPL''),\n\n# or (at your option) any later version.\n\n#\n\n# Software distributed under the License is distributed\n\n# on an ``AS IS'' basis, WITHOUT WARRANTY OF ANY KIND, either\n\n# express or implied. See the LGPL for the specific language\n\n# governing rights and limitations.\n\n#\n\n# You should have received a copy of the LGPL along with this\n\n# program. If not, go to http://www.gnu.org/licenses/lgpl.html\n\n# or write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n\n#\n\n# The development of this software was supported by:\n\n#   CoR-Lab, Research Institute for Cognition and Robotics\n\n#     Bielefeld University\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# parse target name\n",
        "Line" : 45,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# write a list file containing all sources to check for the call to\n\n# cccc\n",
        "Line" : 56,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# prepare a cmake wrapper to write the stderr output of cccc to\n\n# the result file\n",
        "Line" : 69,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 4
    },
    "cmake/Modules/GenerateCppcheck.cmake" : {
      "ObjectId" : "eab7fa7660b3c6b6e1eb7fe7fc496879220f0aa6",
      "LastModified" : "2015-02-26T13:42:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Generate a cppcheck documentation for a project.\n\n# The function GENERATE_CPPCHECK is provided to create a \"cppcheck\" target that\n\n# performs static code analysis using the cppcheck utility program.\n\n#\n\n# GENERATE_CPPCHECK(SOURCES <sources to check...>\n\n#                   [SUPPRESSION_FILE <file>]\n\n#                   [ENABLE_IDS <id...>]\n\n#                   [TARGET_NAME <name>]\n\n#                   [INCLUDES <dir...>]\n\n#                   [INLINE_SUPPRESSION])\n\n#\n\n# Generates a target \"cppcheck\" that executes cppcheck on the specified sources.\n\n# Sources may either be file names or directories containing files where all\n\n# C++ files will be parsed automatically. Use directories whenever possible\n\n# because there is a limitation in arguments to pass to the cppcheck binary.\n\n# SUPPRESSION_FILE may be give additionally to specify suppressions for#\n\n# cppcheck. The sources mentioned in the suppression file must be in the same\n\n# format like given for SOURCES. This means if you specified them relative to\n\n# CMAKE_CURRENT_SOURCE_DIR, then the same relative paths must be used in the\n\n# suppression file.\n\n# ENABLE_IDS allows to specify which additional cppcheck check ids to execute,\n\n# e.g. all or style. They are combined with AND.\n\n# With TARGET_NAME a different name for the generated check target can be\n\n# specified. This is useful if several calles to this function are made in one\n\n# CMake project, as otherwise the target names collide.\n\n# Additional include directories for the cppcheck program can be given with\n\n# INCLUDES.\n\n# If INLINE_SUPPRESSION is set, cppcheck inline-suppression comments are parsed.\n\n#\n\n# cppcheck will be executed with CMAKE_CURRENT_SOURCE_DIR as working directory.\n\n#\n\n# This function can always be called, even if no cppcheck was found. Then no\n\n# target is created.\n\n#\n\n# Copyright (C) 2011 by Johannes Wienke <jwienke at techfak dot uni-bielefeld dot de>\n\n#\n\n# This file may be licensed under the terms of the\n\n# GNU Lesser General Public License Version 3 (the ``LGPL''),\n\n# or (at your option) any later version.\n\n#\n\n# Software distributed under the License is distributed\n\n# on an ``AS IS'' basis, WITHOUT WARRANTY OF ANY KIND, either\n\n# express or implied. See the LGPL for the specific language\n\n# governing rights and limitations.\n\n#\n\n# You should have received a copy of the LGPL along with this\n\n# program. If not, go to http://www.gnu.org/licenses/lgpl.html\n\n# or write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n\n#\n\n# The development of this software was supported by:\n\n#   CoR-Lab, Research Institute for Cognition and Robotics\n\n#     Bielefeld University\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# parse target name\n",
        "Line" : 67,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# write a list file containing all sources to check for the call to\n\n# cppcheck\n",
        "Line" : 78,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# prepare a cmake wrapper to write the stderr output of cppcheck to\n\n# the result file\n",
        "Line" : 85,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# suppression argument\n",
        "Line" : 88,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# inline suppressions\n",
        "Line" : 97,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# includes\n",
        "Line" : 103,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# enabled ids\n",
        "Line" : 109,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 8
    },
    "cmake/Modules/GenerateDoxygen.cmake" : {
      "ObjectId" : "5ae3657f81e14b7bccac0fec02b2cddeb9d0cdb7",
      "LastModified" : "2015-02-26T13:42:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Generate a doxygen documentation for a project.\n\n# The function GENERATE_DOXYGEN is provided to create a \"doc\" target that\n\n# generates a doxygen documentation (currently only as HTML report).\n\n#\n\n# GENERATE_DOXYGEN([AUTO_INSTALL] [NAME <project name>] [VERSION <project version>] [INSTALL_DIR <doc install dir>])\n\n#\n\n#     AUTO_INSTALL: if given the documentation is automatically generated with\n\n#                   the install target and then installed (sometimes buggy)\n\n#     NAME: name of the project used for the documentation, defaults to\n\n#           CMAKE_PROJECT_NAME\n\n#     VERSION: version of the software, if not given, no version is passed to\n\n#              doxygen\n\n#     INSTALL_DIR: directory under which to install the generated documentation.\n\n#                  If not given, this defaults to\n\n#                  ${CMAKE_INSTALL_PREFIX}/share/${NAME}\n\n#\n\n# This function can always be called, even if no doxygen was found. Then no\n\n# target is created.\n\n#\n\n# Copyright (C) 2010 by Johannes Wienke <jwienke at techfak dot uni-bielefeld dot de>\n\n#\n\n# This file may be licensed under the terms of the\n\n# GNU Lesser General Public License Version 3 (the ``LGPL''),\n\n# or (at your option) any later version.\n\n#\n\n# Software distributed under the License is distributed\n\n# on an ``AS IS'' basis, WITHOUT WARRANTY OF ANY KIND, either\n\n# express or implied. See the LGPL for the specific language\n\n# governing rights and limitations.\n\n#\n\n# You should have received a copy of the LGPL along with this\n\n# program. If not, go to http://www.gnu.org/licenses/lgpl.html\n\n# or write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n\n#\n\n# The development of this software was supported by:\n\n#   CoR-Lab, Research Institute for Cognition and Robotics\n\n#     Bielefeld University\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# argument parsing\n",
        "Line" : 49,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# name\n",
        "Line" : 52,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# version\n",
        "Line" : 59,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# write a list file containing all sources to check for the call to\n\n# doxygen\n",
        "Line" : 66,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# install dir\n",
        "Line" : 73,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 6
    },
    "cmake/Modules/GenerateValgrind.cmake" : {
      "ObjectId" : "062512c518f092d22e12b41899b2d86b02f2e801",
      "LastModified" : "2015-02-26T13:42:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Generate a valgrind documentation for a project.\n\n# The function GENERATE_VALGRIND is provided to create a \"doc\" target that\n\n# generates a valgrind documentation (currently only as HTML report).\n\n#\n\n# GENERATE_VALGRIND(TARGETS \"Binary to execute in valgrind\")\n\n#\n\n#     TARGETS: The binaries to execute \n\n#\n\n# This function can always be called, even if no valgrind was found. Then no\n\n# target is created.\n\n#\n\n# Copyright (C) 2010 by Johannes Wienke <jwienke at techfak dot uni-bielefeld dot de>\n\n#\n\n# This file may be licensed under the terms of the\n\n# GNU Lesser General Public License Version 3 (the ``LGPL''),\n\n# or (at your option) any later version.\n\n#\n\n# Software distributed under the License is distributed\n\n# on an ``AS IS'' basis, WITHOUT WARRANTY OF ANY KIND, either\n\n# express or implied. See the LGPL for the specific language\n\n# governing rights and limitations.\n\n#\n\n# You should have received a copy of the LGPL along with this\n\n# program. If not, go to http://www.gnu.org/licenses/lgpl.html\n\n# or write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n\n#\n\n# The development of this software was supported by:\n\n#   CoR-Lab, Research Institute for Cognition and Robotics\n\n#     Bielefeld University\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# argument parsing\n",
        "Line" : 39,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "cmake/Modules/GitProjectVersion.cmake" : {
      "ObjectId" : "966de3edf08193c89d9cf50a2b11087e3cca1e5d",
      "LastModified" : "2015-02-26T13:42:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - If the project is maintained in git, this macro extracts git version\n\n# information using \"git determine\".\n\n#\n\n# Copyright (C) 2012 by Johannes Wienke <jwienke at techfak dot uni-bielefeld dot de>\n\n#\n\n# This file may be licensed under the terms of the\n\n# GNU Lesser General Public License Version 3 (the ``LGPL''),\n\n# or (at your option) any later version.\n\n#\n\n# Software distributed under the License is distributed\n\n# on an ``AS IS'' basis, WITHOUT WARRANTY OF ANY KIND, either\n\n# express or implied. See the LGPL for the specific language\n\n# governing rights and limitations.\n\n#\n\n# You should have received a copy of the LGPL along with this\n\n# program. If not, go to http://www.gnu.org/licenses/lgpl.html\n\n# or write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n\n#\n\n# The development of this software was supported by:\n\n#   CoR-Lab, Research Institute for Cognition and Robotics\n\n#     Bielefeld University\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# check whether this is a git repository by calling \"git status\" once\n",
        "Line" : 37,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# first, define the last commit id using git log.\n\n# This is necessary, as git describe later might fail on shallow clones\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# After the commit hash was extracted safely we can try to use the full\n\n# git describe logic, which is now safe to fail. \n",
        "Line" : 64,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# we should not fail if git execution had an error         \n",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# make the matching against the branch more specific and grab the respective\n\n# information\n",
        "Line" : 76,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# ensure that we are currently on a release branch\n",
        "Line" : 90,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "cmake/Modules/IgnoreReturnCode.cmake" : {
      "ObjectId" : "b42d5549d5a3fb5c518007928a4fba05d4f16bf9",
      "LastModified" : "2015-02-26T13:42:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Execute a process and always return with status 0\n\n#\n\n# This is intended to be used in cmake script mode to execute a process and\n\n# always return 0 even if the executed process failed. Use it like:\n\n#   cmake -DCOMMAND=\"ls;-l;/tmp\" -p IgnoreReturnCode.cmake\n\n#\n\n# Copyright (C) 2010 by Johannes Wienke <jwienke at techfak dot uni-bielefeld dot de>\n\n#\n\n# This file may be licensed under the terms of the\n\n# GNU Lesser General Public License Version 3 (the ``LGPL''),\n\n# or (at your option) any later version.\n\n#\n\n# Software distributed under the License is distributed\n\n# on an ``AS IS'' basis, WITHOUT WARRANTY OF ANY KIND, either\n\n# express or implied. See the LGPL for the specific language\n\n# governing rights and limitations.\n\n#\n\n# You should have received a copy of the LGPL along with this\n\n# program. If not, go to http://www.gnu.org/licenses/lgpl.html\n\n# or write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n\n#\n\n# The development of this software was supported by:\n\n#   CoR-Lab, Research Institute for Cognition and Robotics\n\n#     Bielefeld University\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/InstallDebugSymbols.cmake" : {
      "ObjectId" : "d69446a3e1e161adbc9a04a86ff67deed2a97398",
      "LastModified" : "2015-02-26T13:42:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - A utility function that install windows deubg symbols in case they exist.\n\n#\n\n# INSTALL_DEBUG_SYMBOLS(TARGETS target... [INSTALL_DIR dir])\n\n#\n\n# In case the project is built on windows in the correct configuration that\n\n# prepares debug symbols, these symbols are installed by calling this function.\n\n# Debug symbols are installed in the form of PDB files.\n\n#\n\n# Inputs:\n\n#   TARGETS: the names of the CMake targets for which debug symbols should be\n\n#            installed\n\n#   INSTALL_DIR: directory to install the symbol files to. Relative paths are\n\n#                interpreted relative to CMAKE_INSTALL_PREFIX. Defaults to bin.\n\n#\n\n# Targets need to be defined before calling this function.\n\n#\n\n# Copyright (C) 2014 by Johannes Wienke <jwienke at techfak dot uni-bielefeld dot de>\n\n#\n\n# This file may be licensed under the terms of the\n\n# GNU Lesser General Public License Version 3 (the ``LGPL''),\n\n# or (at your option) any later version.\n\n#\n\n# Software distributed under the License is distributed\n\n# on an ``AS IS'' basis, WITHOUT WARRANTY OF ANY KIND, either\n\n# express or implied. See the LGPL for the specific language\n\n# governing rights and limitations.\n\n#\n\n# You should have received a copy of the LGPL along with this\n\n# program. If not, go to http://www.gnu.org/licenses/lgpl.html\n\n# or write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n\n#\n\n# The development of this software was supported by:\n\n#   CoR-Lab, Research Institute for Cognition and Robotics\n\n#     Bielefeld University\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/InstallFilesRecursive.cmake" : {
      "ObjectId" : "b9cdcb8a36f536f9c99d5499b27dc90318225798",
      "LastModified" : "2015-02-26T13:42:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Install files recursively using their header structure in the source tree\n\n# This function install files using their header structure in the source tree.\n\n# This is e.g. usefull to install header files with their structure. Automatic\n\n# support for not mixing up the path logic is provided for generated files\n\n# if they are located in CMAKE_CURRENT_BINARY dir. Otherwise\n\n# CMAKE_CURRENT_SOURCE_DIR is assumed as the absolute location for the files to\n\n# install.\n\n#\n\n# INSTALL_FILES_RECURSIVE(DESTINATION FILE_LIST)\n\n#\n\n#     DESTINATION: destination folder under which the structure of the files to\n\n#                  install is mirrored. INSTALL is used, hence relative\n\n#                  locations will be relative to CMAKE_INSTALL_PREFIX.\n\n#     FILE_LIST: list of files to install\n\n#\n\n# Additional arguments given to the function will be passed directly to the\n\n# INSTALL command with the FILE syntax after the DESTINATION argument.\n\n#\n\n# Exmaple:\n\n# SET(FILES \"rsc/foo.h\"\n\n#           \"rsc/test/bla.h\"\n\n#           \"${CMAKE_CURRENT_BINARY_DIR}/rsc/narf/damn/xxx.h\")\n\n# INSTALL_FILES_RECURSIVE(include FILES)\n\n# will install:\n\n#   ${CMAKE_INSTALL_PREFIX}/include/rsc/foo.h\n\n#   ${CMAKE_INSTALL_PREFIX}/include/rsc/test/bla.h\n\n#   ${CMAKE_INSTALL_PREFIX}/include/rsc/narf/damn/xxx.h\n\n#\n\n# Copyright (C) 2010 by Johannes Wienke <jwienke at techfak dot uni-bielefeld dot de>\n\n#\n\n# This file may be licensed under the terms of the\n\n# GNU Lesser General Public License Version 3 (the ``LGPL''),\n\n# or (at your option) any later version.\n\n#\n\n# Software distributed under the License is distributed\n\n# on an ``AS IS'' basis, WITHOUT WARRANTY OF ANY KIND, either\n\n# express or implied. See the LGPL for the specific language\n\n# governing rights and limitations.\n\n#\n\n# You should have received a copy of the LGPL along with this\n\n# program. If not, go to http://www.gnu.org/licenses/lgpl.html\n\n# or write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n\n#\n\n# The development of this software was supported by:\n\n#   CoR-Lab, Research Institute for Cognition and Robotics\n\n#     Bielefeld University\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#MESSAGE(\"Processing file ${FILE}\")\n",
        "Line" : 53,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "#MESSAGE(\"ABSOLUTE_FILE: ${ABSOLUTE_FILE}\")\n",
        "Line" : 55,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# first, find out if this file is relative to a soruce or binary dir\n",
        "Line" : 57,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "#MESSAGE(\"REL_TO_SOURCE: ${FILE_REL_TO_SOURCE}\")\n\n#MESSAGE(\"REL_TO_BINARY: ${FILE_REL_TO_BINARY}\")\n",
        "Line" : 60,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# chose the relative path to start from\n",
        "Line" : 65,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "#MESSAGE(\"BASE_PATH: ${BASE_PATH}\")\n",
        "Line" : 70,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# extract destination subdirectory\n",
        "Line" : 72,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "#MESSAGE(\"REL_PATH: ${REL_PATH}\")\n",
        "Line" : 74,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 9
    },
    "cmake/Modules/PadString.cmake" : {
      "ObjectId" : "c216115efe83f6578b9215946041886b6821deab",
      "LastModified" : "2015-02-26T13:42:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Pads a string on the left side to reach a specified length\n\n# This function pads a string on the left side with a specified character to\n\n# reach the specified length. If the string length is already long enough or\n\n# longer, the string will not be modified.\n\n#\n\n# PAD_STRING(OUT_VARIABLE DESIRED_LENGTH FILL_CHAR VALUE)\n\n#\n\n#     OUT_VARIABLE: name of the resulting variable to create\n\n#     DESIRED_LENGTH: desired length of the generated string\n\n#     FILL_CHAR: character to use for padding\n\n#     VALUE: string to pad\n\n#\n\n# Copyright (C) 2011 by Johannes Wienke <jwienke at techfak dot uni-bielefeld dot de>\n\n#\n\n# This file may be licensed under the terms of the\n\n# GNU Lesser General Public License Version 3 (the ``LGPL''),\n\n# or (at your option) any later version.\n\n#\n\n# Software distributed under the License is distributed\n\n# on an ``AS IS'' basis, WITHOUT WARRANTY OF ANY KIND, either\n\n# express or implied. See the LGPL for the specific language\n\n# governing rights and limitations.\n\n#\n\n# You should have received a copy of the LGPL along with this\n\n# program. If not, go to http://www.gnu.org/licenses/lgpl.html\n\n# or write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n\n#\n\n# The development of this software was supported by:\n\n#   CoR-Lab, Research Institute for Cognition and Robotics\n\n#     Bielefeld University\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/ParseArguments.cmake" : {
      "ObjectId" : "e13f671a73c1aa4d686e79cafa3762a9219eadbd",
      "LastModified" : "2015-02-26T13:42:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Parse arguments passed to a function into several lists separated by\n\n# upper-case identifiers and options that do not have an associated list e.g.:\n\n#\n\n# SET(arguments\n\n#   hello OPTION3 world\n\n#   LIST3 foo bar\n\n#   OPTION2\n\n#   LIST1 fuz baz\n\n#   )\n\n# PARSE_ARGUMENTS(ARG \"LIST1;LIST2;LIST3\" \"OPTION1;OPTION2;OPTION3\" ${arguments})\n\n#\n\n# results in 7 distinct variables:\n\n#  * ARG_DEFAULT_ARGS: hello;world\n\n#  * ARG_LIST1: fuz;baz\n\n#  * ARG_LIST2:\n\n#  * ARG_LIST3: foo;bar\n\n#  * ARG_OPTION1: FALSE\n\n#  * ARG_OPTION2: TRUE\n\n#  * ARG_OPTION3: TRUE\n\n#\n\n# taken from http://www.cmake.org/Wiki/CMakeMacroParseArguments \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/ProvideFlexibleCPack.cmake" : {
      "ObjectId" : "509f1465329497b15b81ef06ef448c464bcc5ba9",
      "LastModified" : "2015-02-26T13:42:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - provides a cpack target with a default to TGZ generator and overridable\n\n#   defaults which can be specified in external files. \n\n#\n\n# INCLUDE this file somewhere at the end of your main CMakeLists.txt. Afterwards\n\n# a package target will be available over CPack and handling is\n\n# available so that different CPack settings can be specified in additional\n\n# files which can be passed in over the CPACK_CONFIG_FILE variable. These files\n\n# should contain definitions of CPACK_* variables.\n\n#\n\n# Copyright (C) 2011 by Johannes Wienke <jwienke at techfak dot uni-bielefeld dot de>\n\n#\n\n# This file may be licensed under the terms of the\n\n# GNU Lesser General Public License Version 3 (the ``LGPL''),\n\n# or (at your option) any later version.\n\n#\n\n# Software distributed under the License is distributed\n\n# on an ``AS IS'' basis, WITHOUT WARRANTY OF ANY KIND, either\n\n# express or implied. See the LGPL for the specific language\n\n# governing rights and limitations.\n\n#\n\n# You should have received a copy of the LGPL along with this\n\n# program. If not, go to http://www.gnu.org/licenses/lgpl.html\n\n# or write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n\n#\n\n# The development of this software was supported by:\n\n#   CoR-Lab, Research Institute for Cognition and Robotics\n\n#     Bielefeld University\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# allow to override packaging system\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Modules/ProvideGoogleMock.cmake" : {
      "ObjectId" : "864a2135b54b6941e0f8fd097d0fd3c951a32427",
      "LastModified" : "2015-02-26T13:42:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Downloads Google Mock (including Google Test) and installs a target that\n\n#   builds a static library from the sources for use in the project.\n\n#\n\n# Will define:\n\n# GMOCK_AVAILABLE - TRUE if Google Mock could be installed and the target is\n\n#                   available. Other variables only have meening if this is TRUE\n\n# GMOCK_INCLUDE_DIRS - Include directories to use the provided gmock installation\n\n# GMOCK_LIBRARIES - Libraries to link tests against\n\n# GMOCK_SOURCES - Internal, sources used for the target\n\n# GMOCK_CFLAGS - compile flags to use when using gmock\n\n#\n\n# Uses:\n\n# GMOCK_SOURCE - Source URL to download the archive, default exists for 1.7.0.\n\n#                This can also be a file:// URL.\n\n#\n\n# In cases the source URL is changed in the cache, a new download will be\n\n# done.\n\n#\n\n# Copyright (C) 2012 by Johannes Wienke <jwienke at techfak dot uni-bielefeld dot de>\n\n#\n\n# This file may be licensed under the terms of the\n\n# GNU Lesser General Public License Version 3 (the ``LGPL''),\n\n# or (at your option) any later version.\n\n#\n\n# Software distributed under the License is distributed\n\n# on an ``AS IS'' basis, WITHOUT WARRANTY OF ANY KIND, either\n\n# express or implied. See the LGPL for the specific language\n\n# governing rights and limitations.\n\n#\n\n# You should have received a copy of the LGPL along with this\n\n# program. If not, go to http://www.gnu.org/licenses/lgpl.html\n\n# or write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n\n#\n\n# The development of this software was supported by:\n\n#   CoR-Lab, Research Institute for Cognition and Robotics\n\n#     Bielefeld University\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO allow folder location of google mock in addition to the zip archive\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# check whether the download URL has changed. In this case we need to do a new\n\n# download\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# find unzip for extracting\n\n# TODO windows?\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# download fresh archive\n",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#MESSAGE(STATUS \"Google Mock download finished with status: ${GMOCK_DOWNLOAD_STATUS}\")\n",
        "Line" : 66,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# find out the name of the top-level folder in the archive and of source files\n",
        "Line" : 75,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# provide usefull information\n",
        "Line" : 102,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# store the download URL for later comparison\n",
        "Line" : 121,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# declare the target\n",
        "Line" : 130,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 10
    },
    "cmake/Modules/SubversionIsWc.cmake" : {
      "ObjectId" : "49424a93f47a2f9dda6c9836bfe8edbeb3f7648b",
      "LastModified" : "2015-02-26T13:42:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Checks whether a folder is a subversion wokring copy\n\n# The existing subversion wrappers in cmake do not provide a way to check\n\n# whether a folder really is a working copy of subversion. This module adds\n\n# a function to check this.\n\n#\n\n# Subversion_IS_WC(FOLDER RESULT_VAR)\n\n#   Checks if FOLDER is a SVN working copy and sets the RESULT_VAR to a bool\n\n#   value.\n\n#\n\n# Copyright (C) 2011 by Johannes Wienke <jwienke at techfak dot uni-bielefeld dot de>\n\n#\n\n# This file may be licensed under the terms of the\n\n# GNU Lesser General Public License Version 3 (the ``LGPL''),\n\n# or (at your option) any later version.\n\n#\n\n# Software distributed under the License is distributed\n\n# on an ``AS IS'' basis, WITHOUT WARRANTY OF ANY KIND, either\n\n# express or implied. See the LGPL for the specific language\n\n# governing rights and limitations.\n\n#\n\n# You should have received a copy of the LGPL along with this\n\n# program. If not, go to http://www.gnu.org/licenses/lgpl.html\n\n# or write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n\n#\n\n# The development of this software was supported by:\n\n#   CoR-Lab, Research Institute for Cognition and Robotics\n\n#     Bielefeld University\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# SVN info does not like .. as paths, so be sure that we use a full path\n",
        "Line" : 36,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "message/CMakeLists.txt" : {
      "ObjectId" : "87fa4e39b90b72794ae14514cd9fa5c7c9450839",
      "LastModified" : "2015-02-26T13:42:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Variables needed to propagate through modules\n\n# If more than one layer of cmake use CACHE INTERNAL ...\n\n#set (PROTO_SRCS_VAR ${PROTO_SRCS} CACHE INTERNAL \"Sources variable\")\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 54
  },
  "ElapsedTime" : 1531
}