{
  "Repository" : "10203699",
  "Revision" : "HEAD",
  "ObjectId" : "16579129e93553b6b059304817736b1cebd5b9ce",
  "CommitTime" : "2015-05-03T10:00:36Z",
  "Files" : {
    "ladicky-2009/CMakeLists.txt" : {
      "ObjectId" : "5ecdf62b31c374434e75e6a003fe15d0833f4087",
      "LastModified" : "2015-03-28T08:08:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\r\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\r\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\r\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# \r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "mrf-with-perf-pred/CMakeLists.txt" : {
      "ObjectId" : "2ad4d2289b60b75f485e211973803d34b28b6c48",
      "LastModified" : "2015-04-13T04:55:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\r\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\r\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\r\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\r\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# \r\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "overlap-exp/CMakeLists.txt" : {
      "ObjectId" : "2d16dc812fd6222636a10b98775c5bcb2770a539",
      "LastModified" : "2015-03-28T08:08:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\r\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\r\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\r\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# \r\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "philipp-unary-mrf/CMakeLists.txt" : {
      "ObjectId" : "012732c089ae00b5a8b6b5e24a36e1d4afa0894d",
      "LastModified" : "2015-03-28T08:08:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# TODO why this does not work? and raise a warning!\n\n#link_directories(${OPENGM_DIR}/build/src/external)\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# \n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "philipp-unary/cc/CMakeLists.txt" : {
      "ObjectId" : "b640043ae3cc2a4c77fa5a6b16487d2854dbbea5",
      "LastModified" : "2015-03-28T08:08:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "philipp-unary/cc/cmake/FindEigen3.cmake" : {
      "ObjectId" : "9c546a05d859b18c49554d7ee7221cc486b7760e",
      "LastModified" : "2015-03-28T08:08:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Eigen3 lib\n\n#\n\n# This module supports requiring a minimum version, e.g. you can do\n\n#   find_package(Eigen3 3.1.2)\n\n# to require version 3.1.2 or newer of Eigen3.\n\n#\n\n# Once done this will define\n\n#\n\n#  EIGEN3_FOUND - system has eigen lib with correct version\n\n#  EIGEN3_INCLUDE_DIR - the eigen include directory\n\n#  EIGEN3_VERSION - eigen version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>\n\n# Copyright (c) 2009 Benoit Jacob <jacob.benoit.1@gmail.com>\n\n# Redistribution and use is allowed according to the terms of the 2-clause BSD license.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "philipp-unary/cc/cmake/FindTBB.cmake" : {
      "ObjectId" : "d7b3ff703ad5b3750ce649fe13d93dc1fa99f012",
      "LastModified" : "2015-03-28T08:08:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This module defines\n\n# TBB_INCLUDE_DIRS, where to find task_scheduler_init.h, etc.\n\n# TBB_LIBRARIES, the libraries to link against to use TBB.\n\n# TBB_FOUND, If false, don't try to use TBB.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-- Look for include directory and set ${TBB_INCLUDE_DIR}\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "philipp-unary/cc/external/CMakeLists.txt" : {
      "ObjectId" : "9bbb485c96e4cdcef1b0ca0ae0f5f833b79af291",
      "LastModified" : "2015-03-28T08:08:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# fPIC for our swig shared library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "philipp-unary/cc/external/ann/CMakeLists.txt" : {
      "ObjectId" : "dcd240fcf84de07743937bda7ab8a3071d309197",
      "LastModified" : "2015-03-28T08:08:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "philipp-unary/cc/src/CMakeLists.txt" : {
      "ObjectId" : "934f3c849b5f8bce1dfe6b7179af82fc2810f526",
      "LastModified" : "2015-03-28T08:08:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find and add TBB\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find and add Eigen\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# fPIC for our swig shared library\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add the executables\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add the subdirectories\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "philipp-unary/cc/src/algorithm/CMakeLists.txt" : {
      "ObjectId" : "bc6cec9a47995f38345ca5bcc58ae0ae231fb71d",
      "LastModified" : "2015-03-28T08:08:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "philipp-unary/cc/src/classifier/CMakeLists.txt" : {
      "ObjectId" : "2bdad18bbadc47feaace17a145f24ef00e6ca124",
      "LastModified" : "2015-03-28T08:08:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "philipp-unary/cc/src/feature/CMakeLists.txt" : {
      "ObjectId" : "3d8cc0808d7aba362d18be1ec6ca2f99cc422db0",
      "LastModified" : "2015-03-28T08:08:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "philipp-unary/cc/src/util/CMakeLists.txt" : {
      "ObjectId" : "f0a56160fbb2b035b5f6437d464f46e957392831",
      "LastModified" : "2015-03-28T08:08:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "segment-sorter/CMakeLists.txt" : {
      "ObjectId" : "bc3d9d5794f4e0d430752405d2a40ea44a722e09",
      "LastModified" : "2015-03-28T08:08:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\r\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\r\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\r\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\r\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# \r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "segmenter/CMakeLists.txt" : {
      "ObjectId" : "44b57416bc9ac10157a2e1a1447c60395b63e049",
      "LastModified" : "2015-03-28T08:08:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "shotton-2009/CMakeLists.txt" : {
      "ObjectId" : "d2876db9fa219b0d47100c40b980972a82ad43da",
      "LastModified" : "2015-03-28T08:08:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Activate C++11\n",
        "Line" : 3,
        "CharPositionInLine" : 52
      },
      "1" : {
        "Text" : "#\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# \n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "svm-struct-ss/CMakeLists.txt" : {
      "ObjectId" : "81995238ba7b1c7487ee4bae6b1a4a8eef290dd2",
      "LastModified" : "2015-03-28T08:08:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# make svm light lib\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# make svm struct lib\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# make ssvm-ss executables\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#add_executable(svm_struct_ss_predict \n\n#  src/svm-struct-ss/predict.cc\n\n#)\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#target_link_libraries(svm_struct_ss_predict \n\n#svm_struct_ss_api\n\n#)\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "svm-struct-ss/src/svm-struct-core/Makefile" : {
      "ObjectId" : "feea711f5049634ada798edb1deae0def4b40ddd",
      "LastModified" : "2015-03-28T08:08:16Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for empty SVM-struct API, 03.10.06\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Call 'make' using the following line to make CYGWIN produce stand-alone Windows executables\n\n#\t\tmake 'SFLAGS=-mno-cygwin'\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Use the following to compile under unix or cygwin\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#CFLAGS =  $(SFLAGS) -pg -Wall\n\n#LDFLAGS = $(SFLAGS) -pg -lm -Wall \n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#-----------------------#\n\n#----   SVM-light   ----#\n\n#-----------------------#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#----------------------#\n\n#----  STRUCT SVM  ----#\n\n#----------------------#\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#-------------------------#\n\n#----  SVM empty API  ----#\n\n#-------------------------#\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "svm-struct-ss/src/svm-struct-core/svm_light/Makefile" : {
      "ObjectId" : "63a6286245854c13d93ece39872e45732f699002",
      "LastModified" : "2015-03-28T08:08:16Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\r\n\n# makefile for svm_light \r\n\n#\r\n\n# Thorsten Joachims, 2002\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Use the following to compile under unix or cygwin\r\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Uncomment the following line to make CYGWIN produce stand-alone Windows executables\r\n\n#SFLAGS= -mno-cygwin\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# release C-Compiler flags\r\n\n# release linker flags\r\n",
        "Line" : 14,
        "CharPositionInLine" : 43
      },
      "4" : {
        "Text" : "#CFLAGS= $(SFLAGS) -pg -Wall -pedantic      # debugging C-Compiler flags\r\n\n#LFLAGS= $(SFLAGS) -pg                      # debugging linker flags\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# used libraries\r\n",
        "Line" : 18,
        "CharPositionInLine" : 43
      },
      "6" : {
        "Text" : "# Create executables svm_learn and svm_classify\r\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#svm_learn_loqo: svm_learn_main.o svm_learn.o svm_common.o svm_loqo.o loqo\r\n\n#\t$(LD) $(LFLAGS) svm_learn_main.o svm_learn.o svm_common.o svm_loqo.o pr_loqo/pr_loqo.o -o svm_learn $(LIBS)\r\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Create library libsvmlight.so, so that external code can get access to the\r\n\n# learning and classification functions of svm-light by linking this library.\r\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#svm_learn_loqo_noexe: svm_learn_main.o svm_learn.o svm_common.o svm_loqo.o loqo\r\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#libsvmlight_loqo: svm_learn_main.o svm_learn.o svm_common.o svm_loqo.o \r\n\n#\t$(LD) -shared svm_learn.o svm_common.o svm_loqo.o  pr_loqo/pr_loqo.o -o libsvmlight.so\r\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Compile components\r\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#svm_loqo.o: svm_loqo.c \r\n\n#\t$(CC) -c $(CFLAGS) svm_loqo.c -o svm_loqo.o \r\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#loqo: pr_loqo/pr_loqo.o\r\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#pr_loqo/pr_loqo.o: pr_loqo/pr_loqo.c\r\n\n#\t$(CC) -c $(CFLAGS) pr_loqo/pr_loqo.c -o pr_loqo/pr_loqo.o\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "svm-struct-ss/src/svm-struct-core/svm_struct/Makefile" : {
      "ObjectId" : "b4359131f5acafd80a02e964921272441d17cb71",
      "LastModified" : "2015-03-28T08:08:16Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for SVM-struct, 03.10.06\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Use the following to compile under unix or cygwin\r\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Call 'make' using the following line to make CYGWIN produce stand-alone Windows executables\r\n\n#\t\tmake 'SFLAGS=-mno-cygwin'\r\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#CFLAGS =   $(SFLAGS) -pg -Wall\r\n\n#LDFLAGS =  $(SFLAGS) -pg -Wall\r\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#----------------------#\r\n\n#----  STRUCT SVM  ----#\r\n\n#----------------------#\r\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "via-google/CMakeLists.txt" : {
      "ObjectId" : "23188e2ff3300e413cc5458758aad4bc2e3ad215",
      "LastModified" : "2015-03-28T08:08:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Activate C++11\n",
        "Line" : 3,
        "CharPositionInLine" : 52
      },
      "1" : {
        "Text" : "#\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#SaliencyFilters library\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "via-google/cmake/FindEigen3.cmake" : {
      "ObjectId" : "9c546a05d859b18c49554d7ee7221cc486b7760e",
      "LastModified" : "2015-03-28T08:08:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Eigen3 lib\n\n#\n\n# This module supports requiring a minimum version, e.g. you can do\n\n#   find_package(Eigen3 3.1.2)\n\n# to require version 3.1.2 or newer of Eigen3.\n\n#\n\n# Once done this will define\n\n#\n\n#  EIGEN3_FOUND - system has eigen lib with correct version\n\n#  EIGEN3_INCLUDE_DIR - the eigen include directory\n\n#  EIGEN3_VERSION - eigen version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>\n\n# Copyright (c) 2009 Benoit Jacob <jacob.benoit.1@gmail.com>\n\n# Redistribution and use is allowed according to the terms of the 2-clause BSD license.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "via-google/cmake/FindTBB.cmake" : {
      "ObjectId" : "d7b3ff703ad5b3750ce649fe13d93dc1fa99f012",
      "LastModified" : "2015-03-28T08:08:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This module defines\n\n# TBB_INCLUDE_DIRS, where to find task_scheduler_init.h, etc.\n\n# TBB_LIBRARIES, the libraries to link against to use TBB.\n\n# TBB_FOUND, If false, don't try to use TBB.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-- Look for include directory and set ${TBB_INCLUDE_DIR}\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "via-google/src/CMakeLists.txt" : {
      "ObjectId" : "ca131616206abffdd5c11e1535f6be0f9fbbd08c",
      "LastModified" : "2015-03-28T08:08:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "via-google/src/executables/list-and-extract/Makefile" : {
      "ObjectId" : "2c395e1087a4c669deddd1642e612c07450d2a36",
      "LastModified" : "2015-03-28T08:08:16Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "via-google/src/executables/list-and-extract/external/libsvm-3.12/Makefile" : {
      "ObjectId" : "6b7b1234904aa37e4c26347b5055446146a441d9",
      "LastModified" : "2015-03-28T08:08:16Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "via-google/src/executables/list-and-extract/external/libsvm-3.12/matlab/Makefile" : {
      "ObjectId" : "64f6dc6aa6f1ea15722174a3f17f682646bbcbcd",
      "LastModified" : "2015-03-28T08:08:16Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This Makefile is used under Linux\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# for Mac\n\n# MATLABDIR ?= /opt/local/matlab\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#CXX = g++-4.1\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# comment the following line if you use MATLAB on 32-bit computer\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "via-google/src/fgannotator/CMakeLists.txt" : {
      "ObjectId" : "3e2eed393099efb1a3efd0d8f7d896edafdddfb8",
      "LastModified" : "2015-03-28T08:08:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "via-google/src/multiannotator/CMakeLists.txt" : {
      "ObjectId" : "32f37c6488a825169db4b0728a0b6ae96d5ed198",
      "LastModified" : "2015-03-28T08:08:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "via-google/src/svm-struct-ss-2/Makefile" : {
      "ObjectId" : "feea711f5049634ada798edb1deae0def4b40ddd",
      "LastModified" : "2015-03-28T08:08:16Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for empty SVM-struct API, 03.10.06\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Call 'make' using the following line to make CYGWIN produce stand-alone Windows executables\n\n#\t\tmake 'SFLAGS=-mno-cygwin'\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Use the following to compile under unix or cygwin\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#CFLAGS =  $(SFLAGS) -pg -Wall\n\n#LDFLAGS = $(SFLAGS) -pg -lm -Wall \n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#-----------------------#\n\n#----   SVM-light   ----#\n\n#-----------------------#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#----------------------#\n\n#----  STRUCT SVM  ----#\n\n#----------------------#\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#-------------------------#\n\n#----  SVM empty API  ----#\n\n#-------------------------#\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "via-google/src/svm-struct-ss-2/svm_light/Makefile" : {
      "ObjectId" : "63a6286245854c13d93ece39872e45732f699002",
      "LastModified" : "2015-03-28T08:08:16Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\r\n\n# makefile for svm_light \r\n\n#\r\n\n# Thorsten Joachims, 2002\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Use the following to compile under unix or cygwin\r\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Uncomment the following line to make CYGWIN produce stand-alone Windows executables\r\n\n#SFLAGS= -mno-cygwin\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# release C-Compiler flags\r\n\n# release linker flags\r\n",
        "Line" : 14,
        "CharPositionInLine" : 43
      },
      "4" : {
        "Text" : "#CFLAGS= $(SFLAGS) -pg -Wall -pedantic      # debugging C-Compiler flags\r\n\n#LFLAGS= $(SFLAGS) -pg                      # debugging linker flags\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# used libraries\r\n",
        "Line" : 18,
        "CharPositionInLine" : 43
      },
      "6" : {
        "Text" : "# Create executables svm_learn and svm_classify\r\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#svm_learn_loqo: svm_learn_main.o svm_learn.o svm_common.o svm_loqo.o loqo\r\n\n#\t$(LD) $(LFLAGS) svm_learn_main.o svm_learn.o svm_common.o svm_loqo.o pr_loqo/pr_loqo.o -o svm_learn $(LIBS)\r\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Create library libsvmlight.so, so that external code can get access to the\r\n\n# learning and classification functions of svm-light by linking this library.\r\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#svm_learn_loqo_noexe: svm_learn_main.o svm_learn.o svm_common.o svm_loqo.o loqo\r\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#libsvmlight_loqo: svm_learn_main.o svm_learn.o svm_common.o svm_loqo.o \r\n\n#\t$(LD) -shared svm_learn.o svm_common.o svm_loqo.o  pr_loqo/pr_loqo.o -o libsvmlight.so\r\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Compile components\r\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#svm_loqo.o: svm_loqo.c \r\n\n#\t$(CC) -c $(CFLAGS) svm_loqo.c -o svm_loqo.o \r\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#loqo: pr_loqo/pr_loqo.o\r\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#pr_loqo/pr_loqo.o: pr_loqo/pr_loqo.c\r\n\n#\t$(CC) -c $(CFLAGS) pr_loqo/pr_loqo.c -o pr_loqo/pr_loqo.o\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "via-google/src/svm-struct-ss-2/svm_struct/Makefile" : {
      "ObjectId" : "b4359131f5acafd80a02e964921272441d17cb71",
      "LastModified" : "2015-03-28T08:08:16Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for SVM-struct, 03.10.06\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Use the following to compile under unix or cygwin\r\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Call 'make' using the following line to make CYGWIN produce stand-alone Windows executables\r\n\n#\t\tmake 'SFLAGS=-mno-cygwin'\r\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#CFLAGS =   $(SFLAGS) -pg -Wall\r\n\n#LDFLAGS =  $(SFLAGS) -pg -Wall\r\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#----------------------#\r\n\n#----  STRUCT SVM  ----#\r\n\n#----------------------#\r\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "via-google/src/svm-struct-ss/CMakeLists.txt" : {
      "ObjectId" : "de5f9c0ef48d3f1e6fae56c0be27e8d257152f74",
      "LastModified" : "2015-03-28T08:08:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(CMAKE_CXX_COMPILER g++)\n\n#set_source_files_properties(filename.cpp PROPERTIES LANGUAGE CXX)\n\n#set( CMAK_C_COMPILER_INIT g++)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#SET(CMAKE_C_COMPILER mpicc)\n\n#SET(CMAKE_CXX_COMPILER mpicxx)\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "via-google/src/svm-struct-ss/Makefile" : {
      "ObjectId" : "fbce3cbd2b34683b6bf07a3a4ff1eb4f11174e3a",
      "LastModified" : "2015-03-28T08:08:16Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for empty SVM-struct API, 03.10.06\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Call 'make' using the following line to make CYGWIN produce stand-alone Windows executables\n\n#\t\tmake 'SFLAGS=-mno-cygwin'\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Use the following to compile under unix or cygwin\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#CFLAGS =  $(SFLAGS) -pg -Wall\n\n#LDFLAGS = $(SFLAGS) -pg -lm -Wall \n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#-----------------------#\n\n#----   SVM-light   ----#\n\n#-----------------------#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#----------------------#\n\n#----  STRUCT SVM  ----#\n\n#----------------------#\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#-------------------------#\n\n#----  SVM empty API  ----#\n\n#-------------------------#\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "via-google/src/svm-struct-ss/svm_light/CMakeLists.txt" : {
      "ObjectId" : "88b1515c92bb7bdd88fa1c9ded1580a00a2fd6e7",
      "LastModified" : "2015-03-28T08:08:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "via-google/src/svm-struct-ss/svm_light/Makefile" : {
      "ObjectId" : "63a6286245854c13d93ece39872e45732f699002",
      "LastModified" : "2015-03-28T08:08:16Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\r\n\n# makefile for svm_light \r\n\n#\r\n\n# Thorsten Joachims, 2002\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Use the following to compile under unix or cygwin\r\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Uncomment the following line to make CYGWIN produce stand-alone Windows executables\r\n\n#SFLAGS= -mno-cygwin\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# release C-Compiler flags\r\n\n# release linker flags\r\n",
        "Line" : 14,
        "CharPositionInLine" : 43
      },
      "4" : {
        "Text" : "#CFLAGS= $(SFLAGS) -pg -Wall -pedantic      # debugging C-Compiler flags\r\n\n#LFLAGS= $(SFLAGS) -pg                      # debugging linker flags\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# used libraries\r\n",
        "Line" : 18,
        "CharPositionInLine" : 43
      },
      "6" : {
        "Text" : "# Create executables svm_learn and svm_classify\r\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#svm_learn_loqo: svm_learn_main.o svm_learn.o svm_common.o svm_loqo.o loqo\r\n\n#\t$(LD) $(LFLAGS) svm_learn_main.o svm_learn.o svm_common.o svm_loqo.o pr_loqo/pr_loqo.o -o svm_learn $(LIBS)\r\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Create library libsvmlight.so, so that external code can get access to the\r\n\n# learning and classification functions of svm-light by linking this library.\r\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#svm_learn_loqo_noexe: svm_learn_main.o svm_learn.o svm_common.o svm_loqo.o loqo\r\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#libsvmlight_loqo: svm_learn_main.o svm_learn.o svm_common.o svm_loqo.o \r\n\n#\t$(LD) -shared svm_learn.o svm_common.o svm_loqo.o  pr_loqo/pr_loqo.o -o libsvmlight.so\r\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Compile components\r\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#svm_loqo.o: svm_loqo.c \r\n\n#\t$(CC) -c $(CFLAGS) svm_loqo.c -o svm_loqo.o \r\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#loqo: pr_loqo/pr_loqo.o\r\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#pr_loqo/pr_loqo.o: pr_loqo/pr_loqo.c\r\n\n#\t$(CC) -c $(CFLAGS) pr_loqo/pr_loqo.c -o pr_loqo/pr_loqo.o\r\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "via-google/src/svm-struct-ss/svm_struct/CMakeLists.txt" : {
      "ObjectId" : "328ed3ed2978cfce8622d9b72fbef4897bd527a9",
      "LastModified" : "2015-03-28T08:08:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "via-google/src/svm-struct-ss/svm_struct/Makefile" : {
      "ObjectId" : "b4359131f5acafd80a02e964921272441d17cb71",
      "LastModified" : "2015-03-28T08:08:16Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for SVM-struct, 03.10.06\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Use the following to compile under unix or cygwin\r\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Call 'make' using the following line to make CYGWIN produce stand-alone Windows executables\r\n\n#\t\tmake 'SFLAGS=-mno-cygwin'\r\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#CFLAGS =   $(SFLAGS) -pg -Wall\r\n\n#LDFLAGS =  $(SFLAGS) -pg -Wall\r\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#----------------------#\r\n\n#----  STRUCT SVM  ----#\r\n\n#----------------------#\r\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "via-google/src/textonboost/CMakeLists.txt" : {
      "ObjectId" : "f6ae02c0a07a885c5ad1e302f58442e5af2aaff2",
      "LastModified" : "2015-03-28T08:08:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#project(classification)\n\n#cmake_minimum_required(VERSION 2.6)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "via-google/src/textonboost/cmake/FindEigen3.cmake" : {
      "ObjectId" : "9c546a05d859b18c49554d7ee7221cc486b7760e",
      "LastModified" : "2015-03-28T08:08:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Eigen3 lib\n\n#\n\n# This module supports requiring a minimum version, e.g. you can do\n\n#   find_package(Eigen3 3.1.2)\n\n# to require version 3.1.2 or newer of Eigen3.\n\n#\n\n# Once done this will define\n\n#\n\n#  EIGEN3_FOUND - system has eigen lib with correct version\n\n#  EIGEN3_INCLUDE_DIR - the eigen include directory\n\n#  EIGEN3_VERSION - eigen version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>\n\n# Copyright (c) 2009 Benoit Jacob <jacob.benoit.1@gmail.com>\n\n# Redistribution and use is allowed according to the terms of the 2-clause BSD license.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "via-google/src/textonboost/cmake/FindTBB.cmake" : {
      "ObjectId" : "d7b3ff703ad5b3750ce649fe13d93dc1fa99f012",
      "LastModified" : "2015-03-28T08:08:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This module defines\n\n# TBB_INCLUDE_DIRS, where to find task_scheduler_init.h, etc.\n\n# TBB_LIBRARIES, the libraries to link against to use TBB.\n\n# TBB_FOUND, If false, don't try to use TBB.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-- Look for include directory and set ${TBB_INCLUDE_DIR}\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "via-google/src/textonboost/external/CMakeLists.txt" : {
      "ObjectId" : "9bbb485c96e4cdcef1b0ca0ae0f5f833b79af291",
      "LastModified" : "2015-03-28T08:08:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# fPIC for our swig shared library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "via-google/src/textonboost/external/ann/CMakeLists.txt" : {
      "ObjectId" : "dcd240fcf84de07743937bda7ab8a3071d309197",
      "LastModified" : "2015-03-28T08:08:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "via-google/src/textonboost/src/CMakeLists.txt" : {
      "ObjectId" : "5390fb17ed3950c17409a04cd945550088cc222e",
      "LastModified" : "2015-03-28T08:08:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find and add TBB\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find and add Eigen\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# fPIC for our swig shared library\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add the executables\n\n#add_executable( textonize textonize.cpp )\n\n#target_link_libraries( textonize textonutil feature )\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#add_executable( textonview textonview.cpp )\n\n#target_link_libraries( textonview textonutil feature )\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#add_executable( textonboost textonboost.cpp )\n\n#target_link_libraries( textonboost textonutil feature classifier )\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#add_executable( evaluate evaluate.cpp )\n\n#target_link_libraries( evaluate textonutil feature classifier )\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add the subdirectories\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "via-google/src/textonboost/src/algorithm/CMakeLists.txt" : {
      "ObjectId" : "bc6cec9a47995f38345ca5bcc58ae0ae231fb71d",
      "LastModified" : "2015-03-28T08:08:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "via-google/src/textonboost/src/classifier/CMakeLists.txt" : {
      "ObjectId" : "2bdad18bbadc47feaace17a145f24ef00e6ca124",
      "LastModified" : "2015-03-28T08:08:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "via-google/src/textonboost/src/feature/CMakeLists.txt" : {
      "ObjectId" : "3d8cc0808d7aba362d18be1ec6ca2f99cc422db0",
      "LastModified" : "2015-03-28T08:08:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "via-google/src/textonboost/src/util/CMakeLists.txt" : {
      "ObjectId" : "f0a56160fbb2b035b5f6437d464f46e957392831",
      "LastModified" : "2015-03-28T08:08:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 37,
    "MAKEFILE" : 12
  },
  "ElapsedTime" : 1242
}