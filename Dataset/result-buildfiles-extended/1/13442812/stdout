{
  "Repository" : "13442812",
  "Revision" : "HEAD",
  "ObjectId" : "6cb3baa8aaefafb7841a6679638d156f6dbd2e22",
  "CommitTime" : "2019-04-16T20:38:48Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "8a51e048abf62226b198934cca9a45bb00e6608a",
      "LastModified" : "2018-07-19T01:12:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# XXX Things to make better.\n\n#\n\n# Repeat for all other configurable headers/libraries - see below for a list\n\n# Move the shared-library code over to CMake's normal definition\n\n# Improve this CPack installer.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Local CMake Modules - keep this first\n\n###\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If you're using this as a subproject and want things installed, set VRPN_INSTALL TRUE.\n",
        "Line" : 24,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# silently search for optional deps as a subproject\n",
        "Line" : 28,
        "CharPositionInLine" : 32
      },
      "4" : {
        "Text" : "# don't build testing or create dashboard scripts if a subproject\n",
        "Line" : 29,
        "CharPositionInLine" : 26
      },
      "5" : {
        "Text" : "###\n\n# On Windows 7, it does not work to install in the default location,\n\n# which is the Program Files directory, because you have to not only have\n\n# file permission to write there but also \"run as administrator.\"  This\n\n# means that \"make install\" from a Visual Studio project fails.  To get\n\n# around that, we need to set CMAKE_INSTALL_PREFIX to something other\n\n# than the default.  However, it is a cache variable that has already been\n\n# set.  If we make a local variable, it uses this rather than the cache\n\n# variable and never tells the poor user what happened (the GUI location\n\n# looks standard but the files end up somewhere else).  If we make it a\n\n# non-forced cache variable, it already has a value so does not change.\n\n# If we make it a forced cache variable, it gets overwritten every time\n\n# and the user cannot change it on the GUI.  So we have a workaround here.\n\n# We make a cache variable that records whether we have ever forced the\n\n# install prefix.  If not, we force it.  If so, we don't force it again.\n\n# This has the effect of setting it the first time cmake is run, showing\n\n# the change in the GUI, and also letting the user change the value in\n\n# the GUI if they don't like what we did.  If I knew how to do this only\n\n# happen on Windows 7, I'd make the if(WIN32) more specific.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "###\n\n# Basic packaging options and versioning\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Compiler flags we got from Hans for Windows and from Sheldon Andrews\n\n# for other architectures.\n",
        "Line" : 98,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# MS-Windows Visual Studio, both 32 and 64 bits\n",
        "Line" : 101,
        "CharPositionInLine" : 10
      },
      "9" : {
        "Text" : "# This compiler flag needs newer than VS.NET 2003 (7.1)\n",
        "Line" : 103,
        "CharPositionInLine" : 32
      },
      "10" : {
        "Text" : "# Choose fast, possibly less accurate floating point\n\n# See http://msdn.microsoft.com/en-us/library/e7s85ffb(v=vs.80).aspx\n",
        "Line" : 104,
        "CharPositionInLine" : 3
      },
      "11" : {
        "Text" : "# Do not assume fixed base address (probably for DLL integration?)\n\n# http://msdn.microsoft.com/en-us/library/w368ysh2(v=vs.80).aspx\n",
        "Line" : 110,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# GCC compilers on 64-bit machines require -fPIC for shared libraries or libs\n\n# linked into shared libraries.\n",
        "Line" : 114,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Set up correct defines for Windows header compilation:\n\n# This theoretically sets the lower-bound on operating system compatibility\n\n# http://msdn.microsoft.com/en-us/library/windows/desktop/aa383745(v=vs.85).aspx\n\n# NT4\t0x0400\n\n# Win2k\t0x0500\n\n# WinXP\t0x0501\n\n# WS2003SP1/WinXPSP2 \t0x0502\n\n# Vista 0x0600\n\n# Win7  0x0601\n\n# Win8  0x0602\n\n# Win8.1 0x0603 (though some docs say 0x0602 with NTDDI_VERSION 0x06030000)\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Default to Windows 2000\n",
        "Line" : 138,
        "CharPositionInLine" : 25
      },
      "15" : {
        "Text" : "# VS2012: defaults to vista+, update 1 added XP support in additional toolset.\n",
        "Line" : 140,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# WinXP\n",
        "Line" : 142,
        "CharPositionInLine" : 27
      },
      "17" : {
        "Text" : "# Vista\n",
        "Line" : 144,
        "CharPositionInLine" : 27
      },
      "18" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Options that control what gets built and how.\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# We can build two configurations (passing defs to the compile lines) - which ones do we want?\n\n# Note that we can build both now, if desired!\n",
        "Line" : 154,
        "CharPositionInLine" : 1
      },
      "20" : {
        "Text" : "# Build various applications if we want them.\n",
        "Line" : 163,
        "CharPositionInLine" : 1
      },
      "21" : {
        "Text" : "# Development tools\n",
        "Line" : 167,
        "CharPositionInLine" : 1
      },
      "22" : {
        "Text" : "# VS 2012 Express and newer has folder support...\n",
        "Line" : 169,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# Set a default build type\n",
        "Line" : 182,
        "CharPositionInLine" : 1
      },
      "24" : {
        "Text" : "# Force use of our CMake-processed configuration header before the stock one.\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Include directory needed by all of the files\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Libraries we need to do our thing.\n\n#\n\n# CMake variables:\n\n#   SERVER_EXTRA_LIBS - libraries to link against when building the server lib\n\n#   EXTRA_LIBS - libraries to link against when building any VRPN lib\n\n#\n\n# Note that library linking is, by default, transitive:\n\n# Specify linking here (even though static libraries might not use it\n\n# directly - think of shared libs and your fellow developer) rather than\n\n# in the included apps.\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "###\n\n# Quatlib\n\n###\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "###\n\n# Threading (not on win32)\n\n###\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "###\n\n# Windows-specific (non-Cygwin) dependencies\n\n###\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Winsock - needed for endianness conversion\n",
        "Line" : 227,
        "CharPositionInLine" : 1
      },
      "31" : {
        "Text" : "# Windows multimedia - needed for joywin32\n",
        "Line" : 230,
        "CharPositionInLine" : 1
      },
      "32" : {
        "Text" : "###\n\n# Optional packages\n\n###\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "###\n\n# Submodules - bundled libraries/sources\n\n###\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "###\n\n# SWIG and Python Libs (for python wrappers)\n\n###\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Swig wants 2.x, I assume\n",
        "Line" : 258,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# Passing just the major version works with as desired multi-python-capable find module such\n\n# as in latest CMake (2.8.9)\n",
        "Line" : 302,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# If MSVC, and we don't have a debug lib, default to off, or the default (debug runtime) build is broken.\n",
        "Line" : 335,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "###\n\n# javac, jar, and javah (for java wrapper)\n\n###\n",
        "Line" : 357,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "###\n\n# MPI\n\n###\n",
        "Line" : 378,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# XXX Safe to enable by default if we find it?\n",
        "Line" : 382,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# XXX what else needs to be done here?\n",
        "Line" : 389,
        "CharPositionInLine" : 1
      },
      "42" : {
        "Text" : "###\n\n# Modbus library\n\n###\n",
        "Line" : 395,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# XXX what else needs to be done here?\n",
        "Line" : 405,
        "CharPositionInLine" : 1
      },
      "44" : {
        "Text" : "###\n\n# Libusb1\n\n###\n",
        "Line" : 410,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "###\n\n# HID and HIDAPI\n\n###\n",
        "Line" : 425,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Setting up the local HIDAPI was handled above, in the submodules directory\n",
        "Line" : 429,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# HID requires either local or system-installed HIDAPI\n\n# Both set HIDAPI_FOUND, HIDAPI_LIBRARIES, and HIDAPI_INCLUDE_DIRS\n\n# If the user chose VRPN_USE_LOCAL_HIDAPI, the HIDAPI_SOURCES\n\n# variable, as included in the source list below, will also be set.\n",
        "Line" : 434,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# Clear this variable if they don't want HID after all.\n",
        "Line" : 456,
        "CharPositionInLine" : 1
      },
      "49" : {
        "Text" : "###\n\n# Sensable \"OpenHaptics\" HDAPI/HLAPI\n\n###\n",
        "Line" : 465,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "###\n\n# Sensable GHOST\n\n###\n",
        "Line" : 477,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "###\n\n# Sensable PHANToM Support - Overall Option\n\n###\n",
        "Line" : 495,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# VRPN_USE_GHOST\n",
        "Line" : 508,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "###\n\n# libi2c-dev\n\n###\n",
        "Line" : 515,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "###\n\n# WiiUse\n\n###\n",
        "Line" : 528,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "###\n\n# JsonCpp\n\n##\n\n## Setting up the local JSONCPP was handled above, in the submodules directory\n",
        "Line" : 542,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "###\n\n# libnifalcon\n\n###\n",
        "Line" : 561,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "###\n\n# DirectInput and XInput\n\n###\n",
        "Line" : 575,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# Delay-load DirectInput DLL\n\n# TODO is this always the right name\n\n# TODO how to do this with MinGW? Can we? Do we need to?\n",
        "Line" : 594,
        "CharPositionInLine" : 3
      },
      "59" : {
        "Text" : "# XInput - enhanced API for XBOX 360 controllers and more.\n",
        "Line" : 602,
        "CharPositionInLine" : 1
      },
      "60" : {
        "Text" : "#TODO will this be a valid check here?\n",
        "Line" : 610,
        "CharPositionInLine" : 33
      },
      "61" : {
        "Text" : "# Get name of DLL to delay-load.\n",
        "Line" : 617,
        "CharPositionInLine" : 2
      },
      "62" : {
        "Text" : "# Delay-load XInput DLL\n\n# TODO how to do this with MinGW? Can we? Do we need to?\n",
        "Line" : 625,
        "CharPositionInLine" : 3
      },
      "63" : {
        "Text" : "# ATL is used for the vrpn_Tracker_zSight (which is based on DirectInput)\n\n# to provide a smart pointer, but ATL isn't always available.\n",
        "Line" : 632,
        "CharPositionInLine" : 1
      },
      "64" : {
        "Text" : "###\n\n# DirectShow\n\n###\n\n# Note that header removal makes this harder for VS10 and later - you need an earlier\n\n# version of MSVC also installed or an older Windows/Platform SDK with qedit.h in it.\n",
        "Line" : 639,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "###\n\n# GPM\n\n###\n",
        "Line" : 662,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "###\n\n# INTERSENSE\n\n###\n",
        "Line" : 677,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "###\n\n# THALMICLABSMYO\n\n###\n",
        "Line" : 691,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "###\n\n# NIDAQMX\n\n###\n",
        "Line" : 707,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "###\n\n# Arrington Research ViewPoint EyeTracker\n\n###\n",
        "Line" : 721,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# Needed for the config file, apparently - it was added to the non-CMake one.\n",
        "Line" : 734,
        "CharPositionInLine" : 1
      },
      "71" : {
        "Text" : "###\n\n# Adrienne timecode boards\n\n###\n",
        "Line" : 743,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "###\n\n# Linux kernel joystick interface\n\n###\n",
        "Line" : 762,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "###\n\n# /dev/input kernel joystick interface\n\n###\n",
        "Line" : 775,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "###\n\n# Perl, for vrpn_rpc_gen\n\n###\n",
        "Line" : 788,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# TODO - a bit of a compatibility hack\n\n# MiKTeX 2.9's perl is broken - missing libgcc-s-sjlj-1.dll -\n\n# and can't seem to work around it without popping up dialogs\n\n# which is no fun for automated builds.\n",
        "Line" : 792,
        "CharPositionInLine" : 1
      },
      "76" : {
        "Text" : "###\n\n# Polhemus PDI library\n\n###\n\n# TODO Generalize this to use a FindPDI.cmake - someone with access\n\n# to this library must do it.\n\n# Make this also work with debug (use PDID)\n",
        "Line" : 806,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "###\n\n# PhaseSpace API\n\n###\n\n# TODO Actually do a proper search for the PhaseSpace API headers and libraries\n\n# and not use link_directories.\n",
        "Line" : 825,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "###\n\n# Hillcrest Labs' Freespace\n\n###\n",
        "Line" : 845,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "###\n\n# MotionNode tracker support. Loads shared library dynamically if available\n\n###\n",
        "Line" : 859,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "###\n\n# Trivisio ColibriAPI\n\n###\n",
        "Line" : 869,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "###\n\n# XXX Other libraries needing detection and handling (TODO)\n\n###\n\n# National Instruments Nidaq traditional\n\n# US Digital SEI/A2\n\n# microscribe3D library\n\n#\n\n# All include paths should be moved out of at least vrpn_Configure.h.cmake_in\n\n# as well as all #pragma comment (lib, \"\" ) lines, since cmake replaces\n\n# them more flexibly (include_directories and target_link_libraries)\n",
        "Line" : 882,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "# Configuration options controlling what gets included in the build.\n\n# These are the default options for libraries we can't yet detect -\n\n# if a library can be detected above it will be pre-set to an appropriate\n\n# value by default.\n",
        "Line" : 894,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# Only intended for Windows, known not needed on Cygwin,\n\n# but potentially hazardous on other Windows build environments.\n",
        "Line" : 932,
        "CharPositionInLine" : 1
      },
      "84" : {
        "Text" : "# This will only work on compilers that support C++-11.\n\n# We could check for this and turn it on by default.\n",
        "Line" : 939,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# On MSVC 2015 and newer, std::chrono provides the best time implementation.\n",
        "Line" : 943,
        "CharPositionInLine" : 1
      },
      "86" : {
        "Text" : "# shadowing virtual functions is pretty much unavoidable with the\n\n# multiple inheritance design and methods like \"report_changes\"\n",
        "Line" : 957,
        "CharPositionInLine" : 2
      },
      "87" : {
        "Text" : "# We can define VRPN_CLIENT_ONLY in the header in this case!\n",
        "Line" : 968,
        "CharPositionInLine" : 1
      },
      "88" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# configure a header file to pass some of the CMake settings\n\n# to the source code\n",
        "Line" : 972,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# XXX Is this still needed?\n",
        "Line" : 985,
        "CharPositionInLine" : 1
      },
      "90" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Build the library itself and declare what bits need to be installed\n",
        "Line" : 991,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Set some internal cache variables to make life easier if we're a subproject\n",
        "Line" : 1384,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Build the server applications if we've been asked to and we didn't build\n\n# the library client-only.\n",
        "Line" : 1399,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Build the RPC generation if we've been asked to\n",
        "Line" : 1407,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Create documentation\n",
        "Line" : 1418,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Python wrappers\n",
        "Line" : 1424,
        "CharPositionInLine" : 0
      },
      "96" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Java wrappers\n",
        "Line" : 1429,
        "CharPositionInLine" : 0
      },
      "97" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# HID Gui\n",
        "Line" : 1433,
        "CharPositionInLine" : 0
      },
      "98" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Testing applications that live in the main directory.\n",
        "Line" : 1439,
        "CharPositionInLine" : 0
      },
      "99" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Do a little check for GPL and GPL-incompatible libraries\n",
        "Line" : 1453,
        "CharPositionInLine" : 0
      },
      "100" : {
        "Text" : "# What flags cause us to link against GPL libraries?\n",
        "Line" : 1456,
        "CharPositionInLine" : 0
      },
      "101" : {
        "Text" : "# TODO: Figure out about the kernel headers we use.\n\n# Conflicting stories:\n\n# ML post by Linus: https://lkml.org/lkml/2003/12/5/13\n\n# Interview of Linus: http://www.itworld.com/open-source/140916/android-sued-microsoft-not-linux\n",
        "Line" : 1458,
        "CharPositionInLine" : 0
      },
      "102" : {
        "Text" : "#VRPN_USE_DEV_INPUT # Kernel header: GPL2\n\n#VRPN_USE_JOYLIN # Kernel header: GPL2\n",
        "Line" : 1464,
        "CharPositionInLine" : 1
      },
      "103" : {
        "Text" : "# GPL2+\n",
        "Line" : 1466,
        "CharPositionInLine" : 20
      },
      "104" : {
        "Text" : "# GPL3\n",
        "Line" : 1467,
        "CharPositionInLine" : 17
      },
      "105" : {
        "Text" : "# What flags cause us to link against GPL-incompatible libraries?\n",
        "Line" : 1470,
        "CharPositionInLine" : 0
      },
      "106" : {
        "Text" : "# Some GPL options are enabled\n",
        "Line" : 1492,
        "CharPositionInLine" : 1
      },
      "107" : {
        "Text" : "# Some GPL-incompatible options are enabled\n",
        "Line" : 1506,
        "CharPositionInLine" : 1
      },
      "108" : {
        "Text" : "# Check for errors.\n",
        "Line" : 1517,
        "CharPositionInLine" : 0
      },
      "109" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Enable testing/dashboards\n",
        "Line" : 1538,
        "CharPositionInLine" : 0
      },
      "110" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# If we succeeded, we can go on and include packaging!\n",
        "Line" : 1544,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 111
    },
    "Makefile" : {
      "ObjectId" : "caf48fe0329952b3132e62bf3219f86b48e5cdc5",
      "LastModified" : "2018-03-06T01:09:48Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#############################################################################\n\n#\tMakefile for VRPN libraries.  Needs to be built using 'gmake'.\n\n# Should run on any architecture that is currently supported.  It should\n\n# be possible to build simultaneously on multiple architectures.\n\n#\n\n# On the sgi, both g++ and CC versions are built by default.\n\n#\n\n# Author: Russ Taylor, 10/2/1997\n\n#\n\n# modified:\n\n# * Andrew Roth June 16/2012\n\n#\t * Updates for MacOSX builds for 32/64, 64 bit and Xcode 4.3\n\n# * Jeff Juliano, 10/99\n\n#    * added \"make depend\"  (see comments at end of this makefile)\n\n#    * changed to use RM, RMF, MV, and MVF\n\n#      these are overridable as follows:\n\n#          gmake RM=/mybin/rm,  or  gmake RMF=\"/bin/rm -option\"\n\n# * Jeff Juliano, 9/1999\n\n#     support for parallel make (see WARNING below)\n\n# * Tom Hudson, 25 Jun 1998\n\n#     Support for n32 ABI on sgi.  (gmake n32)\n\n# * Hans Weber, ???\n\n#     Support for both g++ and native compilers on sgi.\n\n# * Tom Hudson, 13 Feb 1998\n\n#     Build two different libraries:  client (libvrpn) and server\n\n#     (libvrpnserver).  Our solution is to compile twice, once with the\n\n#     flag -DVRPN_CLIENT_ONLY and once without.  Any server-specific code\n\n#     (vrpn_3Space, vrpn_Tracker_Fastrak, vrpn_Flock) should ONLY be\n\n#     compiled into the server library!\n\n#############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##########################\n\n# common definitions. For non-UNC sites, uncomment one of the lines\n\n# that defines hw_os for the machine you are on in the section just\n\n# below. Then, the code should compile in your environment.\n\n#\n\n#HW_OS := sgi_irix\n\n#HW_OS := pc_linux\n\n#HW_OS := pc_linux64\n\n#HW_OS := pc_linux_ia64\n\n# Try this to cross-compile on a Linux PC for an ARM embedded controller.\n\n#HW_OS := pc_linux_arm\n\n# Try this to cross-compile on a Cygwin PC for an ARM embedded controller.\n\n#HW_OS := pc_cygwin_arm\n\n#HW_OS := pc_cygwin\n\n#HW_OS := pc_FreeBSD\n\n#HW_OS := sparc_solaris\n\n#HW_OS := sparc_solaris_64\n\n#HW_OS := powerpc_aix\n\n#HW_OS := powerpc_macosx\n\n#HW_OS := universal_macosx\n\n#HW_OS := macosx_32_64\n\n#HW_OS := macosx_64\n\n##########################\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##########################\n\n# Mac OS X-specific options. If HW_OS is powerpc_macosx or universal_macosx,\n\n# uncomment one line below to choose the minimum targeted OS X version and\n\n# corresponding SDK. If none of the lines below is commented out, 10.5 will\n\n# be the minimum version.  10.7/4.3 removes ppc support.  In Xcode 4.3 - you \n\n# must now manually install command line tools from: \n\n# Xcode menu > Preferences > Downloads.\n\n##########################\n\n#MAC_OS_MIN_VERSION := 10.4\n\n#MAC_OS_MIN_VERSION := 10.5\n\n#MAC_OS_MIN_VERSION := 10.6\n\n#MAC_OS_MIN_VERSION := 10.7\n\n#MAC_OS_MIN_VERSION := 10.8\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# hw_os does not exist on FreeBSD at UNC or on CYGWIN\n",
        "Line" : 82,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# pc_cygwin doesn't have HW_OS\n",
        "Line" : 87,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# On cygwin make is gmake (and gmake doesn't exist)\n",
        "Line" : 90,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# check if its for pxfl\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Which C++ compiler to use.  Default is g++, but some don't use this.\n\n#\n\n# IF YOU CHANGE THESE, document either here or in the header comment\n\n# why.  Multiple contradictory changes have been made recently.\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# need default 'ranlib' to be touch for platforms that don't use it,\n\n# otherwise make fails.\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Select which compiler and MAC OS X SDK to use\n",
        "Line" : 171,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "#ifeq ($(HW_OS),sparc_solaris)\n\n#  AR := /usr/ccs/bin/ar\n\n#endif\n",
        "Line" : 269,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##########################\n\n# directories\n\n#\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# subdirectory for make\n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# directories that we can do an rm -f on because they only contain\n\n# object files and executables\n",
        "Line" : 294,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "##########################\n\n# Include flags\n\n#\n",
        "Line" : 319,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#SYS_INCLUDE := -I/usr/local/contrib/include -I/usr/local/contrib/mod/include\n",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#  SYS_INCLUDE := -I/usr/include\n",
        "Line" : 327,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#  SYS_INCLUDE := -I/usr/include\n",
        "Line" : 332,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#  SYS_INCLUDE := -I/usr/include\n",
        "Line" : 337,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#  SYS_INCLUDE := -I/usr/include\n",
        "Line" : 342,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# The following is for the InterSense and Freespace libraries.\n",
        "Line" : 347,
        "CharPositionInLine" : 1
      },
      "21" : {
        "Text" : "# The following is for the InterSense and Freespace libraries.\n",
        "Line" : 352,
        "CharPositionInLine" : 1
      },
      "22" : {
        "Text" : "#   -I/usr/local/contrib/include \\\n#\t  \t -I/usr/local/contrib/mod/include -I/usr/include/bsd \\\n#\t\t -I/usr/include/g++\n",
        "Line" : 358,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#   -I/usr/local/contrib/include \\\n#\t  \t -I/usr/local/contrib/mod/include -I/usr/include/bsd \\\n#\t\t -I/usr/include/g++\n",
        "Line" : 365,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#  SYS_INCLUDE := -I/usr/local/contrib/mod/include\n",
        "Line" : 371,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# On the PC, place quatlib in the directory ./quat.  No actual system\n\n# includes should be needed.\n",
        "Line" : 390,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "##########################\n\n# Load flags\n\n#\n",
        "Line" : 410,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#LOAD_FLAGS := -L./$(HW_OS)$(OBJECT_DIR_SUFFIX) -L/usr/local/lib \\\n#\t\t-L/usr/local/contrib/unmod/lib -L/usr/local/contrib/mod/lib -g\n",
        "Line" : 414,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "##########################\n\n# Libraries\n\n#\n",
        "Line" : 440,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#\n\n# Defines for the compilation, CFLAGS\n\n#\n",
        "Line" : 468,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#CFLAGS\t\t := $(INCLUDE_FLAGS) -g\n",
        "Line" : 472,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# If we're building for sgi_irix, we need both g++ and non-g++ versions,\n\n# unless we're building for one of the weird ABIs, which are only supported\n\n# by the native compiler.\n",
        "Line" : 476,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#############################################################################\n\n#\n\n# implicit rule for all .c files\n\n#\n",
        "Line" : 531,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Build objects from .c files\n",
        "Line" : 542,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Build objects from .C files\n",
        "Line" : 547,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Build objects from .C files\n",
        "Line" : 552,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Build objects from .C files\n",
        "Line" : 557,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#\n\n#\n\n#############################################################################\n",
        "Line" : 562,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#############################################################################\n\n#\n\n# library code\n\n#\n\n#############################################################################\n",
        "Line" : 566,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# files to be compiled into the client library\n",
        "Line" : 572,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Please keep sorted (case-sensitive)!\n",
        "Line" : 574,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Please keep sorted (case-sensitive)!\n",
        "Line" : 604,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# We aren't going to use architecture-dependent sets of files.\n\n# If vrpn_sgibox isn't supposed to be compiled on any other architecture,\n\n# then put all of it inside \"#ifdef sgi\"!\n",
        "Line" : 642,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Please keep sorted (case-sensitive)!\n",
        "Line" : 646,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Please keep sorted (case-sensitive)!\n",
        "Line" : 742,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# atmellib files.\n",
        "Line" : 848,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# gpsnmealib files.\n",
        "Line" : 869,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#############################################################################\n\n#\n\n# other stuff\n\n#\n\n#############################################################################\n",
        "Line" : 890,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "#ifneq ($(CC), g++)\n\n#\t$(MAKE) FORCE_GPP=1 clean\n\n#endif\n",
        "Line" : 918,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# clobberall removes the object directory for EVERY architecture.\n\n# One problem - the object directory for pc_win32 also contains files\n\n# that must be saved.\n\n# clobberall also axes left-over CVS cache files.\n",
        "Line" : 928,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "#* server_src/.#* client_src/.#*\n",
        "Line" : 938,
        "CharPositionInLine" : 9
      },
      "51" : {
        "Text" : "#############################################################################\n\n#\n\n# Dependencies\n\n#\n\n#   If it doesn't already exist, this makefile automatically creates\n\n#   a dependency file called .depend.  Then it includes it so that\n\n#   the build will know the dependency information.\n\n#\n\n#   to recreate a dependencies file, type  \"make depend\"\n\n#   do this any time you add a file to the project,\n\n#   or add/remove #include lines from a source file\n\n#\n\n#   if you are on an SGI and want g++ to make the dependency file,\n\n#   then type:    gmake CC=g++ depend\n\n#\n\n#   if you don't want a dependency file, then remove .depend if it exists,\n\n#   and type \"touch .depend\".  if it exists (and is empty), make will not\n\n#   automatically create it or automatically update it (unless you type\n\n#   make depend)\n\n#\n",
        "Line" : 958,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "###############\n\n### this way works better\n\n###    you type \"make depend\" anytime you add a file or\n\n###    add/remove #includes from a file\n\n########\n",
        "Line" : 979,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 53,
      "Errorlog" : "line 1005:51 token recognition error at: '\\1'\nline 1013:51 token recognition error at: '\\1'\nline 1022:51 token recognition error at: '\\1'\n"
    },
    "MinGWToolchain.cmake" : {
      "ObjectId" : "9f6c07ebc5a119bffaaea8d92b17d39ca5fe37d1",
      "LastModified" : "2012-11-07T21:57:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Example toolchain file for building with mingw32 on Ubuntu 10.04 x64\n\n# Pass to CMake using cmake -DCMAKE_TOOLCHAIN_FILE=MinGWToolchain.cmake\n\n# Not needed when actually building on Windows using mingw, only when\n\n# cross-compiling\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# the name of the target operating system\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# which compilers to use for C and C++\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# here is the target environment located\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# adjust the default behaviour of the FIND_XXX() commands:\n\n# search headers and libraries in the target environment, search\n\n# programs in the host environment\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "ParseVersion.cmake" : {
      "ObjectId" : "1ef5f551a3b97a316f3d495cc954a9358550ad90",
      "LastModified" : "2013-09-10T15:07:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###\n\n# Get the version number by parsing vrpn_Connection.C\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Extract simple version number from description to verify it\n",
        "Line" : 38,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# OK, they match.  All done!\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Not an exact tag, let's try a description\n",
        "Line" : 59,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# Extract simple version number from description\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Prerelease\n",
        "Line" : 77,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "# OK, this is a followup version\n\n# TODO verify assumption\n",
        "Line" : 84,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 7
    },
    "WarningDev.cmake" : {
      "ObjectId" : "9699462ce874c9c444f81ee0ba91f7177117f9b0",
      "LastModified" : "2010-07-16T21:04:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Print a developer warning, using author_warning if we have cmake 2.8\n\n#\n\n#  warning_dev(\"your desired message\")\n\n#\n\n# Original Author:\n\n# 2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMake version <2.8.0\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "atmellib/CMakeLists.txt" : {
      "ObjectId" : "003785cf4ed647332365ceebb19f60bf6947f5a5",
      "LastModified" : "2015-04-09T17:20:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "client_src/CMakeLists.txt" : {
      "ObjectId" : "aea76d6c333eac13422f0d82bc2764512b628c49",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# XXX Things to make better.\n\n#\n\n# XXX clock_drift_estimator\n\n# Move applications into subprojects in visual studio\n\n# Make the files with \".c\" extension also compile as C++.\n\n# Make the c_interface_example work\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Build the client applications if we've been asked to.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Libraries we need to do our thing.\n",
        "Line" : 20,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "#midi_client.C # XXX TODO No vrpn_Sound_Remote ever defined in this repository\n\n#ohm_client.C # XXX TODO No vrpn_Ohmmeter (vrpn_Ohmmeter.h) defined in this repository\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# TODO: These need \"open\" calls modified to build on win.\n",
        "Line" : 60,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "###\n\n# Tests\n\n###\n",
        "Line" : 68,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "###\n\n# Clients\n\n###\n",
        "Line" : 167,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "###\n\n# Servers\n\n###\n",
        "Line" : 182,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 8
    },
    "client_src/Makefile" : {
      "ObjectId" : "b196d39d20f9fbd2e6e7b8befafafd5ccd8f1631",
      "LastModified" : "2013-09-10T15:07:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Couldn't understand or usefully modify the former makefile.\n\n# Copied the one from ../server_src here and put the former one\n\n# in Makefile.old\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##########################\n\n# common definitions. For non-UNC sites, uncomment one of the lines\n\n# that defines hw_os for the machine you are on in the section just\n\n# below. Then, the code should compile in your environment.\n\n#\n\n#HW_OS := sgi_irix\n\n#HW_OS := sparc_solaris\n\n#HW_OS := sparc_solaris_64\n\n#HW_OS := hp700_hpux10\n\n#HW_OS := pc_linux\n\n#HW_OS := pc_linux64\n\n#HW_OS := pc_linux_ia64\n\n# Try using this to cross-compile for ARM on a PC running Linux\n\n#HW_OS := pc_linux_arm\n\n# Try using this to cross-compile for ARM on a PC running Cygwin\n\n#HW_OS := pc_cygwin_arm\n\n#HW_OS := pc_cygwin\n\n#HW_OS := pc_FreeBSD\n\n#HW_OS := powerpc_aix\n\n#HW_OS := powerpc_macosx\n\n#HW_OS := universal_macosx\n\n#HW_OS := macosx_32_64\n\n#HW_OS := macosx_64\n\n##########################\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# hw_os does not exist on FreeBSD at UNC\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# pc_cygwin doesn't have HW_OS\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# check if its for pxfl\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#  CC := /usr/ibmcxx/bin/xlC_r -g -qarch=pwr3 -w -+\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#CFLAGS = -I../ -I../quat -g\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#LFLAGS = -g -L$(LIB_DIR) -L../quat/$(HW_OS)$(OBJECT_DIR_SUFFIX)\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# These utilities actually DON'T use libvrpn\n",
        "Line" : 326,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "client_src/haptic/Makefile" : {
      "ObjectId" : "641f69face43cc7f272bdcd9e40979267e8c146c",
      "LastModified" : "2010-12-04T18:54:22Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "cmake/CheckMacHIDAPI.cmake" : {
      "ObjectId" : "54337835a3f55cbeb763b5803bdfb4c3dbae823f",
      "LastModified" : "2010-12-13T18:46:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Script to check if the signature for a mac HID callback uses UInt32 or uint32_t\n\n# Requires that the associated CPP file be present: CheckMacHIDAPI.cpp.\n\n#\n\n#\tMACOSX_HID_UINT32T, set according to the results of our test.\n\n#\n\n# Use add_definitions(-DMACOSX_HID_UINT32T=${MACOSX_HID_UINT32T}) in your\n\n# listfile and the following prototype for the function you'd like to\n\n# register using setInterruptReportHandlerCallback:\n\n#  void ReaderReportCallback(\n\n#                            void *target,\n\n#                            IOReturn result,\n\n#                            void *refcon,\n\n#                            void *sender,\n\n#                            MACOSX_HID_UINT32T size\n\n#                            )\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/CleanDirectoryList.cmake" : {
      "ObjectId" : "58b8963f9ee3ae27493c8bda68909692b59f4994",
      "LastModified" : "2010-12-13T18:46:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Removes duplicate entries and non-directories from a provided list\n\n#\n\n#  clean_directory_list(<listvar> [<additional list items>...])\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# combine variable's current value with additional list items\n",
        "Line" : 23,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Initial list cleaning\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Grab the absolute path of each actual directory\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Clean up the output list now\n",
        "Line" : 41,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "# return _out\n",
        "Line" : 45,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "cmake/CleanLibraryList.cmake" : {
      "ObjectId" : "77613934dc062c70b9af689f8017065e0a07a8e6",
      "LastModified" : "2010-12-13T18:46:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - A smarter replacement for list(REMOVE_DUPLICATES) for library lists\n\n#\n\n# Note that, in the case of cyclic link dependencies, you _do_ actually need\n\n# a library in a list multiple times. So, only use this function when you know\n\n# that the dependency graph is acyclic.\n\n#\n\n#  clean_library_list(<listvar> [<additional list items>...]) - where\n\n#  listvar is the name of a destination variable, and also possibly a source, and\n\n#  it is followed by any number (including 0) of additional libraries to append\n\n#  to the list before processing.\n\n#\n\n# Removes duplicates from the list, leaving only the last instance, while\n\n# preserving the meaning of the \"optimized\", \"debug\", and \"general\" labeling.\n\n# (Libraries listed as general are listed in the result instead as optimized and\n\n# debug)\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# combine variable's current value with additional list items\n",
        "Line" : 35,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Turn each of optimized, debug, and general into flags\n\n# prefixed on their respective library (combining list items)\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Any library that doesn't have a prefix is general, and a general\n\n# library is both debug and optimized so stdize it\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# REMOVE_DUPLICATES leaves the first - so we reverse before and after\n\n# to keep the last, instead\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Split list items back out again: turn prefixes into the\n\n# library type flags.\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Return _std\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    },
    "cmake/CppcheckTargets.cmake" : {
      "ObjectId" : "b465ba87140b72f59e1f2425af97fb747cc5f39d",
      "LastModified" : "2015-04-09T17:20:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Run cppcheck on c++ source files as a custom target and a test\n\n#\n\n#  include(CppcheckTargets)\n\n#  add_cppcheck(<target-name> [UNUSED_FUNCTIONS] [STYLE] [POSSIBLE_ERROR] [FORCE] [FAIL_ON_WARNINGS]) -\n\n#    Create a target to check a target's sources with cppcheck and the indicated options\n\n#  add_cppcheck_sources(<target-name> [UNUSED_FUNCTIONS] [STYLE] [POSSIBLE_ERROR] [FORCE] [FAIL_ON_WARNINGS]) -\n\n#    Create a target to check standalone sources with cppcheck and the indicated options\n\n#\n\n# Requires these CMake modules:\n\n#  Findcppcheck\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This file has a source file property, carry on.\n",
        "Line" : 80,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# This file doesn't have source file properties - figure it out.\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Older than CMake 2.8.0\n",
        "Line" : 100,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# CMake 2.8.0 and newer\n",
        "Line" : 107,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "# Older than CMake 2.8.0\n",
        "Line" : 192,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "# CMake 2.8.0 and newer\n",
        "Line" : 199,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 7
    },
    "cmake/CreateDashboardScripts.cmake" : {
      "ObjectId" : "22420b5b4c09261d7d4ec20e3a1af59670433f4a",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Create ctest -S scripts to use to run dashboard builds\n\n#\n\n#  include(CreateDashboardScripts)\n\n#  create_dashboard_scripts([<initialcachetemplatefilename>])\n\n#\n\n# If you need additional settings to persist from the \"parent\" CMake instance\n\n# to the initial cache created by the dashboard script,\n\n# you may pass a filename which will be configured into the initial cache.\n\n#\n\n# In the resulting DASHBOARDSCRIPT_BASE_DIRECTORY, an end-user\n\n# may optionally create a file named\n\n#  CustomInitialCache.${DASHBOARDSCRIPT_SCRIPT_NAME}\n\n# (by default, CustomInitialCache.go.cmake) containing set commands that use\n\n# the CACHE option, to set up additional site-local cache variable values.\n\n#\n\n# Requires these CMake modules:\n\n#  GetCompilerInfoString\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command),\n\n# as well as FindGit.cmake (included with 2.8.2, may be backported)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Only do any of the prep work if not already in a dashboard script\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Hide a CTest variable\n",
        "Line" : 35,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# We must run the following at \"include\" time, not at function call time,\n\n# to find the path to this module rather than the path to a calling list file\n",
        "Line" : 42,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# Try to find CTest, preferably right next to the chosen CMake\n",
        "Line" : 89,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# Optionals\n",
        "Line" : 118,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# If we have a valid git we found ourselves in older version of the module,\n\n# let the regular FindGit module (since 2.8.2) know.\n",
        "Line" : 125,
        "CharPositionInLine" : 3
      },
      "7" : {
        "Text" : "# IN_DASHBOARD_SCRIPT is YES\n",
        "Line" : 142,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# Only create the script if we have all the required variables\n\n# and are not already in it, and are at least 2.8.0.\n",
        "Line" : 148,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# If given a cache template, configure it\n",
        "Line" : 185,
        "CharPositionInLine" : 3
      },
      "10" : {
        "Text" : "# Actually create the script file\n",
        "Line" : 192,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 11
    },
    "cmake/DoxygenTargets.cmake" : {
      "ObjectId" : "df7c08812d9ab693c385eea0f11eda30965a30df",
      "LastModified" : "2015-04-09T17:20:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Run doxygen on source files as a custom target\n\n#\n\n#  include(DoxygenTargets)\n\n#  add_doxygen(<doxyfile> [OUTPUT_DIRECTORY <outputdir>]\n\n#   [EXTRA_INPUT <single path or quoted list of paths>]\n\n#   [EXTRA_STRIP_FROM_PATH <single path or quoted list of paths>]\n\n#   [EXTRA_STRIP_FROM_INC_PATH <single path or quoted list of paths>]\n\n#   [INSTALL_DESTINATION <installdir>\n\n#   [INSTALL_COMPONENT <installcomponent>]\n\n#   [INSTALL_PDF_NAME <installpdfname>] ]\n\n#   [DOC_TARGET <targetname>]\n\n#   [PROJECT_NUMBER <versionnumber>]\n\n#   [NO_WARNINGS]\n\n#   [NO_PDF])\n\n#\n\n# Requires these CMake modules:\n\n#  FindDoxygen\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We must run the following at \"include\" time, not at function call time,\n\n# to find the path to this module rather than the path to a calling list file\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# An optional single-file install that supports cmake older than 2.8.0\n\n# For internal use\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# An optional single-directory install that supports cmake older than 2.8.0\n\n# For internal use\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# parse arguments\n",
        "Line" : 158,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# Create a target to open the generated HTML file.\n",
        "Line" : 236,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "# Doesn't currently work on Windows, so don't bother\n",
        "Line" : 262,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# See http://www.cmake.org/pipermail/cmake/2006-August/010786.html\n\n# for info on this variable\n",
        "Line" : 289,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#MAIN_DEPENDENCY ${DOC_TARGET}\n",
        "Line" : 313,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 9
    },
    "cmake/EnableExtraCompilerWarnings.cmake" : {
      "ObjectId" : "4c0e5c78d55c9d043bfccb2722e36dd5ddff5622",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Add flags to compile with extra warnings\n\n#\n\n#  enable_extra_compiler_warnings(<targetname>)\n\n#  globally_enable_extra_compiler_warnings() - to modify CMAKE_CXX_FLAGS, etc\n\n#    to change for all targets declared after the command, instead of per-command\n\n#\n\n#\n\n# Original Author:\n\n# 2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# At least GCC includes -Wmaybe-uninitialized in -Wall, which\n\n# unneccesarily whines about boost::optional (by it's nature\n\n# it's a \"maybe\" warning - prone to noisy false-positives)\n",
        "Line" : 54,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 2
    },
    "cmake/EnableProfiling.cmake" : {
      "ObjectId" : "e2a340f7c83dacd3cd30e365aba4699bb96a7809",
      "LastModified" : "2010-12-13T18:46:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Add flags to compile with profiling support - currently only for GCC\n\n#\n\n#  enable_profiling(<targetname>)\n\n#  globally_enable_profiling() - to modify CMAKE_CXX_FLAGS, etc\n\n#    to change for all targets declared after the command, instead of per-command\n\n#\n\n#\n\n# Original Author:\n\n# 2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO: what kind of flags are needed to profile on MSVC?\n\n#set(_flags /W4)\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "cmake/FindAdrienne.cmake" : {
      "ObjectId" : "d4f174c0cda9f1a0c6960b47ab16075f83fa10f9",
      "LastModified" : "2015-04-09T17:20:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find Adrienne Electronics Corporation timecode card library\n\n#\n\n# SDK available from the manufacturer: http://www.adrielec.com/\n\n#\n\n# Cache Variables: (probably not for direct use in your scripts)\n\n#  ADRIENNE_INCLUDE_DIR\n\n#  ADRIENNE_LIBRARY\n\n#  ADRIENNE_RUNTIME_LIBRARY\n\n#  ADRIENNE_INCLUDE_FILE\n\n#\n\n# Variables you might use in your CMakeLists.txt:\n\n#  ADRIENNE_FOUND\n\n#  ADRIENNE_INCLUDE_DIRS\n\n#  ADRIENNE_LIBRARIES\n\n#  ADRIENNE_RUNTIME_LIBRARIES - the AEC_NTTC.dll file\n\n#  ADRIENNE_RUNTIME_LIBRARY_DIRS\n\n#\n\n#  ADRIENNE_INCLUDE_FILENAME - this is probably AEC_NTTC.h, but it might also\n\n#    be AECINTTC.H.\n\n#\n\n#  ADRIENNE_INCLUDE_HAS_EXTERN_C - Some (most) versions of the header already\n\n#    wrap their definitions in extern \"C\" { }, but some do not.\n\n#\n\n#  ADRIENNE_DEFINITIONS - defines a quoted ADRIENNE_INCLUDE_FILENAME as above,\n\n#    so you can write a line like #include ADRIENNE_INCLUDE_FILENAME\n\n#    Also defines ADRIENNE_BEFORE_INCLUDE and ADRIENNE_AFTER_INCLUDE to handle\n\n#    adding extern \"C\" { and } if the header file doesn't do so itself.\n\n#\n\n# Variables that might be set by the user in the gui/command line to help\n\n# find the library:\n\n#  ADRIENNE_ROOT_DIR - root of an Adrienne CD, disk, or extracted/copied contents\n\n#    thereof.\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Original Author:\n\n# 2012 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2012.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apparently Windows only.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# from AecPCIeTC_8-12a: contains AEC_NTTC.h with extern \"C\" and three extra functions:\n\n# AEC_PCTC_OPEN_ALL, AEC_PCTC_CLOSE_ALL,  AEC_PCTC_INITIALIZE_EVENT\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# from AecPci6_02_CD - called AECINTTC.H but otherwise essentially identical to earlier versions\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# A zipped development project contains essentially the same, named AEC_NTTC.h so we'll add this in case it's unzipped.\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# from pc-ltc - called AECINTTC.H and lacks extern \"C\"\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# 64 bit code - apparently initially packaged only in the\n\n# PCIe version of their software\n",
        "Line" : 80,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# from AecPCIeTC_8-12a\n",
        "Line" : 83,
        "CharPositionInLine" : 3
      },
      "8" : {
        "Text" : "# from AecPCIeTC_8-12a\n",
        "Line" : 87,
        "CharPositionInLine" : 3
      },
      "9" : {
        "Text" : "# 32-bit code, much more prevalent.\n",
        "Line" : 90,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# from AecPCIeTC_8-12a\n",
        "Line" : 92,
        "CharPositionInLine" : 3
      },
      "11" : {
        "Text" : "# from AecPci6_02_CD\n",
        "Line" : 95,
        "CharPositionInLine" : 3
      },
      "12" : {
        "Text" : "# from pc-ltc\n",
        "Line" : 98,
        "CharPositionInLine" : 3
      },
      "13" : {
        "Text" : "# from AecPCIeTC_8-12a\n",
        "Line" : 103,
        "CharPositionInLine" : 3
      },
      "14" : {
        "Text" : "# from AecPci6_02_CD\n",
        "Line" : 106,
        "CharPositionInLine" : 3
      },
      "15" : {
        "Text" : "# from pc-ltc\n",
        "Line" : 109,
        "CharPositionInLine" : 3
      },
      "16" : {
        "Text" : "# Get include filename\n",
        "Line" : 136,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Find out if it has extern \"C\" in it.\n",
        "Line" : 142,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 18
    },
    "cmake/FindColibriApi.cmake" : {
      "ObjectId" : "0d7b4ff3657b2f5c1f72766706f687dc68196538",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find Trivisio Colibri API library\n\n#\n\n# Cache Variables:\n\n#  COLIBRIAPI_LIBRARY\n\n#  COLIBRIAPI_INCLUDE_DIR\n\n#\n\n# Non-cache variables you might use in your CMakeLists.txt:\n\n#  COLIBRIAPI_FOUND\n\n#  COLIBRIAPI_SERVER_LIBRARIES - server libraries\n\n#  COLIBRIAPI_LIBRARIES - client libraries\n\n#  COLIBRIAPI_CLIENT_DEFINITIONS - definitions if you only use the client library\n\n#  COLIBRIAPI_DEFINITIONS - Client-only definition if all we found was the client library.\n\n#  COLIBRIAPI_INCLUDE_DIRS\n\n#\n\n# COLIBRIAPI_ROOT_DIR is searched preferentially for these files\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Original Author:\n\n# 2009-2012 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2012.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# 64-bit dir: only set on win64\n",
        "Line" : 39,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# 32-bit dir: only set on win64\n",
        "Line" : 45,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "# 32-bit dir on win32, useless to us on win64\n",
        "Line" : 48,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "###\n\n# Configure COLIBRIAPI\n\n###\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "###\n\n# Dependencies\n\n###\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cmake/FindDirectShow.cmake" : {
      "ObjectId" : "1fb33061a8b906cd9c63a9d325f261f1655e2e18",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find Microsoft DirectShow sample files, library, and headers.\n\n#\n\n#  DIRECTSHOW_INCLUDE_DIRS - where to find needed include file\n\n#  DIRECTSHOW_BASECLASS_DIR- Directory containing the DirectShow baseclass sample code.\n\n#  DIRECTSHOW_FOUND        - True if DirectShow found.\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Initially in VRPN - Distributed under the Boost Software License, Version 1.0.\n\n#\n\n# Almost entirely re-written by:\n\n# 2012 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2012.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Look for one of the sample files.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Begin code dedicated to finding a proper qedit.h file...\n\n###\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Checks to see if a directory has qedit.h and if that file contains ISampleGrabber.\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Check before deciding if we should make our list of possible locations.\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Compose a list of possible directories that might hold a qedit.h file.\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# This one we can grab from another SDK version.\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Check if the directory is OK after the search.\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# If we didn't find a proper qedit, manually look through the possibilities.\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "###\n\n# End qedit.h section.\n\n###\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Baseclass must be before SDK so it gets the correct refclock.h\n",
        "Line" : 181,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# QEdit include dir might be an older SDK, so put it last.\n",
        "Line" : 192,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 12
    },
    "cmake/FindDirectX.cmake" : {
      "ObjectId" : "d77ca757ed1e250c428faa4f3a082fc134bd7e38",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find part of DirectX SDK\n\n#\n\n# Cache Variables: (probably not for direct use in your scripts)\n\n#  DIRECTX_INCLUDE_DIR\n\n#\n\n# Variables you should use in your CMakeLists.txt:\n\n#  DIRECTX_DXGUID_LIBRARY - deprecated, see below\n\n#  DIRECTX_DXERR_LIBRARY - deprecated, see http://blogs.msdn.com/b/chuckw/archive/2012/04/24/where-s-dxerr-lib.aspx\n\n#  DIRECTX_DINPUT_LIBRARY\n\n#  DIRECTX_DINPUT_INCLUDE_DIR\n\n#  DIRECTX_D3D9_LIBRARY\n\n#  DIRECTX_D3DXOF_LIBRARY\n\n#  DIRECTX_D3DX9_LIBRARIES\n\n#  DIRECTX_INCLUDE_DIRS\n\n#  DIRECTX_FOUND - if this is not true, do not attempt to use this library\n\n#\n\n# Defines these macros:\n\n#  find_directx_include - wrapper for find_path that provides PATHS, HINTS, and PATH_SUFFIXES.\n\n#  find_directx_library - wrapper for find_library that provides PATHS, HINTS, and PATH_SUFFIXES.\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#  SelectLibraryConfigurations\n\n#\n\n# Original Author:\n\n# 2012 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2012.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Until proven otherwise.\n",
        "Line" : 271,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "cmake/FindGHOST.cmake" : {
      "ObjectId" : "71f17ee5650a69f5e4865cc87591548bc7a220ed",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find Sensable GHOST library and include files\n\n#  GHOST_INCLUDE_DIRS, where to find GL/glut.h, etc.\n\n#  GHOST_LIBRARIES, the libraries to link against\n\n#  GHOST_FOUND, If false, do not try to use GLUT.\n\n#  GHOST_RUNTIME_LIBRARY_DIRS, path to DLL on Windows for runtime use.\n\n#\n\n# Requires these CMake modules:\n\n#  no additional modules required\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# .NET and newer: fake the STL headers\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# 6.0 and earlier - use GHOST-provided STL\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/FindGPM.cmake" : {
      "ObjectId" : "ea70d8550ad5672d8afc64ed6b43e9f38a26dd19",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find GPM library\n\n#\n\n# Cache Variables: (probably not for direct use in your scripts)\n\n#  GPM_INCLUDE_DIR\n\n#  GPM_LIBRARY\n\n#\n\n# Non-cache variables you might use in your CMakeLists.txt:\n\n#  GPM_FOUND\n\n#  GPM_INCLUDE_DIRS\n\n#  GPM_LIBRARIES\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindHIDAPI.cmake" : {
      "ObjectId" : "646f9002629f641d03941eb4dbfd4f4a37c96e0a",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find HIDAPI library\n\n# from http://www.signal11.us/oss/hidapi/\n\n#\n\n# Cache Variables: (probably not for direct use in your scripts)\n\n#  HIDAPI_INCLUDE_DIR\n\n#  HIDAPI_LIBRARY\n\n#\n\n# Non-cache variables you might use in your CMakeLists.txt:\n\n#  HIDAPI_FOUND\n\n#  HIDAPI_INCLUDE_DIRS\n\n#  HIDAPI_LIBRARIES\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindInterSense.cmake" : {
      "ObjectId" : "855c9a1d2499d1d85bd34ec5e818f5d800e8556f",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find InterSense library\n\n#\n\n# Cache Variables: (probably not for direct use in your scripts)\n\n#  INTERSENSE_INCLUDE_DIR\n\n#  INTERSENSE_ISENSEC_DIR - location of the isense.c \"import library\" substitute.\n\n#  INTERSENSE_LIBRARY\n\n#\n\n# Non-cache variables you might use in your CMakeLists.txt:\n\n#  INTERSENSE_FOUND\n\n#  INTERSENSE_INCLUDE_DIRS\n\n#  INTERSENSE_LIBRARIES\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Author:\n\n# 2013 Eric Marsh <bits@wemarsh.com>\n\n# http://wemarsh.com/\n\n# Kognitiv Neuroinformatik, Universität Bremen\n\n#\n\n# (building on Ryan Pavlik's templates)\n\n#\n\n# 2013 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Default locations, as well as registry places it records install locations,\n\n# if you installed from a (actual or downloaded) product \"CD\"\n",
        "Line" : 52,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Assume Linux, since that's the only other platform supported by this library\n",
        "Line" : 61,
        "CharPositionInLine" : 7
      },
      "3" : {
        "Text" : "# This is a weird one - no import library is supplied, and instead, at least on Windows, they use\n\n# an isense.c file to call into the DLL. Not sure if MinGW can link right against the dll in this case.\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Only MSVC on Windows theoretically needs import libraries, so...\n",
        "Line" : 91,
        "CharPositionInLine" : 7
      },
      "CommentCount" : 5
    },
    "cmake/FindJsonCpp.cmake" : {
      "ObjectId" : "4d6398d93401aa789b67ea02d6198c199244a9cc",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find jsoncpp - Overarching find module\n\n# This is a over-arching find module to find older jsoncpp versions and those sadly built\n\n# without JSONCPP_WITH_CMAKE_PACKAGE=ON, as well as those built with the cmake config file.\n\n# It also wraps the different versions of the module.\n\n#\n\n# On CMake 3.0 and newer:\n\n#  JsonCpp::JsonCpp - Imported target (possibly an interface/alias) to use:\n\n#  if anything is populated, this is. If both shared and static are found, then\n\n#  this will be the static version on DLL platforms and shared on non-DLL platforms.\n\n#  JsonCpp::JsonCppShared - Imported target (possibly an interface/alias) for a\n\n#  shared library version.\n\n#  JsonCpp::JsonCppStatic - Imported target (possibly an interface/alias) for a\n\n#  static library version.\n\n#\n\n# On all CMake versions: (Note that on CMake 2.8.10 and earlier, you may need to use JSONCPP_INCLUDE_DIRS)\n\n#  JSONCPP_LIBRARY - wraps JsonCpp::JsonCpp or equiv.\n\n#  JSONCPP_LIBRARY_IS_SHARED - if we know for sure JSONCPP_LIBRARY is shared, this is true-ish. We try to \"un-set\" it if we don't know one way or another.\n\n#  JSONCPP_LIBRARY_SHARED - wraps JsonCpp::JsonCppShared or equiv.\n\n#  JSONCPP_LIBRARY_STATIC - wraps JsonCpp::JsonCppStatic or equiv.\n\n#  JSONCPP_INCLUDE_DIRS - Include directories - should (generally?) not needed if you require CMake 2.8.11+ since it handles target include directories.\n\n#\n\n#  JSONCPP_FOUND - True if JsonCpp was found.\n\n#\n\n# Original Author:\n\n# 2016 Ryan Pavlik <ryan.pavlik@gmail.com>\n\n# Incorporates work from the module contributed to VRPN under the same license:\n\n# 2011 Philippe Crassous (ENSAM ParisTech / Institut Image) p.crassous _at_ free.fr\n\n#\n\n# Copyright Philippe Crassous 2011.\n\n# Copyright Sensics, Inc. 2016.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# sets __jsoncpp_have_jsoncpplib based on whether or not we have a real imported jsoncpp_lib target.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#message(STATUS \"__jsoncpp_lib_type ${__jsoncpp_lib_type}\")\n\n# We make interface libraries. If an actual config module made it, it would be an imported library.\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#message(\"have jsoncpp_lib and we didn't invent it ourselves\")\n",
        "Line" : 52,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# Ensure that if this is TRUE later, it's because we set it.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# See if we find a CMake config file - there is no harm in calling this more than once,\n\n# and we need to call it at least once every CMake invocation to create the original\n\n# imported targets, since those don't stick around like cache variables.\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build a string to help us figure out when to invalidate our cache variables.\n\n# start with where we found jsoncpp\n",
        "Line" : 68,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# part of the string to indicate if we found a real jsoncpp_lib (and what kind)\n",
        "Line" : 72,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# Can't do this - different runtimes, incompatible ABI, etc.\n",
        "Line" : 76,
        "CharPositionInLine" : 3
      },
      "9" : {
        "Text" : "#osvr_stash_map_config(DEBUG DEBUG RELWITHDEBINFO RELEASE MINSIZEREL NONE)\n",
        "Line" : 80,
        "CharPositionInLine" : 3
      },
      "10" : {
        "Text" : "# Appending, just in case using project or upstream fixes this.\n",
        "Line" : 82,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# part of the string to indicate if we found jsoncpp_lib_static\n",
        "Line" : 97,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# If we found something, and it's not the exact same as what we've found before...\n\n# NOTE: The contents of this \"if\" block update only (internal) cache variables!\n\n# (since this will only get run the first CMake pass that finds jsoncpp or that finds a different/updated install)\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#message(\"Updating jsoncpp cache variables! ${__jsoncpp_info_string}\")\n",
        "Line" : 111,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# if(__jsoncpp_have_jsoncpplib) is equivalent to if(TARGET jsoncpp_lib) except it excludes our\n\n# \"invented\" jsoncpp_lib interface targets, made for convenience purposes after this block.\n",
        "Line" : 119,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "# A veritable cache of riches - we have both shared and static!\n",
        "Line" : 124,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# DLL platforms: static library should be default\n",
        "Line" : 128,
        "CharPositionInLine" : 3
      },
      "17" : {
        "Text" : "# Other platforms - might require PIC to be linked into shared libraries, so safest to prefer shared.\n",
        "Line" : 132,
        "CharPositionInLine" : 3
      },
      "18" : {
        "Text" : "# Well, only one variant, but we know for sure that it's static.\n",
        "Line" : 138,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# We were able to figure out the mystery library is static!\n",
        "Line" : 144,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# We were able to figure out the mystery library is shared!\n",
        "Line" : 150,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# One variant, and we have no idea if this is just an old version or if\n\n# this is shared based on the target name alone. Hmm.\n",
        "Line" : 156,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# Now, we need include directories. Can't just limit this to old CMakes, since\n\n# new CMakes might be used to build projects designed to support older ones.\n",
        "Line" : 161,
        "CharPositionInLine" : 1
      },
      "23" : {
        "Text" : "# As a convenience...\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# OK, so we couldn't get it from the target... maybe we can figure it out from jsoncpp_DIR.\n",
        "Line" : 185,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# take off the jsoncpp component\n",
        "Line" : 187,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# take off the cmake component\n",
        "Line" : 190,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# take off the lib component\n",
        "Line" : 193,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# take off one more component in case of multiarch lib\n",
        "Line" : 196,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# Now, search.\n",
        "Line" : 200,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# Note - this does not set it in the cache, in case we find it better at some point in the future!\n",
        "Line" : 208,
        "CharPositionInLine" : 3
      },
      "31" : {
        "Text" : "# Create any missing namespaced targets from the config module.\n",
        "Line" : 221,
        "CharPositionInLine" : 1
      },
      "32" : {
        "Text" : "# Hide the stuff we didn't, and no longer, need.\n",
        "Line" : 244,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# Still nothing after looking for the config file: must go \"old-school\"\n",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Invoke pkgconfig for hints\n",
        "Line" : 272,
        "CharPositionInLine" : 1
      },
      "35" : {
        "Text" : "# OK, if pkg-config wasn't able to give us a library name suggestion, then we may\n\n# have to resort to some intense old logic.\n",
        "Line" : 290,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# bit of a generalization but close...\n",
        "Line" : 297,
        "CharPositionInLine" : 15
      },
      "37" : {
        "Text" : "# end of old logic\n",
        "Line" : 338,
        "CharPositionInLine" : 9
      },
      "38" : {
        "Text" : "# Actually go looking.\n",
        "Line" : 340,
        "CharPositionInLine" : 1
      },
      "39" : {
        "Text" : "# We already know that the target doesn't exist, let's make it.\n\n# TODO don't know why we get errors like:\n\n# error: 'JsonCpp::JsonCpp-NOTFOUND', needed by 'bin/osvr_json_to_c', missing and no known rule to make it\n\n# when we do the imported target commented out below. So, instead, we make an interface\n\n# target with an alias. Hmm.\n",
        "Line" : 359,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "#add_library(JsonCpp::JsonCpp UNKNOWN IMPORTED)\n\n#set_target_properties(JsonCpp::JsonCpp PROPERTIES\n\n#\tIMPORTED_LOCATION \"${JsonCpp_LIBRARY}\"\n\n#\tINTERFACE_INCLUDE_DIRECTORIES \"${JsonCpp_INCLUDE_DIR}\"\n\n#\tIMPORTED_LINK_INTERFACE_LANGUAGES \"CXX\")\n",
        "Line" : 365,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 41
    },
    "cmake/FindLibFreespace.cmake" : {
      "ObjectId" : "b83e837bb3f43a242235d920ca060d5f056eb0c8",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find Hillcrest Labs' libfreespace library\n\n#\n\n# Cache Variables: (probably not for direct use in your scripts)\n\n#  LIBFREESPACE_INCLUDE_DIR\n\n#  LIBFREESPACE_LIBRARY\n\n#\n\n# Non-cache variables you might use in your CMakeLists.txt:\n\n#  LIBFREESPACE_FOUND\n\n#  LIBFREESPACE_INCLUDE_DIRS\n\n#  LIBFREESPACE_LIBRARIES\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Original Author:\n\n# 2014 Ryan Pavlik <ryan@sensics.com> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n#\n\n# Copyright Sensics, Inc. 2014.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindLibNifalcon.cmake" : {
      "ObjectId" : "7a25e2b2e0b77b3467c7475763bf2e257ed3596d",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find Libnifalcon library\n\n#\n\n#\n\n# Cache Variables: (probably not for direct use in your scripts)\n\n#  LIBNIFALCON_ROOT_DIR - where to start searching\n\n#  LIBNIFALCON_INCLUDE_DIR\n\n#  LIBNIFALCON_LIBRARY\n\n#  LIBNIFALCON_LIBUSB1_LIBRARY - Unix only\n\n#  LIBNIFALCON_LIBUSB1_INCLUDE_DIR - Unix only\n\n#\n\n# Non-cache variables you might use in your CMakeLists.txt:\n\n#  LIBNIFALCON_FOUND\n\n#  LIBNIFALCON_INCLUDE_DIRS\n\n#  LIBNIFALCON_LIBRARIES\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known to be included with CMake >=2.6.2)\n\n#\n\n# 2010 Axel Kohlmeyer, <akohlmey@gmail.com>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindLibusb1.cmake" : {
      "ObjectId" : "b161c81e04fcfb12d0d278feecdfda910704991a",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find libusb-1 library\n\n#\n\n# Cache Variables: (probably not for direct use in your scripts)\n\n#  LIBUSB1_LIBRARY\n\n#  LIBUSB1_INCLUDE_DIR\n\n#\n\n# Non-cache variables you should use in your CMakeLists.txt:\n\n#  LIBUSB1_LIBRARIES\n\n#  LIBUSB1_INCLUDE_DIRS\n\n#  LIBUSB1_FOUND - if this is not true, do not attempt to use this library\n\n#\n\n# Requires these CMake modules:\n\n#  ProgramFilesGlob\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindMacHID.cmake" : {
      "ObjectId" : "d96baceb597b82cb0effab01b17c27d780fb8756",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find Mac HID frameworks\n\n#\n\n# Cache Variables: (probably not for direct use in your scripts)\n\n#  MACHID_CoreFoundation_LIBRARY\n\n#  MACHID_CoreFoundation_INCLUDE_DIR\n\n#  MACHID_IOKit_LIBRARY\n\n#  MACHID_IOKit_INCLUDE_DIR\n\n#  MACOSX_HID_UINT32T  (from CheckMacHIDAPI)\n\n#\n\n# Non-cache variables you should use in your CMakeLists.txt:\n\n#  MACHID_DEFINITIONS\n\n#  MACHID_LIBRARIES\n\n#  MACHID_INCLUDE_DIRS\n\n#  MACHID_FOUND - if this is not true, do not attempt to use this library\n\n#\n\n# Requires these CMake modules:\n\n#  CheckMacHIDAPI\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindModbus.cmake" : {
      "ObjectId" : "62503ce6930ae3d6be15e68ecde2f2817a25072f",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find Modbus library\n\n# Find the Modbus headers and libraries.\n\n#\n\n#  MODBUS_INCLUDE_DIRS - where to find modbus.h\n\n#  MODBUS_LIBRARIES    - List of libraries when using modbus.\n\n#  MODBUS_FOUND        - True if modbus library found.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Based on Findquatlib.cmake, Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# 64-bit dir: only set on win64\n",
        "Line" : 28,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# 32-bit dir: only set on win64\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# 32-bit dir on win32, useless to us on win64\n",
        "Line" : 37,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Look for the header file.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Look for the library.\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set MODBUS_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cmake/FindNIDAQmx.cmake" : {
      "ObjectId" : "6a74fc3b4aad6e5d5c5fc96e484879b277205fa3",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find NIDAQMX library\n\n#\n\n# Cache Variables: (probably not for direct use in your scripts)\n\n#  NIDAQMX_INCLUDE_DIR\n\n#  NIDAQMX_LIBRARY\n\n#\n\n# Non-cache variables you might use in your CMakeLists.txt:\n\n#  NIDAQMX_FOUND\n\n#  NIDAQMX_INCLUDE_DIRS\n\n#  NIDAQMX_LIBRARIES\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Original Author:\n\n# 2011 Russell M. Taylor II <taylorr@cs.unc.edu>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright University of North Carolina at Chapel Hill 2011\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindOpenHaptics.cmake" : {
      "ObjectId" : "0e4958c5f5ccbfac3a50b0676f1a4c32b2077b2b",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find OpenHaptics libraries\n\n#\n\n# Cache Variables: (probably not for direct use in your scripts)\n\n#  HDAPI_INCLUDE_DIR\n\n#  HDAPI_LIBRARY\n\n#  HDAPI_LIBRARY_RELEASE\n\n#  HDAPI_LIBRARY_DEBUG\n\n#  HDAPI_HDU_INCLUDE_DIR\n\n#  HDAPI_HDU_LIBRARY\n\n#  HDAPI_HDU_LIBRARY_RELEASE\n\n#  HDAPI_HDU_LIBRARY_DEBUG\n\n#  HLAPI_INCLUDE_DIR\n\n#  HLAPI_LIBRARY\n\n#  HLAPI_LIBRARY_RELEASE\n\n#  HLAPI_LIBRARY_DEBUG\n\n#  HLAPI_HLU_INCLUDE_DIR\n\n#  HLAPI_HLU_LIBRARY\n\n#  HLAPI_HLU_LIBRARY_RELEASE\n\n#  HLAPI_HLU_LIBRARY_DEBUG\n\n#\n\n# Non-cache variables you might use in your CMakeLists.txt:\n\n#  OPENHAPTICS_FOUND\n\n#  HDAPI_INCLUDE_DIRS\n\n#  HDAPI_LIBRARIES\n\n#  HDAPI_HDU_INCLUDE_DIRS\n\n#  HDAPI_HDU_LIBRARIES\n\n#  HLAPI_INCLUDE_DIRS\n\n#  HLAPI_LIBRARIES\n\n#  HLAPI_HLU_INCLUDE_DIRS\n\n#  HLAPI_HLU_LIBRARIES\n\n#  OPENHAPTICS_LIBRARIES - includes HD, HDU, HL, HLU\n\n#  OPENHAPTICS_RUNTIME_LIBRARY_DIRS\n\n#  OPENHAPTICS_ENVIRONMENT\n\n#  OPENHAPTICS_LIBRARY_DIRS\n\n#  OPENHAPTICS_INCLUDE_DIRS\n\n#\n\n# Requires these CMake modules:\n\n#  CleanDirectoryList\n\n#  CleanLibraryList\n\n#  ListCombinations\n\n#  ProgramFilesGlob\n\n#  SelectLibraryConfigurations (included with CMake >=2.8.0)\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#  CMake 2.6.3 (uses \"unset\")\n\n#\n\n# Original Author:\n\n# 2009-2012 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Configure OpenHaptics\n\n###\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# 64-bit\n",
        "Line" : 106,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# 32-bit\n",
        "Line" : 120,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "###\n\n# HDAPI: HD\n\n###\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "###\n\n# HDAPI: HDU\n\n###\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Fallback\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "###\n\n# HLAPI: HL\n\n###\n",
        "Line" : 268,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "###\n\n# HLAPI: HLU\n\n###\n",
        "Line" : 297,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# fallback\n",
        "Line" : 324,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "###\n\n# Add dependencies: Libraries\n\n###\n",
        "Line" : 365,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "###\n\n# Add dependencies: Include dirs\n\n###\n",
        "Line" : 388,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 412,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Recurse into the nested targets subdirectory if needed\n",
        "Line" : 428,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 14
    },
    "cmake/FindPerlModules.cmake" : {
      "ObjectId" : "f09ff851d1191c6b8fff26126ea24334794a51b4",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find perl modules, passed as COMPONENTS\n\n#\n\n# Non-cache variable you might use in your CMakeLists.txt:\n\n#  PERLMODULES_FOUND\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Original Author:\n\n# 2012 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2012.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindThalmicLabsMyo.cmake" : {
      "ObjectId" : "7fed8aa1e0b09b08bc2ebc314647d71d16e6873f",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find Thalmix Labs' myo library (WIN32 ONLY)\n\n#\n\n# Cache Variables: (probably not for direct use in your scripts)\n\n#  THALMICLABSMYO_INCLUDE_DIRS\n\n#  THALMICLABSMYO_LIBRARY\n\n#\n\n# Non-cache variables you might use in your CMakeLists.txt:\n\n#  THALMICLABSMYO_FOUND\n\n#  THALMICLABSMYO_INCLUDE_DIRS\n\n#  THALMICLABSMYO_LIBRARIES\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindVRPN.cmake" : {
      "ObjectId" : "641b62b70ea6a7b153d3fa97d6c629b6d977cde9",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find VRPN library\n\n#\n\n# Cache Variables:\n\n#  VRPN_LIBRARY\n\n#  VRPN_SERVER_LIBRARY\n\n#  VRPN_INCLUDE_DIR\n\n#\n\n# Non-cache variables you might use in your CMakeLists.txt:\n\n#  VRPN_FOUND\n\n#  VRPN_SERVER_LIBRARIES - server libraries\n\n#  VRPN_LIBRARIES - client libraries\n\n#  VRPN_CLIENT_DEFINITIONS - definitions if you only use the client library\n\n#  VRPN_DEFINITIONS - Client-only definition if all we found was the client library.\n\n#  VRPN_INCLUDE_DIRS\n\n#\n\n# VRPN_ROOT_DIR is searched preferentially for these files\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Original Author:\n\n# 2009-2012 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2012.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# 64-bit dir: only set on win64\n",
        "Line" : 40,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# 32-bit dir: only set on win64\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# 32-bit dir on win32, useless to us on win64\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "###\n\n# Configure VRPN\n\n###\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "###\n\n# Dependencies\n\n###\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cmake/FindViewPoint.cmake" : {
      "ObjectId" : "a18b6145d673ae6b80528729a433771ba16db89a",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find Arrington Research ViewPoint EyeTracker SDK\n\n#\n\n# Cache Variables: (probably not for direct use in your scripts)\n\n#  VIEWPOINT_INCLUDE_DIR\n\n#  VIEWPOINT_LIBRARY\n\n#  VIEWPOINT_RUNTIME_LIBRARY\n\n#\n\n# Non-cache variables you might use in your CMakeLists.txt:\n\n#  VIEWPOINT_FOUND\n\n#  VIEWPOINT_INCLUDE_DIRS\n\n#  VIEWPOINT_LIBRARIES\n\n#  VIEWPOINT_RUNTIME_LIBRARIES - aka the dll for installing\n\n#  VIEWPOINT_RUNTIME_LIBRARY_DIRS\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Original Author:\n\n# 2012 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2012.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindWiiUse.cmake" : {
      "ObjectId" : "2657cbb6008e2a90677938947631d98978ce548a",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find WiiUse library\n\n#\n\n# Cache Variables: (probably not for direct use in your scripts)\n\n#  WIIUSE_INCLUDE_DIR\n\n#  WIIUSE_LIBRARY\n\n#\n\n# Non-cache variables you might use in your CMakeLists.txt:\n\n#  WIIUSE_FOUND\n\n#  WIIUSE_INCLUDE_DIRS\n\n#  WIIUSE_LIBRARIES\n\n#  WIIUSE_RUNTIME_LIBRARIES - aka the dll for installing\n\n#  WIIUSE_RUNTIME_LIBRARY_DIRS\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindWinHID.cmake" : {
      "ObjectId" : "7dd05721401a6122edd1180b77c716f13d84d9c6",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find Windows HID support, part of the WDK/DDK\n\n#\n\n# Cache Variables: (probably not for direct use in your scripts)\n\n#  WINHID_INCLUDE_DIR\n\n#  WINHID_CRT_INCLUDE_DIR\n\n#  WINHID_LIBRARY\n\n#\n\n# Non-cache variables you might use in your CMakeLists.txt:\n\n#  WINHID_FOUND\n\n#  WINHID_INCLUDE_DIRS\n\n#  WINHID_LIBRARIES\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#  PrefixListGlob\n\n#  CleanDirectoryList\n\n#  MinGWSearchPathExtras\n\n#  FindWindowsSDK\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# what the architecture used to be called\n",
        "Line" : 64,
        "CharPositionInLine" : 19
      },
      "2" : {
        "Text" : "# what the WDK for Win8+ calls this architecture\n",
        "Line" : 65,
        "CharPositionInLine" : 18
      },
      "3" : {
        "Text" : "# what the architecture used to be called\n\n# what the WDK for Win8+ calls this architecture\n",
        "Line" : 67,
        "CharPositionInLine" : 18
      },
      "4" : {
        "Text" : "# Win2k min requirement\n\n# WinXP min requirement\n",
        "Line" : 87,
        "CharPositionInLine" : 21
      },
      "5" : {
        "Text" : "# Win Server 2003 min requirement\n",
        "Line" : 89,
        "CharPositionInLine" : 22
      },
      "6" : {
        "Text" : "# Win Vista (\"Long Horn\") min requirement\n",
        "Line" : 90,
        "CharPositionInLine" : 21
      },
      "7" : {
        "Text" : "# Win Vista (\"Long Horn\") min requirement\n",
        "Line" : 91,
        "CharPositionInLine" : 25
      },
      "8" : {
        "Text" : "# Win 7 min requirement\n",
        "Line" : 92,
        "CharPositionInLine" : 22
      },
      "9" : {
        "Text" : "# Win 7 min requirement\n",
        "Line" : 93,
        "CharPositionInLine" : 26
      },
      "10" : {
        "Text" : "# Win 8 min requirement\n",
        "Line" : 94,
        "CharPositionInLine" : 22
      },
      "11" : {
        "Text" : "# Win 8 min requirement\n",
        "Line" : 95,
        "CharPositionInLine" : 26
      },
      "12" : {
        "Text" : "# Might want to look close to the library first for the includes.\n",
        "Line" : 97,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# Win2k min requirement\n\n# WinXP min requirement\n",
        "Line" : 117,
        "CharPositionInLine" : 21
      },
      "14" : {
        "Text" : "# Win Server 2003 min requirement\n",
        "Line" : 119,
        "CharPositionInLine" : 22
      },
      "15" : {
        "Text" : "# Win Vista (\"Long Horn\") min requirement\n",
        "Line" : 120,
        "CharPositionInLine" : 21
      },
      "16" : {
        "Text" : "# Win Vista (\"Long Horn\") min requirement\n",
        "Line" : 121,
        "CharPositionInLine" : 25
      },
      "17" : {
        "Text" : "# Win 7 min requirement\n",
        "Line" : 122,
        "CharPositionInLine" : 22
      },
      "18" : {
        "Text" : "# Win 7 min requirement\n",
        "Line" : 123,
        "CharPositionInLine" : 26
      },
      "19" : {
        "Text" : "# Win 8 min requirement\n",
        "Line" : 124,
        "CharPositionInLine" : 22
      },
      "20" : {
        "Text" : "# Win 8 min requirement\n",
        "Line" : 125,
        "CharPositionInLine" : 26
      },
      "21" : {
        "Text" : "# otherwise you get weird compile errors\n",
        "Line" : 139,
        "CharPositionInLine" : 36
      },
      "22" : {
        "Text" : "# This is the non-MSVC path.\n",
        "Line" : 168,
        "CharPositionInLine" : 1
      },
      "23" : {
        "Text" : "# Don't need that CRT include dir for WDK 8+\n",
        "Line" : 279,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 24
    },
    "cmake/FindWindowsSDK.cmake" : {
      "ObjectId" : "e136b8976f8326e813e05ad38e8bd966a26caf53",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find the Windows SDK aka Platform SDK\n\n#\n\n# Relevant Wikipedia article: http://en.wikipedia.org/wiki/Microsoft_Windows_SDK\n\n#\n\n# Pass \"COMPONENTS tools\" to ignore Visual Studio version checks: in case\n\n# you just want the tool binaries to run, rather than the libraries and headers\n\n# for compiling.\n\n#\n\n# Variables:\n\n#  WINDOWSSDK_FOUND - if any version of the windows or platform SDK was found that is usable with the current version of visual studio\n\n#  WINDOWSSDK_LATEST_DIR\n\n#  WINDOWSSDK_LATEST_NAME\n\n#  WINDOWSSDK_FOUND_PREFERENCE - if we found an entry indicating a \"preferred\" SDK listed for this visual studio version\n\n#  WINDOWSSDK_PREFERRED_DIR\n\n#  WINDOWSSDK_PREFERRED_NAME\n\n#\n\n#  WINDOWSSDK_DIRS - contains no duplicates, ordered most recent first.\n\n#  WINDOWSSDK_PREFERRED_FIRST_DIRS - contains no duplicates, ordered with preferred first, followed by the rest in descending recency\n\n#\n\n# Functions:\n\n#  windowssdk_name_lookup(<directory> <output variable>) - Find the name corresponding with the SDK directory you pass in, or\n\n#     NOTFOUND if not recognized. Your directory must be one of WINDOWSSDK_DIRS for this to work.\n\n#\n\n#  windowssdk_build_lookup(<directory> <output variable>) - Find the build version number corresponding with the SDK directory you pass in, or\n\n#     NOTFOUND if not recognized. Your directory must be one of WINDOWSSDK_DIRS for this to work.\n\n#\n\n#  get_windowssdk_from_component(<file or dir> <output variable>) - Given a library or include dir,\n\n#     find the Windows SDK root dir corresponding to it, or NOTFOUND if unrecognized.\n\n#\n\n#  get_windowssdk_library_dirs(<directory> <output variable>) - Find the architecture-appropriate\n\n#     library directories corresponding to the SDK directory you pass in (or NOTFOUND if none)\n\n#\n\n#  get_windowssdk_library_dirs_multiple(<output variable> <directory> ...) - Find the architecture-appropriate\n\n#     library directories corresponding to the SDK directories you pass in, in order, skipping those not found. NOTFOUND if none at all.\n\n#     Good for passing WINDOWSSDK_DIRS or WINDOWSSDK_DIRS to if you really just want a file and don't care where from.\n\n#\n\n#  get_windowssdk_include_dirs(<directory> <output variable>) - Find the\n\n#     include directories corresponding to the SDK directory you pass in (or NOTFOUND if none)\n\n#\n\n#  get_windowssdk_include_dirs_multiple(<output variable> <directory> ...) - Find the\n\n#     include directories corresponding to the SDK directories you pass in, in order, skipping those not found. NOTFOUND if none at all.\n\n#     Good for passing WINDOWSSDK_DIRS or WINDOWSSDK_DIRS to if you really just want a file and don't care where from.\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Original Author:\n\n# 2012 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2012.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# pre-output\n",
        "Line" : 57,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : "# pre-output\n",
        "Line" : 58,
        "CharPositionInLine" : 19
      },
      "3" : {
        "Text" : "# pre-output\n",
        "Line" : 59,
        "CharPositionInLine" : 26
      },
      "4" : {
        "Text" : "# pre-output\n",
        "Line" : 60,
        "CharPositionInLine" : 28
      },
      "5" : {
        "Text" : "# search parameters\n",
        "Line" : 61,
        "CharPositionInLine" : 23
      },
      "6" : {
        "Text" : "# search parameters\n",
        "Line" : 62,
        "CharPositionInLine" : 18
      },
      "7" : {
        "Text" : "# Redstone aka Win10 1607 \"Anniversary Update\"\n\n# TH2 aka Win10 1511\n\n# Win10 RTM\n\n# just ucrt\n",
        "Line" : 76,
        "CharPositionInLine" : 14
      },
      "8" : {
        "Text" : "# Appends to the three main pre-output lists used only if the path exists\n\n# and is not already in the list.\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Path invalid - do not add\n",
        "Line" : 95,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Path already in list - do not add\n",
        "Line" : 100,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Not yet in the list, so we'll add it\n",
        "Line" : 104,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# Appends to the \"preferred SDK\" lists only if the path exists\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Path invalid - do not add\n",
        "Line" : 122,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Path already in list - do not add\n",
        "Line" : 130,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Not yet in the list, so we'll add it\n",
        "Line" : 134,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "# Just in case we somehow missed it:\n",
        "Line" : 138,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "# Given a version like v7.0A, looks for an SDK in the registry under \"Microsoft SDKs\".\n\n# If the given version might be in both HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Microsoft SDKs\\\\Windows\n\n# and HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Windows Kits\\\\Installed Roots aka \"Windows Kits\",\n\n# use this macro first, since these registry keys usually have more information.\n\n#\n\n# Pass a \"default\" build number as an extra argument in case we can't find it.\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Default build number passed as extra argument\n",
        "Line" : 156,
        "CharPositionInLine" : 1
      },
      "19" : {
        "Text" : "# See if the registry holds a Microsoft-mutilated, err, designated, product name\n\n# (just using get_filename_component to execute the registry lookup)\n",
        "Line" : 158,
        "CharPositionInLine" : 1
      },
      "20" : {
        "Text" : "# Got a product name\n",
        "Line" : 164,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# try for a version to augment our name\n\n# (just using get_filename_component to execute the registry lookup)\n",
        "Line" : 168,
        "CharPositionInLine" : 1
      },
      "22" : {
        "Text" : "# Got a version\n",
        "Line" : 174,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# and it's not an invalid one with two dots in it:\n\n# use to override the default build\n",
        "Line" : 176,
        "CharPositionInLine" : 3
      },
      "24" : {
        "Text" : "# Got a version that's not already in the name, let's use it to improve our name.\n",
        "Line" : 180,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# Given a name for identification purposes, the build number, and a key (technically a \"value name\")\n\n# corresponding to a Windows SDK packaged as a \"Windows Kit\", look for it\n\n# in HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Windows Kits\\\\Installed Roots\n\n# Note that the key or \"value name\" tends to be something weird like KitsRoot81 -\n\n# no easy way to predict, just have to observe them in the wild.\n\n# Doesn't hurt to also try _winsdk_check_microsoft_sdks_registry for these:\n\n# sometimes you get keys in both parts of the registry (in the wow64 portion especially),\n\n# and the non-\"Windows Kits\" location is often more descriptive.\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Given a name for identification purposes and the build number\n\n# corresponding to a Windows 10 SDK packaged as a \"Windows Kit\", look for it\n\n# in HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Windows Kits\\\\Installed Roots\n\n# Doesn't hurt to also try _winsdk_check_microsoft_sdks_registry for these:\n\n# sometimes you get keys in both parts of the registry (in the wow64 portion especially),\n\n# and the non-\"Windows Kits\" location is often more descriptive.\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# not found\n",
        "Line" : 214,
        "CharPositionInLine" : 11
      },
      "28" : {
        "Text" : "# Given a name for indentification purposes, the build number, and the associated package GUID,\n\n# look in the registry under both HKLM and HKCU in \\\\SOFTWARE\\\\Microsoft\\\\MicrosoftSDK\\\\InstalledSDKs\\\\\n\n# for that guid and the SDK it points to.\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "###\n\n# Detect toolchain information: to know whether it's OK to use Vista+ only SDKs\n\n###\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# VC 10 and older has broad target support\n",
        "Line" : 238,
        "CharPositionInLine" : 1
      },
      "31" : {
        "Text" : "# VC 11 by default targets Vista and later only, so we can add a few more SDKs that (might?) only work on vista+\n",
        "Line" : 240,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# This is the XP-compatible v110+ toolset\n",
        "Line" : 242,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# This is the VS2010/VS2008 toolset\n",
        "Line" : 244,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# OK, we're VC11 or newer and not using a backlevel or XP-compatible toolset.\n\n# These versions have no XP (and possibly Vista pre-SP1) support\n",
        "Line" : 246,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "###\n\n# MSVC version checks - keeps messy conditionals in one place\n\n# (messy because of _WINDOWSSDK_IGNOREMSVC)\n\n###\n",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Newer than VS .NET/VS Toolkit 2003\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# VS2005/2008\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# VS2013+\n",
        "Line" : 279,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "###\n\n# START body of find module\n\n###\n",
        "Line" : 285,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Newer than VS .NET/VS Toolkit 2003\n",
        "Line" : 288,
        "CharPositionInLine" : 30
      },
      "41" : {
        "Text" : "###\n\n# Look for \"preferred\" SDKs\n\n###\n",
        "Line" : 289,
        "CharPositionInLine" : 1
      },
      "42" : {
        "Text" : "# Environment variable for SDK dir\n",
        "Line" : 293,
        "CharPositionInLine" : 1
      },
      "43" : {
        "Text" : "# Per-user current Windows SDK for VS2005/2008\n",
        "Line" : 299,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# System-wide current Windows SDK for VS2005/2008\n",
        "Line" : 305,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "###\n\n# Begin the massive list of SDK searching!\n\n###\n",
        "Line" : 312,
        "CharPositionInLine" : 1
      },
      "46" : {
        "Text" : "# These require at least Visual Studio 2013 (VC12)\n",
        "Line" : 316,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "# Windows Software Development Kit (SDK) for Windows 10\n\n# Several different versions living in the same directory - if nothing else we can assume RTM (10240)\n",
        "Line" : 320,
        "CharPositionInLine" : 2
      },
      "48" : {
        "Text" : "# vista-only and 2013+\n",
        "Line" : 326,
        "CharPositionInLine" : 9
      },
      "49" : {
        "Text" : "# Included in Visual Studio 2013\n\n# Includes the v120_xp toolset\n",
        "Line" : 328,
        "CharPositionInLine" : 1
      },
      "50" : {
        "Text" : "# Windows Software Development Kit (SDK) for Windows 8.1\n\n# http://msdn.microsoft.com/en-gb/windows/desktop/bg162891\n",
        "Line" : 333,
        "CharPositionInLine" : 2
      },
      "51" : {
        "Text" : "# vista-only and 2013+\n",
        "Line" : 337,
        "CharPositionInLine" : 9
      },
      "52" : {
        "Text" : "# Included in Visual Studio 2012\n",
        "Line" : 340,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "# Microsoft Windows SDK for Windows 8 and .NET Framework 4.5\n\n# This is the first version to also include the DirectX SDK\n\n# http://msdn.microsoft.com/en-US/windows/desktop/hh852363.aspx\n",
        "Line" : 343,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "# vista-only\n",
        "Line" : 348,
        "CharPositionInLine" : 9
      },
      "55" : {
        "Text" : "# Included with VS 2012 Update 1 or later\n\n# Introduces v110_xp toolset\n",
        "Line" : 350,
        "CharPositionInLine" : 1
      },
      "56" : {
        "Text" : "# Microsoft Windows SDK for Windows 7 and .NET Framework 4\n\n# http://www.microsoft.com/downloads/en/details.aspx?FamilyID=6b6c21d2-2006-4afa-9702-529fa782d63b\n",
        "Line" : 354,
        "CharPositionInLine" : 2
      },
      "57" : {
        "Text" : "# vista-only\n",
        "Line" : 357,
        "CharPositionInLine" : 9
      },
      "58" : {
        "Text" : "# Included with VS 2010\n",
        "Line" : 359,
        "CharPositionInLine" : 1
      },
      "59" : {
        "Text" : "# Windows SDK for Windows 7 and .NET Framework 3.5 SP1\n\n# Works with VC9\n\n# http://www.microsoft.com/en-us/download/details.aspx?id=18950\n",
        "Line" : 362,
        "CharPositionInLine" : 1
      },
      "60" : {
        "Text" : "# Two versions call themselves \"v6.1\":\n\n# Older:\n\n# Windows Vista Update & .NET 3.0 SDK\n\n# http://www.microsoft.com/en-us/download/details.aspx?id=14477\n",
        "Line" : 367,
        "CharPositionInLine" : 1
      },
      "61" : {
        "Text" : "# Newer:\n\n# Windows Server 2008 & .NET 3.5 SDK\n\n# may have broken VS9SP1? they recommend v7.0 instead, or a KB...\n\n# http://www.microsoft.com/en-us/download/details.aspx?id=24826\n",
        "Line" : 372,
        "CharPositionInLine" : 1
      },
      "62" : {
        "Text" : "# Included in VS 2008\n",
        "Line" : 378,
        "CharPositionInLine" : 1
      },
      "63" : {
        "Text" : "# Microsoft Windows Software Development Kit for Windows Vista and .NET Framework 3.0 Runtime Components\n\n# http://blogs.msdn.com/b/stanley/archive/2006/11/08/microsoft-windows-software-development-kit-for-windows-vista-and-net-framework-3-0-runtime-components.aspx\n",
        "Line" : 381,
        "CharPositionInLine" : 1
      },
      "64" : {
        "Text" : "# Let's not forget the Platform SDKs, which sometimes are useful!\n",
        "Line" : 386,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "###\n\n# Finally, look for \"preferred\" SDKs\n\n###\n",
        "Line" : 391,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# Newer than VS .NET/VS Toolkit 2003\n",
        "Line" : 394,
        "CharPositionInLine" : 30
      },
      "67" : {
        "Text" : "# Environment variable for SDK dir\n",
        "Line" : 397,
        "CharPositionInLine" : 1
      },
      "68" : {
        "Text" : "# Per-user current Windows SDK for VS2005/2008\n",
        "Line" : 403,
        "CharPositionInLine" : 2
      },
      "69" : {
        "Text" : "# System-wide current Windows SDK for VS2005/2008\n",
        "Line" : 409,
        "CharPositionInLine" : 2
      },
      "70" : {
        "Text" : "# If we found something...\n",
        "Line" : 440,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# Fallback, in case no preference found.\n",
        "Line" : 447,
        "CharPositionInLine" : 1
      },
      "72" : {
        "Text" : "# If we found indications of a user preference...\n",
        "Line" : 454,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# Internal: Architecture-appropriate library directory names.\n",
        "Line" : 472,
        "CharPositionInLine" : 1
      },
      "74" : {
        "Text" : "# Only supported in Win10 SDK and up.\n",
        "Line" : 475,
        "CharPositionInLine" : 3
      },
      "75" : {
        "Text" : "# what the WDK for Win8+ calls this architecture\n",
        "Line" : 476,
        "CharPositionInLine" : 28
      },
      "76" : {
        "Text" : "# what the architecture used to be called in oldest SDKs\n",
        "Line" : 478,
        "CharPositionInLine" : 30
      },
      "77" : {
        "Text" : "# what the architecture used to be called\n",
        "Line" : 479,
        "CharPositionInLine" : 25
      },
      "78" : {
        "Text" : "# what the WDK for Win8+ calls this architecture\n",
        "Line" : 480,
        "CharPositionInLine" : 26
      },
      "79" : {
        "Text" : "# what the architecture used to be called in oldest SDKs\n",
        "Line" : 484,
        "CharPositionInLine" : 30
      },
      "80" : {
        "Text" : "# what the architecture used to be called\n",
        "Line" : 485,
        "CharPositionInLine" : 27
      },
      "81" : {
        "Text" : "# what the WDK for Win8+ calls this architecture\n",
        "Line" : 486,
        "CharPositionInLine" : 26
      },
      "82" : {
        "Text" : "# what the architecture used to be called in oldest SDKs\n\n# what the architecture used to be called\n\n# what the WDK for Win8+ calls this architecture\n",
        "Line" : 488,
        "CharPositionInLine" : 26
      },
      "83" : {
        "Text" : "# If we don't have any \"parent directory\" items...\n",
        "Line" : 501,
        "CharPositionInLine" : 3
      },
      "84" : {
        "Text" : "# Fail.\n",
        "Line" : 507,
        "CharPositionInLine" : 2
      },
      "85" : {
        "Text" : "# SDKs like 7.1A\n",
        "Line" : 513,
        "CharPositionInLine" : 28
      },
      "86" : {
        "Text" : "# just because some SDKs have x86 dir and root dir\n",
        "Line" : 514,
        "CharPositionInLine" : 25
      },
      "87" : {
        "Text" : "# Win2k min requirement\n\n# WinXP min requirement\n",
        "Line" : 515,
        "CharPositionInLine" : 29
      },
      "88" : {
        "Text" : "# Win Server 2003 min requirement\n",
        "Line" : 517,
        "CharPositionInLine" : 30
      },
      "89" : {
        "Text" : "# Win Vista (\"Long Horn\") min requirement\n",
        "Line" : 519,
        "CharPositionInLine" : 33
      },
      "90" : {
        "Text" : "# Win 7 min requirement\n",
        "Line" : 521,
        "CharPositionInLine" : 34
      },
      "91" : {
        "Text" : "# Win Vista (\"Long Horn\") min requirement\n",
        "Line" : 524,
        "CharPositionInLine" : 7
      },
      "92" : {
        "Text" : "# Win 7 min requirement\n\n# Win 8 min requirement\n",
        "Line" : 525,
        "CharPositionInLine" : 8
      },
      "93" : {
        "Text" : "# Win 8.1 min requirement\n",
        "Line" : 527,
        "CharPositionInLine" : 11
      },
      "94" : {
        "Text" : "# Look for WDF libraries in Win10+ SDK\n",
        "Line" : 537,
        "CharPositionInLine" : 2
      },
      "95" : {
        "Text" : "# Look in each Win10+ SDK version for the components\n",
        "Line" : 545,
        "CharPositionInLine" : 2
      },
      "96" : {
        "Text" : "# Check to see if a library actually exists here.\n",
        "Line" : 553,
        "CharPositionInLine" : 3
      },
      "97" : {
        "Text" : "# Check to see if a header file actually exists here.\n",
        "Line" : 583,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 98
    },
    "cmake/Findcppcheck.cmake" : {
      "ObjectId" : "2dcf799a7dfe6054a17d281d7fa33196608c2a93",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find cppcheck tool\n\n#\n\n# Cache Variables:\n\n#  CPPCHECK_EXECUTABLE\n\n#\n\n# Non-cache variables you might use in your CMakeLists.txt:\n\n#  CPPCHECK_FOUND\n\n#  CPPCHECK_POSSIBLEERROR_ARG\n\n#  CPPCHECK_UNUSEDFUNC_ARG\n\n#  CPPCHECK_STYLE_ARG\n\n#  CPPCHECK_QUIET_ARG\n\n#  CPPCHECK_INCLUDEPATH_ARG\n\n#  CPPCHECK_FAIL_REGULAR_EXPRESSION\n\n#  CPPCHECK_WARN_REGULAR_EXPRESSION\n\n#  CPPCHECK_MARK_AS_ADVANCED - whether to mark our vars as advanced even\n\n#    if we don't find this program.\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# cppcheck app bundles on Mac OS X are GUI, we want command line only\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If we have a custom path, look there first.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Restore original setting for appbundle finding\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Find out where our test file is\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Check for the two types of command line arguments by just trying them\n",
        "Line" : 104,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# Old arguments\n",
        "Line" : 133,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# No idea - some other issue must be getting in the way\n",
        "Line" : 139,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "cmake/Findlibi2c-dev.cmake" : {
      "ObjectId" : "7973b43903b22a61c0f89f7545aa1d6a963c69c7",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find libi2c-dev, which is a header-only library on\n\n# Raspberry Pi\n\n#\n\n# Cache Variables: (probably not for direct use in your scripts)\n\n#  I2CDEV_INCLUDE_DIR\n\n#\n\n# Non-cache variables you might use in your CMakeLists.txt:\n\n#  I2CDEV_FOUND\n\n#  I2CDEV_INCLUDE_DIRS\n\n#     (You need to include linux/i2c-dev.h from this location)\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Copyright ReliaSolve 2016.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Findquatlib.cmake" : {
      "ObjectId" : "efca27f70af8c3b144193a2c6be8dcdf152d8172",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find quatlib\n\n# Find the quatlib headers and libraries.\n\n#\n\n#  QUATLIB_INCLUDE_DIRS - where to find quat.h\n\n#  QUATLIB_LIBRARIES    - List of libraries when using quatlib.\n\n#  QUATLIB_FOUND        - True if quatlib found.\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Look for the header file.\n",
        "Line" : 19,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# 64-bit dir: only set on win64\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# 32-bit dir: only set on win64\n",
        "Line" : 45,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# 32-bit dir on win32, useless to us on win64\n",
        "Line" : 48,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "# Look for the header file.\n",
        "Line" : 53,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# Look for the library.\n",
        "Line" : 67,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set QUATLIB_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cmake/GetCompilerInfoString.cmake" : {
      "ObjectId" : "1ee5b1f5a788aa8da27a8006c854fc6e7b495015",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Utility function to return a human-useful-only string ID'ing the compiler\n\n#\n\n#  get_compiler_info_string(<resultvar>)\n\n#\n\n# and some helper functions:\n\n#  get_gcc_version(<resultvar>)\n\n#  get_vs_short_version_string(<generator> <resultvar>)\n\n#\n\n# You might consider using it when setting up CTest options, for example:\n\n#  include(GetCompilerInfoString)\n\n#  get_compiler_info_string(COMPILERID)\n\n#  set(CTEST_BUILD_NAME \"${CMAKE_SYSTEM}-${CMAKE_SYSTEM_PROCESSOR}-${COMPILERID}\")\n\n#\n\n# Requires these CMake modules:\n\n#  no additional modules required\n\n#\n\n# Original Author:\n\n# 2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Some functions based on cmake-2.8.0 modules FindBoost.cmake and CTest.cmake\n\n#=============================================================================\n\n# Copyright 2006-2009 Kitware, Inc.\n\n# Copyright 2006-2008 Andreas Schneider <mail@cynapses.org>\n\n# Copyright 2007      Wengo\n\n# Copyright 2007      Mike Jackson\n\n# Copyright 2008      Andreas Pakulat <apaku@gmx.de>\n\n# Copyright 2008-2009 Philip Lowman <philip@yhbt.com>\n\n# Copyright 2010      Iowa State University (Ryan Pavlik <abiryan@ryand.net>)\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# CMake - Cross Platform Makefile Generator\n\n# Copyright 2000-2009 Kitware, Inc., Insight Software Consortium\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n#\n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We're running in CTest - use that generator.\n",
        "Line" : 87,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Also for use in CTest scripts\n",
        "Line" : 92,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Parse version for Visual Studio\n",
        "Line" : 97,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Parse version for GCC\n",
        "Line" : 104,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Some other compiler we don't handle in more detail yet.\n",
        "Line" : 109,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Return _verstring\n",
        "Line" : 114,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "## Based on a function in FindBoost.cmake from CMake 2.8.0\n\n#-------------------------------------------------------------------------------\n\n#\n\n# Runs compiler with \"-dumpversion\" and parses major/minor\n\n# version with a regex.\n\n#\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Based on a function in CTest.cmake from CMake 2.8.0\n\n#-------------------------------------------------------------------------------\n\n#\n\n# function to turn generator name into a version string\n\n# like vs7 vs71 vs8 vs9\n\n#\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# handle the weird one\n",
        "Line" : 158,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 10
    },
    "cmake/GetDefineString.cmake" : {
      "ObjectId" : "832fea8d146bbdaf5303d785e7a24e1a2300b194",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Script to get the value of a preprocessor definition that is a string,\n\n# after including the given files\n\n# Requires that the associated source file be present: GetDefineString.cpp.in.\n\n#\n\n#   get_define_string(NAME <define_name> [INCLUDES <files>] RESULT <variable>\n\n#                     [FLAGS <compile-flags>]\n\n#                     [INCLUDE_DIRS <include-dirs>]\n\n#                     [DEFINES] <-Ddefinitions>)\n\n# Original Author:\n\n# 2014 Ryan Pavlik <ryan@sensics.com> <abiryan@ryand.net>\n\n#\n\n# Copyright Sensics, Inc. 2014.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/GetDirectoryList.cmake" : {
      "ObjectId" : "60f2a01365b2a918b18d28364f75ee870844b41a",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Returns a list of the parent directories of all files passed\n\n#\n\n#  get_directory_list(<listvar> <file path> [<additional file paths>...])\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# combine variable's current value with additional list items\n",
        "Line" : 23,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Initial list cleaning\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Grab the absolute path of each actual directory\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Clean up the output list now\n",
        "Line" : 42,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "# return _out\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "cmake/GetGitRevisionDescription.cmake" : {
      "ObjectId" : "85eae1562fe2011e9800787819b21f30a8898eb4",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Returns a version string from Git\n\n#\n\n# These functions force a re-configure on each git commit so that you can\n\n# trust the values of the variables in your build system.\n\n#\n\n#  get_git_head_revision(<refspecvar> <hashvar> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the refspec and sha hash of the current head revision\n\n#\n\n#  git_describe(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe on the source tree, and adjusting\n\n# the output so that it tests false if an error occurs.\n\n#\n\n#  git_get_exact_tag(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe --exact-match on the source tree,\n\n# and adjusting the output so that it tests false if there was no exact\n\n# matching tag.\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We must run the following at \"include\" time, not at function call time,\n\n# to find the path to this module rather than the path to a calling list file\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# .git dir not found, search parent directories\n",
        "Line" : 45,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "# We have reached the root directory, we are not in git\n",
        "Line" : 49,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# check if this is a submodule\n",
        "Line" : 56,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# TODO sanitize\n\n#if((${ARGN}\" MATCHES \"&&\") OR\n\n#\t(ARGN MATCHES \"||\") OR\n\n#\t(ARGN MATCHES \"\\\\;\"))\n\n#\tmessage(\"Please report the following error to the project!\")\n\n#\tmessage(FATAL_ERROR \"Looks like someone's doing something nefarious with git_describe! Passed arguments ${ARGN}\")\n\n#endif()\n",
        "Line" : 97,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "#message(STATUS \"Arguments to execute_process: ${ARGN}\")\n",
        "Line" : 105,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 7
    },
    "cmake/ListCombinations.cmake" : {
      "ObjectId" : "4321f624a8d4ad8c2b4d459c3e2061ce99333172",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Combine lists of prefixes and suffixes in all combinations\n\n#\n\n#  list_combinations(var PREFIXES listitems... SUFFIXES listitems...) -\n\n#   where var is the name of your desired output variable and PREFIXES\n\n#   and SUFFIXES are special arguments that indicate the start of your\n\n#   list of prefixes or suffixes respectively.\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Parse arguments\n",
        "Line" : 24,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    },
    "cmake/MSVCMultipleProcessCompile.cmake" : {
      "ObjectId" : "aad4eabded62acc0e0ecc97c9c154103176f800d",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Compile with multiple processes on MSVC\n\n#\n\n#  include(MSVCMultipleProcessCompile)\n\n#\n\n# Requires these CMake modules:\n\n#  ListCombinations.cmake\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Only available in VS 2005 and newer\n",
        "Line" : 19,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    },
    "cmake/MinGWSearchPathExtras.cmake" : {
      "ObjectId" : "cd9fe69bb1c983106644e315cd7877b59510808b",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Additional help finding search paths on MinGW distributions, including MSYS2.\n\n#\n\n# Much of this is really more in the purview of CMake or the packages of CMake for\n\n# those distributions, but if I can centralize/simplify the pain here, it's worth doing.\n\n#\n\n# Variables: (all are internal cache variables)\n\n#  MINGWSEARCH_INCLUDE_DIRS - use under PATHS in your find_path() commands\n\n#  MINGWSEARCH_LIBRARY_DIRS - use under PATHS in your find_library() commands\n\n#  MINGWSEARCH_PREFIXES - suitable for temporary use in CMAKE_FIND_ROOT_PATH or CMAKE_PREFIX_PATH.\n\n#  MINGWSEARCH_TARGET_TRIPLE - something like x86_64-w64-mingw32 or i686-w64-mingw32, use as you see fit.\n\n#\n\n# Original Author:\n\n# 2016 Ryan Pavlik <ryan@sensics.com> <ryan.pavlik@gmail.com>\n\n#\n\n# Copyright Sensics, Inc. 2016.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Helper function\n\n###\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#message(STATUS \"conditional add to ${_var}: ${_path}\")\n",
        "Line" : 25,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Path invalid - do not add\n",
        "Line" : 27,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : "# Path already in list - do not add\n",
        "Line" : 32,
        "CharPositionInLine" : 12
      },
      "5" : {
        "Text" : "# Not yet in the list, so we'll add it\n",
        "Line" : 35,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Clear the working variables.\n",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Try to find the string like x86_64-w64-mingw32 by parsing the implicit link directories...\n\n# TODO this is a hack that either should be resolved in CMake or in MSYS2's package of CMake.\n",
        "Line" : 46,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Try adding the parallel include dir\n",
        "Line" : 53,
        "CharPositionInLine" : 12
      },
      "9" : {
        "Text" : "# Try going up a level, since the directory with the target is usually a sibling to the main prefix.\n",
        "Line" : 59,
        "CharPositionInLine" : 16
      },
      "10" : {
        "Text" : "# If we could go up a level, add that include dir too.\n",
        "Line" : 62,
        "CharPositionInLine" : 20
      },
      "11" : {
        "Text" : "###\n\n# Output results.\n\n###\n",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "#message(STATUS \"MINGWSEARCH_INCLUDE_DIRS ${MINGWSEARCH_INCLUDE_DIRS}\")\n",
        "Line" : 75,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "#message(STATUS \"MINGWSEARCH_LIBRARY_DIRS ${MINGWSEARCH_LIBRARY_DIRS}\")\n",
        "Line" : 80,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "#message(STATUS \"MINGWSEARCH_PREFIXES ${MINGWSEARCH_PREFIXES}\")\n",
        "Line" : 85,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "#message(STATUS \"MINGWSEARCH_TARGET_TRIPLE ${MINGWSEARCH_TARGET_TRIPLE}\")\n",
        "Line" : 90,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 16
    },
    "cmake/OptionRequires.cmake" : {
      "ObjectId" : "662121f5796efd9215e96ef962a5e453e46561dd",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Add an option that depends on one or more variables being true.\n\n#\n\n#  option_requires(<option_name> <description> <variable_name> [<variable_name>...])\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/PrefixListGlob.cmake" : {
      "ObjectId" : "3b1bb6460064bf62877623358d7177989ae77626",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - For each given prefix in a list, glob using the prefix+pattern\n\n#\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/ProgramFilesGlob.cmake" : {
      "ObjectId" : "9d7a9cc50999066a0c459b4b335fd0e846b0baef",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find bit-appropriate program files directories matching a given pattern\n\n#\n\n# Requires these CMake modules:\n\n#  CleanDirectoryList\n\n#  PrefixListGlob\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# caution - ENV{ProgramFiles} on Win64 is adjusted to point to the arch\n\n# of the running executable which, since CMake is 32-bit on Windows as\n\n# I write this, will always be = $ENV{ProgramFiles(x86)}.\n\n# Thus, we only use this environment variable if we are on a 32 machine\n",
        "Line" : 26,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# 32-bit dir on win32, useless to us on win64\n",
        "Line" : 31,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# 32-bit dir: only set on win64\n",
        "Line" : 34,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# 64-bit dir: only set on win64\n",
        "Line" : 38,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# 64-bit build on win64\n",
        "Line" : 45,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# 32-bit build on win64\n",
        "Line" : 49,
        "CharPositionInLine" : 3
      },
      "7" : {
        "Text" : "# 32-bit build on win32\n",
        "Line" : 52,
        "CharPositionInLine" : 3
      },
      "8" : {
        "Text" : "# 64-bit build on win64\n\n# look in the \"32 bit\" (c:\\program files (x86)\\) directory as a\n\n# fallback in case of weird/poorly written installers, like those\n\n# that put both 64- and 32-bit libs in the same program files directory\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# 32-bit build on win64\n\n# look in the \"64 bit\" (c:\\program files\\) directory as a fallback\n\n# in case of old/weird/poorly written installers\n",
        "Line" : 72,
        "CharPositionInLine" : 3
      },
      "10" : {
        "Text" : "# 32-bit build on win32\n",
        "Line" : 77,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 11
    },
    "cmake/SetDefaultBuildType.cmake" : {
      "ObjectId" : "cd29e32ac23866e6fa40439bd8df3ae001e6c4d9",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Set a developer-chosen default build type\n\n#\n\n# Requires these CMake modules:\n\n#  no additional modules required\n\n#\n\n# Original Author:\n\n# 2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#if(DEFINED CMAKE_BUILD_TYPE AND NOT CMAKE_BUILD_TYPE)\n",
        "Line" : 24,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    },
    "cmake/UseBackportedModules.cmake" : {
      "ObjectId" : "7ad3baac330a151ea08f1eff172e52f39c72752c",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Do a version-dependent check and auto-include backported modules dirs\n\n#\n\n# Name your module directories cmake-*-modules where * is the full\n\n# (maj.min.patch) version number that they came from.  You can use\n\n# subdirectories within those directories, if you like - all directories\n\n# inside of a cmake-*-modules dir for a newer version of CMake that what\n\n# we're running, that contain one or more .cmake files, will be appended\n\n# to the CMAKE_MODULE_PATH.\n\n#\n\n# When backporting modules, be sure to test them and follow copyright\n\n# instructions (usually updating copyright notices)\n\n#\n\n# Requires these CMake modules:\n\n#  CleanDirectoryList\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# defined in >=2.6.3\n",
        "Line" : 26,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "# No debugging output please\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Autoinclude files from oldest version to newest version\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add the module path from newest version to oldest version\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/WarningDev.cmake" : {
      "ObjectId" : "851b5f5e88c9eec3be5c5b65b4902f1b78e7e3d2",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Print a developer warning, using author_warning if we have cmake 2.8\n\n#\n\n#  warning_dev(\"your desired message\")\n\n#\n\n# Original Author:\n\n# 2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMake version <2.8.0\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "cmake/cmake-2.8.0-modules/features/SelectLibraryConfigurations.cmake" : {
      "ObjectId" : "ee1220ccda70a335fe0f73780382df060cbb1c87",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# select_library_configurations( basename )\n\n#\n\n# This macro takes a library base name as an argument, and will choose good\n\n# values for basename_LIBRARY, basename_LIBRARIES, basename_LIBRARY_DEBUG, and\n\n# basename_LIBRARY_RELEASE depending on what has been found and set.  If only\n\n# basename_LIBRARY_RELEASE is defined, basename_LIBRARY, basename_LIBRARY_DEBUG,\n\n# and basename_LIBRARY_RELEASE will be set to the release value.  If only\n\n# basename_LIBRARY_DEBUG is defined, then basename_LIBRARY,\n\n# basename_LIBRARY_DEBUG and basename_LIBRARY_RELEASE will take the debug value.  \n\n#\n\n# If the generator supports configuration types, then basename_LIBRARY and\n\n# basename_LIBRARIES will be set with debug and optimized flags specifying the\n\n# library to be used for the given configuration.  If no build type has been set\n\n# or the generator in use does not support configuration types, then\n\n# basename_LIBRARY and basename_LIBRARIES will take only the release values.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2009 Kitware, Inc.\n\n# Copyright 2009 Will Dicharry <wdicharry@stellarscience.com>\n\n# Copyright 2005-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see below.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# \n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# \n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n# \n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n# \n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n\n# This macro was adapted from the FindQt4 CMake module and is maintained by Will\n\n# Dicharry <wdicharry@stellarscience.com>.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Utility macro to check if one variable exists while another doesn't, and set\n\n# one that doesn't exist to the one that exists.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# if only the release version was found, set the debug to be the release\n\n# version.\n",
        "Line" : 72,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# if only the debug version was found, set the release value to be the\n\n# debug value.\n",
        "Line" : 75,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# if the generator supports configuration types or CMAKE_BUILD_TYPE\n\n# is set, then set optimized and debug options.\n",
        "Line" : 79,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# If there are no configuration types or build type, just use\n\n# the release version\n",
        "Line" : 89,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 7
    },
    "cmake/cmake-2.8.1-modules/patchctestbug10149/CTest.cmake" : {
      "ObjectId" : "0c5aaf4e0c4103a9b0b2402682cbe7ae35b3dbbd",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Configure a project for testing with CTest/CDash\n\n# Include this module in the top CMakeLists.txt file of a project to\n\n# enable testing with CTest and dashboard submissions to CDash:\n\n#   project(MyProject)\n\n#   ...\n\n#   include(CTest)\n\n# The module automatically creates a BUILD_TESTING option that selects\n\n# whether to enable testing support (ON by default).  After including\n\n# the module, use code like\n\n#   if(BUILD_TESTING)\n\n#     # ... CMake code to create tests ...\n\n#   endif()\n\n# to creating tests when testing is enabled.\n\n#\n\n# To enable submissions to a CDash server, create a CTestConfig.cmake\n\n# file at the top of the project with content such as\n\n#   set(CTEST_PROJECT_NAME \"MyProject\")\n\n#   set(CTEST_NIGHTLY_START_TIME \"01:00:00 UTC\")\n\n#   set(CTEST_DROP_METHOD \"http\")\n\n#   set(CTEST_DROP_SITE \"my.cdash.org\")\n\n#   set(CTEST_DROP_LOCATION \"/submit.php?project=MyProject\")\n\n#   set(CTEST_DROP_SITE_CDASH TRUE)\n\n# (the CDash server can provide the file to a project administrator\n\n# who configures 'MyProject').\n\n# Settings in the config file are shared by both this CTest module and\n\n# the CTest command-line tool's dashboard script mode (ctest -S).\n\n#\n\n# While building a project for submission to CDash, CTest scans the\n\n# build output for errors and warnings and reports them with\n\n# surrounding context from the build log.  This generic approach works\n\n# for all build tools, but does not give details about the command\n\n# invocation that produced a given problem.  One may get more detailed\n\n# reports by adding\n\n#   set(CTEST_USE_LAUNCHERS 1)\n\n# to the CTestConfig.cmake file.  When this option is enabled, the\n\n# CTest module tells CMake's Makefile generators to invoke every\n\n# command in the generated build system through a CTest launcher\n\n# program.  (Currently the CTEST_USE_LAUNCHERS option is ignored on\n\n# non-Makefile generators.)  During a manual build each launcher\n\n# transparently runs the command it wraps.  During a CTest-driven\n\n# build for submission to CDash each launcher reports detailed\n\n# information when its command fails or warns.\n\n# (Setting CTEST_USE_LAUNCHERS in CTestConfig.cmake is convenient, but\n\n# also adds the launcher overhead even for manual builds.  One may\n\n# instead set it in a CTest dashboard script and add it to the CMake\n\n# cache for the build tree.)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2005-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see below.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# \n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# \n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n# \n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n# \n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# function to turn generator name into a version string\n\n# like vs7 vs71 vs8 vs9\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Setup some auxilary macros\n",
        "Line" : 108,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# Make sure testing is enabled\n",
        "Line" : 127,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# the project can have a DartConfig.cmake file\n",
        "Line" : 145,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# Dashboard is opened for submissions for a 24 hour period starting at\n\n# the specified NIGHTLY_START_TIME. Time is specified in 24 hour format.\n",
        "Line" : 149,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# set the site name\n",
        "Line" : 252,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# set the build name\n",
        "Line" : 254,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# the build command\n",
        "Line" : 301,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# the default build configuration the ctest build handler will use\n\n# if there is no -C arg given to ctest:\n",
        "Line" : 309,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 11
    },
    "cmake/cmake-2.8.1-modules/patchctestbug10149/CTestScriptMode.cmake" : {
      "ObjectId" : "e6ab6341ba73fd7cc0dd4cab1154ad7c7b31472b",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is read by ctest in script mode (-S)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2009 Kitware, Inc.\n\n# Copyright 2009 Alexander Neundorf <neundorf@kde.org>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see below.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# \n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# \n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n# \n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n# \n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Determine the current system, so this information can be used\n\n# in ctest scripts\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Also load the system specific file, which sets up e.g. the search paths.\n\n# This makes the FIND_XXX() calls work much better\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/cmake-2.8.1-modules/patchctestbug10149/CTestTargets.cmake" : {
      "ObjectId" : "a964a039f039eb24d646371e99010c060e967e79",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n# Copyright 2005-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see below.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# \n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# \n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n# \n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n# \n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# make directories in the binary tree\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use CTest\n\n# configure files\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Section 3:\n\n#\n\n# Custom targets to perform dashboard builds and submissions.\n\n# These should NOT need to be modified from project to project.\n\n#\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# We need to pass the configuration type on the test command line.\n",
        "Line" : 79,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# Add convenience targets.  Do this at most once in case of nested\n\n# projects.\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# For all generators add basic testing targets.\n",
        "Line" : 93,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# For Makefile generators add more granular targets.\n",
        "Line" : 103,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# Make targets for Experimental builds\n",
        "Line" : 105,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# missing purify\n",
        "Line" : 115,
        "CharPositionInLine" : 12
      },
      "10" : {
        "Text" : "# makefile generators\n",
        "Line" : 129,
        "CharPositionInLine" : 9
      },
      "CommentCount" : 11
    },
    "cmake/cmake-2.8.12-modules/CMakeParseArguments.cmake" : {
      "ObjectId" : "3c8002272d00dde198c9ca52dc432184aee02ba6",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# CMakeParseArguments\n\n# -------------------\n\n#\n\n#\n\n#\n\n# CMAKE_PARSE_ARGUMENTS(<prefix> <options> <one_value_keywords>\n\n# <multi_value_keywords> args...)\n\n#\n\n# CMAKE_PARSE_ARGUMENTS() is intended to be used in macros or functions\n\n# for parsing the arguments given to that macro or function.  It\n\n# processes the arguments and defines a set of variables which hold the\n\n# values of the respective options.\n\n#\n\n# The <options> argument contains all options for the respective macro,\n\n# i.e.  keywords which can be used when calling the macro without any\n\n# value following, like e.g.  the OPTIONAL keyword of the install()\n\n# command.\n\n#\n\n# The <one_value_keywords> argument contains all keywords for this macro\n\n# which are followed by one value, like e.g.  DESTINATION keyword of the\n\n# install() command.\n\n#\n\n# The <multi_value_keywords> argument contains all keywords for this\n\n# macro which can be followed by more than one value, like e.g.  the\n\n# TARGETS or FILES keywords of the install() command.\n\n#\n\n# When done, CMAKE_PARSE_ARGUMENTS() will have defined for each of the\n\n# keywords listed in <options>, <one_value_keywords> and\n\n# <multi_value_keywords> a variable composed of the given <prefix>\n\n# followed by \"_\" and the name of the respective keyword.  These\n\n# variables will then hold the respective value from the argument list.\n\n# For the <options> keywords this will be TRUE or FALSE.\n\n#\n\n# All remaining arguments are collected in a variable\n\n# <prefix>_UNPARSED_ARGUMENTS, this can be checked afterwards to see\n\n# whether your macro was called with unrecognized parameters.\n\n#\n\n# As an example here a my_install() macro, which takes similar arguments\n\n# as the real install() command:\n\n#\n\n# ::\n\n#\n\n#    function(MY_INSTALL)\n\n#      set(options OPTIONAL FAST)\n\n#      set(oneValueArgs DESTINATION RENAME)\n\n#      set(multiValueArgs TARGETS CONFIGURATIONS)\n\n#      cmake_parse_arguments(MY_INSTALL \"${options}\" \"${oneValueArgs}\" \"${multiValueArgs}\" ${ARGN} )\n\n#      ...\n\n#\n\n#\n\n#\n\n# Assume my_install() has been called like this:\n\n#\n\n# ::\n\n#\n\n#    my_install(TARGETS foo bar DESTINATION bin OPTIONAL blub)\n\n#\n\n#\n\n#\n\n# After the cmake_parse_arguments() call the macro will have set the\n\n# following variables:\n\n#\n\n# ::\n\n#\n\n#    MY_INSTALL_OPTIONAL = TRUE\n\n#    MY_INSTALL_FAST = FALSE (this option was not used when calling my_install()\n\n#    MY_INSTALL_DESTINATION = \"bin\"\n\n#    MY_INSTALL_RENAME = \"\" (was not used)\n\n#    MY_INSTALL_TARGETS = \"foo;bar\"\n\n#    MY_INSTALL_CONFIGURATIONS = \"\" (was not used)\n\n#    MY_INSTALL_UNPARSED_ARGUMENTS = \"blub\" (no value expected after \"OPTIONAL\"\n\n#\n\n#\n\n#\n\n# You can then continue and process these variables.\n\n#\n\n# Keywords terminate lists of values, e.g.  if directly after a\n\n# one_value_keyword another recognized keyword follows, this is\n\n# interpreted as the beginning of the new option.  E.g.\n\n# my_install(TARGETS foo DESTINATION OPTIONAL) would result in\n\n# MY_INSTALL_DESTINATION set to \"OPTIONAL\", but MY_INSTALL_DESTINATION\n\n# would be empty and MY_INSTALL_OPTIONAL would be set to TRUE therefor.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2010 Alexander Neundorf <neundorf@kde.org>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see below.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# \n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# \n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n# \n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n# \n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# first set all result variables to empty/FALSE\n",
        "Line" : 133,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# now iterate over all arguments and fill the result variables\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# ... then this marks the end of the arguments belonging to this keyword\n",
        "Line" : 149,
        "CharPositionInLine" : 57
      },
      "5" : {
        "Text" : "# ... then this marks the end of the arguments belonging to this keyword\n",
        "Line" : 150,
        "CharPositionInLine" : 63
      },
      "6" : {
        "Text" : "# ... then this marks the end of the arguments belonging to this keyword\n",
        "Line" : 151,
        "CharPositionInLine" : 61
      },
      "7" : {
        "Text" : "# propagate the result variables to the caller:\n",
        "Line" : 181,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "cmake/cmake-2.8.3-modules/FixWinInstallPrefix.cmake" : {
      "ObjectId" : "ceb180baa02ff8d952f21c331b97f757c06e2ea4",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Automatically fix CMAKE_INSTALL_PREFIX to be bit-appropriate on Win\n\n#\n\n# This is a workaround for CMake bug #9992 in <2.8.3 - see\n\n# http://public.kitware.com/Bug/view.php?id=9992\n\n#\n\n# It runs automatically when included on a Windows build (passes if(WIN32)) -\n\n# include after setting your project name (and your module search path,\n\n# obviously)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file ../LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# caution - ENV{ProgramFiles} on Win64 is adjusted to point to the arch\n\n# of the running executable which, since CMake is 32-bit on Windows as\n\n# I write this, will always be = $ENV{ProgramFiles(x86)}.\n\n# Thus, we only use this environment variable if we are on a 32 machine\n",
        "Line" : 21,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# 32-bit dir on win32, useless to us on win64\n",
        "Line" : 26,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# 32-bit dir: only set on win64\n",
        "Line" : 29,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# 64-bit dir: only set on win64\n",
        "Line" : 33,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# 64-bit build on win64\n",
        "Line" : 37,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# 32-bit build on win64\n",
        "Line" : 41,
        "CharPositionInLine" : 3
      },
      "7" : {
        "Text" : "# 32-bit build on win32\n",
        "Line" : 44,
        "CharPositionInLine" : 3
      },
      "8" : {
        "Text" : "# The user didn't change this yet - it's the potentially broken default\n",
        "Line" : 64,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 9
    },
    "cmake/cmake-2.8.3-modules/autoinclude.cmake" : {
      "ObjectId" : "64d8f62b90be741ce9ecb525fa9556cc353a60df",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Autoinclude these policies automatically\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file ../LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/cmake-2.8.4-modules/ImproveEclipseGCCErrors.cmake" : {
      "ObjectId" : "2f7f3170d62e4f347767cf1ed81c4a8eea6c9923",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Add a GCC flag so that the errors are more suitable to parsing by Eclipse\n\n#\n\n#  include(ImproveEclipseGCCErrors)\n\n#\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file ../LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/cmake-2.8.4-modules/autoinclude.cmake" : {
      "ObjectId" : "2c98e249991fe29da3711b76580d210f95c2dcf0",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Autoinclude these policies automatically\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file ../LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/cmake-2.8.4-modules/boost/FindBoost.cmake" : {
      "ObjectId" : "9dbfb8023ec76f3fc34bcba9aa82a8ce29280530",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Boost include dirs and libraries\n\n# Usage of this module as follows:\n\n#\n\n# NOTE: Take note of the Boost_ADDITIONAL_VERSIONS variable below.\n\n# Due to Boost naming conventions and limitations in CMake this find\n\n# module is NOT future safe with respect to Boost version numbers,\n\n# and may break.\n\n#\n\n# == Using Header-Only libraries from within Boost: ==\n\n#\n\n#   find_package( Boost 1.36.0 )\n\n#   if(Boost_FOUND)\n\n#      include_directories(${Boost_INCLUDE_DIRS})\n\n#      add_executable(foo foo.cc)\n\n#   endif()\n\n#\n\n#\n\n# == Using actual libraries from within Boost: ==\n\n#\n\n#   set(Boost_USE_STATIC_LIBS        ON)\n\n#   set(Boost_USE_MULTITHREADED      ON)\n\n#   set(Boost_USE_STATIC_RUNTIME    OFF)\n\n#   find_package( Boost 1.36.0 COMPONENTS date_time filesystem system ... )\n\n#\n\n#   if(Boost_FOUND)\n\n#      include_directories(${Boost_INCLUDE_DIRS})\n\n#      add_executable(foo foo.cc)\n\n#      target_link_libraries(foo ${Boost_LIBRARIES})\n\n#   endif()\n\n#\n\n#\n\n# The components list needs to contain actual names of boost libraries only,\n\n# such as \"date_time\" for \"libboost_date_time\".  If you're using parts of\n\n# Boost that contain header files only (e.g. foreach) you do not need to\n\n# specify COMPONENTS.\n\n#\n\n# You should provide a minimum version number that should be used. If you provide this\n\n# version number and specify the REQUIRED attribute, this module will fail if it\n\n# can't find the specified or a later version. If you specify a version number this is\n\n# automatically put into the considered list of version numbers and thus doesn't need\n\n# to be specified in the Boost_ADDITIONAL_VERSIONS variable (see below).\n\n#\n\n# NOTE for Visual Studio Users:\n\n#     Automatic linking is used on MSVC & Borland compilers by default when\n\n#     #including things in Boost.  It's important to note that setting\n\n#     Boost_USE_STATIC_LIBS to OFF is NOT enough to get you dynamic linking,\n\n#     should you need this feature.  Automatic linking typically uses static\n\n#     libraries with a few exceptions (Boost.Python is one).\n\n#\n\n#     Please see the section below near Boost_LIB_DIAGNOSTIC_DEFINITIONS for\n\n#     more details.  Adding a TARGET_LINK_LIBRARIES() as shown in the example\n\n#     above appears to cause VS to link dynamically if Boost_USE_STATIC_LIBS\n\n#     gets set to OFF.  It is suggested you avoid automatic linking since it\n\n#     will make your application less portable.\n\n#\n\n# =========== The mess that is Boost_ADDITIONAL_VERSIONS (sorry?) ============\n\n#\n\n# OK, so the Boost_ADDITIONAL_VERSIONS variable can be used to specify a list of\n\n# boost version numbers that should be taken into account when searching\n\n# for Boost. Unfortunately boost puts the version number into the\n\n# actual filename for the libraries, so this variable will certainly be needed\n\n# in the future when new Boost versions are released.\n\n#\n\n# Currently this module searches for the following version numbers:\n\n# 1.33, 1.33.0, 1.33.1, 1.34, 1.34.0, 1.34.1, 1.35, 1.35.0, 1.35.1,\n\n# 1.36, 1.36.0, 1.36.1, 1.37, 1.37.0, 1.38, 1.38.0, 1.39, 1.39.0,\n\n# 1.40, 1.40.0, 1.41, 1.41.0, 1.42, 1.42.0, 1.43, 1.43.0, 1.44, 1.44.0,\n\n# 1.45, 1.45.0, 1.46, 1.46.0\n\n#\n\n# NOTE: If you add a new major 1.x version in Boost_ADDITIONAL_VERSIONS you should\n\n# add both 1.x and 1.x.0 as shown above.  Official Boost include directories\n\n# omit the 3rd version number from include paths if it is 0 although not all\n\n# binary Boost releases do so.\n\n#\n\n# SET(Boost_ADDITIONAL_VERSIONS \"1.78\" \"1.78.0\" \"1.79\" \"1.79.0\")\n\n#\n\n# ===================================== ============= ========================\n\n#\n\n# Variables used by this module, they can change the default behaviour and\n\n# need to be set before calling find_package:\n\n#\n\n#   Boost_USE_MULTITHREADED      Can be set to OFF to use the non-multithreaded\n\n#                                boost libraries.  If not specified, defaults\n\n#                                to ON.\n\n#\n\n#   Boost_USE_STATIC_LIBS        Can be set to ON to force the use of the static\n\n#                                boost libraries. Defaults to OFF.\n\n#\n\n#   Boost_NO_SYSTEM_PATHS        Set to TRUE to suppress searching in system\n\n#                                paths (or other locations outside of BOOST_ROOT\n\n#                                or BOOST_INCLUDEDIR).  Useful when specifying\n\n#                                BOOST_ROOT. Defaults to OFF.\n\n#                                  [Since CMake 2.8.3]\n\n#\n\n#   Boost_USE_STATIC_RUNTIME     If enabled, searches for boost libraries\n\n#                                linked against a static C++ standard library\n\n#                                ('s' ABI tag). This option should be set to\n\n#                                ON or OFF because the default behavior\n\n#                                if not specified is platform dependent\n\n#                                for backwards compatibility.\n\n#                                  [Since CMake 2.8.3]\n\n#\n\n#   Boost_USE_DEBUG_PYTHON       If enabled, searches for boost libraries\n\n#                                compiled against a special debug build of\n\n#                                Python ('y' ABI tag). Defaults to OFF.\n\n#                                  [Since CMake 2.8.3]\n\n#\n\n#   Boost_USE_STLPORT            If enabled, searches for boost libraries\n\n#                                compiled against the STLPort standard\n\n#                                library ('p' ABI tag). Defaults to OFF.\n\n#                                  [Since CMake 2.8.3]\n\n#\n\n#   Boost_USE_STLPORT_DEPRECATED_NATIVE_IOSTREAMS\n\n#                                If enabled, searches for boost libraries\n\n#                                compiled against the deprecated STLPort\n\n#                                \"native iostreams\" feature ('n' ABI tag).\n\n#                                Defaults to OFF.\n\n#                                  [Since CMake 2.8.3]\n\n#\n\n# Other Variables used by this module which you may want to set.\n\n#\n\n#   Boost_ADDITIONAL_VERSIONS    A list of version numbers to use for searching\n\n#                                the boost include directory.  Please see\n\n#                                the documentation above regarding this\n\n#                                annoying, but necessary variable :(\n\n#\n\n#   Boost_DEBUG                  Set this to TRUE to enable debugging output\n\n#                                of FindBoost.cmake if you are having problems.\n\n#                                Please enable this before filing any bug\n\n#                                reports.\n\n#\n\n#   Boost_DETAILED_FAILURE_MSG   FindBoost doesn't output detailed information\n\n#                                about why it failed or how to fix the problem\n\n#                                unless this is set to TRUE or the REQUIRED\n\n#                                keyword is specified in find_package().\n\n#                                  [Since CMake 2.8.0]\n\n#\n\n#   Boost_COMPILER               Set this to the compiler suffix used by Boost\n\n#                                (e.g. \"-gcc43\") if FindBoost has problems finding\n\n#                                the proper Boost installation\n\n#\n\n#   Boost_THREADAPI                When building boost.thread, sometimes the name of the\n\n#                                library contains an additional \"pthread\" or \"win32\"\n\n#                                string known as the threadapi.  This can happen when\n\n#                                compiling against pthreads on Windows or win32 threads\n\n#                                on Cygwin.  You may specify this variable and if set\n\n#                                when FindBoost searches for the Boost threading library\n\n#                                it will first try to match the threadapi you specify.\n\n#                                  For Example: libboost_thread_win32-mgw45-mt-1_43.a\n\n#                                might be found if you specified \"win32\" here before\n\n#                                falling back on libboost_thread-mgw45-mt-1_43.a.\n\n#                                  [Since CMake 2.8.3]\n\n#\n\n#   Boost_REALPATH               Resolves symbolic links for discovered boost libraries\n\n#                                to assist with packaging.  For example, instead of\n\n#                                Boost_SYSTEM_LIBRARY_RELEASE being resolved to\n\n#                                \"/usr/lib/libboost_system.so\" it would be\n\n#                                \"/usr/lib/libboost_system.so.1.42.0\" instead.\n\n#                                This does not affect linking and should not be\n\n#                                enabled unless the user needs this information.\n\n#                                  [Since CMake 2.8.3]\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# These last three variables are available also as environment variables:\n\n#\n\n#   BOOST_ROOT or BOOSTROOT      The preferred installation prefix for searching for\n\n#                                Boost.  Set this if the module has problems finding\n\n#                                the proper Boost installation.  To prevent falling\n\n#                                back on the system paths, set Boost_NO_SYSTEM_PATHS\n\n#                                to true.\n\n#\n\n#   BOOST_INCLUDEDIR             Set this to the include directory of Boost, if the\n\n#                                module has problems finding the proper Boost installation\n\n#\n\n#   BOOST_LIBRARYDIR             Set this to the lib directory of Boost, if the\n\n#                                module has problems finding the proper Boost installation\n\n#\n\n# Variables defined by this module:\n\n#\n\n#   Boost_FOUND                         System has Boost, this means the include dir was\n\n#                                       found, as well as all the libraries specified in\n\n#                                       the COMPONENTS list.\n\n#\n\n#   Boost_INCLUDE_DIRS                  Boost include directories: not cached\n\n#\n\n#   Boost_INCLUDE_DIR                   This is almost the same as above, but this one is\n\n#                                       cached and may be modified by advanced users\n\n#\n\n#   Boost_LIBRARIES                     Link to these to use the Boost libraries that you\n\n#                                       specified: not cached\n\n#\n\n#   Boost_LIBRARY_DIRS                  The path to where the Boost library files are.\n\n#\n\n#   Boost_VERSION                       The version number of the boost libraries that\n\n#                                       have been found, same as in version.hpp from Boost\n\n#\n\n#   Boost_LIB_VERSION                   The version number in filename form as\n\n#                                       it's appended to the library filenames\n\n#\n\n#   Boost_MAJOR_VERSION                 major version number of boost\n\n#   Boost_MINOR_VERSION                 minor version number of boost\n\n#   Boost_SUBMINOR_VERSION              subminor version number of boost\n\n#\n\n#   Boost_LIB_DIAGNOSTIC_DEFINITIONS    [WIN32 Only] You can call\n\n#                                       add_definitions(${Boost_LIB_DIAGNOSTIC_DEFINITIONS})\n\n#                                       to have diagnostic information about Boost's\n\n#                                       automatic linking outputted during compilation time.\n\n#\n\n# For each component you specify in find_package(), the following (UPPER-CASE)\n\n# variables are set.  You can use these variables if you would like to pick and\n\n# choose components for your targets instead of just using Boost_LIBRARIES.\n\n#\n\n#   Boost_${COMPONENT}_FOUND            True IF the Boost library \"component\" was found.\n\n#\n\n#   Boost_${COMPONENT}_LIBRARY          Contains the libraries for the specified Boost\n\n#                                       \"component\" (includes debug and optimized keywords\n\n#                                       when needed).\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#=============================================================================\n\n# Copyright 2006-2009 Kitware, Inc.\n\n# Copyright 2006-2008 Andreas Schneider <mail@cynapses.org>\n\n# Copyright 2007      Wengo\n\n# Copyright 2007      Mike Jackson\n\n# Copyright 2008      Andreas Pakulat <apaku@gmx.de>\n\n# Copyright 2008-2010 Philip Lowman <philip@yhbt.com>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see below.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# \n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# \n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n# \n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n# \n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#  FindBoost functions & macros\n\n#\n\n############################################\n\n#\n\n# Check the existence of the libraries.\n\n#\n\n############################################\n\n# This macro was taken directly from the FindQt4.cmake file that is included\n\n# with the CMake distribution. This is NOT my work. All work was done by the\n\n# original authors of the FindQt4.cmake file. Only minor modifications were\n\n# made to remove references to Qt and make this file more generally applicable\n\n# And ELSE/ENDIF pairs were removed for readability.\n\n#########################################################################\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# if the generator supports configuration types then set\n\n# optimized and debug libraries, or if the CMAKE_BUILD_TYPE has a value\n",
        "Line" : 284,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# if there are no configuration types and CMAKE_BUILD_TYPE has no value\n\n# then just use the release libraries\n",
        "Line" : 289,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# FIXME: This probably should be set for both cases\n",
        "Line" : 293,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# if only the release version was found, set the debug variable also to the release version\n",
        "Line" : 297,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# if only the debug version was found, set the release variable also to the debug version\n",
        "Line" : 304,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Remove superfluous \"debug\" / \"optimized\" keywords from\n\n# Boost_LIBRARY_DIRS\n",
        "Line" : 314,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# Make variables changeble to the advanced user\n",
        "Line" : 327,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 335,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#\n\n# Runs compiler with \"-dumpversion\" and parses major/minor\n\n# version with a regex.\n\n#\n",
        "Line" : 337,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#\n\n# A convenience function for marking desired components\n\n# as found or not\n\n#\n",
        "Line" : 353,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#\n\n# Take a list of libraries with \"thread\" in it\n\n# and prepend duplicates with \"thread_${Boost_THREADAPI}\"\n\n# at the front of the list\n\n#\n",
        "Line" : 364,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#\n\n# If a library is found, replace its cache entry with its REALPATH\n\n#\n",
        "Line" : 375,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#\n\n# End functions/macros\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 386,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# The version may appear in a directory with or without the patch\n\n# level, even when the patch level is non-zero.\n",
        "Line" : 399,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# The user has not requested an exact version.  Among known\n\n# versions, find those that are acceptable to the user request.\n",
        "Line" : 405,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Select acceptable versions.\n",
        "Line" : 415,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# This version is high enough.\n",
        "Line" : 418,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "# This version is a short-form for the requested version with\n\n# the patch level dropped.\n",
        "Line" : 421,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# Any version is acceptable.\n",
        "Line" : 427,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# The reason that we failed to find Boost. This will be set to a\n\n# user-friendly message when we fail to find some necessary piece of\n\n# Boost.\n",
        "Line" : 432,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# On versions < 1.35, remove the System library from the considered list\n\n# since it wasn't added until 1.35.\n",
        "Line" : 440,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# in cache already\n",
        "Line" : 459,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Need to search for boost\n",
        "Line" : 478,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# Output some of their choices\n",
        "Line" : 482,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# In windows, automatic linking is performed, so you do not have\n\n# to specify the libraries.  If you are linking to a dynamic\n\n# runtime, then you can choose to link to either a static or a\n\n# dynamic Boost library, the default is to do a static link.  You\n\n# can alter this for a specific library \"whatever\" by defining\n\n# BOOST_WHATEVER_DYN_LINK to force Boost library \"whatever\" to be\n\n# linked dynamically.  Alternatively you can force all Boost\n\n# libraries to dynamic link by defining BOOST_ALL_DYN_LINK.\n",
        "Line" : 498,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# This feature can be disabled for Boost library \"whatever\" by\n\n# defining BOOST_WHATEVER_NO_LIB, or for all of Boost by defining\n\n# BOOST_ALL_NO_LIB.\n",
        "Line" : 507,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# If you want to observe which libraries are being linked against\n\n# then defining BOOST_LIB_DIAGNOSTIC will cause the auto-linking\n\n# code to emit a #pragma message each time a library is selected\n\n# for linking.\n",
        "Line" : 511,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# If Boost_ROOT was defined, gently correct the user\n",
        "Line" : 527,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# If BOOST_ROOT was defined in the environment, use it.\n",
        "Line" : 534,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# If BOOSTROOT was defined in the environment, use it.\n",
        "Line" : 539,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# If BOOST_INCLUDEDIR was defined in the environment, use it.\n",
        "Line" : 544,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# If BOOST_LIBRARYDIR was defined in the environment, use it.\n",
        "Line" : 549,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# prepend BOOST_INCLUDEDIR to search path if specified\n",
        "Line" : 584,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Search for Boost include DIR\n\n# ------------------------------------------------------------------------\n\n# Try to find Boost by stepping backwards through the Boost versions\n\n# we know about.\n",
        "Line" : 591,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "# Build a list of path suffixes for each version.\n",
        "Line" : 597,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "# Add in a path suffix, based on the required version, ideally\n\n# we could read this from version.hpp, but for that to work we'd\n\n# need to know the include dir already\n",
        "Line" : 600,
        "CharPositionInLine" : 6
      },
      "40" : {
        "Text" : "# Transform 1.35 => 1_35 and 1.36.0 => 1_36_0\n",
        "Line" : 605,
        "CharPositionInLine" : 6
      },
      "41" : {
        "Text" : "# Look for a standard boost header file.\n",
        "Line" : 628,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Extract version information from version.hpp\n\n# ------------------------------------------------------------------------\n",
        "Line" : 637,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "# Extract Boost_VERSION and Boost_LIB_VERSION from version.hpp\n\n# Read the whole file:\n\n#\n",
        "Line" : 642,
        "CharPositionInLine" : 4
      },
      "44" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Suffix initialization and compiler suffix detection.\n\n# ------------------------------------------------------------------------\n",
        "Line" : 677,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "# Setting some more suffixes for the library\n",
        "Line" : 681,
        "CharPositionInLine" : 2
      },
      "46" : {
        "Text" : "# Attempt to guess the compiler suffix\n\n# NOTE: this is not perfect yet, if you experience any issues\n\n# please report them and use the Boost_COMPILER variable\n\n# to work around the problems.\n",
        "Line" : 694,
        "CharPositionInLine" : 4
      },
      "47" : {
        "Text" : "# Good luck!\n",
        "Line" : 714,
        "CharPositionInLine" : 20
      },
      "48" : {
        "Text" : "# yes, this is correct\n",
        "Line" : 715,
        "CharPositionInLine" : 35
      },
      "49" : {
        "Text" : "# Good luck!\n",
        "Line" : 716,
        "CharPositionInLine" : 20
      },
      "50" : {
        "Text" : "# yes, this is correct\n",
        "Line" : 717,
        "CharPositionInLine" : 35
      },
      "51" : {
        "Text" : "# no GCC version encoding prior to 1.34\n",
        "Line" : 724,
        "CharPositionInLine" : 38
      },
      "52" : {
        "Text" : "# no GCC version encoding prior to 1.34\n",
        "Line" : 732,
        "CharPositionInLine" : 38
      },
      "53" : {
        "Text" : "# Determine which version of GCC we have.\n",
        "Line" : 735,
        "CharPositionInLine" : 10
      },
      "54" : {
        "Text" : "# In Boost 1.36.0 and newer, the mangled compiler name used\n\n# on Mac OS X/Darwin is \"xgcc\".\n",
        "Line" : 739,
        "CharPositionInLine" : 16
      },
      "55" : {
        "Text" : "# In Boost <= 1.35.0, there is no mangled compiler name for\n\n# the Mac OS X/Darwin version of GCC.\n",
        "Line" : 743,
        "CharPositionInLine" : 16
      },
      "56" : {
        "Text" : "# We don't know the Boost version, so assume it's\n\n# pre-1.36.0.\n",
        "Line" : 748,
        "CharPositionInLine" : 14
      },
      "57" : {
        "Text" : "#======================\n\n# Systematically build up the Boost ABI tag\n\n# http://boost.org/doc/libs/1_41_0/more/getting_started/windows.html#library-naming\n",
        "Line" : 773,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# Key       Use this library when:\n\n#  s        linking statically to the C++ standard library and\n\n#           compiler runtime support libraries.\n",
        "Line" : 778,
        "CharPositionInLine" : 2
      },
      "59" : {
        "Text" : "#  g        using debug versions of the standard and runtime\n\n#           support libraries\n",
        "Line" : 785,
        "CharPositionInLine" : 2
      },
      "60" : {
        "Text" : "#  y        using special debug build of python\n",
        "Line" : 793,
        "CharPositionInLine" : 2
      },
      "61" : {
        "Text" : "#  d        using a debug version of your code\n",
        "Line" : 797,
        "CharPositionInLine" : 2
      },
      "62" : {
        "Text" : "#  p        using the STLport standard library rather than the\n\n#           default one supplied with your compiler\n",
        "Line" : 799,
        "CharPositionInLine" : 2
      },
      "63" : {
        "Text" : "#  n        using the STLport deprecated \"native iostreams\" feature\n",
        "Line" : 805,
        "CharPositionInLine" : 2
      },
      "64" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Begin finding boost libraries\n\n# ------------------------------------------------------------------------\n",
        "Line" : 818,
        "CharPositionInLine" : 2
      },
      "65" : {
        "Text" : "# prepend BOOST_LIBRARYDIR to search path if specified\n",
        "Line" : 849,
        "CharPositionInLine" : 2
      },
      "66" : {
        "Text" : "# Support preference of static libs by adjusting CMAKE_FIND_LIBRARY_SUFFIXES\n",
        "Line" : 861,
        "CharPositionInLine" : 2
      },
      "67" : {
        "Text" : "# We want to use the tag inline below without risking double dashes\n",
        "Line" : 871,
        "CharPositionInLine" : 2
      },
      "68" : {
        "Text" : "# The previous behavior of FindBoost when Boost_USE_STATIC_LIBS was enabled\n\n# on WIN32 was to:\n\n#  1. Search for static libs compiled against a SHARED C++ standard runtime library (use if found)\n\n#  2. Search for static libs compiled against a STATIC C++ standard runtime library (use if found)\n\n# We maintain this behavior since changing it could break people's builds.\n\n# To disable the ambiguous behavior, the user need only\n\n# set Boost_USE_STATIC_RUNTIME either ON or OFF.\n",
        "Line" : 883,
        "CharPositionInLine" : 2
      },
      "69" : {
        "Text" : "#\n\n# Find RELEASE libraries\n\n#\n",
        "Line" : 907,
        "CharPositionInLine" : 4
      },
      "70" : {
        "Text" : "#\n\n# Find DEBUG libraries\n\n#\n",
        "Line" : 938,
        "CharPositionInLine" : 4
      },
      "71" : {
        "Text" : "# Restore the original find library ordering\n",
        "Line" : 979,
        "CharPositionInLine" : 2
      },
      "72" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  End finding boost libraries\n\n# ------------------------------------------------------------------------\n",
        "Line" : 983,
        "CharPositionInLine" : 2
      },
      "73" : {
        "Text" : "# Check the version of Boost against the requested version.\n",
        "Line" : 995,
        "CharPositionInLine" : 4
      },
      "74" : {
        "Text" : "# If the user requested an exact version of Boost, check\n\n# that. We already know that the Boost version we have is >= the\n\n# requested version.\n",
        "Line" : 1019,
        "CharPositionInLine" : 6
      },
      "75" : {
        "Text" : "# If the user didn't specify a patchlevel, it's 0.\n",
        "Line" : 1024,
        "CharPositionInLine" : 6
      },
      "76" : {
        "Text" : "# We'll set Boost_FOUND true again if we have an exact version match.\n",
        "Line" : 1029,
        "CharPositionInLine" : 6
      },
      "77" : {
        "Text" : "# State that we found a version of Boost that is too new or too old.\n",
        "Line" : 1043,
        "CharPositionInLine" : 6
      },
      "78" : {
        "Text" : "# Always check for missing components\n",
        "Line" : 1056,
        "CharPositionInLine" : 4
      },
      "79" : {
        "Text" : "# We were unable to find some libraries, so generate a sensible\n\n# error message that lists the libraries we were unable to find.\n",
        "Line" : 1074,
        "CharPositionInLine" : 6
      },
      "80" : {
        "Text" : "# Compatibility Code for backwards compatibility with CMake\n\n# 2.4's FindBoost module.\n",
        "Line" : 1095,
        "CharPositionInLine" : 6
      },
      "81" : {
        "Text" : "# Look for the boost library path.\n\n# Note that the user may not have installed any libraries\n\n# so it is quite possible the Boost_LIBRARY_PATH may not exist.\n",
        "Line" : 1098,
        "CharPositionInLine" : 6
      },
      "82" : {
        "Text" : "# Strip off the trailing \"/include\" in the path.\n",
        "Line" : 1108,
        "CharPositionInLine" : 8
      },
      "83" : {
        "Text" : "# we opt not to automatically output Boost_ERROR_REASON here as\n\n# it could be quite lengthy and somewhat imposing in it's requests\n\n# Since Boost is not always a required dependency we'll leave this\n\n# up to the end-user.\n",
        "Line" : 1153,
        "CharPositionInLine" : 8
      },
      "84" : {
        "Text" : "# show the Boost_INCLUDE_DIRS AND Boost_LIBRARIES variables only in the advanced view\n",
        "Line" : 1166,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 85
    },
    "cmake/cmake-3.2.0-modules/FindGit.cmake" : {
      "ObjectId" : "207b424bb8c5191bd01dec1b096a70afee8423a0",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindGit\n\n# -------\n\n#\n\n#\n\n#\n\n# The module defines the following variables:\n\n#\n\n# ::\n\n#\n\n#    GIT_EXECUTABLE - path to git command line client\n\n#    GIT_FOUND - true if the command line client was found\n\n#    GIT_VERSION_STRING - the version of git found (since CMake 2.8.8)\n\n#\n\n# Example usage:\n\n#\n\n# ::\n\n#\n\n#    find_package(Git)\n\n#    if(GIT_FOUND)\n\n#      message(\"git found: ${GIT_EXECUTABLE}\")\n\n#    endif()\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2010 Kitware, Inc.\n\n# Copyright 2012 Rolf Eike Beer <eike@sf-mail.de>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see below.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# \n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# \n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n# \n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n# \n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look for 'git' or 'eg' (easy git)\n\n#\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Prefer .cmd variants on Windows unless running in a Makefile\n\n# in the MSYS shell.\n\n#\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# GitHub search path for Windows\n",
        "Line" : 75,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set GIT_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/cmake-4.0.0-modules/RequireOutOfSourceBuild.cmake" : {
      "ObjectId" : "9b27970b500cecfa730dbb82fc8da90c62f12117",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Issue an error if the source tree is in or equal to the build tree\n\n#\n\n#  include(RequireOutOfSourceBuild)\n\n#\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file ../LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#message(STATUS \"Checking ${_src}\")\n",
        "Line" : 28,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "#message(STATUS \"Checking ${_cur_src}\")\n",
        "Line" : 33,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "#message(STATUS \"comparing ${_bin} and ${_chopped}\")\n",
        "Line" : 38,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 4
    },
    "cmake/cmake-4.0.0-modules/autoinclude.cmake" : {
      "ObjectId" : "e9206ee08a3a82b97d10fd822d5b43e688f1b10d",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Autoinclude these policies automatically\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file ../LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/nested_targets/OpenHaptics/CMakeLists.txt" : {
      "ObjectId" : "f46daa391613dea8e349d0d123fe4eeacd10b68d",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Build the OpenHaptics utility libraries as a part of your solution.\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file ../../LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Work around bug in library at least <= 3.10\n",
        "Line" : 14,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Disable warnings - no sense in warning about Sensable's potential bugs.\n",
        "Line" : 60,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Disable warnings - no sense in warning about Sensable's potential bugs.\n",
        "Line" : 87,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "doxygen/CMakeLists.txt" : {
      "ObjectId" : "6f89b77ae99705ab83c512095051274c235a413e",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Changes made by:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Create documentation\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For some reason, LaTeX bails with a nesting-too-deep error\n",
        "Line" : 15,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 3
    },
    "gpsnmealib/CMakeLists.txt" : {
      "ObjectId" : "9a34e2dd8a0a0c5c11bb29e25c61ad7348c0241f",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hid_gui/CMakeLists.txt" : {
      "ObjectId" : "666cde0a4417b19b2f6c77a0318f9ca310b796a7",
      "LastModified" : "2018-10-20T13:21:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build and link the app!\n",
        "Line" : 53,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "java_vrpn/CMakeLists.txt" : {
      "ObjectId" : "56c753c7cbc2c3d68d0654c612cd7297bfe38d04",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# XXX TODO Install these bindings, don't just build them!\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set up file lists\n",
        "Line" : 9,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# *.java -> *.class\n",
        "Line" : 42,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# *.class -> vrpn.jar\n",
        "Line" : 55,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# *.class -> vrpn_*.h\n",
        "Line" : 73,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# target for vrpn.jar\n",
        "Line" : 91,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# java_vrpn library\n",
        "Line" : 96,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# Currently link with the client-side libraries only for the Android build.\n",
        "Line" : 114,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 9
    },
    "python/CMakeLists.txt" : {
      "ObjectId" : "8c3870f692dca143ecd6ab182f1f96005197685d",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\t\t\tinstall(TARGETS vrpn-python\n\n#\t\t\t\tRUNTIME DESTINATION lib/${PYTHONVERSIONDIR}dist-packages/ COMPONENT python\n\n#\t\t\t\tLIBRARY DESTINATION lib/${PYTHONVERSIONDIR}dist-packages/ COMPONENT python)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "python_vrpn/CMakeLists.txt" : {
      "ObjectId" : "680e6f3e530331cd4d518cac52c73801be716b24",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Changes made by:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\tXXX TODO: add dependency on these files - perhaps change extension to .h?\n\n#\n\n#\tset(COMMON\n\n#\t\tclient-only.i\n\n#\t\tpython-callback-wrapper.i)\n\n#\tset_source_files_properties(${COMMON} PROPERTIES CPLUSPLUS ON)\n",
        "Line" : 32,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "#Make sure Python wrapper files get correctly generated in Windows\n",
        "Line" : 44,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "#Define the preprocessor symbol VRPN_USE_WINSOCK_SOCKETS in swig, since the latter doesn't take the preprocessor definitions from vrpn_Shared.h in account\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "quat/CMakeLists.txt" : {
      "ObjectId" : "c3b246ef00bdffa368f23781e7a488160362fe09",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# XXX Is this still needed?\n",
        "Line" : 5,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Build the library itself and declare what bits need to be installed\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "quat/Makefile" : {
      "ObjectId" : "0e9bd9ab3b3b38a0089bf5bb1a9d973d3e9c9921",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#############################################################################\n\n#\n\n# makefile for quaternion lib\n\n#\n\n#############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##########################\n\n# common definitions. For non-UNC sites, uncomment one of the lines\n\n# that defines hw_os for the machine you are on in the section just\n\n# below. Then, the code should compile in your environment.\n\n#\n\n#HW_OS := sgi_irix\n\n#HW_OS := pc_linux\n\n#HW_OS := pc_linux64\n\n#HW_OS := pc_linux_ia64\n\n# Set this to compile for ARM gcc compiler to use on embedded devices\n\n# from a Linux box.\n\n#HW_OS := pc_linux_arm\n\n# Try this to compile for ARM gcc compiler to use on embedded devices\n\n# from a Cygwin environment.\n\n#HW_OS := pc_cygwin_arm\n\n#HW_OS := pc_cygwin\n\n#HW_OS := pc_FreeBSD\n\n#HW_OS := sparc_solaris\n\n#HW_OS := sparc_solaris_64\n\n#HW_OS := powerpc_aix\n\n#HW_OS := powerpc_macosx\n\n#HW_OS := universal_macosx\n\n#HW_OS := macosx_32_64\n\n#HW_OS := macosx_64\n\n##########################\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##########################\n\n# Mac OS X-specific options. If HW_OS is powerpc_macosx or universal_macosx,\n\n# uncomment one line below to choose the minimum targeted OS X version and\n\n# corresponding SDK. If none of the lines below is commented out, 10.5 will\n\n# be the minimum version.\n\n##########################\n\n#MAC_OS_MIN_VERSION := 10.4\n\n#MAC_OS_MIN_VERSION := 10.5\n\n#MAC_OS_MIN_VERSION := 10.6\n\n#MAC_OS_MIN_VERSION := 10.7\n\n#MAC_OS_MIN_VERSION := 10.8\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# hw_os does not exist on FreeBSD at UNC or on CYGWIN\n",
        "Line" : 52,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# pc_cygwin doesn't have HW_OS\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# On cygwin make is gmake (and gmake doesn't exist)\n",
        "Line" : 60,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# Define defaults for the compilter, archiver, and ranlib.\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Select which compiler and MAC OS X SDK to use\n",
        "Line" : 127,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# flags\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#############################################################################\n\n#\n\n# for building library\n\n#\n\n#############################################################################\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#############################################################################\n\n#\n\n# example/test programs\n\n#\n\n#############################################################################\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\n\n# timer- time some operation\n\n#\n",
        "Line" : 257,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#\n\n# matrix_to_posquat- matrix_to_posquat to quat\n\n#\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#\n\n# eul- eul to quat\n\n#\n",
        "Line" : 269,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#\n\n# qmult- multiply 2 quats\n\n#\n",
        "Line" : 275,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#\n\n# qpmult- multiply 2 pmatrices\n\n#\n",
        "Line" : 281,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#\n\n# qxform- xform a vec\n\n#\n",
        "Line" : 287,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#\n\n# qmat- matrix to quaternion\n\n#\n",
        "Line" : 293,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#\n\n# qmake- tests q_make\n\n#\n",
        "Line" : 299,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#############################################################################\n\n#\n\n# rules and definitions for making quaternion library\n\n#\n\n#############################################################################\n",
        "Line" : 311,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#############################################################################\n\n#\n\n# miscellaneous rules\n\n#\n\n#############################################################################\n",
        "Line" : 329,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#-mkdir $(BIN_DIR)\n\n#( cd $(BIN_DIR) ; rm -f $(INSTALL_APPS) )\n\n#( cd $(OBJ_DIR) ; cp $(INSTALL_APPS) $(BIN_DIR) )\n\n#( cd $(BIN_DIR) ; strip $(INSTALL_APPS) )\n",
        "Line" : 339,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 22
    },
    "quat/testapps/CMakeLists.txt" : {
      "ObjectId" : "551cbb1273d30c3b2b8e1ccd754d23c1ad74dd9b",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build the testapps if required\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Include directory needed by all of the files\n",
        "Line" : 5,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# MS-Windows, both 32 and 64 bits\n",
        "Line" : 20,
        "CharPositionInLine" : 12
      },
      "3" : {
        "Text" : "# nothing here yet\n",
        "Line" : 21,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# Apple\n",
        "Line" : 22,
        "CharPositionInLine" : 16
      },
      "5" : {
        "Text" : "# Math library\n",
        "Line" : 23,
        "CharPositionInLine" : 40
      },
      "6" : {
        "Text" : "# other UNIXes\n",
        "Line" : 24,
        "CharPositionInLine" : 15
      },
      "7" : {
        "Text" : "# Math library\n",
        "Line" : 25,
        "CharPositionInLine" : 40
      },
      "CommentCount" : 8
    },
    "server_src/CMakeLists.txt" : {
      "ObjectId" : "ad618894dbb1029ecbf0f13a8d3bf91d2153420b",
      "LastModified" : "2018-10-20T13:21:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# XXX Things to make better.\n\n#\n\n# Move applications into subprojects in visual studio\n\n# XXX tracker_to_poser\n\n# Fix the ones that are commented out so that they compile and run?\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Phantom library (if configured)\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#------------------------------------------------------------------\n\n# DirectShow video server - only for pre-VS10 due to header removal\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Include directories needed\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Applications that need more than one file to run.\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Install the vrpn.cfg file needed by the server.\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Declaration of the simple test applications that don't have extra files\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# XXX Are these files compiled somewhere?\n\n#\n\n#make_vrpn_libs_build.cpp\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# actually a client test\n",
        "Line" : 198,
        "CharPositionInLine" : 47
      },
      "9" : {
        "Text" : "#\tlist(APPEND SRV_TEST_SOURCES nidaqServer.cpp) # missing getOptClean\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "###\n\n# Tests\n\n###\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "###\n\n# Servers\n\n###\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "server_src/Makefile" : {
      "ObjectId" : "2794b0dc23e0f09f6120e8311909bd1b469746b1",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# this is a gmake file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##########################\n\n# common definitions. For non-UNC sites, uncomment one of the lines\n\n# that defines hw_os for the machine you are on in the section just\n\n# below. Then, the code should compile in your environment.\n\n#\n\n#HW_OS := sgi_irix\n\n#HW_OS := sparc_solaris\n\n#HW_OS := sparc_solaris_64\n\n#HW_OS := hp700_hpux10\n\n#HW_OS := pc_linux\n\n#HW_OS := pc_linux64\n\n#HW_OS := pc_linux_ia64\n\n# Try using this to cross-compile for ARM on a PC running Linux\n\n#HW_OS := pc_linux_arm\n\n# Try using this to cross-compile for ARM on a PC running Cygwin\n\n#HW_OS := pc_cygwin_arm\n\n#HW_OS := pc_cygwin\n\n#HW_OS := pc_FreeBSD\n\n#HW_OS := powerpc_aix\n\n#HW_OS := powerpc_macosx\n\n#HW_OS := universal_macosx\n\n#HW_OS := macosx_32_64\n\n#HW_OS := macosx_64\n\n##########################\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##########################\n\n# Mac OS X-specific options. If HW_OS is powerpc_macosx or universal_macosx,\n\n# uncomment one line below to choose the minimum targeted OS X version and\n\n# corresponding SDK. If none of the lines below is commented out, 10.5 will\n\n# be the minimum version.\n\n##########################\n\n#MAC_OS_MIN_VERSION := 10.4\n\n#MAC_OS_MIN_VERSION := 10.5\n\n#MAC_OS_MIN_VERSION := 10.6\n\n#MAC_OS_MIN_VERSION := 10.7\n\n#MAC_OS_MIN_VERSION := 10.8\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##########################\n\n# Directories for installation\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# hw_os does not exist on FreeBSD at UNC\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# pc_cygwin doesn't have HW_OS\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# On cygwin make is gmake (and gmake doesn't exist)\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# check if its for pxfl\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Select which compiler and MAC OS X SDK to use\n",
        "Line" : 83,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#\tCC := /usr/ibmcxx/bin/xlC_r -g -qarch=pwr3 -w\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# For WiiMote\n\n#\tSYSLIBS := -lwiiuse\n\n# For GPM mouse\n\n#\tSYSLIBS := -lgpm\n\n# For Isense libraries\n\n#\tSYSLIBS := -ldl\n\n# For Freespace Devices\n\n#\tSYSLIBS := -lfreespace\n\n# For HID devices\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# For WiiMote\n\n#\tSYSLIBS := -lwiiuse\n\n# For GPM mouse\n\n#\tSYSLIBS := -lgpm\n\n# For Isense libraries\n\n#\tSYSLIBS := -ldl\n\n# For Freespace Devices\n\n#\tSYSLIBS := -lfreespace\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Jean SIMARD <jean.simard@limsi.fr>\n\n# Definition of the 'TRUE' and 'FALSE' constant for Linux (by default, they are \n\n# defined in <windows.h>)\n\n# XXX This would be better done in the .h/.C files with #ifndef\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Uncomment the following section and point them at the\n\n# currect diretories to compile with HDAPI under Cygwin.\n\n# Well, to make it almost compile -- link fails to find things\n\n# in the libraries that should be there.\n\n#HDAPI_ROOT := \"C:/Program Files/SensAble/3DTouch\"\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Jean SIMARD <jean.simard@limsi.fr>\n\n# This is only for the PHANToM server on Linux (not tested on other plateform)\n\n# Put in comment if you don't want a PHANToM server\n\n#override CFLAGS += -I$(HDAPI_ROOT)/include -I$(HDAPI_ROOT)/utilities/include\n\n#override CXXFLAGS += -I$(HDAPI_ROOT)/include -I$(HDAPI_ROOT)/utilities/include\n\n#override LFLAGS += -L$(HDAPI_ROOT)/lib\n\n#SYSLIBS := $(SYSLIBS) -lHL -lHD -lHLU -lHDU\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# This is for the PHANToM/GHOST server on SGI (not tested on other plateform)\n\n# Put in comment if you don't want a PHANToM server.  GHOST expects SGI to\n\n# be defined during compile, whereas sgi seems to be the standard definition.\n\n#override CFLAGS += -I/usr/local/SensAble/GHOST/v31/include -DSGI\n\n#override CXXFLAGS += -I/usr/local/SensAble/GHOST/v31/include -DSGI\n\n#override LFLAGS += -L/usr/local/SensAble/GHOST/v31/lib\n\n#SYSLIBS := $(SYSLIBS) -lghost31_32\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#     CFLAGS = -g -I../ -I../../quat -I../../isense -DMACOSX\n",
        "Line" : 257,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#     CFLAGS = -g -I../ -I../../quat -I../../isense -DMACOSX\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#uncomment the following lines to include the PHASESPACE library\n\n#PHASESPACE := -L../../phasespace -lowlsock\n\n#CXXFLAGS += -I../../phasespace\n\n#CFLAGS += -I../../phasespace\n",
        "Line" : 271,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#the rpath option may not work on all platforms, remove it if necessary.\n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# test_freespace\n\n# \n",
        "Line" : 309,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "server_src/directshow_video_server/CMakeLists.txt" : {
      "ObjectId" : "2c65cb2df19aed2b9b4c84e54857154100e988fc",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Separate static library so that unresolved externals are OK - when\n\n# we link with it below, we'll only grab what we need.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "server_src/example_embedded_server/CMakeLists.txt" : {
      "ObjectId" : "9dc35407c045f812b3b99ce5d656eaf40caa78f0",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# support for out-of-source build\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "server_src/example_embedded_server/cmake/FindVRPN.cmake" : {
      "ObjectId" : "641b62b70ea6a7b153d3fa97d6c629b6d977cde9",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find VRPN library\n\n#\n\n# Cache Variables:\n\n#  VRPN_LIBRARY\n\n#  VRPN_SERVER_LIBRARY\n\n#  VRPN_INCLUDE_DIR\n\n#\n\n# Non-cache variables you might use in your CMakeLists.txt:\n\n#  VRPN_FOUND\n\n#  VRPN_SERVER_LIBRARIES - server libraries\n\n#  VRPN_LIBRARIES - client libraries\n\n#  VRPN_CLIENT_DEFINITIONS - definitions if you only use the client library\n\n#  VRPN_DEFINITIONS - Client-only definition if all we found was the client library.\n\n#  VRPN_INCLUDE_DIRS\n\n#\n\n# VRPN_ROOT_DIR is searched preferentially for these files\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Original Author:\n\n# 2009-2012 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2012.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# 64-bit dir: only set on win64\n",
        "Line" : 40,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# 32-bit dir: only set on win64\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# 32-bit dir on win32, useless to us on win64\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "###\n\n# Configure VRPN\n\n###\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "###\n\n# Dependencies\n\n###\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "server_src/example_embedded_server/cmake/Findquatlib.cmake" : {
      "ObjectId" : "efca27f70af8c3b144193a2c6be8dcdf152d8172",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find quatlib\n\n# Find the quatlib headers and libraries.\n\n#\n\n#  QUATLIB_INCLUDE_DIRS - where to find quat.h\n\n#  QUATLIB_LIBRARIES    - List of libraries when using quatlib.\n\n#  QUATLIB_FOUND        - True if quatlib found.\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Look for the header file.\n",
        "Line" : 19,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# 64-bit dir: only set on win64\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# 32-bit dir: only set on win64\n",
        "Line" : 45,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# 32-bit dir on win32, useless to us on win64\n",
        "Line" : 48,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "# Look for the header file.\n",
        "Line" : 53,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# Look for the library.\n",
        "Line" : 67,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set QUATLIB_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "server_src/timecode_generator_server/CMakeLists.txt" : {
      "ObjectId" : "925bc443ce1acb72ea0c9f3cb8eb5d91d7ea1afe",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# XXX TODO:\n\n# Do something reasonable with the runtime DLL.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "submodules/CMakeLists.txt" : {
      "ObjectId" : "5e69be46bf43bb01c35ff8df3965616ff060b442",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file includes a cmake file per submodule, and then\n\n# sends the variables it sets to the parent scope, which is the parent\n\n# (main) directory.\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# HIDAPI\n\n###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# JSONCPP\n\n###\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "submodules/hidapi.cmake" : {
      "ObjectId" : "77c2a599eedc277325c3993913bab7a5aced4205",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###\n\n# HID and HIDAPI\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Local HIDAPI requirements\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check to see if our submodule is new enough.\n",
        "Line" : 12,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# close enough - we have the source, though it's not necessarily a local submodule.\n",
        "Line" : 25,
        "CharPositionInLine" : 45
      },
      "4" : {
        "Text" : "# Permit choice between backends, when possible.\n",
        "Line" : 85,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# Set up desired backends\n",
        "Line" : 101,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# Old hidapi\n",
        "Line" : 110,
        "CharPositionInLine" : 3
      },
      "7" : {
        "Text" : "# New hidapi\n",
        "Line" : 116,
        "CharPositionInLine" : 3
      },
      "8" : {
        "Text" : "# Newest version - FreeBSD-compatible libusb backend\n",
        "Line" : 129,
        "CharPositionInLine" : 3
      },
      "9" : {
        "Text" : "# Earlier version - before FreeBSD support\n",
        "Line" : 134,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 10
    },
    "submodules/jsoncpp.cmake" : {
      "ObjectId" : "6071fdbe6a85ab88a63dc63ff52355dfd754c73e",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###\n\n# HID and HIDAPI\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "util/gen_rpc/CMakeLists.txt" : {
      "ObjectId" : "6362f643b13715dd69caeb617c50edcfee9041d0",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Include directories needed\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Custom build steps to generate RPC code.\n\n# Executable built from these.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Must copy the message def to the binary directory\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This generates the source files\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "util/printStream/CMakeLists.txt" : {
      "ObjectId" : "7339b25f3e54e1e7e0bba6ffe953a29137b0f260",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vrpn_Qt_GUI_server/CMakeLists.txt" : {
      "ObjectId" : "49e092a0d53012ba6c138458da3c806c6d2277b7",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Local CMake Modules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#######################################\n\n# Build shared library or not\n\n#######################################\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#######################################\n\n# Include Qt\n\n#######################################\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Need XML for QAutoGUI\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Use Qt\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set up variables for moc\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Do moc stuff\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#######################################\n\n# Include vrpn\n\n#######################################\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Sets QUATLIB_INCLUDE_DIR and QUATLIB_LIBRARIES\n",
        "Line" : 49,
        "CharPositionInLine" : 31
      },
      "9" : {
        "Text" : "#######################################\n\n# Build setup\n\n#######################################\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# MS-Windows, both 32 and 64 bits\n",
        "Line" : 61,
        "CharPositionInLine" : 10
      },
      "11" : {
        "Text" : "# Apple\n",
        "Line" : 63,
        "CharPositionInLine" : 14
      },
      "12" : {
        "Text" : "# Math library\n",
        "Line" : 64,
        "CharPositionInLine" : 34
      },
      "13" : {
        "Text" : "# other UNIXes\n",
        "Line" : 65,
        "CharPositionInLine" : 13
      },
      "14" : {
        "Text" : "# Math library\n",
        "Line" : 66,
        "CharPositionInLine" : 34
      },
      "15" : {
        "Text" : "#######################################\n\n# Include applications\n\n#######################################\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "vrpn_Qt_GUI_server/cmake/FindVRPN.cmake" : {
      "ObjectId" : "b2dabc6c086db76ae19c4f07bdfca20439f22840",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find VRPN library\n\n#\n\n# Cache Variables:\n\n#  VRPN_LIBRARY\n\n#  VRPN_SERVER_LIBRARY\n\n#  VRPN_INCLUDE_DIR\n\n#\n\n# Non-cache variables you might use in your CMakeLists.txt:\n\n#  VRPN_FOUND\n\n#  VRPN_SERVER_LIBRARIES\n\n#  VRPN_LIBRARIES\n\n#  VRPN_INCLUDE_DIRS\n\n#\n\n# VRPN_ROOT_DIR is searched preferentially for these files\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# 64-bit dir: only set on win64\n",
        "Line" : 38,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# 32-bit dir: only set on win64\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# 32-bit dir on win32, useless to us on win64\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "###\n\n# Configure VRPN\n\n###\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "###\n\n# Dependencies\n\n###\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "vrpn_Qt_GUI_server/cmake/Findquatlib.cmake" : {
      "ObjectId" : "578d6d2e099215015c653cd5fe1825fbf33af17f",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find quatlib\n\n# Find the quatlib headers and libraries.\n\n#\n\n#  QUATLIB_INCLUDE_DIRS - where to find quat.h\n\n#  QUATLIB_LIBRARIES    - List of libraries when using quatlib.\n\n#  QUATLIB_FOUND        - True if quatlib found.\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Look for the header file.\n",
        "Line" : 19,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# 64-bit dir: only set on win64\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# 32-bit dir: only set on win64\n",
        "Line" : 44,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# 32-bit dir on win32, useless to us on win64\n",
        "Line" : 47,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "# Look for the header file.\n",
        "Line" : 52,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# Look for the library.\n",
        "Line" : 64,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set QUATLIB_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "vrpn_Qt_GUI_server/vrpn_Qt_AppExample/CMakeLists.txt" : {
      "ObjectId" : "3dafcd563b229e701bbf188969bbbfa6d7c70a99",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#######################################\n\n# Qt moc\n\n#######################################\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set up variables for moc\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Do moc stuff\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#######################################\n\n# Build setup\n\n#######################################\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "vrpn_Qt_GUI_server/vrpn_Qt_AutoGUI/CMakeLists.txt" : {
      "ObjectId" : "8b5225dc542840d8e902ab6a6664a8cecf5999e0",
      "LastModified" : "2017-06-24T20:02:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#######################################\n\n# Include Qt\n\n#######################################\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set up variables for moc\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Do moc stuff\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#######################################\n\n# Build setup\n\n#######################################\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    }
  },
  "FileTypes" : {
    "CMAKE" : 91,
    "MAKEFILE" : 5
  },
  "ElapsedTime" : 5083
}