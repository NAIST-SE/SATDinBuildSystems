{
  "Repository" : "5695846",
  "Revision" : "HEAD",
  "ObjectId" : "866ba8385466a1a74ea4729e2a247c4c75584166",
  "CommitTime" : "2018-09-25T17:09:52Z",
  "Files" : {
    "Makefile" : {
      "ObjectId" : "f42e17690aba0cc2661da7958f5bf9c9365ecec8",
      "LastModified" : "2018-09-25T15:26:17Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for QEMU.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Always point to the root of the build tree (needs GNU make).\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Before including a proper config-host.mak, assume we are in the source tree\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# All following code might depend on configuration variables\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Put the all: rule here so that config-host.mak can contain dependencies.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Check that we're not trying to do an out-of-tree build from\n\n# a tree that's been used for an in-tree build.\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# TODO: The next lines include code which supports a smooth\n\n# transition from old configurations without config.status.\n\n# This code can be removed after QEMU 1.7.\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#*-to-} && \\\n\t    test -e $(KEYCODEMAP_GEN) && \\\n\t    $(PYTHON) $(KEYCODEMAP_GEN) \\\n\t          --lang glib2 \\\n\t          --varname qemu_input_map_$${src}_to_$${dst} \\\n\t          code-map $(KEYCODEMAP_CSV) $${src} $${dst} \\\n\t        > $@ || rm -f $@, \"GEN\", \"$@\")\n",
        "Line" : 330,
        "CharPositionInLine" : 46
      },
      "8" : {
        "Text" : "# Don't try to regenerate Makefile or configure\n\n# We don't generate any of them\n",
        "Line" : 341,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Overriding CFLAGS causes us to lose defines added in the sub-makefile.\n\n# Not overriding CFLAGS leads to mis-matches between compilation modes.\n\n# Therefore we replicate some of the logic in the sub-makefile.\n\n# Remove all the extra -Warning flags that QEMU uses that Capstone doesn't;\n\n# no need to annoy QEMU developers with such things.\n",
        "Line" : 494,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Only keep -O and -g cflags\n",
        "Line" : 513,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "######################################################################\n\n# Build libraries\n",
        "Line" : 526,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "######################################################################\n",
        "Line" : 532,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# avoid old build problems by removing potentially incorrect old files\n",
        "Line" : 736,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# May not be present in GENERATED_FILES\n",
        "Line" : 745,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# opengl shader programs\n",
        "Line" : 905,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# documentation\n",
        "Line" : 923,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Reports/Analysis\n",
        "Line" : 995,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# 64 bit executables\n",
        "Line" : 1014,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# 32 bit executables\n",
        "Line" : 1018,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# SIGNCODE\n",
        "Line" : 1036,
        "CharPositionInLine" : 6
      },
      "21" : {
        "Text" : "#qemu-system-}; \\\n           echo Section \\\"$$arch\\\" Section_$$arch; \\\n           echo SetOutPath \\\"\\$$INSTDIR\\\"; \\\n           echo File \\\"\\$${BINDIR}\\\\$$i\\\"; \\\n           echo SectionEnd; \\\n         done \\\n        ) >${INSTDIR}/system-emulations.nsh\n",
        "Line" : 1040,
        "CharPositionInLine" : 23
      },
      "22" : {
        "Text" : "# SIGNCODE\n\n# CONFIG_WIN\n",
        "Line" : 1059,
        "CharPositionInLine" : 6
      },
      "23" : {
        "Text" : "# Add a dependency on the generated files, so that they are always\n\n# rebuilt before other object files\n",
        "Line" : 1062,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Include automatically generated dependency files\n\n# Dependencies in Makefile.objs files come from our recursive subdir rules\n",
        "Line" : 1074,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25,
      "Errorlog" : "line 378:36 token recognition error at: '\\1'\nline 378:59 token recognition error at: '\\1'\nline 378:62 token recognition error at: '\\2'\n"
    },
    "pc-bios/Makefile" : {
      "ObjectId" : "315288df84e1e2817e495392e12aa9e9b03c67db",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# NOTE: only compilable with x86 cross compile tools\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "pc-bios/keymaps/Makefile" : {
      "ObjectId" : "f0e44fd110c340e3704addc4147ec07217abc301",
      "LastModified" : "2017-10-16T12:50:54Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "pc-bios/optionrom/Makefile" : {
      "ObjectId" : "a9a9e5e7ebc193583f7e5cd58caaa46df3fb7606",
      "LastModified" : "2017-10-16T12:50:54Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Dummy command so that make thinks it has done something\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiling with no optimization creates ROMs that are too large\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Drop -fstack-protector and the like\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Attempt to work around compilers that lack -m16 (GCC <= 4.8, clang <= ??)\n\n# On GCC we add -fno-toplevel-reorder to keep the order of asm blocks with\n\n# respect to the rest of the code.  clang does not have -fno-toplevel-reorder,\n\n# but it places all asm blocks at the beginning and we're relying on it for\n\n# the option ROM header.  So just force clang not to use the integrated\n\n# assembler, which doesn't support .code16gcc.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# suppress auto-removal of intermediate files\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "pc-bios/s390-ccw/Makefile" : {
      "ObjectId" : "1eb316b02f1fab0d62667ab7f5a6646a6945ab36",
      "LastModified" : "2018-06-20T08:51:30Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Dummy command so that make thinks it has done something\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "pc-bios/spapr-rtas/Makefile" : {
      "ObjectId" : "f26dd428b79e6676c1b55f28659f170fca3f5e18",
      "LastModified" : "2017-10-16T12:50:54Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Dummy command so that make thinks it has done something\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#CFLAGS += -I$(SRC_PATH)\n\n#QEMU_CFLAGS = $(CFLAGS)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "po/Makefile" : {
      "ObjectId" : "e47e262ee668ef728651a323889e8dcdf0e8d8cc",
      "LastModified" : "2018-07-23T09:50:54Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This makefile is very special as it's meant to build as part of the build\n\n# process and also within the source tree to update the translation files.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set SRC_PATH for in-tree builds without configuration.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The default target must come before any include statements.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "roms/Makefile" : {
      "ObjectId" : "f1ac85ae9b6b3adbc4a60bd962ecf5b20754625e",
      "LastModified" : "2018-07-23T09:50:54Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# cross compiler auto detection\n\n#\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# first find cross binutils in path\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# then check we have cross gcc too\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# finally strip off path + toolname so we get the prefix\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# tag our seabios builds\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# EfiRom utility is shipped with edk2 / tianocore, in BaseTools/\n\n#\n\n# We need that to combine multiple images (legacy bios,\n\n# efi ia32, efi x64) into a single rom binary.\n\n#\n\n# We try to find it in the path.  You can also pass the location on\n\n# the command line, i.e. \"make EFIROM=/path/to/EfiRom efirom\"\n\n#\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "tests/multiboot/Makefile" : {
      "ObjectId" : "ed4225e7d1342fe29ce1959659e66c49aa72fb22",
      "LastModified" : "2018-07-23T09:50:54Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/qemu-iotests/Makefile" : {
      "ObjectId" : "27380e60c1c633c5e48505484967eb497c2975db",
      "LastModified" : "2017-10-16T12:50:54Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# no default target\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/tcg/Makefile" : {
      "ObjectId" : "bf064153900a438e4ad8e2d79eaaac8a27d66062",
      "LastModified" : "2018-07-23T09:50:54Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# -*- Mode: makefile -*-\n\n#\n\n# TCG tests\n\n#\n\n# These are complicated by the fact we want to build them for guest\n\n# systems. This requires knowing what guests we are building and which\n\n# ones we have cross-compilers for or docker images with\n\n# cross-compilers.\n\n#\n\n# The tests themselves should be as minimal as possible as\n\n# cross-compilers don't always have a large amount of libraries\n\n# available.\n\n#\n\n# We only include the host build system for SRC_PATH and we don't\n\n# bother with the common rules.mk. We expect the following:\n\n#\n\n#   CC - the C compiler command\n\n#   EXTRA_CFLAGS - any extra CFLAGS\n\n#   BUILD_STATIC - are we building static binaries\n\n#\n\n# By default all tests are statically compiled but some host systems\n\n# may not package static libraries by default. If an external\n\n# cross-compiler can only build dynamic libraries the user might need\n\n# to make extra efforts to ensure ld.so can link at runtime when the\n\n# tests are run.\n\n#\n\n# We also accept SPEED=slow to enable slower running tests\n\n#\n\n# We also expect to be in the tests build dir for the FOO-linux-user.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# $1 = test name, $2 = cmd, $3 = desc\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# $1 = test name, $2 = reference\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# $1 = test name, $2 = reason\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Tests we are building\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Start with a blank slate, the build targets get to add stuff first\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The QEMU for this TARGET\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# If TCG debugging is enabled things are a lot slower\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# The order we include is important. We include multiarch, base arch\n\n# and finally arch if it's not the same as base arch.\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Add the common build options\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\n\n# Test Runners\n\n#\n\n# By default we just run the test with the appropriate QEMU for the\n\n# target. More advanced tests may want to override the runner in their\n\n# specific make rules. Additional runners for the same binary should\n\n# be added to EXTRA_RUNS.\n\n#\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# There is no clean target, the calling make just rm's the tests build dir\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "tests/tcg/cris/Makefile" : {
      "ObjectId" : "664b30ce817778aab8a8b10c9b67eed6b4c416f8",
      "LastModified" : "2017-10-16T12:50:54Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#AS      = $(CROSS)as\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# we rely on GCC inline:ing the stuff we tell it to in many places here.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# check_jsr is broken.\n\n#TESTCASES += check_jsr.tst\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#TESTCASES += check_gcctorture_pr28634.ctst\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "tests/tcg/lm32/Makefile" : {
      "ObjectId" : "57e7363b2cf5d043168a19f055bdba0249f88c23",
      "LastModified" : "2017-10-16T12:50:54Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#TESTCASES += test_rcsr.tst\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#TESTCASES += test_wcsr.tst\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tests/tcg/mips/mips32-dsp/Makefile" : {
      "ObjectId" : "c3a0a0094460925cfd8ca66b8af967000ba9dec9",
      "LastModified" : "2017-10-16T12:50:54Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/tcg/mips/mips32-dspr2/Makefile" : {
      "ObjectId" : "ed19581c7ebe831090c4c870495f2bbaa7f67bcc",
      "LastModified" : "2017-10-16T12:50:54Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/tcg/mips/mips64-dsp/Makefile" : {
      "ObjectId" : "b2ac6b3ffd81f8e79998bf1a1accb7f712ba5b08",
      "LastModified" : "2017-10-16T12:50:54Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#TESTCASES = absq_s_ob.tst\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#TESTCASES += dappend.tst\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#TESTCASES += preceq_l_pwl.tst\n\n#TESTCASES += preceq_l_pwr.tst\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#TESTCASES += precequ_qh_obla.tst\n\n#TESTCASES += precequ_qh_obl.tst\n\n#TESTCASES += precequ_qh_obra.tst\n\n#TESTCASES += precequ_qh_obr.tst\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#TESTCASES += precr_ob_qh.tst\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#TESTCASES += precr_sra_qh_pw.tst\n\n#TESTCASES += precr_sra_r_qh_pw.tst\n\n#TESTCASES += prependd.tst\n\n#TESTCASES += prependw.tst\n\n#TESTCASES += raddu_l_ob.tst\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#TESTCASES += shra_ob.tst\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#TESTCASES += shra_r_ob.tst\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#TESTCASES += shrl_qh.tst\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#TESTCASES += shrlv_qh.tst\n",
        "Line" : 269,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "tests/tcg/mips/mips64-dspr2/Makefile" : {
      "ObjectId" : "ba44bb9c0e5ab33446c411075cbf5fc6793996a1",
      "LastModified" : "2017-10-16T12:50:54Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#TESTCASES += adduh_ob.tst\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#TESTCASES += adduh_r_ob.tst\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#TESTCASES += addu_qh.tst\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#TESTCASES += addu_s_qh.tst\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#TESTCASES += cmpgdu_eq_ob.tst\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#TESTCASES += cmpgdu_le_ob.tst\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#TESTCASES += cmpgdu_lt_ob.tst\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#TESTCASES += dbalign.tst\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#TESTCASES += dpa_w_qh.tst\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#TESTCASES += dps_w_qh.tst\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#TESTCASES += shrav_ob.tst\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#TESTCASES += shrav_r_ob.tst\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#TESTCASES += subuh_ob.tst\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#TESTCASES += subuh_r_ob.tst\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#TESTCASES += subu_qh.tst\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#TESTCASES += subu_s_qh.tst\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "tests/tcg/openrisc/Makefile" : {
      "ObjectId" : "fb5ceda512f8552c9dd4e8a671be41e53da6f269",
      "LastModified" : "2017-10-16T12:50:54Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/tcg/xtensa/Makefile" : {
      "ObjectId" : "2f5691f75b0905c2dcb3880bb4bf9bcf37ee93a0",
      "LastModified" : "2018-09-25T10:05:56Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#TESTCASES += test_boolean.tst\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 19
  },
  "ElapsedTime" : 10049
}