{
  "Repository" : "18505010",
  "Revision" : "HEAD",
  "ObjectId" : "651bf21184e3a4f851fe2d145d4e916180ff08e9",
  "CommitTime" : "2019-04-16T14:32:47Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "7afc10ada569de2c25d3a854e9ceae8dbdb28592",
      "LastModified" : "2019-04-16T14:32:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# force out-of-source build\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Correct RPATH usage on OS X\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Version of the project\n\n# Generic version of not only the library. Major version is reserved for really big changes of the project,\n\n# minor version changes with added functionality (new tool, functionality of the tool or library, ...) and\n\n# micro version is changed with a set of small changes or bugfixes anywhere in the project.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Version of the library\n\n# Major version is changed with every backward non-compatible API/ABI change in libyang, minor version changes\n\n# with backward compatible change and micro version is connected with any internal change of the library.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# set default build type if not specified by user\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# options\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# require at least clang 3.0\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# include custom Modules\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# setup bindings\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Python bindings depend on C++ bindings because of SWIG\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# change version in config files\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# target for local build deb package\n",
        "Line" : 173,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# target for local build rpm package\n",
        "Line" : 184,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# by default build shared library\n\n# static build requires static libpcre library\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# check the supported platform\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# create static libyang library\n",
        "Line" : 260,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# remove -Wl,-Bdynamic\n",
        "Line" : 265,
        "CharPositionInLine" : 46
      },
      "17" : {
        "Text" : "#only for tests with visible internal symbols\n",
        "Line" : 273,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "#link dl\n",
        "Line" : 276,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# link math\n",
        "Line" : 284,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# find pthreads\n",
        "Line" : 287,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# find PCRE library\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# generate and install pkg-config file\n",
        "Line" : 307,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# check that pkg-config includes the used path\n",
        "Line" : 310,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# generate doxygen documentation for libyang API\n",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# clean cmake cache\n",
        "Line" : 339,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# YANG extensions plugins\n",
        "Line" : 346,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# if the tests are enabled, build libyang_ext_test\n",
        "Line" : 348,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# YANG user types plugins\n",
        "Line" : 372,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# yanglint\n",
        "Line" : 392,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#yangre\n",
        "Line" : 398,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# yang2yin\n",
        "Line" : 404,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# uninstall\n",
        "Line" : 407,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 33
    },
    "CMakeModules/FindCMocka.cmake" : {
      "ObjectId" : "770b44afc4262b68a51245d087fb6ba6310302a8",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find CMocka\n\n# Once done this will define\n\n#\n\n#  CMOCKA_ROOT_DIR - Set this variable to the root installation of CMocka\n\n#\n\n# Read-Only variables:\n\n#  CMOCKA_FOUND - system has CMocka\n\n#  CMOCKA_INCLUDE_DIR - the CMocka include directory\n\n#  CMOCKA_LIBRARIES - Link these to use CMocka\n\n#  CMOCKA_DEFINITIONS - Compiler switches required for using CMocka\n\n#\n\n#=============================================================================\n\n#  Copyright (c) 2011-2012 Andreas Schneider <asn@cryptomilk.org>\n\n#\n\n#  Distributed under the OSI-approved BSD License (the \"License\");\n\n#  see accompanying file Copyright.txt for details.\n\n#\n\n#  This software is distributed WITHOUT ANY WARRANTY; without even the\n\n#  implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n#  See the License for more information.\n\n#=============================================================================\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# show the CMOCKA_INCLUDE_DIR and CMOCKA_LIBRARIES variables only in the advanced view\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMakeModules/FindNodejs.cmake" : {
      "ObjectId" : "50307688bd1429d54cb192593fd2daa836c9fd54",
      "LastModified" : "2016-02-29T10:47:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macro to add directory to NODEJS_INCLUDE_DIRS if it exists and is not /usr/include\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# If compat-libuv package exists, it must be at start of include path\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# set (NODEJS_INCLUDE_DIRS ${UV_ROOT_DIR})\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Now look for node. Flag an error if not found\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Check that v8.h is in NODEJS_INCLUDE_DIRS\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Check that uv.h is in NODEJS_INCLUDE_DIRS\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# we end up with a nasty newline so strip everything that isn't a number\n",
        "Line" : 75,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 7
    },
    "CMakeModules/FindPCRE.cmake" : {
      "ObjectId" : "a28ff11758861e6037c55c601f4edfdf960501d8",
      "LastModified" : "2016-02-29T10:47:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2007-2009 LuaDist.\n\n# Created by Peter Kapec <kapecp@gmail.com>\n\n# Redistribution and use of this file is allowed according to the terms of the MIT license.\n\n# Note:\n\n# Searching headers and libraries is very simple and is NOT as powerful as scripts\n\n# distributed with CMake, because LuaDist defines directories to search for.\n\n# Everyone is encouraged to contact the author with improvements. Maybe this file\n\n# becomes part of CMake distribution sometimes.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Find pcre\n\n# Find the native PCRE headers and libraries.\n\n#\n\n# PCRE_INCLUDE_DIRS - where to find pcre.h, etc.\n\n# PCRE_LIBRARIES - List of libraries when using pcre.\n\n# PCRE_FOUND - True if pcre found.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look for the header file.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Look for the library.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set PCRE_FOUND to TRUE if all listed variables are TRUE.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Copy the results to the output variables.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "CMakeModules/uninstall.cmake" : {
      "ObjectId" : "b9618a29f9d47c14fc14bb20f68367a7ac7475f3",
      "LastModified" : "2018-11-20T09:51:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "FindLibYANG.cmake" : {
      "ObjectId" : "b3478b1f86f68feada69f05d1b97c30cb3a46b6f",
      "LastModified" : "2018-11-20T09:51:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find LibYANG\n\n# Once done this will define\n\n#\n\n#  LIBYANG_FOUND - system has LibYANG\n\n#  LIBYANG_INCLUDE_DIRS - the LibYANG include directory\n\n#  LIBYANG_LIBRARIES - Link these to use LibSSH\n\n#\n\n#  Author Radek Krejci <rkrejci@cesnet.cz>\n\n#  Copyright (c) 2015 CESNET, z.s.p.o.\n\n#\n\n#  Redistribution and use in source and binary forms, with or without\n\n#  modification, are permitted provided that the following conditions\n\n#  are met:\n\n#\n\n#  1. Redistributions of source code must retain the copyright\n\n#     notice, this list of conditions and the following disclaimer.\n\n#  2. Redistributions in binary form must reproduce the copyright\n\n#     notice, this list of conditions and the following disclaimer in the\n\n#     documentation and/or other materials provided with the distribution.\n\n#  3. The name of the author may not be used to endorse or promote products \n\n#     derived from this software without specific prior written permission.\n\n#\n\n#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n\n#  IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n\n#  OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n\n#  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\n\n#  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n\n#  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n\n#  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# show the LIBYANG_INCLUDE_DIRS and LIBYANG_LIBRARIES variables only in the advanced view\n",
        "Line" : 76,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "src/extensions/CMakeLists.txt" : {
      "ObjectId" : "e2c18b5ef5e1ca28d6d80f2e6b171793e98daa9f",
      "LastModified" : "2018-11-20T09:51:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/user_types/CMakeLists.txt" : {
      "ObjectId" : "74aae322e9934019cf15787b660d709ca6e32060",
      "LastModified" : "2018-11-20T09:51:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "swig/CMakeLists.txt" : {
      "ObjectId" : "24a4b685e96f635d0950ab7d0d86bfeb64366ecd",
      "LastModified" : "2019-04-09T13:37:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# temporary bugfix\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# find SWIG package\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# find Python package\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# include custom Modules\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# install binary\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "swig/cpp/examples/CMakeLists.txt" : {
      "ObjectId" : "828e60f37fdbc07b913e31eecabeaec4d3f12b05",
      "LastModified" : "2018-11-20T09:51:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "swig/cpp/tests/CMakeLists.txt" : {
      "ObjectId" : "fba06fface049e11985700de36df315d975c2918",
      "LastModified" : "2018-11-20T09:51:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "swig/java/CMakeLists.txt" : {
      "ObjectId" : "1af6a03f99ae88ba78356bbab6f5c7614486abb9",
      "LastModified" : "2018-11-20T09:51:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# install so file\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "swig/java/tests/CMakeLists.txt" : {
      "ObjectId" : "b1e4bbb24d129189d220b01d42936d1ce5047941",
      "LastModified" : "2018-11-20T09:51:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "swig/javascript/CMakeLists.txt" : {
      "ObjectId" : "852c6a171ec60f482bcf984f12ec9a8c60d5b788",
      "LastModified" : "2018-11-20T09:51:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# remove javascript directory with \"make clean\" command.\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "swig/python/CMakeLists.txt" : {
      "ObjectId" : "994b12349c782944c531ae6130ddeb0292230300",
      "LastModified" : "2018-11-20T09:51:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Generate header with SWIG run-time functions\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "ae1ae7389f184c231fa7bc0bfad29934185661a9",
      "LastModified" : "2019-04-09T13:37:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Correct RPATH usage on OS X\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set TESTS_DIR to realpath\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set common attributes of all tests\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tests/callgrind/CMakeLists.txt" : {
      "ObjectId" : "90ad62177b9555609073ac938225ca073b759d82",
      "LastModified" : "2018-11-20T09:51:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Callgrind tests\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/fuzz/CMakeLists.txt" : {
      "ObjectId" : "c450bcb5ac2c16a579aa0c39683a5d68ba26731b",
      "LastModified" : "2019-04-09T13:37:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/perf/Makefile" : {
      "ObjectId" : "2e553f7697df58a7f5b16ad5b6710244b8259be8",
      "LastModified" : "2019-04-09T13:37:22Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 18,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 3189
}