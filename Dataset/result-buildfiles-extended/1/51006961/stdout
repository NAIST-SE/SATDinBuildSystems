{
  "Repository" : "51006961",
  "Revision" : "HEAD",
  "ObjectId" : "486f7d8ed61518508c0c653c84015b63285a1521",
  "CommitTime" : "2019-04-18T15:54:00Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "b9d53cb50f2811c889423e79c53a3903ae578a08",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2016 PaddlePaddle Authors. All Rights Reserved.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n# http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "################################ Exposed Configurations #######################################\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "################################ Internal Configurations #######################################\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# TODO(Superjomn) Remove WITH_ANAKIN option if not needed latter.\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# PY_VERSION\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# CMAKE_BUILD_TYPE\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "########################################################################################\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# download mklml package\n\n# download xbyak package\n\n# download, build, install libxsmm\n\n# download, build, install zlib\n\n# download, build, install gflags\n\n# download, build, install glog\n\n# download, build, install gtest\n\n# download, build, install protobuf\n\n# download, build, install python\n\n# download, build, install openblas\n\n# download, build, install mkldnn\n\n# download, build, install nGraph\n\n# download boost\n\n# download eigen3\n\n# download pybind11\n",
        "Line" : 131,
        "CharPositionInLine" : 28
      },
      "8" : {
        "Text" : "# download xxhash\n",
        "Line" : 149,
        "CharPositionInLine" : 28
      },
      "9" : {
        "Text" : "# download snappy\n",
        "Line" : 151,
        "CharPositionInLine" : 28
      },
      "10" : {
        "Text" : "# download snappystream\n",
        "Line" : 152,
        "CharPositionInLine" : 31
      },
      "11" : {
        "Text" : "# download, build, install warpctc\n",
        "Line" : 153,
        "CharPositionInLine" : 28
      },
      "12" : {
        "Text" : "# there is no official support of nccl, cupti in windows\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# set paddle compile flags\n\n# set cudnn libraries, must before configure\n\n# add paddle env configuration\n",
        "Line" : 190,
        "CharPositionInLine" : 28
      },
      "14" : {
        "Text" : "# simplify cmake module\n\n# set paddle packages\n\n# set ccache for compilation\n\n# set unittest and link libs\n\n# set PADDLE_VERSION\n\n# set code coverage\n\n# add paddle fluid inference libraries\n",
        "Line" : 228,
        "CharPositionInLine" : 28
      },
      "15" : {
        "Text" : "#TODO(luotao), combine this warning with `make inference_lib_dist` command.\n",
        "Line" : 253,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 16
    },
    "cmake/CMakeDetermineGoCompiler.cmake" : {
      "ObjectId" : "abf0a00c5e99e4201dede36f13200cfc9c151ad3",
      "LastModified" : "2017-05-17T16:38:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/CMakeGoInformation.cmake" : {
      "ObjectId" : "ba51ac93fcd429478f324b66bd5129d94ea2a8f4",
      "LastModified" : "2017-05-17T09:45:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/CMakeTestGoCompiler.cmake" : {
      "ObjectId" : "b9891b015baced05b51e34dba562fd98a84fe14c",
      "LastModified" : "2017-05-17T09:45:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/FindGflags.cmake" : {
      "ObjectId" : "6587089ba382dc09195298b486da6630f2df236b",
      "LastModified" : "2017-05-17T09:45:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Ceres Solver - A fast non-linear least squares minimizer\n\n# Copyright 2015 Google Inc. All rights reserved.\n\n# http://ceres-solver.org/\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright notice,\n\n#   this list of conditions and the following disclaimer.\n\n# * Redistributions in binary form must reproduce the above copyright notice,\n\n#   this list of conditions and the following disclaimer in the documentation\n\n#   and/or other materials provided with the distribution.\n\n# * Neither the name of Google Inc. nor the names of its contributors may be\n\n#   used to endorse or promote products derived from this software without\n\n#   specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n# Author: alexs.mac@gmail.com (Alex Stewart)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FindGflags.cmake - Find Google gflags logging library.\n\n#\n\n# This module will attempt to find gflags, either via an exported CMake\n\n# configuration (generated by gflags >= 2.1 which are built with CMake), or\n\n# by performing a standard search for all gflags components.  The order of\n\n# precedence for these two methods of finding gflags is controlled by:\n\n# GFLAGS_PREFER_EXPORTED_GFLAGS_CMAKE_CONFIGURATION.\n\n#\n\n# This module defines the following variables:\n\n#\n\n# GFLAGS_FOUND: TRUE iff gflags is found.\n\n# GFLAGS_INCLUDE_DIRS: Include directories for gflags.\n\n# GFLAGS_LIBRARIES: Libraries required to link gflags.\n\n# GFLAGS_NAMESPACE: The namespace in which gflags is defined.  In versions of\n\n#                   gflags < 2.1, this was google, for versions >= 2.1 it is\n\n#                   by default gflags, although can be configured when building\n\n#                   gflags to be something else (i.e. google for legacy\n\n#                   compatibility).\n\n#\n\n# The following variables control the behaviour of this module when an exported\n\n# gflags CMake configuration is not found.\n\n#\n\n# GFLAGS_PREFER_EXPORTED_GFLAGS_CMAKE_CONFIGURATION: TRUE/FALSE, iff TRUE then\n\n#                           then prefer using an exported CMake configuration\n\n#                           generated by gflags >= 2.1 over searching for the\n\n#                           gflags components manually.  Otherwise (FALSE)\n\n#                           ignore any exported gflags CMake configurations and\n\n#                           always perform a manual search for the components.\n\n#                           Default: TRUE iff user does not define this variable\n\n#                           before we are called, and does NOT specify either\n\n#                           GFLAGS_INCLUDE_DIR_HINTS or GFLAGS_LIBRARY_DIR_HINTS\n\n#                           otherwise FALSE.\n\n# GFLAGS_INCLUDE_DIR_HINTS: List of additional directories in which to\n\n#                           search for gflags includes, e.g: /timbuktu/include.\n\n# GFLAGS_LIBRARY_DIR_HINTS: List of additional directories in which to\n\n#                           search for gflags libraries, e.g: /timbuktu/lib.\n\n#\n\n# The following variables are also defined by this module, but in line with\n\n# CMake recommended FindPackage() module style should NOT be referenced directly\n\n# by callers (use the plural variables detailed above instead).  These variables\n\n# do however affect the behaviour of the module via FIND_[PATH/LIBRARY]() which\n\n# are NOT re-called (i.e. search for library is not repeated) if these variables\n\n# are set with valid values _in the CMake cache_. This means that if these\n\n# variables are set directly in the cache, either by the user in the CMake GUI,\n\n# or by the user passing -DVAR=VALUE directives to CMake when called (which\n\n# explicitly defines a cache variable), then they will be used verbatim,\n\n# bypassing the HINTS variables and other hard-coded search locations.\n\n#\n\n# GFLAGS_INCLUDE_DIR: Include directory for gflags, not including the\n\n#                     include directory of any dependencies.\n\n# GFLAGS_LIBRARY: gflags library, not including the libraries of any\n\n#                 dependencies.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Reset CALLERS_CMAKE_FIND_LIBRARY_PREFIXES to its value when FindGflags was\n\n# invoked, necessary for MSVC.\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Called if we failed to find gflags or any of it's required dependencies,\n\n# unsets all public (designed to be used externally) variables and reports\n\n# error message at priority depending upon [REQUIRED/QUIET/<NONE>] argument.\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Do not use unset, as we want to keep GFLAGS_NAMESPACE in the cache,\n\n# but simply clear its value.\n",
        "Line" : 100,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Make results of search visible in the CMake GUI if gflags has not\n\n# been found so that user does not have to toggle to advanced view.\n",
        "Line" : 105,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Note <package>_FIND_[REQUIRED/QUIETLY] variables defined by FindPackage()\n\n# use the camelcase library name, not uppercase.\n",
        "Line" : 113,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Neither QUIETLY nor REQUIRED, use no priority which emits a message\n\n# but continues configuration and allows generation.\n",
        "Line" : 120,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Verify that all variable names passed as arguments are defined (can be empty\n\n# but must be defined) or raise a fatal error.\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Use check_cxx_source_compiles() to compile trivial test programs to determine\n\n# the gflags namespace.  This works on all OSs except Windows.  If using Visual\n\n# Studio, it fails because msbuild forces check_cxx_source_compiles() to use\n\n# CMAKE_BUILD_TYPE=Debug for the test project, which usually breaks detection\n\n# because MSVC requires that the test project use the same build type as gflags,\n\n# which would normally be built in Release.\n\n#\n\n# Defines: GFLAGS_NAMESPACE in the caller's scope with the detected namespace,\n\n#          which is blank (empty string, will test FALSE is CMake conditionals)\n\n#          if detection failed.\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Verify that all required variables are defined.\n",
        "Line" : 148,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Ensure that GFLAGS_NAMESPACE is always unset on completion unless\n\n# we explicitly set if after having the correct namespace.\n",
        "Line" : 151,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Setup include path & link library for gflags for CHECK_CXX_SOURCE_COMPILES.\n",
        "Line" : 156,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# First try the (older) google namespace.  Note that the output variable\n\n# MUST be unique to the build type as otherwise the test is not repeated as\n\n# it is assumed to have already been performed.\n",
        "Line" : 159,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Try (newer) gflags namespace instead.  Note that the output variable\n\n# MUST be unique to the build type as otherwise the test is not repeated as\n\n# it is assumed to have already been performed.\n",
        "Line" : 174,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Use regex on the gflags headers to attempt to determine the gflags namespace.\n\n# Checks both gflags.h (contained namespace on versions < 2.1.2) and\n\n# gflags_declare.h, which contains the namespace on versions >= 2.1.2.\n\n# In general, this method should only be used when\n\n# GFLAGS_CHECK_GFLAGS_NAMESPACE_USING_TRY_COMPILE() cannot be used, or has\n\n# failed.\n\n#\n\n# Defines: GFLAGS_NAMESPACE in the caller's scope with the detected namespace,\n\n#          which is blank (empty string, will test FALSE is CMake conditionals)\n\n#          if detection failed.\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Verify that all required variables are defined.\n",
        "Line" : 203,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Ensure that GFLAGS_NAMESPACE is always undefined on completion unless\n\n# we explicitly set if after having the correct namespace.\n",
        "Line" : 205,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Scan gflags.h to identify what namespace gflags was built with.  On\n\n# versions of gflags < 2.1.2, gflags.h was configured with the namespace\n\n# directly, on >= 2.1.2, gflags.h uses the GFLAGS_NAMESPACE #define which\n\n# is defined in gflags_declare.h, we try each location in turn.\n",
        "Line" : 209,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Found valid gflags namespace from gflags.h.\n",
        "Line" : 235,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Failed to find gflags namespace from gflags.h, gflags is likely a new\n\n# version, check gflags_declare.h, which in newer versions (>= 2.1.2) contains\n\n# the GFLAGS_NAMESPACE #define, which is then referenced in gflags.h.\n",
        "Line" : 240,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# Found valid gflags namespace from gflags.h.\n",
        "Line" : 265,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# -----------------------------------------------------------------\n\n# By default, if the user has expressed no preference for using an exported\n\n# gflags CMake configuration over performing a search for the installed\n\n# components, and has not specified any hints for the search locations, then\n\n# prefer a gflags exported configuration if available.\n",
        "Line" : 271,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Try to find an exported CMake configuration for gflags, as generated by\n\n# gflags versions >= 2.1.\n\n#\n\n# We search twice, s/t we can invert the ordering of precedence used by\n\n# find_package() for exported package build directories, and installed\n\n# packages (found via CMAKE_SYSTEM_PREFIX_PATH), listed as items 6) and 7)\n\n# respectively in [1].\n\n#\n\n# By default, exported build directories are (in theory) detected first, and\n\n# this is usually the case on Windows.  However, on OS X & Linux, the install\n\n# path (/usr/local) is typically present in the PATH environment variable\n\n# which is checked in item 4) in [1] (i.e. before both of the above, unless\n\n# NO_SYSTEM_ENVIRONMENT_PATH is passed).  As such on those OSs installed\n\n# packages are usually detected in preference to exported package build\n\n# directories.\n\n#\n\n# To ensure a more consistent response across all OSs, and as users usually\n\n# want to prefer an installed version of a package over a locally built one\n\n# where both exist (esp. as the exported build directory might be removed\n\n# after installation), we first search with NO_CMAKE_PACKAGE_REGISTRY which\n\n# means any build directories exported by the user are ignored, and thus\n\n# installed directories are preferred.  If this fails to find the package\n\n# we then research again, but without NO_CMAKE_PACKAGE_REGISTRY, so any\n\n# exported build directories will now be detected.\n\n#\n\n# To prevent confusion on Windows, we also pass NO_CMAKE_BUILDS_PATH (which\n\n# is item 5) in [1]), to not preferentially use projects that were built\n\n# recently with the CMake GUI to ensure that we always prefer an installed\n\n# version if available.\n\n#\n\n# [1] http://www.cmake.org/cmake/help/v2.8.11/cmake.html#command:find_package\n",
        "Line" : 287,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Failed to find an installed version of gflags, repeat search allowing\n\n# exported build directories.\n",
        "Line" : 325,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# Again pass NO_CMAKE_BUILDS_PATH, as we know that gflags is exported and\n\n# do not want to treat projects built with the CMake GUI preferentially.\n",
        "Line" : 329,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# gflags v2.1 - 2.1.2 shipped with a bug in their gflags-config.cmake [1]\n\n# whereby gflags_LIBRARIES = \"gflags\", but there was no imported target\n\n# called \"gflags\", they were called: gflags[_nothreads]-[static/shared].\n\n# As this causes linker errors when gflags is not installed in a location\n\n# on the current library paths, detect if this problem is present and\n\n# fix it.\n\n#\n\n# [1] https://github.com/gflags/gflags/issues/110\n",
        "Line" : 341,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# NOTE: This is not written as additional conditions in the outer\n\n#       if (gflags_FOUND) as the NOT TARGET \"${gflags_LIBRARIES}\"\n\n#       condition causes problems if gflags is not found.\n",
        "Line" : 350,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# Ordering here expresses preference for detection, specifically we do not\n\n# want to use the _nothreads variants if the full library is available.\n",
        "Line" : 360,
        "CharPositionInLine" : 6
      },
      "29" : {
        "Text" : "# gflags does not export the namespace in their CMake configuration, so\n\n# use our function to determine what it should be, as it can be either\n\n# gflags or google dependent upon version & configuration.\n\n#\n\n# NOTE: We use the regex method to determine the namespace here, as\n\n#       check_cxx_source_compiles() will not use imported targets, which\n\n#       is what gflags will be in this case.\n",
        "Line" : 391,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# Either failed to find an exported gflags CMake configuration, or user\n\n# told us not to use one.  Perform a manual search for all gflags components.\n",
        "Line" : 412,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# Handle possible presence of lib prefix for libraries on MSVC, see\n\n# also GFLAGS_RESET_FIND_LIBRARY_PREFIX().\n",
        "Line" : 415,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# Preserve the caller's original values for CMAKE_FIND_LIBRARY_PREFIXES\n\n# s/t we can set it back before returning.\n",
        "Line" : 418,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "# The empty string in this list is important, it represents the case when\n\n# the libraries have no prefix (shared libraries / DLLs).\n",
        "Line" : 421,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# Search user-installed locations first, so that we prefer user installs\n\n# to system installs where both exist.\n",
        "Line" : 426,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# Mac OS X\n",
        "Line" : 430,
        "CharPositionInLine" : 32
      },
      "36" : {
        "Text" : "# Mac OS X.\n",
        "Line" : 431,
        "CharPositionInLine" : 37
      },
      "37" : {
        "Text" : "# Windows (for C:/Program Files prefix).\n",
        "Line" : 435,
        "CharPositionInLine" : 19
      },
      "38" : {
        "Text" : "# Windows (for C:/Program Files prefix).\n",
        "Line" : 436,
        "CharPositionInLine" : 21
      },
      "39" : {
        "Text" : "# Mac OS X.\n",
        "Line" : 440,
        "CharPositionInLine" : 28
      },
      "40" : {
        "Text" : "# Windows (for C:/Program Files prefix).\n",
        "Line" : 444,
        "CharPositionInLine" : 15
      },
      "41" : {
        "Text" : "# Windows (for C:/Program Files prefix).\n",
        "Line" : 445,
        "CharPositionInLine" : 17
      },
      "42" : {
        "Text" : "# Search supplied hint directories first if supplied.\n",
        "Line" : 447,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "# gflags typically requires a threading library (which is OS dependent), note\n\n# that this defines the CMAKE_THREAD_LIBS_INIT variable.  If we are able to\n\n# detect threads, we assume that gflags requires it.\n",
        "Line" : 473,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# On Windows (including MinGW), the Shlwapi library is used by gflags if\n\n# available.\n",
        "Line" : 478,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "# Mark internally as found, then verify. GFLAGS_REPORT_NOT_FOUND() unsets\n\n# if called.\n",
        "Line" : 488,
        "CharPositionInLine" : 2
      },
      "46" : {
        "Text" : "# Identify what namespace gflags was built with.\n",
        "Line" : 492,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "# To handle Windows peculiarities / CMake bugs on MSVC we try two approaches\n\n# to detect the gflags namespace:\n\n#\n\n# 1) Try to use check_cxx_source_compiles() to compile a trivial program\n\n#    with the two choices for the gflags namespace.\n\n#\n\n# 2) [In the event 1) fails] Use regex on the gflags headers to try to\n\n#    determine the gflags namespace.  Whilst this is less robust than 1),\n\n#    it does avoid any interaction with msbuild.\n",
        "Line" : 494,
        "CharPositionInLine" : 4
      },
      "48" : {
        "Text" : "# Failed to determine gflags namespace using check_cxx_source_compiles()\n\n# method, try and obtain it using regex on the gflags headers instead.\n",
        "Line" : 506,
        "CharPositionInLine" : 6
      },
      "49" : {
        "Text" : "# Make the GFLAGS_NAMESPACE a cache variable s/t the user can view it, and could\n\n# overwrite it in the CMake GUI.\n",
        "Line" : 521,
        "CharPositionInLine" : 2
      },
      "50" : {
        "Text" : "# gflags does not seem to provide any record of the version in its\n\n# source tree, thus cannot extract version.\n",
        "Line" : 526,
        "CharPositionInLine" : 2
      },
      "51" : {
        "Text" : "# Catch case when caller has set GFLAGS_NAMESPACE in the cache / GUI\n\n# with an invalid value.\n",
        "Line" : 529,
        "CharPositionInLine" : 2
      },
      "52" : {
        "Text" : "# Catch case when caller has set GFLAGS_INCLUDE_DIR in the cache / GUI and\n\n# thus FIND_[PATH/LIBRARY] are not called, but specified locations are\n\n# invalid, otherwise we would report the library as found.\n",
        "Line" : 538,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "# TODO: This regex for gflags library is pretty primitive, we use lowercase\n\n#       for comparison to handle Windows using CamelCase library names, could\n\n#       this check be better?\n",
        "Line" : 548,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "# Set standard CMake FindPackage variables if found.\n",
        "Line" : 564,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# Handle REQUIRED / QUIET optional arguments.\n",
        "Line" : 570,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# Only mark internal variables as advanced if we found gflags, otherwise\n\n# leave them visible in the standard GUI for the user to set manually.\n",
        "Line" : 575,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# Autogenerated by find_package(gflags)\n",
        "Line" : 581,
        "CharPositionInLine" : 16
      },
      "CommentCount" : 58
    },
    "cmake/FindGlog.cmake" : {
      "ObjectId" : "142e2ca96ba76d46a4cd59518e384258e826dcca",
      "LastModified" : "2017-05-17T09:45:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Find libglog\n\n#\n\n#  LIBGLOG_INCLUDE_DIR - where to find glog/logging.h, etc.\n\n#  LIBGLOG_LIBRARY     - List of libraries when using libglog.\n\n#  LIBGLOG_FOUND       - True if libglog found.\n\n#\n\n# from https://github.com/facebook/hhvm/blob/master/CMake/FindGlog.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LIBGLOG_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/FindGperftools.cmake" : {
      "ObjectId" : "928f573a4fb82391859e334d50e6c8ed0e26aae2",
      "LastModified" : "2018-12-12T02:57:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tries to find Gperftools.\n\n#\n\n# Usage of this module as follows:\n\n#\n\n#     find_package(Gperftools)\n\n#\n\n# Variables used by this module, they can change the default behaviour and need\n\n# to be set before calling find_package:\n\n#\n\n#  Gperftools_ROOT_DIR  Set this variable to the root installation of\n\n#                       Gperftools if the module has problems finding\n\n#                       the proper installation path.\n\n#\n\n# Variables defined by this module:\n\n#\n\n#  GPERFTOOLS_FOUND              System has Gperftools libs/headers\n\n#  GPERFTOOLS_LIBRARIES          The Gperftools libraries (tcmalloc & profiler)\n\n#  GPERFTOOLS_INCLUDE_DIR        The location of Gperftools headers\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# create IMPORTED targets\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindJeMalloc.cmake" : {
      "ObjectId" : "b95287160ba610b2dfa93ba15e7c7c8214d80ac1",
      "LastModified" : "2019-01-08T08:07:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find JeMalloc library\n\n# Find the native JeMalloc includes and library\n\n#\n\n# JEMALLOC_INCLUDE_DIR - where to find jemalloc.h, etc.\n\n# JEMALLOC_LIBRARIES - List of libraries when using jemalloc.\n\n# JEMALLOC_FOUND - True if jemalloc found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindNumPy.cmake" : {
      "ObjectId" : "8cdd642ac01315949f7fee3a981a17d67d1e4198",
      "LastModified" : "2018-12-12T02:57:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the Python NumPy package\n\n# PYTHON_NUMPY_INCLUDE_DIR\n\n# NUMPY_FOUND\n\n# will be set by this script\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# write a python script that finds the numpy path\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# execute the find script\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/anakin_subgraph.cmake" : {
      "ObjectId" : "4a7d32a63553df31e0928e7b30249ff3e809cba1",
      "LastModified" : "2019-03-27T05:36:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cblas.cmake" : {
      "ObjectId" : "52ac31d1d125afb89fb0ae783fba94ab9a0c5a1a",
      "LastModified" : "2019-03-27T05:36:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the CBlas and lapack libraries\n\n#\n\n# It will search MKLML, atlas, OpenBlas, reference-cblas in order.\n\n#\n\n# If any cblas implementation found, the following variable will be set.\n\n#    CBLAS_PROVIDER  # one of MKLML, OPENBLAS, REFERENCE\n\n#    CBLAS_INC_DIR   # the include directory for cblas.\n\n#    CBLAS_LIBS      # a list of libraries should be linked by paddle.\n\n#                    # Each library should be full path to object file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Find MKLML First.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Then find openblas.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Then find the reference-cblas.  www.netlib.org/blas/\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/ccache.cmake" : {
      "ObjectId" : "900f59d4cb83bc9ce1893b2d3bd95f5a08b164bb",
      "LastModified" : "2019-03-27T05:36:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use ccache if found ccache program\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/configure.cmake" : {
      "ObjectId" : "93d74bb0a8f726ad31685cbfc7831b5441cd5108",
      "LastModified" : "2019-04-04T06:22:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2016 PaddlePaddle Authors. All Rights Reserved.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n# http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# windows header option for all targets.\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Use symbols instead of absolute path, reduce the cmake link command length. \n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Specify the program to use when building static libraries\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# set defination for the dll export\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Include cuda and cudnn\n",
        "Line" : 85,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# NOTICE(minqiyang): the end slash is important because $CUDNN_INCLUDE_DIR\n\n# is a softlink to real cudnn.h directory\n",
        "Line" : 113,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# openmp not support well for now on windows\n",
        "Line" : 131,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 8
    },
    "cmake/coveralls.cmake" : {
      "ObjectId" : "ca1471cabb57c0795ee193493d2e60bb5bd9e1cc",
      "LastModified" : "2019-03-27T05:36:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake script for code coverage.\n\n# If _COVERALLS_UPLOAD is ON, it will upload json files to overalls.io automatically.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Param _COVERAGE_SRCS          A list of coverage source files.\n\n# Param _COVERALLS_UPLOAD       Upload the result to coveralls.\n\n# Param _CMAKE_SCRIPT_PATH      CMake script path.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# clean previous gcov data.\n",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# find curl for upload JSON soon.\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# When passing a CMake list to an external process, the list\n\n# will be converted from the format \"1;2;3\" to \"1 2 3\".\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# query number of logical cores\n",
        "Line" : 26,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# coveralls json file.\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Run regress tests.\n",
        "Line" : 31,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# Generate Gcov and translate it into coveralls JSON.\n",
        "Line" : 35,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Upload the JSON to coveralls.\n",
        "Line" : 48,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# exclude trivial files in PADDLE_SOURCES\n",
        "Line" : 82,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# convert to absolute path\n",
        "Line" : 92,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 12
    },
    "cmake/coverallsGcovJsons.cmake" : {
      "ObjectId" : "4641184fcf5273b884524d9b9444209ffb65e000",
      "LastModified" : "2019-03-27T05:36:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n\n#\n\n# Copyright (C) 2014 Joakim Söderberg <joakim.soderberg@gmail.com>\n\n#\n\n# This is intended to be run by a custom target in a CMake project like this.\n\n# 0. Compile program with coverage support.\n\n# 1. Clear coverage data. (Recursively delete *.gcda in build dir)\n\n# 2. Run the unit tests.\n\n# 3. Run this script specifying which source files the coverage should be performed on.\n\n#\n\n# This script will then use gcov to generate .gcov files in the directory specified\n\n# via the COV_PATH var. This should probably be the same as your cmake build dir.\n\n#\n\n# It then parses the .gcov files to convert them into the Coveralls JSON format:\n\n# https://coveralls.io/docs/api\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Since it's not possible to pass a CMake list properly in the\n\n# \"1;2;3\" format to an external process, we have replaced the\n\n# \";\" with \"*\", so reverse that here so we get it back into the\n\n# CMake list format.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO: Add these git things to the coveralls json.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Branch.\n",
        "Line" : 52,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "############################# Macros #########################################\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# This macro converts from the full path format gcov outputs:\n\n#\n\n#    /path/to/project/root/build/#path#to#project#root#subdir#the_file.c.gcov\n\n#\n\n# to the original source file path the .gcov is for:\n\n#\n\n#   /path/to/project/root/subdir/the_file.c\n\n#\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# /path/to/project/root/build/#path#to#project#root#subdir#the_file.c.gcov \n\n# -> \n\n# #path#to#project#root#subdir#the_file.c.gcov   \n",
        "Line" : 98,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# #path#to#project#root#subdir#the_file.c.gcov -> /path/to/project/root/subdir/the_file.c\n",
        "Line" : 103,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "##############################################################################\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Get the coverage data.\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Get a list of all the object directories needed by gcov\n\n# (The directories the .gcda files and .o files are found in)\n\n# and run gcov on those.\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\n\n# The -p below refers to \"Preserve path components\",\n\n# This means that the generated gcov filename of a source file will\n\n# keep the original files entire filepath, but / is replaced with #.\n\n# Example:\n\n#\n\n# /path/to/project/root/build/CMakeFiles/the_file.dir/subdir/the_file.c.gcda\n\n# ------------------------------------------------------------------------------\n\n# File '/path/to/project/root/subdir/the_file.c'\n\n# Lines executed:68.34% of 199\n\n# /path/to/project/root/subdir/the_file.c:creating '#path#to#project#root#subdir#the_file.c.gcov'\n\n#\n\n# If -p is not specified then the file is named only \"the_file.c.gcov\"\n\n#\n",
        "Line" : 122,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# TODO: Make these be absolute path\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Get only the filenames to use for filtering.\n\n#set(COVERAGE_SRCS_NAMES \"\")\n\n#foreach (COVSRC ${COVERAGE_SRCS})\n\n#\tget_filename_component(COVSRC_NAME ${COVSRC} NAME)\n\n#\tmessage(\"${COVSRC} -> ${COVSRC_NAME}\")\n\n#\tlist(APPEND COVERAGE_SRCS_NAMES \"${COVSRC_NAME}\")\n\n#endforeach()\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#\n\n# Filter out all but the gcov files we want.\n\n#\n\n# We do this by comparing the list of COVERAGE_SRCS filepaths that the\n\n# user wants the coverage data for with the paths of the generated .gcov files,\n\n# so that we only keep the relevant gcov files.\n\n#\n\n# Example:\n\n# COVERAGE_SRCS =\n\n#\t\t\t\t/path/to/project/root/subdir/the_file.c\n\n#\n\n# ALL_GCOV_FILES =\n\n#\t\t\t\t/path/to/project/root/build/#path#to#project#root#subdir#the_file.c.gcov\n\n#\t\t\t\t/path/to/project/root/build/#path#to#project#root#subdir#other_file.c.gcov\n\n# \n\n# Result should be:\n\n# GCOV_FILES = \n\n#\t\t\t\t/path/to/project/root/build/#path#to#project#root#subdir#the_file.c.gcov\n\n#\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#message(\"Look in coverage sources: ${COVERAGE_SRCS}\")\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#\n\n# /path/to/project/root/build/#path#to#project#root#subdir#the_file.c.gcov \n\n# -> \n\n# /path/to/project/root/subdir/the_file.c \n",
        "Line" : 181,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "# Is this in the list of source files?\n\n# TODO: We want to match against relative path filenames from the source file root...\n",
        "Line" : 187,
        "CharPositionInLine" : 1
      },
      "18" : {
        "Text" : "# We remove it from the list, so we don't bother searching for it again.\n\n# Also files left in COVERAGE_SRCS_REMAINING after this loop ends should\n\n# have coverage data generated from them (no lines are covered).\n",
        "Line" : 195,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# TODO: Enable setting these\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Read the GCOV files line by line and get the coverage data.\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# The new coveralls API doesn't need the entire source (Yay!)\n\n# However, still keeping that part for now. Will cleanup in the future.\n",
        "Line" : 235,
        "CharPositionInLine" : 1
      },
      "22" : {
        "Text" : "# Loads the gcov file as a list of lines.\n\n# (We first open the file and replace all occurences of [] with _\n\n#  because CMake will fail to parse a line containing unmatched brackets...\n\n#  also the \\ to escaped \\n in macros screws up things.)\n\n# https://public.kitware.com/Bug/view.php?id=15369\n",
        "Line" : 240,
        "CharPositionInLine" : 1
      },
      "23" : {
        "Text" : "# Instead of trying to parse the source from the\n\n# gcov file, simply read the file contents from the source file.\n\n# (Parsing it from the gcov is hard because C-code uses ; in many places\n\n#  which also happens to be the same as the CMake list delimeter).\n",
        "Line" : 254,
        "CharPositionInLine" : 1
      },
      "24" : {
        "Text" : "# According to http://json.org/ these should be escaped as well.\n\n# Don't know how to do that in CMake however...\n\n#string(REPLACE \"\\b\" \"\\\\\\\\b\" GCOV_FILE_SOURCE \"${GCOV_FILE_SOURCE}\")\n\n#string(REPLACE \"\\f\" \"\\\\\\\\f\" GCOV_FILE_SOURCE \"${GCOV_FILE_SOURCE}\")\n\n#string(REGEX REPLACE \"\\u([a-fA-F0-9]{4})\" \"\\\\\\\\u\\\\1\" GCOV_FILE_SOURCE \"${GCOV_FILE_SOURCE}\")\n",
        "Line" : 265,
        "CharPositionInLine" : 1
      },
      "25" : {
        "Text" : "# We want a json array of coverage data as a single string\n\n# start building them from the contents of the .gcov\n",
        "Line" : 271,
        "CharPositionInLine" : 1
      },
      "26" : {
        "Text" : "# Line number for the .gcov.\n",
        "Line" : 275,
        "CharPositionInLine" : 24
      },
      "27" : {
        "Text" : "#message(\"${GCOV_LINE}\")\n\n# Example of what we're parsing:\n\n# Hitcount  |Line | Source\n\n# \"        8:   26:        if (!allowed || (strlen(allowed) == 0))\"\n",
        "Line" : 278,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# Check if we should exclude lines using the Lcov syntax.\n",
        "Line" : 288,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# Lines with 0 line numbers are metadata and can be ignored.\n",
        "Line" : 318,
        "CharPositionInLine" : 3
      },
      "30" : {
        "Text" : "# Translate the hitcount into valid JSON values.\n",
        "Line" : 324,
        "CharPositionInLine" : 5
      },
      "31" : {
        "Text" : "# Advanced way of removing the trailing comma in the JSON array.\n\n# \"[1, 2, 3, \" -> \"[1, 2, 3\"\n",
        "Line" : 346,
        "CharPositionInLine" : 1
      },
      "32" : {
        "Text" : "# Append the trailing ] to complete the JSON array.\n",
        "Line" : 350,
        "CharPositionInLine" : 1
      },
      "33" : {
        "Text" : "# Generate the final JSON for this file.\n",
        "Line" : 353,
        "CharPositionInLine" : 1
      },
      "34" : {
        "Text" : "# Loop through all files we couldn't find any coverage for\n\n# as well, and generate JSON for those as well with 0% coverage.\n",
        "Line" : 360,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Loads the source file as a list of lines.\n",
        "Line" : 364,
        "CharPositionInLine" : 1
      },
      "36" : {
        "Text" : "# Remove trailing comma, and complete JSON array with ]\n",
        "Line" : 380,
        "CharPositionInLine" : 1
      },
      "37" : {
        "Text" : "# Generate the final JSON for this file.\n",
        "Line" : 384,
        "CharPositionInLine" : 1
      },
      "38" : {
        "Text" : "# Get rid of trailing comma.\n",
        "Line" : 389,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Generate the final complete JSON!\n",
        "Line" : 393,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 40
    },
    "cmake/cuda.cmake" : {
      "ObjectId" : "735846db1db04e3884d72ec62d911d9a0efec147",
      "LastModified" : "2019-03-27T05:36:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "######################################################################################\n\n# A function for automatic detection of GPUs installed  (if autodetection is enabled)\n\n# Usage:\n\n#   detect_installed_gpus(out_variable)\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# only keep the last line of nvcc_out\n",
        "Line" : 40,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "########################################################################\n\n# Function for selecting GPU arch flags for nvcc based on CUDA_ARCH_NAME\n\n# Usage:\n\n#   select_nvcc_arch_flags(out_variable)\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# List of arch names\n",
        "Line" : 63,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# set CUDA_ARCH_NAME strings (so it will be seen as dropbox in CMake-Gui)\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# verify CUDA_ARCH_NAME value\n",
        "Line" : 73,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# (${CUDA_ARCH_NAME} STREQUAL \"Manual\")\n",
        "Line" : 102,
        "CharPositionInLine" : 10
      },
      "7" : {
        "Text" : "# remove dots and convert to lists\n",
        "Line" : 106,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Tell NVCC to add binaries for the specified GPUs\n",
        "Line" : 117,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# User explicitly specified PTX for the concrete BIN\n",
        "Line" : 120,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# User didn't explicitly specify PTX for the concrete BIN, we assume PTX=BIN\n",
        "Line" : 124,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# Tell NVCC to add PTX intermediate code for the specified architectures\n",
        "Line" : 130,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# CUDA 7.x\n",
        "Line" : 145,
        "CharPositionInLine" : 34
      },
      "13" : {
        "Text" : "# CUDA 8.x\n",
        "Line" : 150,
        "CharPositionInLine" : 34
      },
      "14" : {
        "Text" : "# CUDA 8 may complain that sm_20 is no longer supported. Suppress the\n\n# warning for now.\n",
        "Line" : 154,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# CUDA 9.x\n",
        "Line" : 158,
        "CharPositionInLine" : 35
      },
      "16" : {
        "Text" : "# CUDA 10.x\n",
        "Line" : 163,
        "CharPositionInLine" : 35
      },
      "17" : {
        "Text" : "# setting nvcc arch flags\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Set C++11 support\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Release/Debug flags set by cmake. Such as -O3 -g -DNDEBUG etc.\n\n# So, don't set these flags here.\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# windows msvc2015 support c++11 natively. \n",
        "Line" : 187,
        "CharPositionInLine" : 15
      },
      "21" : {
        "Text" : "# -std=c++11 -fPIC not recoginize by msvc, -Xcompiler will be added by cmake.\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Make use of fast math library. https://docs.nvidia.com/cuda/cuda-compiler-driver-nvcc/index.html\n",
        "Line" : 194,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# in cuda9, suppress cuda warning on eigen \n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Set :expt-relaxed-constexpr to suppress Eigen warnings\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# nvcc 9 does not support -Os. Use Release flags instead\n",
        "Line" : 210,
        "CharPositionInLine" : 6
      },
      "26" : {
        "Text" : "# match the cl's _ITERATOR_DEBUG_LEVEL\n",
        "Line" : 218,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 27
    },
    "cmake/cudnn.cmake" : {
      "ObjectId" : "fff1980637d029b8a392c166734d3c3b84fed867",
      "LastModified" : "2019-03-27T05:36:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# only support cudnn7\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# libcudnn_static.a\n",
        "Line" : 51,
        "CharPositionInLine" : 51
      },
      "CommentCount" : 2
    },
    "cmake/cupti.cmake" : {
      "ObjectId" : "72ed0f1e5858d6d836743ceb038c7f4ad8f194cf",
      "LastModified" : "2019-03-27T05:36:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# libcupti_static.a\n",
        "Line" : 31,
        "CharPositionInLine" : 60
      },
      "CommentCount" : 1
    },
    "cmake/external/anakin.cmake" : {
      "ObjectId" : "77f4b34537577c7c5782675e7af19c73bc9f8e32",
      "LastModified" : "2019-03-27T05:36:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# the anakin install dir is only default one now\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/external/boost.cmake" : {
      "ObjectId" : "ba8b5fc6c838b221fcfb559f1f01051fc09072a4",
      "LastModified" : "2019-03-27T05:36:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2016 PaddlePaddle Authors. All Rights Reserved.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n# http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# To release PaddlePaddle as a pip package, we have to follow the\n\n# manylinux1 standard, which features as old Linux kernels and\n\n# compilers as possible and recommends CentOS 5. Indeed, the earliest\n\n# CentOS version that works with NVIDIA CUDA is CentOS 6.  And a new\n\n# version of boost, say, 1.66.0, doesn't build on CentOS 6.  We\n\n# checked that the devtools package of CentOS 6 installs boost 1.41.0.\n\n# So we use 1.41.0 here.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/external/brpc.cmake" : {
      "ObjectId" : "989d1dbd4cf593e779b94f7bb5eda613f000859c",
      "LastModified" : "2019-03-27T05:36:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2016 PaddlePaddle Authors. All Rights Reserved.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n# http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Reference https://stackoverflow.com/questions/45414507/pass-a-list-of-prefix-paths-to-externalproject-add-in-cmake-args\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If minimal .a is need, you can set  WITH_DEBUG_SYMBOLS=OFF\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# TODO(gongwb): change to de newst repo when they changed.\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "cmake/external/cares.cmake" : {
      "ObjectId" : "52507a6ae4aabe300cf8bf88d0946c45a2c0e79c",
      "LastModified" : "2019-03-27T05:36:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2016 PaddlePaddle Authors. All Rights Reserved.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n# http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# NOTE: c-ares is needed when linking with grpc.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/external/cub.cmake" : {
      "ObjectId" : "41ad8207743201fbddd1d678fc5122afe68207ae",
      "LastModified" : "2019-03-27T05:36:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/external/dgc.cmake" : {
      "ObjectId" : "a58b8c68d7716a901db1907af64c4a344a24cfc6",
      "LastModified" : "2019-03-30T01:24:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2016 PaddlePaddle Authors. All Rights Reserved.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n# http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/external/dlpack.cmake" : {
      "ObjectId" : "63dd16b28e40a0c2d5310bec011c721285049952",
      "LastModified" : "2019-03-27T05:36:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/external/eigen.cmake" : {
      "ObjectId" : "72441160f89d2c188d35fc6b08b5f0b6d746a1ad",
      "LastModified" : "2019-03-27T05:36:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# EIGEN_FAST_MATH: https://eigen.tuxfamily.org/dox/TopicPreprocessorDirectives.html\n\n# enables some optimizations which might affect the accuracy of the result. \n\n# This currently enables the SSE vectorization of sin() and cos(), \n\n# and speedups sqrt() for single precision.\n\n# Defined to 1 by default. Define it to 0 to disable.\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# eigen on cuda9.1 missing header of math_funtions.hpp\n\n# https://stackoverflow.com/questions/43113508/math-functions-hpp-not-found-when-using-cuda-with-eigen\n",
        "Line" : 33,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "cmake/external/gflags.cmake" : {
      "ObjectId" : "911920ed6212b87aa25ba9a1faf7696fbcb22587",
      "LastModified" : "2019-03-27T05:36:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2016 PaddlePaddle Authors. All Rights Reserved.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n# http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# On Windows (including MinGW), the Shlwapi library is used by gflags if available.\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/external/glog.cmake" : {
      "ObjectId" : "7fa17ce6b7b106c47c486729d0136748c73176a7",
      "LastModified" : "2019-03-27T05:36:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2016 PaddlePaddle Authors. All Rights Reserved.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n# http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/external/grpc.cmake" : {
      "ObjectId" : "d96da470b3cbbd8092dbf80ec5f500af9afa2ce4",
      "LastModified" : "2019-03-27T05:36:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2016 PaddlePaddle Authors. All Rights Reserved.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n# http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FIXME(wuyi): do not build zlib cares protobuf twice, find a way to build grpc with them\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# NOTE(wuyi):\n\n# this package is generated by following steps:\n\n# 1. git clone -b v1.8.x https://github.com/grpc/grpc.git\n\n# 2. git submodule update --init\n\n# 3. keep only zlib, cares, protobuf, boringssl under \"third_party\",\n\n#    checkout and clean other dirs under third_party\n\n# 4. remove .git, and package the directory.\n",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# NOTE(yuyang18):\n\n# Disable -Werror, otherwise the compile will fail in MacOS.\n\n# It seems that we cannot configure that by make command.\n\n# Just dry run make command and remove `-Werror`, then use a shell to run make commands\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "cmake/external/gtest.cmake" : {
      "ObjectId" : "e459526583bd5ee3c89807657f3c30376e57d971",
      "LastModified" : "2019-03-27T05:36:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2016 PaddlePaddle Authors. All Rights Reserved.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n# http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#FIXME:(gongwb) Move brpc's gtest dependency.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# wait for mklml downloading completed\n",
        "Line" : 42,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 3
    },
    "cmake/external/gzstream.cmake" : {
      "ObjectId" : "af7a8bfda6f7db12049203e7c9d54885884d8cf2",
      "LastModified" : "2019-03-27T05:36:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2018 PaddlePaddle Authors. All Rights Reserved.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n# http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# NOTE: gzstream is needed when linking with ctr reader.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/external/leveldb.cmake" : {
      "ObjectId" : "ac0febd076e659927a6a882ff487c61ac130437a",
      "LastModified" : "2019-03-27T05:36:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2016 PaddlePaddle Authors. All Rights Reserved.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n# http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/external/libmct.cmake" : {
      "ObjectId" : "b944f2945b7874ca76bf1a19e0a363f564851a62",
      "LastModified" : "2019-03-27T05:36:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2017 PaddlePaddle Authors. All Rights Reserved.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n# http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/external/libxsmm.cmake" : {
      "ObjectId" : "69cdba7c5921f14a87172d95791332e364045b26",
      "LastModified" : "2019-03-27T05:36:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2018 PaddlePaddle Authors. All Rights Reserved.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n# http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/external/mkldnn.cmake" : {
      "ObjectId" : "b1e437a9007072c82ab375bf5ed79fc7d6c80c47",
      "LastModified" : "2019-03-27T05:36:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2017 PaddlePaddle Authors. All Rights Reserved.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n# http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Introduce variables:\n\n# * CMAKE_INSTALL_LIBDIR\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For MKLDNN code to include internal headers.\n",
        "Line" : 46,
        "CharPositionInLine" : 39
      },
      "3" : {
        "Text" : "# generate a static dummy target to track mkldnn dependencies\n\n# for cc_library(xxx SRCS xxx.c DEPS mkldnn)\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# copy the real so.0 lib to install dir\n\n# it can be directly contained in wheel or capi\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/external/mklml.cmake" : {
      "ObjectId" : "142fce816de4f06aa0a36b91e3e4ecb962a8dc2a",
      "LastModified" : "2019-03-27T05:36:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2017 PaddlePaddle Authors. All Rights Reserved.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n# http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#TODO(intel-huying):\n\n#  Now enable Erf function in mklml library temporarily, it will be updated as offical version later.\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "cmake/external/ngraph.cmake" : {
      "ObjectId" : "23998b497e7a796b5487a287163f98a28e8d63d7",
      "LastModified" : "2019-03-28T01:05:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2018 PaddlePaddle Authors. All Rights Reserved.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n# http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/external/openblas.cmake" : {
      "ObjectId" : "d8a4a0be6f5aaa3a1a4977bbc68348743f2fa742",
      "LastModified" : "2019-03-27T05:36:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2016 PaddlePaddle Authors. All Rights Reserved.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n# http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FIXME(gangliao): generate cblas target to track all high performance\n\n# linear algebra libraries for cc_library(xxx SRCS xxx.c DEPS cblas)\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/external/protobuf.cmake" : {
      "ObjectId" : "09eb437aede4364f8aa285d5296f21cd8460fca1",
      "LastModified" : "2019-04-11T07:00:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2016 PaddlePaddle Authors. All Rights Reserved.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n# http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Always invoke `FIND_PACKAGE(Protobuf)` for importing function protobuf_generate_cpp\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# shameless copy from https://github.com/Kitware/CMake/blob/master/Modules/FindProtobuf.cmake\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Create an include path for each file specified\n",
        "Line" : 41,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Print and set the protobuf library information,\n\n# finish this cmake process and exit from this file.\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Assuming that all the protobuf libraries are of the same type.\n",
        "Line" : 101,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# FIND_Protobuf.cmake uses `Protobuf_PROTOC_EXECUTABLE`.\n\n# make `protobuf_generate_cpp` happy.\n",
        "Line" : 121,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "cmake/external/pslib.cmake" : {
      "ObjectId" : "0287e5cf2a835ed65c5fc26ff69d2653d5db217e",
      "LastModified" : "2019-03-27T05:36:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2017 PaddlePaddle Authors. All Rights Reserved.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n# http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#todo what is this\n",
        "Line" : 46,
        "CharPositionInLine" : 54
      },
      "CommentCount" : 2
    },
    "cmake/external/pslib_brpc.cmake" : {
      "ObjectId" : "22c8c1b463764b6e107c5f3da25d51b36c2ce59f",
      "LastModified" : "2019-03-27T05:36:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2017 PaddlePaddle Authors. All Rights Reserved.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n# http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#todo what is this\n",
        "Line" : 46,
        "CharPositionInLine" : 64
      },
      "CommentCount" : 2
    },
    "cmake/external/pybind11.cmake" : {
      "ObjectId" : "3a10ea945d3d1a3fa88954196905872b2668d5a0",
      "LastModified" : "2019-03-27T05:36:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2016 PaddlePaddle Authors. All Rights Reserved.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n# http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/external/python.cmake" : {
      "ObjectId" : "623c53f4f75bbd217c157bcdda0cb12c510269ee",
      "LastModified" : "2019-03-27T05:36:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2016 PaddlePaddle Authors. All Rights Reserved.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n# http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Convert the process output into a list\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Make sure all directory separators are '/'\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# when run in a venv, PYTHON_PREFIX points to it. But the libraries remain in the\n\n# original python installation. They may be found relative to PYTHON_INCLUDE_DIR.\n",
        "Line" : 51,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# raise an error if the python libs are still not found.\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Fixme: Maybe find a static library. Get SHARED/STATIC by FIND_PACKAGE.\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/external/rocprim.cmake" : {
      "ObjectId" : "914c06491890574bcdf4374d8e0fd5498e780113",
      "LastModified" : "2019-03-27T05:36:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# rocprim is \"ROCm Parallel Primitives\" for short.\n\n# It is a header-only library providing HIP and HC parallel primitives\n\n# for developing performant GPU-accelerated code on AMD ROCm platform.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/external/snappy.cmake" : {
      "ObjectId" : "1e01057aa606af78cd722d3619a710cb35817174",
      "LastModified" : "2019-03-27T05:36:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2018 PaddlePaddle Authors. All Rights Reserved.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n# http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# NOTE: snappy is needed when linking with recordio\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/external/snappystream.cmake" : {
      "ObjectId" : "392f186b7ce3821f313ed6fc3dd5a97c2a7adebd",
      "LastModified" : "2019-03-27T05:36:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2018 PaddlePaddle Authors. All Rights Reserved.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n# http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Fix me, VS2015 come without VLA support\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# For snappysteam to include its own headers.\n\n# For Paddle to include snappy stream headers.\n",
        "Line" : 60,
        "CharPositionInLine" : 49
      },
      "CommentCount" : 3
    },
    "cmake/external/threadpool.cmake" : {
      "ObjectId" : "1f56bc7ab056ef0dd95d603ebe3461ef044b2a79",
      "LastModified" : "2019-03-27T05:36:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/external/warpctc.cmake" : {
      "ObjectId" : "6f2af8670f25c00ac0970fe4ae2b0c5b03aa0d9e",
      "LastModified" : "2019-03-27T05:36:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2016 PaddlePaddle Authors. All Rights Reserved.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n# http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Used in unit test test_WarpCTCLayer\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For warpctc code to include its headers.\n",
        "Line" : 80,
        "CharPositionInLine" : 44
      },
      "3" : {
        "Text" : "# For Paddle code to include warpctc headers.\n",
        "Line" : 81,
        "CharPositionInLine" : 49
      },
      "CommentCount" : 4
    },
    "cmake/external/xbyak.cmake" : {
      "ObjectId" : "1d61154c0d45dea795902d6544deb796693db263",
      "LastModified" : "2019-03-27T05:36:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2017 PaddlePaddle Authors. All Rights Reserved.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n# http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# xbyak options\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Jul 26th\n",
        "Line" : 42,
        "CharPositionInLine" : 34
      },
      "CommentCount" : 3
    },
    "cmake/external/xxhash.cmake" : {
      "ObjectId" : "23b1e02108642df561948a6faa3152effb7ca932",
      "LastModified" : "2019-03-27T05:36:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/external/zlib.cmake" : {
      "ObjectId" : "5569fefe992d10ad4820e51e677f40271d0214e7",
      "LastModified" : "2019-03-27T05:36:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2016 PaddlePaddle Authors. All Rights Reserved.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n# http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For zlib code to include its own headers.\n",
        "Line" : 22,
        "CharPositionInLine" : 41
      },
      "2" : {
        "Text" : "# For Paddle code to include zlib.h.\n",
        "Line" : 23,
        "CharPositionInLine" : 49
      },
      "CommentCount" : 3
    },
    "cmake/flags.cmake" : {
      "ObjectId" : "36b533aa4f7815896fb48c33fefad892b8d0d29c",
      "LastModified" : "2019-03-27T05:36:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Setting Paddle Compile Flags\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# cmake >= 3.0 compiler id \"AppleClang\" on Mac OS X, otherwise \"Clang\"\n\n# Apple Clang is a different compiler than upstream Clang which havs different version numbers.\n\n# https://gist.github.com/yamaya/2924292\n",
        "Line" : 13,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# cmake < 3.0 compiler id \"Clang\" on Mac OS X\n",
        "Line" : 16,
        "CharPositionInLine" : 19
      },
      "3" : {
        "Text" : "# safe_set_flag\n\n#\n\n# Set a compile flag only if compiler is support\n\n# is_c: is C flag or C++ flag, bool type.\n\n# src_list: The list name which the flag name will be append to.\n\n# flag_name: the flag name for compiler, such as '-Werror' '-Wall' etc\n\n# rest arguments: not used.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# helper macro to set cflag\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# helper macro to set cxxflag\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# helper macro to set nvcc flag\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# set c_flags and cxx_flags to static or shared\n",
        "Line" : 73,
        "CharPositionInLine" : 28
      },
      "8" : {
        "Text" : "# if build shared libs, the flags keep same with '/MD'\n",
        "Line" : 75,
        "CharPositionInLine" : 17
      },
      "9" : {
        "Text" : "# Common flags. the compiler flag used for C/C++ sources whenever release or debug\n\n# Do not care if this flag is support for gcc.\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# https://github.com/PaddlePaddle/Paddle/issues/12773\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Warnings in pybind11\n",
        "Line" : 129,
        "CharPositionInLine" : 36
      },
      "12" : {
        "Text" : "# Warnings in Eigen, gcc 6.3\n",
        "Line" : 130,
        "CharPositionInLine" : 35
      },
      "13" : {
        "Text" : "# Warning in PADDLE_ENFORCE\n",
        "Line" : 131,
        "CharPositionInLine" : 26
      },
      "14" : {
        "Text" : "# Warning in Eigen gcc 7.2\n",
        "Line" : 132,
        "CharPositionInLine" : 35
      },
      "15" : {
        "Text" : "# Warning in tinyformat.h\n",
        "Line" : 133,
        "CharPositionInLine" : 29
      },
      "16" : {
        "Text" : "# Warning in boost gcc 7.2\n",
        "Line" : 134,
        "CharPositionInLine" : 35
      },
      "17" : {
        "Text" : "# Warnings in Numpy Header.\n",
        "Line" : 147,
        "CharPositionInLine" : 32
      },
      "18" : {
        "Text" : "# Warnings in Eigen::array\n",
        "Line" : 148,
        "CharPositionInLine" : 28
      },
      "19" : {
        "Text" : "# On Mac OS X build fat binaries with x86_64 architectures by default.\n",
        "Line" : 154,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# On Mac OS X register class specifier is deprecated and will cause warning error on latest clang 10.0\n",
        "Line" : 156,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# except apple from nix*Os family\n",
        "Line" : 169,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# windows build turn off warnings.\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "cmake/generic.cmake" : {
      "ObjectId" : "6679a09dfc9dd00cfe3b5c5da3e12bd1c1389432",
      "LastModified" : "2019-03-27T05:36:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2016 PaddlePaddle Authors. All Rights Reserved.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n# http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# generic.cmake defines CMakes functions that look like Bazel's\n\n# building rules (https://bazel.build/).\n\n#\n\n#\n\n# -------------------------------------------\n\n#     C++        CUDA C++       Go\n\n# -------------------------------------------\n\n# cc_library    nv_library   go_library\n\n# cc_binary     nv_binary    go_binary\n\n# cc_test       nv_test      go_test\n\n# -------------------------------------------\n\n#\n\n# To build a static library example.a from example.cc using the system\n\n#  compiler (like GCC):\n\n#\n\n#   cc_library(example SRCS example.cc)\n\n#\n\n# To build a static library example.a from multiple source files\n\n# example{1,2,3}.cc:\n\n#\n\n#   cc_library(example SRCS example1.cc example2.cc example3.cc)\n\n#\n\n# To build a shared library example.so from example.cc:\n\n#\n\n#   cc_library(example SHARED SRCS example.cc)\n\n#\n\n# To build a library using Nvidia's NVCC from .cu file(s), use the nv_\n\n# prefixed version:\n\n#\n\n#   nv_library(example SRCS example.cu)\n\n#\n\n# To specify that a library new_example.a depends on other libraies:\n\n#\n\n#   cc_library(new_example SRCS new_example.cc DEPS example)\n\n#\n\n# Static libraries can be composed of other static libraries:\n\n#\n\n#   cc_library(composed DEPS dependent1 dependent2 dependent3)\n\n#\n\n# To build an executable binary file from some source files and\n\n# dependent libraries:\n\n#\n\n#   cc_binary(example SRCS main.cc something.cc DEPS example1 example2)\n\n#\n\n# To build an executable binary file using NVCC, use the nv_ prefixed\n\n# version:\n\n#\n\n#   nv_binary(example SRCS main.cc something.cu DEPS example1 example2)\n\n#\n\n# To build a unit test binary, which is an executable binary with\n\n# GoogleTest linked:\n\n#\n\n#   cc_test(example_test SRCS example_test.cc DEPS example)\n\n#\n\n# To build a unit test binary using NVCC, use the nv_ prefixed version:\n\n#\n\n#   nv_test(example_test SRCS example_test.cu DEPS example)\n\n#\n\n# It is pretty often that executable and test binaries depend on\n\n# pre-defined external libaries like glog and gflags defined in\n\n# /cmake/external/*.cmake:\n\n#\n\n#   cc_test(example_test SRCS example_test.cc DEPS example glog gflags)\n\n#\n\n# To build a go static library using Golang, use the go_ prefixed version:\n\n#\n\n#   go_library(example STATIC)\n\n#\n\n# To build a go shared library using Golang, use the go_ prefixed version:\n\n#\n\n#   go_library(example SHARED)\n\n#\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# including binary directory for generated headers.\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# find all fluid modules is used for paddle fluid static library\n\n# for building inference libs\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# find all third_party modules is used for paddle static library\n\n# for reduce the dependency when building the inference libs.\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Get all propagation dependencies from the merged libraries\n",
        "Line" : 143,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# To produce a library we need at least one source file.\n\n# It is created by add_custom_command below and will helps\n\n# also help to track dependencies.\n",
        "Line" : 151,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Use OSX's libtool to merge archives\n",
        "Line" : 156,
        "CharPositionInLine" : 12
      },
      "8" : {
        "Text" : "# Make the generated dummy source file depended on all static input\n\n# libs. If input lib changes,the source file is touched\n\n# which causes the desired effect (relink).\n",
        "Line" : 157,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Generate dummy staic lib\n",
        "Line" : 164,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Get the file names of the libraries to be merged\n",
        "Line" : 170,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# general UNIX: use \"ar\" to extract objects and re-add to a common lib\n",
        "Line" : 178,
        "CharPositionInLine" : 12
      },
      "12" : {
        "Text" : "# list of objects in the input library\n",
        "Line" : 182,
        "CharPositionInLine" : 52
      },
      "13" : {
        "Text" : "# Make the generated dummy source file depended on all static input\n\n# libs. If input lib changes,the source file is touched\n\n# which causes the desired effect (relink).\n",
        "Line" : 198,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Generate dummy staic lib\n",
        "Line" : 205,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Get the file name of the generated library\n",
        "Line" : 210,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# windows do not support gcc/nvcc combined compiling. Use msvc lib.exe to merge libs.\n",
        "Line" : 218,
        "CharPositionInLine" : 12
      },
      "17" : {
        "Text" : "# Make the generated dummy source file depended on all static input\n\n# libs. If input lib changes,the source file is touched\n\n# which causes the desired effect (relink).\n",
        "Line" : 219,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Generate dummy staic lib\n",
        "Line" : 226,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Get the file names of the libraries to be merged\n",
        "Line" : 232,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "# msvc will put libarary in directory of \"/Release/xxxlib\" by default\n\n#       COMMAND cmake -E remove \"${CMAKE_CURRENT_BINARY_DIR}/${CMAKE_BUILD_TYPE}/${TARGET_NAME}.lib\"\n",
        "Line" : 235,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# add libxxx.lib prefix in windows\n",
        "Line" : 250,
        "CharPositionInLine" : 6
      },
      "22" : {
        "Text" : "# build *.so\n",
        "Line" : 254,
        "CharPositionInLine" : 47
      },
      "23" : {
        "Text" : "# Don't need link libwarpctc.so\n",
        "Line" : 262,
        "CharPositionInLine" : 6
      },
      "24" : {
        "Text" : "# Only deps libmklml.so, not link\n",
        "Line" : 267,
        "CharPositionInLine" : 6
      },
      "25" : {
        "Text" : "# remove link to python, see notes at:\n\n# https://github.com/pybind/pybind11/blob/master/docs/compiling.rst#building-manually\n",
        "Line" : 280,
        "CharPositionInLine" : 6
      },
      "26" : {
        "Text" : "# cpplint code style\n",
        "Line" : 296,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# The link operation under windows may exceeds the maximum characters limit, simply break the link command\n\n# into multiple link opeartion can fix that, say\n\n# original:\n\n#     lib /out:target.lib a.lib b.lib c.lib d.lib\n\n# after:\n\n#    1. lib /out:dummy_lib_1.lib a.lib b.lib\n\n#    2. lib /out:dummy_lib_2.lib c.lib d.lib\n\n#    1. lib /out:target.lib dummy_lib_1.lib dummy_lib_2.lib\n",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# the dummy target would be consisted of limit size libraries\n",
        "Line" : 327,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# 4G\n",
        "Line" : 391,
        "CharPositionInLine" : 100
      },
      "30" : {
        "Text" : "# No unit test should exceed 10 minutes.\n",
        "Line" : 393,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# build *.so\n",
        "Line" : 405,
        "CharPositionInLine" : 50
      },
      "32" : {
        "Text" : "# cpplint code style\n",
        "Line" : 415,
        "CharPositionInLine" : 6
      },
      "33" : {
        "Text" : "# 4G\n",
        "Line" : 464,
        "CharPositionInLine" : 100
      },
      "34" : {
        "Text" : "# build *.so\n",
        "Line" : 481,
        "CharPositionInLine" : 52
      },
      "35" : {
        "Text" : "# Support linking flags: --whole-archive (Linux) / -force_load (MacOS).\n\n# WARNING: Please don't use ARCHIVE_START&ARCHIVE_END if TARGET_NAME will be linked by other libraries.\n",
        "Line" : 491,
        "CharPositionInLine" : 8
      },
      "36" : {
        "Text" : "# cpplint code style\n",
        "Line" : 498,
        "CharPositionInLine" : 6
      },
      "37" : {
        "Text" : "# This custom command will always run since it depends on a not\n\n# existing file.\n",
        "Line" : 567,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "# Create a custom target that depends on the custom command output\n\n# file, so the custom command can be referenced as a dependency by\n\n# `add_dependencies`.\n",
        "Line" : 573,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "# Add dummy code to support `make target_name` under Terminal Command\n",
        "Line" : 580,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# The \"source file\" of the library is `${dummyfile}` which never\n\n# change, so the target will never rebuild. Make the target depends\n\n# on the custom command that touches the library \"source file\", so\n\n# rebuild will always happen.\n",
        "Line" : 592,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# Golang build source code\n",
        "Line" : 605,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "# must run under GOPATH\n",
        "Line" : 609,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "# Modification of standard 'protobuf_generate_cpp()' with protobuf-lite support\n\n# Usage:\n\n#   paddle_protobuf_generate_cpp(<proto_srcs> <proto_hdrs> <proto_files>)\n",
        "Line" : 647,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# 4G\n",
        "Line" : 716,
        "CharPositionInLine" : 84
      },
      "45" : {
        "Text" : "# No unit test should exceed 10 minutes.\n",
        "Line" : 720,
        "CharPositionInLine" : 4
      },
      "46" : {
        "Text" : "# grpc_library generate grpc code using grpc_cpp_plugin and protoc\n\n# then build the generated protobuf code and grpc code with your\n\n# implementation source codes together. Use SRCS argument for your\n\n# implementation source files and PROTO argument for your .proto\n\n# files.\n\n#\n\n# Usage: grpc_library(my_target SRCS my_client.cc PROTO my_target.proto DEPS my_dep)\n",
        "Line" : 725,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#FIXME(putcn): the follwoing line is supposed to generate *.pb.h and cc, but\n\n# somehow it didn't. line 602 to 604 is to patching this. Leaving this here\n\n# for now to enable dist CI.\n",
        "Line" : 745,
        "CharPositionInLine" : 2
      },
      "48" : {
        "Text" : "# FIXME(typhoonzero): grpc generated code do not generate virtual-dtor, mark it\n\n# as compiler warnings instead of error. Should try remove the warnings also.\n",
        "Line" : 763,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 49
    },
    "cmake/hip.cmake" : {
      "ObjectId" : "c3a748db502037f926dc241e4c3bc26a83ad3468",
      "LastModified" : "2019-03-27T05:36:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/inference_lib.cmake" : {
      "ObjectId" : "a7dce4dfdb530b13bea9df128694f0946714ccff",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2018 PaddlePaddle Authors. All Rights Reserved.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n# http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# make package for paddle fluid shared and static library\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# windows cmd shell will not expand wildcard automatically.\n\n# below expand the files, and copy them by rules.\n",
        "Line" : 49,
        "CharPositionInLine" : 16
      },
      "3" : {
        "Text" : "# not windows\n",
        "Line" : 64,
        "CharPositionInLine" : 21
      },
      "4" : {
        "Text" : "# not windows\n",
        "Line" : 69,
        "CharPositionInLine" : 22
      },
      "5" : {
        "Text" : "# third party\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# paddle fluid module\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# compiled anakin api\n",
        "Line" : 195,
        "CharPositionInLine" : 85
      },
      "8" : {
        "Text" : "# anakin release\n",
        "Line" : 196,
        "CharPositionInLine" : 34
      },
      "9" : {
        "Text" : "# CMakeCache Info\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# This command generates a complete fluid library for both train and inference\n",
        "Line" : 243,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Following commands generate a inference-only fluid library\n\n# third_party, version.txt and CMakeCache.txt are the same position with ${FLUID_INSTALL_DIR}\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# only need libpaddle_fluid.so/a and paddle_*.h for inference-only library\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# paddle fluid version\n",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "cmake/operators.cmake" : {
      "ObjectId" : "c17e718f4279f24c85db8be1177e5b5e82b13e08",
      "LastModified" : "2019-03-28T01:23:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# op_library is a function to create op library. The interface is same as\n\n# cc_library. But it handle split GPU/CPU code and link some common library\n\n# for ops.\n",
        "Line" : 3,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# remove windows unsupported op, because windows has no nccl, no warpctc such ops.\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Define operators that don't need pybind here.\n",
        "Line" : 110,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# The registration of USE_OP, please refer to paddle/fluid/framework/op_registry.h.\n\n# Note that it's enough to just adding one operator to pybind in a *_op.cc file.\n\n# And for detail pybind information, please see generated paddle/pybind/pybind.h.\n",
        "Line" : 119,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# pybind USE_NO_KERNEL_OP\n\n# HACK: if REGISTER_OP_CPU_KERNEL presents the operator must have kernel\n",
        "Line" : 132,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# pybind USE_CPU_ONLY_OP\n",
        "Line" : 141,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# pybind USE_OP_DEVICE_KERNEL for CUDNN\n",
        "Line" : 153,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# pybind USE_OP_DEVICE_KERNEL for MIOPEN\n",
        "Line" : 163,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# pybind USE_OP_DEVICE_KERNEL for MKLDNN\n",
        "Line" : 168,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Append first implemented MKLDNN activation operator\n",
        "Line" : 170,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# pybind USE_OP\n",
        "Line" : 183,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# NOTE(*): activation use macro to regist the kernels, set use_op manually.\n",
        "Line" : 185,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# HACK: fc only have mkldnn and cpu, which would mismatch the cpu only condition\n",
        "Line" : 195,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 13
    },
    "cmake/package.cmake" : {
      "ObjectId" : "79e02147f3f7cc19c1bf45d8a1d208a9a32416ff",
      "LastModified" : "2019-03-27T05:36:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## DEB Settings\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(CPACK_GENERATOR \"DEB\")\n\n# Start cpack\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/python_module.cmake" : {
      "ObjectId" : "1412b7f7f20600acf95a4a899f5e6529c3b67a35",
      "LastModified" : "2019-03-27T05:36:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find if a Python module is installed\n\n# Found at http://www.cmake.org/pipermail/cmake/2011-January/041666.html\n\n# To use do: find_python_module(PyQt4 REQUIRED)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# A module's location is usually a directory, but for binary modules\n\n# it's a .so file.\n",
        "Line" : 12,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "cmake/simd.cmake" : {
      "ObjectId" : "566dc75fda019eb66759eb403f60e16f18cffef1",
      "LastModified" : "2019-03-27T05:36:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is use to check all support level of AVX on your machine\n\n# so that PaddlePaddle can unleash the vectorization power of muticore.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check  MMX\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check SSE2\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Check SSE3\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Check AVX\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Check AVX 2\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Check AVX512F\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cmake/system.cmake" : {
      "ObjectId" : "65db05bebe957d740e391847d980e211b0e9e750",
      "LastModified" : "2019-03-27T05:36:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2016 PaddlePaddle Authors. All Rights Reserved.\n\n# \n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n# \n\n# http://www.apache.org/licenses/LICENSE-2.0\n\n# \n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Detects the OS and sets appropriate variables.\n\n# CMAKE_SYSTEM_NAME only give us a coarse-grained name of the OS CMake is\n\n# building for, but the host processor name like centos is necessary\n\n# in some scenes to distinguish system for customization.\n\n#\n\n# for instance, protobuf libs path is <install_dir>/lib64\n\n# on CentOS, but <install_dir>/lib on other systems.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set cache variable - end user may change this during ccmake or cmake-gui configure.\n",
        "Line" : 31,
        "CharPositionInLine" : 12
      },
      "3" : {
        "Text" : "# query number of logical cores\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# external dependencies log output\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Wrap download in script to log output\n\n# Wrap update in script to log output\n\n# Wrap configure in script to log output\n\n# Wrap build in script to log output\n\n# Wrap test in script to log output\n\n# Wrap install in script to log output\n",
        "Line" : 79,
        "CharPositionInLine" : 26
      },
      "CommentCount" : 6
    },
    "cmake/tensorrt.cmake" : {
      "ObjectId" : "3bf12094e4c32e69f908cbe6cefc7871fc9bb568",
      "LastModified" : "2019-03-27T05:36:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/util.cmake" : {
      "ObjectId" : "02667dbce69ed159193ff88f38069dd08cdcf678",
      "LastModified" : "2019-03-27T05:36:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Some common routine for paddle compile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# target_circle_link_libraries\n\n# Link libraries to target which has circle dependencies.\n\n#\n\n# First Argument: target name want to be linked with libraries\n\n# Rest Arguments: libraries which link together.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# LINUX\n",
        "Line" : 37,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 3
    },
    "cmake/version.cmake" : {
      "ObjectId" : "dd57d4ab9969ce530f93ca1694350b1a26b5b543",
      "LastModified" : "2019-03-27T05:36:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Get the latest git tag.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check current branch name\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Check if current branch is release branch\n",
        "Line" : 22,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# Check the tag is a correct version\n",
        "Line" : 24,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# if no tag was found, set PADDLE_VERSION to 0.0.0 to represent latest\n",
        "Line" : 26,
        "CharPositionInLine" : 10
      },
      "5" : {
        "Text" : "# otherwise, get the previous git tag name.\n",
        "Line" : 30,
        "CharPositionInLine" : 16
      },
      "6" : {
        "Text" : "# Check if current branch is tag branch\n",
        "Line" : 41,
        "CharPositionInLine" : 10
      },
      "7" : {
        "Text" : "# otherwise, we always set PADDLE_VERSION to 0.0.0 to represent latest\n",
        "Line" : 48,
        "CharPositionInLine" : 10
      },
      "CommentCount" : 8
    },
    "paddle/CMakeLists.txt" : {
      "ObjectId" : "c0c04d475959de2bfd6505b6ed30d5c18cbd99da",
      "LastModified" : "2019-03-27T05:36:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "paddle/fluid/CMakeLists.txt" : {
      "ObjectId" : "595454e90b9cd713fd2baed24538cf5fbc93934a",
      "LastModified" : "2019-03-27T05:36:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# NOTE: please add subdirectory inference at last.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "paddle/fluid/framework/CMakeLists.txt" : {
      "ObjectId" : "4e00630bb124c5e10a3b4e0e346326a45642fa3e",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#windows treat symbolic file as a real file, which is different with unix\n\n#We create a hidden file and compile it instead of origin source file.\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#ddim lib\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#windows treat symbolic file as a real file, which is different with unix\n\n#We create a hidden file and compile it instead of origin source file.\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Generate an empty \\\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#__init__.py to make framework_py_proto as a valid python module.\n",
        "Line" : 143,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Get the current working branch\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Get the latest abbreviated commit hash of the working branch\n",
        "Line" : 243,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "paddle/fluid/framework/details/CMakeLists.txt" : {
      "ObjectId" : "51231b981bf2dae7b038e808f52c78917a993928",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#cc_test(reduce_op_handle_test SRCS reduce_op_handle_test.cc DEPS var_handle op_handle_base scope ddim memory\n\n#        device_context reduce_op_handle )\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "paddle/fluid/framework/fleet/CMakeLists.txt" : {
      "ObjectId" : "12fc454fd262cdcf30f64757a6199c6a9331e1a2",
      "LastModified" : "2019-04-18T08:14:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "paddle/fluid/framework/io/CMakeLists.txt" : {
      "ObjectId" : "2baef77b9ce32ce616e7781b971665d3d885066c",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "paddle/fluid/framework/ir/CMakeLists.txt" : {
      "ObjectId" : "16fc1721eb6f5d2517ad45289f2415ef41749df2",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Usage: pass_library(target inference) will append to paddle_inference_pass.h\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# clear the global variable\n",
        "Line" : 8,
        "CharPositionInLine" : 29
      },
      "2" : {
        "Text" : "# Get optional argument\n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# add more DEST here, such as train, dist and collect USE_PASS into a file automatically.\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "paddle/fluid/imperative/CMakeLists.txt" : {
      "ObjectId" : "e52a0283f726640eb56b24a2978af6ee44e658ff",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "paddle/fluid/inference/CMakeLists.txt" : {
      "ObjectId" : "5e0be5d445eae9d6d857ab0d6c5816807b4af523",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# some generic cmake funtion for inference\n",
        "Line" : 2,
        "CharPositionInLine" : 28
      },
      "1" : {
        "Text" : "# TODO(panyx0718): Should this be called paddle_fluid_inference_api_internal?\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# analysis and tensorrt must be added before creating static library,\n\n# otherwise, there would be undefined reference to them in static library.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# paddle_fluid_origin exclude inference api interface\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# TODO(liuyiqu: Temporarily disable the link flag because it is not support on Mac.\n",
        "Line" : 61,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Create shared library\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# TODO(liuyiqun): Temporarily disable the link flag because it is not support on Mac.\n",
        "Line" : 81,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# check symbol hidden\n",
        "Line" : 84,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# tests/book depends the models that generated by python/paddle/fluid/tests/book\n",
        "Line" : 99,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 9
    },
    "paddle/fluid/inference/anakin/CMakeLists.txt" : {
      "ObjectId" : "e8fb56590563f49f920bfe71d160ec822cb3ca30",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "paddle/fluid/inference/anakin/convert/CMakeLists.txt" : {
      "ObjectId" : "d3d1522dccf0d8af4f26eec4e0c57257279880e0",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#cc_test(test_anakin_im2sequence SRCS test_im2sequence_op.cc DEPS anakin_op_converter im2sequence_op im2col)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "paddle/fluid/inference/analysis/CMakeLists.txt" : {
      "ObjectId" : "7a795bda820dc34f78f33191558fd6c0ccd2cb24",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# analysis_deps can be extended accross the project\n",
        "Line" : 2,
        "CharPositionInLine" : 18
      },
      "CommentCount" : 1
    },
    "paddle/fluid/inference/analysis/ir_passes/CMakeLists.txt" : {
      "ObjectId" : "05a3d7ddfdb08c98866cc0a08ec4113866c7567d",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "paddle/fluid/inference/analysis/passes/CMakeLists.txt" : {
      "ObjectId" : "9d74dc6c211e4fcb6d1e7de5369eee847f49fc78",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "paddle/fluid/inference/api/CMakeLists.txt" : {
      "ObjectId" : "882bb3468388e794e975d87de73537ac41f17cf7",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2016 PaddlePaddle Authors. All Rights Reserved.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n# http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# only needed in CI\n",
        "Line" : 63,
        "CharPositionInLine" : 30
      },
      "2" : {
        "Text" : "# compile the libinference_anakin_api.a and anakin.so.\n",
        "Line" : 64,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "paddle/fluid/inference/api/demo_ci/CMakeLists.txt" : {
      "ObjectId" : "19ef402d6fd78d6a65bdb0bbd22198f36b872a27",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Note: libpaddle_inference_api.so/a must put before libpaddle_fluid.so/a\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "paddle/fluid/inference/api/details/CMakeLists.txt" : {
      "ObjectId" : "80b53b32a8607b4e67f42ba30bd1a283c93ebed1",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2016 PaddlePaddle Authors. All Rights Reserved.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n# http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "paddle/fluid/inference/tensorrt/CMakeLists.txt" : {
      "ObjectId" : "f4977d08c4d051b8a528e122c47948c3c81d153c",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "paddle/fluid/inference/tensorrt/convert/CMakeLists.txt" : {
      "ObjectId" : "840abd26a755c39bc9c17315aefdd0dec862e77c",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add TRT tests\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "paddle/fluid/inference/tensorrt/plugin/CMakeLists.txt" : {
      "ObjectId" : "709aa103d1b6681221328b180d65e90f08d3368e",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "paddle/fluid/inference/tests/api/CMakeLists.txt" : {
      "ObjectId" : "a4641140e06b9c6efb13cdb58eb2a0ee810c71c6",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# RNN1\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# seq_pool1\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# TODO: fix this test on MACOS and OPENBLAS, the reason is that\n\n# fusion_seqexpand_concat_fc_op is not supported on MACOS and OPENBLAS\n",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# RNN2\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# TODO(luotao, Superjom) Disable DAM test, temporarily fix\n\n# https://github.com/PaddlePaddle/Paddle/issues/15032#issuecomment-455990914.\n\n# After inference framework refactor, will reopen it.\n\n# normal DAM\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#inference_analysis_api_test(test_analyzer_dam ${DAM_INSTALL_DIR} analyzer_dam_tester.cc EXTRA_DEPS legacy_allocator SERIAL)\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# small DAM\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# chinese_ner\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# lac\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# MM DNN\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Pyramid DNN\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# text_classification\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# seq_conv1\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# transformer, the dataset only works on batch_size=8 now\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# ocr\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# mobilenet with transpose op\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# googlenet\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# resnet50\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# mobilenet with depthwise_conv op\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# int8 image classification tests\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#resnet50 int8\n",
        "Line" : 160,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "#mobilenet int8\n",
        "Line" : 167,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# bert, max_len=20, embedding_dim=128\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# anakin\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# only needed in CI\n",
        "Line" : 181,
        "CharPositionInLine" : 30
      },
      "25" : {
        "Text" : "# anakin rnn1\n",
        "Line" : 182,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# anakin mobilenet\n",
        "Line" : 191,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 27
    },
    "paddle/fluid/inference/tests/book/CMakeLists.txt" : {
      "ObjectId" : "977155440df5294216382cff1c67c2aaca1f546d",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "####################\n\n# Inference tests here depend on fluid/tests/book. If users want to run\n\n# individual test with ctest, they need to run tests in fluid/tests/book\n\n# first to generate saved model.\n\n####################\n\n# This unittest is buggy!\n\n#inference_test(fit_a_line)\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#inference_test(rnn_encoder_decoder)\n\n#inference_test(understand_sentiment ARGS conv)\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This is an unly work around to make this test run\n\n# TODO(TJ): clean me up\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "paddle/fluid/inference/tests/test.cmake" : {
      "ObjectId" : "c93c9ef2f2337124da349517ad13b27acb10b2c1",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "paddle/fluid/inference/utils/CMakeLists.txt" : {
      "ObjectId" : "2104e4ac7222258ee025bd5acd60b1db251df654",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "paddle/fluid/memory/CMakeLists.txt" : {
      "ObjectId" : "7eb663ea280e65f3c10304aa47c9970df099b901",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if (WITH_GPU)\n\n#   nv_test(pinned_memory_test SRCS pinned_memory_test.cu  DEPS place memory)\n\n#endif()\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "paddle/fluid/memory/allocation/CMakeLists.txt" : {
      "ObjectId" : "ac77c3d2a500816a4eb41ed13f23ee628290f287",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "paddle/fluid/memory/detail/CMakeLists.txt" : {
      "ObjectId" : "a555b6b299228720c7559e610f4d6f31167e1555",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "paddle/fluid/operators/CMakeLists.txt" : {
      "ObjectId" : "6e8d6f459c51170c0f29542154aa3b1c0fd894f1",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# clean cache and pybind_file content first when rebuild\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# warpctc_op needs cudnn 7 above\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# conv_fusion_op needs cudnn 7 above\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# FIXME(typhoonzero): operator deps may not needed.\n\n# op_library(lod_tensor_to_array_op DEPS lod_rank_table_op)\n\n# op_library(array_to_lod_tensor_op DEPS lod_rank_table_op)\n\n# op_library(unsqueeze_op DEPS reshape_op)\n\n# op_library(squeeze_op DEPS reshape_op)\n\n# op_library(flatten_op DEPS reshape_op)\n\n# op_library(unstack_op DEPS stack_op)\n\n# op_library(tensor_array_to_tensor_op DEPS concat_op)\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "paddle/fluid/operators/anakin/CMakeLists.txt" : {
      "ObjectId" : "5eacefc645bab288da7c289a5d7701abbcbef03d",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# file(APPEND ${pybind_file} \"USE_NO_KERNEL_OP(anakin_engine);\\n\")\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "paddle/fluid/operators/benchmark/CMakeLists.txt" : {
      "ObjectId" : "54008336a9f67f0123ba1cfa6fcea35b79b7ac4c",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "paddle/fluid/operators/controlflow/CMakeLists.txt" : {
      "ObjectId" : "7aa1c44eaafe53034b19ee52c59cc94d3a1269da",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "paddle/fluid/operators/csp/CMakeLists.txt" : {
      "ObjectId" : "5d468316e8eacb73c4a4ce81c784880bb5e46c2d",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "paddle/fluid/operators/detection/CMakeLists.txt" : {
      "ObjectId" : "94a2016aa53212c3ae5af6d86cccb117855cc3b4",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Export local libraries to parent\n\n# set(DETECTION_LIBRARY ${LOCAL_DETECTION_LIBS} PARENT_SCOPE)\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "paddle/fluid/operators/distributed/CMakeLists.txt" : {
      "ObjectId" : "f6531ec9edca7b425d28853f542d5e46783ba699",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIXME(typhoonzero): use add_subdirectory once we clean the dependency of these files\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "paddle/fluid/operators/distributed_ops/CMakeLists.txt" : {
      "ObjectId" : "1096f3773c6d44560d370502b1c550d67d40ca64",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "paddle/fluid/operators/elementwise/CMakeLists.txt" : {
      "ObjectId" : "5d468316e8eacb73c4a4ce81c784880bb5e46c2d",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "paddle/fluid/operators/fused/CMakeLists.txt" : {
      "ObjectId" : "42ab8e99662e1ec67b7a4061b274e84103a7d5b1",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "paddle/fluid/operators/jit/CMakeLists.txt" : {
      "ObjectId" : "47d6c83f2adf8c4b7476410ce7c1d435633a8bfe",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# refer must go first\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "paddle/fluid/operators/jit/gen/CMakeLists.txt" : {
      "ObjectId" : "99244ea9bd919a018732b75d1ab811e8bf338516",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# use gen jitcode kernel by name\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "paddle/fluid/operators/jit/more/CMakeLists.txt" : {
      "ObjectId" : "fa503356baa73cb76e50ff19901a56d0c987ad99",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# mix should be last\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "paddle/fluid/operators/jit/more/intrinsic/CMakeLists.txt" : {
      "ObjectId" : "468937a4f6b27ae525bfd0d8e99cc891eedbc353",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# use mkl kernels by name and type\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "paddle/fluid/operators/jit/more/mix/CMakeLists.txt" : {
      "ObjectId" : "dd039d29152961210958470a48f086a133ab640c",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "paddle/fluid/operators/jit/more/mkl/CMakeLists.txt" : {
      "ObjectId" : "56f1a62ad4e06807dace2a81156d92f6b02a14df",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# use mkl kernels by name and type\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "paddle/fluid/operators/jit/refer/CMakeLists.txt" : {
      "ObjectId" : "7133f596620410d37ffe52a2ee92b7a9974bf1cc",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# use refer kernel by name\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "paddle/fluid/operators/math/CMakeLists.txt" : {
      "ObjectId" : "d4837696241b8c4e3cca4f2afe872c6be559853c",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# math_library is a function to create math library.\n\n# The interface is the same as cc_library.\n\n# But it handle split GPU/CPU code and link some common library.\n",
        "Line" : 4,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# please add new math_library in alphabetical order\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "paddle/fluid/operators/math/detail/CMakeLists.txt" : {
      "ObjectId" : "0df1c060f9042067b655d987560a278f9fc46a5b",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "paddle/fluid/operators/metrics/CMakeLists.txt" : {
      "ObjectId" : "5d468316e8eacb73c4a4ce81c784880bb5e46c2d",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "paddle/fluid/operators/nccl/CMakeLists.txt" : {
      "ObjectId" : "9b26e19cc7ed05038e05308f9277b200a885dc10",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "paddle/fluid/operators/ngraph/CMakeLists.txt" : {
      "ObjectId" : "7559d29ce233dfcebf8b3118b4c700c35fe15d32",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "paddle/fluid/operators/ngraph/ops/CMakeLists.txt" : {
      "ObjectId" : "7dee3308b74a70a2daf35055d3ac80a14de99ac1",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "paddle/fluid/operators/optimizers/CMakeLists.txt" : {
      "ObjectId" : "5d468316e8eacb73c4a4ce81c784880bb5e46c2d",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "paddle/fluid/operators/reader/CMakeLists.txt" : {
      "ObjectId" : "5ee1206175600cd668ccbbf5b98053708a4406d3",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Export local libraries to parent\n\n# set(READER_LIBRARY ${LOCAL_READER_LIBS} PARENT_SCOPE)\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "paddle/fluid/operators/reduce_ops/CMakeLists.txt" : {
      "ObjectId" : "ebd07d90ebe6b0ba008ac89c01c4f054f96a6da9",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "paddle/fluid/operators/sequence_ops/CMakeLists.txt" : {
      "ObjectId" : "5d468316e8eacb73c4a4ce81c784880bb5e46c2d",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "paddle/fluid/operators/tensorrt/CMakeLists.txt" : {
      "ObjectId" : "6b551d13f1dc5cd1c82a15a8347b278e8f795c1c",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "paddle/fluid/platform/CMakeLists.txt" : {
      "ObjectId" : "5de00db55add1ebc0e7d81b14934a105fd3fe474",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# memcpy depends on device_context, here add deps individually for\n\n# avoiding cycle dependencies\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "paddle/fluid/platform/dynload/CMakeLists.txt" : {
      "ObjectId" : "07159d4a12ef4b628f7705ed206d3334be46dfc8",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# There is no macOS version of NCCL.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO(TJ): add iomp, mkldnn?\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "paddle/fluid/pybind/CMakeLists.txt" : {
      "ObjectId" : "900c1a0ca690378ab89568e7de503c660cd85b79",
      "LastModified" : "2019-04-18T08:14:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "paddle/fluid/recordio/CMakeLists.txt" : {
      "ObjectId" : "92e97a6c85d7c8f01c8473feb9772f2285d49673",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# internal library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "paddle/fluid/string/CMakeLists.txt" : {
      "ObjectId" : "49a8fb82dbf67357c1c3f2658538789af51b7cdc",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "paddle/fluid/train/CMakeLists.txt" : {
      "ObjectId" : "fae28fcb4c3102240438b62c203c65281f029192",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "paddle/fluid/train/demo/CMakeLists.txt" : {
      "ObjectId" : "af033fa7407b8a81ebb162a2edff2fc41f8f5260",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "paddle/scripts/CMakeLists.txt" : {
      "ObjectId" : "68cb5a19f99ab5148b04d193eb2356588bdc5a59",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "paddle/testing/CMakeLists.txt" : {
      "ObjectId" : "dc6245ce6b024ba10e6631d5aea307de75dc2963",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# for paddle test case\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "python/CMakeLists.txt" : {
      "ObjectId" : "81c34beeef2159f89d761f69add6900fd47984fc",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Python would use the .pyd by default under Windows series platform\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "python/paddle/dataset/tests/CMakeLists.txt" : {
      "ObjectId" : "485c38a13b573664d8033c237272a10ebb7c9701",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "python/paddle/fluid/contrib/slim/tests/CMakeLists.txt" : {
      "ObjectId" : "79bec8c4ad34d682895250bc29b1fddb3a569bd4",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "python/paddle/fluid/contrib/tests/CMakeLists.txt" : {
      "ObjectId" : "73e9ff10f0f0caedb6e2f837a114c5accb316dbb",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "python/paddle/fluid/tests/CMakeLists.txt" : {
      "ObjectId" : "d24417bbacb503d9ea70e68e7e0edb59e7dddbde",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "python/paddle/fluid/tests/book/CMakeLists.txt" : {
      "ObjectId" : "999a765b6dc32323a24f9069f11134360dbadcb8",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# default test\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "python/paddle/fluid/tests/book/high-level-api/CMakeLists.txt" : {
      "ObjectId" : "c034709fbdc2aa315ca995a42c278b261e6283a4",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This test is buggy\n\n# py_test(test_understand_sentiment_dynamic_rnn SRCS\n\n# \ttest_understand_sentiment_dynamic_rnn.py SERIAL)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# default test\n",
        "Line" : 10,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "python/paddle/fluid/tests/book_memory_optimization/CMakeLists.txt" : {
      "ObjectId" : "213af5d27f711214feda3d200ced57bf71fbf6c2",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# default test\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "python/paddle/fluid/tests/unittests/CMakeLists.txt" : {
      "ObjectId" : "1d2db8187224ed5721a2e0c051315264d5d3ff3b",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIXME(helin): https://github.com/PaddlePaddle/Paddle/issues/8290\n",
        "Line" : 25,
        "CharPositionInLine" : 46
      },
      "1" : {
        "Text" : "# FIXME(qijun) https://github.com/PaddlePaddle/Paddle/issues/5184\n",
        "Line" : 26,
        "CharPositionInLine" : 55
      },
      "2" : {
        "Text" : "# # FIXME(qijun) https://github.com/PaddlePaddle/Paddle/issues/5185\n",
        "Line" : 27,
        "CharPositionInLine" : 45
      },
      "3" : {
        "Text" : "# FIXME(qijun): https://github.com/PaddlePaddle/Paddle/issues/5101#issuecomment-339814957\n",
        "Line" : 28,
        "CharPositionInLine" : 40
      },
      "4" : {
        "Text" : "# op_test is a helper python file, not a test\n",
        "Line" : 30,
        "CharPositionInLine" : 35
      },
      "5" : {
        "Text" : "# decorators is a helper python file, not a test\n",
        "Line" : 31,
        "CharPositionInLine" : 38
      },
      "6" : {
        "Text" : "# this op is not support on mac\n",
        "Line" : 38,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# TODO: add the unitest back when it fixed\n",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# this op is not support on openblas\n",
        "Line" : 46,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# FIXME(typhoonzero): add these tests back\n\n# py_test_modules(test_dist_transformer MODULES test_dist_transformer)\n\n# set_tests_properties(test_dist_transformer PROPERTIES TIMEOUT 1000)\n",
        "Line" : 110,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# py_test_modules(test_dist_transpiler MODULES test_dist_transpiler)\n",
        "Line" : 115,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# change the timeout from 600 to 2200, because in debug mode, this test need more time.\n",
        "Line" : 129,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 12
    },
    "python/paddle/fluid/tests/unittests/mkldnn/CMakeLists.txt" : {
      "ObjectId" : "f71e04c09aa38b8cf7b3a167b84d4dc0e6cc3ec7",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "python/paddle/fluid/tests/unittests/ngraph/CMakeLists.txt" : {
      "ObjectId" : "5ed2d0aa80cd0462d3ac1902a2ec13fc2c1bd844",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "python/paddle/reader/tests/CMakeLists.txt" : {
      "ObjectId" : "107d5912e1567e0c8721987a281272c7feb51e63",
      "LastModified" : "2019-04-18T05:09:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 139
  },
  "ElapsedTime" : 5499
}