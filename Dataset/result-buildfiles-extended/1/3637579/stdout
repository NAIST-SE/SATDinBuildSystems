{
  "Repository" : "3637579",
  "Revision" : "HEAD",
  "ObjectId" : "4240e10b855f4e10459335ce21d30ab4fdfd9fc2",
  "CommitTime" : "2019-04-18T03:06:57Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "e6afd1e06edafad55f8f9e542eb6d2281e7b24f8",
      "LastModified" : "2019-03-12T09:07:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Versioning\n\n# ==========\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build\n\n# =====\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Installation\n\n# ============\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Makes the project importable from the build directory\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# GNUInstallDirs \"DATADIR\" wrong here; CMake search path wants \"share\".\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# jsoncons is header-only and does not depend on the architecture.\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "build_files/cmake/Darwin.cmake" : {
      "ObjectId" : "e1687258a354a15b7dbbdd2d495745a8001c9777",
      "LastModified" : "2018-10-02T18:24:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Global Configuration for MacOS platform\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# customize compiler flags\n\n## Add new flags\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "build_files/cmake/Linux.cmake" : {
      "ObjectId" : "2aa24c210e875735b737a5b30f327742bb721062",
      "LastModified" : "2018-10-02T18:24:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Global Configuration for linux platform\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# GNU libstdc++ runtime is not supported because not yet C++11 compliant\n\n#\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# customize compiler flags\n\n## Add new flags\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "build_files/cmake/Windows.cmake" : {
      "ObjectId" : "deb42645cc6ed409eb36776e2646c949cadd2419",
      "LastModified" : "2018-10-02T18:24:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Global Configuration for windows platform\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# define some preprocessor flags\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/build/cmake/CMakeLists.txt" : {
      "ObjectId" : "5f263ea0c2c630f14b18149602e07ffad5b8f12b",
      "LastModified" : "2018-10-02T18:24:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# jsoncons examples CMake file\n\n#\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# load global config\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# load per-platform configuration\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# special link option on Linux because llvm stl rely on GNU stl\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "715ddf05f104dce9f32b96491e243897be91a39d",
      "LastModified" : "2019-03-12T09:07:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################\n\n# ARM SETTINGS #\n\n################\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Note: to compile on ARM (or cross compile), you may need to add the following:\n\n# -DTARGET_ARCH=\"armv8-a -mfpu=neon -mfloat-abi=softfp -target arm-linux-gnueabi\"\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# load per-platform configuration\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# We're cross-compiling with clang++ on Travis, this is all pretty specific and just for testing\n",
        "Line" : 35,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# set(JSONCONS_TESTS_SOURCES\n\n#     ${JSONCONS_TESTS_SOURCE_DIR}/tests_main.cpp\n\n#     ${JSONCONS_TESTS_SOURCE_DIR}/jsonpointer/jsonpointer_tests.cpp\n\n#)\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    }
  },
  "FileTypes" : {
    "CMAKE" : 6
  },
  "ElapsedTime" : 2930
}