{
  "Repository" : "14026709",
  "Revision" : "HEAD",
  "ObjectId" : "da3068d0b21f910b2e8f09421eaa166a3114a6fd",
  "CommitTime" : "2018-12-10T06:12:12Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "ddaf662c1dae8c069b270d71c7ea5709f2cd72b4",
      "LastModified" : "2018-11-08T14:46:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO Tune for OSX\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "vendor/SDL/2.0.4/include/SDL_config.h.cmake" : {
      "ObjectId" : "44173a053374287bacca49ce21e5aefeb4d20fea",
      "LastModified" : "2016-03-20T08:36:06Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/*\n  Simple DirectMedia Layer\n  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>\n\n  This software is provided 'as-is', without any express or implied\n  warranty.  In no event will the authors be held liable for any damages\n  arising from the use of this software.\n\n  Permission is granted to anyone to use this software for any purpose,\n  including commercial applications, and to alter it and redistribute it\n  freely, subject to the following restrictions:\n\n  1. The origin of this software must not be misrepresented; you must not\n     claim that you wrote the original software. If you use this software\n     in a product, an acknowledgment in the product documentation would be\n     appreciated but is not required.\n  2. Altered source versions must be plainly marked as such, and must not be\n     misrepresented as being the original software.\n  3. This notice may not be removed or altered from any source distribution.\n*/",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/**\n *  \\file SDL_config.h.in\n *\n *  This is a set of defines to configure the SDL features\n */",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/* General platform specific identifiers */",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* C language features */",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/* C datatypes */\n/* Define SIZEOF_VOIDP for 64/32 architectures */",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/* Comment this if you want to build without any C library requirements */",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/* Useful headers */",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "/* C library functions */",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "/* We may need some replacement for stdarg.h here */",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "/* SDL internal assertion support */",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "/* Allow disabling of core subsystems */",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "/* Enable various audio drivers */",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "/* Enable various input drivers */",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "/* Enable various shared object loading systems */",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "/* Enable various threading systems */",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "/* Enable various timer systems */",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "/* Enable various video drivers */",
        "Line" : 272,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "/* Enable OpenGL support */",
        "Line" : 324,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "/* Enable system power support */",
        "Line" : 336,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "/* Enable system filesystem support */",
        "Line" : 345,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "/* Enable assembly routines */",
        "Line" : 354,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "/* Platform specific definitions */",
        "Line" : 359,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "/* Older Visual C++ headers don't have the Win64-compatible typedefs... */",
        "Line" : 394,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "vendor/assimp/4.1.0/CMakeLists.txt" : {
      "ObjectId" : "20f8bb4c156ccb1adef5e7e4c7f34d21cb7f72a8",
      "LastModified" : "2018-02-24T10:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Open Asset Import Library (assimp)\n\n# ----------------------------------------------------------------------\n\n# Copyright (c) 2006-2017, assimp team\n\n# All rights reserved.\n\n#\n\n# Redistribution and use of this software in source and binary forms,\n\n# with or without modification, are permitted provided that the\n\n# following conditions are met:\n\n#\n\n# * Redistributions of source code must retain the above\n\n#   copyright notice, this list of conditions and the\n\n#   following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above\n\n#   copyright notice, this list of conditions and the\n\n#   following disclaimer in the documentation and/or other\n\n#   materials provided with the distribution.\n\n#\n\n# * Neither the name of the assimp team, nor the names of its\n\n#   contributors may be used to endorse or promote products\n\n#   derived from this software without specific prior\n\n#   written permission of the assimp team.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#----------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Remove when CMake >= 2.8.4 is required\n",
        "Line" : 36,
        "CharPositionInLine" : 33
      },
      "2" : {
        "Text" : "# Hack by 0xc0dec\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# All supported options ###############################################\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Define here the needed parameters\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Needed for openddl_parser config, no use of c++11 at this moment\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Get the current working branch\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Get the latest abbreviated commit hash of the working branch\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Ensure that we do not run into issues like http://www.tcm.phy.cam.ac.uk/sw/inodes64.html on 32 bit linux\n",
        "Line" : 200,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# only necessary for 32-bit linux\n",
        "Line" : 203,
        "CharPositionInLine" : 38
      },
      "10" : {
        "Text" : "#ADD_DEFINITIONS(-D_FILE_OFFSET_BITS=64 )\n",
        "Line" : 204,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# Use GNUInstallDirs for Unix predefined directories\n",
        "Line" : 208,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Grouped compiler settings\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# hide all not-exported symbols\n",
        "Line" : 215,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# enable multi-core compilation with MSVC\n",
        "Line" : 220,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# disable \"elements of array '' will be default initialized\" warning on MSVC2013\n",
        "Line" : 223,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# If this is an in-source build (CMAKE_SOURCE_DIR == CMAKE_BINARY_DIR),\n\n# write the library/executable files to the respective directories in the\n\n# source tree. During an out-of-source build, however, do not litter this\n\n# directory, since that is probably what the user wanted to avoid.\n",
        "Line" : 268,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Cache these to allow the user to override them manually.\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Only generate this target if no higher-level project already has\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# add make uninstall capability\n",
        "Line" : 294,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# cmake configuration files\n",
        "Line" : 299,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Look for system installed irrXML\n",
        "Line" : 310,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Search for external dependencies, and build them from source if not found\n\n# Search for zlib\n",
        "Line" : 315,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# compile from sources\n",
        "Line" : 326,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Search for unzip\n",
        "Line" : 337,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# ${CMAKE_GENERATOR}\n",
        "Line" : 353,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# pick the correct prebuilt library\n",
        "Line" : 372,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# winsock and winmm are necessary dependencies of melange (this is undocumented, but true.)\n",
        "Line" : 398,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# Check dependencies for assimp_qt_viewer.\n\n# Why here? Maybe user do not want Qt viewer and have no Qt.\n\n# Why assimp_qt_viewer/CMakeLists.txt still contain similar check?\n\n# Because viewer can be build independently of Assimp.\n",
        "Line" : 422,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# Generate a pkg-config .pc for the Assimp library.\n",
        "Line" : 460,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Packing information\n",
        "Line" : 465,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# debian\n",
        "Line" : 490,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 32
    },
    "vendor/assimp/4.1.0/cmake-modules/Coveralls.cmake" : {
      "ObjectId" : "5343f1583c176f41c197667f7419935745912a6a",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# The MIT License (MIT)\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n\n#\n\n# Copyright (C) 2014 Joakim Söderberg <joakim.soderberg@gmail.com>\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# must be outside coveralls_setup() to get correct path\n",
        "Line" : 25,
        "CharPositionInLine" : 50
      },
      "2" : {
        "Text" : "#\n\n# Param _COVERAGE_SRCS\tA list of source files that coverage should be collected for.\n\n# Param _COVERALLS_UPLOAD Upload the result to coveralls?\n\n#\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# When passing a CMake list to an external process, the list\n\n# will be converted from the format \"1;2;3\" to \"1 2 3\".\n\n# This means the script we're calling won't see it as a list\n\n# of sources, but rather just one long path. We remedy this\n\n# by replacing \";\" with \"*\" and then reversing that in the script\n\n# that we're calling.\n\n# http://cmake.3232098.n2.nabble.com/Passing-a-CMake-list-quot-as-is-quot-to-a-custom-target-td6505681.html\n",
        "Line" : 47,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "#message(\"Coverage sources: ${COVERAGE_SRCS}\")\n",
        "Line" : 60,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# Zero the coverage counters.\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Run regress tests.\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Generate Gcov and translate it into coveralls JSON.\n\n# We do this by executing an external CMake script.\n\n# (We don't want this to run at CMake generation time, but after compilation and everything has run).\n",
        "Line" : 71,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# TODO: This is passed like: \"a b c\", not \"a;b;c\"\n",
        "Line" : 75,
        "CharPositionInLine" : 39
      },
      "9" : {
        "Text" : "# Upload the JSON to coveralls.\n",
        "Line" : 95,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 10
    },
    "vendor/assimp/4.1.0/cmake-modules/CoverallsClear.cmake" : {
      "ObjectId" : "a9ad487630513df789ffcfec5ac058361e21fccb",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# The MIT License (MIT)\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n\n#\n\n# Copyright (C) 2014 Joakim Söderberg <joakim.soderberg@gmail.com>\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# do not follow symlinks in file(GLOB_RECURSE ...)\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "vendor/assimp/4.1.0/cmake-modules/CoverallsGenerateGcov.cmake" : {
      "ObjectId" : "1047371642ca0eed4f16c31d510aaeb489ab0427",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# The MIT License (MIT)\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n\n#\n\n# Copyright (C) 2014 Joakim Söderberg <joakim.soderberg@gmail.com>\n\n#\n\n# This is intended to be run by a custom target in a CMake project like this.\n\n# 0. Compile program with coverage support.\n\n# 1. Clear coverage data. (Recursively delete *.gcda in build dir)\n\n# 2. Run the unit tests.\n\n# 3. Run this script specifying which source files the coverage should be performed on.\n\n#\n\n# This script will then use gcov to generate .gcov files in the directory specified\n\n# via the COV_PATH var. This should probably be the same as your cmake build dir.\n\n#\n\n# It then parses the .gcov files to convert them into the Coveralls JSON format:\n\n# https://coveralls.io/docs/api\n\n#\n\n# Example for running as standalone CMake script from the command line:\n\n# (Note it is important the -P is at the end...)\n\n# $ cmake -DCOV_PATH=$(pwd)\n\n#         -DCOVERAGE_SRCS=\"catcierge_rfid.c;catcierge_timer.c\"\n\n#         -P ../cmake/CoverallsGcovUpload.cmake\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Make sure we have the needed arguments.\n\n#\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Since it's not possible to pass a CMake list properly in the\n\n# \"1;2;3\" format to an external process, we have replaced the\n\n# \";\" with \"*\", so reverse that here so we get it back into the\n\n# CMake list format.\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# convert all paths in COVERAGE_SRCS to absolute paths\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# TODO: Fill in git remote data\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Branch.\n",
        "Line" : 110,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "############################# Macros #########################################\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# This macro converts from the full path format gcov outputs:\n\n#\n\n#    /path/to/project/root/build/#path#to#project#root#subdir#the_file.c.gcov\n\n#\n\n# to the original source file path the .gcov is for:\n\n#\n\n#   /path/to/project/root/subdir/the_file.c\n\n#\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# /path/to/project/root/build/#path#to#project#root#subdir#the_file.c.gcov\n\n# ->\n\n# #path#to#project#root#subdir#the_file.c.gcov\n",
        "Line" : 165,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# #path#to#project#root#subdir#the_file.c.gcov -> /path/to/project/root/subdir/the_file.c\n",
        "Line" : 170,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "##############################################################################\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Get the coverage data.\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Get a list of all the object directories needed by gcov\n\n# (The directories the .gcda files and .o files are found in)\n\n# and run gcov on those.\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#\n\n# The -p below refers to \"Preserve path components\",\n\n# This means that the generated gcov filename of a source file will\n\n# keep the original files entire filepath, but / is replaced with #.\n\n# Example:\n\n#\n\n# /path/to/project/root/build/CMakeFiles/the_file.dir/subdir/the_file.c.gcda\n\n# ------------------------------------------------------------------------------\n\n# File '/path/to/project/root/subdir/the_file.c'\n\n# Lines executed:68.34% of 199\n\n# /path/to/project/root/subdir/the_file.c:creating '#path#to#project#root#subdir#the_file.c.gcov'\n\n#\n\n# If -p is not specified then the file is named only \"the_file.c.gcov\"\n\n#\n",
        "Line" : 190,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# TODO: Make these be absolute path\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Get only the filenames to use for filtering.\n\n#set(COVERAGE_SRCS_NAMES \"\")\n\n#foreach (COVSRC ${COVERAGE_SRCS})\n\n#\tget_filename_component(COVSRC_NAME ${COVSRC} NAME)\n\n#\tmessage(\"${COVSRC} -> ${COVSRC_NAME}\")\n\n#\tlist(APPEND COVERAGE_SRCS_NAMES \"${COVSRC_NAME}\")\n\n#endforeach()\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#\n\n# Filter out all but the gcov files we want.\n\n#\n\n# We do this by comparing the list of COVERAGE_SRCS filepaths that the\n\n# user wants the coverage data for with the paths of the generated .gcov files,\n\n# so that we only keep the relevant gcov files.\n\n#\n\n# Example:\n\n# COVERAGE_SRCS =\n\n#\t\t\t\t/path/to/project/root/subdir/the_file.c\n\n#\n\n# ALL_GCOV_FILES =\n\n#\t\t\t\t/path/to/project/root/build/#path#to#project#root#subdir#the_file.c.gcov\n\n#\t\t\t\t/path/to/project/root/build/#path#to#project#root#subdir#other_file.c.gcov\n\n#\n\n# Result should be:\n\n# GCOV_FILES =\n\n#\t\t\t\t/path/to/project/root/build/#path#to#project#root#subdir#the_file.c.gcov\n\n#\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#message(\"Look in coverage sources: ${COVERAGE_SRCS}\")\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#\n\n# /path/to/project/root/build/#path#to#project#root#subdir#the_file.c.gcov\n\n# ->\n\n# /path/to/project/root/subdir/the_file.c\n",
        "Line" : 249,
        "CharPositionInLine" : 1
      },
      "19" : {
        "Text" : "# Is this in the list of source files?\n\n# TODO: We want to match against relative path filenames from the source file root...\n",
        "Line" : 256,
        "CharPositionInLine" : 1
      },
      "20" : {
        "Text" : "# We remove it from the list, so we don't bother searching for it again.\n\n# Also files left in COVERAGE_SRCS_REMAINING after this loop ends should\n\n# have coverage data generated from them (no lines are covered).\n",
        "Line" : 264,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# TODO: Enable setting these\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Read the GCOV files line by line and get the coverage data.\n",
        "Line" : 301,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# The new coveralls API doesn't need the entire source (Yay!)\n\n# However, still keeping that part for now. Will cleanup in the future.\n",
        "Line" : 307,
        "CharPositionInLine" : 1
      },
      "24" : {
        "Text" : "# Loads the gcov file as a list of lines.\n\n# (We first open the file and replace all occurrences of [] with _\n\n#  because CMake will fail to parse a line containing unmatched brackets...\n\n#  also the \\ to escaped \\n in macros screws up things.)\n\n# https://public.kitware.com/Bug/view.php?id=15369\n",
        "Line" : 312,
        "CharPositionInLine" : 1
      },
      "25" : {
        "Text" : "# Remove file contents to avoid encoding issues (cmake 2.8 has no ENCODING option)\n",
        "Line" : 322,
        "CharPositionInLine" : 1
      },
      "26" : {
        "Text" : "# Instead of trying to parse the source from the\n\n# gcov file, simply read the file contents from the source file.\n\n# (Parsing it from the gcov is hard because C-code uses ; in many places\n\n#  which also happens to be the same as the CMake list delimiter).\n",
        "Line" : 329,
        "CharPositionInLine" : 1
      },
      "27" : {
        "Text" : "# According to http://json.org/ these should be escaped as well.\n\n# Don't know how to do that in CMake however...\n\n#string(REPLACE \"\\b\" \"\\\\\\\\b\" GCOV_FILE_SOURCE \"${GCOV_FILE_SOURCE}\")\n\n#string(REPLACE \"\\f\" \"\\\\\\\\f\" GCOV_FILE_SOURCE \"${GCOV_FILE_SOURCE}\")\n\n#string(REGEX REPLACE \"\\u([a-fA-F0-9]{4})\" \"\\\\\\\\u\\\\1\" GCOV_FILE_SOURCE \"${GCOV_FILE_SOURCE}\")\n",
        "Line" : 340,
        "CharPositionInLine" : 1
      },
      "28" : {
        "Text" : "# We want a json array of coverage data as a single string\n\n# start building them from the contents of the .gcov\n",
        "Line" : 346,
        "CharPositionInLine" : 1
      },
      "29" : {
        "Text" : "# Line number for the .gcov.\n",
        "Line" : 350,
        "CharPositionInLine" : 24
      },
      "30" : {
        "Text" : "#message(\"${GCOV_LINE}\")\n\n# Example of what we're parsing:\n\n# Hitcount  |Line | Source\n\n# \"        8:   26:        if (!allowed || (strlen(allowed) == 0))\"\n",
        "Line" : 353,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# Check if we should exclude lines using the Lcov syntax.\n",
        "Line" : 363,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# Lines with 0 line numbers are metadata and can be ignored.\n",
        "Line" : 393,
        "CharPositionInLine" : 3
      },
      "33" : {
        "Text" : "# Translate the hitcount into valid JSON values.\n",
        "Line" : 399,
        "CharPositionInLine" : 5
      },
      "34" : {
        "Text" : "# Advanced way of removing the trailing comma in the JSON array.\n\n# \"[1, 2, 3, \" -> \"[1, 2, 3\"\n",
        "Line" : 421,
        "CharPositionInLine" : 1
      },
      "35" : {
        "Text" : "# Append the trailing ] to complete the JSON array.\n",
        "Line" : 425,
        "CharPositionInLine" : 1
      },
      "36" : {
        "Text" : "# Generate the final JSON for this file.\n",
        "Line" : 428,
        "CharPositionInLine" : 1
      },
      "37" : {
        "Text" : "# Loop through all files we couldn't find any coverage for\n\n# as well, and generate JSON for those as well with 0% coverage.\n",
        "Line" : 435,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Set variables for json replacement\n",
        "Line" : 439,
        "CharPositionInLine" : 1
      },
      "39" : {
        "Text" : "# Loads the source file as a list of lines.\n",
        "Line" : 444,
        "CharPositionInLine" : 1
      },
      "40" : {
        "Text" : "# Remove trailing comma, and complete JSON array with ]\n",
        "Line" : 460,
        "CharPositionInLine" : 1
      },
      "41" : {
        "Text" : "# Generate the final JSON for this file.\n",
        "Line" : 464,
        "CharPositionInLine" : 1
      },
      "42" : {
        "Text" : "# Get rid of trailing comma.\n",
        "Line" : 470,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Generate the final complete JSON!\n",
        "Line" : 474,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 44
    },
    "vendor/assimp/4.1.0/cmake-modules/DebSourcePPA.cmake" : {
      "ObjectId" : "d8a786fb2bdc8cfba48c4260600dbe6e9525eed6",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Debian Source Package Generator\n\n#\n\n# Copyright (c) 2010 Daniel Pfeifer <daniel@pfeifer-mail.de>\n\n# Many modifications by Rosen Diankov <rosen.diankov@gmail.com>\n\n#\n\n# Creates source debian files and manages library dependencies\n\n#\n\n# Features:\n\n# \n\n# - Automatically generates symbols and run-time dependencies from the build dependencies\n\n# - Custom copy of source directory via CPACK_DEBIAN_PACKAGE_SOURCE_COPY\n\n# - Simultaneous output of multiple debian source packages for each distribution\n\n# - Can specificy distribution-specific dependencies by suffixing DEPENDS with _${DISTRO_NAME}, for example: CPACK_DEBIAN_PACKAGE_DEPENDS_LUCID, CPACK_COMPONENT_MYCOMP0_DEPENDS_LUCID\n\n#\n\n# Usage:\n\n#\n\n# set(CPACK_DEBIAN_BUILD_DEPENDS debhelper cmake)\n\n# set(CPACK_DEBIAN_PACKAGE_PRIORITY optional)\n\n# set(CPACK_DEBIAN_PACKAGE_SECTION devel)\n\n# set(CPACK_DEBIAN_CMAKE_OPTIONS \"-DMYOPTION=myvalue\")\n\n# set(CPACK_DEBIAN_PACKAGE_DEPENDS mycomp0 mycomp1 some_ubuntu_package)\n\n# set(CPACK_DEBIAN_PACKAGE_DEPENDS_UBUNTU_LUCID mycomp0 mycomp1 lucid_specific_package)\n\n# set(CPACK_DEBIAN_PACKAGE_NAME mypackage)\n\n# set(CPACK_DEBIAN_PACKAGE_REMOVE_SOURCE_FILES unnecessary_file unnecessary_dir/file0)\n\n# set(CPACK_DEBIAN_PACKAGE_SOURCE_COPY svn export --force) # if using subversion\n\n# set(CPACK_DEBIAN_DISTRIBUTION_NAME ubuntu)\n\n# set(CPACK_DEBIAN_DISTRIBUTION_RELEASES karmic lucid maverick natty)\n\n# set(CPACK_DEBIAN_CHANGELOG \"  * Extra change log lines\")\n\n# set(CPACK_DEBIAN_PACKAGE_SUGGESTS \"ipython\")\n\n# set(CPACK_COMPONENT_X_RECOMMENDS \"recommended-package\")\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# DEBIAN/control\n\n# debian policy enforce lower case for package name\n\n# Package: (mandatory)\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Section: (recommended)\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Priority: (recommended)\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# remove unnecessary folders\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# create the original source tar\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "##############################################################################\n\n# debian/control\n",
        "Line" : 89,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "##############################################################################\n\n# debian/copyright\n",
        "Line" : 248,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "##############################################################################\n\n# debian/rules\n",
        "Line" : 255,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# for reducing size\n",
        "Line" : 290,
        "CharPositionInLine" : 18
      },
      "10" : {
        "Text" : "##############################################################################\n\n# debian/compat\n",
        "Line" : 314,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "##############################################################################\n\n# debian/source/format\n",
        "Line" : 318,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "##############################################################################\n\n# debian/changelog\n",
        "Line" : 322,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "##############################################################################\n\n# debuild -S\n",
        "Line" : 333,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "##############################################################################\n\n# dput ppa:your-lp-id/ppa <source.changes>\n",
        "Line" : 345,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "vendor/assimp/4.1.0/cmake-modules/FindDevIL.cmake" : {
      "ObjectId" : "381a75dd2af039f3b647ba56df232e4986976b0f",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindDevIL\n\n# ---------\n\n#\n\n#\n\n#\n\n# This module locates the developer's image library.\n\n# http://openil.sourceforge.net/\n\n#\n\n# This module sets:\n\n#\n\n# ::\n\n#\n\n#    IL_LIBRARIES -   the name of the IL library. These include the full path to\n\n#                     the core DevIL library. This one has to be linked into the\n\n#                     application.\n\n#    ILU_LIBRARIES -  the name of the ILU library. Again, the full path. This\n\n#                     library is for filters and effects, not actual loading. It\n\n#                     doesn't have to be linked if the functionality it provides\n\n#                     is not used.\n\n#    ILUT_LIBRARIES - the name of the ILUT library. Full path. This part of the\n\n#                     library interfaces with OpenGL. It is not strictly needed\n\n#                     in applications.\n\n#    IL_INCLUDE_DIR - where to find the il.h, ilu.h and ilut.h files.\n\n#    IL_FOUND -       this is set to TRUE if all the above variables were set.\n\n#                     This will be set to false if ILU or ILUT are not found,\n\n#                     even if they are not needed. In most systems, if one\n\n#                     library is found all the others are as well. That's the\n\n#                     way the DevIL developers release it.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO: Add version support.\n\n# Tested under Linux and Windows (MSVC)\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#include(${CMAKE_CURRENT_LIST_DIR}/FindPackageHandleStandardArgs.cmake)\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#message(\"IL_INCLUDE_DIR is ${IL_INCLUDE_DIR}\")\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#message(\"IL_LIBRARIES is ${IL_LIBRARIES}\")\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#message(\"ILUT_LIBRARIES is ${ILUT_LIBRARIES}\")\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#message(\"ILU_LIBRARIES is ${ILU_LIBRARIES}\")\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "vendor/assimp/4.1.0/cmake-modules/FindDirectX.cmake" : {
      "ObjectId" : "70704314233f84221f7b3b6ebd78d36dfd00a395",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Find DirectX SDK\n\n# Define:\n\n# DirectX_FOUND\n\n# DirectX_INCLUDE_DIR\n\n# DirectX_LIBRARY\n\n# DirectX_ROOT_DIR\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The only platform it makes sense to check for DirectX SDK\n",
        "Line" : 18,
        "CharPositionInLine" : 10
      },
      "3" : {
        "Text" : "# Get path, convert backslashes as ${ENV_DXSDK_DIR}\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# construct search paths\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# redo search if prefix path changed\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# dlls are in DirectX_ROOT_DIR/Developer Runtime/x64|x86\n\n# lib files are in DirectX_ROOT_DIR/Lib/x64|x86\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# look for dxgi (needed by both 10 and 11)\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# look for d3dcompiler (needed by 11)\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# look for D3D11 components\n",
        "Line" : 79,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 10
    },
    "vendor/assimp/4.1.0/cmake-modules/FindIrrXML.cmake" : {
      "ObjectId" : "5434e0b8629010b790d5e8190f0c209dfe6e5b31",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find IrrXMl from irrlicht project\n\n#\n\n# Find LibIrrXML headers and library\n\n#\n\n#   IRRXML_FOUND          - IrrXML found\n\n#   IRRXML_INCLUDE_DIR    - Headers location\n\n#   IRRXML_LIBRARY        - IrrXML main library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "vendor/assimp/4.1.0/cmake-modules/FindPkgMacros.cmake" : {
      "ObjectId" : "074cce35236c472f0e8131c10e0dde066d63a0da",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##################################################################\n\n# Provides some common functionality for the FindPackage modules\n\n##################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Begin processing of package\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Display a status message unless FIND_QUIETLY is set\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Get environment variable, define it as ENV_$var and make sure backslashes are converted to forward slashes\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# replace won't work if var is blank\n",
        "Line" : 31,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "# Construct search paths for includes and libraries from a PREFIX_PATH\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# clear cache variables if a certain variable changed\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# test against internal check variable\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Try to get some hints from pkg-config, if available\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Android does not support PKG_CONFIG so we disable it\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Couple a set of release AND debug libraries (or frameworks)\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Generate debug names from given release names\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Add the parent dir from DIR to VAR\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Do the final processing for the package find.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# skip if already processed during this run\n",
        "Line" : 99,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Slightly customised framework finder\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "vendor/assimp/4.1.0/cmake-modules/FindRT.cmake" : {
      "ObjectId" : "17d5df81db5ebfaa67e09e4dbf9c0d41cee230cc",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find real time libraries\n\n# Once done, this will define\n\n#\n\n# RT_FOUND - system has rt library\n\n# RT_LIBRARIES - rt libraries directory\n\n#\n\n# Source: https://gitlab.cern.ch/dss/eos/commit/44070e575faaa46bd998708ef03eedb381506ff0\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set\n\n# RT_FOUND to TRUE if all listed variables are TRUE\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "vendor/assimp/4.1.0/cmake-modules/FindZLIB.cmake" : {
      "ObjectId" : "95eb51547377ad817104e6cdbf8367dcdc6c6c90",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Try to find ZLIB\n\n# Once done, this will define\n\n#\n\n#  ZLIB_FOUND - system has ZLIB\n\n#  ZLIB_INCLUDE_DIRS - the ZLIB include directories\n\n#  ZLIB_LIBRARIES - link these to use ZLIB\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Get path, convert backslashes as ${ENV_${var}}\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# construct search paths\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# redo search if prefix path changed\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "vendor/assimp/4.1.0/cmake-modules/Findassimp.cmake" : {
      "ObjectId" : "95f3250b3fc9d01b2a9c2f1c8b548f2bcab1a68f",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find path of each library\n",
        "Line" : 10,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "vendor/assimp/4.1.0/cmake-modules/MinGW_x86_64.cmake" : {
      "ObjectId" : "d5c1f15011ed47146856b311cd27d55d9e93e570",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# this one sets internal to crosscompile (in theory)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# the minimalistic settings\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# where is the target (so called staging) environment\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# search for programs in the build host directories (default BOTH)\n\n#SET(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)\n\n# for libraries and headers in the target directories\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "vendor/assimp/4.1.0/cmake-modules/PrecompiledHeader.cmake" : {
      "ObjectId" : "6af7866f5034660c9e6b84192cdd2e7f678cef47",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Do not consider .c files\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Add precompiled header to SourcesVar\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "vendor/assimp/4.1.0/code/CMakeLists.txt" : {
      "ObjectId" : "4d02240da7123b30441af19faeb51488cbb90f41",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Open Asset Import Library (assimp)\n\n# ----------------------------------------------------------------------\n\n#\n\n# Copyright (c) 2006-2017, assimp team\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# All rights reserved.\n\n#\n\n# Redistribution and use of this software in source and binary forms,\n\n# with or without modification, are permitted provided that the\n\n# following conditions are met:\n\n#\n\n# * Redistributions of source code must retain the above\n\n#   copyright notice, this list of conditions and the\n\n#   following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above\n\n#   copyright notice, this list of conditions and the\n\n#   following disclaimer in the documentation and/or other\n\n#   materials provided with the distribution.\n\n#\n\n# * Neither the name of the assimp team, nor the names of its\n\n#   contributors may be used to endorse or promote products\n\n#   derived from this software without specific prior\n\n#   written permission of the assimp team.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n#----------------------------------------------------------------------\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Listing and grouping of all the source files.\n\n# 1) Set the file lists for each component\n\n# 2) Create a Source Group for each component, for IDE project orginization\n\n# 3) Add libassimp using the file lists (eliminates duplication of file names between\n\n#    source groups and library command)\n\n#\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# if this variable is set to TRUE, the user can manually disable importers by setting\n\n# ASSIMP_BUILD_XXX_IMPORTER to FALSE for each importer\n\n# if this variable is set to FALSE, the user can manually enable importers by setting\n\n# ASSIMP_BUILD_XXX_IMPORTER to TRUE for each importer\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# macro to add the CMake Option ADD_ASSIMP_IMPORTER_<name> which enables compile of loader\n\n# this way selective loaders can be compiled (reduces filesize + compile time)\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# list of enabled importers\n",
        "Line" : 218,
        "CharPositionInLine" : 33
      },
      "6" : {
        "Text" : "# disabled list (used to print)\n",
        "Line" : 219,
        "CharPositionInLine" : 34
      },
      "7" : {
        "Text" : "# Check dependencies for glTF importer with Open3DGC-compression.\n\n# RT-extensions is used in \"contrib/Open3DGC/o3dgcTimer.h\" for collecting statistics. Pointed file\n\n# has implementation for different platforms: WIN32, __MACH__ and other (\"else\" block).\n",
        "Line" : 804,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#!TODO: off course is better to remove statistics timers from o3dgc codec. Or propose to choose what to use.\n",
        "Line" : 814,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# VC2010 fixes\n",
        "Line" : 820,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Assimp Files\n",
        "Line" : 846,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Model Support\n",
        "Line" : 855,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Third-party libraries\n",
        "Line" : 858,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Necessary to show the headers in the project when using the VC++ generator:\n",
        "Line" : 866,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# in order to prevent DLL hell, each of the DLLs have to be suffixed with the major version and msvc prefix\n",
        "Line" : 901,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# use full version\n",
        "Line" : 924,
        "CharPositionInLine" : 32
      },
      "16" : {
        "Text" : "# PUBLIC_HEADER option does not support directory structure creation\n\n# add ./Compiler/*.h to assimp.framework via copy command\n",
        "Line" : 941,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Build against external unzip, or add ../contrib/unzip so\n\n# assimp can #include \"unzip.h\"\n",
        "Line" : 951,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Add RT-extension library for glTF importer with Open3DGC-compression.\n",
        "Line" : 960,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Create the coveralls target.\n",
        "Line" : 1007,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# The source files.\n\n# If we should upload.\n",
        "Line" : 1009,
        "CharPositionInLine" : 27
      },
      "21" : {
        "Text" : "# (Optional) Alternate project cmake module path.\n",
        "Line" : 1011,
        "CharPositionInLine" : 48
      },
      "CommentCount" : 22
    },
    "vendor/assimp/4.1.0/contrib/CMakeLists.txt" : {
      "ObjectId" : "362f1653d1c569470eb7035459672a1da0b4622d",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Compile internal irrXML only if system is not requested\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "vendor/assimp/4.1.0/contrib/android-cmake/AndroidNdkGdb.cmake" : {
      "ObjectId" : "0677dcda9115ee1dd11762c034267085eadd3a48",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2014, Pavel Rojtberg\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# 1. Redistributions of source code must retain the above copyright notice,\n\n# this list of conditions and the following disclaimer.\n\n#\n\n# 2. Redistributions in binary form must reproduce the above copyright notice,\n\n# this list of conditions and the following disclaimer in the documentation\n\n# and/or other materials provided with the distribution.\n\n#\n\n# 3. Neither the name of the copyright holder nor the names of its\n\n# contributors may be used to endorse or promote products derived from this\n\n# software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ------------------------------------------------------------------------------\n\n# Usage:\n\n# 1. place AndroidNdkGdb.cmake somewhere inside ${CMAKE_MODULE_PATH}\n\n# 2. inside your project add\n\n#\n\n#    include(AndroidNdkGdb)\n\n#    android_ndk_gdb_enable()\n\n#    # for each target\n\n#    add_library(MyLibrary ...)\n\n#    android_ndk_gdb_debuggable(MyLibrary)    \n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add gdbserver and general gdb configuration to project\n\n# also create a mininal NDK skeleton so ndk-gdb finds the paths\n\n#\n\n# the optional parameter defines the path to the android project.\n\n# uses PROJECT_SOURCE_DIR by default.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# create custom target that depends on the real target so it gets executed afterwards\n",
        "Line" : 49,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# 1. generate essential Android Makefiles\n",
        "Line" : 61,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# 2. generate gdb.setup\n",
        "Line" : 70,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# 3. copy gdbserver executable\n",
        "Line" : 76,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# register a target for remote debugging\n\n# copies the debug version to NDK_GDB_SOLIB_PATH then strips symbols of original\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# create custom target that depends on the real target so it gets executed afterwards\n",
        "Line" : 87,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# 4. copy lib to obj\n",
        "Line" : 90,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# 5. strip symbols\n",
        "Line" : 93,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 11
    },
    "vendor/assimp/4.1.0/contrib/android-cmake/AndroidNdkModules.cmake" : {
      "ObjectId" : "64f37fdee264493a5e6f97e336eaf8afb096ad60",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2014, Pavel Rojtberg\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# 1. Redistributions of source code must retain the above copyright notice,\n\n# this list of conditions and the following disclaimer.\n\n#\n\n# 2. Redistributions in binary form must reproduce the above copyright notice,\n\n# this list of conditions and the following disclaimer in the documentation\n\n# and/or other materials provided with the distribution.\n\n#\n\n# 3. Neither the name of the copyright holder nor the names of its\n\n# contributors may be used to endorse or promote products derived from this\n\n# software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "vendor/assimp/4.1.0/contrib/android-cmake/android.toolchain.cmake" : {
      "ObjectId" : "ffa26126a79200d142e8ac1acecb1c095476be7e",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2010-2011, Ethan Rublee\n\n# Copyright (c) 2011-2014, Andrey Kamaev\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# 1.  Redistributions of source code must retain the above copyright notice,\n\n#     this list of conditions and the following disclaimer.\n\n#\n\n# 2.  Redistributions in binary form must reproduce the above copyright notice,\n\n#     this list of conditions and the following disclaimer in the documentation\n\n#     and/or other materials provided with the distribution.\n\n#\n\n# 3.  Neither the name of the copyright holder nor the names of its\n\n#     contributors may be used to endorse or promote products derived from this\n\n#     software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ------------------------------------------------------------------------------\n\n#  Android CMake toolchain file, for use with the Android NDK r5-r10d\n\n#  Requires cmake 2.6.3 or newer (2.8.9 or newer is recommended).\n\n#  See home page: https://github.com/taka-no-me/android-cmake\n\n#\n\n#  Usage Linux:\n\n#   $ export ANDROID_NDK=/absolute/path/to/the/android-ndk\n\n#   $ mkdir build && cd build\n\n#   $ cmake -DCMAKE_TOOLCHAIN_FILE=path/to/the/android.toolchain.cmake ..\n\n#   $ make -j8\n\n#\n\n#  Usage Windows:\n\n#     You need native port of make to build your project.\n\n#     Android NDK r7 (and newer) already has make.exe on board.\n\n#     For older NDK you have to install it separately.\n\n#     For example, this one: http://gnuwin32.sourceforge.net/packages/make.htm\n\n#\n\n#   $ SET ANDROID_NDK=C:\\absolute\\path\\to\\the\\android-ndk\n\n#   $ mkdir build && cd build\n\n#   $ cmake.exe -G\"MinGW Makefiles\"\n\n#       -DCMAKE_TOOLCHAIN_FILE=path\\to\\the\\android.toolchain.cmake\n\n#       -DCMAKE_MAKE_PROGRAM=\"%ANDROID_NDK%\\prebuilt\\windows\\bin\\make.exe\" ..\n\n#   $ cmake.exe --build .\n\n#\n\n#\n\n#  Options (can be set as cmake parameters: -D<option_name>=<value>):\n\n#    ANDROID_NDK=/opt/android-ndk - path to the NDK root.\n\n#      Can be set as environment variable. Can be set only at first cmake run.\n\n#\n\n#    ANDROID_ABI=armeabi-v7a - specifies the target Application Binary\n\n#      Interface (ABI). This option nearly matches to the APP_ABI variable\n\n#      used by ndk-build tool from Android NDK.\n\n#\n\n#      Possible targets are:\n\n#        \"armeabi\" - ARMv5TE based CPU with software floating point operations\n\n#        \"armeabi-v7a\" - ARMv7 based devices with hardware FPU instructions\n\n#            this ABI target is used by default\n\n#        \"armeabi-v7a with NEON\" - same as armeabi-v7a, but\n\n#            sets NEON as floating-point unit\n\n#        \"armeabi-v7a with VFPV3\" - same as armeabi-v7a, but\n\n#            sets VFPV3 as floating-point unit (has 32 registers instead of 16)\n\n#        \"armeabi-v6 with VFP\" - tuned for ARMv6 processors having VFP\n\n#        \"x86\" - IA-32 instruction set\n\n#        \"mips\" - MIPS32 instruction set\n\n#\n\n#      64-bit ABIs for NDK r10 and newer:\n\n#        \"arm64-v8a\" - ARMv8 AArch64 instruction set\n\n#        \"x86_64\" - Intel64 instruction set (r1)\n\n#        \"mips64\" - MIPS64 instruction set (r6)\n\n#\n\n#    ANDROID_NATIVE_API_LEVEL=android-8 - level of Android API compile for.\n\n#      Option is read-only when standalone toolchain is used.\n\n#      Note: building for \"android-L\" requires explicit configuration.\n\n#\n\n#    ANDROID_TOOLCHAIN_NAME=arm-linux-androideabi-4.9 - the name of compiler\n\n#      toolchain to be used. The list of possible values depends on the NDK\n\n#      version. For NDK r10c the possible values are:\n\n#\n\n#        * aarch64-linux-android-4.9\n\n#        * aarch64-linux-android-clang3.4\n\n#        * aarch64-linux-android-clang3.5\n\n#        * arm-linux-androideabi-4.6\n\n#        * arm-linux-androideabi-4.8\n\n#        * arm-linux-androideabi-4.9 (default)\n\n#        * arm-linux-androideabi-clang3.4\n\n#        * arm-linux-androideabi-clang3.5\n\n#        * mips64el-linux-android-4.9\n\n#        * mips64el-linux-android-clang3.4\n\n#        * mips64el-linux-android-clang3.5\n\n#        * mipsel-linux-android-4.6\n\n#        * mipsel-linux-android-4.8\n\n#        * mipsel-linux-android-4.9\n\n#        * mipsel-linux-android-clang3.4\n\n#        * mipsel-linux-android-clang3.5\n\n#        * x86-4.6\n\n#        * x86-4.8\n\n#        * x86-4.9\n\n#        * x86-clang3.4\n\n#        * x86-clang3.5\n\n#        * x86_64-4.9\n\n#        * x86_64-clang3.4\n\n#        * x86_64-clang3.5\n\n#\n\n#    ANDROID_FORCE_ARM_BUILD=OFF - set ON to generate 32-bit ARM instructions\n\n#      instead of Thumb. Is not available for \"armeabi-v6 with VFP\"\n\n#      (is forced to be ON) ABI.\n\n#\n\n#    ANDROID_NO_UNDEFINED=ON - set ON to show all undefined symbols as linker\n\n#      errors even if they are not used.\n\n#\n\n#    ANDROID_SO_UNDEFINED=OFF - set ON to allow undefined symbols in shared\n\n#      libraries. Automatically turned for NDK r5x and r6x due to GLESv2\n\n#      problems.\n\n#\n\n#    ANDROID_STL=gnustl_static - specify the runtime to use.\n\n#\n\n#      Possible values are:\n\n#        none           -> Do not configure the runtime.\n\n#        system         -> Use the default minimal system C++ runtime library.\n\n#                          Implies -fno-rtti -fno-exceptions.\n\n#                          Is not available for standalone toolchain.\n\n#        system_re      -> Use the default minimal system C++ runtime library.\n\n#                          Implies -frtti -fexceptions.\n\n#                          Is not available for standalone toolchain.\n\n#        gabi++_static  -> Use the GAbi++ runtime as a static library.\n\n#                          Implies -frtti -fno-exceptions.\n\n#                          Available for NDK r7 and newer.\n\n#                          Is not available for standalone toolchain.\n\n#        gabi++_shared  -> Use the GAbi++ runtime as a shared library.\n\n#                          Implies -frtti -fno-exceptions.\n\n#                          Available for NDK r7 and newer.\n\n#                          Is not available for standalone toolchain.\n\n#        stlport_static -> Use the STLport runtime as a static library.\n\n#                          Implies -fno-rtti -fno-exceptions for NDK before r7.\n\n#                          Implies -frtti -fno-exceptions for NDK r7 and newer.\n\n#                          Is not available for standalone toolchain.\n\n#        stlport_shared -> Use the STLport runtime as a shared library.\n\n#                          Implies -fno-rtti -fno-exceptions for NDK before r7.\n\n#                          Implies -frtti -fno-exceptions for NDK r7 and newer.\n\n#                          Is not available for standalone toolchain.\n\n#        gnustl_static  -> Use the GNU STL as a static library.\n\n#                          Implies -frtti -fexceptions.\n\n#        gnustl_shared  -> Use the GNU STL as a shared library.\n\n#                          Implies -frtti -fno-exceptions.\n\n#                          Available for NDK r7b and newer.\n\n#                          Silently degrades to gnustl_static if not available.\n\n#\n\n#    ANDROID_STL_FORCE_FEATURES=ON - turn rtti and exceptions support based on\n\n#      chosen runtime. If disabled, then the user is responsible for settings\n\n#      these options.\n\n#\n\n#  What?:\n\n#    android-cmake toolchain searches for NDK/toolchain in the following order:\n\n#      ANDROID_NDK - cmake parameter\n\n#      ANDROID_NDK - environment variable\n\n#      ANDROID_STANDALONE_TOOLCHAIN - cmake parameter\n\n#      ANDROID_STANDALONE_TOOLCHAIN - environment variable\n\n#      ANDROID_NDK - default locations\n\n#      ANDROID_STANDALONE_TOOLCHAIN - default locations\n\n#\n\n#    Make sure to do the following in your scripts:\n\n#      SET( CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} ${my_cxx_flags}\" )\n\n#      SET( CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} ${my_cxx_flags}\" )\n\n#    The flags will be prepopulated with critical flags, so don't loose them.\n\n#    Also be aware that toolchain also sets configuration-specific compiler\n\n#    flags and linker flags.\n\n#\n\n#    ANDROID and BUILD_ANDROID will be set to true, you may test any of these\n\n#    variables to make necessary Android-specific configuration changes.\n\n#\n\n#    Also ARMEABI or ARMEABI_V7A or X86 or MIPS or ARM64_V8A or X86_64 or MIPS64\n\n#    will be set true, mutually exclusive. NEON option will be set true\n\n#    if VFP is set to NEON.\n\n#\n\n# ------------------------------------------------------------------------------\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# subsequent toolchain loading is not really needed\n",
        "Line" : 190,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# touch toolchain variable to suppress \"unused variable\" warning\n",
        "Line" : 195,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# inherit settings in recursive loads\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# this one is important\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# this one not so much\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# rpath makes low sense for Android\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# NDK search paths\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# known ABIs\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# API level defaults\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# fight against cygwin\n",
        "Line" : 338,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# remove cygwin from PATH\n",
        "Line" : 347,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# detect current host platform\n",
        "Line" : 356,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# see if we have path to Android NDK\n",
        "Line" : 381,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# see if we have path to Android standalone toolchain\n",
        "Line" : 386,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "#try to find Android NDK in one of the the default locations\n",
        "Line" : 390,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "#try to find Android standalone toolchain in one of the the default locations\n",
        "Line" : 404,
        "CharPositionInLine" : 3
      },
      "18" : {
        "Text" : "# remember found paths\n",
        "Line" : 415,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# try to detect change\n",
        "Line" : 432,
        "CharPositionInLine" : 1
      },
      "20" : {
        "Text" : "# android NDK layout\n",
        "Line" : 456,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# try to automatically detect the layout\n",
        "Line" : 459,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# only 32-bit at the moment\n",
        "Line" : 471,
        "CharPositionInLine" : 71
      },
      "23" : {
        "Text" : "# only 32-bit at the moment\n",
        "Line" : 476,
        "CharPositionInLine" : 71
      },
      "24" : {
        "Text" : "# ANDROID_NDK_LAYOUT STREQUAL \"RELEASE\"\n",
        "Line" : 480,
        "CharPositionInLine" : 8
      },
      "25" : {
        "Text" : "# try to detect change of NDK\n",
        "Line" : 487,
        "CharPositionInLine" : 1
      },
      "26" : {
        "Text" : "# get all the details about standalone toolchain\n",
        "Line" : 501,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#message(\"machine: !${__machine}!\\narch: !${__arch}!\\nversion: !${__version}!\\ntoolchain: !${__toolchain}!\\n\")\n",
        "Line" : 568,
        "CharPositionInLine" : 3
      },
      "28" : {
        "Text" : "# get all the details about NDK\n",
        "Line" : 580,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# do not go through all toolchains if we know the name\n",
        "Line" : 589,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# we need clang to go after gcc\n",
        "Line" : 602,
        "CharPositionInLine" : 39
      },
      "31" : {
        "Text" : "# build list of available ABIs\n",
        "Line" : 620,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# choose target ABI\n",
        "Line" : 633,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# verify that target ABI is supported\n",
        "Line" : 635,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# set target ABI options\n",
        "Line" : 645,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# need always fallback to older platform\n",
        "Line" : 691,
        "CharPositionInLine" : 1
      },
      "36" : {
        "Text" : "# really dirty hack\n\n# it is not possible to change CMAKE_SYSTEM_PROCESSOR after the first run...\n",
        "Line" : 719,
        "CharPositionInLine" : 1
      },
      "37" : {
        "Text" : "# choose toolchain\n",
        "Line" : 732,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# choose native API level\n",
        "Line" : 781,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# adjust API level\n",
        "Line" : 785,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# validate\n",
        "Line" : 797,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# remember target ABI\n",
        "Line" : 819,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# runtime choice (STL, rtti, exceptions)\n",
        "Line" : 827,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# setup paths and STL for standalone toolchain\n",
        "Line" : 895,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# old location ( pre r8c )\n",
        "Line" : 904,
        "CharPositionInLine" : 3
      },
      "45" : {
        "Text" : "# always search static GNU STL to get the location of libsupc++.a\n",
        "Line" : 914,
        "CharPositionInLine" : 2
      },
      "46" : {
        "Text" : "# clang\n",
        "Line" : 949,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# setup paths and STL for NDK\n",
        "Line" : 973,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# do nothing\n",
        "Line" : 979,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "# before r7\n",
        "Line" : 989,
        "CharPositionInLine" : 42
      },
      "50" : {
        "Text" : "# before r8d\n",
        "Line" : 997,
        "CharPositionInLine" : 46
      },
      "51" : {
        "Text" : "# before r7\n",
        "Line" : 1002,
        "CharPositionInLine" : 42
      },
      "52" : {
        "Text" : "# gnustl binary for 4.7 compiler is buggy :(\n\n# TODO: look for right fix\n",
        "Line" : 1014,
        "CharPositionInLine" : 4
      },
      "53" : {
        "Text" : "# find libsupc++.a - rtti & exceptions\n",
        "Line" : 1032,
        "CharPositionInLine" : 1
      },
      "54" : {
        "Text" : "# r8b or newer\n",
        "Line" : 1034,
        "CharPositionInLine" : 137
      },
      "55" : {
        "Text" : "# r7-r8\n",
        "Line" : 1036,
        "CharPositionInLine" : 110
      },
      "56" : {
        "Text" : "# before r7\n",
        "Line" : 1038,
        "CharPositionInLine" : 36
      },
      "57" : {
        "Text" : "# case of shared STL linkage\n",
        "Line" : 1058,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# TODO: check if .so file exists before the renaming\n",
        "Line" : 1061,
        "CharPositionInLine" : 1
      },
      "59" : {
        "Text" : "# ccache support\n",
        "Line" : 1065,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# setup the cross-compiler\n",
        "Line" : 1078,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# Use gcc-ar if we have it for better LTO support.\n",
        "Line" : 1102,
        "CharPositionInLine" : 2
      },
      "62" : {
        "Text" : "# Force set compilers because standard identification works badly for us\n",
        "Line" : 1126,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# force ASM compiler (required for CMake < 2.8.5)\n",
        "Line" : 1149,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# flags and definitions\n",
        "Line" : 1165,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# try to convert path to 8.3 form\n",
        "Line" : 1171,
        "CharPositionInLine" : 2
      },
      "66" : {
        "Text" : "# quotes can break try_compile and compiler identification\n",
        "Line" : 1186,
        "CharPositionInLine" : 2
      },
      "67" : {
        "Text" : "# NDK flags\n",
        "Line" : 1193,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# always compile ARMEABI_V6 in arm mode; otherwise there is no difference from ARMEABI\n",
        "Line" : 1210,
        "CharPositionInLine" : 2
      },
      "69" : {
        "Text" : "# good/necessary when porting desktop libraries\n",
        "Line" : 1237,
        "CharPositionInLine" : 62
      },
      "70" : {
        "Text" : "# see https://android-review.googlesource.com/#/c/47564/\n",
        "Line" : 1244,
        "CharPositionInLine" : 72
      },
      "71" : {
        "Text" : "# ABI-specific flags\n",
        "Line" : 1247,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# vfp == vfpv2\n",
        "Line" : 1258,
        "CharPositionInLine" : 91
      },
      "73" : {
        "Text" : "# STL\n",
        "Line" : 1273,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# C objects:\n",
        "Line" : 1284,
        "CharPositionInLine" : 2
      },
      "75" : {
        "Text" : "# variables controlling optional build flags\n",
        "Line" : 1302,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# before r7\n",
        "Line" : 1303,
        "CharPositionInLine" : 40
      },
      "77" : {
        "Text" : "# libGLESv2.so in NDK's prior to r7 refers to missing external symbols.\n\n# So this flag option is required for all projects using OpenGL from native.\n",
        "Line" : 1304,
        "CharPositionInLine" : 1
      },
      "78" : {
        "Text" : "# linker flags\n",
        "Line" : 1324,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# this is *required* to use the following linker flags that routes around\n\n# a CPU bug in some Cortex-A8 implementations:\n",
        "Line" : 1328,
        "CharPositionInLine" : 1
      },
      "80" : {
        "Text" : "# there is some sysroot-related problem in mips linker...\n",
        "Line" : 1335,
        "CharPositionInLine" : 2
      },
      "81" : {
        "Text" : "# after r8b\n",
        "Line" : 1356,
        "CharPositionInLine" : 48
      },
      "82" : {
        "Text" : "# version 4.6\n",
        "Line" : 1364,
        "CharPositionInLine" : 8
      },
      "83" : {
        "Text" : "# cache flags\n",
        "Line" : 1386,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# put flags to cache (for debug purpose only)\n",
        "Line" : 1397,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# finish flags\n",
        "Line" : 1403,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# pie/pic\n",
        "Line" : 1420,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "# configure rtti\n",
        "Line" : 1430,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "# configure exceptios\n",
        "Line" : 1439,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# global includes and link directories\n",
        "Line" : 1450,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "# avoid CMP0015 policy warning\n",
        "Line" : 1452,
        "CharPositionInLine" : 111
      },
      "91" : {
        "Text" : "# detect if need link crtbegin_so.o explicitly\n",
        "Line" : 1455,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "# setup output directories\n",
        "Line" : 1492,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "# copy shaed stl library to build directory\n",
        "Line" : 1509,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "# set these global flags for cmake client scripts to change behavior\n",
        "Line" : 1521,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "# where is the target environment\n",
        "Line" : 1525,
        "CharPositionInLine" : 0
      },
      "96" : {
        "Text" : "# only search for libraries and includes in the ndk toolchain\n",
        "Line" : 1528,
        "CharPositionInLine" : 0
      },
      "97" : {
        "Text" : "# macro to find packages on the host OS\n",
        "Line" : 1534,
        "CharPositionInLine" : 0
      },
      "98" : {
        "Text" : "# macro to find programs on the host OS\n",
        "Line" : 1556,
        "CharPositionInLine" : 0
      },
      "99" : {
        "Text" : "# export toolchain settings for the try_compile() command\n",
        "Line" : 1578,
        "CharPositionInLine" : 0
      },
      "100" : {
        "Text" : "# force cmake to produce / instead of \\ in build commands for Ninja generator\n",
        "Line" : 1615,
        "CharPositionInLine" : 0
      },
      "101" : {
        "Text" : "# it is a bad hack after all\n\n# CMake generates Ninja makefiles with UNIX paths only if it thinks that we are going to build with MinGW\n",
        "Line" : 1617,
        "CharPositionInLine" : 1
      },
      "102" : {
        "Text" : "# tell CMake that we are MinGW\n\n# stop recursion\n",
        "Line" : 1619,
        "CharPositionInLine" : 37
      },
      "103" : {
        "Text" : "# unset( CMAKE_COMPILER_IS_MINGW ) # can't unset because CMake does not convert back-slashes in response files without it\n",
        "Line" : 1623,
        "CharPositionInLine" : 1
      },
      "104" : {
        "Text" : "# Variables controlling behavior or set by cmake toolchain:\n\n#   ANDROID_ABI : \"armeabi-v7a\" (default), \"armeabi\", \"armeabi-v7a with NEON\", \"armeabi-v7a with VFPV3\", \"armeabi-v6 with VFP\", \"x86\", \"mips\", \"arm64-v8a\", \"x86_64\", \"mips64\"\n\n#   ANDROID_NATIVE_API_LEVEL : 3,4,5,8,9,14,15,16,17,18,19,21 (depends on NDK version)\n\n#   ANDROID_STL : gnustl_static/gnustl_shared/stlport_static/stlport_shared/gabi++_static/gabi++_shared/system_re/system/none\n\n#   ANDROID_FORBID_SYGWIN : ON/OFF\n\n#   ANDROID_NO_UNDEFINED : ON/OFF\n\n#   ANDROID_SO_UNDEFINED : OFF/ON  (default depends on NDK version)\n\n#   ANDROID_FUNCTION_LEVEL_LINKING : ON/OFF\n\n#   ANDROID_GOLD_LINKER : ON/OFF\n\n#   ANDROID_NOEXECSTACK : ON/OFF\n\n#   ANDROID_RELRO : ON/OFF\n\n#   ANDROID_FORCE_ARM_BUILD : ON/OFF\n\n#   ANDROID_STL_FORCE_FEATURES : ON/OFF\n\n#   ANDROID_LIBM_PATH : path to libm.so (set to something like $(TOP)/out/target/product/<product_name>/obj/lib/libm.so) to workaround unresolved `sincos`\n\n# Can be set only at the first run:\n\n#   ANDROID_NDK : path to your NDK install\n\n#   NDK_CCACHE : path to your ccache executable\n\n#   ANDROID_TOOLCHAIN_NAME : the NDK name of compiler toolchain\n\n#   ANDROID_NDK_HOST_X64 : try to use x86_64 toolchain (default for x64 host systems)\n\n#   ANDROID_NDK_LAYOUT : the inner NDK structure (RELEASE, LINARO, ANDROID)\n\n#   LIBRARY_OUTPUT_PATH_ROOT : <any valid path>\n\n#   ANDROID_STANDALONE_TOOLCHAIN\n\n#\n\n# Primary read-only variables:\n\n#   ANDROID : always TRUE\n\n#   ARMEABI : TRUE for arm v6 and older devices\n\n#   ARMEABI_V6 : TRUE for arm v6\n\n#   ARMEABI_V7A : TRUE for arm v7a\n\n#   ARM64_V8A : TRUE for arm64-v8a\n\n#   NEON : TRUE if NEON unit is enabled\n\n#   VFPV3 : TRUE if VFP version 3 is enabled\n\n#   X86 : TRUE if configured for x86\n\n#   X86_64 : TRUE if configured for x86_64\n\n#   MIPS : TRUE if configured for mips\n\n#   MIPS64 : TRUE if configured for mips64\n\n#   BUILD_WITH_ANDROID_NDK : TRUE if NDK is used\n\n#   BUILD_WITH_STANDALONE_TOOLCHAIN : TRUE if standalone toolchain is used\n\n#   ANDROID_NDK_HOST_SYSTEM_NAME : \"windows\", \"linux-x86\" or \"darwin-x86\" depending on host platform\n\n#   ANDROID_NDK_ABI_NAME : \"armeabi\", \"armeabi-v7a\", \"x86\", \"mips\", \"arm64-v8a\", \"x86_64\", \"mips64\" depending on ANDROID_ABI\n\n#   ANDROID_NDK_RELEASE : from r5 to r10d; set only for NDK\n\n#   ANDROID_NDK_RELEASE_NUM : numeric ANDROID_NDK_RELEASE version (1000*major+minor)\n\n#   ANDROID_ARCH_NAME : \"arm\", \"x86\", \"mips\", \"arm64\", \"x86_64\", \"mips64\" depending on ANDROID_ABI\n\n#   ANDROID_SYSROOT : path to the compiler sysroot\n\n#   TOOL_OS_SUFFIX : \"\" or \".exe\" depending on host platform\n\n#   ANDROID_COMPILER_IS_CLANG : TRUE if clang compiler is used\n\n#\n\n# Secondary (less stable) read-only variables:\n\n#   ANDROID_COMPILER_VERSION : GCC version used (not Clang version)\n\n#   ANDROID_CLANG_VERSION : version of clang compiler if clang is used\n\n#   ANDROID_CXX_FLAGS : C/C++ compiler flags required by Android platform\n\n#   ANDROID_SUPPORTED_ABIS : list of currently allowed values for ANDROID_ABI\n\n#   ANDROID_TOOLCHAIN_MACHINE_NAME : \"arm-linux-androideabi\", \"arm-eabi\" or \"i686-android-linux\"\n\n#   ANDROID_TOOLCHAIN_ROOT : path to the top level of toolchain (standalone or placed inside NDK)\n\n#   ANDROID_CLANG_TOOLCHAIN_ROOT : path to clang tools\n\n#   ANDROID_SUPPORTED_NATIVE_API_LEVELS : list of native API levels found inside NDK\n\n#   ANDROID_STL_INCLUDE_DIRS : stl include paths\n\n#   ANDROID_RTTI : if rtti is enabled by the runtime\n\n#   ANDROID_EXCEPTIONS : if exceptions are enabled by the runtime\n\n#   ANDROID_GCC_TOOLCHAIN_NAME : read-only, differs from ANDROID_TOOLCHAIN_NAME only if clang is used\n\n#\n\n# Defaults:\n\n#   ANDROID_DEFAULT_NDK_API_LEVEL\n\n#   ANDROID_DEFAULT_NDK_API_LEVEL_${ARCH}\n\n#   ANDROID_NDK_SEARCH_PATHS\n\n#   ANDROID_SUPPORTED_ABIS_${ARCH}\n\n#   ANDROID_SUPPORTED_NDK_VERSIONS\n",
        "Line" : 1628,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 105
    },
    "vendor/assimp/4.1.0/contrib/gtest/CMakeLists.txt" : {
      "ObjectId" : "621d0f0421543eba41e1d69f497814104bb9c6a7",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# CMake build script for Google Test.\n\n#\n\n# To run the tests for Google Test itself on Linux, use 'make test' or\n\n# ctest.  You can select which tests to run using 'ctest -R regex'.\n\n# For more options, run 'ctest --help'.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BUILD_SHARED_LIBS is a standard CMake variable, but we declare it here to\n\n# make it prominent in the GUI.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# When other libraries are using a shared version of runtime libraries,\n\n# Google Test also has to use one.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Defines pre_project_set_up_hermetic_build() and set_up_hermetic_build().\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "########################################################################\n\n#\n\n# Project-wide settings\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Name of the project.\n\n#\n\n# CMake files in this project can refer to the root source directory\n\n# as ${gtest_SOURCE_DIR} and to the root binary directory as\n\n# ${gtest_BINARY_DIR}.\n\n# Language \"C\" is required for find_package(Threads).\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define helper functions and macros used by Google Test.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Defined in internal_utils.cmake.\n",
        "Line" : 62,
        "CharPositionInLine" : 30
      },
      "8" : {
        "Text" : "# Where Google Test's .h files can be found.\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Where Google Test's libraries can be found.\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Summary of tuple support for Microsoft Visual Studio:\n\n# Compiler    version(MS)  version(cmake)  Support\n\n# ----------  -----------  --------------  -----------------------------\n\n# <= VS 2010  <= 10        <= 1600         Use Google Tests's own tuple.\n\n# VS 2012     11           1700            std::tr1::tuple + _VARIADIC_MAX=10\n\n# VS 2013     12           1800            std::tr1::tuple\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "########################################################################\n\n#\n\n# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Google Test libraries.  We build them using more strict warnings than what\n\n# are used for other targets, to ensure that gtest can be compiled by a user\n\n# aggressive about warnings.\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# If the CMake version supports it, attach header directory information\n\n# to the targets for when we are part of a parent build (ie being pulled\n\n# in via add_subdirectory() rather than being a standalone build).\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "########################################################################\n\n#\n\n# Install rules\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "########################################################################\n\n#\n\n# Samples on how to link user tests with gtest or gtest_main.\n\n#\n\n# They are not built by default.  To build them, set the\n\n# gtest_build_samples option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_samples=ON flag when running cmake.\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "########################################################################\n\n#\n\n# Google Test's own tests.\n\n#\n\n# You can skip this section if you aren't interested in testing\n\n# Google Test itself.\n\n#\n\n# The tests are not built by default.  To build them, set the\n\n# gtest_build_tests option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_tests=ON flag when running cmake.\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# This must be set in the root directory for the tests to be run by\n\n# 'make test' or ctest.\n",
        "Line" : 143,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "############################################################\n\n# C++ tests built with standard compiler flags.\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "############################################################\n\n# C++ tests built with non-standard compiler flags.\n",
        "Line" : 178,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 181,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# 1600 is Visual Studio 2010.\n",
        "Line" : 210,
        "CharPositionInLine" : 43
      },
      "22" : {
        "Text" : "# Visual Studio 2010, 2012, and 2013 define symbols in std::tr1 that\n\n# conflict with our own definitions. Therefore using our own tuple does not\n\n# work on those compilers.\n",
        "Line" : 211,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "############################################################\n\n# Python tests.\n",
        "Line" : 225,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Visual Studio .NET 2003 does not support STL with exceptions disabled.\n",
        "Line" : 231,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# 1310 is Visual Studio .NET 2003\n",
        "Line" : 232,
        "CharPositionInLine" : 46
      },
      "26" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 268,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 27
    },
    "vendor/assimp/4.1.0/contrib/gtest/Makefile.am" : {
      "ObjectId" : "29797e4e9de4e1d5e5f93bba14288de87f623946",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Automake file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Nonstandard package files for distribution\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# gtest source files that we don't compile directly.  They are\n\n# #included by gtest-all.cc.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Sample files that we don't compile.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# C++ test files that we don't compile directly.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Python tests that we don't run.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# CMake script\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# MSVC project files\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# xcode project files\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# xcode sample files\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# C++Builder project files\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Distribute and install M4 macro\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# We define the global AM_CPPFLAGS as everything we compile includes from these\n\n# directories.\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Modifies compiler and linker flags for pthreads compatibility.\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Build rules for libraries.\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Bulid rules for samples and tests. Automake's naming for some of\n\n# these variables isn't terribly obvious, so this is a brief\n\n# reference:\n\n#\n\n# TESTS -- Programs run automatically by \"make check\"\n\n# check_PROGRAMS -- Programs built by \"make check\" but not necessarily run\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# A simple sample on using gtest.\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Another sample.  It also verifies that libgtest works.\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# This tests most constructs of gtest and verifies that libgtest_main\n\n# and libgtest work.\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Tests that fused gtest files compile and work.\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Build rules for putting fused Google Test files into the distribution\n\n# package. The user can also create those files by manually running\n\n# scripts/fuse_gtest_files.py.\n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Death tests may produce core dumps in the build directory. In case\n\n# this happens, clean them to keep distcleancheck happy.\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Disables 'make install' as installing a compiled version of Google\n\n# Test can lead to undefined behavior due to violation of the\n\n# One-Definition Rule.\n",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "vendor/assimp/4.1.0/contrib/gtest/cmake/internal_utils.cmake" : {
      "ObjectId" : "777b91ed4b8caa226ea55cfa61fe7ec433ffb452",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Defines functions and macros useful for building Google Test and\n\n# Google Mock.\n\n#\n\n# Note:\n\n#\n\n# - This file will be run twice when building Google Mock (once via\n\n#   Google Test's CMakeLists.txt, and once via Google Mock's).\n\n#   Therefore it shouldn't have any side effects other than defining\n\n#   the functions and macros.\n\n#\n\n# - The functions/macros defined in this file may depend on Google\n\n#   Test and Google Mock's option() definitions, and thus must be\n\n#   called *after* the options have been defined.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Tweaks CMake's default compiler/linker settings to suit Google Test's needs.\n\n#\n\n# This must be a macro(), as inside a function string() can only\n\n# update variables in the function scope.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For MSVC, CMake sets certain flags to defaults we want to override.\n\n# This replacement code is taken from sample in the CMake Wiki at\n\n# http://www.cmake.org/Wiki/CMake_FAQ#Dynamic_Replace.\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# When Google Test is built as a shared library, it should also use\n\n# shared runtime libraries.  Otherwise, it may end up with multiple\n\n# copies of runtime library data in different modules, resulting in\n\n# hard-to-find crashes. When it is built as a static library, it is\n\n# preferable to use CRT as static libraries, as we don't have to rely\n\n# on CRT DLLs being available. CMake always defaults to using shared\n\n# CRT libraries, so we override that default here.\n",
        "Line" : 28,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# We prefer more strict warning checking for building Google Test.\n\n# Replaces /W3 with /W4 in defaults.\n",
        "Line" : 38,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Defines the compiler/linker flags used to build Google Test and\n\n# Google Mock.  You can tweak these definitions to suit your need.  A\n\n# variable's value is empty before it's explicitly assigned to.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Defines CMAKE_USE_PTHREADS_INIT and CMAKE_THREAD_LIBS_INIT.\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Newlines inside flags variables break CMake's NMake generator.\n\n# TODO(vladl@google.com): Add -RTCs and -RTCu to debug builds.\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# 1400 is Visual Studio 2005\n",
        "Line" : 59,
        "CharPositionInLine" : 33
      },
      "9" : {
        "Text" : "# Suppress spurious warnings MSVC 7.1 sometimes issues.\n\n# Forcing value to bool.\n",
        "Line" : 60,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# Copy constructor and assignment operator could not be generated.\n",
        "Line" : 63,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# Compatibility warnings not applicable to Google Test.\n\n# Resolved overload was found by argument-dependent lookup.\n",
        "Line" : 65,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# 1500 is Visual Studio 2008\n",
        "Line" : 69,
        "CharPositionInLine" : 33
      },
      "13" : {
        "Text" : "# Conditional expression is constant.\n\n# When compiling with /W4, we get several instances of C4127\n\n# (Conditional expression is constant). In our code, we disable that\n\n# warning on a case-by-case basis. However, on Visual Studio 2005,\n\n# the warning fires on std::list. Therefore on that compiler and earlier,\n\n# we disable the warning project-wide.\n",
        "Line" : 70,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# 1700 is Visual Studio 2012.\n",
        "Line" : 78,
        "CharPositionInLine" : 39
      },
      "15" : {
        "Text" : "# Suppress \"unreachable code\" warning on VS 2012 and later.\n\n# http://stackoverflow.com/questions/3232669 explains the issue.\n",
        "Line" : 79,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# 1900 is Visual Studio 2015\n",
        "Line" : 83,
        "CharPositionInLine" : 42
      },
      "17" : {
        "Text" : "# BigObj required for tests.\n",
        "Line" : 84,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "# Until version 4.3.2, GCC doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 97,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Sun Pro doesn't provide macros to indicate whether exceptions and\n\n# RTTI are enabled, so we define GTEST_HAS_* explicitly.\n",
        "Line" : 105,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# CMake 2.8 changes Visual Age's compiler ID to \"XL\".\n",
        "Line" : 111,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Until version 9.0, Visual Age doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 114,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# RTTI can not be disabled in HP aCC compiler.\n",
        "Line" : 122,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# The pthreads library is available and allowed.\n",
        "Line" : 126,
        "CharPositionInLine" : 32
      },
      "24" : {
        "Text" : "# For building gtest's own tests and samples.\n",
        "Line" : 132,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# For building the gtest libraries.\n",
        "Line" : 140,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# type can be either STATIC or SHARED to denote a static or shared library.\n\n# ARGN refers to additional arguments after 'cxx_flags'.\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "########################################################################\n\n#\n\n# Helper functions for creating build targets.\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# cxx_executable_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ executable that depends on the given libraries and\n\n# is built from the given source files with the given compiler flags.\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# To support mixing linking in static and dynamic libraries, link each\n\n# library in with an extra call to target_link_libraries.\n",
        "Line" : 191,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# cxx_executable(name dir lib srcs...)\n\n#\n\n# creates a named target that depends on the given libs and is built\n\n# from the given source files.  dir/name.cc is implicitly included in\n\n# the source file list.\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Sets PYTHONINTERP_FOUND and PYTHON_EXECUTABLE.\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# cxx_test_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ test that depends on the given libs and is built\n\n# from the given source files with the given compiler flags.\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# cxx_test(name libs srcs...)\n\n#\n\n# creates a named test target that depends on the given libs and is\n\n# built from the given source files.  Unlike cxx_test_with_flags,\n\n# test/name.cc is already implicitly included in the source file list.\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# py_test(name)\n\n#\n\n# creates a Python test with the given name whose main module is in\n\n# test/name.py.  It does nothing if Python is not installed.\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# We are not supporting Python tests on Linux yet as they consider\n\n# all Linux environments to be google3 and try to use google3 features.\n",
        "Line" : 235,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# ${CMAKE_BINARY_DIR} is known at configuration time, so we can\n\n# directly bind it from cmake. ${CTEST_CONFIGURATION_TYPE} is known\n\n# only at ctest runtime (by calling ctest -c <Configuration>), so\n\n# we have to escape $ to delay variable substitution here.\n",
        "Line" : 238,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 38
    },
    "vendor/assimp/4.1.0/contrib/gtest/make/Makefile" : {
      "ObjectId" : "9ac74493ba55246597e90b898fae847ae358eab5",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# A sample Makefile for building Google Test and using it in user\n\n# tests.  Please tweak it to suit your environment and project.  You\n\n# may want to move it to your project's root directory.\n\n#\n\n# SYNOPSIS:\n\n#\n\n#   make [all]  - makes everything.\n\n#   make TARGET - makes the given target.\n\n#   make clean  - removes all files generated by make.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Please tweak the following variable definitions as needed by your\n\n# project, except GTEST_HEADERS, which you can use in your own targets\n\n# but shouldn't modify.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Points to the root of Google Test, relative to where this file is.\n\n# Remember to tweak this if you move this file.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Where to find user code.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Flags passed to the preprocessor.\n\n# Set Google Test's header directory as a system directory, such that\n\n# the compiler doesn't generate warnings in Google Test headers.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Flags passed to the C++ compiler.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# All tests produced by this Makefile.  Remember to add new tests you\n\n# created to the list.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# All Google Test headers.  Usually you shouldn't change this\n\n# definition.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# House-keeping build targets.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Builds gtest.a and gtest_main.a.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Usually you shouldn't tweak such internal variables, indicated by a\n\n# trailing _.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# For simplicity and to avoid depending on Google Test's\n\n# implementation details, the dependencies specified below are\n\n# conservative and not optimized.  This is fine as Google Test\n\n# compiles fast and for ordinary users its source rarely changes.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Builds a sample test.  A test should link with either gtest.a or\n\n# gtest_main.a, depending on whether it defines its own main()\n\n# function.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "vendor/assimp/4.1.0/contrib/gtest/scripts/test/Makefile" : {
      "ObjectId" : "cdff584637b7a6e9df1fa43ce8f588c43815e561",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# A Makefile for fusing Google Test and building a sample test against it.\n\n#\n\n# SYNOPSIS:\n\n#\n\n#   make [all]  - makes everything.\n\n#   make TARGET - makes the given target.\n\n#   make check  - makes everything and runs the built sample test.\n\n#   make clean  - removes all files generated by make.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Points to the root of fused Google Test, relative to where this file is.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Paths to the fused gtest files.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Where to find the sample test.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Where to find gtest_main.cc.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Flags passed to the preprocessor.\n\n# We have no idea here whether pthreads is available in the system, so\n\n# disable its use.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Flags passed to the C++ compiler.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "vendor/assimp/4.1.0/contrib/irrXML/CMakeLists.txt" : {
      "ObjectId" : "48941970a1284d0c4ae6a4e48c57f0bc837ffc51",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/assimp/4.1.0/contrib/openddlparser/CMakeLists.txt" : {
      "ObjectId" : "9e903ca3f10162607e15180ff9067b3113bba44c",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Force to always compile with W4\n",
        "Line" : 58,
        "CharPositionInLine" : 53
      },
      "1" : {
        "Text" : "# Update if necessary\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Include the doc component.\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Create the coveralls target.\n",
        "Line" : 159,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# The source files.\n\n# If we should upload.\n",
        "Line" : 161,
        "CharPositionInLine" : 27
      },
      "5" : {
        "Text" : "# (Optional) Alternate project cmake module path.\n",
        "Line" : 163,
        "CharPositionInLine" : 40
      },
      "CommentCount" : 6
    },
    "vendor/assimp/4.1.0/contrib/zip/CMakeLists.txt" : {
      "ObjectId" : "450ef3a987c5c06a25baf77034e7ce2ad2b1905a",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use secure functions by defaualt and suppress warnings about \"deprecated\" functions\n",
        "Line" : 5,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# zip\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# test\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "vendor/assimp/4.1.0/contrib/zip/test/CMakeLists.txt" : {
      "ObjectId" : "7734dcbe757f019c8e41d8fb43a20da55e2cf3ea",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# test\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "vendor/assimp/4.1.0/contrib/zlib/CMakeLists.txt" : {
      "ObjectId" : "5f1368adb96501e00888f85c6ec04fe4853e4da0",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake 3.0 changed the project command, setting policy CMP0048 reverts to the old behaviour.\n\n# See http://www.cmake.org/cmake/help/v3.0/policy/CMP0048.html\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(INSTALL_BIN_DIR \"${CMAKE_INSTALL_PREFIX}/bin\" CACHE PATH \"Installation directory for executables\")\n\n#set(INSTALL_LIB_DIR \"${CMAKE_INSTALL_PREFIX}/lib\" CACHE PATH \"Installation directory for libraries\")\n\n#set(INSTALL_INC_DIR \"${CMAKE_INSTALL_PREFIX}/include\" CACHE PATH \"Installation directory for headers\")\n\n#set(INSTALL_MAN_DIR \"${CMAKE_INSTALL_PREFIX}/share/man\" CACHE PATH \"Installation directory for manual pages\")\n\n#set(INSTALL_PKGCONFIG_DIR \"${CMAKE_INSTALL_PREFIX}/share/pkgconfig\" CACHE PATH \"Installation directory for pkgconfig (.pc) files\")\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Check to see if we have large file support\n\n#\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# We add these other definitions here because CheckTypeSize.cmake\n\n# in CMake 2.4.x does not automatically do so and we want\n\n# compatibility with CMake 2.4.x.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# clear variable\n",
        "Line" : 54,
        "CharPositionInLine" : 32
      },
      "5" : {
        "Text" : "#\n\n# Check for fseeko\n\n#\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# Check for unistd.h\n\n#\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# If we're doing an out of source build and the user has a zconf.h\n\n# in their source tree...\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#============================================================================\n\n# zlib\n\n#============================================================================\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# If present will override custom build rule below.\n",
        "Line" : 135,
        "CharPositionInLine" : 23
      },
      "10" : {
        "Text" : "# parse the full version number from zlib.h and include in ZLIB_FULL_VERSION\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# This gets us DLL resource information when compiling on MinGW.\n",
        "Line" : 178,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 12
    },
    "vendor/assimp/4.1.0/doc/CMakeLists.txt" : {
      "ObjectId" : "f7ce7b7269a0f17bdf84d5f5ae11ced3e904a099",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enable Microsoft CHM help style only on Windows\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "vendor/assimp/4.1.0/tools/assimp_cmd/CMakeLists.txt" : {
      "ObjectId" : "cb78942d736c2e68734777c55c453f470c56a0e3",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Open Asset Import Library (assimp)\n\n# ----------------------------------------------------------------------\n\n# \n\n# Copyright (c) 2006-2017, assimp team\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# All rights reserved.\n\n#\n\n# Redistribution and use of this software in source and binary forms,\n\n# with or without modification, are permitted provided that the\n\n# following conditions are met:\n\n#\n\n# * Redistributions of source code must retain the above\n\n#   copyright notice, this list of conditions and the\n\n#   following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above\n\n#   copyright notice, this list of conditions and the\n\n#   following disclaimer in the documentation and/or other\n\n#   materials provided with the distribution.\n\n#\n\n# * Neither the name of the assimp team, nor the names of its\n\n#   contributors may be used to endorse or promote products\n\n#   derived from this software without specific prior\n\n#   written permission of the assimp team.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n#----------------------------------------------------------------------\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "vendor/assimp/4.1.0/tools/assimp_qt_viewer/CMakeLists.txt" : {
      "ObjectId" : "42ef0fb348f33489037a95ee3be8c21ecc3e9e3e",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check if we are on Windows\n\n# Check if we are using the Visual Studio compiler\n",
        "Line" : 31,
        "CharPositionInLine" : 10
      },
      "1" : {
        "Text" : "#set_target_properties(TestProject PROPERTIES LINK_FLAGS_RELEASE \"/SUBSYSTEM:WINDOWS\")\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# SET(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -mwindows\") # Not tested\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Nothing special required\n",
        "Line" : 40,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 4
    },
    "vendor/assimp/4.1.0/tools/assimp_view/CMakeLists.txt" : {
      "ObjectId" : "adf2ae877e618a27b2c09304a63f3b8b24b4d6fc",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Open Asset Import Library (assimp)\n\n# ----------------------------------------------------------------------\n\n# \n\n# Copyright (c) 2006-2017, assimp team\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# All rights reserved.\n\n#\n\n# Redistribution and use of this software in source and binary forms,\n\n# with or without modification, are permitted provided that the\n\n# following conditions are met:\n\n#\n\n# * Redistributions of source code must retain the above\n\n#   copyright notice, this list of conditions and the\n\n#   following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above\n\n#   copyright notice, this list of conditions and the\n\n#   following disclaimer in the documentation and/or other\n\n#   materials provided with the distribution.\n\n#\n\n# * Neither the name of the assimp team, nor the names of its\n\n#   contributors may be used to endorse or promote products\n\n#   derived from this software without specific prior\n\n#   written permission of the assimp team.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n#----------------------------------------------------------------------\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Make sure the linker can find the Assimp library once it is built.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Link the executable to the assimp + dx libs.\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "vendor/bullet/2.83.7/BulletCollision/CMakeLists.txt" : {
      "ObjectId" : "90741a126d5b2fa16b5dae4f2a32e2095ac95331",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#INSTALL of other files requires CMake 2.6\n",
        "Line" : 260,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Have to list out sub-directories manually:\n",
        "Line" : 279,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 2
    },
    "vendor/bullet/2.83.7/BulletDynamics/CMakeLists.txt" : {
      "ObjectId" : "b8c37b0d207f4987d3cb99aac03567aa0d98dea2",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\tDynamics/Bullet-C-API.cpp\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Have to list out sub-directories manually:\n",
        "Line" : 151,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 2
    },
    "vendor/bullet/2.83.7/LinearMath/CMakeLists.txt" : {
      "ObjectId" : "3846fb71df6f0fc24187a4036712ac228ec36543",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#FILES_MATCHING requires CMake 2.6\n",
        "Line" : 52,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "vendor/glm/0.9.8.4/glm/CMakeLists.txt" : {
      "ObjectId" : "67f114666d464990612d20508a53a42eec3e7726",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/shaderc/CMakeLists.txt" : {
      "ObjectId" : "b9bd0df1edce9178b85db8fa37b6620385e0ada5",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Link executables statically by replacing /MD with /MT everywhere.\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Configure subdirectories.\n\n# We depend on these for later projects, so they should come first.\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "vendor/shaderc/cmake/linux-mingw-toolchain.cmake" : {
      "ObjectId" : "400b9a0b2d6b42962756edd0a0a645e2e50e207b",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Which compilers to use for C and C++\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Adjust the default behaviour of the FIND_XXX() commands:\n\n# Search headers and libraries in the target environment; search\n\n# programs in the host environment.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "vendor/shaderc/cmake/setup_build.cmake" : {
      "ObjectId" : "9d15428477a2c5af85a0cb1b4e7f51a7aa9963f7",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find nosetests; see shaderc_add_nosetests() from utils.cmake for opting in to\n\n# nosetests in a specific directory.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find asciidoctor; see shaderc_add_asciidoc() from utils.cmake for\n\n# adding documents.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# On Windows, CMake by default compiles with the shared CRT.\n\n# Ensure that gmock compiles the same, otherwise failures will occur.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# TODO(awoloszyn): Once we support selecting CRT versions,\n\n# make sure this matches correctly.\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# For android let's preemptively find the correct packages so that\n\n# child projects (glslang, googletest) do not fail to find them.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Remove all gcov .gcda files in the directory recursively.\n",
        "Line" : 75,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Remove all lcov .info files.\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Remove all html report files.\n",
        "Line" : 79,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# TODO(antiagainst): the following two commands are here to remedy the\n\n# problem of \"reached unexpected end of file\" experienced by lcov.\n\n# The symptom is that some .gcno files are wrong after code change and\n\n# recompiling. We don't know the exact reason yet. Figure it out.\n\n# Remove all .gcno files in the directory recursively.\n",
        "Line" : 81,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# .gcno files are not tracked by CMake. So no recompiling is triggered\n\n# even if they are missing. Unfortunately, we just removed all of them\n\n# in the above.\n",
        "Line" : 88,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Run all tests.\n",
        "Line" : 98,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Collect coverage data from gcov .gcda files.\n",
        "Line" : 100,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Remove coverage info for system header files.\n",
        "Line" : 102,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Remove coverage info for external and third_party code.\n",
        "Line" : 105,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Remove coverage info for tests.\n",
        "Line" : 113,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Generate html report file.\n",
        "Line" : 116,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 16
    },
    "vendor/shaderc/cmake/utils.cmake" : {
      "ObjectId" : "ed3c73336056b28e0e94bd5d241abc3e3d6a300a",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# utility functions\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The --coverage option is a synonym for -fprofile-arcs -ftest-coverage\n\n# when compiling.\n",
        "Line" : 17,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "# The --coverage option is a synonym for -lgcov when linking for gcc.\n\n# For clang, it links in a different library, libclang_rt.profile, which\n\n# requires clang to be built with compiler-rt.\n",
        "Line" : 20,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# For MinGW cross compile, statically link to the libgcc runtime.\n\n# But it still depends on MSVCRT.dll.\n",
        "Line" : 27,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# disable warning C4800: 'int' : forcing value to bool 'true' or 'false'\n\n# (performance warning)\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# For MinGW cross compile, statically link to the C++ runtime.\n\n# But it still depends on MSVCRT.dll.\n",
        "Line" : 46,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Build an asciidoc file; additional arguments past the base filename specify\n\n# additional dependencies for the file.\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Create the target, but the default build target does not depend on it.\n\n# Some Asciidoctor installations are mysteriously broken, and it's hard\n\n# to detect those cases.  Generating HTML is not critical by default.\n",
        "Line" : 65,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Run nosetests on file ${PREFIX}_nosetest.py. Nosetests will look for classes\n\n# and functions whose names start with \"nosetest\". The test name will be\n\n# ${PREFIX}_nosetests.\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Adds a set of tests.\n\n# This function accepts the following parameters:\n\n# TEST_PREFIX:  a prefix for each test target name\n\n# TEST_NAMES:   a list of test names where each TEST_NAME has a corresponding\n\n#               file residing at src/${TEST_NAME}_test.cc\n\n# LINK_LIBS:    (optional) a list of libraries to be linked to the test target\n\n# INCLUDE_DIRS: (optional) a list of include directories to be searched\n\n#               for header files.\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Disable this warning, which is useless in test code.\n\n# Fixes https://github.com/google/shaderc/issues/334\n",
        "Line" : 113,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# Finds all transitive static library dependencies of a given target\n\n# including possibly the target itself.\n\n# This will skip libraries that were statically linked that were not\n\n# built by CMake, for example -lpthread.\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# If this target is a static library, get anything it depends on.\n",
        "Line" : 140,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# If we know the location (i.e. if it was made with CMake) then we\n\n# can add it to our list.\n",
        "Line" : 151,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Combines the static library \"target\" with all of its transitive static\n\n# library dependencies into a single static library \"new_target\".\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# CMake needs to be able to see this as another normal library,\n\n# so import the newly created library as an imported library,\n\n# and set up the dependencies on the custom target.\n",
        "Line" : 206,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 16
    },
    "vendor/shaderc/examples/CMakeLists.txt" : {
      "ObjectId" : "176c40b4c471c87f4e24aba3621f665572672a23",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/shaderc/examples/online-compile/CMakeLists.txt" : {
      "ObjectId" : "e4541e0c0e3ce696fdf03c6b4317fc2b92fb1a5f",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/shaderc/glslc/CMakeLists.txt" : {
      "ObjectId" : "acf6fb0b262735c2edb287610c9e9ae91b7fe5e7",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/shaderc/glslc/test/CMakeLists.txt" : {
      "ObjectId" : "cca9314749e218670dcfaad87a19eabf28267c01",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/shaderc/libshaderc/CMakeLists.txt" : {
      "ObjectId" : "2a5372d19324ed22f49472102225fdfffcf038d6",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Even though shaderc.hpp is a headers-only library, adding\n\n# a dependency here will force clients of the library to rebuild\n\n# when it changes.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# from glslang\n",
        "Line" : 42,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# Since shaderc_combined is defined as an imported library, we cannot use the\n\n# install() directive to install it. Install it like a normal file.\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# With Visual Studio generators, the LOCATION property is not properly\n\n# expanded according to the current build configuration. We need to work\n\n# around this problem by manually substitution.\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "vendor/shaderc/libshaderc_util/CMakeLists.txt" : {
      "ObjectId" : "873540ab7d87148aed809159e53c3b6b06dd158f",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This target copies content of testdata into the build directory.\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "vendor/shaderc/libshaderc_util/testdata/copy-to-build.cmake" : {
      "ObjectId" : "bf50a72fcd6978c6a009b7c69b1dfbc31b13307a",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/shaderc/third_party/CMakeLists.txt" : {
      "ObjectId" : "d00b14ad679e11ef457636b5a9f6cd46822a756b",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Suppress all warnings from third-party projects.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configure third party projects.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check SPIRV-Tools before glslang since it is a dependency of glslang.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Also skip building tests in SPIRV-Tools.\n",
        "Line" : 38,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# This is unfortunate but glslang forces our\n\n# platform toolset to be v110, which we may not even have\n\n# installed, undo anything glslang has done to it.\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Configure out-of-source-directory tests for glslang.\n\n# The glslang project uses a bash script called \"runtests\" to run tests.\n\n# The runtests script assumes the glslangValidator executable exists in\n\n# a location inside the source tree, but we build it elsewhere.\n\n# We need to copy the test files, fix the path references, and then run tests.\n\n# Use test directory named \"Test\" to match Glslangs Test directory, so\n\n# that we get the right relative path names in the \"include\" test output.\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# If we are building in a multi-configuration setting we have\n\n# to put the glslang tests into their respective subdirectories.\n",
        "Line" : 73,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# If we are running a multi-configuration project,\n\n# the tests will be in ${Configuration}/Test\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "vendor/shaderc/third_party/glslang/CMakeLists.txt" : {
      "ObjectId" : "0d453cc6efd64fe998969c1bf74486c68ff46b82",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# increase to 3.1 once all major distributions\n\n# include a version of CMake >= 3.1\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Adhere to GNU filesystem layout conventions\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# make testing optional\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# disable this from -Wall, since it happens all over.\n",
        "Line" : 61,
        "CharPositionInLine" : 39
      },
      "4" : {
        "Text" : "# disable this from -Wall, since it happens all over.\n",
        "Line" : 65,
        "CharPositionInLine" : 39
      },
      "5" : {
        "Text" : "# Request C++11\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# CMake versions before 3.1 do not understand CMAKE_CXX_STANDARD\n\n# remove this block once CMake >=3.1 has fixated in the ecosystem\n",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# For MinGW compiles, statically link against the GCC and C++ runtimes.\n\n# This avoids the need to ship those runtimes as DLLs.\n",
        "Line" : 80,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# We depend on these for later projects, so they should come first.\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "vendor/shaderc/third_party/glslang/ChooseMSVCCRT.cmake" : {
      "ObjectId" : "209788174ff9cd9a45dc8a15483f21d6091e3e38",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The macro choose_msvc_crt() takes a list of possible\n\n# C runtimes to choose from, in the form of compiler flags,\n\n# to present to the user. (MTd for /MTd, etc)\n\n#\n\n# The macro is invoked at the end of the file.\n\n#\n\n# CMake already sets CRT flags in the CMAKE_CXX_FLAGS_* and\n\n# CMAKE_C_FLAGS_* variables by default. To let the user\n\n# override that for each build type:\n\n# 1. Detect which CRT is already selected, and reflect this in\n\n# LLVM_USE_CRT_* so the user can have a better idea of what\n\n# changes they're making.\n\n# 2. Replace the flags in both variables with the new flag via a regex.\n\n# 3. set() the variables back into the cache so the changes\n\n# are user-visible.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### Helper macros: ###\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Trying to match the beginning or end of the string with stuff\n\n# like [ ^]+ didn't work, so use a bunch of parentheses instead.\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Find the selected-by-CMake CRT for each build type, if any.\n\n# Strip off the leading slash and any whitespace.\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Replaces or adds a flag to a variable.\n\n# Expects 'flag' to be padded with spaces.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Make sure this change gets reflected in the cache/gui.\n\n# CMake requires the docstring parameter whenever set() touches the cache,\n\n# so get the existing docstring and re-use that.\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# List of valid CRTs for MSVC\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "vendor/shaderc/third_party/glslang/External/CMakeLists.txt" : {
      "ObjectId" : "4d9690134ae916c52e837c65ff7815e0d86c1828",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Suppress all warnings from external projects.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We need to make sure Google Test does not mess up with the\n\n# global CRT settings on Windows.\n",
        "Line" : 8,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "vendor/shaderc/third_party/glslang/OGLCompilersDLL/CMakeLists.txt" : {
      "ObjectId" : "5bb3f0ee69690a44e0b7b2b31cd5638a1a49a1c8",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/shaderc/third_party/glslang/SPIRV/CMakeLists.txt" : {
      "ObjectId" : "b1c02777961b5615d0dae2e943c3610c9c347791",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/shaderc/third_party/glslang/StandAlone/CMakeLists.txt" : {
      "ObjectId" : "b0d863d358a82f5e83ca923a8de6555a43d4d608",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/shaderc/third_party/glslang/glslang/CMakeLists.txt" : {
      "ObjectId" : "ac3973373aede35fca3a3efc32ef5ca9316c0de3",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This might be useful for making grammar changes:\n\n#\n\n# find_package(BISON)\n\n# add_custom_command(OUTPUT ${CMAKE_CURRENT_SOURCE_DIR}/MachineIndependent/glslang_tab.cpp ${CMAKE_CURRENT_SOURCE_DIR}/MachineIndependent/glslang_tab.cpp.h\n\n#                    COMMAND ${BISON_EXECUTABLE} --defines=${CMAKE_CURRENT_SOURCE_DIR}/MachineIndependent/glslang_tab.cpp.h -t ${CMAKE_CURRENT_SOURCE_DIR}/MachineIndependent/glslang.y -o ${CMAKE_CURRENT_SOURCE_DIR}/MachineIndependent/glslang_tab.cpp\n\n#                    MAIN_DEPENDENCY MachineIndependent/glslang.y\n\n#                    WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})\n\n# set(BISON_GLSLParser_OUTPUT_SOURCE ${CMAKE_CURRENT_SOURCE_DIR}/MachineIndependent/glslang_tab.cpp)\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "vendor/shaderc/third_party/glslang/glslang/OSDependent/Unix/CMakeLists.txt" : {
      "ObjectId" : "1bf49e1256ddbf05cb229526cbc9e903ee36be67",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/shaderc/third_party/glslang/glslang/OSDependent/Windows/CMakeLists.txt" : {
      "ObjectId" : "f257418abbee006a1f82c772f3fb8c202011b35e",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# MinGW GCC complains about function pointer casts to void*.\n\n# Turn that off with -fpermissive.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "vendor/shaderc/third_party/glslang/gtests/CMakeLists.txt" : {
      "ObjectId" : "15b73f4bde9edfa4289ec816e33e7dd8fb58c324",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Framework related source files\n",
        "Line" : 6,
        "CharPositionInLine" : 12
      },
      "1" : {
        "Text" : "# Test related source files\n",
        "Line" : 14,
        "CharPositionInLine" : 12
      },
      "2" : {
        "Text" : "# -- Remapper tests\n",
        "Line" : 25,
        "CharPositionInLine" : 12
      },
      "3" : {
        "Text" : "# Supply a default test root directory, so that manual testing\n\n# doesn't have to specify the --test-root option in the normal\n\n# case that you want to use the tests from the same source tree.\n",
        "Line" : 37,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 4
    },
    "vendor/shaderc/third_party/glslang/hlsl/CMakeLists.txt" : {
      "ObjectId" : "98dfad7c9637025ade6ad0bf868dc339eb078ae6",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/shaderc/third_party/googletest/CMakeLists.txt" : {
      "ObjectId" : "f8a97faaeb8a843e76b3664d73fa0f5d91345143",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Note that googlemock target already builds googletest\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "vendor/shaderc/third_party/googletest/googlemock/CMakeLists.txt" : {
      "ObjectId" : "ead51bf38c877756bde2368c5e9d7f26668bc76d",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# CMake build script for Google Mock.\n\n#\n\n# To run the tests for Google Mock itself on Linux, use 'make test' or\n\n# ctest.  You can select which tests to run using 'ctest -R regex'.\n\n# For more options, run 'ctest --help'.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BUILD_SHARED_LIBS is a standard CMake variable, but we declare it here to\n\n# make it prominent in the GUI.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# A directory to find Google Test sources.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Defines pre_project_set_up_hermetic_build() and set_up_hermetic_build().\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Google Test also calls hermetic setup functions from add_subdirectory,\n\n# although its changes will not affect things at the current scope.\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "########################################################################\n\n#\n\n# Project-wide settings\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Name of the project.\n\n#\n\n# CMake files in this project can refer to the root source directory\n\n# as ${gmock_SOURCE_DIR} and to the root binary directory as\n\n# ${gmock_BINARY_DIR}.\n\n# Language \"C\" is required for find_package(Threads).\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Instructs CMake to process Google Test's CMakeLists.txt and add its\n\n# targets to the current scope.  We are placing Google Test's binary\n\n# directory in a subdirectory of our own as VC compilation may break\n\n# if they are the same (the default).\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Although Google Test's CMakeLists.txt calls this function, the\n\n# changes there don't affect the current scope.  Therefore we have to\n\n# call it again here.\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# from ${gtest_dir}/cmake/internal_utils.cmake\n",
        "Line" : 61,
        "CharPositionInLine" : 30
      },
      "10" : {
        "Text" : "# Adds Google Mock's and Google Test's header directories to the search path.\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# This directory is needed to build directly from Google\n\n# Test sources.\n",
        "Line" : 67,
        "CharPositionInLine" : 20
      },
      "12" : {
        "Text" : "# Summary of tuple support for Microsoft Visual Studio:\n\n# Compiler    version(MS)  version(cmake)  Support\n\n# ----------  -----------  --------------  -----------------------------\n\n# <= VS 2010  <= 10        <= 1600         Use Google Tests's own tuple.\n\n# VS 2012     11           1700            std::tr1::tuple + _VARIADIC_MAX=10\n\n# VS 2013     12           1800            std::tr1::tuple\n\n# VS 2015     14           1900            std::tuple\n\n# VS 2017     15           >= 1910         std::tuple\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "########################################################################\n\n#\n\n# Defines the gmock & gmock_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Google Mock libraries.  We build them using more strict warnings than what\n\n# are used for other targets, to ensure that Google Mock can be compiled by\n\n# a user aggressive about warnings.\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# If the CMake version supports it, attach header directory information\n\n# to the targets for when we are part of a parent build (ie being pulled\n\n# in via add_subdirectory() rather than being a standalone build).\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "########################################################################\n\n#\n\n# Install rules\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# configure and install pkgconfig files\n",
        "Line" : 121,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "########################################################################\n\n#\n\n# Google Mock's own tests.\n\n#\n\n# You can skip this section if you aren't interested in testing\n\n# Google Mock itself.\n\n#\n\n# The tests are not built by default.  To build them, set the\n\n# gmock_build_tests option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgmock_build_tests=ON flag when running cmake.\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# This must be set in the root directory for the tests to be run by\n\n# 'make test' or ctest.\n",
        "Line" : 146,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "############################################################\n\n# C++ tests built with standard compiler flags.\n",
        "Line" : 150,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# gmock_all_test is commented to save time building and running tests.\n\n# Uncomment if necessary.\n\n# cxx_test(gmock_all_test gmock_main)\n",
        "Line" : 173,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "############################################################\n\n# C++ tests built with non-standard compiler flags.\n",
        "Line" : 177,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# 1600 is Visual Studio 2010.\n",
        "Line" : 186,
        "CharPositionInLine" : 43
      },
      "24" : {
        "Text" : "# Visual Studio 2010, 2012, and 2013 define symbols in std::tr1 that\n\n# conflict with our own definitions. Therefore using our own tuple does not\n\n# work on those compilers.\n",
        "Line" : 187,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# Tests that a binary can be built with Google Mock as a shared library.  On\n\n# some system configurations, it may not possible to run the binary without\n\n# knowing more details about the system configurations. We do not try to run\n\n# this binary. To get a more robust shared library coverage, configure with\n\n# -DBUILD_SHARED_LIBS=ON.\n",
        "Line" : 206,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "############################################################\n\n# Python tests.\n",
        "Line" : 217,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 27
    },
    "vendor/shaderc/third_party/googletest/googlemock/Makefile.am" : {
      "ObjectId" : "9adbc5163dd7191a14a887a384fb5d6d2956b44d",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Automake file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Nonstandard package files for distribution.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We may need to build our internally packaged gtest. If so, it will be\n\n# included in the 'subdirs' variable.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This is generated by the configure script, so clean it for distribution.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# We define the global AM_CPPFLAGS as everything we compile includes from these\n\n# directories.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Modifies compiler and linker flags for pthreads compatibility.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build rules for libraries.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Build rules for tests. Automake's naming for some of these variables isn't\n\n# terribly obvious, so this is a brief reference:\n\n#\n\n# TESTS -- Programs run automatically by \"make check\"\n\n# check_PROGRAMS -- Programs built by \"make check\" but not necessarily run\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# This exercises all major components of Google Mock.  It also\n\n# verifies that libgmock works.\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# This tests using Google Mock in multiple translation units.  It also\n\n# verifies that libgmock_main and libgmock work.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Tests that fused gmock files compile and work.\n",
        "Line" : 81,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Google Mock source files that we don't compile directly.\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# C++ tests that we don't compile using autotools.\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Python tests, which we don't run using autotools.\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Nonstandard package files for distribution.\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Pump scripts for generating Google Mock headers.\n\n# TODO(chandlerc@google.com): automate the generation of *.h from *.h.pump.\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Script for fusing Google Mock and Google Test source files.\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# The Google Mock Generator tool from the cppclean project.\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Script for diagnosing compiler errors in programs that use Google\n\n# Mock.\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# CMake scripts.\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Microsoft Visual Studio 2005 projects.\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Microsoft Visual Studio 2010 projects.\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# gmock_test.cc does not really depend on files generated by the\n\n# fused-gmock-internal rule.  However, gmock_test.o does, and it is\n\n# important to include test/gmock_test.cc as part of this rule in order to\n\n# prevent compiling gmock_test.o until all dependent files have been\n\n# generated.\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# TODO(vladl@google.com): Find a way to add Google Tests's sources here.\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Death tests may produce core dumps in the build directory. In case\n\n# this happens, clean them to keep distcleancheck happy.\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Disables 'make install' as installing a compiled version of Google\n\n# Mock can lead to undefined behavior due to violation of the\n\n# One-Definition Rule.\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 26
    },
    "vendor/shaderc/third_party/googletest/googlemock/make/Makefile" : {
      "ObjectId" : "7c13e05fa961dd3a37ee05def12de08ce0e86a88",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# A sample Makefile for building both Google Mock and Google Test and\n\n# using them in user tests.  This file is self-contained, so you don't\n\n# need to use the Makefile in Google Test's source tree.  Please tweak\n\n# it to suit your environment and project.  You may want to move it to\n\n# your project's root directory.\n\n#\n\n# SYNOPSIS:\n\n#\n\n#   make [all]  - makes everything.\n\n#   make TARGET - makes the given target.\n\n#   make clean  - removes all files generated by make.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Please tweak the following variable definitions as needed by your\n\n# project, except GMOCK_HEADERS and GTEST_HEADERS, which you can use\n\n# in your own targets but shouldn't modify.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Points to the root of Google Test, relative to where this file is.\n\n# Remember to tweak this if you move this file, or if you want to use\n\n# a copy of Google Test at a different location.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Points to the root of Google Mock, relative to where this file is.\n\n# Remember to tweak this if you move this file.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Where to find user code.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Flags passed to the preprocessor.\n\n# Set Google Test and Google Mock's header directories as system\n\n# directories, such that the compiler doesn't generate warnings in\n\n# these headers.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Flags passed to the C++ compiler.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# All tests produced by this Makefile.  Remember to add new tests you\n\n# created to the list.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# All Google Test headers.  Usually you shouldn't change this\n\n# definition.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# All Google Mock headers. Note that all Google Test headers are\n\n# included here too, as they are #included by Google Mock headers.\n\n# Usually you shouldn't change this definition.\t\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# House-keeping build targets.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Builds gmock.a and gmock_main.a.  These libraries contain both\n\n# Google Mock and Google Test.  A test should link with either gmock.a\n\n# or gmock_main.a, depending on whether it defines its own main()\n\n# function.  It's fine if your test only uses features from Google\n\n# Test (and not Google Mock).\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Usually you shouldn't tweak such internal variables, indicated by a\n\n# trailing _.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# For simplicity and to avoid depending on implementation details of\n\n# Google Mock and Google Test, the dependencies specified below are\n\n# conservative and not optimized.  This is fine as Google Mock and\n\n# Google Test compile fast and for ordinary users their source rarely\n\n# changes.\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Builds a sample test.\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "vendor/shaderc/third_party/googletest/googletest/CMakeLists.txt" : {
      "ObjectId" : "3b907fd757c38dcbb95347c10a1a416d57685799",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# CMake build script for Google Test.\n\n#\n\n# To run the tests for Google Test itself on Linux, use 'make test' or\n\n# ctest.  You can select which tests to run using 'ctest -R regex'.\n\n# For more options, run 'ctest --help'.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BUILD_SHARED_LIBS is a standard CMake variable, but we declare it here to\n\n# make it prominent in the GUI.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# When other libraries are using a shared version of runtime libraries,\n\n# Google Test also has to use one.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Defines pre_project_set_up_hermetic_build() and set_up_hermetic_build().\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "########################################################################\n\n#\n\n# Project-wide settings\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Name of the project.\n\n#\n\n# CMake files in this project can refer to the root source directory\n\n# as ${gtest_SOURCE_DIR} and to the root binary directory as\n\n# ${gtest_BINARY_DIR}.\n\n# Language \"C\" is required for find_package(Threads).\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Visibility\n",
        "Line" : 57,
        "CharPositionInLine" : 20
      },
      "7" : {
        "Text" : "# Define helper functions and macros used by Google Test.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Defined in internal_utils.cmake.\n",
        "Line" : 73,
        "CharPositionInLine" : 30
      },
      "9" : {
        "Text" : "# Where Google Test's .h files can be found.\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Summary of tuple support for Microsoft Visual Studio:\n\n# Compiler    version(MS)  version(cmake)  Support\n\n# ----------  -----------  --------------  -----------------------------\n\n# <= VS 2010  <= 10        <= 1600         Use Google Tests's own tuple.\n\n# VS 2012     11           1700            std::tr1::tuple + _VARIADIC_MAX=10\n\n# VS 2013     12           1800            std::tr1::tuple\n\n# VS 2015     14           1900            std::tuple\n\n# VS 2017     15           >= 1910         std::tuple\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "########################################################################\n\n#\n\n# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Google Test libraries.  We build them using more strict warnings than what\n\n# are used for other targets, to ensure that gtest can be compiled by a user\n\n# aggressive about warnings.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# If the CMake version supports it, attach header directory information\n\n# to the targets for when we are part of a parent build (ie being pulled\n\n# in via add_subdirectory() rather than being a standalone build).\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "########################################################################\n\n#\n\n# Install rules\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# configure and install pkgconfig files\n",
        "Line" : 123,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "########################################################################\n\n#\n\n# Samples on how to link user tests with gtest or gtest_main.\n\n#\n\n# They are not built by default.  To build them, set the\n\n# gtest_build_samples option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_samples=ON flag when running cmake.\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "########################################################################\n\n#\n\n# Google Test's own tests.\n\n#\n\n# You can skip this section if you aren't interested in testing\n\n# Google Test itself.\n\n#\n\n# The tests are not built by default.  To build them, set the\n\n# gtest_build_tests option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_tests=ON flag when running cmake.\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# This must be set in the root directory for the tests to be run by\n\n# 'make test' or ctest.\n",
        "Line" : 169,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "############################################################\n\n# C++ tests built with standard compiler flags.\n",
        "Line" : 173,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "############################################################\n\n# C++ tests built with non-standard compiler flags.\n",
        "Line" : 204,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 207,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# 1600 is Visual Studio 2010.\n",
        "Line" : 236,
        "CharPositionInLine" : 43
      },
      "23" : {
        "Text" : "# Visual Studio 2010, 2012, and 2013 define symbols in std::tr1 that\n\n# conflict with our own definitions. Therefore using our own tuple does not\n\n# work on those compilers.\n",
        "Line" : 237,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "############################################################\n\n# Python tests.\n",
        "Line" : 251,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Visual Studio .NET 2003 does not support STL with exceptions disabled.\n",
        "Line" : 257,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# 1310 is Visual Studio .NET 2003\n",
        "Line" : 258,
        "CharPositionInLine" : 46
      },
      "27" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 294,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 28
    },
    "vendor/shaderc/third_party/googletest/googletest/Makefile.am" : {
      "ObjectId" : "dbc004de6008f90fba9d726316ef504247822714",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Automake file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Nonstandard package files for distribution\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# gtest source files that we don't compile directly.  They are\n\n# #included by gtest-all.cc.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Sample files that we don't compile.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# C++ test files that we don't compile directly.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Python tests that we don't run.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# CMake script\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# MSVC project files\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# xcode project files\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# xcode sample files\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# C++Builder project files\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Distribute and install M4 macro\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# We define the global AM_CPPFLAGS as everything we compile includes from these\n\n# directories.\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Modifies compiler and linker flags for pthreads compatibility.\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Build rules for libraries.\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Build rules for samples and tests. Automake's naming for some of\n\n# these variables isn't terribly obvious, so this is a brief\n\n# reference:\n\n#\n\n# TESTS -- Programs run automatically by \"make check\"\n\n# check_PROGRAMS -- Programs built by \"make check\" but not necessarily run\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# A simple sample on using gtest.\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Another sample.  It also verifies that libgtest works.\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# This tests most constructs of gtest and verifies that libgtest_main\n\n# and libgtest work.\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Tests that fused gtest files compile and work.\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Build rules for putting fused Google Test files into the distribution\n\n# package. The user can also create those files by manually running\n\n# scripts/fuse_gtest_files.py.\n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Death tests may produce core dumps in the build directory. In case\n\n# this happens, clean them to keep distcleancheck happy.\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Disables 'make install' as installing a compiled version of Google\n\n# Test can lead to undefined behavior due to violation of the\n\n# One-Definition Rule.\n",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "vendor/shaderc/third_party/googletest/googletest/cmake/internal_utils.cmake" : {
      "ObjectId" : "c54bc94fe298fe16d4513315f19ed82beacaa6ff",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Defines functions and macros useful for building Google Test and\n\n# Google Mock.\n\n#\n\n# Note:\n\n#\n\n# - This file will be run twice when building Google Mock (once via\n\n#   Google Test's CMakeLists.txt, and once via Google Mock's).\n\n#   Therefore it shouldn't have any side effects other than defining\n\n#   the functions and macros.\n\n#\n\n# - The functions/macros defined in this file may depend on Google\n\n#   Test and Google Mock's option() definitions, and thus must be\n\n#   called *after* the options have been defined.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Tweaks CMake's default compiler/linker settings to suit Google Test's needs.\n\n#\n\n# This must be a macro(), as inside a function string() can only\n\n# update variables in the function scope.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For MSVC, CMake sets certain flags to defaults we want to override.\n\n# This replacement code is taken from sample in the CMake Wiki at\n\n# http://www.cmake.org/Wiki/CMake_FAQ#Dynamic_Replace.\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# When Google Test is built as a shared library, it should also use\n\n# shared runtime libraries.  Otherwise, it may end up with multiple\n\n# copies of runtime library data in different modules, resulting in\n\n# hard-to-find crashes. When it is built as a static library, it is\n\n# preferable to use CRT as static libraries, as we don't have to rely\n\n# on CRT DLLs being available. CMake always defaults to using shared\n\n# CRT libraries, so we override that default here.\n",
        "Line" : 28,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# We prefer more strict warning checking for building Google Test.\n\n# Replaces /W3 with /W4 in defaults.\n",
        "Line" : 38,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Defines the compiler/linker flags used to build Google Test and\n\n# Google Mock.  You can tweak these definitions to suit your need.  A\n\n# variable's value is empty before it's explicitly assigned to.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Note: pthreads on MinGW is not supported, even if available\n\n# instead, we use windows threading primitives\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Defines CMAKE_USE_PTHREADS_INIT and CMAKE_THREAD_LIBS_INIT.\n",
        "Line" : 53,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Newlines inside flags variables break CMake's NMake generator.\n\n# TODO(vladl@google.com): Add -RTCs and -RTCu to debug builds.\n",
        "Line" : 63,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# 1400 is Visual Studio 2005\n",
        "Line" : 66,
        "CharPositionInLine" : 33
      },
      "10" : {
        "Text" : "# Suppress spurious warnings MSVC 7.1 sometimes issues.\n\n# Forcing value to bool.\n",
        "Line" : 67,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# Copy constructor and assignment operator could not be generated.\n",
        "Line" : 70,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# Compatibility warnings not applicable to Google Test.\n\n# Resolved overload was found by argument-dependent lookup.\n",
        "Line" : 72,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# 1500 is Visual Studio 2008\n",
        "Line" : 76,
        "CharPositionInLine" : 33
      },
      "14" : {
        "Text" : "# Conditional expression is constant.\n\n# When compiling with /W4, we get several instances of C4127\n\n# (Conditional expression is constant). In our code, we disable that\n\n# warning on a case-by-case basis. However, on Visual Studio 2005,\n\n# the warning fires on std::list. Therefore on that compiler and earlier,\n\n# we disable the warning project-wide.\n",
        "Line" : 77,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "# 1700 is Visual Studio 2012.\n",
        "Line" : 85,
        "CharPositionInLine" : 39
      },
      "16" : {
        "Text" : "# Suppress \"unreachable code\" warning on VS 2012 and later.\n\n# http://stackoverflow.com/questions/3232669 explains the issue.\n",
        "Line" : 86,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# Until version 4.3.2, GCC doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 100,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Sun Pro doesn't provide macros to indicate whether exceptions and\n\n# RTTI are enabled, so we define GTEST_HAS_* explicitly.\n",
        "Line" : 108,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# CMake 2.8 changes Visual Age's compiler ID to \"XL\".\n",
        "Line" : 114,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Until version 9.0, Visual Age doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 117,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# RTTI can not be disabled in HP aCC compiler.\n",
        "Line" : 125,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# The pthreads library is available and allowed?\n",
        "Line" : 129,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# For building gtest's own tests and samples.\n",
        "Line" : 137,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# For building the gtest libraries.\n",
        "Line" : 145,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# type can be either STATIC or SHARED to denote a static or shared library.\n\n# ARGN refers to additional arguments after 'cxx_flags'.\n",
        "Line" : 152,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "########################################################################\n\n#\n\n# Helper functions for creating build targets.\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# cxx_executable_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ executable that depends on the given libraries and\n\n# is built from the given source files with the given compiler flags.\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# 1700 is Visual Studio 2012.\n",
        "Line" : 186,
        "CharPositionInLine" : 48
      },
      "30" : {
        "Text" : "# BigObj required for tests.\n",
        "Line" : 187,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# To support mixing linking in static and dynamic libraries, link each\n\n# library in with an extra call to target_link_libraries.\n",
        "Line" : 200,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# cxx_executable(name dir lib srcs...)\n\n#\n\n# creates a named target that depends on the given libs and is built\n\n# from the given source files.  dir/name.cc is implicitly included in\n\n# the source file list.\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Sets PYTHONINTERP_FOUND and PYTHON_EXECUTABLE.\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# cxx_test_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ test that depends on the given libs and is built\n\n# from the given source files with the given compiler flags.\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# cxx_test(name libs srcs...)\n\n#\n\n# creates a named test target that depends on the given libs and is\n\n# built from the given source files.  Unlike cxx_test_with_flags,\n\n# test/name.cc is already implicitly included in the source file list.\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# py_test(name)\n\n#\n\n# creates a Python test with the given name whose main module is in\n\n# test/name.py.  It does nothing if Python is not installed.\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Multi-configuration build generators as for Visual Studio save\n\n# output in a subdirectory of CMAKE_CURRENT_BINARY_DIR (Debug,\n\n# Release etc.), so we have to provide it here.\n",
        "Line" : 247,
        "CharPositionInLine" : 1
      },
      "38" : {
        "Text" : "# Single-configuration build generators like Makefile generators\n\n# don't have subdirs below CMAKE_CURRENT_BINARY_DIR.\n",
        "Line" : 255,
        "CharPositionInLine" : 1
      },
      "39" : {
        "Text" : "# ${CMAKE_CURRENT_BINARY_DIR} is known at configuration time, so we can\n\n# directly bind it from cmake. ${CTEST_CONFIGURATION_TYPE} is known\n\n# only at ctest runtime (by calling ctest -c <Configuration>), so\n\n# we have to escape $ to delay variable substitution here.\n",
        "Line" : 263,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 40
    },
    "vendor/shaderc/third_party/googletest/googletest/make/Makefile" : {
      "ObjectId" : "9ac74493ba55246597e90b898fae847ae358eab5",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# A sample Makefile for building Google Test and using it in user\n\n# tests.  Please tweak it to suit your environment and project.  You\n\n# may want to move it to your project's root directory.\n\n#\n\n# SYNOPSIS:\n\n#\n\n#   make [all]  - makes everything.\n\n#   make TARGET - makes the given target.\n\n#   make clean  - removes all files generated by make.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Please tweak the following variable definitions as needed by your\n\n# project, except GTEST_HEADERS, which you can use in your own targets\n\n# but shouldn't modify.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Points to the root of Google Test, relative to where this file is.\n\n# Remember to tweak this if you move this file.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Where to find user code.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Flags passed to the preprocessor.\n\n# Set Google Test's header directory as a system directory, such that\n\n# the compiler doesn't generate warnings in Google Test headers.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Flags passed to the C++ compiler.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# All tests produced by this Makefile.  Remember to add new tests you\n\n# created to the list.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# All Google Test headers.  Usually you shouldn't change this\n\n# definition.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# House-keeping build targets.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Builds gtest.a and gtest_main.a.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Usually you shouldn't tweak such internal variables, indicated by a\n\n# trailing _.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# For simplicity and to avoid depending on Google Test's\n\n# implementation details, the dependencies specified below are\n\n# conservative and not optimized.  This is fine as Google Test\n\n# compiles fast and for ordinary users its source rarely changes.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Builds a sample test.  A test should link with either gtest.a or\n\n# gtest_main.a, depending on whether it defines its own main()\n\n# function.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "vendor/shaderc/third_party/googletest/googletest/scripts/test/Makefile" : {
      "ObjectId" : "cdff584637b7a6e9df1fa43ce8f588c43815e561",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# A Makefile for fusing Google Test and building a sample test against it.\n\n#\n\n# SYNOPSIS:\n\n#\n\n#   make [all]  - makes everything.\n\n#   make TARGET - makes the given target.\n\n#   make check  - makes everything and runs the built sample test.\n\n#   make clean  - removes all files generated by make.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Points to the root of fused Google Test, relative to where this file is.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Paths to the fused gtest files.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Where to find the sample test.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Where to find gtest_main.cc.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Flags passed to the preprocessor.\n\n# We have no idea here whether pthreads is available in the system, so\n\n# disable its use.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Flags passed to the C++ compiler.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "vendor/shaderc/third_party/spirv-headers/CMakeLists.txt" : {
      "ObjectId" : "a5bff172a315b2c26206fe3b0e063533b75ab7b5",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2015-2016 The Khronos Group Inc.\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a\n\n# copy of this software and/or associated documentation files (the\n\n# \"Materials\"), to deal in the Materials without restriction, including\n\n# without limitation the rights to use, copy, modify, merge, publish,\n\n# distribute, sublicense, and/or sell copies of the Materials, and to\n\n# permit persons to whom the Materials are furnished to do so, subject to\n\n# the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included\n\n# in all copies or substantial portions of the Materials.\n\n#\n\n# MODIFICATIONS TO THIS FILE MAY MEAN IT NO LONGER ACCURATELY REFLECTS\n\n# KHRONOS STANDARDS. THE UNMODIFIED, NORMATIVE VERSIONS OF KHRONOS\n\n# SPECIFICATIONS AND HEADER INFORMATION ARE LOCATED AT\n\n#    https://www.khronos.org/registry/\n\n#\n\n# THE MATERIALS ARE PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\n# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\n# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n\n# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n\n# CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n\n# TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n\n# MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# The SPIR-V headers from the SPIR-V Registry\n\n# https://www.khronos.org/registry/spir-v/\n\n#\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# There are two ways to use this project.\n\n#\n\n# Using this source tree directly from a CMake-based project:\n\n#   1. Add an add_subdirectory directive to include this sub directory.\n\n#   2. Use ${SPIRV-Headers_SOURCE_DIR}/include} in a target_include_directories\n\n#      command.\n\n#\n\n# Installing the headers first, then using them with an implicit include\n\n# directory.  To install the headers:\n\n#   1. mkdir build ; cd build\n\n#   2. cmake ..\n\n#   3. cmake --build . install-headers\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "vendor/shaderc/third_party/spirv-headers/example/CMakeLists.txt" : {
      "ObjectId" : "dff65d918484cba082238bb43eaeb16649c2c3b5",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/shaderc/third_party/spirv-tools/CMakeLists.txt" : {
      "ObjectId" : "3381fd616395f4f9b8fb9f77ad421b76a53bb05c",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2015-2016 The Khronos Group Inc.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Avoid dereferencing variables or interpret keywords that have been\n\n# quoted or bracketed.\n\n# https://cmake.org/cmake/help/v3.1/policy/CMP0054.html\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# For good call stacks in profiles, keep the frame pointers.\n",
        "Line" : 120,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Specify /EHs for exception handling. This makes using SPIRV-Tools as\n\n# dependencies in other projects easier.\n",
        "Line" : 138,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# For MinGW cross compile, statically link to the C++ runtime.\n\n# But it still depends on MSVCRT.dll.\n",
        "Line" : 143,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Defaults to OFF if the user didn't set it.\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Defaults to ON.  The checks can be time consuming.\n\n# Turn off if they take too long.\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "vendor/shaderc/third_party/spirv-tools/examples/CMakeLists.txt" : {
      "ObjectId" : "fd627cbdaea1f47b19a7f8a5c4a9ad6ac6ae3ea6",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2016 Google Inc.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add a SPIR-V Tools example. Signature:\n\n#   add_spvtools_example(\n\n#     TARGET target_name\n\n#     SRCS   src_file1.cpp src_file2.cpp\n\n#     LIBS   lib_target1 lib_target2\n\n#   )\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "vendor/shaderc/third_party/spirv-tools/examples/cpp-interface/CMakeLists.txt" : {
      "ObjectId" : "d050b0759728da8d8884f584c6522e0f9c34c51e",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2016 Google Inc.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "vendor/shaderc/third_party/spirv-tools/external/CMakeLists.txt" : {
      "ObjectId" : "f31a3672db25edf66209016a914c94bad6b4b473",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2015-2016 The Khronos Group Inc.\n\n#\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This allows flexible position of the SPIRV-Headers repo.\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Find gmock if we can. If it's not already configured, then try finding\n\n# it in external/googletest.\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Find Effcee and RE2, for testing.\n\n# Optional for now, but eventually we'll make this required.\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# First find RE2, since Effcee depends on it.\n\n# If already configured, then use that.  Otherwise, prefer to find it under 're2'\n\n# in this directory.\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# If we are configuring RE2, then turn off its testing.  It takes a long time and\n\n# does not add much value for us.  If an enclosing project configured RE2, then it\n\n# has already chosen whether to enable RE2 tesitng.\n",
        "Line" : 69,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Expect to find effcee in this directory.\n",
        "Line" : 81,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# If we're configuring RE2 (via Effcee), then turn off RE2 testing.\n",
        "Line" : 83,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# SPIRV-Tools uses the shared CRT with MSVC.  Tell Effcee to do the same.\n",
        "Line" : 88,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Turn off warnings for effcee and re2\n",
        "Line" : 93,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# TODO(dneto): Eventually, require this.\n",
        "Line" : 98,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 11
    },
    "vendor/shaderc/third_party/spirv-tools/source/CMakeLists.txt" : {
      "ObjectId" : "b6dbdcee354e22783cd5b866c32618175ed1bd69",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2015-2016 The Khronos Group Inc.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# macro() definitions are used in the following because we need to append .inc\n\n# file paths into some global lists (*_CPP_DEPENDS). And those global lists are\n\n# later used by set_source_files_properties() calls.\n\n# function() definitions are not suitable because they create new scopes.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Extract the list of known generators from the SPIR-V XML registry file.\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The following .cpp files include the above generated .inc files.\n\n# Add those .inc files as their dependencies.\n\n#\n\n# Why using such an awkward way?\n\n# * If we use add_custom_target() to define a target to generate all .inc files\n\n#   and let ${SPIRV_TOOLS} depend on it, then we need to run ninja twice every\n\n#   time the grammar is updated: the first time is for generating those .inc\n\n#   files, and the second time is for rebuilding .cpp files, when ninja finds\n\n#   out that .inc files are updated.\n\n# * If we use add_custom_command() with PRE_BUILD, then the grammar processing\n\n#   script will always run no matter whether the grammar is updated.\n\n# * add_dependencies() is used to add *target* dependencies to a target.\n\n# * The following solution only generates .inc files when the script or the\n\n#   grammar files is updated, and in a single ninja run.\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Convenience target for standalone generation of the build-version.inc file.\n\n# This is not required for any dependence chain.\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The software_version.cpp file includes build-version.inc.\n\n# Rebuild the software_version.cpp object file if it is older than\n\n# build-version.inc or whenever build-version.inc itself is out of\n\n# date.  In the latter case, rebuild build-version.inc first.\n\n# CMake is not smart enough to detect this dependency automatically.\n\n# Without this, the dependency detection system for #included files\n\n# does not kick in on a clean build for the following reason:  The\n\n# build will fail early because it doesn't know how to build the\n\n# missing source file build-version.inc. That occurs before the\n\n# preprocessor is run on software_version.cpp to detect the\n\n# #include dependency.\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "vendor/shaderc/third_party/spirv-tools/source/comp/CMakeLists.txt" : {
      "ObjectId" : "ff52d5e1ec9de604175012a6d7561683e98e80c8",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2017 Google Inc.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "vendor/shaderc/third_party/spirv-tools/source/link/CMakeLists.txt" : {
      "ObjectId" : "8ca4df39f7a6c44e6038a7c5f5b9f0046ceb6093",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2017 Pierre Moreau\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We need the IR functionnalities from the optimizer\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "vendor/shaderc/third_party/spirv-tools/source/opt/CMakeLists.txt" : {
      "ObjectId" : "1d47ff0963df112f31dd5efbb1b6693249d72c2c",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2016 Google Inc.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We need the assembling and disassembling functionalities in the main library.\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "vendor/shaderc/third_party/spirv-tools/test/CMakeLists.txt" : {
      "ObjectId" : "f9794037ab3a4730dce38040273109088127c2b8",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2015-2016 The Khronos Group Inc.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add a SPIR-V Tools unit test. Signature:\n\n#   add_spvtools_unittest(\n\n#     TARGET target_name\n\n#     SRCS   src_file.h src_file.cpp\n\n#     LIBS   lib1 lib2\n\n#   )\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Effcee and RE2 headers exhibit shadowing.\n",
        "Line" : 42,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# Disable C4503 \"decorated name length exceeded\" warning,\n\n# triggered by some heavily templated types.\n\n# We don't care much about that in test code.\n\n# Important to do since we have warnings-as-errors.\n",
        "Line" : 46,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# If using Effcee for testing, then add its include directory.\n",
        "Line" : 62,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 5
    },
    "vendor/shaderc/third_party/spirv-tools/test/comp/CMakeLists.txt" : {
      "ObjectId" : "c947fde0c6605c70fce1dc95499da916501c85c7",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2017 Google Inc.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "vendor/shaderc/third_party/spirv-tools/test/link/CMakeLists.txt" : {
      "ObjectId" : "f2ced245bbd7a5167199573661b6d2ef394f3cec",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2017 Pierre Moreau\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "vendor/shaderc/third_party/spirv-tools/test/opt/CMakeLists.txt" : {
      "ObjectId" : "3cb9ec08f3d0d7344c525da4965b6fa958b8b03f",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2016 Google Inc.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "vendor/shaderc/third_party/spirv-tools/test/opt/dominator_tree/CMakeLists.txt" : {
      "ObjectId" : "22778e494e7864de80a97e43580893f6be62a493",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2017 Google Inc.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "vendor/shaderc/third_party/spirv-tools/test/stats/CMakeLists.txt" : {
      "ObjectId" : "20f05fd0fbab703d1c6b960854cbc638f5ba97bb",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2017 Google Inc.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "vendor/shaderc/third_party/spirv-tools/test/util/CMakeLists.txt" : {
      "ObjectId" : "9b6ca2c1f83b6c2807f88d7a4ad406c5c06e63b0",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2017 Google Inc.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "vendor/shaderc/third_party/spirv-tools/test/val/CMakeLists.txt" : {
      "ObjectId" : "27d4d6d0696fd4573ff34ec6b83a539b31113ae4",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2016 The Khronos Group Inc.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "vendor/shaderc/third_party/spirv-tools/tools/CMakeLists.txt" : {
      "ObjectId" : "5dacca38ae2df9aea3886f26fb3ac8b893e67543",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2015-2016 The Khronos Group Inc.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add a SPIR-V Tools command line tool. Signature:\n\n#   add_spvtools_tool(\n\n#     TARGET target_name\n\n#     SRCS   src_file1.cpp src_file2.cpp\n\n#     LIBS   lib_target1 lib_target2\n\n#   )\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "vendor/shaderc/third_party/spirv-tools/tools/emacs/CMakeLists.txt" : {
      "ObjectId" : "ecd7c277a87c950271ad3575c571de1c846ac6e3",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2016 LunarG Inc.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Install a script for use with the auto-compression feature of emacs(1).\n\n# Upon loading a file with the .spv extension, the file will be disassembled\n\n# using spirv-dis, and the result colorized with asm-mode in emacs.  The file\n\n# may be edited within the constraints of validity, and when re-saved will be\n\n# re-assembled using spirv-as.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# It is required that those tools be in your PATH.  If that is not the case\n\n# when starting emacs, the path can be modified as in this example:\n\n# (setenv \"PATH\" (concat (getenv \"PATH\") \":/path/to/spirv/tools\"))\n\n#\n\n# See https://github.com/KhronosGroup/SPIRV-Tools/issues/359\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This is an absolute directory, and ignores CMAKE_INSTALL_PREFIX, or\n\n# it will not be found by emacs upon startup.  It is only installed if\n\n# both of the following are true:\n\n#   1. SPIRV_TOOLS_INSTALL_EMACS_HELPERS is defined\n\n#   2. The directory /etc/emacs/site-start.d already exists at the time of\n\n#      cmake invocation (not at the time of make install).  This is\n\n#      typically true if emacs is installed on the system.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Note that symbol IDs are not preserved through a load/edit/save operation.\n\n# This may change if the ability is added to spirv-as.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "vendor/shaderc/third_party/spirv-tools/tools/lesspipe/CMakeLists.txt" : {
      "ObjectId" : "484e51e588d77df506325f65d0da48b6a73ee06b",
      "LastModified" : "2018-02-21T15:14:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2016 Google Inc.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Install a script for use with the LESSOPEN of less(1).\n\n# For example, after installation into /usr/local do:\n\n#    export LESSOPEN='|/usr/local/bin \"%s\"'\n\n#    less -R foo.spv\n\n#\n\n# See https://github.com/KhronosGroup/SPIRV-Tools/issues/359\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The script will be installed with everyone having read and execute\n\n# permissions.\n\n# We have a .sh extension because Windows users often configure\n\n# executable settings via filename extension.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    }
  },
  "FileTypes" : {
    "CMAKE" : 83,
    "CMAKESOURCE" : 1,
    "MAKEFILE" : 5,
    "AUTOMAKE" : 3
  },
  "ElapsedTime" : 5738
}