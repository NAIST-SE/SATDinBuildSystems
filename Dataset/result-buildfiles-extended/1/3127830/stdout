{
  "Repository" : "3127830",
  "Revision" : "HEAD",
  "ObjectId" : "7aa0c6008939ff9c66c40cbdf60e4897a00b8a02",
  "CommitTime" : "2019-04-18T06:39:29Z",
  "Files" : {
    "bom/pom.xml" : {
      "ObjectId" : "95c0ed254ce714bf2b562472e2e4d6661e55003e",
      "LastModified" : "2019-04-09T09:14:51Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " do not remove empty tag - http://jira.codehaus.org/browse/MNG-4687 ",
        "Line" : 9,
        "CharPositionInLine" : 80
      },
      "1" : {
        "Text" : " external dependencies ",
        "Line" : 47,
        "CharPositionInLine" : 37
      },
      "2" : {
        "Text" : " camunda BPM public artifacts ",
        "Line" : 64,
        "CharPositionInLine" : 44
      },
      "3" : {
        "Text" : " dmn engine ",
        "Line" : 161,
        "CharPositionInLine" : 26
      },
      "4" : {
        "Text" : "\n            make sure everybody uses the same commons version\n        ",
        "Line" : 173,
        "CharPositionInLine" : 12
      },
      "5" : {
        "Text" : " optional dependencies ",
        "Line" : 181,
        "CharPositionInLine" : 37
      },
      "CommentCount" : 6
    },
    "database/pom.xml" : {
      "ObjectId" : "6704d6796f17165c4c2779207331caf35af39da3",
      "LastModified" : "2019-03-28T14:25:04Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " database driver versions ",
        "Line" : 20,
        "CharPositionInLine" : 38
      },
      "1" : {
        "Text" : " needed for sql script and backward compatibility checks ",
        "Line" : 38,
        "CharPositionInLine" : 69
      },
      "2" : {
        "Text" : " This url has to consistent for the subprojects: {server}-runtime and webapp-integration-tests ",
        "Line" : 222,
        "CharPositionInLine" : 111
      },
      "CommentCount" : 3
    },
    "distro/jbossas7/assembly/pom.xml" : {
      "ObjectId" : "feb06981770cbf881bef539a47faf00ba0234b5a",
      "LastModified" : "2019-03-28T14:25:04Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " this dependency is to make sure that we are executed after camunda-modules \n        in the reactor ",
        "Line" : 85,
        "CharPositionInLine" : 27
      },
      "1" : {
        "Text" : " \n    We need this repository to fetch\n\n      org.jboss.as:jboss-as-dist:${version.jboss.as}\n  ",
        "Line" : 125,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 2
    },
    "distro/jbossas7/distro/pom.xml" : {
      "ObjectId" : "8eac368f03af9d9b1f63aa98209890a209b51a89",
      "LastModified" : "2019-03-28T14:25:04Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " this dependency is to make sure that we are executed after the \n        integration tests have passed in the reactor ",
        "Line" : 18,
        "CharPositionInLine" : 57
      },
      "CommentCount" : 1
    },
    "distro/jbossas7/modules/pom.xml" : {
      "ObjectId" : "31b277fc62bc57f2a76c0b3c2874f369ea0d44f2",
      "LastModified" : "2019-03-28T14:25:04Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " script engine dependencies ",
        "Line" : 78,
        "CharPositionInLine" : 40
      },
      "1" : {
        "Text" : " template engine dependencies ",
        "Line" : 84,
        "CharPositionInLine" : 42
      },
      "2" : {
        "Text" : " exclude slf4j as it is part of jboss distro ",
        "Line" : 95,
        "CharPositionInLine" : 57
      },
      "3" : {
        "Text" : " copy all files ",
        "Line" : 124,
        "CharPositionInLine" : 40
      },
      "4" : {
        "Text" : " copy all files again, but this only matches fox files and this treatment makes is maven 2/3 compatible => timestamped snapshot ",
        "Line" : 132,
        "CharPositionInLine" : 152
      },
      "CommentCount" : 5
    },
    "distro/jbossas7/pom.xml" : {
      "ObjectId" : "996bbf8a9be4736ea7013029a607d16046005886",
      "LastModified" : "2019-03-28T14:25:04Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "distro/jbossas7/subsystem/pom.xml" : {
      "ObjectId" : "78d3f05980dd5a554237bb8678540559ef0cefc2",
      "LastModified" : "2019-03-28T14:25:04Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " test dependencies ",
        "Line" : 108,
        "CharPositionInLine" : 31
      },
      "CommentCount" : 1
    },
    "distro/jbossas7/webapp-standalone/pom.xml" : {
      "ObjectId" : "d31c392e622090a50f75ce6eaad7e577c9dbd66e",
      "LastModified" : "2019-03-28T14:25:04Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "distro/jbossas7/webapp/pom.xml" : {
      "ObjectId" : "84322fe7cb66033dae3a4ad23f05281cd9acd7c7",
      "LastModified" : "2019-03-28T14:25:04Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " module dependencies for deployment on AS 7 ",
        "Line" : 35,
        "CharPositionInLine" : 66
      },
      "CommentCount" : 1
    },
    "distro/license-book/pom.xml" : {
      "ObjectId" : "4d51db3634721f1db87ce7b7d35fd982226c9e0e",
      "LastModified" : "2019-03-28T14:25:04Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " assemble zip artifact ",
        "Line" : 19,
        "CharPositionInLine" : 37
      },
      "1" : {
        "Text" : " copy and filter license book ",
        "Line" : 44,
        "CharPositionInLine" : 44
      },
      "2" : {
        "Text" : " replace database versions ",
        "Line" : 64,
        "CharPositionInLine" : 51
      },
      "3" : {
        "Text" : " attach artifact ",
        "Line" : 76,
        "CharPositionInLine" : 31
      },
      "CommentCount" : 4
    },
    "distro/sql-script/pom.xml" : {
      "ObjectId" : "fa656c23dfcb7236ce7bc6d18eb7a16b728771da",
      "LastModified" : "2019-03-28T14:25:04Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " parse version properties from qa/pom.xml ",
        "Line" : 62,
        "CharPositionInLine" : 56
      },
      "1" : {
        "Text" : " create ",
        "Line" : 129,
        "CharPositionInLine" : 32
      },
      "2" : {
        "Text" : " add identity create files ",
        "Line" : 161,
        "CharPositionInLine" : 51
      },
      "3" : {
        "Text" : " drop ",
        "Line" : 171,
        "CharPositionInLine" : 30
      },
      "4" : {
        "Text" : " add identity drop files ",
        "Line" : 203,
        "CharPositionInLine" : 49
      },
      "5" : {
        "Text" : " upgrade ",
        "Line" : 213,
        "CharPositionInLine" : 33
      },
      "6" : {
        "Text" : " create concatenated patch scripts for easier testing ",
        "Line" : 234,
        "CharPositionInLine" : 78
      },
      "7" : {
        "Text" : " db2 patches ",
        "Line" : 235,
        "CharPositionInLine" : 37
      },
      "8" : {
        "Text" : " h2 patches ",
        "Line" : 252,
        "CharPositionInLine" : 36
      },
      "9" : {
        "Text" : " mssql patches ",
        "Line" : 269,
        "CharPositionInLine" : 39
      },
      "10" : {
        "Text" : " mysql patches ",
        "Line" : 286,
        "CharPositionInLine" : 39
      },
      "11" : {
        "Text" : " mariadb patches ",
        "Line" : 303,
        "CharPositionInLine" : 41
      },
      "12" : {
        "Text" : " oracle patches ",
        "Line" : 320,
        "CharPositionInLine" : 40
      },
      "13" : {
        "Text" : " postgres patches ",
        "Line" : 337,
        "CharPositionInLine" : 42
      },
      "14" : {
        "Text" : " create test jar with concatenated patch scripts for easier test execution ",
        "Line" : 377,
        "CharPositionInLine" : 89
      },
      "15" : {
        "Text" : " this is used for inheritance merges ",
        "Line" : 407,
        "CharPositionInLine" : 80
      },
      "16" : {
        "Text" : " append to the packaging phase. ",
        "Line" : 408,
        "CharPositionInLine" : 75
      },
      "17" : {
        "Text" : " goals == mojos ",
        "Line" : 410,
        "CharPositionInLine" : 58
      },
      "CommentCount" : 18
    },
    "distro/tomcat/assembly/pom.xml" : {
      "ObjectId" : "6d18376f2a9426eca664d94bbb672d7b08d1eb16",
      "LastModified" : "2019-03-28T14:25:04Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "distro/tomcat/distro/pom.xml" : {
      "ObjectId" : "6be4b782321a35c98b5c5f61bbe75929da8e8e5c",
      "LastModified" : "2019-03-28T14:25:04Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "distro/tomcat/pom.xml" : {
      "ObjectId" : "2a29a0aca832f02e07f67a3859e5d8d665361f72",
      "LastModified" : "2019-03-28T14:25:04Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "distro/tomcat/webapp-standalone/pom.xml" : {
      "ObjectId" : "140be6fee321fe477db1616d57631b7cc050ed59",
      "LastModified" : "2019-03-28T14:25:04Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "distro/tomcat/webapp/pom.xml" : {
      "ObjectId" : "b7f1d3bc6b40121dec585ea1bce7b302e553feae",
      "LastModified" : "2019-03-28T14:25:04Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "distro/webjar/pom.xml" : {
      "ObjectId" : "5934840c8754079c636e48ddc4010e45171a9125",
      "LastModified" : "2019-03-28T14:25:04Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " add dependency so this is run after the war was build ",
        "Line" : 22,
        "CharPositionInLine" : 65
      },
      "1" : {
        "Text" : " first fetch and unpack the war ",
        "Line" : 35,
        "CharPositionInLine" : 46
      },
      "2" : {
        "Text" : " then remove the WEB-INF part except the security.json ",
        "Line" : 61,
        "CharPositionInLine" : 69
      },
      "CommentCount" : 3
    },
    "distro/wildfly/assembly/pom.xml" : {
      "ObjectId" : "7b433ac443e8145b93586c9d24650625c618b45e",
      "LastModified" : "2019-03-28T14:25:04Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " this dependency is to make sure that we are executed after camunda-modules \n        in the reactor ",
        "Line" : 79,
        "CharPositionInLine" : 27
      },
      "CommentCount" : 1
    },
    "distro/wildfly/distro/pom.xml" : {
      "ObjectId" : "09576a9751d6464da1da9469020e9b1a2df398f5",
      "LastModified" : "2019-03-28T14:25:04Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " this dependency is to make sure that we are executed after the \n        integration tests have passed in the reactor ",
        "Line" : 18,
        "CharPositionInLine" : 57
      },
      "CommentCount" : 1
    },
    "distro/wildfly/modules/pom.xml" : {
      "ObjectId" : "099108968069c4b2ba6b57647b704bb967345ba1",
      "LastModified" : "2019-03-28T14:25:04Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " script engine dependencies ",
        "Line" : 80,
        "CharPositionInLine" : 40
      },
      "1" : {
        "Text" : " template engine dependencies ",
        "Line" : 86,
        "CharPositionInLine" : 42
      },
      "2" : {
        "Text" : " exclude slf4j as it is part of wildfly distro ",
        "Line" : 97,
        "CharPositionInLine" : 59
      },
      "3" : {
        "Text" : " copy all files ",
        "Line" : 131,
        "CharPositionInLine" : 40
      },
      "4" : {
        "Text" : " copy all files again, but this only matches fox files and this treatment makes is maven 2/3 compatible => timestamped snapshot ",
        "Line" : 139,
        "CharPositionInLine" : 152
      },
      "5" : {
        "Text" : " copy jackson dependencies to slot ",
        "Line" : 194,
        "CharPositionInLine" : 59
      },
      "CommentCount" : 6
    },
    "distro/wildfly/pom.xml" : {
      "ObjectId" : "2224a7bbb52d091dff5bb1a25f6d5aeb92c43291",
      "LastModified" : "2019-03-28T14:25:04Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "distro/wildfly/subsystem/pom.xml" : {
      "ObjectId" : "ff31d7d46a52a8e7739d9ef4349f87049f34a680",
      "LastModified" : "2019-03-28T14:25:04Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " test dependencies ",
        "Line" : 60,
        "CharPositionInLine" : 31
      },
      "CommentCount" : 1
    },
    "distro/wildfly8/modules/pom.xml" : {
      "ObjectId" : "9001aee485e0d9b0503dd6a0346b7dd7d11790c5",
      "LastModified" : "2019-03-28T14:25:04Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " script engine dependencies ",
        "Line" : 80,
        "CharPositionInLine" : 40
      },
      "1" : {
        "Text" : " template engine dependencies ",
        "Line" : 86,
        "CharPositionInLine" : 42
      },
      "2" : {
        "Text" : " exclude slf4j as it is part of wildfly distro ",
        "Line" : 97,
        "CharPositionInLine" : 59
      },
      "3" : {
        "Text" : " copy all files ",
        "Line" : 131,
        "CharPositionInLine" : 40
      },
      "4" : {
        "Text" : " copy all files again, but this only matches fox files and this treatment makes is maven 2/3 compatible => timestamped snapshot ",
        "Line" : 139,
        "CharPositionInLine" : 152
      },
      "5" : {
        "Text" : " copy jackson dependencies to slot ",
        "Line" : 194,
        "CharPositionInLine" : 59
      },
      "6" : {
        "Text" : " assemble zip artifact ",
        "Line" : 292,
        "CharPositionInLine" : 37
      },
      "CommentCount" : 7
    },
    "distro/wildfly8/pom.xml" : {
      "ObjectId" : "ee70dde5aeb16f960552838aef0ddbf83c125f66",
      "LastModified" : "2019-03-28T14:25:04Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "distro/wildfly8/subsystem/pom.xml" : {
      "ObjectId" : "1e83853a5fc344f07290b472629d42dc4ef0de49",
      "LastModified" : "2019-03-28T14:25:04Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " test dependencies ",
        "Line" : 80,
        "CharPositionInLine" : 31
      },
      "CommentCount" : 1
    },
    "engine-cdi/pom.xml" : {
      "ObjectId" : "5aba7b4abcb045bc1c1e84ea688638e4b778b5cc",
      "LastModified" : "2019-03-28T14:25:04Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "engine-plugins/connect-plugin/pom.xml" : {
      "ObjectId" : "77c5cb9640096cfb31c9d7e4098bcee3e1f9e9bd",
      "LastModified" : "2019-03-28T14:25:04Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "engine-plugins/identity-ldap/pom.xml" : {
      "ObjectId" : "48e8327981b0bcf93f71f4b402164d4950384d4a",
      "LastModified" : "2019-03-28T14:25:04Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " LDAP Libraries to start test server ",
        "Line" : 26,
        "CharPositionInLine" : 49
      },
      "1" : {
        "Text" : " required for LdapTestEnvironment ",
        "Line" : 40,
        "CharPositionInLine" : 48
      },
      "CommentCount" : 2
    },
    "engine-plugins/pom.xml" : {
      "ObjectId" : "66c44f672492bb9b6b0398198910a8feed5c071c",
      "LastModified" : "2019-03-28T14:25:04Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "engine-plugins/spin-plugin/pom.xml" : {
      "ObjectId" : "1fd94c645bddf44c8279b1bfb9cf20567d8d16d6",
      "LastModified" : "2019-03-28T14:25:04Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "engine-rest/assembly/pom.xml" : {
      "ObjectId" : "5e6ddb2b9cbda3c7b6d8c88c0740fdf39695ede3",
      "LastModified" : "2019-03-28T14:25:04Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " dependencies only used for assemblies should be scope provided ",
        "Line" : 28,
        "CharPositionInLine" : 76
      },
      "1" : {
        "Text" : " dependencies only used for assemblies should be scope provided ",
        "Line" : 35,
        "CharPositionInLine" : 76
      },
      "2" : {
        "Text" : " jboss as 7.2 dependencies ",
        "Line" : 66,
        "CharPositionInLine" : 39
      },
      "3" : {
        "Text" : " module dependencies for deployment on jboss AS 7  ",
        "Line" : 98,
        "CharPositionInLine" : 77
      },
      "4" : {
        "Text" : " module dependencies for deployment on wildfly  ",
        "Line" : 122,
        "CharPositionInLine" : 74
      },
      "CommentCount" : 5
    },
    "engine-rest/engine-rest-jaxrs2/pom.xml" : {
      "ObjectId" : "dd274de48959c3409d63e0d14e7a2bd716fa66b0",
      "LastModified" : "2019-03-28T14:25:04Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " compile ",
        "Line" : 16,
        "CharPositionInLine" : 21
      },
      "1" : {
        "Text" : " provided ",
        "Line" : 24,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : " test ",
        "Line" : 44,
        "CharPositionInLine" : 18
      },
      "CommentCount" : 3
    },
    "engine-rest/engine-rest/pom.xml" : {
      "ObjectId" : "69676091b22c0d67132ae419e06bccc1d2741f0f",
      "LastModified" : "2019-04-09T09:14:51Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " pin tomcat version for engine-rest ",
        "Line" : 15,
        "CharPositionInLine" : 48
      },
      "1" : {
        "Text" : " use inherited version as default ",
        "Line" : 18,
        "CharPositionInLine" : 46
      },
      "2" : {
        "Text" : " http-client uses an old version of slf4j ",
        "Line" : 21,
        "CharPositionInLine" : 54
      },
      "3" : {
        "Text" : " other JAX-RS implementations ",
        "Line" : 24,
        "CharPositionInLine" : 42
      },
      "4" : {
        "Text" : " provided deps ",
        "Line" : 41,
        "CharPositionInLine" : 27
      },
      "5" : {
        "Text" : "\n      needed for offline shrinkwrap\n      see src/test/java/org/camunda/bpm/engine/rest/util/container/TomcatServerBootstrap.java\n    ",
        "Line" : 57,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : " test ",
        "Line" : 65,
        "CharPositionInLine" : 18
      },
      "7" : {
        "Text" : " only included to prevent java.lang.ClassNotFoundException: org.apache.jasper.servlet.JspServlet ",
        "Line" : 72,
        "CharPositionInLine" : 109
      },
      "8" : {
        "Text" : " removing this dep. will not break the tests, but makes them \"ugly\"",
        "Line" : 73,
        "CharPositionInLine" : 79
      },
      "9" : {
        "Text" : " version must be the same as used by restassured ",
        "Line" : 121,
        "CharPositionInLine" : 61
      },
      "10" : {
        "Text" : " override version ",
        "Line" : 131,
        "CharPositionInLine" : 32
      },
      "11" : {
        "Text" : " Tomcat for resteasy and wink ",
        "Line" : 149,
        "CharPositionInLine" : 42
      },
      "12" : {
        "Text" : " This id must match the -Prelease-profile id value or else sources will be \"uploaded\" twice, which causes Nexus to fail ",
        "Line" : 204,
        "CharPositionInLine" : 140
      },
      "13" : {
        "Text" : " the test runtimes each bring the JAX-RS classes themselves ",
        "Line" : 233,
        "CharPositionInLine" : 74
      },
      "14" : {
        "Text" : "\n          needed for offline shrinkwrap\n          src/test/java-jersey/org/camunda/bpm/engine/rest/util/container/JerseyTomcatServerBootstrap.java\n        ",
        "Line" : 292,
        "CharPositionInLine" : 12
      },
      "15" : {
        "Text" : " Jetty is needed if you're are not using the CXFServlet ",
        "Line" : 651,
        "CharPositionInLine" : 72
      },
      "CommentCount" : 16
    },
    "engine-rest/pom.xml" : {
      "ObjectId" : "773230436f0ea7689171cdd87489e32c69a0d605",
      "LastModified" : "2019-03-28T14:25:04Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "engine-spring/compatibility-test-spring4/pom.xml" : {
      "ObjectId" : "7f5a7de17ad8818da4295cf0566c559e9e542ec0",
      "LastModified" : "2019-04-17T13:46:53Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " latest version for Java 7 ",
        "Line" : 16,
        "CharPositionInLine" : 91
      },
      "1" : {
        "Text" : " engine Spring artifact and tests ",
        "Line" : 20,
        "CharPositionInLine" : 46
      },
      "2" : {
        "Text" : " Spring 5 ",
        "Line" : 34,
        "CharPositionInLine" : 22
      },
      "3" : {
        "Text" : " Hibernate requires JAXB which is not present in Java 11+ ",
        "Line" : 114,
        "CharPositionInLine" : 74
      },
      "CommentCount" : 4
    },
    "engine-spring/compatibility-test-spring5/pom.xml" : {
      "ObjectId" : "3f6f02391d5771fa29e2dcbcf4f24b7ce6a335d5",
      "LastModified" : "2019-04-16T12:29:36Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " engine Spring artifact and tests ",
        "Line" : 20,
        "CharPositionInLine" : 46
      },
      "1" : {
        "Text" : " Spring 5 ",
        "Line" : 34,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : " Hibernate implementing JPA >= 2.1 (required by Spring 5) ",
        "Line" : 66,
        "CharPositionInLine" : 70
      },
      "CommentCount" : 3
    },
    "engine-spring/core/pom.xml" : {
      "ObjectId" : "67c46e2d9997a1b3b36392c408a4bf5b5595be4d",
      "LastModified" : "2019-04-17T13:46:53Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "  do not expose ",
        "Line" : 46,
        "CharPositionInLine" : 30
      },
      "1" : {
        "Text" : " servlet API ",
        "Line" : 55,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : " hibernate uses an older slf4j version ",
        "Line" : 104,
        "CharPositionInLine" : 55
      },
      "3" : {
        "Text" : " needed by Spring 3 ",
        "Line" : 111,
        "CharPositionInLine" : 32
      },
      "4" : {
        "Text" : " hibernate uses an older slf4j version ",
        "Line" : 118,
        "CharPositionInLine" : 55
      },
      "5" : {
        "Text" : " create test jar that is consumed by the compatibility tests ",
        "Line" : 162,
        "CharPositionInLine" : 79
      },
      "6" : {
        "Text" : " this is re-defined in the consuming artifacts ",
        "Line" : 172,
        "CharPositionInLine" : 71
      },
      "CommentCount" : 7
    },
    "engine-spring/pom.xml" : {
      "ObjectId" : "a7c1439fb52085d33c9816e1caf3c476af9dda8c",
      "LastModified" : "2019-04-17T13:46:53Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "\n  Why this module structure?\n  Core is the user-facing camunda-engine-spring artifact and is compiled against Spring 3 and JPA 1.0.\n  The compatibility* modules run the tests contained in core with Spring 4 and 5 respectively.\n  This is implemented as separate modules and not as profiles of the core module, in order\n  to test the artifact that was compiled against Spring 3 (i.e. to ensure binary compatibility).\n  ",
        "Line" : 23,
        "CharPositionInLine" : 6
      },
      "1" : {
        "Text" : " Spring 5 requires Java 8 ",
        "Line" : 31,
        "CharPositionInLine" : 42
      },
      "CommentCount" : 2
    },
    "engine/pom.xml" : {
      "ObjectId" : "0c3c7fc761b5c1ab4fac15a69e0182537e692098",
      "LastModified" : "2019-04-17T13:46:53Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " camunda dependencies ",
        "Line" : 17,
        "CharPositionInLine" : 34
      },
      "1" : {
        "Text" : " required for DiagramQueryTest ",
        "Line" : 135,
        "CharPositionInLine" : 45
      },
      "2" : {
        "Text" : " without a special test profile we don't want to exclude anything, this expressions should never match ",
        "Line" : 224,
        "CharPositionInLine" : 115
      },
      "3" : {
        "Text" : " filter test configurations to inject properties ",
        "Line" : 266,
        "CharPositionInLine" : 61
      },
      "4" : {
        "Text" : "This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.",
        "Line" : 368,
        "CharPositionInLine" : 134
      },
      "5" : {
        "Text" : "  database qa profile ",
        "Line" : 424,
        "CharPositionInLine" : 34
      },
      "6" : {
        "Text" : "  check history audit ",
        "Line" : 458,
        "CharPositionInLine" : 34
      },
      "7" : {
        "Text" : "  check history activity ",
        "Line" : 466,
        "CharPositionInLine" : 37
      },
      "8" : {
        "Text" : "  check history none ",
        "Line" : 474,
        "CharPositionInLine" : 33
      },
      "9" : {
        "Text" : " check for api differences between latest minor release ",
        "Line" : 602,
        "CharPositionInLine" : 68
      },
      "10" : {
        "Text" : " profile for running testsuite with database table prefix ",
        "Line" : 718,
        "CharPositionInLine" : 70
      },
      "11" : {
        "Text" : " the test requires multiple process engines in parallel but\n                     the DbSchemaPrefixTestHelper will first drop the schema. So\n                     it cannot be used with this profile at the moment ",
        "Line" : 747,
        "CharPositionInLine" : 75
      },
      "12" : {
        "Text" : " this test drops the database an creates two schemas and\n                     it can be excluded for this test profile as it tests\n                     the same except for the whole unit test suite ",
        "Line" : 751,
        "CharPositionInLine" : 71
      },
      "13" : {
        "Text" : " test profiles ",
        "Line" : 766,
        "CharPositionInLine" : 27
      },
      "CommentCount" : 14
    },
    "examples/invoice/pom.xml" : {
      "ObjectId" : "2b84ca99d46c81298cdf4958bcaf9e2264a7fc72",
      "LastModified" : "2019-04-16T12:29:36Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " override processes.xml, providing custom process engine ",
        "Line" : 77,
        "CharPositionInLine" : 77
      },
      "CommentCount" : 1
    },
    "javaee/ejb-client/pom.xml" : {
      "ObjectId" : "b61b828671015d1e48c584aa4f92a072dd60219b",
      "LastModified" : "2019-04-16T12:29:36Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "javaee/ejb-service/pom.xml" : {
      "ObjectId" : "a3383b3928bd0a5ff7b7ecf1af110cdbf4ee8066",
      "LastModified" : "2019-04-16T12:29:36Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "javaee/jobexecutor-ra/pom.xml" : {
      "ObjectId" : "f3b6bf917e5d5d4255d99f4f327b92fd74c1e29c",
      "LastModified" : "2019-04-16T12:29:36Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " TODO: move to parent ",
        "Line" : 15,
        "CharPositionInLine" : 34
      },
      "CommentCount" : 1
    },
    "javaee/jobexecutor-rar/pom.xml" : {
      "ObjectId" : "e44b9d244545cc0406dd45462cb7ac370051b692",
      "LastModified" : "2019-04-16T12:29:36Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "parent/pom.xml" : {
      "ObjectId" : "6b4e2382664dd0d1d8aef491dd525f735058dd06",
      "LastModified" : "2019-04-16T12:29:36Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " application servers ",
        "Line" : 37,
        "CharPositionInLine" : 33
      },
      "1" : {
        "Text" : " OSGi bundles properties ",
        "Line" : 54,
        "CharPositionInLine" : 37
      },
      "2" : {
        "Text" : "\n    <camunda.osgi.export.pkg>!*.impl;${camunda.artifact}*</camunda.osgi.export.pkg>\n    <camunda.osgi.private.pkg>${camunda.artifact}*.impl</camunda.osgi.private.pkg>\n    ",
        "Line" : 79,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : " required by Apache commons httpclient ",
        "Line" : 111,
        "CharPositionInLine" : 55
      },
      "4" : {
        "Text" : " EMAIL ",
        "Line" : 194,
        "CharPositionInLine" : 21
      },
      "5" : {
        "Text" : " Web service ",
        "Line" : 200,
        "CharPositionInLine" : 29
      },
      "6" : {
        "Text" : " Camel integration ",
        "Line" : 334,
        "CharPositionInLine" : 33
      },
      "7" : {
        "Text" : " Mule integration ",
        "Line" : 340,
        "CharPositionInLine" : 32
      },
      "8" : {
        "Text" : " licensing dependencies ",
        "Line" : 374,
        "CharPositionInLine" : 38
      },
      "9" : {
        "Text" : " The exclusion is there because we don't need the Resteasy client\n          API in the Rest API test suite and assembly; in case you need to remove\n          the exclusion here, please make sure to add it in the REST API projects ",
        "Line" : 403,
        "CharPositionInLine" : 86
      },
      "10" : {
        "Text" : " test plugins ",
        "Line" : 459,
        "CharPositionInLine" : 30
      },
      "11" : {
        "Text" : " code plugins ",
        "Line" : 486,
        "CharPositionInLine" : 30
      },
      "12" : {
        "Text" : " artifact plugins ",
        "Line" : 498,
        "CharPositionInLine" : 34
      },
      "13" : {
        "Text" : " required for commonJ dependency ",
        "Line" : 618,
        "CharPositionInLine" : 45
      },
      "CommentCount" : 14
    },
    "pom.xml" : {
      "ObjectId" : "35718fc2c932ed7dfdbe92d6e2ece767c03a716c",
      "LastModified" : "2019-04-16T12:29:36Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " do not remove empty tag - http://jira.codehaus.org/browse/MNG-4687 ",
        "Line" : 8,
        "CharPositionInLine" : 80
      },
      "1" : {
        "Text" : " distro profile is default and builds the complete distribution.\n         Does not run integration tests. ",
        "Line" : 44,
        "CharPositionInLine" : 45
      },
      "2" : {
        "Text" : " profile for running process-engine unit tests in QA ",
        "Line" : 164,
        "CharPositionInLine" : 67
      },
      "3" : {
        "Text" : " profile for running webapp unit tests in QA ",
        "Line" : 179,
        "CharPositionInLine" : 59
      },
      "CommentCount" : 4
    },
    "qa/ensure-clean-db-plugin/pom.xml" : {
      "ObjectId" : "330b59060da813231928b538e83570545643291d",
      "LastModified" : "2019-04-16T12:29:36Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "qa/integration-tests-engine/pom.xml" : {
      "ObjectId" : "b4d26f39022757193703ca86324b90d298a32d68",
      "LastModified" : "2019-04-16T12:29:36Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Needs to be updated after a new WildFly release ",
        "Line" : 14,
        "CharPositionInLine" : 61
      },
      "1" : {
        "Text" : " import shrinkwrap and arquillian bom for artifact versions,\n  \tDO NOT CHANGE ordering, because we want shrinkwrap versions to be newer ",
        "Line" : 22,
        "CharPositionInLine" : 79
      },
      "2" : {
        "Text" : " set shrinkwrap artifacts ",
        "Line" : 44,
        "CharPositionInLine" : 37
      },
      "3" : {
        "Text" : " camunda ",
        "Line" : 101,
        "CharPositionInLine" : 21
      },
      "4" : {
        "Text" : " weld for CDI support on tomcat",
        "Line" : 167,
        "CharPositionInLine" : 44
      },
      "5" : {
        "Text" : " required for TestWarDeploymentWithProcessEnginePlugin ",
        "Line" : 175,
        "CharPositionInLine" : 67
      },
      "6" : {
        "Text" : " install enhanced artifact ",
        "Line" : 208,
        "CharPositionInLine" : 45
      },
      "7" : {
        "Text" : " make sure this comes after runtime in the reactor build ",
        "Line" : 235,
        "CharPositionInLine" : 75
      },
      "8" : {
        "Text" : " HEMERA-2453 ",
        "Line" : 318,
        "CharPositionInLine" : 37
      },
      "9" : {
        "Text" : " CAM-1778 ",
        "Line" : 324,
        "CharPositionInLine" : 34
      },
      "10" : {
        "Text" : " make sure this comes after runtime in the reactor build ",
        "Line" : 340,
        "CharPositionInLine" : 75
      },
      "11" : {
        "Text" : " skip EE integration tests ",
        "Line" : 431,
        "CharPositionInLine" : 51
      },
      "12" : {
        "Text" : " CAM-1778 ",
        "Line" : 440,
        "CharPositionInLine" : 34
      },
      "13" : {
        "Text" : " make sure this comes after runtime in the reactor build ",
        "Line" : 455,
        "CharPositionInLine" : 75
      },
      "14" : {
        "Text" : " HEMERA-2453 ",
        "Line" : 514,
        "CharPositionInLine" : 37
      },
      "15" : {
        "Text" : " CAM-1778 ",
        "Line" : 520,
        "CharPositionInLine" : 34
      },
      "16" : {
        "Text" : " make sure this comes after runtime in the reactor build ",
        "Line" : 536,
        "CharPositionInLine" : 75
      },
      "17" : {
        "Text" : " skip EE integration tests ",
        "Line" : 627,
        "CharPositionInLine" : 51
      },
      "18" : {
        "Text" : " CAM-1778 ",
        "Line" : 636,
        "CharPositionInLine" : 34
      },
      "19" : {
        "Text" : " make sure this comes after runtime in the reactor build ",
        "Line" : 662,
        "CharPositionInLine" : 75
      },
      "20" : {
        "Text" : " no EE stuff on tomcat :) ",
        "Line" : 708,
        "CharPositionInLine" : 50
      },
      "21" : {
        "Text" : " No EJB RequestContext available ",
        "Line" : 714,
        "CharPositionInLine" : 57
      },
      "22" : {
        "Text" : " Not supported by arquillian tomcat container ",
        "Line" : 716,
        "CharPositionInLine" : 70
      },
      "23" : {
        "Text" : " This profile is used by the ci server. The maven build on the\n        ci server uses a local maven repository. This allows us to give the arquillian\n        maven resolver access to the artifacts produced by this build. ",
        "Line" : 798,
        "CharPositionInLine" : 75
      },
      "24" : {
        "Text" : " allows dropping all databases ",
        "Line" : 816,
        "CharPositionInLine" : 43
      },
      "25" : {
        "Text" : " try dropping the DB if it exists. ",
        "Line" : 863,
        "CharPositionInLine" : 63
      },
      "CommentCount" : 26
    },
    "qa/integration-tests-webapps/pom.xml" : {
      "ObjectId" : "ade1e5bf89a952c44cfff6566b59ca6c01fd0b86",
      "LastModified" : "2019-04-16T12:29:36Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Needs to be updated after a new WildFly release (check support on Codehaus Cargo first) ",
        "Line" : 18,
        "CharPositionInLine" : 101
      },
      "1" : {
        "Text" : " set shrinkwrap artifacts ",
        "Line" : 45,
        "CharPositionInLine" : 38
      },
      "2" : {
        "Text" : " make sure it comes after assembly in the build ",
        "Line" : 173,
        "CharPositionInLine" : 66
      },
      "3" : {
        "Text" : " Container configuration ",
        "Line" : 246,
        "CharPositionInLine" : 47
      },
      "4" : {
        "Text" : " make sure it comes after assembly in the build ",
        "Line" : 312,
        "CharPositionInLine" : 66
      },
      "5" : {
        "Text" : " Container configuration ",
        "Line" : 356,
        "CharPositionInLine" : 47
      },
      "6" : {
        "Text" : " make sure it comes after assembly in the build ",
        "Line" : 414,
        "CharPositionInLine" : 66
      },
      "7" : {
        "Text" : " Container configuration ",
        "Line" : 459,
        "CharPositionInLine" : 47
      },
      "8" : {
        "Text" : " allows dropping all databases ",
        "Line" : 543,
        "CharPositionInLine" : 43
      },
      "9" : {
        "Text" : " try dropping the DB if it exists. ",
        "Line" : 583,
        "CharPositionInLine" : 63
      },
      "10" : {
        "Text" : " Works only on Wildfly ",
        "Line" : 718,
        "CharPositionInLine" : 37
      },
      "11" : {
        "Text" : " install enhanced artifact ",
        "Line" : 775,
        "CharPositionInLine" : 45
      },
      "12" : {
        "Text" : "This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build\n          itself. ",
        "Line" : 800,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 13
    },
    "qa/jboss7-runtime/pom.xml" : {
      "ObjectId" : "0da8be6c26ce6d130c3ba314e16d461ee3eb8534",
      "LastModified" : "2019-04-16T12:29:36Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " make sure it comes after assembly in the build ",
        "Line" : 21,
        "CharPositionInLine" : 62
      },
      "1" : {
        "Text" : "\n      database drivers\n      we deploy all and only activate one with a *-ds.xml database deployment\n    ",
        "Line" : 32,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : " create sources to be used by camunda-bpm-platform-ee ",
        "Line" : 83,
        "CharPositionInLine" : 68
      },
      "3" : {
        "Text" : " exclude otherwise there would be duplicates in -sources.jar ",
        "Line" : 119,
        "CharPositionInLine" : 83
      },
      "4" : {
        "Text" : " copy filtered configuration resources ",
        "Line" : 217,
        "CharPositionInLine" : 57
      },
      "5" : {
        "Text" : " copy filtered configuration resources ",
        "Line" : 321,
        "CharPositionInLine" : 57
      },
      "CommentCount" : 6
    },
    "qa/performance-tests-engine/pom.xml" : {
      "ObjectId" : "761688c365212cca6c7439936d337a2bc0e9660b",
      "LastModified" : "2019-04-16T12:29:36Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " without a special test profile we don't want to exclude anything, this expressions should never match ",
        "Line" : 15,
        "CharPositionInLine" : 115
      },
      "1" : {
        "Text" : " distro profile skips tests ",
        "Line" : 62,
        "CharPositionInLine" : 40
      },
      "2" : {
        "Text" : " the benchmark performs multiple runs of the same process on multiple threads. ",
        "Line" : 94,
        "CharPositionInLine" : 91
      },
      "3" : {
        "Text" : " default values for properties ",
        "Line" : 99,
        "CharPositionInLine" : 47
      },
      "4" : {
        "Text" : " the benchmark performs multiple runs of the same process on multiple threads. ",
        "Line" : 166,
        "CharPositionInLine" : 91
      },
      "5" : {
        "Text" : " default values for properties ",
        "Line" : 171,
        "CharPositionInLine" : 47
      },
      "6" : {
        "Text" : " Allows to log the process engine's interaction with the database ",
        "Line" : 236,
        "CharPositionInLine" : 78
      },
      "7" : {
        "Text" : " allows to log activity start/end counts ",
        "Line" : 422,
        "CharPositionInLine" : 53
      },
      "8" : {
        "Text" : " default values for properties ",
        "Line" : 427,
        "CharPositionInLine" : 47
      },
      "9" : {
        "Text" : " override h2 profile to use in-mem db ",
        "Line" : 491,
        "CharPositionInLine" : 50
      },
      "10" : {
        "Text" : " test profiles ",
        "Line" : 526,
        "CharPositionInLine" : 27
      },
      "CommentCount" : 11
    },
    "qa/pom.xml" : {
      "ObjectId" : "8d61e5817985e6c6c24eb32f3c0213d437445b82",
      "LastModified" : "2019-04-16T12:29:36Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "\n      all maven properties used in QA/CI\n    ",
        "Line" : 20,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : " override mail port so subethawiser does not try to bind itself on port 25 ",
        "Line" : 21,
        "CharPositionInLine" : 87
      },
      "2" : {
        "Text" : " jboss ",
        "Line" : 24,
        "CharPositionInLine" : 19
      },
      "3" : {
        "Text" : " wildfly ",
        "Line" : 27,
        "CharPositionInLine" : 21
      },
      "4" : {
        "Text" : " tomcat ",
        "Line" : 42,
        "CharPositionInLine" : 20
      },
      "5" : {
        "Text" : " Server profiles ",
        "Line" : 79,
        "CharPositionInLine" : 29
      },
      "6" : {
        "Text" : " Testsuite profiles ",
        "Line" : 114,
        "CharPositionInLine" : 32
      },
      "CommentCount" : 7
    },
    "qa/test-db-instance-migration/pom.xml" : {
      "ObjectId" : "c35c1c610e261673314e91724418264e161dda6c",
      "LastModified" : "2019-04-16T12:29:36Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "qa/test-db-instance-migration/test-fixture-710/pom.xml" : {
      "ObjectId" : "d165f83d4fdc2d2f32a8ec2e5dddce3c6bfed9b8",
      "LastModified" : "2019-04-16T12:29:36Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " NOTE: this pulls transitive dependencies of version ${project.version} in unless\n      you declare them to be ${camunda.version.current} here ",
        "Line" : 52,
        "CharPositionInLine" : 65
      },
      "1" : {
        "Text" : " create the SQL scripts so that the files exist even if they do not exist in the distribution. (this can be the case if there are no db\n                      upgrades (yet) for a particular release ) ",
        "Line" : 153,
        "CharPositionInLine" : 68
      },
      "2" : {
        "Text" : " concanated patches for last minor version ",
        "Line" : 157,
        "CharPositionInLine" : 71
      },
      "3" : {
        "Text" : " 7.9.0 is on a clean state so we can again use the concanated patches ",
        "Line" : 158,
        "CharPositionInLine" : 98
      },
      "4" : {
        "Text" : " minor version upgrade from previous to current version ",
        "Line" : 162,
        "CharPositionInLine" : 84
      },
      "5" : {
        "Text" : " provide sql scripts ",
        "Line" : 174,
        "CharPositionInLine" : 39
      },
      "6" : {
        "Text" : " parse version properties from qa/pom.xml ",
        "Line" : 180,
        "CharPositionInLine" : 60
      },
      "7" : {
        "Text" : " now patch old version of the schema ",
        "Line" : 220,
        "CharPositionInLine" : 65
      },
      "8" : {
        "Text" : "<srcFile>${project.build.directory}/scripts-current/sql/upgrade/${database.type}_engine_${camunda.previous.majorVersion}.${camunda.previous.minorVersion}_patch_${camunda.previous.majorVersion}.${camunda.previous.minorVersion}.x_to_${camunda.previous.majorVersion}.${camunda.previous.minorVersion}.y.sql</srcFile>",
        "Line" : 221,
        "CharPositionInLine" : 340
      },
      "9" : {
        "Text" : " now perform the schema migrations ",
        "Line" : 235,
        "CharPositionInLine" : 63
      },
      "10" : {
        "Text" : " example: patch-current-schema\n              <execution>\n                <id>patch-current-schema</id>\n                <phase>test-compile</phase>\n                <goals>\n                  <goal>execute</goal>\n                </goals>\n                <configuration>\n                  <srcFiles>\n                    // now patch current version of the schema\n                    // example for aggregate patching of current version\n                    <srcFile>${project.build.directory}/scripts-current/sql/upgrade/${database.type}_engine_${camunda.current.majorVersion}.${camunda.current.minorVersion}_patch.sql</srcFile>\n                    <srcFile>${project.build.directory}/scripts-current/sql/upgrade/${database.type}_identity_${camunda.current.majorVersion}.${camunda.current.minorVersion}_patch.sql</srcFile>\n                  </srcFiles>\n                </configuration>\n              </execution>\n              ",
        "Line" : 257,
        "CharPositionInLine" : 18
      },
      "CommentCount" : 11
    },
    "qa/test-db-instance-migration/test-fixture-711/pom.xml" : {
      "ObjectId" : "c83feba1ddc9a3e61245d8f0f0147ff781f74808",
      "LastModified" : "2019-04-16T12:29:36Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " comment when 7.X is released ",
        "Line" : 15,
        "CharPositionInLine" : 42
      },
      "1" : {
        "Text" : " uncomment when 7.X is released ",
        "Line" : 20,
        "CharPositionInLine" : 42
      },
      "2" : {
        "Text" : " <dependencyManagement>\n    <dependencies>\n      <dependency>\n        <groupId>org.camunda.bpm</groupId>\n        <artifactId>camunda-bom</artifactId>\n        <version>7.X.0</version>\n        <scope>import</scope>\n        <type>pom</type>\n      </dependency>\n      <dependency>\n        <groupId>org.camunda.bpm.model</groupId>\n        <artifactId>camunda-bpmn-model</artifactId>\n        <version>7.X.0</version>\n      </dependency>\n      <dependency>\n        <groupId>org.camunda.bpm.model</groupId>\n        <artifactId>camunda-cmmn-model</artifactId>\n        <version>7.X.0</version>\n      </dependency>\n      <dependency>\n        <groupId>org.camunda.bpm.model</groupId>\n        <artifactId>camunda-dmn-model</artifactId>\n        <version>7.X.0</version>\n      </dependency>\n      <dependency>\n        <groupId>org.camunda.bpm.model</groupId>\n        <artifactId>camunda-xml-model</artifactId>\n        <version>7.X.0</version>\n      </dependency>\n    </dependencies>\n  </dependencyManagement> ",
        "Line" : 51,
        "CharPositionInLine" : 30
      },
      "3" : {
        "Text" : " NOTE: this pulls transitive dependencies of version ${project.version} in unless\n      you declare them to be ${camunda.version.current} here ",
        "Line" : 55,
        "CharPositionInLine" : 65
      },
      "4" : {
        "Text" : "<version>7.11.0</version>",
        "Line" : 59,
        "CharPositionInLine" : 39
      },
      "5" : {
        "Text" : "<version>7.11.0</version>",
        "Line" : 75,
        "CharPositionInLine" : 39
      },
      "6" : {
        "Text" : " create the SQL scripts so that the files exist even if they do not exist in the distribution. (this can be the case if there are no db\n                      upgrades (yet) for a particular release ) ",
        "Line" : 152,
        "CharPositionInLine" : 68
      },
      "7" : {
        "Text" : " concanated patches for last minor version ",
        "Line" : 156,
        "CharPositionInLine" : 71
      },
      "8" : {
        "Text" : " 7.10.0 is on a clean state so we can again use the concanated patches ",
        "Line" : 157,
        "CharPositionInLine" : 99
      },
      "9" : {
        "Text" : " minor version upgrade from previous to current version ",
        "Line" : 161,
        "CharPositionInLine" : 84
      },
      "10" : {
        "Text" : " provide sql scripts ",
        "Line" : 173,
        "CharPositionInLine" : 39
      },
      "11" : {
        "Text" : " parse version properties from qa/pom.xml ",
        "Line" : 179,
        "CharPositionInLine" : 60
      },
      "12" : {
        "Text" : " now patch old version of the schema ",
        "Line" : 219,
        "CharPositionInLine" : 65
      },
      "13" : {
        "Text" : "<srcFile>${project.build.directory}/scripts-current/sql/upgrade/${database.type}_engine_${camunda.previous.majorVersion}.${camunda.previous.minorVersion}_patch_${camunda.previous.majorVersion}.${camunda.previous.minorVersion}.x_to_${camunda.previous.majorVersion}.${camunda.previous.minorVersion}.y.sql</srcFile>",
        "Line" : 220,
        "CharPositionInLine" : 340
      },
      "14" : {
        "Text" : " now perform the schema migrations ",
        "Line" : 234,
        "CharPositionInLine" : 63
      },
      "15" : {
        "Text" : " example: patch-current-schema\n              <execution>\n                <id>patch-current-schema</id>\n                <phase>test-compile</phase>\n                <goals>\n                  <goal>execute</goal>\n                </goals>\n                <configuration>\n                  <srcFiles>\n                    // now patch current version of the schema\n                    // example for aggregate patching of current version\n                    <srcFile>${project.build.directory}/scripts-current/sql/upgrade/${database.type}_engine_${camunda.current.majorVersion}.${camunda.current.minorVersion}_patch.sql</srcFile>\n                    <srcFile>${project.build.directory}/scripts-current/sql/upgrade/${database.type}_identity_${camunda.current.majorVersion}.${camunda.current.minorVersion}_patch.sql</srcFile>\n                  </srcFiles>\n                </configuration>\n              </execution>\n              ",
        "Line" : 256,
        "CharPositionInLine" : 18
      },
      "CommentCount" : 16
    },
    "qa/test-db-instance-migration/test-fixture-72/pom.xml" : {
      "ObjectId" : "9a27265659f7e383deec4da1ea15c2e126f69f85",
      "LastModified" : "2019-04-16T12:29:36Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Due to https://issues.apache.org/jira/browse/MRELEASE-799 the release test fails when\n     the version is managed in a property. Thus we use explicit versions everywhere. ",
        "Line" : 15,
        "CharPositionInLine" : 89
      },
      "1" : {
        "Text" : "   <properties> ",
        "Line" : 16,
        "CharPositionInLine" : 24
      },
      "2" : {
        "Text" : "     <camunda.version.current>7.2.0</camunda.version.current> ",
        "Line" : 17,
        "CharPositionInLine" : 70
      },
      "3" : {
        "Text" : "   </properties> ",
        "Line" : 18,
        "CharPositionInLine" : 25
      },
      "4" : {
        "Text" : " NOTE: this pulls transitive dependencies of version ${project.version} in unless\n      you declare them to be ${camunda.version.current} here ",
        "Line" : 42,
        "CharPositionInLine" : 65
      },
      "CommentCount" : 5
    },
    "qa/test-db-instance-migration/test-fixture-73/pom.xml" : {
      "ObjectId" : "cf786ca8076c0a9116ac099404a8d7be7e0cd7c8",
      "LastModified" : "2019-04-16T12:29:36Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Due to https://issues.apache.org/jira/browse/MRELEASE-799 the release test fails when\n     the version is managed in a property. Thus we use explicit versions everywhere. ",
        "Line" : 15,
        "CharPositionInLine" : 89
      },
      "1" : {
        "Text" : "     <camunda.version.current>7.3.0</camunda.version.current> ",
        "Line" : 17,
        "CharPositionInLine" : 70
      },
      "2" : {
        "Text" : " NOTE: this pulls transitive dependencies of version ${project.version} in unless\n      you declare them to be ${camunda.version.current} here ",
        "Line" : 43,
        "CharPositionInLine" : 65
      },
      "3" : {
        "Text" : " create the SQL scripts so that the files exist even if they do not exist in the distribution. (this can be the case if there are no db\n                      upgrades (yet) for a particular release ) ",
        "Line" : 118,
        "CharPositionInLine" : 68
      },
      "4" : {
        "Text" : " patches for current minor version if any ",
        "Line" : 125,
        "CharPositionInLine" : 70
      },
      "5" : {
        "Text" : " 7.2.4 to 7.2.5 ",
        "Line" : 126,
        "CharPositionInLine" : 44
      },
      "6" : {
        "Text" : " copy mysql upgrade scripts from 7.3 for mariadb as with 7.5 mariadb has own scripts ",
        "Line" : 140,
        "CharPositionInLine" : 113
      },
      "7" : {
        "Text" : " TODO: if 7.2 patch scripts for mysql are created they probably also have to be copied for mariadb ",
        "Line" : 141,
        "CharPositionInLine" : 127
      },
      "8" : {
        "Text" : " provide sql scripts ",
        "Line" : 154,
        "CharPositionInLine" : 39
      },
      "9" : {
        "Text" : " parse version properties from qa/pom.xml ",
        "Line" : 160,
        "CharPositionInLine" : 60
      },
      "10" : {
        "Text" : " now patch old version of the schema ",
        "Line" : 200,
        "CharPositionInLine" : 65
      },
      "11" : {
        "Text" : " 7.2.4 to 7.2.5 ",
        "Line" : 202,
        "CharPositionInLine" : 44
      },
      "12" : {
        "Text" : " now perform the schema migrations ",
        "Line" : 215,
        "CharPositionInLine" : 63
      },
      "CommentCount" : 13
    },
    "qa/test-db-instance-migration/test-fixture-74/pom.xml" : {
      "ObjectId" : "23c5456853cf98c9224ce01c25cb2555f2dba86b",
      "LastModified" : "2019-04-16T12:29:36Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Due to https://issues.apache.org/jira/browse/MRELEASE-799 the release test fails when\n     the version is managed in a property. Thus we use explicit versions everywhere. ",
        "Line" : 15,
        "CharPositionInLine" : 89
      },
      "1" : {
        "Text" : " camunda.version.current>${project.version}</camunda.version.current",
        "Line" : 17,
        "CharPositionInLine" : 80
      },
      "2" : {
        "Text" : " NOTE: this pulls transitive dependencies of version ${project.version} in unless\n      you declare them to be ${camunda.version.current} here ",
        "Line" : 55,
        "CharPositionInLine" : 65
      },
      "3" : {
        "Text" : " create the SQL scripts so that the files exist even if they do not exist in the distribution. (this can be the case if there are no db\n                      upgrades (yet) for a particular release ) ",
        "Line" : 130,
        "CharPositionInLine" : 68
      },
      "4" : {
        "Text" : " patches for previous minor version if any ",
        "Line" : 134,
        "CharPositionInLine" : 71
      },
      "5" : {
        "Text" : " 7.3.0 to 7.3.1 ",
        "Line" : 135,
        "CharPositionInLine" : 44
      },
      "6" : {
        "Text" : " 7.3.2 to 7.3.3_1 ",
        "Line" : 137,
        "CharPositionInLine" : 46
      },
      "7" : {
        "Text" : " 7.3.2 to 7.3.3_2 ",
        "Line" : 139,
        "CharPositionInLine" : 46
      },
      "8" : {
        "Text" : " minor version upgrade from previous to current version ",
        "Line" : 142,
        "CharPositionInLine" : 84
      },
      "9" : {
        "Text" : " copy mysql upgrade scripts from 7.4 for mariadb as with 7.5 mariadb has own scripts ",
        "Line" : 157,
        "CharPositionInLine" : 113
      },
      "10" : {
        "Text" : " TODO: if 7.3 patch scripts for mysql are created they probably also have to be copied for mariadb ",
        "Line" : 158,
        "CharPositionInLine" : 127
      },
      "11" : {
        "Text" : " 7.3.0 to 7.3.1 ",
        "Line" : 162,
        "CharPositionInLine" : 44
      },
      "12" : {
        "Text" : " 7.3.2 to 7.3.3_1 ",
        "Line" : 164,
        "CharPositionInLine" : 46
      },
      "13" : {
        "Text" : " 7.3.2 to 7.3.3_2 ",
        "Line" : 166,
        "CharPositionInLine" : 46
      },
      "14" : {
        "Text" : " provide sql scripts ",
        "Line" : 178,
        "CharPositionInLine" : 39
      },
      "15" : {
        "Text" : " parse version properties from qa/pom.xml ",
        "Line" : 184,
        "CharPositionInLine" : 60
      },
      "16" : {
        "Text" : " now patch old version of the schema ",
        "Line" : 224,
        "CharPositionInLine" : 65
      },
      "17" : {
        "Text" : " 7.3.0 to 7.3.1 ",
        "Line" : 226,
        "CharPositionInLine" : 44
      },
      "18" : {
        "Text" : " 7.3.2 to 7.3.3_1 ",
        "Line" : 228,
        "CharPositionInLine" : 46
      },
      "19" : {
        "Text" : " 7.3.2 to 7.3.3_2 ",
        "Line" : 230,
        "CharPositionInLine" : 46
      },
      "20" : {
        "Text" : " now perform the schema migrations ",
        "Line" : 243,
        "CharPositionInLine" : 63
      },
      "CommentCount" : 21
    },
    "qa/test-db-instance-migration/test-fixture-75/pom.xml" : {
      "ObjectId" : "a5c87ddd2b7ee0458562519bc504376bbdb3ce5e",
      "LastModified" : "2019-04-16T12:29:36Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " NOTE: this pulls transitive dependencies of version ${project.version} in unless\n      you declare them to be ${camunda.version.current} here ",
        "Line" : 51,
        "CharPositionInLine" : 65
      },
      "1" : {
        "Text" : " create the SQL scripts so that the files exist even if they do not exist in the distribution. (this can be the case if there are no db\n                      upgrades (yet) for a particular release ) ",
        "Line" : 132,
        "CharPositionInLine" : 68
      },
      "2" : {
        "Text" : " patches for previous minor version if any ",
        "Line" : 136,
        "CharPositionInLine" : 71
      },
      "3" : {
        "Text" : " 7.4.2 to 7.4.3 ",
        "Line" : 137,
        "CharPositionInLine" : 44
      },
      "4" : {
        "Text" : " 7.4.5 to 7.4.6 ",
        "Line" : 141,
        "CharPositionInLine" : 44
      },
      "5" : {
        "Text" : " minor version upgrade from previous to current version ",
        "Line" : 144,
        "CharPositionInLine" : 84
      },
      "6" : {
        "Text" : " copy patches from 7.4 for mariadb ",
        "Line" : 158,
        "CharPositionInLine" : 63
      },
      "7" : {
        "Text" : " provide sql scripts ",
        "Line" : 172,
        "CharPositionInLine" : 39
      },
      "8" : {
        "Text" : " parse version properties from qa/pom.xml ",
        "Line" : 178,
        "CharPositionInLine" : 60
      },
      "9" : {
        "Text" : " now patch old version of the schema ",
        "Line" : 218,
        "CharPositionInLine" : 65
      },
      "10" : {
        "Text" : " now perform the schema migrations ",
        "Line" : 235,
        "CharPositionInLine" : 63
      },
      "CommentCount" : 11
    },
    "qa/test-db-instance-migration/test-fixture-76/pom.xml" : {
      "ObjectId" : "f3cbb5304a269a42724812d6cf4475aa651981d6",
      "LastModified" : "2019-04-16T12:29:36Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " NOTE: this pulls transitive dependencies of version ${project.version} in unless\n      you declare them to be ${camunda.version.current} here ",
        "Line" : 52,
        "CharPositionInLine" : 65
      },
      "1" : {
        "Text" : " create the SQL scripts so that the files exist even if they do not exist in the distribution. (this can be the case if there are no db\n                      upgrades (yet) for a particular release ) ",
        "Line" : 133,
        "CharPositionInLine" : 68
      },
      "2" : {
        "Text" : " patches for previous minor version if any ",
        "Line" : 137,
        "CharPositionInLine" : 71
      },
      "3" : {
        "Text" : "<touch file=\"${project.build.directory}/scripts-current/sql/upgrade/${database.type}_engine_${camunda.previous.majorVersion}.${camunda.previous.minorVersion}_patch_${camunda.previous.majorVersion}.${camunda.previous.minorVersion}.x_to_${camunda.previous.majorVersion}.${camunda.previous.minorVersion}.y.sql\" />",
        "Line" : 138,
        "CharPositionInLine" : 338
      },
      "4" : {
        "Text" : " minor version upgrade from previous to current version ",
        "Line" : 140,
        "CharPositionInLine" : 84
      },
      "5" : {
        "Text" : " provide sql scripts ",
        "Line" : 152,
        "CharPositionInLine" : 39
      },
      "6" : {
        "Text" : " parse version properties from qa/pom.xml ",
        "Line" : 158,
        "CharPositionInLine" : 60
      },
      "7" : {
        "Text" : " now patch old version of the schema ",
        "Line" : 198,
        "CharPositionInLine" : 65
      },
      "8" : {
        "Text" : "<srcFile>${project.build.directory}/scripts-current/sql/upgrade/${database.type}_engine_${camunda.previous.majorVersion}.${camunda.previous.minorVersion}_patch_${camunda.previous.majorVersion}.${camunda.previous.minorVersion}.x_to_${camunda.previous.majorVersion}.${camunda.previous.minorVersion}.y.sql</srcFile>",
        "Line" : 199,
        "CharPositionInLine" : 340
      },
      "9" : {
        "Text" : " now perform the schema migrations ",
        "Line" : 211,
        "CharPositionInLine" : 63
      },
      "CommentCount" : 10
    },
    "qa/test-db-instance-migration/test-fixture-77/pom.xml" : {
      "ObjectId" : "9b853d3c558638217f6978da8a4313d55f3ecee0",
      "LastModified" : "2019-04-16T12:29:36Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " NOTE: this pulls transitive dependencies of version ${project.version} in unless\n      you declare them to be ${camunda.version.current} here ",
        "Line" : 52,
        "CharPositionInLine" : 65
      },
      "1" : {
        "Text" : " create the SQL scripts so that the files exist even if they do not exist in the distribution. (this can be the case if there are no db\n                      upgrades (yet) for a particular release ) ",
        "Line" : 133,
        "CharPositionInLine" : 68
      },
      "2" : {
        "Text" : " concanated patches for last minor version ",
        "Line" : 137,
        "CharPositionInLine" : 71
      },
      "3" : {
        "Text" : " 7.6.0 is on a clean state so we can again use the concanated patches ",
        "Line" : 138,
        "CharPositionInLine" : 98
      },
      "4" : {
        "Text" : " minor version upgrade from previous to current version ",
        "Line" : 142,
        "CharPositionInLine" : 84
      },
      "5" : {
        "Text" : " provide sql scripts ",
        "Line" : 154,
        "CharPositionInLine" : 39
      },
      "6" : {
        "Text" : " parse version properties from qa/pom.xml ",
        "Line" : 160,
        "CharPositionInLine" : 60
      },
      "7" : {
        "Text" : " now patch old version of the schema ",
        "Line" : 200,
        "CharPositionInLine" : 65
      },
      "8" : {
        "Text" : "<srcFile>${project.build.directory}/scripts-current/sql/upgrade/${database.type}_engine_${camunda.previous.majorVersion}.${camunda.previous.minorVersion}_patch_${camunda.previous.majorVersion}.${camunda.previous.minorVersion}.x_to_${camunda.previous.majorVersion}.${camunda.previous.minorVersion}.y.sql</srcFile>",
        "Line" : 201,
        "CharPositionInLine" : 340
      },
      "9" : {
        "Text" : " now perform the schema migrations ",
        "Line" : 215,
        "CharPositionInLine" : 63
      },
      "CommentCount" : 10
    },
    "qa/test-db-instance-migration/test-fixture-78/pom.xml" : {
      "ObjectId" : "f316b59816cb131469a428e739e2ed51a88d776a",
      "LastModified" : "2019-04-16T12:29:36Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " NOTE: this pulls transitive dependencies of version ${project.version} in unless\n      you declare them to be ${camunda.version.current} here ",
        "Line" : 52,
        "CharPositionInLine" : 65
      },
      "1" : {
        "Text" : " create the SQL scripts so that the files exist even if they do not exist in the distribution. (this can be the case if there are no db\n                      upgrades (yet) for a particular release ) ",
        "Line" : 146,
        "CharPositionInLine" : 68
      },
      "2" : {
        "Text" : " concanated patches for last minor version ",
        "Line" : 150,
        "CharPositionInLine" : 71
      },
      "3" : {
        "Text" : " 7.7.0 is on a clean state so we can again use the concanated patches ",
        "Line" : 151,
        "CharPositionInLine" : 98
      },
      "4" : {
        "Text" : " minor version upgrade from previous to current version ",
        "Line" : 155,
        "CharPositionInLine" : 84
      },
      "5" : {
        "Text" : " provide sql scripts ",
        "Line" : 167,
        "CharPositionInLine" : 39
      },
      "6" : {
        "Text" : " parse version properties from qa/pom.xml ",
        "Line" : 173,
        "CharPositionInLine" : 60
      },
      "7" : {
        "Text" : " now patch old version of the schema ",
        "Line" : 213,
        "CharPositionInLine" : 65
      },
      "8" : {
        "Text" : "<srcFile>${project.build.directory}/scripts-current/sql/upgrade/${database.type}_engine_${camunda.previous.majorVersion}.${camunda.previous.minorVersion}_patch_${camunda.previous.majorVersion}.${camunda.previous.minorVersion}.x_to_${camunda.previous.majorVersion}.${camunda.previous.minorVersion}.y.sql</srcFile>",
        "Line" : 214,
        "CharPositionInLine" : 340
      },
      "9" : {
        "Text" : " now perform the schema migrations ",
        "Line" : 228,
        "CharPositionInLine" : 63
      },
      "CommentCount" : 10
    },
    "qa/test-db-instance-migration/test-fixture-79/pom.xml" : {
      "ObjectId" : "9473d409b973f0544f042c7d9fd813c7cd034858",
      "LastModified" : "2019-04-16T12:29:36Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " NOTE: this pulls transitive dependencies of version ${project.version} in unless\n      you declare them to be ${camunda.version.current} here ",
        "Line" : 52,
        "CharPositionInLine" : 65
      },
      "1" : {
        "Text" : " create the SQL scripts so that the files exist even if they do not exist in the distribution. (this can be the case if there are no db\n                      upgrades (yet) for a particular release ) ",
        "Line" : 148,
        "CharPositionInLine" : 68
      },
      "2" : {
        "Text" : " concanated patches for last minor version ",
        "Line" : 152,
        "CharPositionInLine" : 71
      },
      "3" : {
        "Text" : " 7.8.0 is on a clean state so we can again use the concanated patches ",
        "Line" : 153,
        "CharPositionInLine" : 98
      },
      "4" : {
        "Text" : " minor version upgrade from previous to current version ",
        "Line" : 157,
        "CharPositionInLine" : 84
      },
      "5" : {
        "Text" : " provide sql scripts ",
        "Line" : 169,
        "CharPositionInLine" : 39
      },
      "6" : {
        "Text" : " parse version properties from qa/pom.xml ",
        "Line" : 175,
        "CharPositionInLine" : 60
      },
      "7" : {
        "Text" : " now patch old version of the schema ",
        "Line" : 215,
        "CharPositionInLine" : 65
      },
      "8" : {
        "Text" : "<srcFile>${project.build.directory}/scripts-current/sql/upgrade/${database.type}_engine_${camunda.previous.majorVersion}.${camunda.previous.minorVersion}_patch_${camunda.previous.majorVersion}.${camunda.previous.minorVersion}.x_to_${camunda.previous.majorVersion}.${camunda.previous.minorVersion}.y.sql</srcFile>",
        "Line" : 216,
        "CharPositionInLine" : 340
      },
      "9" : {
        "Text" : " now perform the schema migrations ",
        "Line" : 230,
        "CharPositionInLine" : 63
      },
      "CommentCount" : 10
    },
    "qa/test-db-instance-migration/test-migration/pom.xml" : {
      "ObjectId" : "cd9cab362440cb1e58fd6d51c3266af5e910741d",
      "LastModified" : "2019-04-16T12:29:36Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " provide sql scripts ",
        "Line" : 129,
        "CharPositionInLine" : 39
      },
      "1" : {
        "Text" : " provide sql scripts ",
        "Line" : 165,
        "CharPositionInLine" : 39
      },
      "2" : {
        "Text" : " try dropping the DB if it exists. ",
        "Line" : 183,
        "CharPositionInLine" : 63
      },
      "CommentCount" : 3
    },
    "qa/test-db-rolling-update/create-new-engine/pom.xml" : {
      "ObjectId" : "a5853b16079fc496feebddc7e9c398a4cf35b095",
      "LastModified" : "2019-04-16T12:29:36Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " NOTE: this pulls transitive dependencies of version ${project.version} in unless\n      you declare them to be ${camunda.version.current} here ",
        "Line" : 21,
        "CharPositionInLine" : 65
      },
      "1" : {
        "Text" : " create the SQL scripts so that the files exist even if they do not exist in the distribution. (this can be the case if there are no db\n                      upgrades (yet) for a particular release ) ",
        "Line" : 101,
        "CharPositionInLine" : 68
      },
      "2" : {
        "Text" : " concatenated patches for last minor version ",
        "Line" : 105,
        "CharPositionInLine" : 73
      },
      "3" : {
        "Text" : " minor version upgrade from previous to current version ",
        "Line" : 109,
        "CharPositionInLine" : 84
      },
      "4" : {
        "Text" : " provide sql scripts ",
        "Line" : 121,
        "CharPositionInLine" : 39
      },
      "5" : {
        "Text" : " parse version properties from qa/pom.xml ",
        "Line" : 127,
        "CharPositionInLine" : 60
      },
      "6" : {
        "Text" : " now patch old version of the schema ",
        "Line" : 167,
        "CharPositionInLine" : 65
      },
      "7" : {
        "Text" : " now perform the schema migrations ",
        "Line" : 181,
        "CharPositionInLine" : 63
      },
      "8" : {
        "Text" : " now perform the schema migrations ",
        "Line" : 195,
        "CharPositionInLine" : 63
      },
      "9" : {
        "Text" : " now patch new version of the schema, apply any patches explicitly ",
        "Line" : 196,
        "CharPositionInLine" : 95
      },
      "10" : {
        "Text" : " example:\n                    <srcFile>${project.build.directory}/scripts-current/sql/upgrade/${database.type}_engine_${camunda.current.majorVersion}.${camunda.current.minorVersion}_patch_${camunda.current.majorVersion}.${camunda.current.minorVersion}.0_to_${camunda.current.majorVersion}.${camunda.current.minorVersion}.1.sql</srcFile>\n                    ",
        "Line" : 199,
        "CharPositionInLine" : 24
      },
      "CommentCount" : 11
    },
    "qa/test-db-rolling-update/create-old-engine/pom.xml" : {
      "ObjectId" : "59a180d41737c9ecded1d615cbcfce33ab167861",
      "LastModified" : "2019-04-16T12:29:36Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "qa/test-db-rolling-update/pom.xml" : {
      "ObjectId" : "50df422f645de36876bf07ea147cc5eec81dcccf",
      "LastModified" : "2019-04-16T12:29:36Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "qa/test-db-rolling-update/rolling-update-util/pom.xml" : {
      "ObjectId" : "4e7550886a703d6eff19f2c0ccda52a966d90921",
      "LastModified" : "2019-04-16T12:29:36Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "qa/test-db-rolling-update/test-old-engine/pom.xml" : {
      "ObjectId" : "66604a9989ea312c63874871d91075643afdedbd",
      "LastModified" : "2019-04-16T12:29:36Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " provide sql scripts ",
        "Line" : 151,
        "CharPositionInLine" : 39
      },
      "1" : {
        "Text" : " finally drop db ",
        "Line" : 169,
        "CharPositionInLine" : 45
      },
      "CommentCount" : 2
    },
    "qa/test-db-upgrade/pom.xml" : {
      "ObjectId" : "4e1c1f4b59e230d1c81f2404c6a25753cf674941",
      "LastModified" : "2019-04-16T12:29:36Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "\n         We have to override the old camunda version, since\n         we had invalid characters in the scripts before.\n         In the version which is set as old version the invalid characters are removed.\n         The sql-maven-plugin property keepFormat is set to true so it uses\n         the present scripts, which makes it possible to test them correctly.\n\n         See CAM-6338\n    ",
        "Line" : 19,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : " parse version properties from qa/pom.xml ",
        "Line" : 127,
        "CharPositionInLine" : 60
      },
      "2" : {
        "Text" : " create the SQL scripts so that the files exist even if they do not exist in the distribution.\n                    (this can be the case if there are no db upgrades (yet) for a particular release ) ",
        "Line" : 165,
        "CharPositionInLine" : 107
      },
      "3" : {
        "Text" : " concanated patches for last minor version ",
        "Line" : 172,
        "CharPositionInLine" : 71
      },
      "4" : {
        "Text" : " 7.6.0 is on a clean state so we can again use the concanated patches ",
        "Line" : 173,
        "CharPositionInLine" : 98
      },
      "5" : {
        "Text" : " patches for current minor version if any ",
        "Line" : 177,
        "CharPositionInLine" : 70
      },
      "6" : {
        "Text" : " example:\n                      <touch file=\"${project.build.directory}/scripts-current/sql/upgrade/${database.type}_engine_${camunda.current.majorVersion}.${camunda.current.minorVersion}_patch_${camunda.current.majorVersion}.${camunda.current.minorVersion}.0_to_${camunda.current.majorVersion}.${camunda.current.minorVersion}.1.sql\" />\n                    ",
        "Line" : 180,
        "CharPositionInLine" : 24
      },
      "7" : {
        "Text" : " first: try dropping the DB ",
        "Line" : 256,
        "CharPositionInLine" : 56
      },
      "8" : {
        "Text" : " now create old version of the schema ",
        "Line" : 272,
        "CharPositionInLine" : 66
      },
      "9" : {
        "Text" : " now patch old version of the schema ",
        "Line" : 286,
        "CharPositionInLine" : 65
      },
      "10" : {
        "Text" : " only add patch scripts which are after the camunda.version.old ",
        "Line" : 287,
        "CharPositionInLine" : 92
      },
      "11" : {
        "Text" : " example:\n                      <srcFile>${project.build.directory}/scripts-current/sql/upgrade/${database.type}_engine_${camunda.old.majorVersion}.${camunda.old.minorVersion}_patch_${camunda.old.majorVersion}.${camunda.old.minorVersion}.X_to_${camunda.old.majorVersion}.${camunda.old.minorVersion}.Y.sql</srcFile>\n                    ",
        "Line" : 290,
        "CharPositionInLine" : 24
      },
      "12" : {
        "Text" : "<srcFile>${project.build.directory}/scripts-current/sql/upgrade/${database.type}_identity_${camunda.old.majorVersion}.${camunda.old.minorVersion}_patch.sql</srcFile>",
        "Line" : 293,
        "CharPositionInLine" : 193
      },
      "13" : {
        "Text" : " now perform the schema migrations ",
        "Line" : 305,
        "CharPositionInLine" : 63
      },
      "14" : {
        "Text" : " clear authorization table when upgrading from 7.4 to 7.5 ",
        "Line" : 308,
        "CharPositionInLine" : 86
      },
      "15" : {
        "Text" : " now patch new version of the schema, apply any patches explicitly ",
        "Line" : 321,
        "CharPositionInLine" : 95
      },
      "16" : {
        "Text" : " example:\n                    <srcFile>${project.build.directory}/scripts-current/sql/upgrade/${database.type}_engine_${camunda.current.majorVersion}.${camunda.current.minorVersion}_patch_${camunda.current.majorVersion}.${camunda.current.minorVersion}.0_to_${camunda.current.majorVersion}.${camunda.current.minorVersion}.1.sql</srcFile>\n                    ",
        "Line" : 324,
        "CharPositionInLine" : 24
      },
      "17" : {
        "Text" : " finally drop db ",
        "Line" : 336,
        "CharPositionInLine" : 45
      },
      "18" : {
        "Text" : " http://jira.codehaus.org/browse/ACT-315 ",
        "Line" : 354,
        "CharPositionInLine" : 109
      },
      "19" : {
        "Text" : " http://jira.codehaus.org/browse/ACT-427 ",
        "Line" : 355,
        "CharPositionInLine" : 108
      },
      "20" : {
        "Text" : " http://jira.codehaus.org/browse/ACT-485 ",
        "Line" : 356,
        "CharPositionInLine" : 123
      },
      "CommentCount" : 21
    },
    "qa/test-db-util/pom.xml" : {
      "ObjectId" : "368d615d20aa45933f2801026623691c1f272a57",
      "LastModified" : "2019-04-16T12:29:36Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "qa/test-old-engine/pom.xml" : {
      "ObjectId" : "2bf7cdd072810a2f92e01d22b4fdca7b3e628adc",
      "LastModified" : "2019-04-16T12:29:36Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " legacy dependency which was provided by the parent pom up to 7.10.x ",
        "Line" : 134,
        "CharPositionInLine" : 81
      },
      "1" : {
        "Text" : "UNPACKING",
        "Line" : 233,
        "CharPositionInLine" : 27
      },
      "2" : {
        "Text" : "UNPACK OLD TEST SUITE",
        "Line" : 239,
        "CharPositionInLine" : 43
      },
      "3" : {
        "Text" : "UNPACK NEW SQL SCRIPTS",
        "Line" : 259,
        "CharPositionInLine" : 44
      },
      "4" : {
        "Text" : "SQL EXECUTION",
        "Line" : 283,
        "CharPositionInLine" : 31
      },
      "5" : {
        "Text" : "DROP DB IF PRESENT",
        "Line" : 289,
        "CharPositionInLine" : 40
      },
      "6" : {
        "Text" : "CREATE NEW SCHEMA",
        "Line" : 306,
        "CharPositionInLine" : 39
      },
      "7" : {
        "Text" : "DROP DB AFTER TEST",
        "Line" : 321,
        "CharPositionInLine" : 40
      },
      "8" : {
        "Text" : " http://jira.codehaus.org/browse/ACT-315 ",
        "Line" : 349,
        "CharPositionInLine" : 109
      },
      "9" : {
        "Text" : " http://jira.codehaus.org/browse/ACT-427 ",
        "Line" : 350,
        "CharPositionInLine" : 108
      },
      "10" : {
        "Text" : " http://jira.codehaus.org/browse/ACT-485 ",
        "Line" : 351,
        "CharPositionInLine" : 123
      },
      "11" : {
        "Text" : "Exclude test class, because 4 tests fail and are removed on later patch versions ",
        "Line" : 353,
        "CharPositionInLine" : 105
      },
      "12" : {
        "Text" : " commons-email 1.5 update ",
        "Line" : 356,
        "CharPositionInLine" : 50
      },
      "CommentCount" : 13
    },
    "qa/tomcat-runtime/pom.xml" : {
      "ObjectId" : "da358d97af1971caf598b7e29541cf67410dee7f",
      "LastModified" : "2019-04-16T12:29:36Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "\n        Make sure it comes after assembly in the build.\n        Leave scope test, otherwise libs from pom will be copied into Tomcat's lib folder\n      ",
        "Line" : 20,
        "CharPositionInLine" : 10
      },
      "1" : {
        "Text" : "\n      database drivers\n      we deploy all and only activate one through server.xml\n    ",
        "Line" : 31,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : " copy filtered configuration resources ",
        "Line" : 107,
        "CharPositionInLine" : 57
      },
      "CommentCount" : 3
    },
    "qa/wildfly-runtime/pom.xml" : {
      "ObjectId" : "e5ab362bf7c9b977e560da0a413a035e3fb7ad31",
      "LastModified" : "2019-04-16T12:29:36Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "\n      database drivers\n      we deploy all and only activate one with a *-ds.xml database deployment\n    ",
        "Line" : 19,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : " server specific ",
        "Line" : 55,
        "CharPositionInLine" : 31
      },
      "2" : {
        "Text" : " create sources to be used by camunda-bpm-platform-ee ",
        "Line" : 72,
        "CharPositionInLine" : 68
      },
      "3" : {
        "Text" : " exclude otherwise there would be duplicates in -sources.jar ",
        "Line" : 108,
        "CharPositionInLine" : 83
      },
      "4" : {
        "Text" : " make sure it comes after assembly in the build ",
        "Line" : 134,
        "CharPositionInLine" : 66
      },
      "5" : {
        "Text" : " copy modules ",
        "Line" : 252,
        "CharPositionInLine" : 42
      },
      "6" : {
        "Text" : " copy all files again, but this only matches fox files and this treatment makes is maven 2/3 compatible => timestamped snapshot ",
        "Line" : 261,
        "CharPositionInLine" : 156
      },
      "7" : {
        "Text" : " replace database versions ",
        "Line" : 272,
        "CharPositionInLine" : 55
      },
      "8" : {
        "Text" : " make sure it comes after assembly in the build ",
        "Line" : 293,
        "CharPositionInLine" : 66
      },
      "9" : {
        "Text" : " copy modules ",
        "Line" : 381,
        "CharPositionInLine" : 42
      },
      "10" : {
        "Text" : " copy all files again, but this only matches fox files and this treatment makes is maven 2/3 compatible => timestamped snapshot ",
        "Line" : 390,
        "CharPositionInLine" : 156
      },
      "11" : {
        "Text" : " replace database versions ",
        "Line" : 401,
        "CharPositionInLine" : 55
      },
      "CommentCount" : 12
    },
    "webapps/h2-webapp/pom.xml" : {
      "ObjectId" : "cc5126e9a4a6adc34604b69b66b62f8290e9571e",
      "LastModified" : "2019-04-16T12:29:36Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "MAVEN" : 75
  },
  "ElapsedTime" : 8304
}