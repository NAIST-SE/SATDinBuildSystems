{
  "Repository" : "62684148",
  "Revision" : "HEAD",
  "ObjectId" : "1b09894a888e9581f0049dcada081691dec4de13",
  "CommitTime" : "2019-04-18T23:50:21Z",
  "Files" : {
    "lib/fbjni/src/main/cpp/CMakeLists.txt" : {
      "ObjectId" : "4b8d44ed5e71b0d62158e63abb3c795309383329",
      "LastModified" : "2018-07-30T16:34:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2014-present, Facebook, Inc.\n\n#\n\n# This source code is licensed under the MIT license found in the\n\n# LICENSE file in the root directory of this source tree.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/fbjni/src/main/java/com/facebook/jni/fbjni.pro" : {
      "ObjectId" : "5b5b6454d32adf939a1fb8b922915d6242afe38b",
      "LastModified" : "2017-09-29T21:18:10Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# For common use cases for the hybrid pattern, keep symbols which may\n\n# be referenced only from C++.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/yoga/src/main/cpp/CMakeLists.txt" : {
      "ObjectId" : "4466b345d561127a7206d889154ed4e148ef9e89",
      "LastModified" : "2018-06-26T12:03:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2014-present, Facebook, Inc.\n\n# All rights reserved.\n\n#\n\n# This source code is licensed under the BSD-style license found in the\n\n# LICENSE file in the root directory of this source tree. An additional grant\n\n# of patent rights can be found in the PATENTS file in the same directory.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/yogajni/src/main/cpp/CMakeLists.txt" : {
      "ObjectId" : "856c0415bc19a2989f414f64cf02a3826800659a",
      "LastModified" : "2019-03-04T09:32:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2017-present, Facebook, Inc.\n\n#\n\n# This source code is licensed under the Apache 2.0 license found in the\n\n# LICENSE file in the root directory of this source tree.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# configure import libs\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "litho-annotations/src/main/java/com/facebook/proguard/annotations/proguard_annotations.pro" : {
      "ObjectId" : "b1ef5f7ce946781b05b0dbf0d29ce35b19b97534",
      "LastModified" : "2017-09-29T21:18:10Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Keep our interfaces so they can be used by other ProGuard rules.\n\n# See http://sourceforge.net/p/proguard/bugs/466/\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Do not strip any method/class that is annotated with @DoNotStrip\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tools/build_defs/oss/fb_native_wrapper.bzl" : {
      "ObjectId" : "4e251dc0a4733428586d47c270a0f556193a6cb4",
      "LastModified" : "2019-03-04T09:32:21Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "tools/build_defs/oss/glob_defs.bzl" : {
      "ObjectId" : "97950bfa462f49a320744eca05b95a84b16bd6c6",
      "LastModified" : "2019-04-01T10:00:43Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "\"\"\"Provides utility macros for working with globs.\"\"\"",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\"Joins one or more path components.\"\"\"",
        "Line" : 4,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# absolute",
        "Line" : 8,
        "CharPositionInLine" : 31
      },
      "3" : {
        "Text" : "\"\"\"Returns a dict of sub-directory relative paths to full paths.\n\n    The subdir_glob() function is useful for defining header maps for C/C++\n    libraries which should be relative the given sub-directory.\n    Given a list of tuples, the form of (relative-sub-directory, glob-pattern),\n    it returns a dict of sub-directory relative paths to full paths.\n\n    Please refer to native.glob() for explanations and examples of the pattern.\n\n    Args:\n      glob_specs: The array of tuples in form of\n        (relative-sub-directory, glob-pattern inside relative-sub-directory).\n        type: List[Tuple[str, str]]\n      exclude: A list of patterns to identify files that should be removed\n        from the set specified by the first argument. Defaults to [].\n        type: Optional[List[str]]\n      prefix: If is not None, prepends it to each key in the dictionary.\n        Defaults to None.\n        type: Optional[str]\n\n    Returns:\n      A dict of sub-directory relative paths to full paths.\n    \"\"\"",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "tools/build_defs/oss/litho_defs.bzl" : {
      "ObjectId" : "02f30fbfaf93a57564cd68e76cae8575e03c951b",
      "LastModified" : "2019-04-02T19:39:11Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Java source",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Test source",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Java source with local upstream",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Resources",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Libraries",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Fresco",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Annotation processors",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Sample app",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Other targets",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Targets that sometimes exist and sometimes don't",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "\"\"\"Tests that can successfully run from the library root folder.\"\"\"",
        "Line" : 194,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# T41117446 Remove after AndroidX conversion is done.",
        "Line" : 206,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "\"\"\"Uses native java_test for OSS project.\"\"\"",
        "Line" : 216,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# T41117446 Remove after AndroidX conversion is done.",
        "Line" : 218,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# This has no meaning in OSS.",
        "Line" : 225,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# T41117446 Remove after AndroidX conversion is done.",
        "Line" : 228,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "\"\"\"Delegates to cxx_library for OSS project.\"\"\"",
        "Line" : 235,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# T41117446 Remove after AndroidX conversion is done.",
        "Line" : 237,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "\"\"\"Delegates to native android_resource rule.\"\"\"",
        "Line" : 242,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# T41117446 Remove after AndroidX conversion is done.",
        "Line" : 244,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "\"\"\"Delegates to native java_library rule.\"\"\"",
        "Line" : 249,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# T41117446 Remove after AndroidX conversion is done.",
        "Line" : 251,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "\"\"\"Delegates to native android_library rule.\"\"\"",
        "Line" : 256,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# T41117446 Remove after AndroidX conversion is done.",
        "Line" : 258,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "\"\"\"Delegates to native prebuilt_cxx_library.\"\"\"",
        "Line" : 263,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "\"\"\"\n    We don't support this in the OSS build for now.\n    Please use Gradle instead.\n    \"\"\"",
        "Line" : 267,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# T41117446 Remove after AndroidX conversion is done.",
        "Line" : 272,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# T41117446 Remove after AndroidX conversion is done.",
        "Line" : 278,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# This target is only used in open source",
        "Line" : 283,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# FIXME",
        "Line" : 314,
        "CharPositionInLine" : 27
      },
      "30" : {
        "Text" : "# This target is only used in open source and will break the monobuild\n# because we cannot define `soname` multiple times.",
        "Line" : 342,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# FIXME",
        "Line" : 366,
        "CharPositionInLine" : 27
      },
      "32" : {
        "Text" : "# This target is only used in open source and will break the monobuild\n# because we cannot define `soname` multiple times.",
        "Line" : 377,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# FIXME",
        "Line" : 400,
        "CharPositionInLine" : 27
      },
      "CommentCount" : 34
    }
  },
  "FileTypes" : {
    "CMAKE" : 3,
    "QMAKE" : 2,
    "BAZEL" : 3
  },
  "ElapsedTime" : 6819
}