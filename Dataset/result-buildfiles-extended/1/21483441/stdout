{
  "Repository" : "21483441",
  "Revision" : "HEAD",
  "ObjectId" : "cdf587080c373ba5544cf4b9c3c7b1f6d2287cb8",
  "CommitTime" : "2019-04-15T18:14:22Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "31e705baaf0e86f6e35c84e8a9a84bc773e1897f",
      "LastModified" : "2019-03-27T20:56:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMAKE project for openrct2\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Options\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# LIST of supported flags, use SET_CHECK_CXX_FLAGS() to apply to target.\n\n# Use ADD_CHECK_CXX_COMPILER_FLAG() to add to list.\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Describe current version in terms of closest tag\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Define current git branch\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Define short commit hash\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Defines\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Disable -Wsuggest-final-types via pragmas where due.\n",
        "Line" : 113,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Disable -Wsuggest-final-methods via pragmas where due.\n",
        "Line" : 118,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Don't build discord's examples, some of which are in C and do not honour\n\n# the flags we set for C++. Also we don't use the provided examples.\n",
        "Line" : 123,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Copied from https://github.com/opencv/opencv/blob/dcdd6af5a856826fe62c95322145731e702e54c5/cmake/OpenCVDetectCXXCompiler.cmake#L63-L70\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Check if a flag exists and add it to the list of compiler (so, not linker) options\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Add check flags to a compile TARGET\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Check if a flag exists and add it to the compiler and the linker options\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# C4244: 'conversion_type': conversion from 'type1' to 'type2', possible loss of data\n\n# C4068: unknown pragma\n",
        "Line" : 173,
        "CharPositionInLine" : 54
      },
      "15" : {
        "Text" : "# Disabled due to problems compiling OpenSSL on macOS.\n\n# ADD_CHECK_CXX_COMPILER_FLAG(CMAKE_CXX_FLAGS CXX_WARN_DOCUMENTATION -Wdocumentation)\n",
        "Line" : 197,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Items below are not supported by ICC\n",
        "Line" : 200,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Do not enable for MinGW, as its headers contain redundant declarations of builtin functions\n",
        "Line" : 202,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# -Wstrict-overflow is only active when -fstrict-overflow is enabled, but -fstrict-overflow\n\n# is enabled on -O2, -O3, -Os. This should help catch bugs locally before they reach Travis\n\n# As of 2a435bf -Wstrict-overflow=1 passes, but higher values do not.\n",
        "Line" : 207,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Compiler flags\n",
        "Line" : 213,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# On mingw all code is already PIC, this will avoid compiler error on redefining this option\n",
        "Line" : 223,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Include sub-projects\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# g2\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Include tests\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Install\n\n# Don't recurse, grab all *.txt and *.md files\n",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# CMake does not allow specifying a dependency chain which includes built-in\n\n# targets, like `install`, so we have to trick it and execute dependency ourselves.\n",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# If openrct2.parkseq or data/title/ exists, assume all the title sequences are already present\n",
        "Line" : 269,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# If rct2.wtrcyan.json or data/object/ exists, assume all the objects are already present\n",
        "Line" : 280,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 28
    },
    "cmake/ipo.cmake" : {
      "ObjectId" : "7c77c62a20289a80629e5601107062c01d4d204c",
      "LastModified" : "2019-01-27T12:44:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Helpers for inter-procedural optimizations (IPO)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Enabled IPO for a LIST of CMake build types.\n\n# Provides IPO_BUILD_ENABLED to the parent scope.\n\n# Make sure to supply the build types in UPPER CASE\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Sets appropriate IPO properties on target _target\n\n# if IPO is supported and enabled for the current build.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/platform.cmake" : {
      "ObjectId" : "b7274fa8271c077380192389ede367d9ad6ad91e",
      "LastModified" : "2019-02-07T22:40:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Helpers for linking platform specific libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/openrct2-android/app/src/main/CMakeLists.txt" : {
      "ObjectId" : "f626fe0d425f3fbcfbf71eb4cbe43e7fba057b32",
      "LastModified" : "2019-02-07T22:40:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copied from https://github.com/opencv/opencv/blob/dcdd6af5a856826fe62c95322145731e702e54c5/cmake/OpenCVDetectCXXCompiler.cmake#L63-L70\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# now build app's shared lib\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fix SpeexDSP compilation\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/openrct2-cli/CMakeLists.txt" : {
      "ObjectId" : "7fb991eaac196b0183097e684b3b665a756698ae",
      "LastModified" : "2019-02-07T22:40:46Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/openrct2-ui/CMakeLists.txt" : {
      "ObjectId" : "8779ba6971350d3ce42e3c5b985311ec4e3ae09e",
      "LastModified" : "2019-02-07T22:40:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMAKE project for openrct2-ui (UI build of OpenRCT2)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Options\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Third party libraries\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# GL doesn't work nicely with macOS, while find_package doesn't work with multiarch on Ubuntu.\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Sources\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Includes\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Compiler flags\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# mingw complains about \"%zu\" not being a valid format specifier for printf, unless we\n\n# tell it that it is\n",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# mingw does not provide proper CMake information like other configurations\n",
        "Line" : 78,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# Add DPI-aware manifest\n\n# HACK Add /MANIFEST:NO first to prevent cmake from adding its own manifest arguments\n",
        "Line" : 88,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Defines\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Makes OpenGL function get queried in run-time rather than linked-in\n",
        "Line" : 100,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Add headers check to verify all headers carry their dependencies.\n\n# Only valid for Clang for now:\n\n# - GCC 8 does not support -Wno-pragma-once-outside-header\n\n# - Other compilers status unknown\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# OpenGLAPIProc.h is not meant to be included directly.\n",
        "Line" : 113,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 15
    },
    "src/openrct2/CMakeLists.txt" : {
      "ObjectId" : "157120fa1585793000d7f69091179c9c3093078b",
      "LastModified" : "2019-02-07T22:40:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMAKE project for libopenrct2 (core OpenRCT2 component)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Needed for linking with non-broken OpenSSL on Apple platforms\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Third party libraries\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Third party libraries (optional)\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Sources\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Libraries\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Include libdl for dlopen\n",
        "Line" : 102,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# our HTTP implementation requires use of threads\n",
        "Line" : 111,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# For unicode code page conversion.\n",
        "Line" : 126,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# This is ugly hack to work around https://bugs.launchpad.net/ubuntu/+source/gcc-5/+bug/1568899.\n\n# Once C++17 is enabled (and thus old compilers are no longer supported, this needs to be gone.\n\n# We cannot simply detect the _compiler_ version, as the bug exists with the C++ _library_\n",
        "Line" : 136,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Includes\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# To avoid unnecessary rebuilds set the current branch and\n\n# short sha1 only for the two files that use these\n\n# definitions: Version.cpp and Crash/Platform.cpp\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Add headers check to verify all headers carry their dependencies.\n\n# Only valid for Clang for now:\n\n# - GCC 8 does not support -Wno-pragma-once-outside-header\n\n# - Other compilers status unknown\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Dummy target to ease invocation\n",
        "Line" : 217,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 15
    },
    "test/testpaint/CMakeLists.txt" : {
      "ObjectId" : "11c56ba2e1b53827fc293a16c62097128e8b2b54",
      "LastModified" : "2019-02-07T22:40:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMAKE project for testpaint\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For Linux we have to use objcopy to wrap regular binaries into a linkable\n\n# format. We use specific section names which are then referenced in a\n\n# bespoke linker script so they can be placed at predefined VMAs.\n",
        "Line" : 27,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# can't use GLOB here, as the files don't exist yet at cmake-time\n",
        "Line" : 49,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Disable optimizations for addresses.c for all compilers, to allow optimized\n\n# builds without need for -fno-omit-frame-pointer\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# For unicode code page conversion\n",
        "Line" : 91,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Only use custom linker script for 32 bit builds. For 64 bit builds, it should still _compile_.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "test/tests/CMakeLists.txt" : {
      "ObjectId" : "842b6e7e544f0e38de38e7fad1da6e59ab044cf3",
      "LastModified" : "2019-03-03T17:13:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Bootstrap GoogleTest\n",
        "Line" : 13,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "# Use googletest with https://github.com/google/googletest/pull/1045 applied\n",
        "Line" : 16,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# Specify include dir\n",
        "Line" : 27,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Disable install step\n",
        "Line" : 39,
        "CharPositionInLine" : 16
      },
      "4" : {
        "Text" : "# Wrap download, configure and build steps in a script to log output\n",
        "Line" : 41,
        "CharPositionInLine" : 16
      },
      "5" : {
        "Text" : "# Specify include dir\n",
        "Line" : 47,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Library\n",
        "Line" : 50,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Some most common files required in tests\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Create a re-usable library to save some compilation time\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Setup testdata. It should be fine here, as the only way to reach here is by explicitly requesting tests.\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# For unicode code page conversion (required for ini and string tests)\n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Start of our tests\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# sawyercoding test\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# LanguagePack test\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Include libdl for dlopen\n",
        "Line" : 125,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# INI test\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# String test\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Localisation test\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Crypt tests\n",
        "Line" : 166,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# ImageImporter tests\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Ride ratings test\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Multi-launch test\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Tile element test\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Replay tests\n",
        "Line" : 211,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# Pathfinding test\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# LoadSave test\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 26
    }
  },
  "FileTypes" : {
    "CMAKE" : 9
  },
  "ElapsedTime" : 3909
}