{
  "Repository" : "26364533",
  "Revision" : "HEAD",
  "ObjectId" : "16109e3ebd59d3bea2bc6170e7165b42a968ef7d",
  "CommitTime" : "2018-10-04T18:56:53Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "b4eac0e327e0c6b3559e4de3081c051f3159e658",
      "LastModified" : "2018-10-03T15:53:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# version\n\n# CMake 3.1\n",
        "Line" : 13,
        "CharPositionInLine" : 10
      },
      "1" : {
        "Text" : "#### Default build type\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#### CGoGN PATH\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#### Here are located the FindPackages that we need\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#### Compile Options\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "### External Templates\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "### C++ 11/14/17\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# drop down list with cmake-gui\n",
        "Line" : 60,
        "CharPositionInLine" : 67
      },
      "8" : {
        "Text" : "#### ThirdParty options\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#### Continuous integration options\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## Position independent code (-fPIC)\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#### RPATH\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# RPATH is a field in ELF binaries that is used as a hint by the system\n\n# loader to find needed shared libraries.\n\n#\n\n# In the build directory, cmake creates binaries with absolute paths in\n\n# RPATH.  And by default, it strips RPATH from installed binaries.  Here we\n\n# use CMAKE_INSTALL_RPATH to set a relative RPATH.  By doing so, we avoid\n\n# the need to play with LD_LIBRARY_PATH to get applications to run.\n",
        "Line" : 109,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "## Deduce build type of not forced by setting the CMAKE_BUILD_TYPE var\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#### Endianness detection\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#### Link time optimisation\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "cgogn/core/CMakeLists.txt" : {
      "ObjectId" : "53b2c9a3c511bec634d431d20311b35bee5bc41d",
      "LastModified" : "2018-10-04T11:50:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# use of target_compile_options to have transitive flags\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# g++\n",
        "Line" : 95,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Clang\n",
        "Line" : 100,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# MSVC\n\n#Specifies the level of warning to be generated by the compiler. Valid warning levels for n range from 0 to 4.\n",
        "Line" : 106,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# C4127 - conditional expression is constant\n",
        "Line" : 109,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# C4714 - marked as __forceinline but not inlined\n",
        "Line" : 111,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# C4505 - unreferenced local function has been removed (impossible to deactive selectively)\n",
        "Line" : 113,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# C4910 - __declspec(dllexport)' and 'extern' are incompatible on an explicit instantiation\n",
        "Line" : 115,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# C4251 - 'identifier' : class 'type' needs to have dll-interface to be used by clients of class 'type2'\n",
        "Line" : 117,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# Clang\n",
        "Line" : 131,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Ignore warnings about global variables ctors and dtors\n",
        "Line" : 138,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Ignore warnings about global destructor\n",
        "Line" : 140,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Turn this on to detect documentation errors (very useful)\n",
        "Line" : 142,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Ignore unknown documentation command (There are nrecognized but valid doxygen commands !)\n",
        "Line" : 144,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Ignore warnings about C++98 compatibility\n",
        "Line" : 146,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Ignore warnings about c++98 compat pedantic mode\n",
        "Line" : 148,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Ignore warnings about C++11 extensions (cgogn is promoting c++11 )\n",
        "Line" : 150,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "#else()\n\n#\ttarget_compile_definitions(${PROJECT_NAME} PUBLIC $<$<CXX_COMPILER_ID:GNU>:_GLIBCXX_USE_CXX11_ABI=0>)\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# see https://gcc.gnu.org/onlinedocs/libstdc++/manual/using_macros.html\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## CGOGN_WIN_VER : has value 61 for windows 7, 62 for windows 8, 63 for windows 8.1, 100 for windows 10\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Clang may need -fopenmp=libiomp5 instead, can't be detected here without CMake 3.9\n",
        "Line" : 200,
        "CharPositionInLine" : 3
      },
      "21" : {
        "Text" : "# Pass the required flags to code\n",
        "Line" : 208,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# Profiler compilation flags\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Code coverage compilation flags\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Compilation flags for Google's AddressSanitizer\n\n# These flags can only be specified for dynamic builds\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#TODO Use native GCC stack smash Protection and buffer overflow detection in debug when no asan ??\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Compilation flags for Google's ThreadSanitizer\n\n# Does not work for the moment: cannot figure out how to link with library libtsan\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# VisualStudio nice source organisation\n",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 28
    },
    "cgogn/core/examples/CMakeLists.txt" : {
      "ObjectId" : "ea560c23a00f28054cc3ca99ed0162a068528065",
      "LastModified" : "2017-09-27T15:48:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cgogn/core/examples/chunk_array/CMakeLists.txt" : {
      "ObjectId" : "cd5736a0849e3301ab9802ae637a43de3c7b62d0",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cgogn/core/examples/map/CMakeLists.txt" : {
      "ObjectId" : "85d4ab1a6e0f1ce46a97b1dd26d8bf07c3af22a6",
      "LastModified" : "2018-09-25T06:36:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cgogn/core/examples/utils/CMakeLists.txt" : {
      "ObjectId" : "284e8a17009db638103b8c150f978fd0ffad903c",
      "LastModified" : "2018-09-25T06:36:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cgogn/core/tests/CMakeLists.txt" : {
      "ObjectId" : "44135217c53672d673b2ebebd259176a221ce7f5",
      "LastModified" : "2018-09-25T06:36:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cgogn/geometry/CMakeLists.txt" : {
      "ObjectId" : "7e7728edca4d28f72f97d4f3f78bfea7f5796a6a",
      "LastModified" : "2018-10-04T11:50:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#$<BUILD_INTERFACE:${CGOGN_THIRDPARTY_EIGEN3_INCLUDE_DIR}>\n",
        "Line" : 61,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# VisualStudio nice source organisation\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cgogn/geometry/examples/CMakeLists.txt" : {
      "ObjectId" : "487c52cd0531eebe9f58e40d3016cf42d0d9b659",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cgogn/geometry/tests/CMakeLists.txt" : {
      "ObjectId" : "869a637231cebc2397c63ee9486d27fea99f3940",
      "LastModified" : "2018-09-25T06:36:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cgogn/io/CMakeLists.txt" : {
      "ObjectId" : "082912d5743476f57f0b9d4abdd28d7c7849d27f",
      "LastModified" : "2018-10-04T11:50:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# VisualStudio nice source organisation\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cgogn/io/examples/CMakeLists.txt" : {
      "ObjectId" : "143524314157615acd5c9db9df229a496f0d78c5",
      "LastModified" : "2018-09-25T06:36:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cgogn/io/tests/CMakeLists.txt" : {
      "ObjectId" : "5f8604f1a7dd0ac9f78f55eb0d6d1000fb91eecd",
      "LastModified" : "2018-09-29T07:32:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cgogn/modeling/CMakeLists.txt" : {
      "ObjectId" : "144e79f463b9adf9be47ff5d5155e64f3d04c889",
      "LastModified" : "2018-10-04T11:50:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cgogn/modeling/examples/CMakeLists.txt" : {
      "ObjectId" : "a168901eabb1fbf4634864868c688b2ee571dd27",
      "LastModified" : "2018-09-25T06:36:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cgogn/modeling/tests/CMakeLists.txt" : {
      "ObjectId" : "cbcd0e1ce0c9f25a495192dcadd0fdc5196cfd01",
      "LastModified" : "2018-09-25T06:36:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cgogn/rendering/CMakeLists.txt" : {
      "ObjectId" : "38ff6d1ee54b5f0b86b0db64f6dbf9630428e301",
      "LastModified" : "2018-10-04T11:50:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#CMake will handle .qrc files added as target sources\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# VisualStudio nice source organisation\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cgogn/rendering/examples/CMakeLists.txt" : {
      "ObjectId" : "d07c021873786930b8a896192cc8ac739ee606ea",
      "LastModified" : "2018-09-25T06:36:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cgogn/topology/CMakeLists.txt" : {
      "ObjectId" : "76871c462cc9208816b800b5b5d1e2653016f2d3",
      "LastModified" : "2018-10-04T11:50:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# VisualStudio nice source organisation\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cgogn/topology/examples/CMakeLists.txt" : {
      "ObjectId" : "52089b255747845d232eb9261b1c03307cf2838b",
      "LastModified" : "2018-09-25T06:36:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/CheckSIMDFeatures.cmake" : {
      "ObjectId" : "9a8e7add9cfaec6e6e658f77700db0c7bf367ba6",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# check_marchnative(HAVE_MARCH_NATIVE)\n",
        "Line" : 204,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# if (HAVE_MARCH_NATIVE)\n\n# \tmessage(STATUS \"-march=native flag support detected.\")\n\n# \tset(CGOGN_SSE_FLAGS \"${CGOGN_SSE_FLAGS} -march=native\")\n\n# endif()\n",
        "Line" : 213,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Setting -ffloat-store to alleviate 32bit vs 64bit discrepancies on non-SSE platforms.\n",
        "Line" : 240,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 3
    },
    "cmake/EnableCoverageReport.cmake" : {
      "ObjectId" : "0ae559d7ec370d843b05187420ce4f3aae2f219c",
      "LastModified" : "2015-12-19T20:42:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Creates a special coverage build type and target on GCC.\n\n#\n\n# Defines a function ENABLE_COVERAGE_REPORT which generates the coverage target\n\n# for selected targets. Optional arguments to this function are used to filter\n\n# unwanted results using globbing expressions. Moreover targets with tests for\n\n# the source code can be specified to trigger regenerating the report if the\n\n# test has changed\n\n#\n\n# ENABLE_COVERAGE_REPORT(TARGETS target... [FILTER filter...] [TESTS test targets...])\n\n#\n\n# To generate a coverage report first build the project with\n\n# CMAKE_BUILD_TYPE=coverage, then call make test and afterwards make coverage.\n\n#\n\n# The coverage report is based on gcov. Depending on the availability of lcov\n\n# a HTML report will be generated and/or an XML report of gcovr is found.\n\n# The generated coverage target executes all found solutions. Special targets\n\n# exist to create e.g. only the xml report: coverage-xml.\n\n#\n\n# Copyright (C) 2010 by Johannes Wienke <jwienke at techfak dot uni-bielefeld dot de>\n\n#\n\n# This file may be licensed under the terms of the\n\n# GNU Lesser General Public License Version 3 (the ``LGPL''),\n\n# or (at your option) any later version.\n\n#\n\n# Software distributed under the License is distributed\n\n# on an ``AS IS'' basis, WITHOUT WARRANTY OF ANY KIND, either\n\n# express or implied. See the LGPL for the specific language\n\n# governing rights and limitations.\n\n#\n\n# You should have received a copy of the LGPL along with this\n\n# program. If not, go to http://www.gnu.org/licenses/lgpl.html\n\n# or write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n\n#\n\n# The development of this software was supported by:\n\n#   CoR-Lab, Research Institute for Cognition and Robotics\n\n#     Bielefeld University\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# argument parsing\n\n# PARSE_ARGUMENTS(ARG \"FILTER;TARGETS;TESTS\" \"\" ${ARGN})\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# decide if there is any tool to create coverage data\n",
        "Line" : 61,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# create coverage build type\n",
        "Line" : 75,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# instrument targets\n",
        "Line" : 80,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# html report\n",
        "Line" : 84,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# set up coverage target\n",
        "Line" : 89,
        "CharPositionInLine" : 12
      },
      "7" : {
        "Text" : "# filter unwanted stuff\n",
        "Line" : 98,
        "CharPositionInLine" : 12
      },
      "8" : {
        "Text" : "# xml coverage report\n",
        "Line" : 128,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# gcovr cannot write directly to a file so the execution needs to\n\n# be wrapped in a cmake file that generates the file output\n",
        "Line" : 133,
        "CharPositionInLine" : 12
      },
      "10" : {
        "Text" : "# provide a global coverage target executing both steps if available\n",
        "Line" : 150,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 11
    },
    "cmake/GenerateCppcheck.cmake" : {
      "ObjectId" : "960ea727a0028a2789f1afc7fc3c43edecaaa4c2",
      "LastModified" : "2016-01-06T20:54:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Generate a cppcheck documentation for a project.\n\n# The function GENERATE_CPPCHECK is provided to create a \"cppcheck\" target that\n\n# performs static code analysis using the cppcheck utility program.\n\n#\n\n# GENERATE_CPPCHECK(SOURCES <sources to check...>\n\n#                   [SUPPRESSION_FILE <file>]\n\n#                   [ENABLE_IDS <id...>]\n\n#                   [TARGET_NAME <name>]\n\n#                   [INCLUDES <dir...>]\n\n#                   [INLINE_SUPPRESSION]\n\n#                   [SYSTEM_INCLUDE_WARNING_SUPPRESSION]\n\n#                   [HTML_REPORT])\n\n#\n\n# @brief Generates a target \"cppcheck\" that executes cppcheck on the specified \n\n# sources.\n\n#\n\n# @details \n\n# Cppcheck will be executed with CMAKE_CURRENT_SOURCE_DIR as working directory.\n\n# This function can always be called, even if no cppcheck was found. Then no\n\n# target is created.\n\n#\n\n# @param[in]    SOURCES\n\n#\n\n# @param[in]    SUPPRESSION_FILE   (required)  may be give additionally to \n\n# specify suppressions for cppcheck. The sources mentioned in the suppression \n\n# file must be in the same format like given for SOURCES. This means if you \n\n# specified them relative to CMAKE_CURRENT_SOURCE_DIR, then the same relative \n\n# paths must be used in the suppression file.\n\n#\n\n# @param[in]    ENABLE_IDS  allows to specify which additional cppcheck \n\n# check ids to execute, e.g. all or style. They are combined with AND.\n\n#\n\n# @param[in]    TARGET_NAME a different name for the generated check target can \n\n# be specified. This is useful if several calles to this function are made in one\n\n# CMake project, as otherwise the target names collide.\n\n#\n\n# @param[in]    INCLUDES    additional include directories for the cppcheck \n\n# program can be given.\n\n#\n\n# @param[in]    INLINE_SUPPRESSION  is set, cppcheck inline-suppression comments \n\n# are parsed.\n\n#\n\n# @param[in]    SYSTEM_INCLUDE_WARNING_SUPPRESSION\n\n#\n\n# @param[in]    HTML_REPORT\n\n#\n\n# Copyright (C) 2011 by Johannes Wienke <jwienke at techfak dot uni-bielefeld dot de>\n\n# Copyright (C) 2016 by Lionel Untereiner <untereiner dot lionel at gmail dot com>\n\n#\n\n# This program is free software; you can redistribute it\n\n# and/or modify it under the terms of the GNU General\n\n# Public License as published by the Free Software Foundation;\n\n# either version 2, or (at your option)\n\n# any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# parse target name\n",
        "Line" : 78,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# write a list file containing all sources to check for the call to\n\n# cppcheck\n",
        "Line" : 89,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# MESSAGE(STATUS \"Using sources file ${SOURCE}\")\n",
        "Line" : 97,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : "# prepare a cmake wrapper to write the stderr output of cppcheck to\n\n# the result file\n",
        "Line" : 101,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# suppression argument\n",
        "Line" : 104,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# inline suppressions\n",
        "Line" : 113,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# includes\n",
        "Line" : 124,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# enabled ids\n",
        "Line" : 130,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 9
    },
    "cmake/Modules/FindCPPUNIT.cmake" : {
      "ObjectId" : "389205921c97ff24b340e11c222ec2cd3634a3b4",
      "LastModified" : "2015-12-19T20:42:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Find the CppUnit includes and library\n\n#\n\n# This module defines\n\n# CPPUNIT_INCLUDE_DIR, where to find tiff.h, etc.\n\n# CPPUNIT_LIBRARIES, the libraries to link against to use CppUnit.\n\n# CPPUNIT_FOUND, If false, do not try to use CppUnit.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# also defined, but not for general use are\n\n# CPPUNIT_LIBRARY, where to find the CppUnit library.\n\n# CPPUNIT_DEBUG_LIBRARY, where to find the CppUnit library in debug\n\n# mode.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# With Win32, important to have both\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# On unix system, debug and release have the same name\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "cmake/Modules/FindCppcheck.cmake" : {
      "ObjectId" : "4d2ea81088df4e895cda5ba68ff56a5fa86aa1b7",
      "LastModified" : "2016-01-06T20:54:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the cppcheck utility\n\n# Will define:\n\n#\n\n# CPPCHECK_EXECUTABLE - cppcheck executable\n\n# CPPCHECK_VERSION - version of cppcheck\n\n#\n\n# Possible hints:\n\n# CPPCHECK_ROOT - root directory of the mongodb installation\n\n#\n\n# Copyright (C) 2011 by Johannes Wienke <jwienke at techfak dot uni-bielefeld dot de>\n\n#\n\n# This program is free software; you can redistribute it\n\n# and/or modify it under the terms of the GNU General\n\n# Public License as published by the Free Software Foundation;\n\n# either version 2, or (at your option)\n\n# any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# find server executable\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# get the version\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# only visible in advanced view\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/Modules/FindEigen3.cmake" : {
      "ObjectId" : "4d9bc1a5252bbc9075e4dcb95c28b387a382fe0c",
      "LastModified" : "2018-10-01T15:05:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Eigen3 lib\n\n#\n\n# This module supports requiring a minimum version, e.g. you can do\n\n#   find_package(Eigen3 3.1.2)\n\n# to require version 3.1.2 or newer of Eigen3.\n\n#\n\n# Once done this will define\n\n#\n\n#  EIGEN3_FOUND - system has eigen lib with correct version\n\n#  EIGEN3_INCLUDE_DIR - the eigen include directory\n\n#  EIGEN3_VERSION - eigen version\n\n#\n\n# and the following imported target:\n\n#\n\n#  Eigen3::Eigen - The header-only Eigen library\n\n#\n\n# This module reads hints about search locations from \n\n# the following environment variables:\n\n#\n\n# EIGEN3_ROOT\n\n# EIGEN3_ROOT_DIR\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>\n\n# Copyright (c) 2009 Benoit Jacob <jacob.benoit.1@gmail.com>\n\n# Redistribution and use is allowed according to the terms of the 2-clause BSD license.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# search first if an Eigen3Config.cmake is available in the system,\n\n# if successful this would set EIGEN3_INCLUDE_DIR and the rest of\n\n# the script will work as usual\n",
        "Line" : 75,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "cmake/Modules/FindLcov.cmake" : {
      "ObjectId" : "2a905a210bbd328206e8f19151b35a438a57a508",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find lcov \n\n# Will define:\n\n#\n\n# LCOV_EXECUTABLE - the lcov binary\n\n# GENHTML_EXECUTABLE - the genhtml executable\n\n#\n\n# Copyright (C) 2010 by Johannes Wienke <jwienke at techfak dot uni-bielefeld dot de>\n\n#\n\n# This file may be licensed under the terms of the\n\n# GNU Lesser General Public License Version 3 (the ``LGPL''),\n\n# or (at your option) any later version.\n\n#\n\n# Software distributed under the License is distributed\n\n# on an ``AS IS'' basis, WITHOUT WARRANTY OF ANY KIND, either\n\n# express or implied. See the LGPL for the specific language\n\n# governing rights and limitations.\n\n#\n\n# You should have received a copy of the LGPL along with this\n\n# program. If not, go to http://www.gnu.org/licenses/lgpl.html\n\n# or write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n\n#\n\n# The development of this software was supported by:\n\n#   CoR-Lab, Research Institute for Cognition and Robotics\n\n#     Bielefeld University\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# only visible in advanced view\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Modules/FindTinyXML2.cmake" : {
      "ObjectId" : "3fdd186c5b142eb1de7b86bae9fb34960dfc863b",
      "LastModified" : "2018-10-03T15:53:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FindTinyXML2.cmake\n\n#\n\n# Finds the TinyXML2 library\n\n#\n\n# This will define the following variables\n\n#\n\n#    \tTinyXML2_FOUND - system has TinyXML2\n\n#    \tTinyXML2_INCLUDE_DIRS - the TinyXML2 include directory\n\n#\t \tTinyXML2_LIBRARIES - The libraries needed to use TinyXML2\n\n#\t\tTinyXML2_DEFINITIONS - Compiler switches required for using TinyXML2\n\n#\n\n# and the following imported target\n\n#\n\n#     TinyXML2::TinyXML2\n\n#\n\n# Author: Lionel Untereiner - lionel.untereiner@geosiris.com\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/Findgcovr.cmake" : {
      "ObjectId" : "f98faef3d7611386b0ae2a495bb45bede06d130e",
      "LastModified" : "2015-12-19T20:42:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find gcovr scrip\n\n# Will define:\n\n#\n\n# GCOVR_EXECUTABLE - the gcovr script\n\n#\n\n# Uses:\n\n#\n\n# GCOVR_ROOT - root to search for the script\n\n#\n\n# Copyright (C) 2011 by Johannes Wienke <jwienke at techfak dot uni-bielefeld dot de>\n\n#\n\n# This file may be licensed under the terms of the\n\n# GNU Lesser General Public License Version 3 (the ``LGPL''),\n\n# or (at your option) any later version.\n\n#\n\n# Software distributed under the License is distributed\n\n# on an ``AS IS'' basis, WITHOUT WARRANTY OF ANY KIND, either\n\n# express or implied. See the LGPL for the specific language\n\n# governing rights and limitations.\n\n#\n\n# You should have received a copy of the LGPL along with this\n\n# program. If not, go to http://www.gnu.org/licenses/lgpl.html\n\n# or write to the Free Software Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.\n\n#\n\n# The development of this software was supported by:\n\n#   CoR-Lab, Research Institute for Cognition and Robotics\n\n#     Bielefeld University\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# only visible in advanced view\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/doxygen.cmake" : {
      "ObjectId" : "6a666f58266eaa0b800cd4b80f1c09e0de121780",
      "LastModified" : "2016-01-14T17:02:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# the minimum version allowed for doxygen\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# check doxygen\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#target for generating a full documentation \n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#install documentation\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/googletest.cmake" : {
      "ObjectId" : "12d6a50368d73f60a721b21a155266b35b4e2fe3",
      "LastModified" : "2018-10-01T15:05:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# the following code to fetch googletest\n\n# is inspired by and adapted after https://crascit.com/2015/07/25/cmake-gtest/\n\n# download and unpack googletest at configure time\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# adds the targers: gtest, gtest_main, gmock, gmock_main\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "cmake/utilities.cmake" : {
      "ObjectId" : "c9520b70a2646420c8b5201cd2cffce501994128",
      "LastModified" : "2018-10-01T15:05:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#!\n\n# @brief automatic deduction of CMAKE_BUILD_TYPE from CMAKE_CURRENT_BINARY_DIR\n\n# @details\n\n# if CMAKE_CURRENT_BINARY_DIR end with Debug/debug/DEBUG, set Debug mode else Release mode.\n\n#\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################################\n\n#                                 cgogn_create_package macro                                 #\n\n# This macro is a helper to create package configuration and version files. These files are  #\n\n# needed when using the find_package command.                                                #\n\n# This macro generate 2 versions of each file : one for the build tree and another for the   #\n\n# install tree.                                                                              #\n\n# Build tree:                                                                                #\n\n# 1.<build-dir>/lib/cmake/<cmake-project-name>/<cmake-project-name>Targets.cmake             #\n\n# 2.<build-dir>/lib/cmake/<cmake-project-name>/<cmake-project-name>Config.cmake              #\n\n# 3.<build-dir>/lib/cmake/<cmake-project-name>/<cmake-project-name>ConfigVersion.cmake       #\n\n#                                                                                            #\n\n# Install tree:                                                                              #\n\n# 1.<install-dir>/lib/cmake/<cmake-project-name>/<cmake-project-name>Targets.cmake           #\n\n# 2.<install-dir>/lib/cmake/<cmake-project-name>/<cmake-project-name>Config.cmake            #\n\n# 3.<install-dir>/lib/cmake/<cmake-project-name>/<cmake-project-name>ConfigVersion.cmake     #\n\n#                                                                                            #\n\n# Usage example : find_package(cgogn_core); find_package(cgogn_io)                           #\n\n# Note: template config files are located in  the cmake/ConfigFiles directory.               #\n\n# By convention they have to define the following two variables:                             #\n\n# cmake/<cmake-project-name>_LIBRARIES                                                       #\n\n# cmake/<cmake-project-name>_INCLUDE_DIRS                                                    #\n\n##############################################################################################\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "######## 1. Build tree\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "######## 2. Install tree\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## <package_name>ConfigVersion.cmake\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## <package_name>Config.cmake\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "##############################################################################################\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "thirdparty/CMakeLists.txt" : {
      "ObjectId" : "a28efdc7a0951311ca749a5d0cccf81a7de370de",
      "LastModified" : "2018-10-03T15:53:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "thirdparty/OffBinConverter/CMakeLists.txt" : {
      "ObjectId" : "cff4efe63d75f0968140d712f273714de4fbb5c9",
      "LastModified" : "2018-10-01T15:05:08Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "thirdparty/libMeshb/CMakeLists.txt" : {
      "ObjectId" : "90263d4f801c2a939f4fbc09994ce98f0b656506",
      "LastModified" : "2018-10-01T15:05:08Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "thirdparty/libQGLViewer/CMakeLists.txt" : {
      "ObjectId" : "00688f3fd2478f81dbbe70d93e450f742302fdae",
      "LastModified" : "2018-10-01T15:05:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# in order to be able to include generated files (ui and moc)\n\n#include_directories(${CMAKE_CURRENT_BINARY_DIR})\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# for glu warning on mac\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "thirdparty/ply/CMakeLists.txt" : {
      "ObjectId" : "fa07c091964b237b1e170e524dec234662b69cb6",
      "LastModified" : "2018-10-01T15:05:08Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "thirdparty/termcolor/CMakeLists.txt" : {
      "ObjectId" : "ec6af59b74bccd47990225acf780fbdd8c83219a",
      "LastModified" : "2017-09-27T15:48:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 38
  },
  "ElapsedTime" : 1875
}