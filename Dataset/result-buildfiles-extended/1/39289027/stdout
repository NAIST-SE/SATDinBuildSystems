{
  "Repository" : "39289027",
  "Revision" : "HEAD",
  "ObjectId" : "bdb81e826d124009a7b5621caeec540951843ee7",
  "CommitTime" : "2018-09-19T08:23:52Z",
  "Files" : {
    "pom.xml" : {
      "ObjectId" : "20fef60910a5ea8f28be5d82e220719f23d199fc",
      "LastModified" : "2018-09-17T13:22:52Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "<module>statistics-ingest-influxdb</module>",
        "Line" : 25,
        "CharPositionInLine" : 59
      },
      "1" : {
        "Text" : "<module>statistics-query-influxdb</module>",
        "Line" : 27,
        "CharPositionInLine" : 58
      },
      "2" : {
        "Text" : " NB! elasticserach-version must also be updated in Dockerfile _AND_ ElasticSearchRule.java ",
        "Line" : 34,
        "CharPositionInLine" : 107
      },
      "3" : {
        "Text" : " Used for health checks ",
        "Line" : 220,
        "CharPositionInLine" : 131
      },
      "4" : {
        "Text" : " Parent POM from Spring Boot turns on filtering by default. This triggers\n                     rebuilding of artifacts whenever the package goal is called, even when the workspace is unmodified.\n                     It also breaks the caching mechanism of Docker, so new images are also always built. For the deploy\n                     pipeline we really want to use cached artifacts for the different stages, in order to deliver and\n                     deploy the exact same artifacts to the different stages' environments. ",
        "Line" : 295,
        "CharPositionInLine" : 96
      },
      "CommentCount" : 5
    },
    "statistics-authenticate/pom.xml" : {
      "ObjectId" : "5d54694908278686b3957a9c1996e3d14de64e35",
      "LastModified" : "2018-06-27T13:10:56Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "statistics-client-ingest/pom.xml" : {
      "ObjectId" : "eb184c03ffbd06adb7b154304d253c7a2f781f22",
      "LastModified" : "2018-02-14T19:47:12Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "statistics-common-elasticsearch/pom.xml" : {
      "ObjectId" : "60385f493f5b43c33a44dd5738891bc182d0c692",
      "LastModified" : "2018-06-27T13:10:56Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "statistics-elasticsearch/pom.xml" : {
      "ObjectId" : "a59986f05e77bd37afba16c6630494273bf9a97c",
      "LastModified" : "2018-06-27T13:10:56Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "statistics-ingest-elasticsearch/pom.xml" : {
      "ObjectId" : "204154f145876bdd1803d6b8f07c72b9cee2d855",
      "LastModified" : "2018-06-27T13:10:56Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "statistics-ingest-influxdb/pom.xml" : {
      "ObjectId" : "08da6496a00abb637ec807aec7dabcf042a7e821",
      "LastModified" : "2018-06-27T13:10:56Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " TODO: Don't need to bind port, as it is reached through Docker's network ",
        "Line" : 118,
        "CharPositionInLine" : 118
      },
      "CommentCount" : 1
    },
    "statistics-ingest/pom.xml" : {
      "ObjectId" : "d11721f3c9418c2a2ffa52e7f471221f9823c218",
      "LastModified" : "2018-06-27T13:10:56Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "statistics-model/pom.xml" : {
      "ObjectId" : "6f34e8684b8e4d14c5366202fddc9ebe382d6406",
      "LastModified" : "2018-06-27T13:10:56Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "statistics-query-elasticsearch/pom.xml" : {
      "ObjectId" : "6547cf9c80d597925989121e1a317215ffe718d1",
      "LastModified" : "2018-06-27T13:10:56Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Need to make port available for integration test which ingests data directly ",
        "Line" : 149,
        "CharPositionInLine" : 122
      },
      "CommentCount" : 1
    },
    "statistics-query-influxdb/pom.xml" : {
      "ObjectId" : "56e77adc26398f456e945dfcbac591bf2754ca7d",
      "LastModified" : "2018-06-27T13:10:56Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " TODO: Don't need to bind port, as it is reached through Docker's network ",
        "Line" : 132,
        "CharPositionInLine" : 118
      },
      "CommentCount" : 1
    },
    "statistics-query/pom.xml" : {
      "ObjectId" : "73d86a55e415a56fa30e7f666310b88dc9620792",
      "LastModified" : "2018-06-27T13:10:56Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "statistics-test-utils/pom.xml" : {
      "ObjectId" : "05995fb1ad36ed2cb7c141c0bfe37c07644fa3c8",
      "LastModified" : "2018-06-27T13:10:56Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "MAVEN" : 13
  },
  "ElapsedTime" : 683
}