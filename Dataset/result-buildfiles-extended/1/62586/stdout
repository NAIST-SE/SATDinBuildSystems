{
  "Repository" : "62586",
  "Revision" : "HEAD",
  "ObjectId" : "ffeaac725d31f10b270cd3ece14e5a7b83a1f1ff",
  "CommitTime" : "2019-04-06T16:27:43Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "d26c71ac445152ffc91ba8d9b19a0b380be7eb36",
      "LastModified" : "2018-04-29T19:10:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Default to using \"Release\" as our build type.\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# If SYSTEM_LIBS is set to off, then all SYSTEM_* options will be\n\n# set to off.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If BUNDLED_LIBS is set to off, then all BUNDLED_* options will be\n\n# set to off.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Check and see if we're running Darwin, specify the CMAKE_LIBARY_PATH to do so\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#at least on ubuntu, polkit dir couldn't be /usr/local/share, but should be /usr/share\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Ensure that, when we link to stuff outside of our build path, we include the\n\n# library dir path in our RPATH.\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# set general build flags for debug build-type\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## append ASAN build flags if compiler version has support\n\n#if(\"${CMAKE_C_COMPILER_ID}\" STREQUAL \"GNU\")\n\n#   if(CMAKE_C_COMPILER_VERSION VERSION_GREATER 4.8)\n\n#      set(CMAKE_C_FLAGS_DEBUG \"${CMAKE_C_FLAGS_DEBUG} -fsanitize=address\n\n#         -fno-omit-frame-pointer\" CACHE STRING \"\" FORCE)\n\n#      message(\"Building with ASAN support (GNU compiler)\")\n\n#   else()\n\n#      message(\"Building without ASAN support (GNU compiler)\")\n\n#   endif()\n\n#elseif(\"${CMAKE_C_COMPILER_ID}\" STREQUAL \"Clang\")\n\n#   if(CMAKE_C_COMPILER_VERSION VERSION_GREATER 3.1)\n\n#      set(CMAKE_C_FLAGS_DEBUG \"${CMAKE_C_FLAGS_DEBUG} -fsanitize=address\n\n#         -fno-omit-frame-pointer\" CACHE STRING \"\" FORCE)\n\n#      message(\"Building with ASAN support (Clang compiler)\")\n\n#   elseif(CMAKE_C_COMPILER_VERSION VERSION_GREATER 3.1)\n\n#      message(\"Building without ASAN support (Clang compiler)\")\n\n#   endif()\n\n#endif()\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# set build flags for release build-type\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# This line should ALWAYS be after all options are defined\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# uninstall target\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Add a target that will ensure that the build directory is properly cleaned.\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# If we notice that this isn't the first time they've run\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "bundled_deps/check/CMakeLists.txt" : {
      "ObjectId" : "dd3c159d470c816eefcc7e08dfe612d1cd09f6ed",
      "LastModified" : "2018-02-28T20:39:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file provides the 'bundled_check' target.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This will build check using the release that we've included with\n\n# our distribution of ettercap.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Configure the Makefile wrapper. The purpose of this wrapper is to set up\n\n# the environment for building check. ExternalProject_Add doesn't\n\n# support setting up any sort of environment, nor does it handle arguments to\n\n# BUILD_COMMAND (and others) that contain double-quotes. According to\n\n# the CMake folks, this is the way to do things.\n\n#  ref: http://www.cmake.org/pipermail/cmake/2010-April/036566.html\n\n#\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# -fPIC is required so that we can link in our static library, properly.\n\n# Add the cmake env cflags and all that jazz so we can inherit architectures\n\n# and the like.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#########################\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Now export our variables to our parent's scope.\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "bundled_deps/curl/CMakeLists.txt" : {
      "ObjectId" : "c8c0a3999ae5d7ff8554a35128c26f81c7d48123",
      "LastModified" : "2018-02-28T20:39:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file provides the 'bundled_curl' target.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This will build curl using the release that we've included with\n\n# our distribution of ettercap.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Ensure that we include all the required stuff for linking to libcurl\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Figure out the parent directory for our openssl installation.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# -fPIC is required so that we can link in our static library, properly.\n\n# Add the cmake env cflags and all that jazz so we can inherit architectures\n\n# and the like.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Enable/Disable IPV6\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#########################\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Now export our variables to our parent's scope.\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "bundled_deps/libnet/CMakeLists.txt" : {
      "ObjectId" : "4273b69e568a9f211aa4f24c69f6767be46bd151",
      "LastModified" : "2018-02-28T20:39:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file provides the 'bundled_libnet' target.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This will build libnet using the release that we've included with\n\n# our distribution of ettercap.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Configure the Makefile wrapper. The purpose of this wrapper is to set up\n\n# the environment for building libnet. ExternalProject_Add doesn't\n\n# support setting up any sort of environment, nor does it handle arguments to\n\n# BUILD_COMMAND (and others) that contain double-quotes. According to\n\n# the CMake folks, this is the way to do things.\n\n#  ref: http://www.cmake.org/pipermail/cmake/2010-April/036566.html\n\n#\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# -fPIC is required so that we can link in our static library, properly.\n\n# Add the cmake env cflags and all that jazz so we can inherit architectures\n\n# and the like.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#########################\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Now export our variables to our parent's scope.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "bundled_deps/luajit/CMakeLists.txt" : {
      "ObjectId" : "08bad528882430fdb92670c25fea7f6816892460",
      "LastModified" : "2018-02-28T20:39:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# LuaJIT requires both libm and libdl.. Let's find those.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configure the Makefile wrapper. The purpose of this wrapper is to set up\n\n# the environment for building luajit. ExternalProject_Add doesn't\n\n# support setting up any sort of environment, nor does it handle arguments to\n\n# BUILD_COMMAND (and others) that contain double-quotes. According to\n\n# the CMake folks, this is the way to do things.\n\n#  ref: http://www.cmake.org/pipermail/cmake/2010-April/036566.html\n\n#\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# -fPIC is required so that we can link in our static library, properly.\n\n# Add the cmake env cflags and all that jazz so we can inherit architectures\n\n# and the like.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Explicitly disable CCOPT, as we do not want fomit-frame-pointer\n\n# conflicting with debuggy stuff.\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#########################\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/Modules/CheckVariableInHeaders.cmake" : {
      "ObjectId" : "c9431cb6a546026224e8f3e6fddb52eba5256b40",
      "LastModified" : "2018-02-28T20:39:03Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Modules/EttercapHeadersCheck.cmake" : {
      "ObjectId" : "c03108dae30f62599d384067997d87f3135fec64",
      "LastModified" : "2018-02-28T20:39:03Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Modules/EttercapLibCheck.cmake" : {
      "ObjectId" : "7d60f3cff84e2f8e5044dba9524d44d2aaffc0c8",
      "LastModified" : "2018-04-29T19:10:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## The easy part\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Generic target that will build all enabled bundled libs.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# give it another try but only in GTK3 compatibility mode\n",
        "Line" : 52,
        "CharPositionInLine" : 12
      },
      "3" : {
        "Text" : "## Thats all with packages, now we are on our own :(\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Iconv\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Seem that we have a dedicated iconv library not built in libc (e.g. FreeBSD)\n",
        "Line" : 118,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# iconv built in libc\n",
        "Line" : 123,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# LTDL\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# dedicated libdl library\n",
        "Line" : 134,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# included in libc\n",
        "Line" : 138,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# Fake target for curl\n",
        "Line" : 147,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# sslstrip has a requirement for libcurl >= 7.26.0\n",
        "Line" : 150,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# EXCLUDE_FROM_ALL)\n",
        "Line" : 162,
        "CharPositionInLine" : 44
      },
      "13" : {
        "Text" : "# Still haven't found curl? Bail!\n",
        "Line" : 167,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# begin LIBNET\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# This is a fake target that ettercap is dependant upon. If we end up using\n\n# a bundled version of libnet, we make this 'libnet' target dependant on it.\n\n# That way, everything gets built in the proper order!\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Only go into bundled stuff if it's enabled and we haven't found it already.\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# EXCLUDE_FROM_ALL)\n",
        "Line" : 238,
        "CharPositionInLine" : 42
      },
      "18" : {
        "Text" : "# Still haven't found libnet? Bail!\n",
        "Line" : 243,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# end LIBNET\n",
        "Line" : 251,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# FreeBSD has dn_expand built in libc\n",
        "Line" : 259,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "# EXCLUDE_FROM_ALL)\n",
        "Line" : 276,
        "CharPositionInLine" : 45
      },
      "CommentCount" : 22
    },
    "cmake/Modules/EttercapLuajit.cmake" : {
      "ObjectId" : "e27b58c1e49a5efc6e03d29460bbc8f8ad32cb79",
      "LastModified" : "2018-02-28T20:39:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Sets the variables:\n\n#       LUAJIT_FOUND\n\n#       LUAJIT_VERSION\n\n#       LUAJIT_LIBRARY\n\n#       LUAJIT_INCLUDE_DIR\n\n#\n\n# Creates target:\n\n#       luajit\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Only go into bundled stuff if it's enabled and we haven't found it already.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Modules/EttercapOSTest.cmake" : {
      "ObjectId" : "db8d3b8ccb315c35bfcc6c94299b51765b93ca7d",
      "LastModified" : "2018-02-28T20:39:03Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Modules/EttercapVariableCheck.cmake" : {
      "ObjectId" : "63e86e60b1b986f6db6c26a7351905b3c3b70fb1",
      "LastModified" : "2018-02-28T20:39:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check if PTHREAD_MUTEX_RECURSIVE_NP exists\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check if IP6T_SO_ORIGINAL_DST socket option is available - necessary for IPv6 SSL interception\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Modules/FindCURL.cmake" : {
      "ObjectId" : "b604f9972d2aed0abc6dfcae16efa074db8b0da8",
      "LastModified" : "2018-02-28T20:39:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2013 Ettercap Development Team.\n\n#\n\n# Distributed under GPL licnse.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Look for the header file\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look for the library.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Windows MSVC prebuilts:\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Make sure we've got an include dir.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Try to find the version number.\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# If the version check fails, exit out of the module here\n",
        "Line" : 72,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#handle the QUIETLY and REQUIRED arguments and set CURL_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cmake/Modules/FindGEOIP.cmake" : {
      "ObjectId" : "96315ea8d32bc4e3bd9940c1bec4012dcc0a9f29",
      "LastModified" : "2018-02-28T20:39:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# - Find GeoIP\n\n# Find the native GeoIP includes and library\n\n#\n\n#  GEOIP_INCLUDE_DIRS - where to find GeoIP.h, etc.\n\n#  GEOIP_LIBRARIES    - List of libraries when using GeoIP.\n\n#  GEOIP_FOUND        - True if GeoIP found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Users may set the (environment) variable GEOIP_ROOT\n\n# to point cmake to the *root* of a directory with include\n\n# and lib subdirectories for GeoIP\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find the header\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Find the library\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set GEOIP_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/Modules/FindGTK3.cmake" : {
      "ObjectId" : "ebbf04006375b1158b67fef6fb870a008962dafd",
      "LastModified" : "2018-04-29T19:10:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - FindGTK3.cmake\n\n# This module can find the GTK3 widget libraries and several of its other\n\n# optional components like gtkmm, glade, and glademm.\n\n#\n\n# NOTE: If you intend to use version checking, CMake 2.6.2 or later is\n\n#       required.\n\n#\n\n# Specify one or more of the following components\n\n# as you call this find module. See example below.\n\n#\n\n#   gtk\n\n#   gtkmm\n\n#   glade\n\n#   glademm\n\n#\n\n# The following variables will be defined for your use\n\n#\n\n#   GTK3_FOUND - Were all of your specified components found?\n\n#   GTK3_INCLUDE_DIRS - All include directories\n\n#   GTK3_LIBRARIES - All libraries\n\n#\n\n#   GTK3_VERSION - The version of GTK3 found (x.y.z)\n\n#   GTK3_MAJOR_VERSION - The major version of GTK3\n\n#   GTK3_MINOR_VERSION - The minor version of GTK3\n\n#   GTK3_PATCH_VERSION - The patch version of GTK3\n\n#\n\n# Optional variables you can define prior to calling this module:\n\n#\n\n#   GTK3_DEBUG - Enables verbose debugging of the module\n\n#   GTK3_SKIP_MARK_AS_ADVANCED - Disable marking cache variables as advanced\n\n#   GTK3_ADDITIONAL_SUFFIXES - Allows defining additional directories to\n\n#                              search for include files\n\n#\n\n#=================\n\n# Example Usage:\n\n#\n\n#   Call find_package() once, here are some examples to pick from:\n\n#\n\n#   Require GTK 3.0 or later\n\n#       find_package(GTK3 3.0 REQUIRED gtk)\n\n#\n\n#   if(GTK3_FOUND)\n\n#      include_directories(${GTK3_INCLUDE_DIRS})\n\n#      add_executable(mygui mygui.cc)\n\n#      target_link_libraries(mygui ${GTK3_LIBRARIES})\n\n#   endif()\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2009 Kitware, Inc.\n\n# Copyright 2008-2009 Philip Lowman <philip@yhbt.com>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Version 0.1 (5/13/2011)\n\n#   * First cut at a GTK3 version (Heavily derived from\n\n#     FindGTK2.cmake)\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#=============================================================\n\n# _GTK3_GET_VERSION\n\n# Internal function to parse the version number in gtkversion.h\n\n#   _OUT_major = Major version number\n\n#   _OUT_minor = Minor version number\n\n#   _OUT_micro = Micro version number\n\n#   _gtkversion_hdr = Header file to parse\n\n#=============================================================\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#=============================================================\n\n# _GTK3_FIND_INCLUDE_DIR\n\n# Internal function to find the GTK include directories\n\n#   _var = variable to set\n\n#   _hdr = header file to look for\n\n#=============================================================\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If these ever change, things will break.\n",
        "Line" : 116,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# for /usr/lib/gtk-2.0/include\n",
        "Line" : 139,
        "CharPositionInLine" : 41
      },
      "7" : {
        "Text" : "# fix for Ubuntu == 11.04 (Natty Narwhal)\n",
        "Line" : 151,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# end\n\n# fix for Ubuntu >= 11.10 (Oneiric Ocelot)\n",
        "Line" : 154,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# end\n",
        "Line" : 157,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "#=============================================================\n\n# _GTK3_FIND_LIBRARY\n\n# Internal function to find libraries packaged with GTK3\n\n#   _var = library variable to create\n\n#=============================================================\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Not GTK versions per se but the versions encoded into Windows\n\n# import libraries (GtkMM 2.14.1 has a gtkmm-vc80-2_4.lib for example)\n\n# Also the MSVC libraries use _ for . (this is handled below)\n\n# ********* SOMEONE WITH WINDOWS NEEDS TO CHECK THIS BIT FOR V3 *********\n\n# ********* the plain 3 is needed to get Debian Sid to find the libraries\n",
        "Line" : 199,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Add vc80/vc90/vc100 midfixes\n",
        "Line" : 215,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# For some silly reason the MSVC libraries use _ instead of .\n\n# in the version fields\n",
        "Line" : 248,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# And for debug\n",
        "Line" : 257,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Copy list back to original names\n",
        "Line" : 263,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Set debug to release\n",
        "Line" : 313,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "#=============================================================\n",
        "Line" : 319,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#\n\n# main()\n\n#\n",
        "Line" : 321,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Assume they only want GTK\n",
        "Line" : 330,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "#\n\n# If specified, enforce version number\n\n#\n",
        "Line" : 334,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# If we can't find the GTK include dir, we can't do version checking\n",
        "Line" : 363,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# If the version check fails, exit out of the module here\n",
        "Line" : 381,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "#\n\n# Find all components\n\n#\n",
        "Line" : 386,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# ********* At least on Debian the gdk & gtk libraries\n\n# ********* don't have the -x11 suffix.\n",
        "Line" : 413,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "#\n\n# Solve for the GTK3 version if we haven't already\n\n#\n",
        "Line" : 482,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#\n\n# Try to enforce components\n\n#\n",
        "Line" : 493,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# This gets set to GTK3_FOUND\n",
        "Line" : 497,
        "CharPositionInLine" : 40
      },
      "28" : {
        "Text" : "#include(${CMAKE_CURRENT_LIST_DIR}/FindPackageHandleStandardArgs.cmake)\n",
        "Line" : 500,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Unset our variables.\n",
        "Line" : 553,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 30
    },
    "cmake/Modules/FindLIBCHECK.cmake" : {
      "ObjectId" : "84a664d2014e7176c6beaa3e278c65c592eb2a5d",
      "LastModified" : "2018-02-28T20:39:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find LibCheck\n\n# Once done this will define\n\n#  LIBCHECK_FOUND - System has LibCheck\n\n#  LIBCHECK_INCLUDE_DIRS - The LibCheck include directories\n\n#  LIBCHECK_LIBRARIES - The libraries needed to use LibCheck\n\n#  LIBCHECK_DEFINITIONS - Compiler switches required for using LibCheck\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LIBCHECK_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Modules/FindLIBIDN.cmake" : {
      "ObjectId" : "cac08c769a822ce2acff8ac993f220331c2d37c1",
      "LastModified" : "2018-02-28T20:39:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find LIBIDN\n\n# Find LIBIDN headers, libraries and the answer to all questions.\n\n#\n\n#  LIBIDN_FOUND               True if libidn got found\n\n#  LIBIDN_INCLUDE_DIR        Location of libidn headers\n\n#  LIBIDN_LIBRARIES           List of libaries to use libidn\n\n#\n\n# Copyright (c) 2009 Nigmatullin Ruslan <euroelessar@gmail.com>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindLIBNET.cmake" : {
      "ObjectId" : "f534c1422bfdda5587e35af75c5b8acbb8e95615",
      "LastModified" : "2018-02-28T20:39:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2013 Ettercap Development Team.\n\n#\n\n# Distributed under GPL license.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Look for the header file\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Look for the library\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make sure we've got an include dir.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#=============================================================\n\n# _LIBNET_GET_VERSION\n\n# Internal function to parse the version number in libnet.h\n\n#   _OUT_version = The full version number\n\n#   _OUT_version_major = The major version number only\n\n#   _OUT_version_minor = The minor version number only\n\n#   _libnet_hdr = Header file to parse\n\n#=============================================================\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If the version check fails, exit out of the module here\n",
        "Line" : 90,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#handle the QUIETLY and REQUIRED arguments and set LIBNET_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cmake/Modules/FindLIBRTMP.cmake" : {
      "ObjectId" : "606ba5ec2e04ce002c7f534a4e3a28bb5a16dd77",
      "LastModified" : "2018-02-28T20:39:03Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Modules/FindLUAJIT.cmake" : {
      "ObjectId" : "ca09def758f7ed7871c4b59604f45cc9d651250e",
      "LastModified" : "2018-02-28T20:39:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2013 Ettercap Development Team.\n\n#\n\n# Distributed under GPL licnse.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Look for the header file\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Look for the library\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make sure we've got an include dir.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#=============================================================\n\n# _LUAJIT_GET_VERSION\n\n# Internal function to parse the version number in luajit.h\n\n#   _OUT_version = The version number\n\n#   _luajit_hdr = Header file to parse\n\n#=============================================================\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Example: #define LUAJIT_VERSION_NUM      20000  /* Version 2.0.0 = 02.00.00. */\n",
        "Line" : 38,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# If the version check fails, exit out of the module here\n",
        "Line" : 78,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#handle the QUIETLY and REQUIRED arguments and set LUAJIT_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cmake/Modules/FindPCRE.cmake" : {
      "ObjectId" : "1f24f528863be15de857a7dd9754a8d14cbf8336",
      "LastModified" : "2018-02-28T20:39:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2013 Ettercap Development Team.\n\n#\n\n# Distributed under GPL licnse.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Look for the header file\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look for the library.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make sure we've got an include dir.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Try to find the version number.\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# If the version check fails, exit out of the module here\n",
        "Line" : 68,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#handle the QUIETLY and REQUIRED arguments and set PCRE_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cmake/Modules/MacroEnsureOutOfSourceBuild.cmake" : {
      "ObjectId" : "acc4b28b710208063762b0fdc217da5fae143280",
      "LastModified" : "2018-02-28T20:39:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - MACRO_ENSURE_OUT_OF_SOURCE_BUILD(<errorMessage>)\n\n# MACRO_ENSURE_OUT_OF_SOURCE_BUILD(<errorMessage>)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, Alexander Neundorf, <neundorf@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Scripts/clean-all.cmake" : {
      "ObjectId" : "b34f537a3fe830b12a882b6be172cb066915c2e1",
      "LastModified" : "2018-02-28T20:39:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The helps us make sure that the build directory is *really* clean.\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "desktop/CMakeLists.txt" : {
      "ObjectId" : "767bb93f421666dd5599a3ac0e9c8ab9148ab2c0",
      "LastModified" : "2018-02-28T20:39:03Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "include/config.h.cmake" : {
      "ObjectId" : "d2a6a7096c5e70558bcf251c044af0f8bf855e10",
      "LastModified" : "2018-04-29T19:10:55Z",
      "FileType" : "CMAKESOURCE",
      "CommentCount" : 0
    },
    "man/CMakeLists.txt" : {
      "ObjectId" : "9ca493341f1f3015f56bd73a090cb9a061f93437",
      "LastModified" : "2018-02-28T20:39:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add man page custom target\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check if groff supports PDF generation\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plug-ins/CMakeLists.txt" : {
      "ObjectId" : "8e744d1e64431b37df09706454a9e1bb3b59e335",
      "LastModified" : "2018-02-28T20:39:03Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "share/CMakeLists.txt" : {
      "ObjectId" : "148f51c321f4609e1e2068050123327c87a5f141",
      "LastModified" : "2018-02-28T20:39:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# since ettercap now uses this file as the application icon\n\n# we still need the icon even if the desktop file is not being installed\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "e51a5fbf6b0d8ec1d1cb899edd929ff7e0fb9da0",
      "LastModified" : "2018-04-29T19:10:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Only compile lua stuff if lua is enabled!\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# On 64-bit OSX platforms, luajit requires the following flags to be added.\n\n# See: http://luajit.org/install.html\n",
        "Line" : 213,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#if(NOT LIBRARY_BUILD)\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#target_link_libraries(lib_ettercap ec_interfaces ${EC_LIBS})\n",
        "Line" : 220,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#else(NOT LIBRARY_BUILD)\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#target_link_libraries(lib_ettercap ${EC_LIBS})\n",
        "Line" : 222,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#endif(NOT LIBRARY_BUILD)\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#  LINK_INTERFACE_LIBRARIES \"\"\n",
        "Line" : 227,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "src/interfaces/CMakeLists.txt" : {
      "ObjectId" : "774c6fd4e8d9e3f0f7e2735fd251c2ac896d12a9",
      "LastModified" : "2018-04-29T19:10:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#    add_library(ec_wdg STATIC ${EC_WDG_SRC})\n\n#    target_link_libraries(ec_wdg ${EC_LIBS})\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# full GTK3 support, using gtk3 code\n",
        "Line" : 74,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#  LINK_INTERFACE_LIBRARIES \"\"\n",
        "Line" : 104,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "src/lua/CMakeLists.txt" : {
      "ObjectId" : "87dbe56016c012a132c70678f2f1d658162f014a",
      "LastModified" : "2018-04-29T19:10:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Take care of building our C-based stuff.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add our 'shared' code.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/lua/ec_lua_config.h.cmake" : {
      "ObjectId" : "ab30a8031230db7a6c6bad39f7f450943e1cfd5e",
      "LastModified" : "2018-02-28T20:39:03Z",
      "FileType" : "CMAKESOURCE",
      "CommentCount" : 0
    },
    "src/lua/share/CMakeLists.txt" : {
      "ObjectId" : "0761fd9eae4ce1b044c3142e3fe0d7a62e4d93e2",
      "LastModified" : "2018-02-28T20:39:03Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/lua/share/core/CMakeLists.txt" : {
      "ObjectId" : "c9024d13b47c0bda6b92f974ec4c86bdbff042c8",
      "LastModified" : "2018-02-28T20:39:03Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/lua/share/lib/CMakeLists.txt" : {
      "ObjectId" : "d837ffeb6945c7f3890b9c2220aa1861adb703fd",
      "LastModified" : "2018-02-28T20:39:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Nothing to install, just yet!\n\n# install(FILES\n\n#            ...\n\n#            DESTINATION ${INSTALL_LUA_LIBS})\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/lua/share/scripts/CMakeLists.txt" : {
      "ObjectId" : "d0cb7dc64ad12c68ca492a1bd5d8737988be837a",
      "LastModified" : "2018-02-28T20:39:03Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/lua/share/third-party/CMakeLists.txt" : {
      "ObjectId" : "2835bf24dc952ae027102547af39c0525babc440",
      "LastModified" : "2018-02-28T20:39:03Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/lua/share/third-party/stdlib/CMakeLists.txt" : {
      "ObjectId" : "e1af4d260e2abb924b0961fa75385b4ae1d72124",
      "LastModified" : "2018-02-28T20:39:03Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/lua/share/third-party/stdlib/Makefile.am" : {
      "ObjectId" : "e3c07a35c0c2df17c138e67962782547a655b203",
      "LastModified" : "2018-02-28T20:39:03Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# In order to avoid regenerating std.lua at configure time, which\n\n# causes the documentation to be rebuilt and hence requires users to\n\n# have luadoc installed, put src/std.lua in as a Makefile dependency.\n\n# (Strictly speaking, distributing an AC_CONFIG_FILE would be wrong.)\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/lua/share/third-party/stdlib/src/CMakeLists.txt" : {
      "ObjectId" : "130a659c49b806e57c6c89980b4b3eb018026e7b",
      "LastModified" : "2018-02-28T20:39:03Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "b4790da811020c1a100fa7a9922ebeae224b549a",
      "LastModified" : "2018-02-28T20:39:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Adds a test by name\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "utils/CMakeLists.txt" : {
      "ObjectId" : "85ca9d5b0abd02d2f4e557611a5272c770d2c478",
      "LastModified" : "2018-04-29T19:10:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Etterfilter\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For ef_grammar.h\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Etterlog\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    }
  },
  "FileTypes" : {
    "CMAKE" : 38,
    "CMAKESOURCE" : 2,
    "AUTOMAKE" : 1
  },
  "ElapsedTime" : 2408
}