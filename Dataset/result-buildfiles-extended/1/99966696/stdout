{
  "Repository" : "99966696",
  "Revision" : "HEAD",
  "ObjectId" : "45ba03befab16c3a5a67eeb4324ac775a4d32a91",
  "CommitTime" : "2018-12-01T20:32:34Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "6df59a56129b189d74671207b07b1085c4c846b3",
      "LastModified" : "2018-12-01T20:32:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#setup cache server and suppot upload\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------\n\n# VORB\n\n# ----------------------------------------------------------------------\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# include available make files\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#include(${name})\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# TODO(Matthew): Support MSVC with these?\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# This is supported by both Clang and GCC as long as we are up-to-date.\n\n# Should be fine going back as far as Ubuntu 17.10, and deffo fine on Arch.\n",
        "Line" : 73,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "#setup_project()\n\n#create_project_library()\n\n#run_project_testing()\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#include(deps)\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#hunter_add_package(OpenSSL)\n\n#find_package(OpenSSL REQUIRED)\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#setup_components()\n\n#setup_dependencies()\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include/Vorb)\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#source\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#source\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#source\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#source\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#source\n",
        "Line" : 248,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "#source\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#source\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#source\n",
        "Line" : 336,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#source\n",
        "Line" : 358,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#    OpenSSL::SSL\n\n#    OpenSSL::Crypto\n",
        "Line" : 461,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "cmake/hunter/HunterGate.cmake" : {
      "ObjectId" : "887557a5843f52e2765f5fd11f55027423927f5f",
      "LastModified" : "2018-10-03T14:02:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2013-2018, Ruslan Baratov\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright notice, this\n\n#   list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright notice,\n\n#   this list of conditions and the following disclaimer in the documentation\n\n#   and/or other materials provided with the distribution.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\n# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n\n# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n\n# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is a gate file to Hunter package manager.\n\n# Include this file using `include` command and add package you need, example:\n\n#\n\n#     cmake_minimum_required(VERSION 3.2)\n\n#\n\n#     include(\"cmake/HunterGate.cmake\")\n\n#     HunterGate(\n\n#         URL \"https://github.com/path/to/hunter/archive.tar.gz\"\n\n#         SHA1 \"798501e983f14b28b10cda16afa4de69eee1da1d\"\n\n#     )\n\n#\n\n#     project(MyProject)\n\n#\n\n#     hunter_add_package(Foo)\n\n#     hunter_add_package(Boo COMPONENTS Bar Baz)\n\n#\n\n# Projects:\n\n#     * https://github.com/hunter-packages/gate/\n\n#     * https://github.com/ruslo/hunter\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# cmake_parse_arguments\n",
        "Line" : 57,
        "CharPositionInLine" : 29
      },
      "3" : {
        "Text" : "# Set HUNTER_GATE_ROOT cmake variable to suitable value.\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Check CMake variable\n",
        "Line" : 151,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Check environment variable\n",
        "Line" : 159,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Check HOME environment variable\n",
        "Line" : 167,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Check SYSTEMDRIVE and USERPROFILE environment variable (windows only)\n",
        "Line" : 175,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# while waiting for lock other instance can do all the job\n",
        "Line" : 246,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# check directory permissions\n",
        "Line" : 254,
        "CharPositionInLine" : 38
      },
      "10" : {
        "Text" : "# Disabling languages speeds up a little bit, reduces noise in the output\n\n# and avoids path too long windows error\n",
        "Line" : 256,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Need to add toolchain file too.\n\n# Otherwise on Visual Studio + MDD this will fail with error:\n\n# \"Could not find an appropriate version of the Windows 10 SDK installed on this machine\"\n",
        "Line" : 293,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# 'toolchain_arg' can't be empty\n",
        "Line" : 300,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Test case: remove Ninja from PATH but set it via CMAKE_MAKE_PROGRAM\n",
        "Line" : 308,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Must be a macro so master file 'cmake/Hunter' can\n\n# apply all variables easily just by 'include' command\n\n# (otherwise PARENT_SCOPE magic needed)\n",
        "Line" : 358,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# variable HUNTER_GATE_DONE set explicitly for external project\n\n# (see `hunter_download`)\n",
        "Line" : 363,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# First HunterGate command will init Hunter, others will be ignored\n",
        "Line" : 368,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Empty function to avoid error \"unknown function\"\n",
        "Line" : 372,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# set HUNTER_GATE_ROOT\n",
        "Line" : 459,
        "CharPositionInLine" : 30
      },
      "19" : {
        "Text" : "# Beautify path, fix probable problems with windows path slashes\n",
        "Line" : 461,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Hunter downloaded manually (e.g. by 'git clone')\n",
        "Line" : 499,
        "CharPositionInLine" : 6
      },
      "21" : {
        "Text" : "# Check Hunter already downloaded by HunterGate\n",
        "Line" : 508,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 22
    },
    "cmake/hunter/cache.cmake" : {
      "ObjectId" : "b7eb038be13693a466c6367a5a8a983f7d3ec65f",
      "LastModified" : "2018-10-03T14:02:04Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/hunter/passwords.cmake" : {
      "ObjectId" : "67456ab7f94d1b6967d006e600b3425f7d941cd9",
      "LastModified" : "2018-10-03T14:02:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# cmake/Hunter/passwords.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake_files/components.cmake" : {
      "ObjectId" : "d2ba5838943ae851d308b3aaf7880649bb6f2a55",
      "LastModified" : "2018-10-03T14:02:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Setup defines for all other vorb components\n",
        "Line" : 2,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Core and root source always will be built\n",
        "Line" : 5,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Setup Other Components\n",
        "Line" : 9,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Setup root VORB files\n",
        "Line" : 98,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "cmake_files/utils.cmake" : {
      "ObjectId" : "7d95ffbbd02dde3234dd5f4f15365317bec2dfa2",
      "LastModified" : "2018-10-03T14:02:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# check for proper folder structure\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# UNIX should include APPLE and CygWIN\n",
        "Line" : 4,
        "CharPositionInLine" : 17
      },
      "2" : {
        "Text" : "# Should be all flavors of Microsoft Visual Studio compiler\n",
        "Line" : 6,
        "CharPositionInLine" : 20
      },
      "3" : {
        "Text" : "# if(APPLE)\n\n#   LIST(APPEND LDFLAGS \"-L/usr/local/opt/llvm/lib\")\n\n#   set(CMAKE_C_COMPILER \"/usr/local/opt/llvm/bin/clang\")\n\n#   set(CMAKE_CXX_COMPILER \"/usr/local/opt/llvm/bin/clang++\")\n\n# endif(APPLE)\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# setup compilers\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# This warning only exists for GCC.\n",
        "Line" : 33,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "#          -std=c++11\n\n#          -stdlib=libc++\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Other flags\n",
        "Line" : 40,
        "CharPositionInLine" : 10
      },
      "8" : {
        "Text" : "#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++11\")\n",
        "Line" : 43,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# platform specific initialization\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# for policy CMP0042\n",
        "Line" : 51,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# for moody camel thread_local issues\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 12
    },
    "scripts/clear-all.cmake" : {
      "ObjectId" : "7b9f194a43562d858e7998145840c4b5677de64f",
      "LastModified" : "2018-10-03T14:02:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# unset(ENV{DEVELOPER_DIR}) # Used to detect Xcode environment\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# !\n",
        "Line" : 125,
        "CharPositionInLine" : 39
      },
      "2" : {
        "Text" : "# !\n",
        "Line" : 219,
        "CharPositionInLine" : 20
      },
      "3" : {
        "Text" : "# Break Makefile OpenSSL build\n",
        "Line" : 270,
        "CharPositionInLine" : 17
      },
      "4" : {
        "Text" : "# Problems with Xcode and boost\n",
        "Line" : 296,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# See bug https://github.com/headupinclouds/gatherer/issues/58\n",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# https://cmake.org/cmake/help/latest/manual/cmake-toolchains.7.html#cross-compiling-for-android\n",
        "Line" : 305,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# See clear-all.sh for more info {\n",
        "Line" : 310,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# }\n",
        "Line" : 319,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "scripts/copy-files.cmake" : {
      "ObjectId" : "aeea279b0e0515db02503b5aeff4eaaf2822a8fc",
      "LastModified" : "2018-10-03T14:02:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2015 Ruslan Baratov\n\n# All rights reserved.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scripts/create-toolchain-info.cmake" : {
      "ObjectId" : "f906dc920ffc2a4ec9ff75e409d723bbae3f90ef",
      "LastModified" : "2018-10-03T14:02:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Emulate 'hunter_internal_error'\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Skip EOL character\n",
        "Line" : 108,
        "CharPositionInLine" : 40
      },
      "CommentCount" : 2
    },
    "scripts/find_python.cmake" : {
      "ObjectId" : "95e30034ac28fcc52489032b62fdc55110bc367a",
      "LastModified" : "2018-10-03T14:02:04Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "scripts/link-all.cmake" : {
      "ObjectId" : "f39ac1e38f438e01cc84d43af6580d898f67f53a",
      "LastModified" : "2018-10-03T14:02:04Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "scripts/try-copy-license.cmake" : {
      "ObjectId" : "767c61dc38744bed5d505e00c3ad36cbe3a1c131",
      "LastModified" : "2018-10-03T14:02:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2015 Aaditya Kalsi\n\n# Copyright (c) 2017 Ruslan Baratov\n\n# All rights reserved.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use set explicit license files for the package\n\n# Testing variants:\n\n# * Eigen \"HUNTER_INSTALL_LICENSE_FILES=COPYING.MPL2\" (good)\n\n# * Eigen \"HUNTER_INSTALL_LICENSE_FILES=COPYING.BSD;COPYING.GPL;COPYING.LGPL;COPYING.MINPACK;COPYING.MPL2\" (good)\n\n# * Eigen \"HUNTER_INSTALL_LICENSE_FILES=COPYING.BSD;COPYING.GPL;COPYING.LGPL;COPYING.XXX;COPYING.MPL2\" (bad)\n\n# * Eigen no HUNTER_INSTALL_LICENSE_FILES (bad, no default license)\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Try standard names\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If no standard name found try to glob LICENSE*\n\n# Testing variants:\n\n# * Boost\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "ea5fb5a32834e65f27b7f3bc78cca32d6cbd8cdb",
      "LastModified" : "2018-10-03T14:02:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#include(cotire)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#cotire(maintest)\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# cotire sets the following properties\n\n#get_target_property(_unitySource maintest COTIRE_CXX_UNITY_SOURCE)\n\n#get_target_property(_prefixHeader maintest COTIRE_CXX_PREFIX_HEADER)\n\n#get_target_property(_precompiledHeader maintest COTIRE_CXX_PRECOMPILED_HEADER)\n\n#get_target_property(_unityTargetName maintest COTIRE_UNITY_TARGET_NAME)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tests/test_ecs/CMakeLists.txt" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2018-10-03T14:02:04Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/test_graphics/CMakeLists.txt" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2018-10-03T14:02:04Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/test_io/CMakeLists.txt" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2018-10-03T14:02:04Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/test_sound/CMakeLists.txt" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2018-10-03T14:02:04Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/test_ui/CMakeLists.txt" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2018-10-03T14:02:04Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/test_voxel/CMakeLists.txt" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2018-10-03T14:02:04Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 19
  },
  "ElapsedTime" : 1444
}