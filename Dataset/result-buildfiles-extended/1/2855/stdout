{
  "Repository" : "2855",
  "Revision" : "HEAD",
  "ObjectId" : "348ff78a17ab0a207b85ce7d73a468d852011fc4",
  "CommitTime" : "2017-07-13T06:15:13Z",
  "Files" : {
    "contrib/ffmpeg/CMakeLists.txt" : {
      "ObjectId" : "2951ac45fb9b76da2e8bcc50755b99a1a3c9423a",
      "LastModified" : "2013-11-17T13:38:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# author: chocolateboy\n\n# original: https://github.com/pyke369/sffmpeg\n\n# license: GPL\n\n#\n\n# updates:\n\n#\n\n#     if this build's options or dependencies are changed, the version number should be\n\n#     incremented in the following places prior to each PMS release:\n\n#\n\n#         * PMS_FFMPEG_VERSION in vendor/ffmpeg-banner.patch\n\n#         * the corresponding version at the *bottom* of README.md\n\n#\n\n#     Note:\n\n#\n\n#         * the version should be incremented no more than *once* per PMS release.\n\n#         * due to bugs in CMake, the build/ffmpeg-prefix directory may need to be removed each\n\n#           time the version is incremented in order to ensure the patch is reapplied\n\n#\n\n# links:\n\n#\n\n#     build scripts:\n\n#\n\n#         https://github.com/rdp/ffmpeg-windows-build-helpers/blob/master/cross_compile_ffmpeg.sh\n\n#         http://www.slackware.com/~alien/slackbuilds/ffmpeg/build/ffmpeg.SlackBuild\n\n#\n\n#     notes:\n\n#\n\n#         http://betterlogic.com/roger/2011/09/ffmpeg-compileconfigure-windows/\n\n#         http://betterlogic.com/roger/2012/09/libflite-cross-compile-woe/\n\n#         http://ffmpeg.org/trac/ffmpeg/wiki/MacOSXCompilationGuide\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# XXX can be built for 32-bit or 64-bit by appending ABI=32 or ABI=64 to the configure command\n",
        "Line" : 97,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# XXX this silently fails to build libhogweed.a if gmp is not available/visible\n\n# https://lists.gnu.org/archive/html/help-gnutls/2012-01/msg00019.html\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# XXX dumb configure fails to check the prefix dir for lib and include, so specify them\n",
        "Line" : 108,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# this is the latest version that has an extension that CMake can unpack\n\n# (the 2.12.x series is still being maintained/updated: http://www.gnutls.org/security.html)\n\n# http://public.kitware.com/Bug/view.php?id=13515\n",
        "Line" : 116,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# XXX linking against nettle breaks with \"duplicate symbol _memxor\" on Mac OS X\n",
        "Line" : 120,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# XXX linking against nettle/hogweed breaks unless -lgmp is added\n\n# XXX and it can't find the lib dir from --prefix, so that needs to be added as well\n",
        "Line" : 122,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# stop the gsm Makefile chmodding its install files to read-only (we want to be able to rebuild/overwrite without interaction)\n",
        "Line" : 131,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# 2011-03-26\n",
        "Line" : 163,
        "CharPositionInLine" : 20
      },
      "9" : {
        "Text" : "# provides OpenCORE AMR-NB (adaptive multi-rate narrowband) and OpenCORE AMR-WB (wideband)\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Mac OS X build needs to force the correct architecture.\n",
        "Line" : 193,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# 2012-07-24\n",
        "Line" : 228,
        "CharPositionInLine" : 20
      },
      "12" : {
        "Text" : "# TODO replace OpenSSL with GnuTLS:\n\n# BUILD_COMMAND make PREFIX=${CMAKE_BINARY_DIR} CRYPTO=GNUTLS SHARED=no XCFLAGS=-I${CMAKE_BINARY_DIR}/include XLDFLAGS=-L${CMAKE_BINARY_DIR}/lib XLIBS=-ldl\n",
        "Line" : 231,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# http://www.slackware.com/~alien/slackbuilds/ffmpeg/build/schroedinger_notests.patch\n",
        "Line" : 242,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# http://www.slackware.com/~alien/slackbuilds/ffmpeg/build/ffmpeg.SlackBuild\n\n# \"Because of the patch, run autoreconf\"\n",
        "Line" : 244,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# http://wiki.multimedia.cx/index.php?title=Ut_Video\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# 2012-11-09\n",
        "Line" : 301,
        "CharPositionInLine" : 22
      },
      "17" : {
        "Text" : "# Mac OS X build needs to force the correct architecture.\n\n# xavs is using old versions of config.guess and config.sub that do not recognize\n\n# the same x86_64 architecture on Mac OS X that all other projects use. Forcing the\n\n# architecture causes asm errors, so we disable asm as well.\n",
        "Line" : 307,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# 2011-08-21\n",
        "Line" : 319,
        "CharPositionInLine" : 22
      },
      "19" : {
        "Text" : "# Avoid \"Server certificate verification failed: issuer is not trusted\" error\n",
        "Line" : 320,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# XXX xvidcore's configure script doesn't provide a way (e.g. --disable-shared)\n\n# to prevent it bulding a shared library\n",
        "Line" : 337,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "########################################################################\n\n#\n\n# --extra-cflags=-I/path/to/include/openjpeg-1.5:\n\n#\n\n# ffmpeg's configure script only uses pkg-config for \"badly designed\n\n# packages\" whose details cannot be obtained in any other way:\n\n# http://lists.mplayerhq.hu/pipermail/ffmpeg-devel/2011-March/108536.html\n\n#\n\n# As a result we have to reinvent pkg-config i.e. provide CFLAGS and/or\n\n# LDFLAGS for the following well-behaved libraries:\n\n#\n\n#     libopenjpeg\n\n#     libgnutls\n",
        "Line" : 371,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "########################################################################\n\n#\n\n# disabled options:\n\n#\n\n#     XXX why does the Zeranoe build do this (while stating it supports pthreads)?\n\n#     --disable-pthreads\n",
        "Line" : 385,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Windows only\n",
        "Line" : 395,
        "CharPositionInLine" : 23
      },
      "24" : {
        "Text" : "# see above\n",
        "Line" : 427,
        "CharPositionInLine" : 62
      },
      "25" : {
        "Text" : "# nettle breaks gnutls which breaks ffmpeg unless we add this (again)\n",
        "Line" : 431,
        "CharPositionInLine" : 23
      },
      "26" : {
        "Text" : "# Don't use this on OS X as it breaks compilation\n",
        "Line" : 437,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# http://lists.freedesktop.org/archives/fontconfig/2012-September/004318.html\n\n# http://lists.freedesktop.org/archives/fontconfig/2012-September/004348.html\n\n# http://ffmpeg-users.933282.n4.nabble.com/pkg-config-static-td4653220.html\n",
        "Line" : 446,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 28
    },
    "contrib/ffmpeg/Makefile" : {
      "ObjectId" : "7032e06d653e4bfff8e4ff180d5ad0c390f43b97",
      "LastModified" : "2013-04-10T08:04:09Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "pom.xml" : {
      "ObjectId" : "7e36c0fb15369393c29020ea538cdeb3cf2cd2e4",
      "LastModified" : "2016-03-08T15:52:19Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "\n\t\tPMS consists of two major parts: PMS itself and the third party software needed to\n\t\trun it. While PMS itself is 100% pure Java, some of the third party software is\n\t\tnot. This means building a platform specific distribution boils down to first\n\t\tbuilding the pms.jar and then assembling all application resources.\n\n\t\tNote that Maven 3 does not automatically install all dependencies, unlike Maven 2.\n\t\tTo install all dependencies to your local repository, run the following commands:\n\n\t\tmvn com.savage7.maven.plugins:maven-external-dependency-plugin:resolve-external\n\t\tmvn com.savage7.maven.plugins:maven-external-dependency-plugin:install-external\n\n\t\tTo build PMS, do:\n\n\t\t\tmvn clean package\n\n\t\tAfter building, the \"target\" directory will contain the binary.\n\t\tTo generate a full source code report, do:\n\n\t\t\tmvn site\n\n\t\tAfter generating, the \"target/site\" directory will contain the reports.\n\t",
        "Line" : 27,
        "CharPositionInLine" : 5
      },
      "1" : {
        "Text" : " XXX don't forget to update project.version.short below ",
        "Line" : 34,
        "CharPositionInLine" : 100
      },
      "2" : {
        "Text" : " this is not required, but is recommended for plugin version checks ",
        "Line" : 38,
        "CharPositionInLine" : 77
      },
      "3" : {
        "Text" : " NSIS needs a version without \"-SNAPSHOT\" or \"-b1\" ",
        "Line" : 76,
        "CharPositionInLine" : 61
      },
      "4" : {
        "Text" : " FIXME project is reserved for use by Maven: we shouldn't be using it for custom properties ",
        "Line" : 77,
        "CharPositionInLine" : 102
      },
      "5" : {
        "Text" : "\n\t\t\tXXX we currently need to use an old version of JNA\n\t\t\tfor Windows builds to work around a bug in\n\t\t\tJNA > 3.2.5. See here for more details:\n\t\t\thttps://code.google.com/p/ps3mediaserver/issues/detail?id=1152\n\t\t",
        "Line" : 85,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : " JRE archives direct download links: http://stackoverflow.com/a/12266049 ",
        "Line" : 108,
        "CharPositionInLine" : 83
      },
      "7" : {
        "Text" : "\n\t\t\tThe BundleId for the jre-7uXX-macosx-x64.tar.gz is a bit tricky to obtain. Go to\n\t\t\thttp://www.java.com/en/download/manual.jsp, inspect the link for the .dmg and add 1\n\t\t\tto the number contained in its BundleId. Then open the link with the new BundleId\n\t\t\tand verify whether the correct file downloads.\n\t\t",
        "Line" : 123,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : " Windows Service wrapper. ",
        "Line" : 129,
        "CharPositionInLine" : 36
      },
      "9" : {
        "Text" : "\n\t\t\t use the Windows makensis.exe for Windows builds unless\n\t\t\t the system makensis is explicitly selected via the\n\t\t\t system-makensis profile\n\t\t ",
        "Line" : 141,
        "CharPositionInLine" : 7
      },
      "10" : {
        "Text" : " Java.net ",
        "Line" : 172,
        "CharPositionInLine" : 20
      },
      "11" : {
        "Text" : " netty ",
        "Line" : 182,
        "CharPositionInLine" : 17
      },
      "12" : {
        "Text" : " GSON ",
        "Line" : 194,
        "CharPositionInLine" : 16
      },
      "13" : {
        "Text" : " JBoss.org repository ",
        "Line" : 204,
        "CharPositionInLine" : 32
      },
      "14" : {
        "Text" : " for jai-imageio-core-standalone, which is used by Thumbnailator ",
        "Line" : 217,
        "CharPositionInLine" : 75
      },
      "15" : {
        "Text" : " Repository where the izpack-maven-plugin and such live ",
        "Line" : 228,
        "CharPositionInLine" : 66
      },
      "16" : {
        "Text" : " XXX note: the JNA dependency is declared at the profile level ",
        "Line" : 236,
        "CharPositionInLine" : 73
      },
      "17" : {
        "Text" : " TODO this can be removed when MEncoder is removed ",
        "Line" : 238,
        "CharPositionInLine" : 61
      },
      "18" : {
        "Text" : "  no need for commons-logging, as jcl-over-slf4j provides the impl ",
        "Line" : 262,
        "CharPositionInLine" : 79
      },
      "19" : {
        "Text" : "  no need for commons-logging, as jcl-over-slf4j provides the impl ",
        "Line" : 275,
        "CharPositionInLine" : 79
      },
      "20" : {
        "Text" : "\n\t\t\tthis is not used on its own, but rather provides\n\t\t\tImageReader subclasses that make support for additional\n\t\t\tformats (e.g. TIFF) available to the ImageIO API, and thus\n\t\t\tto Thumbnailator (our built-in image thumbnailer).\n\n\t\t\tXXX be careful upgrading this. this version is redistributable;\n\t\t\tother versions may not be:\n\n\t\t\thttps://code.google.com/p/thumbnailator/issues/detail?id=32\n\t\t\thttps://github.com/stain/jai-imageio-core\n\t\t\thttp://stackoverflow.com/questions/1209583/using-java-advanced-imaging-with-maven\n\t\t",
        "Line" : 367,
        "CharPositionInLine" : 6
      },
      "21" : {
        "Text" : " XXX: not Mavenized: https://code.google.com/p/cuelib/ ",
        "Line" : 398,
        "CharPositionInLine" : 65
      },
      "22" : {
        "Text" : " XXX: not Mavenized: http://sourceforge.net/projects/mediachest/ ",
        "Line" : 405,
        "CharPositionInLine" : 75
      },
      "23" : {
        "Text" : " specify how files in src/main/resources are bundled in the target jar ",
        "Line" : 455,
        "CharPositionInLine" : 81
      },
      "24" : {
        "Text" : " 1) package unfiltered resources ",
        "Line" : 457,
        "CharPositionInLine" : 44
      },
      "25" : {
        "Text" : "\n\t\t\t\t\tBy default, Maven packages resources in the top-level of the jar e.g.\n\n\t\t\t\t\t\t/example.res\n\n\t\t\t\t\tThe old PMS ant build packaged them in a \"resources\" directory\n\t\t\t\t\te.g:\n\n\t\t\t\t\t\t/resources/example.res\n\n\t\t\t\t\tCurrently, we preserve the old destination. If this is ever changed\n\t\t\t\t\tto the Maven default, a handful of files will need to be changed to\n\t\t\t\t\treference \"/example.res\" rather than \"/resources/example.res\"\n\t\t\t\t",
        "Line" : 473,
        "CharPositionInLine" : 8
      },
      "26" : {
        "Text" : " Avoid inadvertently filtering binaries ",
        "Line" : 479,
        "CharPositionInLine" : 52
      },
      "27" : {
        "Text" : " 2) package filtered resources ",
        "Line" : 483,
        "CharPositionInLine" : 42
      },
      "28" : {
        "Text" : " Filter to replace Maven properties ",
        "Line" : 491,
        "CharPositionInLine" : 48
      },
      "29" : {
        "Text" : " Filter IzPack resources so we can use Maven properties in them ",
        "Line" : 495,
        "CharPositionInLine" : 75
      },
      "30" : {
        "Text" : " Enable the use of Maven properties ",
        "Line" : 513,
        "CharPositionInLine" : 48
      },
      "31" : {
        "Text" : "*.srt files to test charset detection",
        "Line" : 517,
        "CharPositionInLine" : 48
      },
      "32" : {
        "Text" : "\n\t\t\t\t\t\t\t1) Force language because JUnit tests depend on English language strings\n\n\t\t\t\t\t\t\t2) Use our JNA dependency rather than the system's - fixes\n\t\t\t\t\t\t\tthe following error on Linux (Ubuntu 12.04 with system\n\t\t\t\t\t\t\tjna-3.2.7.jar via libjna-java):\n\n\t\t\t\t\t\t\t\tThere is an incompatible JNA native library installed on this system.\n\t\t\t\t\t\t",
        "Line" : 554,
        "CharPositionInLine" : 10
      },
      "33" : {
        "Text" : " only one argLine element is processed ",
        "Line" : 555,
        "CharPositionInLine" : 130
      },
      "34" : {
        "Text" : " This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself. ",
        "Line" : 571,
        "CharPositionInLine" : 132
      },
      "35" : {
        "Text" : " Assemble a jar with dependencies. ",
        "Line" : 671,
        "CharPositionInLine" : 46
      },
      "36" : {
        "Text" : "\n\t\t\t\t\t\t\t\t\t\tthis is required to make the ImageIo image \"plugins\" provided by jai-imageio-core-standalone work.\n\t\t\t\t\t\t\t\t\t\twithout it, the following exception is thrown when PMS starts:\n\n\t\t\t\t\t\t\t\t\t\tConfiguration error: java.util.ServiceConfigurationError: javax.imageio.spi.ImageInputStreamSpi:\n\t\t\t\t\t\t\t\t\t\t\tProvider com.sun.media.imageioimpl.stream.ChannelImageInputStreamSpi could not be instantiated:\n\t\t\t\t\t\t\t\t\t\t\t\tjava.lang.IllegalArgumentException: vendorName == null!\n\n\t\t\t\t\t\t\t\t\t\tSee: https://thierrywasyl.wordpress.com/2009/07/24/jai-how-to-solve-vendorname-null-exception/\n\t\t\t\t\t\t\t\t\t",
        "Line" : 697,
        "CharPositionInLine" : 13
      },
      "37" : {
        "Text" : " Copy the pms-x.x.x-jar-with-dependencies.jar to pms.jar. ",
        "Line" : 706,
        "CharPositionInLine" : 69
      },
      "38" : {
        "Text" : " All dependencies are in the lib directory, no need to also use the jar-with-dependencies ",
        "Line" : 725,
        "CharPositionInLine" : 106
      },
      "39" : {
        "Text" : " Copy all application jars to the IzPack staging lib directory ",
        "Line" : 733,
        "CharPositionInLine" : 74
      },
      "40" : {
        "Text" : " This is a izpack dependency that collides with jmte's \"asm\" dependency ",
        "Line" : 752,
        "CharPositionInLine" : 87
      },
      "41" : {
        "Text" : " Exclude tools.jar etc. ",
        "Line" : 755,
        "CharPositionInLine" : 39
      },
      "42" : {
        "Text" : " excludeScope>system</excludeScope ",
        "Line" : 756,
        "CharPositionInLine" : 50
      },
      "43" : {
        "Text" : " Exclude the IzPack dependencies ",
        "Line" : 758,
        "CharPositionInLine" : 48
      },
      "44" : {
        "Text" : "\n\t\t\t\tPlugin to add git commit information properties.\n\t\t\t\tThese are used in the project.properties files.\n\t\t\t\tSee: https://github.com/ktoso/maven-git-commit-id-plugin\n\t\t\t",
        "Line" : 769,
        "CharPositionInLine" : 7
      },
      "45" : {
        "Text" : "\n\t\t\t\tThis plugin will take care of installing the external dependencies that do not\n\t\t\t\texist in a public Maven repository. That is why we store some jar files in the\n\t\t\t\t\"src/main/external-resources/lib\" directory and have this plugin take care of\n\t\t\t\tthe installation at build time.\n\n\t\t\t\tNote: The plugin does not work automatically in Maven 3. To install the required\n\t\t\t\tdependencies execute the following commands:\n\n\t\t\t\t\tmvn com.savage7.maven.plugins:maven-external-dependency-plugin:resolve-external\n\t\t\t\t\tmvn com.savage7.maven.plugins:maven-external-dependency-plugin:install-external\n\n\t\t\t\tChecksums can be calculated with \"openssl sha1 [filename]\".\n\n\t\t\t\tSee: http://code.google.com/p/maven-external-dependency-plugin/issues/detail?id=8#c4\n\t\t\t",
        "Line" : 866,
        "CharPositionInLine" : 7
      },
      "46" : {
        "Text" : " mvn com.savage7.maven.plugins:maven-external-dependency-plugin:clean-external ",
        "Line" : 908,
        "CharPositionInLine" : 94
      },
      "47" : {
        "Text" : " Note: this phase works in Maven 2. In Maven 3, it needs to be triggered manually. See above ",
        "Line" : 915,
        "CharPositionInLine" : 107
      },
      "48" : {
        "Text" : " mvn com.savage7.maven.plugins:maven-external-dependency-plugin:resolve-external ",
        "Line" : 918,
        "CharPositionInLine" : 96
      },
      "49" : {
        "Text" : " mvn com.savage7.maven.plugins:maven-external-dependency-plugin:install-external ",
        "Line" : 921,
        "CharPositionInLine" : 96
      },
      "50" : {
        "Text" : " PMS tests report ",
        "Line" : 956,
        "CharPositionInLine" : 32
      },
      "51" : {
        "Text" : " Javadoc ",
        "Line" : 966,
        "CharPositionInLine" : 23
      },
      "52" : {
        "Text" : "\n\t\t\t\t\t\t\t\t\tDoclet to generate class diagrams inside Javadoc.\n\t\t\t\t\t\t\t\t\tRequires the installation of Graphviz (http://www.graphviz.org/)\n\t\t\t\t\t\t\t\t",
        "Line" : 992,
        "CharPositionInLine" : 12
      },
      "53" : {
        "Text" : " Class dependency report ",
        "Line" : 1003,
        "CharPositionInLine" : 39
      },
      "54" : {
        "Text" : " Findbugs report ",
        "Line" : 1010,
        "CharPositionInLine" : 31
      },
      "55" : {
        "Text" : " Checkstyle report will go out of memory because of the huge amount of issues it finds(!)\n\t\t\t\t\t\t<plugin>\n\t\t\t\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t\t\t\t<artifactId>maven-checkstyle-plugin</artifactId>\n\t\t\t\t\t\t\t<version>2.10</version>\n\t\t\t\t\t\t</plugin>\n\t\t\t\t\t\t",
        "Line" : 1023,
        "CharPositionInLine" : 10
      },
      "56" : {
        "Text" : " Cobertura Test Coverage report ",
        "Line" : 1024,
        "CharPositionInLine" : 46
      },
      "57" : {
        "Text" : " PMD and CPD code analysis report ",
        "Line" : 1031,
        "CharPositionInLine" : 48
      },
      "58" : {
        "Text" : " L10n internationalization report ",
        "Line" : 1044,
        "CharPositionInLine" : 48
      },
      "59" : {
        "Text" : " if selected, use the system makensis on Linux, Mac OS X &c. ",
        "Line" : 1106,
        "CharPositionInLine" : 73
      },
      "60" : {
        "Text" : "\n\t\t\tWindows profile: takes care of building the final package for Microsoft Windows\n\t\t",
        "Line" : 1113,
        "CharPositionInLine" : 6
      },
      "61" : {
        "Text" : " nsis-maven-plugin needs this ",
        "Line" : 1124,
        "CharPositionInLine" : 42
      },
      "62" : {
        "Text" : " Copy precompiled Windows binaries. ",
        "Line" : 1147,
        "CharPositionInLine" : 49
      },
      "63" : {
        "Text" : " Avoid inadvertently filtering binaries ",
        "Line" : 1156,
        "CharPositionInLine" : 54
      },
      "64" : {
        "Text" : " Filter NSIS header file. ",
        "Line" : 1160,
        "CharPositionInLine" : 39
      },
      "65" : {
        "Text" : " Filter to replace Maven properties ",
        "Line" : 1167,
        "CharPositionInLine" : 50
      },
      "66" : {
        "Text" : " Download external resources. ",
        "Line" : 1173,
        "CharPositionInLine" : 43
      },
      "67" : {
        "Text" : " Make sure the download folders exist. ",
        "Line" : 1186,
        "CharPositionInLine" : 57
      },
      "68" : {
        "Text" : " Download and unpack binaries. ",
        "Line" : 1190,
        "CharPositionInLine" : 49
      },
      "69" : {
        "Text" : " Download windows service wrapper. ",
        "Line" : 1203,
        "CharPositionInLine" : 53
      },
      "70" : {
        "Text" : " Download private JRE archives. ",
        "Line" : 1206,
        "CharPositionInLine" : 50
      },
      "71" : {
        "Text" : " MediaInfo library needs to be in the standard library path to be found ",
        "Line" : 1221,
        "CharPositionInLine" : 90
      },
      "72" : {
        "Text" : " Unpack winodws service wrapper. ",
        "Line" : 1227,
        "CharPositionInLine" : 51
      },
      "73" : {
        "Text" : " Unpack private JRE archives. ",
        "Line" : 1246,
        "CharPositionInLine" : 48
      },
      "74" : {
        "Text" : "\n\t\t\t\t\t\tPlugin to build a Windows installer using the nullsoft scriptable install system (NSIS)\n\t\t\t\t\t\tThe \"generate-project\" goal generates a file \"target/project.nsh\", which contains the\n\t\t\t\t\t\tdefinitions for project variables like \"${PROJECT_BASEDIR}\" that can be used in the\n\t\t\t\t\t\t\"pms.nsi\" and \"setup.nsi\" files.\n\t\t\t\t\t",
        "Line" : 1306,
        "CharPositionInLine" : 9
      },
      "75" : {
        "Text" : "\n\t\t\tLinux profile: takes care of building the final package for Linux.\n\t\t",
        "Line" : 1375,
        "CharPositionInLine" : 6
      },
      "76" : {
        "Text" : "\n\t\t\t\t this setting does the right thing on Linux\n\t\t\t\t and is needed for the Hudson profile to work\n\t\t\t ",
        "Line" : 1381,
        "CharPositionInLine" : 8
      },
      "77" : {
        "Text" : " Copy precompiled Linux binaries. ",
        "Line" : 1400,
        "CharPositionInLine" : 47
      },
      "78" : {
        "Text" : " Avoid inadvertently filtering binaries ",
        "Line" : 1404,
        "CharPositionInLine" : 54
      },
      "79" : {
        "Text" : " Assemble the PMS tar.gz archive distribution file. ",
        "Line" : 1410,
        "CharPositionInLine" : 65
      },
      "80" : {
        "Text" : " see above for documentation ",
        "Line" : 1427,
        "CharPositionInLine" : 120
      },
      "81" : {
        "Text" : " Download external resources. ",
        "Line" : 1435,
        "CharPositionInLine" : 43
      },
      "82" : {
        "Text" : " Make sure the download folder exists. ",
        "Line" : 1448,
        "CharPositionInLine" : 57
      },
      "83" : {
        "Text" : " Download and unpack binaries. ",
        "Line" : 1451,
        "CharPositionInLine" : 49
      },
      "84" : {
        "Text" : " Make all downloaded binaries executable. ",
        "Line" : 1464,
        "CharPositionInLine" : 60
      },
      "85" : {
        "Text" : "\n\t\t\tMac OS X profile: takes care of building the final package for Mac OS X.\n\t\t",
        "Line" : 1477,
        "CharPositionInLine" : 6
      },
      "86" : {
        "Text" : " Copy precompiled OS X binaries. ",
        "Line" : 1497,
        "CharPositionInLine" : 46
      },
      "87" : {
        "Text" : " Avoid inadvertently filtering binaries ",
        "Line" : 1501,
        "CharPositionInLine" : 54
      },
      "88" : {
        "Text" : " Avoid inadvertently filtering binaries ",
        "Line" : 1510,
        "CharPositionInLine" : 54
      },
      "89" : {
        "Text" : " Avoid inadvertently filtering binaries ",
        "Line" : 1516,
        "CharPositionInLine" : 54
      },
      "90" : {
        "Text" : " Avoid inadvertently filtering binaries ",
        "Line" : 1525,
        "CharPositionInLine" : 54
      },
      "91" : {
        "Text" : " Download external resources. ",
        "Line" : 1531,
        "CharPositionInLine" : 43
      },
      "92" : {
        "Text" : " Make sure the download folder exists. ",
        "Line" : 1545,
        "CharPositionInLine" : 57
      },
      "93" : {
        "Text" : " Download and unpack binaries ",
        "Line" : 1550,
        "CharPositionInLine" : 48
      },
      "94" : {
        "Text" : " Download JRE ",
        "Line" : 1563,
        "CharPositionInLine" : 32
      },
      "95" : {
        "Text" : " Make all downloaded binaries executable ",
        "Line" : 1566,
        "CharPositionInLine" : 59
      },
      "96" : {
        "Text" : " Copy files to IzPack staging directory ",
        "Line" : 1569,
        "CharPositionInLine" : 58
      },
      "97" : {
        "Text" : " TODO: Investigate if this can be done with the assembly plugin ",
        "Line" : 1579,
        "CharPositionInLine" : 79
      },
      "98" : {
        "Text" : " Unpack the JRE, leave out as many unused features as possible ",
        "Line" : 1594,
        "CharPositionInLine" : 81
      },
      "99" : {
        "Text" : " \"java\" and \"installer.sh\" need to be executable ",
        "Line" : 1643,
        "CharPositionInLine" : 68
      },
      "100" : {
        "Text" : " IzPack for cross platform packaging (http://izpack.org/) ",
        "Line" : 1655,
        "CharPositionInLine" : 71
      },
      "101" : {
        "Text" : " http://docs.codehaus.org/display/IZPACK/Compiling+Using+Maven ",
        "Line" : 1656,
        "CharPositionInLine" : 76
      },
      "102" : {
        "Text" : "\n\t\t\t\t\t\t\t\tThe IzPack plugin needs dependencies on its own modules or you will\n\t\t\t\t\t\t\t\tget CannotResolveClassExceptions.\n\t\t\t\t\t\t\t",
        "Line" : 1679,
        "CharPositionInLine" : 11
      },
      "103" : {
        "Text" : "\n\t\t\tHudson (windows-jar): minimal profile that builds pms.jar with the\n\t\t\tWindows JNA. The POSIX JNA causes snapshot builds to crash the JVM on\n\t\t\tWindows, whereas the Windows JNA only disables MediaInfo for Ubuntu\n\t\t\tusers, who can still use ffmpeg.\n\n\t\t\tAnother difference from the other profiles is that we don't download the\n\t\t\tbinaries or build the tarball.\n\t\t",
        "Line" : 1700,
        "CharPositionInLine" : 6
      },
      "104" : {
        "Text" : "\n\t\t\tThis profile allows running PMS from inside Eclipse\n\t\t\t(Requires a \"mvn clean package\" to download the binaries first)\n\t\t",
        "Line" : 1722,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 105
    }
  },
  "FileTypes" : {
    "CMAKE" : 1,
    "MAKEFILE" : 1,
    "MAVEN" : 1
  },
  "ElapsedTime" : 545
}