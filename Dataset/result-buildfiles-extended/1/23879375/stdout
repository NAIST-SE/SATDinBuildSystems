{
  "Repository" : "23879375",
  "Revision" : "HEAD",
  "ObjectId" : "81d95cfbbc9a6826423063fb49c8ab272d10e3e3",
  "CommitTime" : "2019-04-08T09:55:40Z",
  "Files" : {
    "Client/CMakeLists.txt" : {
      "ObjectId" : "f73b44f5548b931f5445952609b6814d17deb126",
      "LastModified" : "2018-12-28T09:18:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Author: LiXizhi\n\n# Email: lixizhi@yeah.net\n\n# Date: 2016.4.30\n\n# Note: see NPLRuntime/cmakelist.txt\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Server source dir\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Options\n\n################################\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Win32 Default Option\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# OSX Default Option\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# End of Options\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#Renderer\n\n################################\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Other platform depend options\n\n################################\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# making executable relocatable \n",
        "Line" : 74,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# Using static lib for other modules if main NPLRuntime is built as static lib. \n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# This is the directory to keep all binary\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#Boost\n\n################################\n\n# include boost if client is not defined, it allows us to use a different boost version than the client on the server build.\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Add more boost components here\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# End of boost\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#ZLIB\n\n################################\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# CURL\n\n################################\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# END OF CURL\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Lua\n\n################################\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# main NPL runtime using ParaEngineClient\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# expose the core include directory \n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# this app is for testing the client dll\n",
        "Line" : 223,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# following are plugins that should be build after main runtime\t\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# export these two variables to its parent scope just in case some app project reference NPLRuntime statically. \n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "Client/trunk/CMakeLists.txt" : {
      "ObjectId" : "775a06973e7c68eec5d07622a3be1703ac0b46d2",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_subdirectory(exrernals)\n\n#add_subdirectory(PhysicsBT)\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#add_subdirectory(ParaEngineClientApp)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Client/trunk/ParaEngineClient/2dengine/CMakeLists.txt" : {
      "ObjectId" : "0bb6430bb109d2dc9c0995fe07f2fca175de22a1",
      "LastModified" : "2017-11-26T09:36:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#target_link_libraries(2DEngine)\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Client/trunk/ParaEngineClient/CMakeLists.txt" : {
      "ObjectId" : "6e67dc59660854f8790b0c2c4f9a2e4fbe0c91d2",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Author: LiXizhi\n\n# Company: ParaEngine.com\n\n# Date: 2009.4.10\n\n# Desc: option modify PARAENGINE_COMPILE_LIB, define USE_HOARD if one wants to use hoard memory allocator in windows.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The version number.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Note: if true, we will produce dll instead of exe, only under win32\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# configure a header file to pass some of the CMake settings\n\n# to the source code\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##############################\n\n## Interface files that are usually included by external plugin dlls.\n\n#SET(ParaEngineClient_API_FILES\n\n#\tCore/baseinterface.h\t\tCore/PEtypes.h\t\tCore/PluginAPI.h\t\tCore/coreexport.h\n\n#\tCore/PluginLoader.hpp\n\n#\tCore/IParaEngineCore.h\tCore/IParaEngineApp.h\n\n#\tCore/IParaPhysics.h\n\n#\tCore/IParaAudioEngine.h\n\n#\tCore/IParaWebService.h\n\n#\tCore/INPL.h\tCore/NPLTypes.h Core/INPLRuntime.h Core/INPLRuntimeState.h\tCore/INPLScriptingState.h\tCore/NPLInterface.hpp\n\n#\tCore/InterprocessMsg.h Core/InterprocessQueue.hpp\tCore/ipc_message_queue.hpp\n\n#\tCore/NPLMiniRuntime.hpp Core/ParaUtils.hpp\n\n#\tCore/IParaDebugDraw.h Core/IBatchedElementDraw.h Core/CommandLineParser.hpp\n\n#\tCore/IMovieCodec.h\n\n#\t# Core/IAppService.h\tCore/ILogService.h\tCore/IFileSystemWatcherService.h\n\n#)\n\n#SOURCE_GROUP(\"API Files\" FILES ${ParaEngineClient_API_FILES})\n\n#list(APPEND ParaEngineClient_SRCS ${ParaEngineClient_API_FILES})\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "##############################\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "##############################\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "##############################\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "##############################\n\n#file (GLOB ParaEngineClient_MDXModel_FILES ${PROJECT_SOURCE_DIR}/mdxfile/*.*)\n\n#SOURCE_GROUP(\"Engine\\\\mdxfile\" FILES ${ParaEngineClient_MDXModel_FILES})\n\n#list(APPEND ParaEngineClient_SRCS ${ParaEngineClient_MDXModel_FILES})\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "##############################\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "##############################\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "##############################\n\n#file (GLOB ParaEngineClient_Physics_FILES ${PROJECT_SOURCE_DIR}/physics/*.*)\n\n#SOURCE_GROUP(\"physics\" FILES ${ParaEngineClient_Physics_FILES})\n\n#list(APPEND ParaEngineClient_SRCS ${ParaEngineClient_Physics_FILES})\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "##############################\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "##############################\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "##############################\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "##############################\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "##############################\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "##############################\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "##############################\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "##############################\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "##############################\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##############################\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "##############################\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "##############################\n\n#file (GLOB ParaEngineClient_Jabber_FILES ${PROJECT_SOURCE_DIR}/jabber/*.*)\n\n#SOURCE_GROUP(\"jabber\" FILES ${ParaEngineClient_Jabber_FILES})\n\n#list(APPEND ParaEngineClient_SRCS ${ParaEngineClient_Jabber_FILES})\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "##############################\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "##############################\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "##############################\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "##############################\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "##############################\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#####################################\n\n##--------- resource file ---------##\n\n# winmain.rc is the only buildable file, but the rest are all dependencies of it.\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "###################################\n\n##------------shader-------------##\n\n# Add shader files to the project.\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# custom build rules: effect FX files\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# uncomment the following line if you want to see the text output to debug shader instructions.\n\n# COMMAND fxc /Tfx_2_0 /Gfp /nologo /Fc \"${PROJECT_SOURCE_DIR}/shaders/${src_filename}.txt\" ${PROJECT_SOURCE_DIR}/${src_file}\n",
        "Line" : 213,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# header files\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "##############################\n\n# embedded resource \n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "##############################\n\n# util files\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "##############################\n\n# Documentation\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "##############################\n\n# WebSocket\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "##############################\n\n# Platform\n",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "##############################\n\n# config\n",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "#${CLIENT_SOURCE_DIR}/../../ParaEngine_SDK.nsi\n",
        "Line" : 271,
        "CharPositionInLine" : 1
      },
      "44" : {
        "Text" : "##############################\n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "##########################################################################################\n\n#\n\n#\n\n#   Add precompiled header support:  all files added to ParaEngineClient_SRCS\n\n#\t\tafter this macro will NOT have precompiled header\n\n#\n\n#\n\n##########################################################################################\n",
        "Line" : 282,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "##############################\n\n# add the binary tree to the search path for include files\n",
        "Line" : 293,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#include_directories(\"${PCRE_SOURCE_DIR}\")\n\n#include_directories(\"${PhysX_SOURCE_DIR}/Foundation/include\")\n\n#include_directories(\"${PhysX_SOURCE_DIR}/PhysXLoader/include\")\n\n#include_directories(\"${PhysX_SOURCE_DIR}/Cooking/include\")\n\n#include_directories(\"${PhysX_SOURCE_DIR}/Physics/include\")\n\n#include_directories(\"${RakNetStaticLib_SOURCE_DIR}/Source\")\n\n#include_directories(\"${NPLNetworkLayer_SOURCE_DIR}/include\")\n\n#include_directories(\"${FCollada_SOURCE_DIR}/FCollada/LibXML/include/\")\n\n#include_directories(\"${FCollada_SOURCE_DIR}\")\n\n#include_directories(\"${jblib_SOURCE_DIR}/src/\")\n",
        "Line" : 317,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# Make sure the linker can find the third-party precompiled libraries.\n\n# link_directories (\"${CLIENT_SOURCE_DIR}/libs/win32/lib\")\n\n# link_directories (${PhysX_SOURCE_DIR}/lib/win32)\n",
        "Line" : 379,
        "CharPositionInLine" : 1
      },
      "49" : {
        "Text" : "# 64 bits version\n",
        "Line" : 383,
        "CharPositionInLine" : 1
      },
      "50" : {
        "Text" : "# 32 bits version.\n",
        "Line" : 385,
        "CharPositionInLine" : 1
      },
      "51" : {
        "Text" : "# statically link MSVC to reduce dependancies\n",
        "Line" : 395,
        "CharPositionInLine" : 1
      },
      "52" : {
        "Text" : "# enable multiprocessor build option /MP, this will greatly increase compile speed\n",
        "Line" : 405,
        "CharPositionInLine" : 1
      },
      "53" : {
        "Text" : "# /GR- Remove RTTI to miminize the executable size\n",
        "Line" : 411,
        "CharPositionInLine" : 1
      },
      "54" : {
        "Text" : "# NOTE: This generate smaller and faster exe/dll, but no other libs should to it statically.\n",
        "Line" : 416,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# /GL Link time code generation. Note turn this off if you have plugins that links to ParaEngineClient.\n",
        "Line" : 421,
        "CharPositionInLine" : 2
      },
      "56" : {
        "Text" : "# /LTCG Link time code generation\n",
        "Line" : 423,
        "CharPositionInLine" : 2
      },
      "57" : {
        "Text" : "# /GR- Remove RTTI to miminize the executable size\n\n# /Zi generate program database (PDB symbol files even in release build)\n",
        "Line" : 432,
        "CharPositionInLine" : 1
      },
      "58" : {
        "Text" : "# To turn size optimisations on again\n",
        "Line" : 437,
        "CharPositionInLine" : 2
      },
      "59" : {
        "Text" : "# add a stripped version of symbol files during release build\n",
        "Line" : 439,
        "CharPositionInLine" : 2
      },
      "60" : {
        "Text" : "# To turn size optimisations on again\n",
        "Line" : 442,
        "CharPositionInLine" : 2
      },
      "61" : {
        "Text" : "# add a stripped version of symbol files during release build\n",
        "Line" : 444,
        "CharPositionInLine" : 2
      },
      "62" : {
        "Text" : "# add the executable\n",
        "Line" : 462,
        "CharPositionInLine" : 1
      },
      "63" : {
        "Text" : "# When this property is set to true the executable when linked on Windows will be created with a WinMain() entry point instead of of just main().\n",
        "Line" : 465,
        "CharPositionInLine" : 1
      },
      "64" : {
        "Text" : "# following are client only\n",
        "Line" : 483,
        "CharPositionInLine" : 3
      },
      "65" : {
        "Text" : "# DirectShowBaseClass\t\tStrmiids.lib\n",
        "Line" : 488,
        "CharPositionInLine" : 3
      },
      "66" : {
        "Text" : "# PhysXLoader.lib\n",
        "Line" : 490,
        "CharPositionInLine" : 3
      },
      "67" : {
        "Text" : "# for 64bits libs\n",
        "Line" : 502,
        "CharPositionInLine" : 2
      },
      "68" : {
        "Text" : "# this linker flag is need when using HOARD memory allocator (libhoard). \"/FORCE:MULTIPLE\"\n",
        "Line" : 508,
        "CharPositionInLine" : 1
      },
      "69" : {
        "Text" : "# Link the executable to the libraries.\n",
        "Line" : 531,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "#jblib pcre pcrecpp\n",
        "Line" : 535,
        "CharPositionInLine" : 1
      },
      "71" : {
        "Text" : "# output the executable file to root ./bin directory\n",
        "Line" : 544,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# set_target_properties(ParaEngineClient PROPERTIES RUNTIME_OUTPUT_DIRECTORY \"${SERVER_SOURCE_DIR}/bin\")\n",
        "Line" : 546,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 73
    },
    "Client/trunk/ParaEngineClient/MSVCPCHSupport.cmake" : {
      "ObjectId" : "ec8c99a2aa78499f3d627a517aca7ee0ea14fa80",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#########################################################################################\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Client/trunk/ParaEngineClient/PEClientInstall.cmake" : {
      "ObjectId" : "bc571eb398caa2466ecf5a83681ffc059ea1d6a5",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Author: LiXizhi\n\n# Company: ParaEngine.com\n\n# Date: 2009.4.25\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Client/trunk/ParaEngineClient/doc/Document.cmake" : {
      "ObjectId" : "984edc2ee138462e16eef6aced3a7eca50040c33",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Author: LiXizhi\n\n# Company: ParaEngine.com\n\n# Date: 2009.4.24\n\n# Desc: Doxygen documentation project for ParaEngine. \n\n# Please edit STRIP_FROM_PATH in _ParaNPL doxygen config file, so that it point to ${ParaEngineClient_SOURCE_DIR}\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#------- doxygen --------------\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Client/trunk/ParaEngineClient/renderer/CMakeLists.txt" : {
      "ObjectId" : "9b02989ead67b7dca081e625437c46a58b7dba60",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#target_link_libraries(Renderer)\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Client/trunk/ParaEngineClientApp/CMakeLists.txt" : {
      "ObjectId" : "8561294a485853c52b051f34902918925ce39ec9",
      "LastModified" : "2017-11-29T07:00:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Author: LiXizhi\n\n# Company: ParaEngine.com\n\n# Date: 2010.3.2\n\n# Desc: The client exe application for ParaEngine. It is just a small exe that uses ParaEngineClient.dll \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The version number.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##############################  \n\n# source code\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##############################  \n\n# installer files\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##############################  \n\n# web files\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "##############################  \n\n# web files\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "##############################  \n\n# web files\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "##############################\n\n# add the binary tree to the search path for include files\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# statically link MSVC to reduce dependancies\n",
        "Line" : 68,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# /GR- Remove RTTI to miminize the executable size\n\n# /Zi generate program database (PDB symbol files even in release build)\n",
        "Line" : 78,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# To turn size optimisations on again\n",
        "Line" : 82,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# add the executable\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# When this property is set to true the executable when linked on Windows will be created with a WinMain() entry point instead of of just main().\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# set_target_properties(ParaEngineClientApp PROPERTIES LINK_FLAGS /MANIFESTUAC:\"level='requireAdministrator' uiAccess='false'\")\n\n# Since we are installing to local app data dir from now on, we will only need medium integrity level to run the app, however protected mode IE only gives use low IL, in which we need to write to registry to promote this process to medium IL. \n\n# set_target_properties(ParaEngineClientApp PROPERTIES LINK_FLAGS /MANIFESTUAC:\"level='highestAvailable' uiAccess='false'\")\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Link the executable to the libraries. \n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Copy files Link the executable to the libraries. \n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "Client/trunk/PhysicsBT/CMakeLists.txt" : {
      "ObjectId" : "2e1b8962ef579cbd5ac8c4bf9861edd86f099bab",
      "LastModified" : "2017-11-29T07:00:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Author: LiXizhi\n\n# Company: ParaEngine.com\n\n# Date: 2010.2.24\n\n# Desc: ParaEngine plugin for the bullet physics engine. It implement the physics interface in ParaEngine. \n\n# Note: specify the Bullet_Root directory in case it is changed. \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# NOTE: modify the root directory path if it is installed at a different location. \n\n#set (Bullet_Root ${PROJECT_SOURCE_DIR}/../bullet-2.75)\n\n#set (Bullet_INCLUDE_DIR ${Bullet_Root}/src)\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add the binary tree to the search path for include files\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# statically link MSVC to reduce dependancies\n",
        "Line" : 36,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# /GR- Remove RTTI to miminize the executable size\n",
        "Line" : 46,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# generate program database (PDB symbol files even in release build)\n",
        "Line" : 53,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# add the executable\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Client/trunk/externals/assimp-3.1.1/CMakeLists.txt" : {
      "ObjectId" : "1029aaf32ada75a2e3c433543bbd2b16a2360367",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Note: Modified by LiXizhi to build only required libs for NPLRuntime\n\n# Date: 2016.10.16\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define here the needed parameters\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# subversion revision?\n",
        "Line" : 11,
        "CharPositionInLine" : 29
      },
      "3" : {
        "Text" : "# this is a very important switch and some libraries seem now to have it....\n",
        "Line" : 36,
        "CharPositionInLine" : 25
      },
      "4" : {
        "Text" : "# hide all not-exported symbols\n",
        "Line" : 37,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# enable multi-core compilation with MSVC\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# statically link MSVC to reduce dependancies\n",
        "Line" : 43,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# Cache these to allow the user to override them manually.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Generate a pkg-config .pc for the Assimp library.\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Globally enable Boost resp. the Boost workaround �?it is also needed by the\n\n# tools which include the Assimp headers.\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# cmake configuration files\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Search for external dependencies, and build them from source if not found\n\n# Search for zlib\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Search for unzip\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# if(CMAKE_CL_64)\n\n# \tset(ASSIMP_BUILD_ARCHITECTURE \"amd64\")\n\n# else(CMAKE_CL_64)\n\n# \tset(ASSIMP_BUILD_ARCHITECTURE \"x86\")\n\n# endif(CMAKE_CL_64)\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# ${CMAKE_GENERATOR}\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Packing information\n",
        "Line" : 150,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "#set(CPACK_PACKAGE_DESCRIPTION_FILE       \"${CMAKE_CURRENT_SOURCE_DIR}/description\")\n",
        "Line" : 161,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# debian\n",
        "Line" : 176,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 18
    },
    "Client/trunk/externals/assimp-3.1.1/code/CMakeLists.txt" : {
      "ObjectId" : "46ae3d3dd58f3095db0ed6f685e01f950530f608",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Listing and grouping of all the source files.\n\n# 1) Set the file lists for each component\n\n# 2) Create a Source Group for each component, for IDE project orginization\n\n# 3) Add libassimp using the file lists (eliminates duplication of file names between\n\n#    source groups and library command)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# VC2010 fixes\n",
        "Line" : 617,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# all of supported format of assimp\n",
        "Line" : 637,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Assimp Files\n",
        "Line" : 639,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# Model Support\n",
        "Line" : 646,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# Third-party libraries\n",
        "Line" : 688,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# Necessary to show the headers in the project when using the VC++ generator:\n\n# ${Boost_SRCS}\n",
        "Line" : 694,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# Old precompiled header\n\n# (removed because the precompiled header is not updated when visual studio switch configuration which leads to failed compilation.\n\n# Moreover it's a drag to recompile assimp entirely each time a modification is made to one of the included header, which is definitely counter-productive.)\n",
        "Line" : 700,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "#ignored importer\n",
        "Line" : 705,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#-DASSIMP_BUILD_NO_STL_IMPORTER \n\n#-DASSIMP_BUILD_NO_FBX_IMPORTER \n",
        "Line" : 713,
        "CharPositionInLine" : 17
      },
      "10" : {
        "Text" : "#ignored exporter\n",
        "Line" : 716,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Assimp Files\n",
        "Line" : 722,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# Model Support\n",
        "Line" : 729,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# Third-party libraries\n",
        "Line" : 735,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# Necessary to show the headers in the project when using the VC++ generator:\n\n# ${Boost_SRCS}\n",
        "Line" : 741,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "# Old precompiled header\n\n# (removed because the precompiled header is not updated when visual studio switch configuration which leads to failed compilation.\n\n# Moreover it's a drag to recompile assimp entirely each time a modification is made to one of the included header, which is definitely counter-productive.)\n",
        "Line" : 747,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "#ADD_MSVC_PRECOMPILED_HEADER(\"AssimpPCH.h\" \"AssimpPCH.cpp\" assimp_src)\n",
        "Line" : 752,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# use full version \n",
        "Line" : 761,
        "CharPositionInLine" : 31
      },
      "18" : {
        "Text" : "# Build against external unzip, or add ../contrib/unzip so\n\n# assimp can #include \"unzip.h\"\n",
        "Line" : 769,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "Client/trunk/externals/assimp-3.1.1/contrib/zlib/CMakeLists.txt" : {
      "ObjectId" : "93d5f3c6dfc159bd743f21f15ac92c1c74c449e3",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(INSTALL_BIN_DIR \"${CMAKE_INSTALL_PREFIX}/bin\" CACHE PATH \"Installation directory for executables\")\n\n#set(INSTALL_LIB_DIR \"${CMAKE_INSTALL_PREFIX}/lib\" CACHE PATH \"Installation directory for libraries\")\n\n#set(INSTALL_INC_DIR \"${CMAKE_INSTALL_PREFIX}/include\" CACHE PATH \"Installation directory for headers\")\n\n#set(INSTALL_MAN_DIR \"${CMAKE_INSTALL_PREFIX}/share/man\" CACHE PATH \"Installation directory for manual pages\")\n\n#set(INSTALL_PKGCONFIG_DIR \"${CMAKE_INSTALL_PREFIX}/share/pkgconfig\" CACHE PATH \"Installation directory for pkgconfig (.pc) files\")\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Check to see if we have large file support\n\n#\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We add these other definitions here because CheckTypeSize.cmake\n\n# in CMake 2.4.x does not automatically do so and we want\n\n# compatibility with CMake 2.4.x.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# clear variable\n",
        "Line" : 47,
        "CharPositionInLine" : 32
      },
      "4" : {
        "Text" : "#\n\n# Check for fseeko\n\n#\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# Check for unistd.h\n\n#\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# If we're doing an out of source build and the user has a zconf.h\n\n# in their source tree...\n",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#============================================================================\n\n# zlib\n\n#============================================================================\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# If present will override custom build rule below.\n",
        "Line" : 129,
        "CharPositionInLine" : 23
      },
      "9" : {
        "Text" : "# parse the full version number from zlib.h and include in ZLIB_FULL_VERSION\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# This gets us DLL resource information when compiling on MinGW.\n",
        "Line" : 172,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 11
    },
    "Client/trunk/externals/assimp-4.0.0/CMakeLists.txt" : {
      "ObjectId" : "cd3acbe188421f51daad8a765d84f7f322a8fb2f",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Open Asset Import Library (assimp)\n\n# ----------------------------------------------------------------------\n\n# Copyright (c) 2006-2017, assimp team\n\n# All rights reserved.\n\n#\n\n# Redistribution and use of this software in source and binary forms,\n\n# with or without modification, are permitted provided that the\n\n# following conditions are met:\n\n#\n\n# * Redistributions of source code must retain the above\n\n#   copyright notice, this list of conditions and the\n\n#   following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above\n\n#   copyright notice, this list of conditions and the\n\n#   following disclaimer in the documentation and/or other\n\n#   materials provided with the distribution.\n\n#\n\n# * Neither the name of the assimp team, nor the names of its\n\n#   contributors may be used to endorse or promote products\n\n#   derived from this software without specific prior\n\n#   written permission of the assimp team.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#----------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Remove when CMake >= 2.8.4 is required\n",
        "Line" : 36,
        "CharPositionInLine" : 33
      },
      "2" : {
        "Text" : "# All supported options ###############################################\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Define here the needed parameters\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# subversion revision?\n",
        "Line" : 113,
        "CharPositionInLine" : 29
      },
      "5" : {
        "Text" : "# Needed for openddl_parser config, no use of c++11 at this moment\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Get the current working branch\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Get the latest abbreviated commit hash of the working branch\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Check for OpenMP support\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Ensure that we do not run into issues like http://www.tcm.phy.cam.ac.uk/sw/inodes64.html on 32 bit linux\n",
        "Line" : 180,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# only necessary for 32-bit linux\n",
        "Line" : 181,
        "CharPositionInLine" : 36
      },
      "11" : {
        "Text" : "# Use GNUInstallDirs for Unix predefined directories\n",
        "Line" : 185,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Grouped compiler settings\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# hide all not-exported symbols\n",
        "Line" : 192,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# enable multi-core compilation with MSVC\n",
        "Line" : 197,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# If this is an in-source build (CMAKE_SOURCE_DIR == CMAKE_BINARY_DIR),\n\n# write the library/executable files to the respective directories in the\n\n# source tree. During an out-of-source build, however, do not litter this\n\n# directory, since that is probably what the user wanted to avoid.\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Cache these to allow the user to override them manually.\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Only generate this target if no higher-level project already has\n",
        "Line" : 243,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# add make uninstall capability\n",
        "Line" : 245,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# cmake configuration files\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Look for system installed irrXML\n",
        "Line" : 261,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Search for external dependencies, and build them from source if not found\n\n# Search for zlib\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# compile from sources\n",
        "Line" : 277,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# Search for unzip\n",
        "Line" : 288,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# ${CMAKE_GENERATOR}\n",
        "Line" : 304,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# pick the correct prebuilt library\n",
        "Line" : 323,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# winsock and winmm are necessary dependencies of melange (this is undocumented, but true.)\n",
        "Line" : 349,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# Check dependencies for assimp_qt_viewer.\n\n# Why here? Maybe user do not want Qt viewer and have no Qt.\n\n# Why assimp_qt_viewer/CMakeLists.txt still contain similar check?\n\n# Because viewer can be build independently of Assimp.\n",
        "Line" : 373,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# Generate a pkg-config .pc for the Assimp library.\n",
        "Line" : 411,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Packing information\n",
        "Line" : 416,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# debian\n",
        "Line" : 441,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 31
    },
    "Client/trunk/externals/assimp-4.0.0/cmake-modules/Coveralls.cmake" : {
      "ObjectId" : "5343f1583c176f41c197667f7419935745912a6a",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# The MIT License (MIT)\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n\n#\n\n# Copyright (C) 2014 Joakim Söderberg <joakim.soderberg@gmail.com>\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# must be outside coveralls_setup() to get correct path\n",
        "Line" : 25,
        "CharPositionInLine" : 50
      },
      "2" : {
        "Text" : "#\n\n# Param _COVERAGE_SRCS\tA list of source files that coverage should be collected for.\n\n# Param _COVERALLS_UPLOAD Upload the result to coveralls?\n\n#\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# When passing a CMake list to an external process, the list\n\n# will be converted from the format \"1;2;3\" to \"1 2 3\".\n\n# This means the script we're calling won't see it as a list\n\n# of sources, but rather just one long path. We remedy this\n\n# by replacing \";\" with \"*\" and then reversing that in the script\n\n# that we're calling.\n\n# http://cmake.3232098.n2.nabble.com/Passing-a-CMake-list-quot-as-is-quot-to-a-custom-target-td6505681.html\n",
        "Line" : 47,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "#message(\"Coverage sources: ${COVERAGE_SRCS}\")\n",
        "Line" : 60,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# Zero the coverage counters.\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Run regress tests.\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Generate Gcov and translate it into coveralls JSON.\n\n# We do this by executing an external CMake script.\n\n# (We don't want this to run at CMake generation time, but after compilation and everything has run).\n",
        "Line" : 71,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# TODO: This is passed like: \"a b c\", not \"a;b;c\"\n",
        "Line" : 75,
        "CharPositionInLine" : 39
      },
      "9" : {
        "Text" : "# Upload the JSON to coveralls.\n",
        "Line" : 95,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 10
    },
    "Client/trunk/externals/assimp-4.0.0/cmake-modules/CoverallsClear.cmake" : {
      "ObjectId" : "a9ad487630513df789ffcfec5ac058361e21fccb",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# The MIT License (MIT)\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n\n#\n\n# Copyright (C) 2014 Joakim Söderberg <joakim.soderberg@gmail.com>\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# do not follow symlinks in file(GLOB_RECURSE ...)\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Client/trunk/externals/assimp-4.0.0/cmake-modules/CoverallsGenerateGcov.cmake" : {
      "ObjectId" : "ba506e3d4a8f1b7c88d7ef9f8d5871e31fd2a7d4",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# The MIT License (MIT)\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n\n#\n\n# Copyright (C) 2014 Joakim Söderberg <joakim.soderberg@gmail.com>\n\n#\n\n# This is intended to be run by a custom target in a CMake project like this.\n\n# 0. Compile program with coverage support.\n\n# 1. Clear coverage data. (Recursively delete *.gcda in build dir)\n\n# 2. Run the unit tests.\n\n# 3. Run this script specifying which source files the coverage should be performed on.\n\n#\n\n# This script will then use gcov to generate .gcov files in the directory specified\n\n# via the COV_PATH var. This should probably be the same as your cmake build dir.\n\n#\n\n# It then parses the .gcov files to convert them into the Coveralls JSON format:\n\n# https://coveralls.io/docs/api\n\n#\n\n# Example for running as standalone CMake script from the command line:\n\n# (Note it is important the -P is at the end...)\n\n# $ cmake -DCOV_PATH=$(pwd)\n\n#         -DCOVERAGE_SRCS=\"catcierge_rfid.c;catcierge_timer.c\"\n\n#         -P ../cmake/CoverallsGcovUpload.cmake\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Make sure we have the needed arguments.\n\n#\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Since it's not possible to pass a CMake list properly in the\n\n# \"1;2;3\" format to an external process, we have replaced the\n\n# \";\" with \"*\", so reverse that here so we get it back into the\n\n# CMake list format.\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# convert all paths in COVERAGE_SRCS to absolute paths\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# TODO: Fill in git remote data\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Branch.\n",
        "Line" : 110,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "############################# Macros #########################################\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# This macro converts from the full path format gcov outputs:\n\n#\n\n#    /path/to/project/root/build/#path#to#project#root#subdir#the_file.c.gcov\n\n#\n\n# to the original source file path the .gcov is for:\n\n#\n\n#   /path/to/project/root/subdir/the_file.c\n\n#\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# /path/to/project/root/build/#path#to#project#root#subdir#the_file.c.gcov\n\n# ->\n\n# #path#to#project#root#subdir#the_file.c.gcov\n",
        "Line" : 165,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# #path#to#project#root#subdir#the_file.c.gcov -> /path/to/project/root/subdir/the_file.c\n",
        "Line" : 170,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "##############################################################################\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Get the coverage data.\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Get a list of all the object directories needed by gcov\n\n# (The directories the .gcda files and .o files are found in)\n\n# and run gcov on those.\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#\n\n# The -p below refers to \"Preserve path components\",\n\n# This means that the generated gcov filename of a source file will\n\n# keep the original files entire filepath, but / is replaced with #.\n\n# Example:\n\n#\n\n# /path/to/project/root/build/CMakeFiles/the_file.dir/subdir/the_file.c.gcda\n\n# ------------------------------------------------------------------------------\n\n# File '/path/to/project/root/subdir/the_file.c'\n\n# Lines executed:68.34% of 199\n\n# /path/to/project/root/subdir/the_file.c:creating '#path#to#project#root#subdir#the_file.c.gcov'\n\n#\n\n# If -p is not specified then the file is named only \"the_file.c.gcov\"\n\n#\n",
        "Line" : 190,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# TODO: Make these be absolute path\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Get only the filenames to use for filtering.\n\n#set(COVERAGE_SRCS_NAMES \"\")\n\n#foreach (COVSRC ${COVERAGE_SRCS})\n\n#\tget_filename_component(COVSRC_NAME ${COVSRC} NAME)\n\n#\tmessage(\"${COVSRC} -> ${COVSRC_NAME}\")\n\n#\tlist(APPEND COVERAGE_SRCS_NAMES \"${COVSRC_NAME}\")\n\n#endforeach()\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#\n\n# Filter out all but the gcov files we want.\n\n#\n\n# We do this by comparing the list of COVERAGE_SRCS filepaths that the\n\n# user wants the coverage data for with the paths of the generated .gcov files,\n\n# so that we only keep the relevant gcov files.\n\n#\n\n# Example:\n\n# COVERAGE_SRCS =\n\n#\t\t\t\t/path/to/project/root/subdir/the_file.c\n\n#\n\n# ALL_GCOV_FILES =\n\n#\t\t\t\t/path/to/project/root/build/#path#to#project#root#subdir#the_file.c.gcov\n\n#\t\t\t\t/path/to/project/root/build/#path#to#project#root#subdir#other_file.c.gcov\n\n#\n\n# Result should be:\n\n# GCOV_FILES =\n\n#\t\t\t\t/path/to/project/root/build/#path#to#project#root#subdir#the_file.c.gcov\n\n#\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#message(\"Look in coverage sources: ${COVERAGE_SRCS}\")\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#\n\n# /path/to/project/root/build/#path#to#project#root#subdir#the_file.c.gcov\n\n# ->\n\n# /path/to/project/root/subdir/the_file.c\n",
        "Line" : 249,
        "CharPositionInLine" : 1
      },
      "19" : {
        "Text" : "# Is this in the list of source files?\n\n# TODO: We want to match against relative path filenames from the source file root...\n",
        "Line" : 256,
        "CharPositionInLine" : 1
      },
      "20" : {
        "Text" : "# We remove it from the list, so we don't bother searching for it again.\n\n# Also files left in COVERAGE_SRCS_REMAINING after this loop ends should\n\n# have coverage data generated from them (no lines are covered).\n",
        "Line" : 264,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# TODO: Enable setting these\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Read the GCOV files line by line and get the coverage data.\n",
        "Line" : 301,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# The new coveralls API doesn't need the entire source (Yay!)\n\n# However, still keeping that part for now. Will cleanup in the future.\n",
        "Line" : 307,
        "CharPositionInLine" : 1
      },
      "24" : {
        "Text" : "# Loads the gcov file as a list of lines.\n\n# (We first open the file and replace all occurences of [] with _\n\n#  because CMake will fail to parse a line containing unmatched brackets...\n\n#  also the \\ to escaped \\n in macros screws up things.)\n\n# https://public.kitware.com/Bug/view.php?id=15369\n",
        "Line" : 312,
        "CharPositionInLine" : 1
      },
      "25" : {
        "Text" : "# Remove file contents to avoid encoding issues (cmake 2.8 has no ENCODING option)\n",
        "Line" : 322,
        "CharPositionInLine" : 1
      },
      "26" : {
        "Text" : "# Instead of trying to parse the source from the\n\n# gcov file, simply read the file contents from the source file.\n\n# (Parsing it from the gcov is hard because C-code uses ; in many places\n\n#  which also happens to be the same as the CMake list delimeter).\n",
        "Line" : 329,
        "CharPositionInLine" : 1
      },
      "27" : {
        "Text" : "# According to http://json.org/ these should be escaped as well.\n\n# Don't know how to do that in CMake however...\n\n#string(REPLACE \"\\b\" \"\\\\\\\\b\" GCOV_FILE_SOURCE \"${GCOV_FILE_SOURCE}\")\n\n#string(REPLACE \"\\f\" \"\\\\\\\\f\" GCOV_FILE_SOURCE \"${GCOV_FILE_SOURCE}\")\n\n#string(REGEX REPLACE \"\\u([a-fA-F0-9]{4})\" \"\\\\\\\\u\\\\1\" GCOV_FILE_SOURCE \"${GCOV_FILE_SOURCE}\")\n",
        "Line" : 340,
        "CharPositionInLine" : 1
      },
      "28" : {
        "Text" : "# We want a json array of coverage data as a single string\n\n# start building them from the contents of the .gcov\n",
        "Line" : 346,
        "CharPositionInLine" : 1
      },
      "29" : {
        "Text" : "# Line number for the .gcov.\n",
        "Line" : 350,
        "CharPositionInLine" : 24
      },
      "30" : {
        "Text" : "#message(\"${GCOV_LINE}\")\n\n# Example of what we're parsing:\n\n# Hitcount  |Line | Source\n\n# \"        8:   26:        if (!allowed || (strlen(allowed) == 0))\"\n",
        "Line" : 353,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# Check if we should exclude lines using the Lcov syntax.\n",
        "Line" : 363,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# Lines with 0 line numbers are metadata and can be ignored.\n",
        "Line" : 393,
        "CharPositionInLine" : 3
      },
      "33" : {
        "Text" : "# Translate the hitcount into valid JSON values.\n",
        "Line" : 399,
        "CharPositionInLine" : 5
      },
      "34" : {
        "Text" : "# Advanced way of removing the trailing comma in the JSON array.\n\n# \"[1, 2, 3, \" -> \"[1, 2, 3\"\n",
        "Line" : 421,
        "CharPositionInLine" : 1
      },
      "35" : {
        "Text" : "# Append the trailing ] to complete the JSON array.\n",
        "Line" : 425,
        "CharPositionInLine" : 1
      },
      "36" : {
        "Text" : "# Generate the final JSON for this file.\n",
        "Line" : 428,
        "CharPositionInLine" : 1
      },
      "37" : {
        "Text" : "# Loop through all files we couldn't find any coverage for\n\n# as well, and generate JSON for those as well with 0% coverage.\n",
        "Line" : 435,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Set variables for json replacement\n",
        "Line" : 439,
        "CharPositionInLine" : 1
      },
      "39" : {
        "Text" : "# Loads the source file as a list of lines.\n",
        "Line" : 444,
        "CharPositionInLine" : 1
      },
      "40" : {
        "Text" : "# Remove trailing comma, and complete JSON array with ]\n",
        "Line" : 460,
        "CharPositionInLine" : 1
      },
      "41" : {
        "Text" : "# Generate the final JSON for this file.\n",
        "Line" : 464,
        "CharPositionInLine" : 1
      },
      "42" : {
        "Text" : "# Get rid of trailing comma.\n",
        "Line" : 470,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Generate the final complete JSON!\n",
        "Line" : 474,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 44
    },
    "Client/trunk/externals/assimp-4.0.0/cmake-modules/DebSourcePPA.cmake" : {
      "ObjectId" : "d8a786fb2bdc8cfba48c4260600dbe6e9525eed6",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Debian Source Package Generator\n\n#\n\n# Copyright (c) 2010 Daniel Pfeifer <daniel@pfeifer-mail.de>\n\n# Many modifications by Rosen Diankov <rosen.diankov@gmail.com>\n\n#\n\n# Creates source debian files and manages library dependencies\n\n#\n\n# Features:\n\n# \n\n# - Automatically generates symbols and run-time dependencies from the build dependencies\n\n# - Custom copy of source directory via CPACK_DEBIAN_PACKAGE_SOURCE_COPY\n\n# - Simultaneous output of multiple debian source packages for each distribution\n\n# - Can specificy distribution-specific dependencies by suffixing DEPENDS with _${DISTRO_NAME}, for example: CPACK_DEBIAN_PACKAGE_DEPENDS_LUCID, CPACK_COMPONENT_MYCOMP0_DEPENDS_LUCID\n\n#\n\n# Usage:\n\n#\n\n# set(CPACK_DEBIAN_BUILD_DEPENDS debhelper cmake)\n\n# set(CPACK_DEBIAN_PACKAGE_PRIORITY optional)\n\n# set(CPACK_DEBIAN_PACKAGE_SECTION devel)\n\n# set(CPACK_DEBIAN_CMAKE_OPTIONS \"-DMYOPTION=myvalue\")\n\n# set(CPACK_DEBIAN_PACKAGE_DEPENDS mycomp0 mycomp1 some_ubuntu_package)\n\n# set(CPACK_DEBIAN_PACKAGE_DEPENDS_UBUNTU_LUCID mycomp0 mycomp1 lucid_specific_package)\n\n# set(CPACK_DEBIAN_PACKAGE_NAME mypackage)\n\n# set(CPACK_DEBIAN_PACKAGE_REMOVE_SOURCE_FILES unnecessary_file unnecessary_dir/file0)\n\n# set(CPACK_DEBIAN_PACKAGE_SOURCE_COPY svn export --force) # if using subversion\n\n# set(CPACK_DEBIAN_DISTRIBUTION_NAME ubuntu)\n\n# set(CPACK_DEBIAN_DISTRIBUTION_RELEASES karmic lucid maverick natty)\n\n# set(CPACK_DEBIAN_CHANGELOG \"  * Extra change log lines\")\n\n# set(CPACK_DEBIAN_PACKAGE_SUGGESTS \"ipython\")\n\n# set(CPACK_COMPONENT_X_RECOMMENDS \"recommended-package\")\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# DEBIAN/control\n\n# debian policy enforce lower case for package name\n\n# Package: (mandatory)\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Section: (recommended)\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Priority: (recommended)\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# remove unnecessary folders\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# create the original source tar\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "##############################################################################\n\n# debian/control\n",
        "Line" : 89,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "##############################################################################\n\n# debian/copyright\n",
        "Line" : 248,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "##############################################################################\n\n# debian/rules\n",
        "Line" : 255,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# for reducing size\n",
        "Line" : 290,
        "CharPositionInLine" : 18
      },
      "10" : {
        "Text" : "##############################################################################\n\n# debian/compat\n",
        "Line" : 314,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "##############################################################################\n\n# debian/source/format\n",
        "Line" : 318,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "##############################################################################\n\n# debian/changelog\n",
        "Line" : 322,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "##############################################################################\n\n# debuild -S\n",
        "Line" : 333,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "##############################################################################\n\n# dput ppa:your-lp-id/ppa <source.changes>\n",
        "Line" : 345,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "Client/trunk/externals/assimp-4.0.0/cmake-modules/FindDevIL.cmake" : {
      "ObjectId" : "381a75dd2af039f3b647ba56df232e4986976b0f",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindDevIL\n\n# ---------\n\n#\n\n#\n\n#\n\n# This module locates the developer's image library.\n\n# http://openil.sourceforge.net/\n\n#\n\n# This module sets:\n\n#\n\n# ::\n\n#\n\n#    IL_LIBRARIES -   the name of the IL library. These include the full path to\n\n#                     the core DevIL library. This one has to be linked into the\n\n#                     application.\n\n#    ILU_LIBRARIES -  the name of the ILU library. Again, the full path. This\n\n#                     library is for filters and effects, not actual loading. It\n\n#                     doesn't have to be linked if the functionality it provides\n\n#                     is not used.\n\n#    ILUT_LIBRARIES - the name of the ILUT library. Full path. This part of the\n\n#                     library interfaces with OpenGL. It is not strictly needed\n\n#                     in applications.\n\n#    IL_INCLUDE_DIR - where to find the il.h, ilu.h and ilut.h files.\n\n#    IL_FOUND -       this is set to TRUE if all the above variables were set.\n\n#                     This will be set to false if ILU or ILUT are not found,\n\n#                     even if they are not needed. In most systems, if one\n\n#                     library is found all the others are as well. That's the\n\n#                     way the DevIL developers release it.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO: Add version support.\n\n# Tested under Linux and Windows (MSVC)\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#include(${CMAKE_CURRENT_LIST_DIR}/FindPackageHandleStandardArgs.cmake)\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#message(\"IL_INCLUDE_DIR is ${IL_INCLUDE_DIR}\")\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#message(\"IL_LIBRARIES is ${IL_LIBRARIES}\")\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#message(\"ILUT_LIBRARIES is ${ILUT_LIBRARIES}\")\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#message(\"ILU_LIBRARIES is ${ILU_LIBRARIES}\")\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "Client/trunk/externals/assimp-4.0.0/cmake-modules/FindDirectX.cmake" : {
      "ObjectId" : "70704314233f84221f7b3b6ebd78d36dfd00a395",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Find DirectX SDK\n\n# Define:\n\n# DirectX_FOUND\n\n# DirectX_INCLUDE_DIR\n\n# DirectX_LIBRARY\n\n# DirectX_ROOT_DIR\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The only platform it makes sense to check for DirectX SDK\n",
        "Line" : 18,
        "CharPositionInLine" : 10
      },
      "3" : {
        "Text" : "# Get path, convert backslashes as ${ENV_DXSDK_DIR}\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# construct search paths\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# redo search if prefix path changed\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# dlls are in DirectX_ROOT_DIR/Developer Runtime/x64|x86\n\n# lib files are in DirectX_ROOT_DIR/Lib/x64|x86\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# look for dxgi (needed by both 10 and 11)\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# look for d3dcompiler (needed by 11)\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# look for D3D11 components\n",
        "Line" : 79,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 10
    },
    "Client/trunk/externals/assimp-4.0.0/cmake-modules/FindIrrXML.cmake" : {
      "ObjectId" : "5434e0b8629010b790d5e8190f0c209dfe6e5b31",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find IrrXMl from irrlicht project\n\n#\n\n# Find LibIrrXML headers and library\n\n#\n\n#   IRRXML_FOUND          - IrrXML found\n\n#   IRRXML_INCLUDE_DIR    - Headers location\n\n#   IRRXML_LIBRARY        - IrrXML main library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Client/trunk/externals/assimp-4.0.0/cmake-modules/FindPkgMacros.cmake" : {
      "ObjectId" : "074cce35236c472f0e8131c10e0dde066d63a0da",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##################################################################\n\n# Provides some common functionality for the FindPackage modules\n\n##################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Begin processing of package\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Display a status message unless FIND_QUIETLY is set\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Get environment variable, define it as ENV_$var and make sure backslashes are converted to forward slashes\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# replace won't work if var is blank\n",
        "Line" : 31,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "# Construct search paths for includes and libraries from a PREFIX_PATH\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# clear cache variables if a certain variable changed\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# test against internal check variable\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Try to get some hints from pkg-config, if available\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Android does not support PKG_CONFIG so we disable it\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Couple a set of release AND debug libraries (or frameworks)\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Generate debug names from given release names\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Add the parent dir from DIR to VAR\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Do the final processing for the package find.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# skip if already processed during this run\n",
        "Line" : 99,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Slightly customised framework finder\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "Client/trunk/externals/assimp-4.0.0/cmake-modules/FindRT.cmake" : {
      "ObjectId" : "17d5df81db5ebfaa67e09e4dbf9c0d41cee230cc",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find real time libraries\n\n# Once done, this will define\n\n#\n\n# RT_FOUND - system has rt library\n\n# RT_LIBRARIES - rt libraries directory\n\n#\n\n# Source: https://gitlab.cern.ch/dss/eos/commit/44070e575faaa46bd998708ef03eedb381506ff0\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set\n\n# RT_FOUND to TRUE if all listed variables are TRUE\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Client/trunk/externals/assimp-4.0.0/cmake-modules/FindZLIB.cmake" : {
      "ObjectId" : "95eb51547377ad817104e6cdbf8367dcdc6c6c90",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Try to find ZLIB\n\n# Once done, this will define\n\n#\n\n#  ZLIB_FOUND - system has ZLIB\n\n#  ZLIB_INCLUDE_DIRS - the ZLIB include directories\n\n#  ZLIB_LIBRARIES - link these to use ZLIB\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Get path, convert backslashes as ${ENV_${var}}\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# construct search paths\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# redo search if prefix path changed\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Client/trunk/externals/assimp-4.0.0/cmake-modules/Findassimp.cmake" : {
      "ObjectId" : "95f3250b3fc9d01b2a9c2f1c8b548f2bcab1a68f",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find path of each library\n",
        "Line" : 10,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "Client/trunk/externals/assimp-4.0.0/cmake-modules/MinGW_x86_64.cmake" : {
      "ObjectId" : "d5c1f15011ed47146856b311cd27d55d9e93e570",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# this one sets internal to crosscompile (in theory)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# the minimalistic settings\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# where is the target (so called staging) environment\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# search for programs in the build host directories (default BOTH)\n\n#SET(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)\n\n# for libraries and headers in the target directories\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Client/trunk/externals/assimp-4.0.0/cmake-modules/PrecompiledHeader.cmake" : {
      "ObjectId" : "6af7866f5034660c9e6b84192cdd2e7f678cef47",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Do not consider .c files\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Add precompiled header to SourcesVar\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "Client/trunk/externals/assimp-4.0.0/code/CMakeLists.txt" : {
      "ObjectId" : "30f2b025627cae0f346020cd09b05e94914801ce",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Open Asset Import Library (assimp)\n\n# ----------------------------------------------------------------------\n\n#\n\n# Copyright (c) 2006-2017, assimp team\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# All rights reserved.\n\n#\n\n# Redistribution and use of this software in source and binary forms,\n\n# with or without modification, are permitted provided that the\n\n# following conditions are met:\n\n#\n\n# * Redistributions of source code must retain the above\n\n#   copyright notice, this list of conditions and the\n\n#   following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above\n\n#   copyright notice, this list of conditions and the\n\n#   following disclaimer in the documentation and/or other\n\n#   materials provided with the distribution.\n\n#\n\n# * Neither the name of the assimp team, nor the names of its\n\n#   contributors may be used to endorse or promote products\n\n#   derived from this software without specific prior\n\n#   written permission of the assimp team.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n#----------------------------------------------------------------------\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Listing and grouping of all the source files.\n\n# 1) Set the file lists for each component\n\n# 2) Create a Source Group for each component, for IDE project orginization\n\n# 3) Add libassimp using the file lists (eliminates duplication of file names between\n\n#    source groups and library command)\n\n#\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# if this variable is set to TRUE, the user can manually disable importers by setting\n\n# ASSIMP_BUILD_XXX_IMPORTER to FALSE for each importer\n\n# if this variable is set to FALSE, the user can manually enable importers by setting\n\n# ASSIMP_BUILD_XXX_IMPORTER to TRUE for each importer\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# macro to add the CMake Option ADD_ASSIMP_IMPORTER_<name> which enables compile of loader\n\n# this way selective loaders can be compiled (reduces filesize + compile time)\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#IF(${onoff})\n\n#\t OPTION(ASSIMP_BUILD_${name}_IMPORTER \"build the ${name} importer\" ${ASSIMP_BUILD_ALL_IMPORTERS_BY_DEFAULT})\n\n#ELSE()\n\n#\tOPTION(ASSIMP_BUILD_${name}_IMPORTER \"build the ${name} importer\" FALSE)\n\n#ENDIF()\n",
        "Line" : 200,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# list of enabled importers\n",
        "Line" : 222,
        "CharPositionInLine" : 33
      },
      "7" : {
        "Text" : "# disabled list (used to print)\n",
        "Line" : 223,
        "CharPositionInLine" : 34
      },
      "8" : {
        "Text" : "# Check dependencies for glTF importer with Open3DGC-compression.\n\n# RT-extensions is used in \"contrib/Open3DGC/o3dgcTimer.h\" for collecting statistics. Pointed file\n\n# has implementation for different platforms: WIN32, __MACH__ and other (\"else\" block).\n",
        "Line" : 789,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#!TODO: off course is better to remove statistics timers from o3dgc codec. Or propose to choose what to use.\n",
        "Line" : 799,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# VC2010 fixes\n",
        "Line" : 805,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Assimp Files\n",
        "Line" : 831,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Model Support\n",
        "Line" : 840,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Third-party libraries\n",
        "Line" : 843,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Necessary to show the headers in the project when using the VC++ generator:\n",
        "Line" : 850,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# in order to prevent DLL hell, each of the DLLs have to be suffixed with the major version and msvc prefix\n",
        "Line" : 885,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# use full version\n",
        "Line" : 908,
        "CharPositionInLine" : 32
      },
      "17" : {
        "Text" : "# Build against external unzip, or add ../contrib/unzip so\n\n# assimp can #include \"unzip.h\"\n",
        "Line" : 916,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Add RT-extension library for glTF importer with Open3DGC-compression.\n",
        "Line" : 925,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Create the coveralls target.\n",
        "Line" : 959,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# The source files.\n\n# If we should upload.\n",
        "Line" : 961,
        "CharPositionInLine" : 27
      },
      "21" : {
        "Text" : "# (Optional) Alternate project cmake module path.\n",
        "Line" : 963,
        "CharPositionInLine" : 48
      },
      "CommentCount" : 22
    },
    "Client/trunk/externals/assimp-4.0.0/contrib/CMakeLists.txt" : {
      "ObjectId" : "362f1653d1c569470eb7035459672a1da0b4622d",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Compile internal irrXML only if system is not requested\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Client/trunk/externals/assimp-4.0.0/contrib/gtest/CMakeLists.txt" : {
      "ObjectId" : "621d0f0421543eba41e1d69f497814104bb9c6a7",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# CMake build script for Google Test.\n\n#\n\n# To run the tests for Google Test itself on Linux, use 'make test' or\n\n# ctest.  You can select which tests to run using 'ctest -R regex'.\n\n# For more options, run 'ctest --help'.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BUILD_SHARED_LIBS is a standard CMake variable, but we declare it here to\n\n# make it prominent in the GUI.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# When other libraries are using a shared version of runtime libraries,\n\n# Google Test also has to use one.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Defines pre_project_set_up_hermetic_build() and set_up_hermetic_build().\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "########################################################################\n\n#\n\n# Project-wide settings\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Name of the project.\n\n#\n\n# CMake files in this project can refer to the root source directory\n\n# as ${gtest_SOURCE_DIR} and to the root binary directory as\n\n# ${gtest_BINARY_DIR}.\n\n# Language \"C\" is required for find_package(Threads).\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define helper functions and macros used by Google Test.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Defined in internal_utils.cmake.\n",
        "Line" : 62,
        "CharPositionInLine" : 30
      },
      "8" : {
        "Text" : "# Where Google Test's .h files can be found.\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Where Google Test's libraries can be found.\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Summary of tuple support for Microsoft Visual Studio:\n\n# Compiler    version(MS)  version(cmake)  Support\n\n# ----------  -----------  --------------  -----------------------------\n\n# <= VS 2010  <= 10        <= 1600         Use Google Tests's own tuple.\n\n# VS 2012     11           1700            std::tr1::tuple + _VARIADIC_MAX=10\n\n# VS 2013     12           1800            std::tr1::tuple\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "########################################################################\n\n#\n\n# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Google Test libraries.  We build them using more strict warnings than what\n\n# are used for other targets, to ensure that gtest can be compiled by a user\n\n# aggressive about warnings.\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# If the CMake version supports it, attach header directory information\n\n# to the targets for when we are part of a parent build (ie being pulled\n\n# in via add_subdirectory() rather than being a standalone build).\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "########################################################################\n\n#\n\n# Install rules\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "########################################################################\n\n#\n\n# Samples on how to link user tests with gtest or gtest_main.\n\n#\n\n# They are not built by default.  To build them, set the\n\n# gtest_build_samples option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_samples=ON flag when running cmake.\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "########################################################################\n\n#\n\n# Google Test's own tests.\n\n#\n\n# You can skip this section if you aren't interested in testing\n\n# Google Test itself.\n\n#\n\n# The tests are not built by default.  To build them, set the\n\n# gtest_build_tests option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_tests=ON flag when running cmake.\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# This must be set in the root directory for the tests to be run by\n\n# 'make test' or ctest.\n",
        "Line" : 143,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "############################################################\n\n# C++ tests built with standard compiler flags.\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "############################################################\n\n# C++ tests built with non-standard compiler flags.\n",
        "Line" : 178,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 181,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# 1600 is Visual Studio 2010.\n",
        "Line" : 210,
        "CharPositionInLine" : 43
      },
      "22" : {
        "Text" : "# Visual Studio 2010, 2012, and 2013 define symbols in std::tr1 that\n\n# conflict with our own definitions. Therefore using our own tuple does not\n\n# work on those compilers.\n",
        "Line" : 211,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "############################################################\n\n# Python tests.\n",
        "Line" : 225,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Visual Studio .NET 2003 does not support STL with exceptions disabled.\n",
        "Line" : 231,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# 1310 is Visual Studio .NET 2003\n",
        "Line" : 232,
        "CharPositionInLine" : 46
      },
      "26" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 268,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 27
    },
    "Client/trunk/externals/assimp-4.0.0/contrib/gtest/Makefile.am" : {
      "ObjectId" : "29797e4e9de4e1d5e5f93bba14288de87f623946",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Automake file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Nonstandard package files for distribution\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# gtest source files that we don't compile directly.  They are\n\n# #included by gtest-all.cc.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Sample files that we don't compile.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# C++ test files that we don't compile directly.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Python tests that we don't run.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# CMake script\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# MSVC project files\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# xcode project files\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# xcode sample files\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# C++Builder project files\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Distribute and install M4 macro\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# We define the global AM_CPPFLAGS as everything we compile includes from these\n\n# directories.\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Modifies compiler and linker flags for pthreads compatibility.\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Build rules for libraries.\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Bulid rules for samples and tests. Automake's naming for some of\n\n# these variables isn't terribly obvious, so this is a brief\n\n# reference:\n\n#\n\n# TESTS -- Programs run automatically by \"make check\"\n\n# check_PROGRAMS -- Programs built by \"make check\" but not necessarily run\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# A simple sample on using gtest.\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Another sample.  It also verifies that libgtest works.\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# This tests most constructs of gtest and verifies that libgtest_main\n\n# and libgtest work.\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Tests that fused gtest files compile and work.\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Build rules for putting fused Google Test files into the distribution\n\n# package. The user can also create those files by manually running\n\n# scripts/fuse_gtest_files.py.\n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Death tests may produce core dumps in the build directory. In case\n\n# this happens, clean them to keep distcleancheck happy.\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Disables 'make install' as installing a compiled version of Google\n\n# Test can lead to undefined behavior due to violation of the\n\n# One-Definition Rule.\n",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "Client/trunk/externals/assimp-4.0.0/contrib/gtest/cmake/internal_utils.cmake" : {
      "ObjectId" : "777b91ed4b8caa226ea55cfa61fe7ec433ffb452",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Defines functions and macros useful for building Google Test and\n\n# Google Mock.\n\n#\n\n# Note:\n\n#\n\n# - This file will be run twice when building Google Mock (once via\n\n#   Google Test's CMakeLists.txt, and once via Google Mock's).\n\n#   Therefore it shouldn't have any side effects other than defining\n\n#   the functions and macros.\n\n#\n\n# - The functions/macros defined in this file may depend on Google\n\n#   Test and Google Mock's option() definitions, and thus must be\n\n#   called *after* the options have been defined.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Tweaks CMake's default compiler/linker settings to suit Google Test's needs.\n\n#\n\n# This must be a macro(), as inside a function string() can only\n\n# update variables in the function scope.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For MSVC, CMake sets certain flags to defaults we want to override.\n\n# This replacement code is taken from sample in the CMake Wiki at\n\n# http://www.cmake.org/Wiki/CMake_FAQ#Dynamic_Replace.\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# When Google Test is built as a shared library, it should also use\n\n# shared runtime libraries.  Otherwise, it may end up with multiple\n\n# copies of runtime library data in different modules, resulting in\n\n# hard-to-find crashes. When it is built as a static library, it is\n\n# preferable to use CRT as static libraries, as we don't have to rely\n\n# on CRT DLLs being available. CMake always defaults to using shared\n\n# CRT libraries, so we override that default here.\n",
        "Line" : 28,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# We prefer more strict warning checking for building Google Test.\n\n# Replaces /W3 with /W4 in defaults.\n",
        "Line" : 38,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Defines the compiler/linker flags used to build Google Test and\n\n# Google Mock.  You can tweak these definitions to suit your need.  A\n\n# variable's value is empty before it's explicitly assigned to.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Defines CMAKE_USE_PTHREADS_INIT and CMAKE_THREAD_LIBS_INIT.\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Newlines inside flags variables break CMake's NMake generator.\n\n# TODO(vladl@google.com): Add -RTCs and -RTCu to debug builds.\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# 1400 is Visual Studio 2005\n",
        "Line" : 59,
        "CharPositionInLine" : 33
      },
      "9" : {
        "Text" : "# Suppress spurious warnings MSVC 7.1 sometimes issues.\n\n# Forcing value to bool.\n",
        "Line" : 60,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# Copy constructor and assignment operator could not be generated.\n",
        "Line" : 63,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# Compatibility warnings not applicable to Google Test.\n\n# Resolved overload was found by argument-dependent lookup.\n",
        "Line" : 65,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# 1500 is Visual Studio 2008\n",
        "Line" : 69,
        "CharPositionInLine" : 33
      },
      "13" : {
        "Text" : "# Conditional expression is constant.\n\n# When compiling with /W4, we get several instances of C4127\n\n# (Conditional expression is constant). In our code, we disable that\n\n# warning on a case-by-case basis. However, on Visual Studio 2005,\n\n# the warning fires on std::list. Therefore on that compiler and earlier,\n\n# we disable the warning project-wide.\n",
        "Line" : 70,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# 1700 is Visual Studio 2012.\n",
        "Line" : 78,
        "CharPositionInLine" : 39
      },
      "15" : {
        "Text" : "# Suppress \"unreachable code\" warning on VS 2012 and later.\n\n# http://stackoverflow.com/questions/3232669 explains the issue.\n",
        "Line" : 79,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# 1900 is Visual Studio 2015\n",
        "Line" : 83,
        "CharPositionInLine" : 42
      },
      "17" : {
        "Text" : "# BigObj required for tests.\n",
        "Line" : 84,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "# Until version 4.3.2, GCC doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 97,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Sun Pro doesn't provide macros to indicate whether exceptions and\n\n# RTTI are enabled, so we define GTEST_HAS_* explicitly.\n",
        "Line" : 105,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# CMake 2.8 changes Visual Age's compiler ID to \"XL\".\n",
        "Line" : 111,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Until version 9.0, Visual Age doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 114,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# RTTI can not be disabled in HP aCC compiler.\n",
        "Line" : 122,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# The pthreads library is available and allowed.\n",
        "Line" : 126,
        "CharPositionInLine" : 32
      },
      "24" : {
        "Text" : "# For building gtest's own tests and samples.\n",
        "Line" : 132,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# For building the gtest libraries.\n",
        "Line" : 140,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# type can be either STATIC or SHARED to denote a static or shared library.\n\n# ARGN refers to additional arguments after 'cxx_flags'.\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "########################################################################\n\n#\n\n# Helper functions for creating build targets.\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# cxx_executable_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ executable that depends on the given libraries and\n\n# is built from the given source files with the given compiler flags.\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# To support mixing linking in static and dynamic libraries, link each\n\n# library in with an extra call to target_link_libraries.\n",
        "Line" : 191,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# cxx_executable(name dir lib srcs...)\n\n#\n\n# creates a named target that depends on the given libs and is built\n\n# from the given source files.  dir/name.cc is implicitly included in\n\n# the source file list.\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Sets PYTHONINTERP_FOUND and PYTHON_EXECUTABLE.\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# cxx_test_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ test that depends on the given libs and is built\n\n# from the given source files with the given compiler flags.\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# cxx_test(name libs srcs...)\n\n#\n\n# creates a named test target that depends on the given libs and is\n\n# built from the given source files.  Unlike cxx_test_with_flags,\n\n# test/name.cc is already implicitly included in the source file list.\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# py_test(name)\n\n#\n\n# creates a Python test with the given name whose main module is in\n\n# test/name.py.  It does nothing if Python is not installed.\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# We are not supporting Python tests on Linux yet as they consider\n\n# all Linux environments to be google3 and try to use google3 features.\n",
        "Line" : 235,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# ${CMAKE_BINARY_DIR} is known at configuration time, so we can\n\n# directly bind it from cmake. ${CTEST_CONFIGURATION_TYPE} is known\n\n# only at ctest runtime (by calling ctest -c <Configuration>), so\n\n# we have to escape $ to delay variable substitution here.\n",
        "Line" : 238,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 38
    },
    "Client/trunk/externals/assimp-4.0.0/contrib/irrXML/CMakeLists.txt" : {
      "ObjectId" : "82ede3a04cc4d7d8bc2b6e4218c9ea32c39920fc",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Client/trunk/externals/assimp-4.0.0/contrib/openddlparser/CMakeLists.txt" : {
      "ObjectId" : "9e903ca3f10162607e15180ff9067b3113bba44c",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Force to always compile with W4\n",
        "Line" : 58,
        "CharPositionInLine" : 53
      },
      "1" : {
        "Text" : "# Update if necessary\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Include the doc component.\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Create the coveralls target.\n",
        "Line" : 159,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# The source files.\n\n# If we should upload.\n",
        "Line" : 161,
        "CharPositionInLine" : 27
      },
      "5" : {
        "Text" : "# (Optional) Alternate project cmake module path.\n",
        "Line" : 163,
        "CharPositionInLine" : 40
      },
      "CommentCount" : 6
    },
    "Client/trunk/externals/assimp-4.0.0/contrib/zlib/CMakeLists.txt" : {
      "ObjectId" : "022d3dfba6cd48e0c006afdd1969b7ca323e315f",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake 3.0 changed the project command, setting policy CMP0048 reverts to the old behaviour.\n\n# See http://www.cmake.org/cmake/help/v3.0/policy/CMP0048.html\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(INSTALL_BIN_DIR \"${CMAKE_INSTALL_PREFIX}/bin\" CACHE PATH \"Installation directory for executables\")\n\n#set(INSTALL_LIB_DIR \"${CMAKE_INSTALL_PREFIX}/lib\" CACHE PATH \"Installation directory for libraries\")\n\n#set(INSTALL_INC_DIR \"${CMAKE_INSTALL_PREFIX}/include\" CACHE PATH \"Installation directory for headers\")\n\n#set(INSTALL_MAN_DIR \"${CMAKE_INSTALL_PREFIX}/share/man\" CACHE PATH \"Installation directory for manual pages\")\n\n#set(INSTALL_PKGCONFIG_DIR \"${CMAKE_INSTALL_PREFIX}/share/pkgconfig\" CACHE PATH \"Installation directory for pkgconfig (.pc) files\")\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Check to see if we have large file support\n\n#\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# We add these other definitions here because CheckTypeSize.cmake\n\n# in CMake 2.4.x does not automatically do so and we want\n\n# compatibility with CMake 2.4.x.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# clear variable\n",
        "Line" : 54,
        "CharPositionInLine" : 32
      },
      "5" : {
        "Text" : "#\n\n# Check for fseeko\n\n#\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# Check for unistd.h\n\n#\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# If we're doing an out of source build and the user has a zconf.h\n\n# in their source tree...\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#============================================================================\n\n# zlib\n\n#============================================================================\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# If present will override custom build rule below.\n",
        "Line" : 136,
        "CharPositionInLine" : 23
      },
      "10" : {
        "Text" : "# parse the full version number from zlib.h and include in ZLIB_FULL_VERSION\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# This gets us DLL resource information when compiling on MinGW.\n",
        "Line" : 179,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 12
    },
    "Client/trunk/externals/assimp-4.0.0/port/AndroidJNI/CMakeLists.txt" : {
      "ObjectId" : "ddc71885000e8206253e353c4cd5f4f0cfa5a7d2",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Client/trunk/externals/assimp-4.0.0/port/iOS/IPHONEOS_ARM64_TOOLCHAIN.cmake" : {
      "ObjectId" : "3aea8342ef9de0b7141ee55d6baf0687e5fdd119",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Client/trunk/externals/assimp-4.0.0/port/iOS/IPHONEOS_ARMV6_TOOLCHAIN.cmake" : {
      "ObjectId" : "5ec416322da259a8ad021df3bdca091fbbf54c10",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Client/trunk/externals/assimp-4.0.0/port/iOS/IPHONEOS_ARMV7S_TOOLCHAIN.cmake" : {
      "ObjectId" : "f11519aa41da9536483f7ee8b5a9ad3adb98ff1c",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Client/trunk/externals/assimp-4.0.0/port/iOS/IPHONEOS_ARMV7_TOOLCHAIN.cmake" : {
      "ObjectId" : "b7f196c0f5bcbd04d3f138f075312be99627f96e",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Client/trunk/externals/assimp-4.0.0/port/iOS/IPHONEOS_I386_TOOLCHAIN.cmake" : {
      "ObjectId" : "22178bb87f96a8c64b643f32b7ba6e62b8bca4a5",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Client/trunk/externals/assimp-4.0.0/port/iOS/IPHONEOS_X86_64_TOOLCHAIN.cmake" : {
      "ObjectId" : "3c69ecdb3872a7b17cb227a2de6c1a4f6e28f489",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Client/trunk/externals/assimp-4.0.0/port/jassimp/build.xml" : {
      "ObjectId" : "1352e3ffa70fc35ca42b1504b7d8a3f971b9cc28",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "ANT",
      "CommentCount" : 0
    },
    "Client/trunk/externals/bullet-2.75/CMakeLists.txt" : {
      "ObjectId" : "cf97aec07af7adbe9a09327af95ccfba02db538e",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# SET(CMAKE_BUILD_TYPE \"Debug\")\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# string (REPLACE \"/D_WINDOWS\" \"\" CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS})\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This is the shortcut to finding GLU, GLUT and OpenGL if they are properly installed on your system\n\n# This should be the case.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ADD_DEFINITIONS(-DBT_USE_FREEGLUT)\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This is the lines for linux.  This should always work if everything is installed and working fine.\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "Client/trunk/externals/bullet-2.75/src/BulletCollision/CMakeLists.txt" : {
      "ObjectId" : "6b11cab1fcb47a8dbed01864e8a581b4df2e790e",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# statically link MSVC to reduce dependancies\n",
        "Line" : 236,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "#INSTALL of other files requires CMake 2.6\n",
        "Line" : 257,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Have to list out sub-directories manually:\n",
        "Line" : 271,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 3
    },
    "Client/trunk/externals/bullet-2.75/src/BulletDynamics/CMakeLists.txt" : {
      "ObjectId" : "3275949051bcfc6edd6d5bf2c487908f0faf8d1c",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# statically link MSVC to reduce dependancies\n",
        "Line" : 81,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Have to list out sub-directories manually:\n",
        "Line" : 112,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    },
    "Client/trunk/externals/bullet-2.75/src/BulletMultiThreaded/CMakeLists.txt" : {
      "ObjectId" : "2436b497c5c0cc15fb379edfd47ce95f374b31fb",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# statically link MSVC to reduce dependancies\n",
        "Line" : 7,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "#Some GPU related stuff, mainly CUDA and perhaps OpenCL\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#MiniCL provides a small subset of OpenCL\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Client/trunk/externals/bullet-2.75/src/BulletSoftBody/CMakeLists.txt" : {
      "ObjectId" : "70f0fb44628e2830a5a5d16c5e50f3d05c89d2b5",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Client/trunk/externals/bullet-2.75/src/CMakeLists.txt" : {
      "ObjectId" : "d901bb3412c140a4b66aef451e1e345bda285578",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#INSTALL of other files requires CMake 2.6\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Don't actually need to install any common files, the frameworks include everything\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "Client/trunk/externals/bullet-2.75/src/LinearMath/CMakeLists.txt" : {
      "ObjectId" : "7646d2e7e4689795176ff6877098fa3e74f3bfec",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# statically link MSVC to reduce dependancies\n",
        "Line" : 39,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "#FILES_MATCHING requires CMake 2.6\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Client/trunk/externals/bullet3/CMakeLists.txt" : {
      "ObjectId" : "59920777fa7db750a798b9e7a84ad420d04defe9",
      "LastModified" : "2017-11-29T07:00:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this line has to appear before 'PROJECT' in order to be able to disable incremental linking\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Enable MACOSX_RPATH by default.\n",
        "Line" : 13,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "# SET(CMAKE_BUILD_TYPE \"Debug\")\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#MESSAGE(\"CMAKE_CXX_FLAGS_DEBUG=\"+${CMAKE_CXX_FLAGS_DEBUG})\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#statically linking VC++ isn't supported for WindowsPhone/WindowsStore\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#SET(CMAKE_EXE_LINKER_FLAGS_INIT    \"/STACK:10000000 /INCREMENTAL:NO\")\n\n#SET(CMAKE_EXE_LINKER_FLAGS    \"/STACK:10000000 /INCREMENTAL:NO\")\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#MESSAGE(\"MSVC_INCREMENTAL_YES_FLAG\"+${MSVC_INCREMENTAL_YES_FLAG})\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#MESSAGE(\"MSVC_INCREMENTAL_DEFAULT\"+${MSVC_INCREMENTAL_DEFAULT})\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#We statically link to reduce dependancies\n",
        "Line" : 73,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Disable RTTI\n",
        "Line" : 137,
        "CharPositionInLine" : 69
      },
      "10" : {
        "Text" : "# This is the shortcut to finding GLU, GLUT and OpenGL if they are properly installed on your system\n\n# This should be the case.\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#FIND_PACKAGE(GLU)\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#include(FindNumPy)\n",
        "Line" : 275,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "#unset(BUILD_OPENGL3_DEMOS CACHE)\n",
        "Line" : 311,
        "CharPositionInLine" : 3
      },
      "14" : {
        "Text" : "#Maya Dynamica plugin is moved to http://dynamica.googlecode.com\n",
        "Line" : 357,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#by default, don't enable the 'INSTALL' option for Xcode and MSVC projectfiles\n",
        "Line" : 367,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## the following are directories where stuff will be installed to\n",
        "Line" : 375,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "#INSTALL of other files requires CMake 2.6\n",
        "Line" : 388,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "Client/trunk/externals/bullet3/Demos/AllBulletDemos/CMakeLists.txt" : {
      "ObjectId" : "5fb0dce1c17035ec41cf557dbd21de4deb638811",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is basically the overall name of the project in Visual Studio this is the name of the Solution File\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For every executable you have with a main method you should have an add_executable line below.\n\n# For every add executable line you should list every .cpp and .h file you have associated with that executable.  \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# You shouldn't have to modify anything below this line \n\n########################################################\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Client/trunk/externals/bullet3/Demos/AllBulletDemos/Makefile.am" : {
      "ObjectId" : "aab8b98548b8ea9b7104b4debb4ee4298fabfb76",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Client/trunk/externals/bullet3/Demos/BasicDemo/CMakeLists.txt" : {
      "ObjectId" : "87c0464cbae6c2d443afb1d1d98093e91559ff7e",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is basically the overall name of the project in Visual Studio this is the name of the Solution File\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For every executable you have with a main method you should have an add_executable line below.\n\n# For every add executable line you should list every .cpp and .h file you have associated with that executable.  \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This is the variable for Windows.  I use this to define the root of my directory structure.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# You shouldn't have to modify anything below this line \n\n########################################################\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Client/trunk/externals/bullet3/Demos/BasicDemo/Makefile.am" : {
      "ObjectId" : "05546162b11e4c80be3b17391913b3f470e8c428",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Client/trunk/externals/bullet3/Demos/Benchmarks/CMakeLists.txt" : {
      "ObjectId" : "dae23300c63fd6f233af9fc5eb10eee2c9af29aa",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is basically the overall name of the project in Visual Studio this is the name of the Solution File\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For every executable you have with a main method you should have an add_executable line below.\n\n# For every add executable line you should list every .cpp and .h file you have associated with that executable.  \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# You shouldn't have to modify anything below this line \n\n########################################################\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Client/trunk/externals/bullet3/Demos/Box2dDemo/CMakeLists.txt" : {
      "ObjectId" : "9c993a32cda72eaaec052ceb083a807c046469bc",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is basically the overall name of the project in Visual Studio this is the name of the Solution File\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For every executable you have with a main method you should have an add_executable line below.\n\n# For every add executable line you should list every .cpp and .h file you have associated with that executable.  \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This is the variable for Windows.  I use this to define the root of my directory structure.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# You shouldn't have to modify anything below this line \n\n########################################################\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Client/trunk/externals/bullet3/Demos/BspDemo/CMakeLists.txt" : {
      "ObjectId" : "4d201988f8642923b9e99d9dcd28acbcedf4868d",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is basically the overall name of the project in Visual Studio this is the name of the Solution File\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For every executable you have with a main method you should have an add_executable line below.\n\n# For every add executable line you should list every .cpp and .h file you have associated with that executable.  \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# You shouldn't have to modify anything below this line \n\n########################################################\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Client/trunk/externals/bullet3/Demos/BulletDinoDemo/CMakeLists.txt" : {
      "ObjectId" : "eb43abb8f28856e2840cb082ddbffb301cbb096a",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is basically the overall name of the project in Visual Studio this is the name of the Solution File\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For every executable you have with a main method you should have an add_executable line below.\n\n# For every add executable line you should list every .cpp and .h file you have associated with that executable.  \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This is the variable for Windows.  I use this to define the root of my directory structure.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# You shouldn't have to modify anything below this line \n\n########################################################\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This is the shortcut to finding GLU, GLUT and OpenGL if they are properly installed on your system\n\n# This should be the case.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# This is the Windows code for which Opengl, and Glut are not properly installed\n\n# since I can't install them I must cheat and copy libraries around\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# LINK_DIRECTORIES(${GLUT_ROOT}\\\\lib)\n",
        "Line" : 26,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "#   LINK_LIBRARIES(${GLUT_ROOT}\\\\lib\\\\glut32 ${OPENGL_gl_LIBRARY} ${OPENGL_glU_LIBRARY})\n\n#   TARGET_LINK_LIBRARIES(table ${GLUT_ROOT}\\\\lib\\\\glut32)\n",
        "Line" : 29,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "#\n\n#    ADD_CUSTOM_COMMAND(TARGET table POST_BUILD COMMAND copy ${GLUT_ROOT}\\\\lib\\\\glut32.dll ${GLUT_ROOT}\\\\bin\\\\vs2005\\\\Debug\n\n#                        COMMAND copy ${GLUT_ROOT}\\\\lib\\\\glut32.dll ${GLUT_ROOT}\\\\bin\\\\vs2003\\\\Debug \n\n#            COMMAND copy ${GLUT_ROOT}\\\\lib\\\\glut32.dll ${GLUT_ROOT}\\\\bin\\\\vs6\\\\Debug)\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#    LINK_LIBRARIES(${GLUT_glut_LIBRARY} ${OPENGL_gl_LIBRARY} ${OPENGL_glU_LIBRARY}) \n\n#    TARGET_LINK_LIBRARIES(table ${GLUT_glut_LIBRARY})\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#  TARGET_LINK_LIBRARIES(table ${OPENGL_gl_LIBRARY})\n\n#  TARGET_LINK_LIBRARIES(table ${OPENGL_glu_LIBRARY}) \n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# This is the lines for linux.  This should always work if everything is installed and working fine.\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "#  SET(CMAKE_BUILD_TYPE Debug)\n\n#  SET(CMAKE_CXX_FLAGS_DEBUG \"-g\")\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#  TARGET_LINK_LIBRARIES(table ${GLUT_glut_LIBRARY} ${OPENGL_gl_LIBRARY} ${OPENGL_glU_LIBRARY})\n\n#  TARGET_LINK_LIBRARIES(checker ${GLUT_glut_LIBRARY} ${OPENGL_gl_LIBRARY} ${OPENGL_glU_LIBRARY})\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "Client/trunk/externals/bullet3/Demos/BulletXmlImportDemo/CMakeLists.txt" : {
      "ObjectId" : "175c529648398080a35181d5d4da6974e4c792db",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is basically the overall name of the project in Visual Studio this is the name of the Solution File\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For every executable you have with a main method you should have an add_executable line below.\n\n# For every add executable line you should list every .cpp and .h file you have associated with that executable.  \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This is the variable for Windows.  I use this to define the root of my directory structure.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# You shouldn't have to modify anything below this line \n\n########################################################\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Client/trunk/externals/bullet3/Demos/CMakeLists.txt" : {
      "ObjectId" : "98bcd2c2270d701f49b57e60c4bd5045ff47d601",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Client/trunk/externals/bullet3/Demos/CcdPhysicsDemo/CMakeLists.txt" : {
      "ObjectId" : "4224de54520783dac37fdef7f5862a0b3a472e37",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is basically the overall name of the project in Visual Studio this is the name of the Solution File\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For every executable you have with a main method you should have an add_executable line below.\n\n# For every add executable line you should list every .cpp and .h file you have associated with that executable.  \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# You shouldn't have to modify anything below this line \n\n########################################################\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Client/trunk/externals/bullet3/Demos/CcdPhysicsDemo/Makefile.am" : {
      "ObjectId" : "b7c6968b58c86ac7a2d9e9f5cc0f3fbdabf90c0d",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Client/trunk/externals/bullet3/Demos/CharacterDemo/CMakeLists.txt" : {
      "ObjectId" : "9b344f8aeb62fc6b0998787c3c1dfb79a0542273",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is basically the overall name of the project in Visual Studio this is the name of the Solution File\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For every executable you have with a main method you should have an add_executable line below.\n\n# For every add executable line you should list every .cpp and .h file you have associated with that executable.  \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# You shouldn't have to modify anything below this line \n\n########################################################\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Client/trunk/externals/bullet3/Demos/CollisionDemo/CMakeLists.txt" : {
      "ObjectId" : "7f544ca30f8822b60441d0d2e7a646bcd02402c4",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is basically the overall name of the project in Visual Studio this is the name of the Solution File\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For every executable you have with a main method you should have an add_executable line below.\n\n# For every add executable line you should list every .cpp and .h file you have associated with that executable.  \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# You shouldn't have to modify anything below this line \n\n########################################################\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Client/trunk/externals/bullet3/Demos/CollisionInterfaceDemo/CMakeLists.txt" : {
      "ObjectId" : "9dd777bce52e00388081c889cf8750dcf5d10e15",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is basically the overall name of the project in Visual Studio this is the name of the Solution File\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For every executable you have with a main method you should have an add_executable line below.\n\n# For every add executable line you should list every .cpp and .h file you have associated with that executable.  \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# You shouldn't have to modify anything below this line \n\n########################################################\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Client/trunk/externals/bullet3/Demos/ConcaveConvexcastDemo/CMakeLists.txt" : {
      "ObjectId" : "356a4495e1ae1d84a0328225bf37b98c87a17311",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is basically the overall name of the project in Visual Studio this is the name of the Solution File\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For every executable you have with a main method you should have an add_executable line below.\n\n# For every add executable line you should list every .cpp and .h file you have associated with that executable.  \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# You shouldn't have to modify anything below this line \n\n########################################################\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Client/trunk/externals/bullet3/Demos/ConcaveDemo/CMakeLists.txt" : {
      "ObjectId" : "e065ccf570af3610ecc6404c6ff5bc2e36f3bbb6",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is basically the overall name of the project in Visual Studio this is the name of the Solution File\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For every executable you have with a main method you should have an add_executable line below.\n\n# For every add executable line you should list every .cpp and .h file you have associated with that executable.  \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# You shouldn't have to modify anything below this line \n\n########################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Client/trunk/externals/bullet3/Demos/ConcaveRaycastDemo/CMakeLists.txt" : {
      "ObjectId" : "e64fb3aa951657b23a6a46a6a312f27cc6f78bce",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is basically the overall name of the project in Visual Studio this is the name of the Solution File\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For every executable you have with a main method you should have an add_executable line below.\n\n# For every add executable line you should list every .cpp and .h file you have associated with that executable.  \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# You shouldn't have to modify anything below this line \n\n########################################################\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Client/trunk/externals/bullet3/Demos/ConstraintDemo/CMakeLists.txt" : {
      "ObjectId" : "6051a245507d22ed7cac5eff5528b4b4d611cfdf",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is basically the overall name of the project in Visual Studio this is the name of the Solution File\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For every executable you have with a main method you should have an add_executable line below.\n\n# For every add executable line you should list every .cpp and .h file you have associated with that executable.  \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# You shouldn't have to modify anything below this line \n\n########################################################\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Client/trunk/externals/bullet3/Demos/ContinuousConvexCollision/CMakeLists.txt" : {
      "ObjectId" : "6426bc382f90bae4cebf8c5072f7d7af17b124c6",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is basically the overall name of the project in Visual Studio this is the name of the Solution File\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For every executable you have with a main method you should have an add_executable line below.\n\n# For every add executable line you should list every .cpp and .h file you have associated with that executable.  \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# You shouldn't have to modify anything below this line \n\n########################################################\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Client/trunk/externals/bullet3/Demos/ConvexDecompositionDemo/CMakeLists.txt" : {
      "ObjectId" : "08045bd4f396999b605f230c3fcf2146355730bc",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is basically the overall name of the project in Visual Studio this is the name of the Solution File\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For every executable you have with a main method you should have an add_executable line below.\n\n# For every add executable line you should list every .cpp and .h file you have associated with that executable.  \n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This is the variable for Windows.  I use this to define the root of my directory structure.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# You shouldn't have to modify anything below this line \n\n########################################################\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Client/trunk/externals/bullet3/Demos/ConvexHullDistance/CMakeLists.txt" : {
      "ObjectId" : "7e02bf696627d5ed97ef9a98dbcaac5902871180",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is basically the overall name of the project in Visual Studio this is the name of the Solution File\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For every executable you have with a main method you should have an add_executable line below.\n\n# For every add executable line you should list every .cpp and .h file you have associated with that executable.  \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This is the variable for Windows.  I use this to define the root of my directory structure.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# You shouldn't have to modify anything below this line \n\n########################################################\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Client/trunk/externals/bullet3/Demos/DoublePrecisionDemo/CMakeLists.txt" : {
      "ObjectId" : "bb557c67ce88f869bd1921271fba98867b1c45e3",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is basically the overall name of the project in Visual Studio this is the name of the Solution File\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For every executable you have with a main method you should have an add_executable line below.\n\n# For every add executable line you should list every .cpp and .h file you have associated with that executable.  \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# You shouldn't have to modify anything below this line \n\n########################################################\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Client/trunk/externals/bullet3/Demos/DynamicControlDemo/CMakeLists.txt" : {
      "ObjectId" : "04521bcfd21791bf505e8d55fb93655ab68953e2",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is basically the overall name of the project in Visual Studio this is the name of the Solution File\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For every executable you have with a main method you should have an add_executable line below.\n\n# For every add executable line you should list every .cpp and .h file you have associated with that executable.  \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# You shouldn't have to modify anything below this line \n\n########################################################\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Client/trunk/externals/bullet3/Demos/FeatherstoneMultiBodyDemo/CMakeLists.txt" : {
      "ObjectId" : "cb8c544a77b8fdb674c445fca4b4864cf479f6f6",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is basically the overall name of the project in Visual Studio this is the name of the Solution File\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For every executable you have with a main method you should have an add_executable line below.\n\n# For every add executable line you should list every .cpp and .h file you have associated with that executable.  \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This is the variable for Windows.  I use this to define the root of my directory structure.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# You shouldn't have to modify anything below this line \n\n########################################################\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Client/trunk/externals/bullet3/Demos/FeatherstoneMultiBodyDemo/Makefile.am" : {
      "ObjectId" : "00e92e685a6eb588e65bba3abe551514766ab572",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Client/trunk/externals/bullet3/Demos/ForkLiftDemo/CMakeLists.txt" : {
      "ObjectId" : "d4f067710819ea47d0fbafba5e13ea5d76023d2f",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is basically the overall name of the project in Visual Studio this is the name of the Solution File\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For every executable you have with a main method you should have an add_executable line below.\n\n# For every add executable line you should list every .cpp and .h file you have associated with that executable.  \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This is the variable for Windows.  I use this to define the root of my directory structure.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# You shouldn't have to modify anything below this line \n\n########################################################\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Client/trunk/externals/bullet3/Demos/ForkLiftDemo/Makefile.am" : {
      "ObjectId" : "588373493c221fb2f1e476ec5552ff1dbc7b3c6b",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Client/trunk/externals/bullet3/Demos/FractureDemo/CMakeLists.txt" : {
      "ObjectId" : "425ddc116a6a1e2ad293a25cc876fec6c25fc99d",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is basically the overall name of the project in Visual Studio this is the name of the Solution File\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For every executable you have with a main method you should have an add_executable line below.\n\n# For every add executable line you should list every .cpp and .h file you have associated with that executable.  \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This is the variable for Windows.  I use this to define the root of my directory structure.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# You shouldn't have to modify anything below this line \n\n########################################################\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Client/trunk/externals/bullet3/Demos/GenericJointDemo/CMakeLists.txt" : {
      "ObjectId" : "afcd423cb7664bb312ed82711f690f34730477ed",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is basically the overall name of the project in Visual Studio this is the name of the Solution File\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For every executable you have with a main method you should have an add_executable line below.\n\n# For every add executable line you should list every .cpp and .h file you have associated with that executable.  \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# You shouldn't have to modify anything below this line \n\n########################################################\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Client/trunk/externals/bullet3/Demos/GimpactTestDemo/CMakeLists.txt" : {
      "ObjectId" : "fc7331c23a509e2fab6f07423d151e357594058a",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is basically the overall name of the project in Visual Studio this is the name of the Solution File\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For every executable you have with a main method you should have an add_executable line below.\n\n# For every add executable line you should list every .cpp and .h file you have associated with that executable.  \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# You shouldn't have to modify anything below this line \n\n########################################################\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Client/trunk/externals/bullet3/Demos/GjkConvexCastDemo/CMakeLists.txt" : {
      "ObjectId" : "cc9037d07f523430a9c5c2e5f6231faaa9480fc7",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is basically the overall name of the project in Visual Studio this is the name of the Solution File\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For every executable you have with a main method you should have an add_executable line below.\n\n# For every add executable line you should list every .cpp and .h file you have associated with that executable.  \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# You shouldn't have to modify anything below this line \n\n########################################################\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Client/trunk/externals/bullet3/Demos/GyroscopicDemo/CMakeLists.txt" : {
      "ObjectId" : "f47d62f374f1abf6fa8844931b974f874baf957e",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is basically the overall name of the project in Visual Studio this is the name of the Solution File\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For every executable you have with a main method you should have an add_executable line below.\n\n# For every add executable line you should list every .cpp and .h file you have associated with that executable.  \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# You shouldn't have to modify anything below this line \n\n########################################################\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Client/trunk/externals/bullet3/Demos/HelloWorld/CMakeLists.txt" : {
      "ObjectId" : "3c15ad1d70ee9493a00db43c81469ef201d24f87",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# HelloWorld is a minimal sample creating, stepping and deleting a Bullet dynamics world\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Client/trunk/externals/bullet3/Demos/InternalEdgeDemo/CMakeLists.txt" : {
      "ObjectId" : "ca4b111f08ea12866251c8e8466f76c144dc8906",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is basically the overall name of the project in Visual Studio this is the name of the Solution File\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For every executable you have with a main method you should have an add_executable line below.\n\n# For every add executable line you should list every .cpp and .h file you have associated with that executable.  \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# You shouldn't have to modify anything below this line \n\n########################################################\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Client/trunk/externals/bullet3/Demos/MovingConcaveDemo/CMakeLists.txt" : {
      "ObjectId" : "e4a173022ea75635efe10636b3cde2cd94540f01",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is basically the overall name of the project in Visual Studio this is the name of the Solution File\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For every executable you have with a main method you should have an add_executable line below.\n\n# For every add executable line you should list every .cpp and .h file you have associated with that executable.  \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This is the variable for Windows.  I use this to define the root of my directory structure.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# You shouldn't have to modify anything below this line \n\n########################################################\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Client/trunk/externals/bullet3/Demos/MultiMaterialDemo/CMakeLists.txt" : {
      "ObjectId" : "0acf2c1e1972ca0a528523b7e050f9bd53105c53",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is basically the overall name of the project in Visual Studio this is the name of the Solution File\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For every executable you have with a main method you should have an add_executable line below.\n\n# For every add executable line you should list every .cpp and .h file you have associated with that executable.  \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# You shouldn't have to modify anything below this line \n\n########################################################\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Client/trunk/externals/bullet3/Demos/MultiThreadedDemo/CMakeLists.txt" : {
      "ObjectId" : "0a4ac250a5d0cdcc1e15b96335922ce64d294d53",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is basically the overall name of the project in Visual Studio this is the name of the Solution File\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For every executable you have with a main method you should have an add_executable line below.\n\n# For every add executable line you should list every .cpp and .h file you have associated with that executable.  \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# You shouldn't have to modify anything below this line \n\n########################################################\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Client/trunk/externals/bullet3/Demos/MultiThreadedDemo/Makefile.am" : {
      "ObjectId" : "71d8dd3ca1315e6fa01fa2257849d9792e56e394",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Client/trunk/externals/bullet3/Demos/OpenGL/CMakeLists.txt" : {
      "ObjectId" : "721ec4e993ead5d8716e58ed6ee8b0fa41ac676d",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is basically the overall name of the project in Visual Studio this is the name of the Solution File\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For every executable you have with a main method you should have an add_executable line below.\n\n# For every add executable line you should list every .cpp and .h file you have associated with that executable.  \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# You shouldn't have to modify anything below this line \n\n########################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#INSTALL of other files requires CMake 2.6\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Client/trunk/externals/bullet3/Demos/OpenGL/Makefile.am" : {
      "ObjectId" : "11eeed4d53584325e1383415c00a5b017bc3fc13",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Client/trunk/externals/bullet3/Demos/RagdollDemo/CMakeLists.txt" : {
      "ObjectId" : "286c0542caf25979eb6eebf6663d16e56ae12b04",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is basically the overall name of the project in Visual Studio this is the name of the Solution File\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For every executable you have with a main method you should have an add_executable line below.\n\n# For every add executable line you should list every .cpp and .h file you have associated with that executable.  \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# You shouldn't have to modify anything below this line \n\n########################################################\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Client/trunk/externals/bullet3/Demos/RaytestDemo/CMakeLists.txt" : {
      "ObjectId" : "8dfeef10ae05469f5a0ca237034b0deb86fa8b26",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is basically the overall name of the project in Visual Studio this is the name of the Solution File\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For every executable you have with a main method you should have an add_executable line below.\n\n# For every add executable line you should list every .cpp and .h file you have associated with that executable.  \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This is the variable for Windows.  I use this to define the root of my directory structure.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# You shouldn't have to modify anything below this line \n\n########################################################\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Client/trunk/externals/bullet3/Demos/RaytestDemo/Makefile.am" : {
      "ObjectId" : "05546162b11e4c80be3b17391913b3f470e8c428",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Client/trunk/externals/bullet3/Demos/Raytracer/CMakeLists.txt" : {
      "ObjectId" : "2f3b6a991b64fd47c74bd983fce14dda99d3a83f",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is basically the overall name of the project in Visual Studio this is the name of the Solution File\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For every executable you have with a main method you should have an add_executable line below.\n\n# For every add executable line you should list every .cpp and .h file you have associated with that executable.  \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# You shouldn't have to modify anything below this line \n\n########################################################\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Client/trunk/externals/bullet3/Demos/RollingFrictionDemo/CMakeLists.txt" : {
      "ObjectId" : "9753cd0df147842a603ebf7b211bd6c4c9e317a9",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is basically the overall name of the project in Visual Studio this is the name of the Solution File\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For every executable you have with a main method you should have an add_executable line below.\n\n# For every add executable line you should list every .cpp and .h file you have associated with that executable.  \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This is the variable for Windows.  I use this to define the root of my directory structure.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# You shouldn't have to modify anything below this line \n\n########################################################\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Client/trunk/externals/bullet3/Demos/RollingFrictionDemo/Makefile.am" : {
      "ObjectId" : "05546162b11e4c80be3b17391913b3f470e8c428",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Client/trunk/externals/bullet3/Demos/SerializeDemo/AMD/CMakeLists.txt" : {
      "ObjectId" : "d6807022fbc6d1a18246f6eadf0470a80de132d3",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Client/trunk/externals/bullet3/Demos/SerializeDemo/CMakeLists.txt" : {
      "ObjectId" : "9cf57df25436d51f2012a8658061be356f39c2e6",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is basically the overall name of the project in Visual Studio this is the name of the Solution File\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For every executable you have with a main method you should have an add_executable line below.\n\n# For every add executable line you should list every .cpp and .h file you have associated with that executable.  \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This is the variable for Windows.  I use this to define the root of my directory structure.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# You shouldn't have to modify anything below this line \n\n########################################################\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Client/trunk/externals/bullet3/Demos/SimplexDemo/CMakeLists.txt" : {
      "ObjectId" : "d6ce31d1a7a0e40434ec000d0f79889ba35b9dda",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is basically the overall name of the project in Visual Studio this is the name of the Solution File\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For every executable you have with a main method you should have an add_executable line below.\n\n# For every add executable line you should list every .cpp and .h file you have associated with that executable.  \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# You shouldn't have to modify anything below this line \n\n########################################################\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Client/trunk/externals/bullet3/Demos/SliderConstraintDemo/CMakeLists.txt" : {
      "ObjectId" : "d8b40c60c92db1444c9b5fdef9cea29fa2ea3ecd",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is basically the overall name of the project in Visual Studio this is the name of the Solution File\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For every executable you have with a main method you should have an add_executable line below.\n\n# For every add executable line you should list every .cpp and .h file you have associated with that executable.  \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# You shouldn't have to modify anything below this line \n\n########################################################\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Client/trunk/externals/bullet3/Demos/SoftDemo/CMakeLists.txt" : {
      "ObjectId" : "7fe2edc8fb7ce4237d8b67a9b1f14df9335829fd",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is basically the overall name of the project in Visual Studio this is the name of the Solution File\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For every executable you have with a main method you should have an add_executable line below.\n\n# For every add executable line you should list every .cpp and .h file you have associated with that executable.  \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# You shouldn't have to modify anything below this line \n\n########################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Client/trunk/externals/bullet3/Demos/SoftDemo/Makefile.am" : {
      "ObjectId" : "ede95b81856aec570db1e437c76e4f470d326e53",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Client/trunk/externals/bullet3/Demos/TerrainDemo/Makefile.am" : {
      "ObjectId" : "3dbfb1093183330a6fba3f78ee2022562d8d3c2e",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Client/trunk/externals/bullet3/Demos/ThreadingDemo/CMakeLists.txt" : {
      "ObjectId" : "7ecd933f3d246e8a50f64da4ac76248ef9d4cbb2",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is basically the overall name of the project in Visual Studio this is the name of the Solution File\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For every executable you have with a main method you should have an add_executable line below.\n\n# For every add executable line you should list every .cpp and .h file you have associated with that executable.  \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This is the variable for Windows.  I use this to define the root of my directory structure.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# You shouldn't have to modify anything below this line \n\n########################################################\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#currently this demo has only been tested under Windows 32bit\n\n#IF (WIN32)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#ENDIF(WIN32)\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "Client/trunk/externals/bullet3/Demos/UserCollisionAlgorithm/CMakeLists.txt" : {
      "ObjectId" : "087835d6ad0e903ffbf1920212b711ff6093d90b",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is basically the overall name of the project in Visual Studio this is the name of the Solution File\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For every executable you have with a main method you should have an add_executable line below.\n\n# For every add executable line you should list every .cpp and .h file you have associated with that executable.  \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# You shouldn't have to modify anything below this line \n\n########################################################\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Client/trunk/externals/bullet3/Demos/VehicleDemo/CMakeLists.txt" : {
      "ObjectId" : "5cb862e2069311b6bf95ce26cd33ce95cc98804b",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is basically the overall name of the project in Visual Studio this is the name of the Solution File\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For every executable you have with a main method you should have an add_executable line below.\n\n# For every add executable line you should list every .cpp and .h file you have associated with that executable.  \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# You shouldn't have to modify anything below this line \n\n########################################################\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Client/trunk/externals/bullet3/Demos/VehicleDemo/Makefile.am" : {
      "ObjectId" : "4a260785b6ebd96a98a5392146d4f20c8936d654",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Client/trunk/externals/bullet3/Demos/VoronoiFractureDemo/CMakeLists.txt" : {
      "ObjectId" : "2abff4ece42370c7868a31c6d718809d9d302fac",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is basically the overall name of the project in Visual Studio this is the name of the Solution File\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For every executable you have with a main method you should have an add_executable line below.\n\n# For every add executable line you should list every .cpp and .h file you have associated with that executable.  \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This is the variable for Windows.  I use this to define the root of my directory structure.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# You shouldn't have to modify anything below this line \n\n########################################################\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Client/trunk/externals/bullet3/Demos/VoronoiFractureDemo/Makefile.am" : {
      "ObjectId" : "05546162b11e4c80be3b17391913b3f470e8c428",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Client/trunk/externals/bullet3/Demos3/AllBullet2Demos/CMakeLists.txt" : {
      "ObjectId" : "4f8fe4ef5ba58be7373b26124fefd65805aff678",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\t../bullet2/SoftDemo/SoftDemo.cpp\n\n# the next few demos are not converted to 'newer' structure yet\n\n# target is to convert all Bullet 2 demos in new structure but need to settle down on features\n\n#\t../bullet2/BasicDemo/HingeDemo.cpp\n\n#\t../bullet2/BasicDemo/HingeDemo.h\n\n#\t../bullet2/ChainDemo/ChainDemo.cpp\n\n#\t../bullet2/ChainDemo/ChainDemo.h\n\n#\t../bullet2/RagdollDemo/RagdollDemo.cpp\n\n#\t../bullet2/RagdollDemo/RagdollDemo.h\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Client/trunk/externals/bullet3/Demos3/BasicDemo/CMakeLists.txt" : {
      "ObjectId" : "6a7646e364f16cb6c049aab8817d406cfb4b0411",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is basically the overall name of the project in Visual Studio this is the name of the Solution File\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For every executable you have with a main method you should have an add_executable line below.\n\n# For every add executable line you should list every .cpp and .h file you have associated with that executable.  \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This is the variable for Windows.  I use this to define the root of my directory structure.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# You shouldn't have to modify anything below this line \n\n########################################################\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Client/trunk/externals/bullet3/Demos3/BasicDemo/Makefile.am" : {
      "ObjectId" : "05546162b11e4c80be3b17391913b3f470e8c428",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Client/trunk/externals/bullet3/Demos3/BasicGpuDemo/CMakeLists.txt" : {
      "ObjectId" : "d17e7696a18e74a7b035963ed8a0d911b101a0a9",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is basically the overall name of the project in Visual Studio this is the name of the Solution File\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For every executable you have with a main method you should have an add_executable line below.\n\n# For every add executable line you should list every .cpp and .h file you have associated with that executable.  \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This is the variable for Windows.  I use this to define the root of my directory structure.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# You shouldn't have to modify anything below this line \n\n########################################################\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Client/trunk/externals/bullet3/Demos3/BasicGpuDemo/Makefile.am" : {
      "ObjectId" : "05546162b11e4c80be3b17391913b3f470e8c428",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Client/trunk/externals/bullet3/Demos3/CMakeLists.txt" : {
      "ObjectId" : "21d271b9976464de49374bdfdcb17056a946a0b8",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Client/trunk/externals/bullet3/Demos3/GpuDemos/CMakeLists.txt" : {
      "ObjectId" : "3dd1ec18312ac6a86bba44287ab164330e5648eb",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Client/trunk/externals/bullet3/Demos3/SimpleOpenGL3/CMakeLists.txt" : {
      "ObjectId" : "7931eee85d3e2c6d3adb1dd764e3bff268c6c315",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Client/trunk/externals/bullet3/Extras/CMakeLists.txt" : {
      "ObjectId" : "24fc0f15996d12b0552259facfbc60472f26d1a8",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Maya Dynamica plugin is moved to http://dynamica.googlecode.com\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#IF (USE_GLUT AND GLUT_FOUND)\n\n#\tSUBDIRS (glui)\n\n#ENDIF ()\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Client/trunk/externals/bullet3/Extras/ConvexDecomposition/CMakeLists.txt" : {
      "ObjectId" : "693e9d26a426faf3b080e8ee31dbbf9c47e8f04e",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#FILES_MATCHING requires CMake 2.6\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Client/trunk/externals/bullet3/Extras/GIMPACTUtils/CMakeLists.txt" : {
      "ObjectId" : "5c9480a97911ae846687d6682ddbc94efb0d2aab",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#FILES_MATCHING requires CMake 2.6\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Client/trunk/externals/bullet3/Extras/HACD/CMakeLists.txt" : {
      "ObjectId" : "e2f3a5672fa45801f8286a1fb2c5e7ae0021c73a",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#IF (BUILD_SHARED_LIBS)\n\n#  TARGET_LINK_LIBRARIES(HACD BulletCollision LinearMath)\n\n#ENDIF (BUILD_SHARED_LIBS)\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#FILES_MATCHING requires CMake 2.6\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "Client/trunk/externals/bullet3/Extras/Makefile.am" : {
      "ObjectId" : "f4cd5eac827c0718aadf50f087173ee7261a536d",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Client/trunk/externals/bullet3/Extras/Serialize/BlenderSerialize/CMakeLists.txt" : {
      "ObjectId" : "5b74d7447d0f979f102c4a9247b9633e798737a4",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Client/trunk/externals/bullet3/Extras/Serialize/BulletFileLoader/CMakeLists.txt" : {
      "ObjectId" : "51e33e44f93c099fe77dae75ccddad8a7861ee7f",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#FILES_MATCHING requires CMake 2.6\n",
        "Line" : 32,
        "CharPositionInLine" : 16
      },
      "CommentCount" : 1
    },
    "Client/trunk/externals/bullet3/Extras/Serialize/BulletWorldImporter/CMakeLists.txt" : {
      "ObjectId" : "666ac21c17bbb37f5c4980a0c7ad84a1fd396fb8",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#FILES_MATCHING requires CMake 2.6\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Client/trunk/externals/bullet3/Extras/Serialize/BulletXmlWorldImporter/CMakeLists.txt" : {
      "ObjectId" : "c6a94f850243b3f5d26cd994cfa781bfb4035114",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#FILES_MATCHING requires CMake 2.6\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Client/trunk/externals/bullet3/Extras/Serialize/CMakeLists.txt" : {
      "ObjectId" : "68b1d19254fb1a14dff635a07c66b22634589110",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# makesdna and HeaderGenerator are for advanced use only\n\n# makesdna can re-generate the binary DNA representing the Bullet serialization structures\n\n# Be very careful modifying any of this, otherwise the .bullet format becomes incompatible\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Client/trunk/externals/bullet3/Extras/Serialize/HeaderGenerator/CMakeLists.txt" : {
      "ObjectId" : "3791e209834a7d860fdb536af40bb36c0fe0d6d8",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Client/trunk/externals/bullet3/Extras/Serialize/ReadBulletSample/CMakeLists.txt" : {
      "ObjectId" : "e819b9e5ec9f86e812110966925701708c891f2b",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Client/trunk/externals/bullet3/Extras/Serialize/makesdna/CMakeLists.txt" : {
      "ObjectId" : "9f5d5c6837f982346358661aadbd5e4220b0bbe4",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#FILE(GLOB INC_FILES ../*.h)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build makesdna executable\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Output BulletDNA.c\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Build bf_dna library\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Client/trunk/externals/bullet3/UseBullet.cmake" : {
      "ObjectId" : "5ed94874adef5d19426cb1322c1e60346b0e9b9b",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#                                               -*- cmake -*-\n\n#\n\n#  UseBullet.cmake\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Client/trunk/externals/bullet3/btgui/Bullet3AppSupport/CMakeLists.txt" : {
      "ObjectId" : "da529f22a113449c908065f9b87d0dc99e46c8b7",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Client/trunk/externals/bullet3/btgui/CMakeLists.txt" : {
      "ObjectId" : "be213d89f0b0cf7c793df2d753e32b3dfc6b60eb",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Client/trunk/externals/bullet3/btgui/Gwen/CMakeLists.txt" : {
      "ObjectId" : "6ab8afd7456571fe35bbb6546201fc9a04ab454e",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Client/trunk/externals/bullet3/btgui/OpenGLWindow/CMakeLists.txt" : {
      "ObjectId" : "f552958bbbf6f4348549a360660ee1a819a9ed02",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#MESSAGE (${OpenGLWindowCommon_CPP})\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#no Linux detection?\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#target_link_libraries(OpenGLWindow ${OPENGL_gl_LIBRARY})\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Client/trunk/externals/bullet3/btgui/lua-5.2.3/CMakeLists.txt" : {
      "ObjectId" : "fe5b8c06349df029bd47d5475a20f182e067d402",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Client/trunk/externals/bullet3/bullet.pc.cmake" : {
      "ObjectId" : "8b989faba3cc8821ff4ab63db6bd75121cb4f67f",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Client/trunk/externals/bullet3/src/Bullet3Collision/CMakeLists.txt" : {
      "ObjectId" : "130095cc04ecafc26d9dd0d1f29e0686a6384262",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#FILES_MATCHING requires CMake 2.6\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Have to list out sub-directories manually:\n\n#todo\n\n#SET_PROPERTY(SOURCE ${Bullet3CollisionBroadPhase_HDRS} PROPERTY MACOSX_PACKAGE_LOCATION Headers/BroadPhaseCollision)\n",
        "Line" : 87,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 2
    },
    "Client/trunk/externals/bullet3/src/Bullet3Common/CMakeLists.txt" : {
      "ObjectId" : "e899e67d944eda2d70ceca8ed5d7733ecf4e02ce",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#FILES_MATCHING requires CMake 2.6\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Client/trunk/externals/bullet3/src/Bullet3Dynamics/CMakeLists.txt" : {
      "ObjectId" : "94c120d9b54fa6378fe34335a256ab29d1f53ce4",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#FILES_MATCHING requires CMake 2.6\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Client/trunk/externals/bullet3/src/Bullet3Geometry/CMakeLists.txt" : {
      "ObjectId" : "82068727054dcf55bcbad4e48d06ae108a51fe54",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#FILES_MATCHING requires CMake 2.6\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Client/trunk/externals/bullet3/src/Bullet3OpenCL/CMakeLists.txt" : {
      "ObjectId" : "45df06ff689a8e963bd1ac43d146fdfaabe180ae",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\t${Root_HDRS}\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#INSTALL of other files requires CMake 2.6\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#\t\t\t\tINSTALL(FILES ../btBullet3OpenCL_clewCommon.h\n\n#DESTINATION ${INCLUDE_INSTALL_DIR}/Bullet3OpenCL_clew)\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Have to list out sub-directories manually:\n",
        "Line" : 73,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 4
    },
    "Client/trunk/externals/bullet3/src/Bullet3Serialize/Bullet2FileLoader/CMakeLists.txt" : {
      "ObjectId" : "125576634f098ab3a3751a45c27a1d817f26778a",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#FILES_MATCHING requires CMake 2.6\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Client/trunk/externals/bullet3/src/BulletCollision/CMakeLists.txt" : {
      "ObjectId" : "67afc7e0cdab0f0cc22f90ff2943545f85881d71",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#INSTALL of other files requires CMake 2.6\n",
        "Line" : 262,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Have to list out sub-directories manually:\n",
        "Line" : 281,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 2
    },
    "Client/trunk/externals/bullet3/src/BulletDynamics/CMakeLists.txt" : {
      "ObjectId" : "4023d721e788da8e0b6875c0187b0e2002bf0484",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\tDynamics/Bullet-C-API.cpp\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Have to list out sub-directories manually:\n",
        "Line" : 159,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 2
    },
    "Client/trunk/externals/bullet3/src/BulletInverseDynamics/CMakeLists.txt" : {
      "ObjectId" : "3331c27eac0e2a5dbc2df3ac634ed1e4e0f2fb16",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#INSTALL of other files requires CMake 2.6\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Have to list out sub-directories manually:\n",
        "Line" : 61,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 2
    },
    "Client/trunk/externals/bullet3/src/BulletSoftBody/CMakeLists.txt" : {
      "ObjectId" : "d43df1c67b3103f75831cb50ec2680ba1b363326",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#SUBDIRS( Solvers )\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Client/trunk/externals/bullet3/src/CMakeLists.txt" : {
      "ObjectId" : "bbeabafbb525b8968c9bb252d351374c4035a823",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#INSTALL of other files requires CMake 2.6\n",
        "Line" : 11,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Don't actually need to install any common files, the frameworks include everything\n",
        "Line" : 14,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 2
    },
    "Client/trunk/externals/bullet3/src/LinearMath/CMakeLists.txt" : {
      "ObjectId" : "ede21d9a70c959572b927b6f948ad921c1660d2f",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#FILES_MATCHING requires CMake 2.6\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Client/trunk/externals/bullet3/src/PhysicsBT/CMakeLists.txt" : {
      "ObjectId" : "0708b99a20bbcb810f15ead90c22442fe72ace6d",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Client/trunk/externals/bullet3/test/CMakeLists.txt" : {
      "ObjectId" : "990d62ce413ba86c43c4c965e345c7155e9fc27c",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#SUBDIRS(  gtest-1.7.0  TestBullet3OpenCL)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Client/trunk/externals/bullet3/test/gtest-1.7.0/CMakeLists.txt" : {
      "ObjectId" : "0091e25ec1625d110a1fb8274737527bc0a9d3e3",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ADD_DEFINITIONS(-DGTEST_HAS_PTHREAD=1)\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Client/trunk/externals/freetype-2.8.1/CMakeLists.txt" : {
      "ObjectId" : "eec7ef930be55eed68e863ec6db45f25f2371028",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Copyright 2013-2017 by\n\n# David Turner, Robert Wilhelm, and Werner Lemberg.\n\n#\n\n# Written originally by John Cary <cary@txcorp.com>\n\n#\n\n# This file is part of the FreeType project, and may only be used, modified,\n\n# and distributed under the terms of the FreeType project license,\n\n# LICENSE.TXT.  By continuing to use, modify, or distribute this file you\n\n# indicate that you have read the license and understand and accept it\n\n# fully.\n\n#\n\n#\n\n# As a preliminary, create a compilation directory and change into it, for\n\n# example\n\n#\n\n#   mkdir ~/freetype2.compiled\n\n#   cd ~/freetype2.compiled\n\n#\n\n# Now you can say\n\n#\n\n#   cmake <path-to-freetype2-src-dir>\n\n#\n\n# to create a Makefile that builds a static version of the library.\n\n#\n\n# For a dynamic library, use\n\n#\n\n#   cmake <path-to-freetype2-src-dir> -D BUILD_SHARED_LIBS:BOOL=true\n\n#\n\n# For a framework on OS X, use\n\n#\n\n#   cmake <path-to-freetype2-src-dir> -D BUILD_FRAMEWORK:BOOL=true -G Xcode\n\n#\n\n# instead.\n\n#\n\n# For an iOS static library, use\n\n#\n\n#   cmake -D IOS_PLATFORM=OS -G Xcode <path-to-freetype2-src-dir>\n\n#\n\n# or\n\n#\n\n#   cmake -D IOS_PLATFORM=SIMULATOR -G Xcode <path-to-freetype2-src-dir>\n\n#\n\n# Please refer to the cmake manual for further options, in particular, how\n\n# to modify compilation and linking parameters.\n\n#\n\n# Some notes.\n\n#\n\n# . `cmake' creates configuration files in\n\n#\n\n#     <build-directory>/include/freetype/config\n\n#\n\n#   which should be further modified if necessary.\n\n#\n\n# . You can use `cmake' directly on a freshly cloned FreeType git\n\n#   repository.\n\n#\n\n# . `CMakeLists.txt' is provided as-is since it is normally not used by the\n\n#   developer team.\n\n#\n\n# . If you want to disable the automatic generation of the distribution\n\n#   targets, add the `-D FREETYPE_NO_DIST=true' command line argument.\n\n#\n\n# . Set the `WITH_ZLIB', `WITH_BZip2', `WITH_PNG', and `WITH_HarfBuzz'\n\n#   CMake variables to `ON' or `OFF' to force or skip using a dependency.\n\n#   Leave a variable undefined (which is the default) to use the dependency\n\n#   only if it is available.  Example:\n\n#\n\n#     cmake ... -DWITH_ZLIB=ON -DWITH_HarfBuzz=OFF ...\n\n#\n\n# . Installation of FreeType can be controlled with the CMake variables\n\n#   `SKIP_INSTALL_HEADERS', `SKIP_INSTALL_LIBRARIES', and `SKIP_INSTALL_ALL'\n\n#   (this is compatible with the same CMake variables in zlib's CMake\n\n#   support).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMAKE_TOOLCHAIN_FILE must be set before `project' is called, which\n\n# configures the base build environment and references the toolchain file\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# iOS only uses static libraries\n",
        "Line" : 106,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Disallow in-source builds\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add local cmake modules\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Compiler definitions for building the library\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Find dependencies\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Create the configuration file\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Create the options file\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# statically link MSVC to reduce dependancies\n",
        "Line" : 260,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# /GR- Remove RTTI to miminize the executable size\n",
        "Line" : 270,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# Specify library include directories\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#target_link_libraries(freetype ${MAYBE_PRIVATE} ${ZLIB_LIBRARIES})\n",
        "Line" : 396,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "#target_link_libraries(freetype ${MAYBE_PRIVATE} ${BZIP2_LIBRARIES})\n",
        "Line" : 400,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# not BZIP2_INCLUDE_DIRS\n",
        "Line" : 401,
        "CharPositionInLine" : 44
      },
      "15" : {
        "Text" : "#target_link_libraries(freetype ${MAYBE_PRIVATE} ${PNG_LIBRARIES})\n",
        "Line" : 405,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "#target_link_libraries(freetype ${MAYBE_PRIVATE} ${HARFBUZZ_LIBRARIES})\n",
        "Line" : 409,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Installations\n\n# Note the trailing slash in the argument to the `DIRECTORY' directive\n",
        "Line" : 414,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Packaging\n\n# CPack version numbers for release tarball name.\n",
        "Line" : 445,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Add `make dist' target if FREETYPE_DIST is set (which is the default)\n",
        "Line" : 466,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# eof\n",
        "Line" : 471,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "Client/trunk/externals/freetype-2.8.1/Makefile" : {
      "ObjectId" : "1c41458403fae96aa800b828ff39088250fed65e",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# FreeType 2 build system -- top-level Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright 1996-2017 by\n\n# David Turner, Robert Wilhelm, and Werner Lemberg.\n\n#\n\n# This file is part of the FreeType project, and may only be used, modified,\n\n# and distributed under the terms of the FreeType project license,\n\n# LICENSE.TXT.  By continuing to use, modify, or distribute this file you\n\n# indicate that you have read the license and understand and accept it\n\n# fully.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Project names\n\n#\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The variable TOP_DIR holds the path to the topmost directory in the project\n\n# engine source hierarchy.  If it is not defined, default it to `.'.\n\n#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The variable OBJ_DIR gives the location where object files and the\n\n# FreeType library are built.\n\n#\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# EOF\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "Client/trunk/externals/freetype-2.8.1/builds/cmake/FindHarfBuzz.cmake" : {
      "ObjectId" : "f394b82bf975ced36ef8f5c5e9069de54c24f4a7",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2012, Intel Corporation\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright notice, this\n\n#   list of conditions and the following disclaimer.\n\n# * Redistributions in binary form must reproduce the above copyright notice,\n\n#   this list of conditions and the following disclaimer in the documentation\n\n#   and/or other materials provided with the distribution.\n\n# * Neither the name of Intel Corporation nor the names of its contributors may\n\n#   be used to endorse or promote products derived from this software without\n\n#   specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n# Try to find Harfbuzz include and library directories.\n\n#\n\n# After successful discovery, this will set for inclusion where needed:\n\n# HARFBUZZ_INCLUDE_DIRS - containg the HarfBuzz headers\n\n# HARFBUZZ_LIBRARIES - containg the HarfBuzz library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# HarfBuzz 0.9.18 split ICU support into a separate harfbuzz-icu library.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Client/trunk/externals/freetype-2.8.1/builds/cmake/iOS.cmake" : {
      "ObjectId" : "5717e6a7b89fc16154ac919fb643ca18a8fd7670",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# iOS.cmake\n\n#\n\n# Copyright 2014-2017 by\n\n# David Turner, Robert Wilhelm, and Werner Lemberg.\n\n#\n\n# Written by David Wimsey <david@wimsey.us>\n\n#\n\n# This file is part of the FreeType project, and may only be used, modified,\n\n# and distributed under the terms of the FreeType project license,\n\n# LICENSE.TXT.  By continuing to use, modify, or distribute this file you\n\n# indicate that you have read the license and understand and accept it\n\n# fully.\n\n#\n\n#\n\n# This file is derived from the files `Platform/Darwin.cmake' and\n\n# `Platform/UnixPaths.cmake', which are part of CMake 2.8.4.  It has been\n\n# altered for iOS development.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Options\n\n# -------\n\n#\n\n#   IOS_PLATFORM = OS | SIMULATOR\n\n#\n\n#     This decides whether SDKS are selected from the `iPhoneOS.platform' or\n\n#     `iPhoneSimulator.platform' folders.\n\n#\n\n#     OS - the default, used to build for iPhone and iPad physical devices,\n\n#       which have an ARM architecture.\n\n#     SIMULATOR - used to build for the Simulator platforms, which have an\n\n#       x86 architecture.\n\n#\n\n#   CMAKE_IOS_DEVELOPER_ROOT = /path/to/platform/Developer folder\n\n#\n\n#     By default, this location is automatically chosen based on the\n\n#     IOS_PLATFORM value above.  If you manually set this variable, it\n\n#     overrides the default location and forces the use of a particular\n\n#     Developer Platform.\n\n#\n\n#   CMAKE_IOS_SDK_ROOT = /path/to/platform/Developer/SDKs/SDK folder\n\n#\n\n#     By default, this location is automatically chosen based on the\n\n#     CMAKE_IOS_DEVELOPER_ROOT value.  In this case it is always the most\n\n#     up-to-date SDK found in the CMAKE_IOS_DEVELOPER_ROOT path.  If you\n\n#     manually set this variable, it forces the use of a specific SDK\n\n#     version.\n\n#\n\n#\n\n# Macros\n\n# ------\n\n#\n\n#   set_xcode_property (TARGET XCODE_PROPERTY XCODE_VALUE)\n\n#\n\n#     A convenience macro for setting Xcode specific properties on targets.\n\n#\n\n#     Example:\n\n#\n\n#       set_xcode_property(myioslib IPHONEOS_DEPLOYMENT_TARGET \"3.1\")\n\n#\n\n#   find_host_package (PROGRAM ARGS)\n\n#\n\n#     A macro to find executable programs on the host system, not within the\n\n#     iOS environment.  Thanks to the `android-cmake' project for providing\n\n#     the command.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# standard settings\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# required as of cmake 2.8.10\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# determine the cmake host system version so we know where to find the iOS\n\n# SDKs\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# skip the platform compiler checks for cross compiling\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# all iOS/Darwin specific settings - some may be redundant\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# hidden visibility is required for cxx on iOS\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# hack: If a new cmake (which uses CMAKE_INSTALL_NAME_TOOL) runs on an old\n\n#       build tree (where `install_name_tool' was hardcoded), and where\n\n#       CMAKE_INSTALL_NAME_TOOL isn't in the cache and still cmake didn't\n\n#       fail in `CMakeFindBinUtils.cmake' (because it isn't rerun), hardcode\n\n#       CMAKE_INSTALL_NAME_TOOL here to `install_name_tool' so it behaves as\n\n#       it did before.\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# set up iOS platform unless specified manually with IOS_PLATFORM\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# check the platform selection and setup for developer root\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# this causes the installers to properly locate the output libraries\n",
        "Line" : 152,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# this causes the installers to properly locate the output libraries\n",
        "Line" : 158,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# set up iOS developer location unless specified manually with\n\n# CMAKE_IOS_DEVELOPER_ROOT --\n\n# note that Xcode 4.3 changed the installation location; choose the most\n\n# recent one available\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# find and use the most recent iOS SDK unless specified manually with\n\n# CMAKE_IOS_SDK_ROOT\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# set the sysroot default to the most recent SDK\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# set the architecture for iOS --\n\n# note that currently both ARCHS_STANDARD_32_BIT and\n\n# ARCHS_UNIVERSAL_IPHONE_OS set armv7 only, so set both manually\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# set the find root to the iOS developer roots and to user defined paths\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# default to searching for frameworks first\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# set up the default search directories for frameworks\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# only search the iOS SDKs, not the remainder of the host filesystem\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# this little macro lets you set any Xcode specific property\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# this macro lets you find executable programs on the host system\n",
        "Line" : 255,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# eof\n",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24
    },
    "Client/trunk/externals/freetype-2.8.1/src/tools/ftrandom/Makefile" : {
      "ObjectId" : "24dc49c563961522b068c37a31bbb81bcf70eac1",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# TOP_DIR and OBJ_DIR should be set by the user to the right directories,\n\n# if necessary.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The setup below is for gcc on a Unix-like platform,\n\n# where FreeType has been set up to create a static library\n\n# (which is the default).\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# EOF\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Client/trunk/externals/glew-2.1.0/Makefile" : {
      "ObjectId" : "b991460a17efdd6a5f3157275c62c2d2ff8e3942",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#!gmake\n\n## The OpenGL Extension Wrangler Library\n\n## Copyright (C) 2002-2008, Milan Ikits <milan ikits[]ieee org>\n\n## Copyright (C) 2002-2008, Marcelo E. Magallon <mmagallo[]debian org>\n\n## Copyright (C) 2002, Lev Povalahev\n\n## All rights reserved.\n\n## \n\n## Redistribution and use in source and binary forms, with or without \n\n## modification, are permitted provided that the following conditions are met:\n\n## \n\n## * Redistributions of source code must retain the above copyright notice, \n\n##   this list of conditions and the following disclaimer.\n\n## * Redistributions in binary form must reproduce the above copyright notice, \n\n##   this list of conditions and the following disclaimer in the documentation \n\n##   and/or other materials provided with the distribution.\n\n## * The name of the author may be used to endorse or promote products \n\n##   derived from this software without specific prior written permission.\n\n##\n\n## THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" \n\n## AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE \n\n## IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n## ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE \n\n## LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR \n\n## CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF \n\n## SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n## INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n## CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n## ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF\n\n## THE POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# To disable stripping of linked binaries either:\n\n#   - use STRIP= on gmake command-line\n\n#   - edit this makefile to set STRIP to the empty string\n\n# (Note: STRIP does not affect the strip in the install step)\n\n#\n\n# To disable symlinks:\n\n#   - use LN= on gmake command-line\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# GLEW shared and static libraries\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Force re-write of glew.pc, GLEW_DEST can vary\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# GLEW utility programs\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Don't build glewinfo or visualinfo for NaCL, yet.\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Install targets\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# runtime\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# development files\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Distributions\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "Client/trunk/externals/glew-2.1.0/auto/Makefile" : {
      "ObjectId" : "ff9dd3613d1036afc58cbc74b28a22616108fed8",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "## Copyright (C) 2002-2008, Marcelo E. Magallon <mmagallo[]debian org>\n\n## Copyright (C) 2002-2008, Milan Ikits <milan ikits[]ieee org>\n\n##\n\n## This program is distributed under the terms and conditions of the GNU\n\n## General Public License Version 2 as published by the Free Software\n\n## Foundation or, at your option, any later version.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#GLEW_SPLIT_SOURCE = yes\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "### Use git repository for GL extension specifications\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n### Conventional desktop OpenGL settings\n\n###\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###\n\n### Experimental OpenGL ES settings\n\n###\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# REGISTRY     = registry/gles\n\n# EXT          = extensions/gles\n\n# FILTER       = filter_gles_ext.sh\n\n# CORE         = core/gles\n\n# REGISTRY_URL = http://www.khronos.org/registry/gles/\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#GL_CORE_SPEC  := $(shell grep GL_VERSION custom.txt    |                       perl -pi -e \"s=^=$(CORE)/=g;\")\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#GLX_CORE_SPEC := $(shell grep GLX_VERSION custom.txt   |                       perl -pi -e \"s=^=$(CORE)/=g;\")\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Update documentation\n",
        "Line" : 308,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#<a href=\"$(@F)\">(.*)</a>#\\1#' > $@\n",
        "Line" : 315,
        "CharPositionInLine" : 12
      },
      "10" : {
        "Text" : "#<a href=\"$(@F)\">(.*)</a>#\\1#' $@\n",
        "Line" : 325,
        "CharPositionInLine" : 15
      },
      "11" : {
        "Text" : "#<a href=\"$(@F)\">(.*)</a>#\\1#' $@\n",
        "Line" : 335,
        "CharPositionInLine" : 15
      },
      "12" : {
        "Text" : "#<a href=\"$(@F)\">(.*)</a>#\\1#' $@\n",
        "Line" : 345,
        "CharPositionInLine" : 15
      },
      "CommentCount" : 13
    },
    "Client/trunk/externals/glew-2.1.0/build/cmake/CMakeLists.txt" : {
      "ObjectId" : "1707b33c6bc3e82d8dd551471b8cf98dc1934c57",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# get version from config/version\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# X11 required when builing visualinfo and glewinfo,\n\n# but not for Windows or Apple OSX platforms\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#### Regal mode ####\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#### OSMesa mode ####\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#### GLEW ####\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#add_library (glew SHARED ${GLEW_PUBLIC_HEADERS_FILES} ${GLEW_SRC_FILES})\n\n#set_target_properties (glew PROPERTIES COMPILE_DEFINITIONS \"GLEW_BUILD\" OUTPUT_NAME \"${GLEW_LIB_NAME}\" PREFIX \"${DLL_PREFIX}\"\n\n#                                       VERSION ${GLEW_VERSION}\n\n#                                       SOVERSION ${CPACK_PACKAGE_VERSION_MAJOR}.${CPACK_PACKAGE_VERSION_MINOR})\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# add options from visual studio project\n\n#target_compile_definitions (glew PRIVATE \"GLEW_BUILD;VC_EXTRALEAN\")\n",
        "Line" : 103,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#target_link_libraries (glew LINK_PRIVATE -BASE:0x62AA0000)\n\n# kill security checks which are dependent on stdlib\n\n#target_compile_options (glew PRIVATE -GS-)\n",
        "Line" : 106,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# remove stdlib dependency\n\n#target_link_libraries (glew LINK_PRIVATE -nodefaultlib -noentry)\n",
        "Line" : 110,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# remove stdlib dependency on windows with GCC and Clang (for similar reasons\n\n# as to MSVC - to allow it to be used with any Windows compiler)\n\n#target_compile_options (glew PRIVATE -fno-builtin -fno-stack-protector)\n",
        "Line" : 114,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#target_link_libraries (glew LINK_PRIVATE -nostdlib)\n",
        "Line" : 118,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "#target_link_libraries (glew LINK_PUBLIC ${GLEW_LIBRARIES})\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#foreach(t glew glew_s)\n\n#  target_include_directories(${t} PUBLIC $<INSTALL_INTERFACE:include>)\n\n#endforeach()\n",
        "Line" : 141,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "#set(MAYBE_EXPORT EXPORT glew-targets)\n",
        "Line" : 146,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "#list(APPEND targets_to_install glew)\n",
        "Line" : 151,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "#target_link_libraries (glewinfo glew)\n",
        "Line" : 172,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "#target_link_libraries (visualinfo glew)\n",
        "Line" : 182,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "#  Mac OSX has no glu.pc unless optional X11/GLX is installed\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#if(WIN32 AND MSVC AND (NOT MSVC_VERSION LESS 1600) AND (NOT CMAKE_VERSION VERSION_LESS \"3.1\"))\n\n#    install(\n\n#        FILES $<TARGET_PDB_FILE:glew>\n\n#        DESTINATION ${CMAKE_INSTALL_LIBDIR}\n\n#        CONFIGURATIONS Debug RelWithDebInfo\n\n#    )\n\n#endif()\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# statically link MSVC to reduce dependancies\n",
        "Line" : 246,
        "CharPositionInLine" : 1
      },
      "20" : {
        "Text" : "# /GR- Remove RTTI to miminize the executable size\n",
        "Line" : 256,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 21
    },
    "Client/trunk/externals/glew-2.1.0/build/cmake/CopyImportedTargetProperties.cmake" : {
      "ObjectId" : "a7ade9842ea7bf1b2296eafb6653046243272a59",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# CopyImportedTargetProperties\n\n# --------------------------\n\n#\n\n# Copies the `INTERFACE*` and `IMPORTED*` properties from a target\n\n# to another one.\n\n# This function can be used to duplicate an `IMPORTED` or an `ALIAS` library\n\n# with a different name since ``add_library(... ALIAS ...)`` does not work\n\n# for those targets.\n\n#\n\n# ::\n\n#\n\n#   copy_imported_target_properties(<source-target> <destination-target>)\n\n#\n\n# The function copies all the `INTERFACE*` and `IMPORTED*` target\n\n# properties from `<source-target>` to `<destination-target>`.\n\n#\n\n# The function uses the `IMPORTED_CONFIGURATIONS` property to determine\n\n# which configuration-dependent properties should be copied\n\n# (`IMPORTED_LOCATION_<CONFIG>`, etc...)\n\n#\n\n# Example:\n\n#\n\n# Internally the CMake project of ZLIB builds the ``zlib`` and\n\n# ``zlibstatic`` targets which can be exported in the ``ZLIB::`` namespace\n\n# with the ``install(EXPORT ...)`` command.\n\n#\n\n# The config-module will then create the import libraries ``ZLIB::zlib`` and\n\n# ``ZLIB::zlibstatic``. To use ``ZLIB::zlibstatic`` under the standard\n\n# ``ZLIB::ZLIB`` name we need to create the ``ZLIB::ZLIB`` imported library\n\n# and copy the appropriate properties:\n\n#\n\n#   add_library(ZLIB::ZLIB STATIC IMPORTED)\n\n#   copy_imported_target_properties(ZLIB::zlibstatic ZLIB::ZLIB)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# copy configuration-independent properties\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# message(STATUS \"set_target_properties(${dest_target} PROPERTIES ${prop} ${v})\")\n",
        "Line" : 68,
        "CharPositionInLine" : 12
      },
      "3" : {
        "Text" : "# copy configuration-dependent properties\n",
        "Line" : 72,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# message(STATUS \"set_target_properties(${dest_target} PROPERTIES ${prop} ${v})\")\n",
        "Line" : 84,
        "CharPositionInLine" : 16
      },
      "CommentCount" : 5
    },
    "Client/trunk/externals/glew-2.1.0/build/cmake/glew-config.cmake" : {
      "ObjectId" : "0b79c0b1455d56fe3dd4df03dc94461dc87c9269",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This config-module creates the following import libraries:\n\n#\n\n# - GLEW::glew shared lib\n\n# - GLEW::glew_s static lib\n\n#\n\n# Additionally GLEW::GLEW will be created as an\n\n# copy of either the shared (default) or the static libs.\n\n#\n\n# Dependending on the setting of BUILD_SHARED_LIBS at GLEW build time\n\n# either the static or shared versions may not be available.\n\n#\n\n# Set GLEW_USE_STATIC_LIBS to OFF or ON to force using the shared\n\n# or static lib for GLEW::GLEW \n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# decide which import library (glew/glew_s)\n\n# needs to be copied to GLEW::GLEW\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# if defined, use only static or shared\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# else use static only if no shared\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# CMake doesn't allow creating ALIAS lib for an IMPORTED lib\n\n# so create imported ones and copy the properties\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# message(STATUS \"add_library(${_glew_dest_target} ${_glew_target_type} IMPORTED)\")\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "Client/trunk/externals/glew-2.1.0/build/cmake/testbuild/CMakeLists.txt" : {
      "ObjectId" : "27bcf2d761c783c901b7a9eb4fb98f94cff666a2",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# call twice to test multiple call\n",
        "Line" : 5,
        "CharPositionInLine" : 35
      },
      "CommentCount" : 1
    },
    "Client/trunk/externals/glew-2.1.0/build/conan/FindGLEW.cmake" : {
      "ObjectId" : "4c10b305deb2859675427a576d496b1c222da01f",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Client/trunk/externals/glew-2.1.0/build/conan/test_package/CMakeLists.txt" : {
      "ObjectId" : "351a7783db801703c5bba7cfc2e8a57eb17ae4c2",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Client/trunk/externals/glew-2.1.0/build/vc6/Makefile" : {
      "ObjectId" : "5a4f5d6ab2aff657226ddc418ead8c25a0247faa",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "Client/trunk/externals/glfw-3.2.1/CMake/amd64-mingw32msvc.cmake" : {
      "ObjectId" : "705e251d3917f3787eca55aa3b3b0e303aee548f",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the environment for cross compiling from Linux to Win64\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configure the behaviour of the find commands \n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Client/trunk/externals/glfw-3.2.1/CMake/i586-mingw32msvc.cmake" : {
      "ObjectId" : "393ddbda3019706378b25bb3d1abb634a3936866",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the environment for cross compiling from Linux to Win32\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configure the behaviour of the find commands \n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Client/trunk/externals/glfw-3.2.1/CMake/i686-pc-mingw32.cmake" : {
      "ObjectId" : "9a46aef7b3457c8382fe16b3ad2e5a776f7f5f7d",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the environment for cross compiling from Linux to Win32\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Target system name\n",
        "Line" : 2,
        "CharPositionInLine" : 34
      },
      "2" : {
        "Text" : "#Configure the behaviour of the find commands \n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Client/trunk/externals/glfw-3.2.1/CMake/i686-w64-mingw32.cmake" : {
      "ObjectId" : "9bd60936de2ed08f365601fbbfe404adbb37853a",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the environment for cross compiling from Linux to Win32\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Target system name\n",
        "Line" : 2,
        "CharPositionInLine" : 34
      },
      "2" : {
        "Text" : "# Configure the behaviour of the find commands \n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Client/trunk/externals/glfw-3.2.1/CMake/modules/FindMir.cmake" : {
      "ObjectId" : "b1a495ba191db856c27e790cecd100a7288eeb89",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find Mir on a Unix system\n\n#\n\n# This will define:\n\n#\n\n#   MIR_LIBRARIES   - Link these to use Wayland\n\n#   MIR_INCLUDE_DIR - Include directory for Wayland\n\n#\n\n# Copyright (c) 2014 Brandon Schaefer <brandon.schaefer@canonical.com>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Client/trunk/externals/glfw-3.2.1/CMake/modules/FindVulkan.cmake" : {
      "ObjectId" : "d3a664a8bda6d16449d86c24781e0f28a3ebaec8",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find Vulkan\n\n#\n\n# VULKAN_INCLUDE_DIR\n\n# VULKAN_LIBRARY\n\n# VULKAN_FOUND\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Client/trunk/externals/glfw-3.2.1/CMake/modules/FindWaylandProtocols.cmake" : {
      "ObjectId" : "8eb83f27ef88575f80a56198bd2635580452a914",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Client/trunk/externals/glfw-3.2.1/CMake/modules/FindXKBCommon.cmake" : {
      "ObjectId" : "0f571eeacb5cd91d4ef72a89a066142e5a6a0d0a",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find XKBCommon\n\n# Once done, this will define\n\n#\n\n#   XKBCOMMON_FOUND - System has XKBCommon\n\n#   XKBCOMMON_INCLUDE_DIRS - The XKBCommon include directories\n\n#   XKBCOMMON_LIBRARIES - The libraries needed to use XKBCommon\n\n#   XKBCOMMON_DEFINITIONS - Compiler switches required for using XKBCommon\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Client/trunk/externals/glfw-3.2.1/CMake/x86_64-w64-mingw32.cmake" : {
      "ObjectId" : "84b2c701ec1d9e2ee0b72f3031cfccb4a81d205e",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the environment for cross compiling from Linux to Win32\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Target system name\n",
        "Line" : 2,
        "CharPositionInLine" : 34
      },
      "2" : {
        "Text" : "# Configure the behaviour of the find commands \n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Client/trunk/externals/glfw-3.2.1/CMakeLists.txt" : {
      "ObjectId" : "b1476bd551de2529970ad80b8365ccd58a9dbb82",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Until all major package systems have moved to CMake 3,\n\n# we stick with the older INSTALL_NAME_DIR mechanism\n",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# On Unix-like systems, shared libraries can use the soname system.\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Set compiler specific flags\n\n#--------------------------------------------------------------------\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Workaround for legacy MinGW not providing XInput and DirectInput\n",
        "Line" : 98,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Enable link-time exploit mitigation features enabled by default on MSVC\n",
        "Line" : 107,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Compatibility with data execution prevention (DEP)\n",
        "Line" : 110,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Compatibility with address space layout randomization (ASLR)\n",
        "Line" : 117,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Compatibility with 64-bit address space layout randomization (ASLR)\n",
        "Line" : 124,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Detect and select backend APIs\n\n#--------------------------------------------------------------------\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Add Vulkan static library if requested\n\n#--------------------------------------------------------------------\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Find and add Unix math and time libraries\n\n#--------------------------------------------------------------------\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Use Win32 for window creation\n\n#--------------------------------------------------------------------\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Use X11 for window creation\n\n#--------------------------------------------------------------------\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Set up library and include paths\n",
        "Line" : 216,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Check for XRandR (modern resolution switching and gamma control)\n",
        "Line" : 220,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Check for Xinerama (legacy multi-monitor support)\n",
        "Line" : 229,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Check for Xf86VidMode (fallback gamma control)\n",
        "Line" : 238,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Backwards compatibility (see CMake bug 0006976)\n",
        "Line" : 246,
        "CharPositionInLine" : 12
      },
      "18" : {
        "Text" : "# Check for Xkb (X keyboard extension)\n",
        "Line" : 253,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Check for Xcursor\n",
        "Line" : 260,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Use Wayland for window creation\n\n#--------------------------------------------------------------------\n",
        "Line" : 271,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Use Mir for window creation\n\n#--------------------------------------------------------------------\n",
        "Line" : 293,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Use Cocoa for window creation and NSOpenGL for context creation\n\n#--------------------------------------------------------------------\n",
        "Line" : 309,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Set up library and include paths\n",
        "Line" : 326,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Export GLFW library dependencies\n\n#--------------------------------------------------------------------\n",
        "Line" : 344,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Create generated files\n\n#--------------------------------------------------------------------\n",
        "Line" : 354,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Add subdirectories\n\n#--------------------------------------------------------------------\n",
        "Line" : 374,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Install files other than the library\n\n# The library is installed by src/CMakeLists.txt\n\n#--------------------------------------------------------------------\n",
        "Line" : 391,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Only generate this target if no higher-level project already has\n",
        "Line" : 409,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 29
    },
    "Client/trunk/externals/glfw-3.2.1/examples/CMakeLists.txt" : {
      "ObjectId" : "138a781667cd08c68582a6a9e54ff0fede8b1bc7",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tell MSVC to use main instead of WinMain for Windows subsystem executables\n",
        "Line" : 46,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "Client/trunk/externals/glfw-3.2.1/src/CMakeLists.txt" : {
      "ObjectId" : "5042aba382aa86dba035b84c5955adef6f7ee821",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# For some reason, CMake doesn't know about .m\n",
        "Line" : 51,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# HACK: When building on MinGW, WINVER and UNICODE need to be defined before\n\n# the inclusion of stddef.h (by glfw3.h), which is itself included before\n\n# win32_platform.h.  We define them here until a saner solution can be found\n\n# NOTE: MinGW-w64 and Visual C++ do /not/ need this hack.\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Enable a reasonable set of warnings (no, -Wextra is not reasonable)\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Remove the lib prefix on the DLL (but not the import library\n",
        "Line" : 87,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : "# Add a suffix to the import library to avoid naming conflicts\n",
        "Line" : 90,
        "CharPositionInLine" : 12
      },
      "5" : {
        "Text" : "# Add a suffix to the import library to avoid naming conflicts\n",
        "Line" : 93,
        "CharPositionInLine" : 12
      },
      "6" : {
        "Text" : "# Add -fno-common to work around a bug in Apple's GCC\n",
        "Line" : 97,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Hide symbols not explicitly tagged for export from the shared library\n",
        "Line" : 103,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 8
    },
    "Client/trunk/externals/jpeg/CMakeLists.txt" : {
      "ObjectId" : "a64206c5180acce3b0bfd6b9d45d3d7fc5181a1d",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Client/trunk/externals/lpng1634/CMakeLists.txt" : {
      "ObjectId" : "4a2c949b96e02ac323f92b1f21f6065f1c00220b",
      "LastModified" : "2017-11-25T02:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (C) 2007,2009-2017 Glenn Randers-Pehrson\n\n# Written by Christian Ehrlicher, 2007\n\n# Revised by Roger Lowman, 2009-2010\n\n# Revised by Clifford Yapp, 2011-2012\n\n# Revised by Roger Leigh, 2016\n\n# Revised by Andreas Franek, 2016\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This code is released under the libpng license.\n\n# For conditions of distribution and use, see the disclaimer\n\n# and license in png.h\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set MacOSX @rpath usage globally.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Use new variable expansion policy.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# needed packages\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#Allow users to specify location of Zlib,\n\n# Useful if zlib is being built alongside this as a sub-project\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# not needed on windows\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# COMMAND LINE OPTIONS\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Many more configuration options could be added here\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# set definitions and sources for arm\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# set definitions and sources for powerpc\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# set definitions and sources for intel\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# set definitions and sources for MIPS\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# SET LIBNAME\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# to distinguish between debug and release lib\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Check if LD supports linker scripts.\n",
        "Line" : 198,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Find symbol prefix.  Likely obsolete and unnecessary with recent\n\n# toolchains (it's not done in many other projects).\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# statically link MSVC to reduce dependancies\n",
        "Line" : 262,
        "CharPositionInLine" : 1
      },
      "19" : {
        "Text" : "# enable multiprocessor build option /MP, this will greatly increase compile speed\n",
        "Line" : 272,
        "CharPositionInLine" : 1
      },
      "20" : {
        "Text" : "# find_program(AWK NAMES gawk awk)\n\n#set(AWK \"C:/Users/lan/Desktop/gawk-3.1.6-1-bin/bin/awk\")\n",
        "Line" : 280,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# No awk available to generate sources; use pre-built pnglibconf.h\n",
        "Line" : 287,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# Dummy\n",
        "Line" : 290,
        "CharPositionInLine" : 30
      },
      "23" : {
        "Text" : "# Generate .chk from .out with awk\n\n# generate_chk(INPUT inputfile OUTPUT outputfile [DEPENDS dep1 [dep2...]])\n",
        "Line" : 293,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Generate .out from .c with awk\n\n# generate_out(INPUT inputfile OUTPUT outputfile [DEPENDS dep1 [dep2...]])\n",
        "Line" : 316,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Generate specific source file with awk\n\n# generate_source(OUTPUT outputfile [DEPENDS dep1 [dep2...]])\n",
        "Line" : 339,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Copy file\n",
        "Line" : 358,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# Generate scripts/pnglibconf.h\n",
        "Line" : 367,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# Generate pnglibconf.c\n",
        "Line" : 373,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# Generate pnglibconf.h\n",
        "Line" : 390,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# Generate pngprefix.h\n",
        "Line" : 405,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# A single target handles generation of all generated files.  If\n\n# they are dependend upon separately by multiple targets, this\n\n# confuses parallel make (it would require a separate top-level\n\n# target for each file to track the dependencies properly).\n",
        "Line" : 447,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# OUR SOURCES\n",
        "Line" : 467,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# NOW BUILD OUR TARGET\n",
        "Line" : 535,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# msvc does not append 'lib' - do it here to have consistent name\n",
        "Line" : 546,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# does not work without changing name\n",
        "Line" : 564,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# MSVC doesn't use a different file extension for shared vs. static\n\n# libs.  We are able to change OUTPUT_NAME to remove the _static\n\n# for all other platforms.\n",
        "Line" : 568,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# msvc does not append 'lib' - do it here to have consistent name\n",
        "Line" : 582,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "#target_link_libraries(png_static ${ZLIB_LIBRARY} ${M_LIBRARY})\n",
        "Line" : 585,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "# have generator expressions\n",
        "Line" : 634,
        "CharPositionInLine" : 36
      },
      "40" : {
        "Text" : "# old 2.x add_test; limited and won't work well on Windows\n",
        "Line" : 640,
        "CharPositionInLine" : 9
      },
      "41" : {
        "Text" : "# Note LIBPNG is a dummy value as there are no generator expressions\n",
        "Line" : 641,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "# Find test PNG files by globbing, but sort lists to ensure\n\n# consistency between different filesystems.\n",
        "Line" : 650,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "# Should already be sorted, but sort anyway to be certain.\n",
        "Line" : 742,
        "CharPositionInLine" : 6
      },
      "44" : {
        "Text" : "# Set a variable with CMake code which:\n\n# Creates a symlink from src to dest (if possible) or alternatively\n\n# copies if different.\n",
        "Line" : 779,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# If we don't need to symlink something that's coming from a build target,\n\n# we can go ahead and symlink/copy at configure time.\n",
        "Line" : 797,
        "CharPositionInLine" : 4
      },
      "46" : {
        "Text" : "# We need to use generator expressions, which can be a bit tricky, so for\n\n# simplicity make the symlink a POST_BUILD step and use the TARGET\n\n# signature of add_custom_command.\n",
        "Line" : 814,
        "CharPositionInLine" : 4
      },
      "47" : {
        "Text" : "# Create source generation scripts.\n",
        "Line" : 832,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# libpng is a library so default to 'lib'\n",
        "Line" : 841,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# CREATE PKGCONFIG FILES\n\n# we use the same files like ./configure, so we have to set its vars\n\n# Only do this on Windows for Cygwin - the files don't make much sense outside\n\n# a UNIX look alike\n",
        "Line" : 846,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# SET UP LINKS\n",
        "Line" : 865,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "#   VERSION 16.${PNGLIB_RELEASE}.1.6.34\n",
        "Line" : 868,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# If CMake > 2.4.x, we set a variable used below to export\n\n# targets to an export file.\n\n# TODO: Use VERSION_GREATER after our cmake_minimum_required >= 2.6.2\n",
        "Line" : 874,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# future proof\n",
        "Line" : 879,
        "CharPositionInLine" : 38
      },
      "54" : {
        "Text" : "# INSTALL\n",
        "Line" : 883,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# Create a symlink for libpng.dll.a => libpng16.dll.a on Cygwin\n",
        "Line" : 893,
        "CharPositionInLine" : 4
      },
      "56" : {
        "Text" : "# Install man pages\n",
        "Line" : 931,
        "CharPositionInLine" : 2
      },
      "57" : {
        "Text" : "# Install pkg-config files\n",
        "Line" : 937,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# On versions of CMake that support it, create an export file CMake\n\n# users can include() to import our targets\n",
        "Line" : 950,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# what's with libpng-manual.txt and all the extra files?\n",
        "Line" : 956,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# UNINSTALL\n\n# do we need this?\n",
        "Line" : 958,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# DIST\n\n# do we need this?\n",
        "Line" : 961,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# to create msvc import lib for mingw compiled shared lib\n\n# pexports libpng.dll > libpng.def\n\n# lib /def:libpng.def /machine:x86\n",
        "Line" : 964,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 63
    },
    "NPLRuntime/CMakeLists.txt" : {
      "ObjectId" : "ab540221f5336e5743fafdf4fc66702f6a4536f6",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Author: LiXizhi\n\n# Email: lixizhi@yeah.net\n\n# Date: 2015.2.21\n\n# Note: Build only paraengine server or NPL runtime\n\n# Debian install:\n\n# apt-get install cmake\n\n# apt-get install libboost-all-dev\n\n# apt-get install libssl-dev\n\n# apt-get install libssh2-1-dev\n\n# apt-get install build-essential\n\n# curlbuild.h file must be deleted or fuzzy errors will appear when build curl\n\n# rm -f Server/trunk/curl-7.47.1/include/curl/curlbuild.h\n\n# apt-get install freeglut3 freeglut3-dev libglew1.5 libglew1.5-dev libglu1-mesa libglu1-mesa-dev libgl1-mesa-glx libgl1-mesa-dev\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# this is the directory to keep all binary\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# static linking to all libraries, such as boost, sqlite3, curl. This will produce big executable, but easy to deploy as binary. \n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# include boost if client is not defined, it allows us to use a different boost version than the client on the server build.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add more boost components here\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# making executable relocatable \n",
        "Line" : 61,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# only use the latest luabind on macosx/macos-sierra\n",
        "Line" : 71,
        "CharPositionInLine" : 12
      },
      "7" : {
        "Text" : "#add_subdirectory (${SERVER_SOURCE_DIR}luaprofiler-2.0.2  ${NPLRuntime_BINARY_DIR}/luaprofiler-2.0.2)\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# main NPL runtime using ParaEngineServer\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# following are plugins that should be build after main runtime\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "NPLRuntime/ParaEngineClient/CMakeLists.txt" : {
      "ObjectId" : "a94d69eb9719d9a390819defc9f9eb7ce08e91f1",
      "LastModified" : "2019-01-19T14:04:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Author: LiXizhi\n\n# Email: lixizhi@yeah.net\n\n# Date: 2016.4.30\n\n# Desc:\n\n# Output variables:\n\n# - ${NPLRUNTIME_LINK_LIBRARIES} contains link libraries, including the NPLRuntime itself.\n\n# - ${NPLRUNTIME_LINK_DIRECTORIES} contains all link directories.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The version number.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Sources\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Libraries \n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# All Source\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# SOURCE\n\n# ==================================================================================\n\n##############################\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "##############################\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "##############################\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#############################\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "##############################\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "##############################\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "##############################\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "##############################\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "##############################\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "##############################\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "##############################\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "##############################\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "##############################\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "##############################\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "##############################\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "##############################\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "##############################\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##############################\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "##############################\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "##############################\n\n# util files\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "##############################\n\n# Documentation\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "##############################\n\n# WebSocket\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "##############################\n\n#AutoRigger\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# OPENGL Renderer Source\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "##################################\n\n#Shader\n",
        "Line" : 179,
        "CharPositionInLine" : 1
      },
      "32" : {
        "Text" : "# custom build rules: effect FX files\n",
        "Line" : 189,
        "CharPositionInLine" : 1
      },
      "33" : {
        "Text" : "# Other GL shader\n",
        "Line" : 207,
        "CharPositionInLine" : 1
      },
      "34" : {
        "Text" : "##############################\n",
        "Line" : 230,
        "CharPositionInLine" : 1
      },
      "35" : {
        "Text" : "##############################\n",
        "Line" : 235,
        "CharPositionInLine" : 1
      },
      "36" : {
        "Text" : "##############################\n",
        "Line" : 239,
        "CharPositionInLine" : 1
      },
      "37" : {
        "Text" : "##############################\n",
        "Line" : 243,
        "CharPositionInLine" : 1
      },
      "38" : {
        "Text" : "#####################################\n\n# Resource file\n\n# winmain.rc is the only buildable file, but the rest are all dependencies of it.\n",
        "Line" : 249,
        "CharPositionInLine" : 1
      },
      "39" : {
        "Text" : "##############################\n\n# CommonDirectX\n",
        "Line" : 259,
        "CharPositionInLine" : 1
      },
      "40" : {
        "Text" : "##############################\n",
        "Line" : 265,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "# Compiled Files\n",
        "Line" : 266,
        "CharPositionInLine" : 1
      },
      "42" : {
        "Text" : "##############################\n\n# ParaXmodel.templates\n",
        "Line" : 271,
        "CharPositionInLine" : 1
      },
      "43" : {
        "Text" : "##############################\n\n# cursor.tga\n",
        "Line" : 276,
        "CharPositionInLine" : 1
      },
      "44" : {
        "Text" : "##############################\n\n# paraworld.ico\n",
        "Line" : 281,
        "CharPositionInLine" : 1
      },
      "45" : {
        "Text" : "##############################\n\n# Shader Header Files\n",
        "Line" : 286,
        "CharPositionInLine" : 1
      },
      "46" : {
        "Text" : "##############################\n\n# Shader\n",
        "Line" : 293,
        "CharPositionInLine" : 1
      },
      "47" : {
        "Text" : "# find directx\n",
        "Line" : 296,
        "CharPositionInLine" : 1
      },
      "48" : {
        "Text" : "# custom build rules: effect FX files\n",
        "Line" : 303,
        "CharPositionInLine" : 1
      },
      "49" : {
        "Text" : "# uncomment the following line if you want to see the text output to debug shader instructions.\n\n# COMMAND fxc /Tfx_2_0 /Gfp /nologo /Fc \"${ParaEngineClient_SOURCE_DIR}/shaders/${src_filename}.txt\" ${src_file}\n",
        "Line" : 311,
        "CharPositionInLine" : 4
      },
      "50" : {
        "Text" : "# ENDIF  NPLRUNTIME_RENDERER STREQUAL \"DIRECTX\"\n",
        "Line" : 321,
        "CharPositionInLine" : 8
      },
      "51" : {
        "Text" : "##############################\n\n#OpenGLTest\n",
        "Line" : 326,
        "CharPositionInLine" : 2
      },
      "52" : {
        "Text" : "##############################\n\n# opengl under WIN32\n",
        "Line" : 333,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "##############################\n",
        "Line" : 345,
        "CharPositionInLine" : 1
      },
      "54" : {
        "Text" : "##############################\n\n# Shader Files\n",
        "Line" : 358,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "##############################\n\n# embedded resource\n",
        "Line" : 364,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# END OF SOURCE\n\n# =====================================================================================\n",
        "Line" : 371,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# INCLUDE DIRECTORIES\n\n# ==================================================================================\n",
        "Line" : 375,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "##############################\n\n# add the binary tree to the search path for include files\n",
        "Line" : 378,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "#AutoRigger\n",
        "Line" : 400,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# END OF INCLUDE DIRECTORIES\n\n# ==================================================================================\n",
        "Line" : 418,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# LIBRARIES\n\n# ==================================================================================\n",
        "Line" : 422,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# All libraries\n",
        "Line" : 425,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# All link directories\n",
        "Line" : 427,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "##############################\n\n# ZLIB\n",
        "Line" : 431,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "##############################\n\n# CURL\n",
        "Line" : 441,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "##############################\n\n# OpenGL\n",
        "Line" : 456,
        "CharPositionInLine" : 1
      },
      "67" : {
        "Text" : "##############################\n\n# GLFW\n",
        "Line" : 462,
        "CharPositionInLine" : 1
      },
      "68" : {
        "Text" : "##############################\n\n# PNG\n",
        "Line" : 470,
        "CharPositionInLine" : 1
      },
      "69" : {
        "Text" : "##############################\n\n# Freetype\n",
        "Line" : 482,
        "CharPositionInLine" : 1
      },
      "70" : {
        "Text" : "##############################\n\n# GLEW\n",
        "Line" : 493,
        "CharPositionInLine" : 1
      },
      "71" : {
        "Text" : "##############################\n\n# GLFW\n",
        "Line" : 504,
        "CharPositionInLine" : 1
      },
      "72" : {
        "Text" : "##############################\n\n# GLUT\n",
        "Line" : 509,
        "CharPositionInLine" : 1
      },
      "73" : {
        "Text" : "##############################\n\n# GLAD\n",
        "Line" : 519,
        "CharPositionInLine" : 1
      },
      "74" : {
        "Text" : "##############################\n\n# Jpeg\n",
        "Line" : 523,
        "CharPositionInLine" : 1
      },
      "75" : {
        "Text" : "##############################\n\n# DX2GL\n",
        "Line" : 545,
        "CharPositionInLine" : 1
      },
      "76" : {
        "Text" : "##############################\n\n# GLEffectParser\n",
        "Line" : 549,
        "CharPositionInLine" : 1
      },
      "77" : {
        "Text" : "##############################\n\n# DirectX ?\n",
        "Line" : 555,
        "CharPositionInLine" : 2
      },
      "78" : {
        "Text" : "#############################\n\n# Luajit2.0\n",
        "Line" : 561,
        "CharPositionInLine" : 1
      },
      "79" : {
        "Text" : "# for luajit2.0 \n",
        "Line" : 564,
        "CharPositionInLine" : 2
      },
      "80" : {
        "Text" : "##############################\n\n# Direct3D\n",
        "Line" : 570,
        "CharPositionInLine" : 1
      },
      "81" : {
        "Text" : "# END OF NPLRUNTIME_RENDERER STREQUAL \"OPENGL\"\n",
        "Line" : 592,
        "CharPositionInLine" : 8
      },
      "82" : {
        "Text" : "##############################\n\n# iconv\n",
        "Line" : 594,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "##############################\n\n# FreeImage\n",
        "Line" : 613,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# for reading image files\n",
        "Line" : 619,
        "CharPositionInLine" : 35
      },
      "85" : {
        "Text" : "# for css skin, etc\n",
        "Line" : 621,
        "CharPositionInLine" : 39
      },
      "86" : {
        "Text" : "##############################\n\n# BOOST\n",
        "Line" : 650,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "##############################\n\n# assimp\n",
        "Line" : 656,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "##############################\n\n# EXTRA_LIBRARIES\n",
        "Line" : 663,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "##############################\n\n# AutoRigger \n",
        "Line" : 670,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "# since luajit is ABI compatible with lua, we will always link with standard lua \n",
        "Line" : 687,
        "CharPositionInLine" : 1
      },
      "91" : {
        "Text" : "# END OF LIBRARIES\n\n# ==================================================================================\n",
        "Line" : 691,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "# COMPILER SETTTINGS\n",
        "Line" : 695,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "# END OF NPLRUNTIME_RENDERER STREQUAL \"OPENGL\"\n",
        "Line" : 711,
        "CharPositionInLine" : 8
      },
      "94" : {
        "Text" : "#######################################\n\n# PCH: precompiled header under msvc\n",
        "Line" : 715,
        "CharPositionInLine" : 1
      },
      "95" : {
        "Text" : "# statically link MSVC to reduce dependancies\n",
        "Line" : 743,
        "CharPositionInLine" : 1
      },
      "96" : {
        "Text" : "# enable multiprocessor build option /MP, this will greatly increase compile speed\n",
        "Line" : 753,
        "CharPositionInLine" : 1
      },
      "97" : {
        "Text" : "# NOTE: This generate smaller and faster exe/dll, but no other libs should to it statically.\n",
        "Line" : 764,
        "CharPositionInLine" : 1
      },
      "98" : {
        "Text" : "# /GL Link time code generation. Note turn this off if you have plugins that links to ParaEngineClient.\n",
        "Line" : 769,
        "CharPositionInLine" : 3
      },
      "99" : {
        "Text" : "# /LTCG Link time code generation\n",
        "Line" : 771,
        "CharPositionInLine" : 3
      },
      "100" : {
        "Text" : "# /GR- Remove RTTI to miminize the executable size\n\n# SET(CMAKE_CXX_FLAGS_RELEASE \"${CMAKE_CXX_FLAGS_RELEASE} /GR-\")\n",
        "Line" : 779,
        "CharPositionInLine" : 2
      },
      "101" : {
        "Text" : "# /Zi generate program database (PDB symbol files even in release build)\n",
        "Line" : 782,
        "CharPositionInLine" : 2
      },
      "102" : {
        "Text" : "# To turn size optimisations on again\n",
        "Line" : 787,
        "CharPositionInLine" : 3
      },
      "103" : {
        "Text" : "# add a stripped version of symbol files during release build\n",
        "Line" : 789,
        "CharPositionInLine" : 3
      },
      "104" : {
        "Text" : "# To turn size optimisations on again\n",
        "Line" : 792,
        "CharPositionInLine" : 3
      },
      "105" : {
        "Text" : "# add a stripped version of symbol files during release build\n",
        "Line" : 794,
        "CharPositionInLine" : 3
      },
      "106" : {
        "Text" : "# remove Run-Time-Type-Information (RTTI) to miminize the executable size\n\n# set(CMAKE_CXX_FLAGS_RELEASE \"${CMAKE_CXX_FLAGS_RELEASE} -fno-rtti\")\n",
        "Line" : 800,
        "CharPositionInLine" : 2
      },
      "107" : {
        "Text" : "# -Os to optimize for size. or -O3 to turn on all optimizations.\n\n# -s option to strip debug info, -g to include debug info\n",
        "Line" : 803,
        "CharPositionInLine" : 2
      },
      "108" : {
        "Text" : "# suppress warnings\n",
        "Line" : 808,
        "CharPositionInLine" : 2
      },
      "109" : {
        "Text" : "# END IF WIN32\n",
        "Line" : 813,
        "CharPositionInLine" : 8
      },
      "110" : {
        "Text" : "# END OF COMPILER SETTTINGS\n\n# ==================================================================================\n",
        "Line" : 836,
        "CharPositionInLine" : 0
      },
      "111" : {
        "Text" : "# TARGET\n",
        "Line" : 842,
        "CharPositionInLine" : 0
      },
      "112" : {
        "Text" : "#########################\n\n# Platform/ Win32\n",
        "Line" : 847,
        "CharPositionInLine" : 0
      },
      "113" : {
        "Text" : "# Note: if true, we will produce dll instead of exe, only under win32\n",
        "Line" : 855,
        "CharPositionInLine" : 1
      },
      "114" : {
        "Text" : "# add the executable\n",
        "Line" : 872,
        "CharPositionInLine" : 2
      },
      "115" : {
        "Text" : "# When this property is set to true the executable when linked on Windows will be created with a WinMain() entry point instead of of just main().\n",
        "Line" : 874,
        "CharPositionInLine" : 2
      },
      "116" : {
        "Text" : "#########################\n\n# Platform/ Apple\n",
        "Line" : 883,
        "CharPositionInLine" : 0
      },
      "117" : {
        "Text" : "# export these two variables to its parent scope just in case some app project reference NPLRuntime statically. \n",
        "Line" : 908,
        "CharPositionInLine" : 0
      },
      "118" : {
        "Text" : "# END OF TARGET\n\n# ==================================================================================\n",
        "Line" : 916,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 119
    },
    "NPLRuntime/ParaEngineClient/cmake/DirectX.cmake" : {
      "ObjectId" : "884e57cefc1b893437c73fb04a1c48b3e351c434",
      "LastModified" : "2017-12-05T09:37:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "NPLRuntime/ParaEngineServer/CMakeLists.txt" : {
      "ObjectId" : "2a44f1f63499686e4a7ace8697cf40d1ae7fc1bf",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Author: LiXizhi\n\n# Email: lixizhi@yeah.net\n\n# Date: 2009.4.10, 2016.2.21 shared source with client\n\n# Desc: option modify PARAENGINE_COMPILE_LIB\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The version number.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Note: if true, we will produce dll instead of exe, only under win32\n",
        "Line" : 18,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "##############################\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##############################\n\n#file (GLOB ParaEngineServer_EngineHeader_FILES ${CLIENT_SOURCE_DIR}/Engine/*.h)\n\n#SOURCE_GROUP(\"Engine\\\\headers\" FILES ${ParaEngineServer_EngineHeader_FILES})\n\n#list(APPEND ParaEngineServer_SRCS ${ParaEngineServer_EngineHeader_FILES})\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "##############################\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "##############################\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "##############################\n\n#file (GLOB ParaEngineServer_MDXModel_FILES ${CLIENT_SOURCE_DIR}/mdxfile/*.*)\n\n#SOURCE_GROUP(\"Engine\\\\mdxfile\" FILES ${ParaEngineServer_MDXModel_FILES})\n\n#list(APPEND ParaEngineServer_SRCS ${ParaEngineServer_MDXModel_FILES})\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "##############################\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "##############################\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################\n\n#file (GLOB ParaEngineServer_Physics_FILES ${CLIENT_SOURCE_DIR}/physics/*.*)\n\n#SOURCE_GROUP(\"physics\" FILES ${ParaEngineServer_Physics_FILES})\n\n#list(APPEND ParaEngineServer_SRCS ${ParaEngineServer_Physics_FILES})\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "##############################\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "##############################\n\n#file (GLOB ParaEngineServer_CommonFramework_FILES ${CLIENT_SOURCE_DIR}/CommonFramework/*.*)\n\n#SOURCE_GROUP(\"util\\\\CommonFramework\" FILES ${ParaEngineServer_CommonFramework_FILES})\n\n#list(APPEND ParaEngineServer_SRCS ${ParaEngineServer_CommonFramework_FILES})\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "##############################\n\n#file (GLOB ParaEngineServer_Common_FILES ${CLIENT_SOURCE_DIR}/common/*.*)\n\n#SOURCE_GROUP(\"Externals\\\\CommonDirectX\" FILES ${ParaEngineServer_Common_FILES})\n\n#list(APPEND ParaEngineServer_SRCS ${ParaEngineServer_Common_FILES})\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# embedded resource\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "##############################\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "##############################\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "##############################\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "##############################\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "##############################\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "##############################\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "##############################\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##############################\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "##############################\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "##############################\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "##############################\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "##############################\n\n# util files\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "##############################\n\n# Documentation\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "##############################\n\n# WebSocket\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "##############################\n\n#AutoRigger\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#######################################\n\n# PCH: precompiled header under msvc\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "##############################\n\n# add the binary tree to the search path for include files\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#AutoRigger\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "## Readline support\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# FIND_PACKAGE(Readline)\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# statically link MSVC to reduce dependancies\n",
        "Line" : 292,
        "CharPositionInLine" : 1
      },
      "38" : {
        "Text" : "# enable multiprocessor build option /MP, this will greatly increase compile speed\n",
        "Line" : 302,
        "CharPositionInLine" : 1
      },
      "39" : {
        "Text" : "# NOTE: This generate smaller and faster exe/dll, but no other libs should to it statically.\n",
        "Line" : 310,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# /GL Link time code generation. Note turn this off if you have plugins that links to ParaEngineServer.\n",
        "Line" : 315,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# /LTCG Link time code generation\n",
        "Line" : 317,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "# /GR- Remove RTTI to miminize the executable size\n\n# SET(CMAKE_CXX_FLAGS_RELEASE \"${CMAKE_CXX_FLAGS_RELEASE} /GR-\")\n",
        "Line" : 325,
        "CharPositionInLine" : 1
      },
      "43" : {
        "Text" : "# /Zi generate program database (PDB symbol files even in release build)\n",
        "Line" : 328,
        "CharPositionInLine" : 1
      },
      "44" : {
        "Text" : "# To turn size optimisations on again\n",
        "Line" : 332,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "# add a stripped version of symbol files during release build\n",
        "Line" : 334,
        "CharPositionInLine" : 2
      },
      "46" : {
        "Text" : "# To turn size optimisations on again\n",
        "Line" : 337,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "# add a stripped version of symbol files during release build\n",
        "Line" : 339,
        "CharPositionInLine" : 2
      },
      "48" : {
        "Text" : "# set debug\n\n# set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -g -std=c++11\")\n",
        "Line" : 344,
        "CharPositionInLine" : 1
      },
      "49" : {
        "Text" : "# remove Run-Time-Type-Information (RTTI) to miminize the executable size\n\n# set(CMAKE_CXX_FLAGS_RELEASE \"${CMAKE_CXX_FLAGS_RELEASE} -fno-rtti\")\n",
        "Line" : 350,
        "CharPositionInLine" : 1
      },
      "50" : {
        "Text" : "# -Os to optimize for size. or -O3 to turn on all optimizations.\n\n# no -s option since it has the same effect as gcc -s if not a single -g is provided\n",
        "Line" : 354,
        "CharPositionInLine" : 2
      },
      "51" : {
        "Text" : "# -Os to optimize for size. or -O3 to turn on all optimizations.\n\n# -s option to strip debug info, -g to include debug info\n",
        "Line" : 359,
        "CharPositionInLine" : 2
      },
      "52" : {
        "Text" : "# suppress warnings\n",
        "Line" : 365,
        "CharPositionInLine" : 1
      },
      "53" : {
        "Text" : "# add the executable\n",
        "Line" : 375,
        "CharPositionInLine" : 1
      },
      "54" : {
        "Text" : "# When this property is set to true the executable when linked on Windows will be created with a WinMain() entry point instead of of just main().\n\n# set_target_properties(ParaEngineServer PROPERTIES WIN32_EXECUTABLE true)\n",
        "Line" : 377,
        "CharPositionInLine" : 1
      },
      "55" : {
        "Text" : "# for luajit 2.0 & mac\n",
        "Line" : 388,
        "CharPositionInLine" : 1
      },
      "56" : {
        "Text" : "# SET(CMAKE_EXE_LINKER_FLAGS \"-pagezero_size 10000 -image_base 100000000 ${CMAKE_EXE_LINKER_FLAGS}\")\n",
        "Line" : 389,
        "CharPositionInLine" : 4
      },
      "57" : {
        "Text" : "##############################\n\n# iconv\n",
        "Line" : 398,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "#elseif (LINUX OR UNIX)\n\n#\tlist(APPEND EXTRA_LIBRARIES libiconv)\n",
        "Line" : 408,
        "CharPositionInLine" : 1
      },
      "59" : {
        "Text" : "## this is for file monitor API in MAC OSX\n",
        "Line" : 451,
        "CharPositionInLine" : 5
      },
      "60" : {
        "Text" : "# Link the executable to the libraries.\n",
        "Line" : 457,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 61
    },
    "NPLRuntime/cmake/FindReadline.cmake" : {
      "ObjectId" : "424c02c5dce475a1b1d458afb98c6d856147fef3",
      "LastModified" : "2018-01-12T05:26:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find readline include dirs and libraries \n\n#\n\n# Usage of this module as follows:\n\n#\n\n#     find_package(Readline)\n\n#\n\n# Variables used by this module, they can change the default behaviour and need\n\n# to be set before calling find_package:\n\n#\n\n#  Readline_ROOT_DIR         Set this variable to the root installation of\n\n#                            readline if the module has problems finding the\n\n#                            proper installation path.\n\n#\n\n# Variables defined by this module:\n\n#\n\n#  READLINE_FOUND            System has readline, include and lib dirs found\n\n#  Readline_INCLUDE_DIR      The readline include directories. \n\n#  Readline_LIBRARY          The readline library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "NPLRuntime/embed-resource/CMakeLists.txt" : {
      "ObjectId" : "165fa2942a5822f3b2c89c5f54464ca1f1b3ca30",
      "LastModified" : "2018-01-12T05:26:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## embed with relative to project path\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## embed with absolute path\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# statically link MSVC to reduce dependancies\n",
        "Line" : 44,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 3
    },
    "Server/trunk/Eigen/Eigen/CMakeLists.txt" : {
      "ObjectId" : "9eb502b792d4a9607e2d323f2d8114939b43c209",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Server/trunk/Eigen/Eigen/src/CMakeLists.txt" : {
      "ObjectId" : "c326f374d9ee89c953dd9caefbfaffccb905511c",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Server/trunk/Eigen/Eigen/src/Cholesky/CMakeLists.txt" : {
      "ObjectId" : "d01488b41a826850277a918f555e3668167dd367",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Server/trunk/Eigen/Eigen/src/CholmodSupport/CMakeLists.txt" : {
      "ObjectId" : "814dfa61313847c0f33538e11c4ac4557ec3e32e",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Server/trunk/Eigen/Eigen/src/Core/CMakeLists.txt" : {
      "ObjectId" : "2346fc2bbca4d9bd699efc4c366afd7abd400e3c",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Server/trunk/Eigen/Eigen/src/Core/arch/AltiVec/CMakeLists.txt" : {
      "ObjectId" : "9f8d2e9c46765f4253d6877d040e5c2a90612086",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Server/trunk/Eigen/Eigen/src/Core/arch/CMakeLists.txt" : {
      "ObjectId" : "8456dec1581554a4f7798ebe7d9d292369f21607",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Server/trunk/Eigen/Eigen/src/Core/arch/Default/CMakeLists.txt" : {
      "ObjectId" : "339c091d156100d46f3acbc67ad205749d8f4b3d",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Server/trunk/Eigen/Eigen/src/Core/arch/NEON/CMakeLists.txt" : {
      "ObjectId" : "fd4d4af50cb46dac7e6b29ef8654e70528e1f3ca",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Server/trunk/Eigen/Eigen/src/Core/arch/SSE/CMakeLists.txt" : {
      "ObjectId" : "46ea7cc623c62394c78425b15e100b84126b40a7",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Server/trunk/Eigen/Eigen/src/Core/products/CMakeLists.txt" : {
      "ObjectId" : "21fc94ae38a5574289ae4e304ce087f3ed6897f0",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Server/trunk/Eigen/Eigen/src/Core/util/CMakeLists.txt" : {
      "ObjectId" : "a1e2e521fc11124c92768621c4edf784bc10f51f",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Server/trunk/Eigen/Eigen/src/Eigen2Support/CMakeLists.txt" : {
      "ObjectId" : "7ae41b3cbe9c568f7efdaf45cd1a1ef874bf309b",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Server/trunk/Eigen/Eigen/src/Eigen2Support/Geometry/CMakeLists.txt" : {
      "ObjectId" : "c347a8f26228694dc67e0e89ff6d509152dac738",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Server/trunk/Eigen/Eigen/src/Eigenvalues/CMakeLists.txt" : {
      "ObjectId" : "193e0268599516e2515318ed04eb6dda37b2dd59",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Server/trunk/Eigen/Eigen/src/Geometry/CMakeLists.txt" : {
      "ObjectId" : "f8f728b84faf0e08d91fac04e2986260368b9063",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Server/trunk/Eigen/Eigen/src/Geometry/arch/CMakeLists.txt" : {
      "ObjectId" : "1267a79c78767c43d11c529cc84468cbdd1052a2",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Server/trunk/Eigen/Eigen/src/Householder/CMakeLists.txt" : {
      "ObjectId" : "ce4937db061bbadb0357ccc45547b141761a70e3",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Server/trunk/Eigen/Eigen/src/IterativeLinearSolvers/CMakeLists.txt" : {
      "ObjectId" : "59ccc0072cc4ed78e6aa783bfab2486aac757fca",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Server/trunk/Eigen/Eigen/src/Jacobi/CMakeLists.txt" : {
      "ObjectId" : "490dac626439ade5e05baaba504689366db22e6d",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Server/trunk/Eigen/Eigen/src/LU/CMakeLists.txt" : {
      "ObjectId" : "e0d8d78c1720abb27432f41aa2ace29ef3f3794f",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Server/trunk/Eigen/Eigen/src/LU/arch/CMakeLists.txt" : {
      "ObjectId" : "f6b7ed9ecc3a25e3885c7fece60428481e51c696",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Server/trunk/Eigen/Eigen/src/MetisSupport/CMakeLists.txt" : {
      "ObjectId" : "2bad314163c5044265aa6ac14e3767308dd04ba6",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Server/trunk/Eigen/Eigen/src/OrderingMethods/CMakeLists.txt" : {
      "ObjectId" : "9f4bb275808257ac71d6c04d9c602ce5c0b5be8d",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Server/trunk/Eigen/Eigen/src/PaStiXSupport/CMakeLists.txt" : {
      "ObjectId" : "28c657e9bcf7d3e0ecc800f6d5a11d54020b58cc",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Server/trunk/Eigen/Eigen/src/PardisoSupport/CMakeLists.txt" : {
      "ObjectId" : "a097ab401920ea1b7068f790edcfcf9086b3038b",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Server/trunk/Eigen/Eigen/src/QR/CMakeLists.txt" : {
      "ObjectId" : "96f43d7f5b30fa024b9bd2d9e3a5dacb9d401ecb",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Server/trunk/Eigen/Eigen/src/SPQRSupport/CMakeLists.txt" : {
      "ObjectId" : "4968beaf2c59bcec07fe1861b5d72cb4d6723a6d",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Server/trunk/Eigen/Eigen/src/SVD/CMakeLists.txt" : {
      "ObjectId" : "55efc44b12970d5ec715393cb68cd061203ce941",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Server/trunk/Eigen/Eigen/src/SparseCholesky/CMakeLists.txt" : {
      "ObjectId" : "375a59d7a577877313a1ff2a6bf1c8fac138768b",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Server/trunk/Eigen/Eigen/src/SparseCore/CMakeLists.txt" : {
      "ObjectId" : "d860452a65cb20850a12a120ab1fd3e3fd83dccc",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Server/trunk/Eigen/Eigen/src/SparseLU/CMakeLists.txt" : {
      "ObjectId" : "69729ee8961aa7d4ef514e9f890de0d29f12161f",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Server/trunk/Eigen/Eigen/src/SparseQR/CMakeLists.txt" : {
      "ObjectId" : "f9ddf2bdb75878292267c18697d9dedbd69a6611",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Server/trunk/Eigen/Eigen/src/StlSupport/CMakeLists.txt" : {
      "ObjectId" : "0f094f637acd51b0931e58a199c30f550beaa282",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Server/trunk/Eigen/Eigen/src/SuperLUSupport/CMakeLists.txt" : {
      "ObjectId" : "b28ebe5839cf5c664abdb44c186547507ce688d3",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Server/trunk/Eigen/Eigen/src/UmfPackSupport/CMakeLists.txt" : {
      "ObjectId" : "a57de00209d3bc746b050d1b8aa736bccc66f2bc",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Server/trunk/Eigen/Eigen/src/misc/CMakeLists.txt" : {
      "ObjectId" : "a58ffb7457e06a7a69426a21a9d46d07a6a8ee91",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Server/trunk/Eigen/Eigen/src/plugins/CMakeLists.txt" : {
      "ObjectId" : "1a1d3ffbd724d17e161c40c48ac56c8b1aeb2e1f",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Server/trunk/LuaJIT-2.1/CMakeLists.txt" : {
      "ObjectId" : "6be2d36785e84b4ae01d6d40958558a2c71fa3b2",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Author: LiXizhi\n\n# Email: lixizhi@yeah.net\n\n# Date: 2017.5.13\n\n# Note: download luajit2.1 src, \n\n# edit luaconf.h as below:\n\n# #define LUA_IDSIZE\t120\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Reference: https://github.com/torch/luajit-rocks/tree/master/luajit-2.1/cmake\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# @rpath in libs\n",
        "Line" : 14,
        "CharPositionInLine" : 31
      },
      "3" : {
        "Text" : "# not editable\n",
        "Line" : 28,
        "CharPositionInLine" : 37
      },
      "4" : {
        "Text" : "# not editable\n",
        "Line" : 29,
        "CharPositionInLine" : 36
      },
      "5" : {
        "Text" : "# Ugly warnings\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Readline support\n\n# FIND_PACKAGE(Readline)\n\n# IF(READLINE_FOUND)\n\n#   ADD_DEFINITIONS(\"-DLUA_USE_READLINE\")\n\n#   LIST(APPEND LIBS ${READLINE_LIBRARIES})\n\n#   INCLUDE_DIRECTORIES(${READLINE_INCLUDE_DIR})\n\n# ENDIF()\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Various includes\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# LuaJIT specific\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "######\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## SOURCES\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# SET(LUAJIT_SYSTEM_MINILUA ${LUAJIT_SYSTEM_MINILUA} CACHE STRING \"system minilua\" FORCE)\n",
        "Line" : 319,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "## GENERATE\n",
        "Line" : 358,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## COMPILE\n",
        "Line" : 404,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# statically link MSVC to reduce dependancies\n",
        "Line" : 408,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 15
    },
    "Server/trunk/LuaJIT-2.1/Makefile" : {
      "ObjectId" : "0f9330893fdea4de73d0da82c49aa336f4e556d5",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\n\n# LuaJIT top level Makefile for installation. Requires GNU Make.\n\n#\n\n# Please read doc/install.html before changing any variables!\n\n#\n\n# Suitable for POSIX platforms (Linux, *BSD, OSX etc.).\n\n# Note: src/Makefile has many more configurable options.\n\n#\n\n# ##### This Makefile is NOT useful for Windows! #####\n\n# For MSVC, please follow the instructions given in src/msvcbuild.bat.\n\n# For MinGW and Cygwin, cd to src and run make with the Makefile there.\n\n#\n\n# Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n#\n\n# Change the installation path as needed. This automatically adjusts\n\n# the paths in src/luaconf.h, too. Note: PREFIX must be an absolute path!\n\n#\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##############################################################################\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##############################################################################\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##############################################################################\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "##############################################################################\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "Server/trunk/LuaJIT-2.1/src/Makefile" : {
      "ObjectId" : "71ca028cde3b2855d4f6bbd12ee3a0ac41eee2cd",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\n\n# LuaJIT Makefile. Requires GNU Make.\n\n#\n\n# Please read doc/install.html before changing any variables!\n\n#\n\n# Suitable for POSIX platforms (Linux, *BSD, OSX etc.).\n\n# Also works with MinGW and Cygwin on Windows.\n\n# Please check msvcbuild.bat for building with MSVC on Windows.\n\n#\n\n# Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n#############################  COMPILER OPTIONS  #############################\n\n##############################################################################\n\n# These options mainly affect the speed of the JIT compiler itself, not the\n\n# speed of the JIT-compiled code. Turn any of the optional settings on by\n\n# removing the '#' in front of them. Make sure you force a full recompile\n\n# with \"make clean\", followed by \"make\" if you change any options.\n\n#\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# LuaJIT builds as a native 32 or 64 bit binary by default.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Use this if you want to force a 32 bit build on a 64 bit multilib OS.\n\n#CC= $(DEFAULT_CC) -m32\n\n#\n\n# Since the assembler part does NOT maintain a frame pointer, it's pointless\n\n# to slow down the C part by not omitting it. Debugging, tracebacks and\n\n# unwinding are not affected -- the assembler part has frame unwind\n\n# information and GCC emits it where needed (x64) or with -g (see CCDEBUG).\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Use this if you want to generate a smaller binary (but it's slower):\n\n#CCOPT= -Os -fomit-frame-pointer\n\n# Note: it's no longer recommended to use -O3 with GCC 4.x.\n\n# The I-Cache bloat usually outweighs the benefits from aggressive inlining.\n\n#\n\n# Target-specific compiler options:\n\n#\n\n# x86/x64 only: For GCC 4.2 or higher and if you don't intend to distribute\n\n# the binaries to a different machine you could also use: -march=native\n\n#\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Uncomment the next line to generate debug information:\n\n#CCDEBUG= -g\n\n#\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Uncomment the next line to enable more warnings:\n\n#CCWARN+= -Wextra -Wdeclaration-after-statement -Wredundant-decls -Wshadow -Wpointer-arith\n\n#\n\n##############################################################################\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\n\n################################  BUILD MODE  ################################\n\n##############################################################################\n\n# The default build mode is mixed mode on POSIX. On Windows this is the same\n\n# as dynamic mode.\n\n#\n\n# Mixed mode creates a static + dynamic library and a statically linked luajit.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#\n\n# Static mode creates a static library and a statically linked luajit.\n\n#BUILDMODE= static\n\n#\n\n# Dynamic mode creates a dynamic library and a dynamically linked luajit.\n\n# Note: this executable will only run when the library is installed!\n\n#BUILDMODE= dynamic\n\n#\n\n##############################################################################\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "##############################################################################\n\n#################################  FEATURES  #################################\n\n##############################################################################\n\n# Enable/disable these features as needed, but make sure you force a full\n\n# recompile with \"make clean\", followed by \"make\".\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\n\n# Permanently disable the FFI extension to reduce the size of the LuaJIT\n\n# executable. But please consider that the FFI library is compiled-in,\n\n# but NOT loaded by default. It only allocates any memory, if you actually\n\n# make use of it.\n\n#XCFLAGS+= -DLUAJIT_DISABLE_FFI\n\n#\n\n# Features from Lua 5.2 that are unlikely to break existing code are\n\n# enabled by default. Some other features that *might* break some existing\n\n# code (e.g. __pairs or os.execute() return values) can be enabled here.\n\n# Note: this does not provide full compatibility with Lua 5.2 at this time.\n\n#XCFLAGS+= -DLUAJIT_ENABLE_LUA52COMPAT\n\n#\n\n# Disable the JIT compiler, i.e. turn LuaJIT into a pure interpreter.\n\n#XCFLAGS+= -DLUAJIT_DISABLE_JIT\n\n#\n\n# Some architectures (e.g. PPC) can use either single-number (1) or\n\n# dual-number (2) mode. Uncomment one of these lines to override the\n\n# default mode. Please see LJ_ARCH_NUMMODE in lj_arch.h for details.\n\n#XCFLAGS+= -DLUAJIT_NUMMODE=1\n\n#XCFLAGS+= -DLUAJIT_NUMMODE=2\n\n#\n\n# Enable GC64 mode for x64.\n\n#XCFLAGS+= -DLUAJIT_ENABLE_GC64\n\n#\n\n##############################################################################\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\n\n############################  DEBUGGING SUPPORT  #############################\n\n##############################################################################\n\n# Enable these options as needed, but make sure you force a full recompile\n\n# with \"make clean\", followed by \"make\".\n\n# Note that most of these are NOT suitable for benchmarking or release mode!\n\n#\n\n# Use the system provided memory allocator (realloc) instead of the\n\n# bundled memory allocator. This is slower, but sometimes helpful for\n\n# debugging. This option cannot be enabled on x64 without GC64, since\n\n# realloc usually doesn't return addresses in the right address range.\n\n# OTOH this option is mandatory for Valgrind's memcheck tool on x64 and\n\n# the only way to get useful results from it for all other architectures.\n\n#XCFLAGS+= -DLUAJIT_USE_SYSMALLOC\n\n#\n\n# This define is required to run LuaJIT under Valgrind. The Valgrind\n\n# header files must be installed. You should enable debug information, too.\n\n# Use --suppressions=lj.supp to avoid some false positives.\n\n#XCFLAGS+= -DLUAJIT_USE_VALGRIND\n\n#\n\n# This is the client for the GDB JIT API. GDB 7.0 or higher is required\n\n# to make use of it. See lj_gdbjit.c for details. Enabling this causes\n\n# a non-negligible overhead, even when not running under GDB.\n\n#XCFLAGS+= -DLUAJIT_USE_GDBJIT\n\n#\n\n# Turn on assertions for the Lua/C API to debug problems with lua_* calls.\n\n# This is rather slow -- use only while developing C libraries/embeddings.\n\n#XCFLAGS+= -DLUA_USE_APICHECK\n\n#\n\n# Turn on assertions for the whole LuaJIT VM. This significantly slows down\n\n# everything. Use only if you suspect a problem with LuaJIT itself.\n\n#XCFLAGS+= -DLUA_USE_ASSERT\n\n#\n\n##############################################################################\n\n# You probably don't need to change anything below this line!\n\n##############################################################################\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "##############################################################################\n\n# Host system detection.\n\n##############################################################################\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "##############################################################################\n\n# Flags and options for host and target.\n\n##############################################################################\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# You can override the following variables at the make command line:\n\n#   CC       HOST_CC       STATIC_CC       DYNAMIC_CC\n\n#   CFLAGS   HOST_CFLAGS   TARGET_CFLAGS\n\n#   LDFLAGS  HOST_LDFLAGS  TARGET_LDFLAGS  TARGET_SHLDFLAGS\n\n#   LIBS     HOST_LIBS     TARGET_LIBS\n\n#   CROSS    HOST_SYS      TARGET_SYS      TARGET_FLAGS\n\n#\n\n# Cross-compilation examples:\n\n#   make HOST_CC=\"gcc -m32\" CROSS=i586-mingw32msvc- TARGET_SYS=Windows\n\n#   make HOST_CC=\"gcc -m32\" CROSS=powerpc-linux-gnu-\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# If left blank, minilua is built and used. You can supply an installed\n\n# copy of (plain) Lua 5.1 or 5.2, plus Lua BitOp. E.g. with: HOST_LUA=lua\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "##############################################################################\n\n# Target system detection.\n\n##############################################################################\n",
        "Line" : 301,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "##############################################################################\n\n# Files and pathnames.\n\n##############################################################################\n",
        "Line" : 376,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "##############################################################################\n\n# Build mode handling.\n\n##############################################################################\n",
        "Line" : 515,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Mixed mode defaults.\n",
        "Line" : 519,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Mixed mode is not supported on Windows. And static mode doesn't work well.\n\n# C modules cannot be loaded, because they bind to lua51.dll.\n",
        "Line" : 534,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "#Q=\n\n#E= @:\n",
        "Line" : 591,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "##############################################################################\n\n# Make targets.\n\n##############################################################################\n",
        "Line" : 594,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24,
      "Errorlog" : "line 558:19 token recognition error at: '\\m'\nline 559:19 token recognition error at: '\\b'\nline 616:10 token recognition error at: '\"s| [^ ]*/dasm_\\S'\nline 617:29 token recognition error at: '\\1'\nline 618:24 token recognition error at: '\\S'\nline 619:22 token recognition error at: '\\S'\nline 620:21 token recognition error at: '\\S'\nline 715:42 token recognition error at: '\"\\n\\n##############################################################################\\n\u0000'\n"
    },
    "Server/trunk/LuaJIT/CMakeLists.txt" : {
      "ObjectId" : "cb404c39d1d839c17b1b8fbc013a00a4d97a26f5",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Author: LiXizhi\n\n# Email: lixizhi@yeah.net\n\n# Date: 2016.4.11\n\n# Note: download luajit src, \n\n# edit luaconf.h as below:\n\n# #define LUA_IDSIZE\t120\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (C) 2007-2013 LuaDist.\n\n# Created by Peter Draho?\n\n# Redistribution and use of this file is allowed according to the terms of the MIT license.\n\n# For details see the COPYRIGHT file distributed with LuaDist.\n\n# Please note that the package source code is licensed under its own license.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# NOTE: This build is currently only supporting x86 targets, for other targets use the original makefile. Please do not submit bugs to the LuaJIT author in case this build fails, instead use http://github.com/LuaDist/luajit\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## CONFIGURATION\n\n# Default configuration (we assume POSIX by default)\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Version\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Extra flags\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Tunable variables\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## SETUP\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# This will set up relative paths to lib\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Direct path to installation\n",
        "Line" : 71,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Windows systems\n",
        "Line" : 79,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Paths (Double escapes needed)\n",
        "Line" : 83,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Setup needed variables and libraries\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# On POSIX Lua links to standard math library \"m\"\n",
        "Line" : 104,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Link to dynamic linker library \"dl\"\n",
        "Line" : 109,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Add readline\n",
        "Line" : 114,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Add curses\n",
        "Line" : 120,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "## SOURCES\n\n# Generate luaconf.h\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "## GENERATE VM\n\n# Build minilua\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Dynasm\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#set ( DASM_T ${CMAKE_CURRENT_SOURCE_DIR}/src/host/buildvm_arch.h )\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# 2DO: Proper detection of flags\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Raspberry PI, ARM\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Windows is ... special\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# 32bit vs 64bit\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Generate buildvm arch header\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Buildvm\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "## LuaJIT Library\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# statically link MSVC to reduce dependancies\n",
        "Line" : 298,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 29
    },
    "Server/trunk/LuaJIT/Makefile" : {
      "ObjectId" : "0cbe741a424cb65797e7adf071ff96c862d81cdb",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\n\n# LuaJIT top level Makefile for installation. Requires GNU Make.\n\n#\n\n# Please read doc/install.html before changing any variables!\n\n#\n\n# Suitable for POSIX platforms (Linux, *BSD, OSX etc.).\n\n# Note: src/Makefile has many more configurable options.\n\n#\n\n# ##### This Makefile is NOT useful for Windows! #####\n\n# For MSVC, please follow the instructions given in src/msvcbuild.bat.\n\n# For MinGW and Cygwin, cd to src and run make with the Makefile there.\n\n#\n\n# Copyright (C) 2005-2015 Mike Pall. See Copyright Notice in luajit.h\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n#\n\n# Change the installation path as needed. This automatically adjusts\n\n# the paths in src/luaconf.h, too. Note: PREFIX must be an absolute path!\n\n#\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##############################################################################\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##############################################################################\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##############################################################################\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "##############################################################################\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "Server/trunk/LuaJIT/src/Makefile" : {
      "ObjectId" : "f7f81a4e6084e2c19fc0d29b0b9f3d76c20e5d0a",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\n\n# LuaJIT Makefile. Requires GNU Make.\n\n#\n\n# Please read doc/install.html before changing any variables!\n\n#\n\n# Suitable for POSIX platforms (Linux, *BSD, OSX etc.).\n\n# Also works with MinGW and Cygwin on Windows.\n\n# Please check msvcbuild.bat for building with MSVC on Windows.\n\n#\n\n# Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n#############################  COMPILER OPTIONS  #############################\n\n##############################################################################\n\n# These options mainly affect the speed of the JIT compiler itself, not the\n\n# speed of the JIT-compiled code. Turn any of the optional settings on by\n\n# removing the '#' in front of them. Make sure you force a full recompile\n\n# with \"make clean\", followed by \"make\" if you change any options.\n\n#\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# LuaJIT builds as a native 32 or 64 bit binary by default.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Use this if you want to force a 32 bit build on a 64 bit multilib OS.\n\n#CC= $(DEFAULT_CC) -m32\n\n#\n\n# Since the assembler part does NOT maintain a frame pointer, it's pointless\n\n# to slow down the C part by not omitting it. Debugging, tracebacks and\n\n# unwinding are not affected -- the assembler part has frame unwind\n\n# information and GCC emits it where needed (x64) or with -g (see CCDEBUG).\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Use this if you want to generate a smaller binary (but it's slower):\n\n#CCOPT= -Os -fomit-frame-pointer\n\n# Note: it's no longer recommended to use -O3 with GCC 4.x.\n\n# The I-Cache bloat usually outweighs the benefits from aggressive inlining.\n\n#\n\n# Target-specific compiler options:\n\n#\n\n# x86 only: it's recommended to compile at least for i686. Better yet,\n\n# compile for an architecture that has SSE2, too (-msse -msse2).\n\n#\n\n# x86/x64 only: For GCC 4.2 or higher and if you don't intend to distribute\n\n# the binaries to a different machine you could also use: -march=native\n\n#\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Uncomment the next line to generate debug information:\n\n#CCDEBUG= -g\n\n#\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Uncomment the next line to enable more warnings:\n\n#CCWARN+= -Wextra -Wdeclaration-after-statement -Wredundant-decls -Wshadow -Wpointer-arith\n\n#\n\n##############################################################################\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\n\n################################  BUILD MODE  ################################\n\n##############################################################################\n\n# The default build mode is mixed mode on POSIX. On Windows this is the same\n\n# as dynamic mode.\n\n#\n\n# Mixed mode creates a static + dynamic library and a statically linked luajit.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#\n\n# Static mode creates a static library and a statically linked luajit.\n\n#BUILDMODE= static\n\n#\n\n# Dynamic mode creates a dynamic library and a dynamically linked luajit.\n\n# Note: this executable will only run when the library is installed!\n\n#BUILDMODE= dynamic\n\n#\n\n##############################################################################\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "##############################################################################\n\n#################################  FEATURES  #################################\n\n##############################################################################\n\n# Enable/disable these features as needed, but make sure you force a full\n\n# recompile with \"make clean\", followed by \"make\".\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\n\n# Permanently disable the FFI extension to reduce the size of the LuaJIT\n\n# executable. But please consider that the FFI library is compiled-in,\n\n# but NOT loaded by default. It only allocates any memory, if you actually\n\n# make use of it.\n\n#XCFLAGS+= -DLUAJIT_DISABLE_FFI\n\n#\n\n# Features from Lua 5.2 that are unlikely to break existing code are\n\n# enabled by default. Some other features that *might* break some existing\n\n# code (e.g. __pairs or os.execute() return values) can be enabled here.\n\n# Note: this does not provide full compatibility with Lua 5.2 at this time.\n\n#XCFLAGS+= -DLUAJIT_ENABLE_LUA52COMPAT\n\n#\n\n# Disable the JIT compiler, i.e. turn LuaJIT into a pure interpreter.\n\n#XCFLAGS+= -DLUAJIT_DISABLE_JIT\n\n#\n\n# Some architectures (e.g. PPC) can use either single-number (1) or\n\n# dual-number (2) mode. Uncomment one of these lines to override the\n\n# default mode. Please see LJ_ARCH_NUMMODE in lj_arch.h for details.\n\n#XCFLAGS+= -DLUAJIT_NUMMODE=1\n\n#XCFLAGS+= -DLUAJIT_NUMMODE=2\n\n#\n\n##############################################################################\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\n\n############################  DEBUGGING SUPPORT  #############################\n\n##############################################################################\n\n# Enable these options as needed, but make sure you force a full recompile\n\n# with \"make clean\", followed by \"make\".\n\n# Note that most of these are NOT suitable for benchmarking or release mode!\n\n#\n\n# Use the system provided memory allocator (realloc) instead of the\n\n# bundled memory allocator. This is slower, but sometimes helpful for\n\n# debugging. This option cannot be enabled on x64, since realloc usually\n\n# doesn't return addresses in the right address range.\n\n# OTOH this option is mandatory for Valgrind's memcheck tool on x64 and\n\n# the only way to get useful results from it for all other architectures.\n\n#XCFLAGS+= -DLUAJIT_USE_SYSMALLOC\n\n#\n\n# This define is required to run LuaJIT under Valgrind. The Valgrind\n\n# header files must be installed. You should enable debug information, too.\n\n# Use --suppressions=lj.supp to avoid some false positives.\n\n#XCFLAGS+= -DLUAJIT_USE_VALGRIND\n\n#\n\n# This is the client for the GDB JIT API. GDB 7.0 or higher is required\n\n# to make use of it. See lj_gdbjit.c for details. Enabling this causes\n\n# a non-negligible overhead, even when not running under GDB.\n\n#XCFLAGS+= -DLUAJIT_USE_GDBJIT\n\n#\n\n# Turn on assertions for the Lua/C API to debug problems with lua_* calls.\n\n# This is rather slow -- use only while developing C libraries/embeddings.\n\n#XCFLAGS+= -DLUA_USE_APICHECK\n\n#\n\n# Turn on assertions for the whole LuaJIT VM. This significantly slows down\n\n# everything. Use only if you suspect a problem with LuaJIT itself.\n\n#XCFLAGS+= -DLUA_USE_ASSERT\n\n#\n\n##############################################################################\n\n# You probably don't need to change anything below this line!\n\n##############################################################################\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "##############################################################################\n\n# Host system detection.\n\n##############################################################################\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "##############################################################################\n\n# Flags and options for host and target.\n\n##############################################################################\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# You can override the following variables at the make command line:\n\n#   CC       HOST_CC       STATIC_CC       DYNAMIC_CC\n\n#   CFLAGS   HOST_CFLAGS   TARGET_CFLAGS\n\n#   LDFLAGS  HOST_LDFLAGS  TARGET_LDFLAGS  TARGET_SHLDFLAGS\n\n#   LIBS     HOST_LIBS     TARGET_LIBS\n\n#   CROSS    HOST_SYS      TARGET_SYS      TARGET_FLAGS\n\n#\n\n# Cross-compilation examples:\n\n#   make HOST_CC=\"gcc -m32\" CROSS=i586-mingw32msvc- TARGET_SYS=Windows\n\n#   make HOST_CC=\"gcc -m32\" CROSS=powerpc-linux-gnu-\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# If left blank, minilua is built and used. You can supply an installed\n\n# copy of (plain) Lua 5.1 or 5.2, plus Lua BitOp. E.g. with: HOST_LUA=lua\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "##############################################################################\n\n# Target system detection.\n\n##############################################################################\n",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "##############################################################################\n\n# Files and pathnames.\n\n##############################################################################\n",
        "Line" : 357,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "##############################################################################\n\n# Build mode handling.\n\n##############################################################################\n",
        "Line" : 491,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Mixed mode defaults.\n",
        "Line" : 495,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Mixed mode is not supported on Windows. And static mode doesn't work well.\n\n# C modules cannot be loaded, because they bind to lua51.dll.\n",
        "Line" : 510,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "#Q=\n\n#E= @:\n",
        "Line" : 567,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "##############################################################################\n\n# Make targets.\n\n##############################################################################\n",
        "Line" : 570,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24,
      "Errorlog" : "line 534:19 token recognition error at: '\\m'\nline 535:19 token recognition error at: '\\b'\nline 588:10 token recognition error at: '\"s| [^ ]*/dasm_\\S'\nline 589:29 token recognition error at: '\\1'\nline 590:24 token recognition error at: '\\S'\nline 591:22 token recognition error at: '\\S'\nline 592:21 token recognition error at: '\\S'\nline 687:42 token recognition error at: '\"\\n\\n##############################################################################\\n\u0000'\n"
    },
    "Server/trunk/NPLMono/CMakeLists.txt" : {
      "ObjectId" : "5773a6e15cbd3396f5899848ed61a3849c5682cd",
      "LastModified" : "2019-01-19T14:04:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Author: LiXizhi\n\n# Company: ParaEngine.com\n\n# Date: 2009.7.6\n\n# Desc: \n\n# add_subdirectory (NPLMonoInclude)\n\n# add_subdirectory (NPLMono)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#add_subdirectory (Samples)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Server/trunk/NPLMono/NPLMono/CMakeLists.txt" : {
      "ObjectId" : "c94d7aee89cc0e5df323a6d711a3f3e619a5d266",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Author: LiXizhi\n\n# Company: ParaEngine.com\n\n# Date: 2009.7.3\n\n# Note: NPLMono is a ParaEngine plugin (dll) that exposes ParaEngine API to the C# mono scripting interface. \n\n# Desc: \n\n# ---+++ Build in Windows: \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO: 2011.7.2: Mono API changes a bit since 2.8. But since it is not stable yet, I will not move to it now. see http://www.mono-project.com/Embedding_Mono\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# NPLMono needs mono in order to compile. In windows, please install mono binary(default is E:/Program Files/Mono-2.4.2) and Set MONO_ROOT variable, please use forward slash / in file name. \n\n# Currently mono path is hard coded in source code using mono_set_dirs() function during compilation in MSVC. \n\n# One can deploy as follow and use mono_set_dirs(\"lib\\\\\", \"etc\");  if one wants to deploy mono with the game engine. NPLMono can be used with both client and server. However it is not recommended to use on client, because one needs to redistribute mono runtime which is pretty big.  \n\n# NPLMono.dll\n\n# mono.dll \n\n# libgmodule-2.0-0.dll \n\n# libgthread-2.0-0.dll \n\n# etc\\mono\\  <- copy of E:/Program Files/Mono-2.4.2\\etc\\mono\\ \n\n# lib\\mono\\  <- copy of E:/Program Files/Mono-2.4.2\\lib\\mono\\ \n\n#\n\n# Upgrade Note: One needs to upgrade \\trunk\\NPLMono\\NPLMono\\lib\\mono.def(lib) if mono api changes, this is only required on windows. Linux uses ELF and this step is not needed. \n\n#\n\n# ---+++ Build in Linux: \n\n# it is much easier to build on linux and NPLMono is currently recommended to use only on server side. Install Mono from source in the official way.  Make sure pkg-config is installed. \n\n# Run the default cmake, the NPLMono will automatically find all mono libraries installed on the machine. \n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# the mono installation directory in windows, modify this to match yours\n\n#set(MONO_ROOT \"$ENV{PROGRAMFILES}/Mono-2.10.8\")\n",
        "Line" : 29,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# TODO: we can locate the mono root by following command in windows\n",
        "Line" : 33,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "#\"$ENV{PROGRAMFILES}/Mono-2.10.8/bin\"\n\n#\"$ENV{PROGRAMFILES}/Mono-2.6.7/bin\"\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# TODO: if mono is not found, remove this project from build. \n",
        "Line" : 40,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "#####################################\n\n##----- source files for NPLMono---##\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################\n\n# util files\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#util/Platforms.h\n",
        "Line" : 69,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "#util/os_calls.h  util/os_calls.cpp\n",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "#####################################\n\n##--------- CS interface file ---------##\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# custom build rules: cs interface files\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# generate program database (PDB symbol files even in release build)\n",
        "Line" : 112,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# To turn size optimisations on again\n",
        "Line" : 115,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "# The following is to use pkg-config to generate compile and link time flags. \n",
        "Line" : 131,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "# set C_FLAGS and CXX_FLAGS\n",
        "Line" : 135,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 17
    },
    "Server/trunk/NPLMono/NPLMono2/CMakeLists.txt" : {
      "ObjectId" : "90f5456b190847be2ac002d800194dfc19e162f4",
      "LastModified" : "2019-01-19T14:04:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Author: LiXizhi\n\n# Company: ParaEngine.com\n\n# Date: 2014.7.29\n\n# Note: NPLMono2 is a ParaEngine plugin (dll) that exposes ParaEngine API to the C# mono scripting interface. It is upgraded version for NPLMono.\n\n# Desc:\n\n# ---+++ Build in Windows:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# see http://www.mono-project.com/Embedding_Mono\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# NPLMono2 needs mono in order to compile. In windows, please install mono binary(default is D:/Program Files (x86)/Mono-3.2.3) and Set MONO_ROOT variable, please use forward slash / in file name.\n\n# Currently mono path is hard coded in source code using mono_set_dirs() function during compilation in MSVC.\n\n# One can deploy as follow and use mono_set_dirs(\"mono\\\\lib\", \"mono\\\\etc\");  if one wants to deploy mono with the game engine. NPLMono can be used with both client and server. However it is not recommended to use on client, because one needs to redistribute mono runtime which is pretty big.\n\n# NPLMono2.dll\n\n# mono-2.0.dll (rename from bin/libmonosgen-2.0.dll)\n\n# libglib-2.0-0.dll\n\n# libgthread-2.0-0.dll\n\n# mono\\etc  <- copy of MONO_ROOT\\etc\n\n# mono\\lib  <- copy of MONO_ROOT\\lib\n\n#\n\n# Upgrade Note: One needs to upgrade \\trunk\\NPLMono\\NPLMono\\lib\\mono.def(lib) if mono api changes, this is only required on windows. Linux uses ELF and this step is not needed.\n\n#\n\n# ---+++ Build in Linux:\n\n# it is much easier to build on linux and NPLMono is currently recommended to use only on server side. Install Mono from source in the official way.  Make sure pkg-config is installed.\n\n# Run the default cmake, the NPLMono2 will automatically find all mono libraries installed on the machine.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# the mono installation directory in windows, modify this to match yours\n",
        "Line" : 29,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# this is mono 5.0 in mine\n",
        "Line" : 30,
        "CharPositionInLine" : 47
      },
      "5" : {
        "Text" : "# set(MONO_ROOT \"D:/Program Files (x86)/Mono-3.2.3\")\n\n# set(MONO_ROOT \"D:/Program Files (x86)/Mono-2.10.9\")\n\n# 3.4.0 from source\n\n# set(MONO_ROOT \"D:/cygwin/opt/mymono\")\n",
        "Line" : 31,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# we can locate the mono root by following command in windows\n",
        "Line" : 36,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# if mono is not found, remove this project from build.\n",
        "Line" : 41,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# The following is to use pkg-config to generate compile and link time flags.\n",
        "Line" : 57,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "#####################################\n\n##----- source files for NPLMono---##\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "##############################\n\n# util files\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#util/Platforms.h\n",
        "Line" : 147,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "#util/os_calls.h  util/os_calls.cpp\n",
        "Line" : 148,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "#####################################\n\n##--------- CS interface file ---------##\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# custom build rules: cs interface files\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# statically link MSVC to reduce dependancies\n",
        "Line" : 191,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "# generate program database (PDB symbol files even in release build)\n",
        "Line" : 201,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "# To turn size optimisations on again\n",
        "Line" : 204,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 18
    },
    "Server/trunk/Pinocchio/CMakeLists.txt" : {
      "ObjectId" : "ad9ae0f0d3bca30b828556b15ab94cb6cd945c99",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# statically link MSVC to reduce dependancies\n",
        "Line" : 48,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "Server/trunk/curl-7.47.1/CMake/FindGSS.cmake" : {
      "ObjectId" : "dfaeaf30782de8d9eb9d95456b71044774374023",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the GSS Kerberos library\n\n# Once done this will define\n\n#\n\n#  GSS_ROOT_DIR - Set this variable to the root installation of GSS\n\n#\n\n# Read-Only variables:\n\n#  GSS_FOUND - system has the Heimdal library\n\n#  GSS_FLAVOUR - \"MIT\" or \"Heimdal\" if anything found.\n\n#  GSS_INCLUDE_DIR - the Heimdal include directory\n\n#  GSS_LIBRARIES - The libraries needed to use GSS\n\n#  GSS_LINK_DIRECTORIES - Directories to add to linker search path\n\n#  GSS_LINKER_FLAGS - Additional linker flags\n\n#  GSS_COMPILER_FLAGS - Additional compiler flags\n\n#  GSS_VERSION - This is set to version advertised by pkg-config or read from manifest.\n\n#                In case the library is found but no version info availabe it'll be set to \"unknown\"\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# try to find library using system pkg-config if user didn't specify root dir\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#not found by pkg-config. Let's take more traditional approach.\n",
        "Line" : 40,
        "CharPositionInLine" : 19
      },
      "3" : {
        "Text" : "# if not found in user-supplied directories, maybe system knows better\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# 0 means success\n",
        "Line" : 67,
        "CharPositionInLine" : 38
      },
      "5" : {
        "Text" : "# should also work in an odd case when multiple directories are given\n",
        "Line" : 68,
        "CharPositionInLine" : 12
      },
      "6" : {
        "Text" : "# 0 means success\n",
        "Line" : 89,
        "CharPositionInLine" : 38
      },
      "7" : {
        "Text" : "# this script gives us libraries and link directories. Blah. We have to deal with it.\n",
        "Line" : 90,
        "CharPositionInLine" : 12
      },
      "8" : {
        "Text" : "# older versions may not have the \"--version\" parameter. In this case we just don't care.\n",
        "Line" : 115,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# older versions may not have the \"--vendor\" parameter. In this case we just don't care.\n",
        "Line" : 127,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# most probably, shouldn't really matter\n",
        "Line" : 129,
        "CharPositionInLine" : 39
      },
      "11" : {
        "Text" : "# either there is no config script or we are on platform that doesn't provide one (Windows?)\n",
        "Line" : 138,
        "CharPositionInLine" : 11
      },
      "12" : {
        "Text" : "#jay, we've found something\n",
        "Line" : 150,
        "CharPositionInLine" : 29
      },
      "13" : {
        "Text" : "# prevent compiling the header - just check if we can include it\n",
        "Line" : 157,
        "CharPositionInLine" : 16
      },
      "14" : {
        "Text" : "# I'm not convienced if this is the right way but this is what autotools do at the moment\n",
        "Line" : 168,
        "CharPositionInLine" : 12
      },
      "15" : {
        "Text" : "# if we have headers, check if we can link libraries\n",
        "Line" : 184,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# those suffixes are not checked for HINTS\n",
        "Line" : 208,
        "CharPositionInLine" : 62
      },
      "CommentCount" : 17
    },
    "Server/trunk/curl-7.47.1/CMake/Macros.cmake" : {
      "ObjectId" : "dab005f7344a58765c9746764cdd19fc5c707aba",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#File defines convenience macros for available feature testing\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This macro checks if the symbol exists in the library and if it\n\n# does, it prepends library to the list.  It is intended to be called\n\n# multiple times with a sequence of possibly dependent libraries in\n\n# order of least-to-most-dependent.  Some libraries depend on others\n\n# to link correctly.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check if header file exists and add it to the list.\n\n# This macro is intended to be called multiple times with a sequence of\n\n# possibly dependent header files.  Some headers depend on others to be\n\n# compiled correctly.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# For other curl specific tests, use this macro.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Server/trunk/curl-7.47.1/CMake/OtherTests.cmake" : {
      "ObjectId" : "d59949871f80b6ce0ab6f8acdd7764a553b3509f",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The begin of the sources (macros and includes)\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Server/trunk/curl-7.47.1/CMake/Platforms/WindowsCache.cmake" : {
      "ObjectId" : "6fc2991cd14b81b0714c32021296fcba4850f570",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Server/trunk/curl-7.47.1/CMake/Utilities.cmake" : {
      "ObjectId" : "37cdfe3bf65c22e003cef0da0c120e10f6fc1450",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# File containing various utilities\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Converts a CMake list to a string containing elements separated by spaces\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Appends a lis of item to a string which is a space-separated list, if they don't already exist.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Convinience function that does the same as LIST(FIND ...) but with a TRUE/FALSE return value.\n\n# Ex: IN_STR_LIST(MY_LIST \"Searched item\" WAS_FOUND)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Server/trunk/curl-7.47.1/CMakeLists.txt" : {
      "ObjectId" : "06f18cf5989b13712131d468b74845849acc3bf3",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#***************************************************************************\n\n#                                  _   _ ____  _\n\n#  Project                     ___| | | |  _ \\| |\n\n#                             / __| | | | |_) | |\n\n#                            | (__| |_| |  _ <| |___\n\n#                             \\___|\\___/|_| \\_\\_____|\n\n#\n\n# Copyright (C) 1998 - 2015, Daniel Stenberg, <daniel@haxx.se>, et al.\n\n#\n\n# This software is licensed as described in the file COPYING, which\n\n# you should have received as part of this distribution. The terms\n\n# are also available at https://curl.haxx.se/docs/copyright.html.\n\n#\n\n# You may opt to use, copy, modify, merge, publish, distribute and/or sell\n\n# copies of the Software, and permit persons to whom the Software is\n\n# furnished to do so, under the terms of the COPYING file.\n\n#\n\n# This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTY OF ANY\n\n# KIND, either express or implied.\n\n#\n\n###########################################################################\n\n# cURL/libcurl CMake script\n\n# by Tetetest and Sukender (Benoit Neil)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO:\n\n# The output .so file lacks the soname number which we currently have within the lib/Makefile.am file\n\n# Add full (4 or 5 libs) SSL support\n\n# Add INSTALL target (EXTRA_DIST variables in Makefile.am may be moved to Makefile.inc so that CMake/CPack is aware of what's to include).\n\n# Add CTests(?)\n\n# Check on all possible platforms\n\n# Test with as many configurations possible (With or without any option)\n\n# Create scripts that help keeping the CMake build system up to date (to reduce maintenance). According to Tetetest:\n\n#  - lists of headers that 'configure' checks for;\n\n#  - curl-specific tests (the ones that are in m4/curl-*.m4 files);\n\n#  - (most obvious thing:) curl version numbers.\n\n# Add documentation subproject\n\n#\n\n# To check:\n\n# (From Daniel Stenberg) The cmake build selected to run gcc with -fPIC on my box while the plain configure script did not.\n\n# (From Daniel Stenberg) The gcc command line use neither -g nor any -O options. As a developer, I also treasure our configure scripts's --enable-debug option that sets a long range of \"picky\" compiler options.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Sukender: Is it necessary?\n",
        "Line" : 58,
        "CharPositionInLine" : 38
      },
      "3" : {
        "Text" : "# Setup package meta-data\n\n# SET(PACKAGE \"curl\")\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# SET(PACKAGE_TARNAME \"curl\")\n\n# SET(PACKAGE_NAME \"curl\")\n\n# SET(PACKAGE_VERSION \"-\")\n\n# SET(PACKAGE_STRING \"curl-\")\n\n# SET(PACKAGE_BUGREPORT \"a suitable curl mailing list => https://curl.haxx.se/mail/\")\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# DEBUGBUILD will be defined only for Debug builds\n",
        "Line" : 84,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# initialize CURL_LIBS\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#INCLUDE(Dart)\n",
        "Line" : 113,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Force the feature off as this name is used as guard macro...\n",
        "Line" : 192,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# TODO: cache NROFF/NROFF_MANOPT/USE_MANUAL vars?\n",
        "Line" : 199,
        "CharPositionInLine" : 24
      },
      "10" : {
        "Text" : "# Need a way to write to stdin, this will do\n",
        "Line" : 203,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Tests for a valid nroff option to generate a manpage\n",
        "Line" : 205,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Save the option if it was valid\n",
        "Line" : 211,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# No need for the temporary file\n",
        "Line" : 219,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# We need ansi c-flags, especially on HP\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Disable warnings on Borland to avoid changing 3rd party code.\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# If we are on AIX, do the _ALL_SOURCE magic\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Include all the necessary files for macros\n",
        "Line" : 243,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# On windows preload settings\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Check for all needed libraries\n",
        "Line" : 271,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Yellowtab Zeta needs different libraries than BeOS 5.\n",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Now that we know, we're not using windows LDAP...\n",
        "Line" : 353,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# Check for LDAP\n",
        "Line" : 355,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "#LDAP includes won't be used\n",
        "Line" : 375,
        "CharPositionInLine" : 64
      },
      "24" : {
        "Text" : "#LDAP includes won't be used\n",
        "Line" : 379,
        "CharPositionInLine" : 64
      },
      "25" : {
        "Text" : "# No ldap, no ldaps.\n",
        "Line" : 429,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Check for idn\n",
        "Line" : 442,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Check for symbol dlopen (same as HAVE_LIBDL)\n",
        "Line" : 445,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#libSSH2\n",
        "Line" : 464,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# find_package has already found the headers\n",
        "Line" : 481,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# now check for specific libssh2 symbols as they were added in different versions\n",
        "Line" : 486,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# MIT\n",
        "Line" : 516,
        "CharPositionInLine" : 11
      },
      "32" : {
        "Text" : "# Check for header files\n",
        "Line" : 566,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Different sizeofs, etc.\n",
        "Line" : 677,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#    define CURL_SIZEOF_LONG        4\n\n#    define CURL_TYPEOF_CURL_OFF_T  long long\n\n#    define CURL_FORMAT_CURL_OFF_T  \"lld\"\n\n#    define CURL_FORMAT_CURL_OFF_TU \"llu\"\n\n#    define CURL_FORMAT_OFF_T       \"%lld\"\n\n#    define CURL_SIZEOF_CURL_OFF_T  8\n\n#    define CURL_SUFFIX_CURL_OFF_T  LL\n\n#    define CURL_SUFFIX_CURL_OFF_TU ULL\n",
        "Line" : 679,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# TODO: need adjustment here.\n",
        "Line" : 713,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# Check for some functions that are used\n",
        "Line" : 729,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# symbol exists in win32, but function does not.\n",
        "Line" : 814,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# sigaction and sigsetjmp are special. Use special mechanism for\n\n# detecting those, but only if previous attempt failed.\n",
        "Line" : 817,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# If there is no stricmp(), do not allow LDAP to parse URLs\n",
        "Line" : 832,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Do curl specific tests\n",
        "Line" : 837,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Check for reentrant\n",
        "Line" : 884,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Some other minor tests\n",
        "Line" : 920,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Fix libz / zlib.h\n",
        "Line" : 926,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Check for nonblocking\n",
        "Line" : 948,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# The Mac version of GCC warns about use of long double.  Disable it.\n",
        "Line" : 970,
        "CharPositionInLine" : 4
      },
      "46" : {
        "Text" : "# TODO test which of these headers are required for the typedefs used in curlbuild.h\n",
        "Line" : 1000,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# For windows, do not allow the compiler to use default target (Vista).\n",
        "Line" : 1015,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# Ugly (but functional) way to include \"Makefile.inc\" by transforming it (= regenerate it).\n",
        "Line" : 1024,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Replace $() with ${}\n",
        "Line" : 1034,
        "CharPositionInLine" : 112
      },
      "50" : {
        "Text" : "# Replace @@ with ${}, even if that may not be read by CMake scripts.\n",
        "Line" : 1035,
        "CharPositionInLine" : 105
      },
      "51" : {
        "Text" : "# TODO support GNUTLS, NSS, POLARSSL, AXTLS, CYASSL, WINSSL, DARWINSSL\n",
        "Line" : 1048,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# Helper to populate a list (_items) with a label when conditions (the remaining\n\n# args) are satisfied\n",
        "Line" : 1053,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# TODO need to disable policy CMP0054 (CMake 3.1) to allow this indirection\n",
        "Line" : 1056,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "# Clear list and try to detect available features\n",
        "Line" : 1062,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# TODO SSP1 (WinSSL) check is missing\n",
        "Line" : 1071,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# TODO SSP1 missing for SPNEGO\n",
        "Line" : 1074,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# NTLM support requires crypto function adaptions from various SSL libs\n\n# TODO alternative SSL libs tests for SSP1, GNUTLS, NSS, DARWINSSL\n",
        "Line" : 1079,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# TODO missing option (autoconf: --enable-ntlm-wb)\n",
        "Line" : 1084,
        "CharPositionInLine" : 2
      },
      "59" : {
        "Text" : "# TODO missing option (--enable-tls-srp), depends on GNUTLS_SRP/OPENSSL_SRP\n",
        "Line" : 1087,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# TODO option --with-nghttp2 tests for nghttp2 lib and nghttp2/nghttp2.h header\n",
        "Line" : 1089,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# Clear list and try to detect available protocols\n",
        "Line" : 1094,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# CURL_DISABLE_LDAP implies CURL_DISABLE_LDAPS\n\n# TODO check HAVE_LDAP_SSL (in autoconf this is enabled with --enable-ldaps)\n",
        "Line" : 1103,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# curl-config needs the following options to be set.\n",
        "Line" : 1125,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# TODO probably put a -D... options here?\n",
        "Line" : 1127,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# TODO when to set \"-DCURL_STATICLIB\" for CPPFLAG_CURL_STATICLIB?\n",
        "Line" : 1129,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# TODO need to set this (see CURL_CHECK_CA_BUNDLE in acinclude.m4)\n",
        "Line" : 1131,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# Broken: LIBCURL_LIBS below; .a lib is not built\n",
        "Line" : 1136,
        "CharPositionInLine" : 2
      },
      "68" : {
        "Text" : "# TODO CURL_LIBS also contains absolute paths which don't work with static -l...\n",
        "Line" : 1147,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# \"a\" (Linux) or \"lib\" (Windows)\n",
        "Line" : 1151,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# Set this to \"yes\" to append all libraries on which -lcurl is dependent\n",
        "Line" : 1154,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# SUPPORT_FEATURES\n\n# SUPPORT_PROTOCOLS\n",
        "Line" : 1156,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# Finally generate a \"curl-config\" matching this config\n",
        "Line" : 1160,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# Finally generate a pkg-config file matching this config\n",
        "Line" : 1170,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# This needs to be run very last so other parts of the scripts can take advantage of this.\n",
        "Line" : 1176,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# Installation.\n\n# First, install generated curlbuild.h\n",
        "Line" : 1181,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# Next, install other headers excluding curlbuild.h\n",
        "Line" : 1185,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# Workaround for MSVS10 to avoid the Dialog Hell\n\n# FIXME: This could be removed with future version of CMake.\n",
        "Line" : 1192,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 78
    },
    "Server/trunk/curl-7.47.1/Makefile" : {
      "ObjectId" : "329e4f3a88f0bb0cc0ba079bc92eb8caefc71dc1",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#***************************************************************************\n\n#                                  _   _ ____  _\n\n#  Project                     ___| | | |  _ \\| |\n\n#                             / __| | | | |_) | |\n\n#                            | (__| |_| |  _ <| |___\n\n#                             \\___|\\___/|_| \\_\\_____|\n\n#\n\n# Copyright (C) 1998 - 2015, Daniel Stenberg, <daniel@haxx.se>, et al.\n\n#\n\n# This software is licensed as described in the file COPYING, which\n\n# you should have received as part of this distribution. The terms\n\n# are also available at https://curl.haxx.se/docs/copyright.html.\n\n#\n\n# You may opt to use, copy, modify, merge, publish, distribute and/or sell\n\n# copies of the Software, and permit persons to whom the Software is\n\n# furnished to do so, under the terms of the COPYING file.\n\n#\n\n# This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTY OF ANY\n\n# KIND, either express or implied.\n\n#\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We don't need to do anything for vc6.\n",
        "Line" : 500,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# VC7 makefiles are for use with VS.NET and VS.NET 2003\n",
        "Line" : 503,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# VC8 makefiles are for use with VS2005\n",
        "Line" : 514,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# VC9 makefiles are for use with VS2008\n",
        "Line" : 525,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# VC10 makefiles are for use with VS2010\n",
        "Line" : 536,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# VC11 makefiles are for use with VS2012\n",
        "Line" : 547,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# VC12 makefiles are for use with VS2013\n",
        "Line" : 558,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# VC14 makefiles are for use with VS2015\n",
        "Line" : 569,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9,
      "Errorlog" : "line 36:6 token recognition error at: '\\s'\nline 42:6 token recognition error at: '\\s'\nline 48:6 token recognition error at: '\\s'\nline 54:6 token recognition error at: '\\s'\nline 93:6 token recognition error at: '\\s'\nline 124:6 token recognition error at: '\\s'\nline 130:6 token recognition error at: '\\s'\nline 136:6 token recognition error at: '\\s'\nline 142:6 token recognition error at: '\\s'\nline 148:6 token recognition error at: '\\s'\nline 154:6 token recognition error at: '\\s'\nline 160:6 token recognition error at: '\\s'\nline 166:6 token recognition error at: '\\s'\nline 172:6 token recognition error at: '\\s'\nline 178:6 token recognition error at: '\\s'\nline 184:6 token recognition error at: '\\s'\nline 190:6 token recognition error at: '\\s'\nline 196:6 token recognition error at: '\\s'\nline 202:6 token recognition error at: '\\s'\nline 208:6 token recognition error at: '\\s'\nline 214:6 token recognition error at: '\\s'\nline 220:6 token recognition error at: '\\s'\nline 226:6 token recognition error at: '\\s'\nline 232:6 token recognition error at: '\\s'\nline 238:6 token recognition error at: '\\s'\nline 244:6 token recognition error at: '\\s'\nline 250:6 token recognition error at: '\\s'\nline 256:6 token recognition error at: '\\s'\nline 262:6 token recognition error at: '\\s'\nline 268:6 token recognition error at: '\\s'\nline 274:6 token recognition error at: '\\s'\nline 280:6 token recognition error at: '\\s'\nline 286:6 token recognition error at: '\\s'\nline 292:6 token recognition error at: '\\s'\nline 298:6 token recognition error at: '\\s'\nline 304:6 token recognition error at: '\\s'\nline 310:6 token recognition error at: '\\s'\nline 316:6 token recognition error at: '\\s'\nline 322:6 token recognition error at: '\\s'\nline 328:6 token recognition error at: '\\s'\nline 334:6 token recognition error at: '\\s'\nline 340:6 token recognition error at: '\\s'\nline 346:6 token recognition error at: '\\s'\nline 352:6 token recognition error at: '\\s'\nline 358:6 token recognition error at: '\\s'\nline 364:6 token recognition error at: '\\s'\nline 370:6 token recognition error at: '\\s'\nline 376:6 token recognition error at: '\\s'\nline 382:6 token recognition error at: '\\s'\nline 388:6 token recognition error at: '\\s'\nline 394:6 token recognition error at: '\\s'\nline 400:6 token recognition error at: '\\s'\nline 406:6 token recognition error at: '\\s'\nline 412:6 token recognition error at: '\\s'\nline 418:6 token recognition error at: '\\s'\nline 424:6 token recognition error at: '\\s'\nline 430:6 token recognition error at: '\\s'\nline 436:6 token recognition error at: '\\s'\nline 442:6 token recognition error at: '\\s'\nline 448:6 token recognition error at: '\\s'\n"
    },
    "Server/trunk/curl-7.47.1/Makefile.am" : {
      "ObjectId" : "09c463140ba23739cd2aa3c3d2bf9317d8e942ff",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#***************************************************************************\n\n#                                  _   _ ____  _\n\n#  Project                     ___| | | |  _ \\| |\n\n#                             / __| | | | |_) | |\n\n#                            | (__| |_| |  _ <| |___\n\n#                             \\___|\\___/|_| \\_\\_____|\n\n#\n\n# Copyright (C) 1998 - 2015, Daniel Stenberg, <daniel@haxx.se>, et al.\n\n#\n\n# This software is licensed as described in the file COPYING, which\n\n# you should have received as part of this distribution. The terms\n\n# are also available at https://curl.haxx.se/docs/copyright.html.\n\n#\n\n# You may opt to use, copy, modify, merge, publish, distribute and/or sell\n\n# copies of the Software, and permit persons to whom the Software is\n\n# furnished to do so, under the terms of the COPYING file.\n\n#\n\n# This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTY OF ANY\n\n# KIND, either express or implied.\n\n#\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# List of files required to generate VC IDE .dsp, .vcproj and .vcxproj files\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This is a hook to have 'make clean' also clean up the docs and the tests\n\n# dir. The extra check for the Makefiles being present is necessary because\n\n# 'make distcheck' will make clean first in these directories _before_ it runs\n\n# this hook.\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Build source and binary rpms. For rpm-3.0 and above, the ~/.rpmmacros\n\n# must contain the following line:\n\n# %_topdir /home/loic/local/rpm\n\n# and that /home/loic/local/rpm contains the directory SOURCES, BUILD etc.\n\n#\n\n# cd /home/loic/local/rpm ; mkdir -p SOURCES BUILD RPMS/i386 SPECS SRPMS\n\n#\n\n# If additional configure flags are needed to build the package, add the\n\n# following in ~/.rpmmacros\n\n# %configure CFLAGS=\"%{optflags}\" ./configure %{_target_platform} --prefix=%{_prefix} ${AM_CONFIGFLAGS}\n\n# and run make rpm in the following way:\n\n# AM_CONFIGFLAGS='--with-uri=/home/users/loic/local/RedHat-6.2' make rpm\n\n#\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# file (which ends up back in this directory).\n\n# The pkgadd file is in 'pkgtrans' format, so to install on Solaris, do\n\n# pkgadd -d ./HAXXcurl-*\n\n#\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# gak - libtool requires an absoulte directory, hence the pwd below...\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# Build a cygwin binary tarball installation file\n\n# resulting .tar.bz2 file will end up at packages/Win32/cygwin\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# We extend the standard install with a custom hook:\n",
        "Line" : 255,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# We extend the standard uninstall with a custom hook:\n",
        "Line" : 260,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9,
      "Errorlog" : "line 227:63 token recognition error at: '\\s'\n"
    },
    "Server/trunk/curl-7.47.1/include/Makefile.am" : {
      "ObjectId" : "3b24860299525e8d69368d677e1191e4e525c8e3",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Server/trunk/curl-7.47.1/include/curl/Makefile.am" : {
      "ObjectId" : "7c924fcb5a8c1dad23f64f1b3010babc4564cda8",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#***************************************************************************\n\n#                                  _   _ ____  _\n\n#  Project                     ___| | | |  _ \\| |\n\n#                             / __| | | | |_) | |\n\n#                            | (__| |_| |  _ <| |___\n\n#                             \\___|\\___/|_| \\_\\_____|\n\n#\n\n# Copyright (C) 1998 - 2011, Daniel Stenberg, <daniel@haxx.se>, et al.\n\n#\n\n# This software is licensed as described in the file COPYING, which\n\n# you should have received as part of this distribution. The terms\n\n# are also available at https://curl.haxx.se/docs/copyright.html.\n\n#\n\n# You may opt to use, copy, modify, merge, publish, distribute and/or sell\n\n# copies of the Software, and permit persons to whom the Software is\n\n# furnished to do so, under the terms of the COPYING file.\n\n#\n\n# This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTY OF ANY\n\n# KIND, either express or implied.\n\n#\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# curlbuild.h does not exist in the git tree. When the original libcurl\n\n# source code distribution archive file is created, curlbuild.h.dist is\n\n# renamed to curlbuild.h and included in the tarball so that it can be\n\n# used directly on non-configure systems.\n\n#\n\n# The distributed curlbuild.h will be overwritten on configure systems\n\n# when the configure script runs, with one that is suitable and specific\n\n# to the library being configured and built.\n\n#\n\n# curlbuild.h.in is the distributed template file from which the configure\n\n# script creates curlbuild.h at library configuration time, overwiting the\n\n# one included in the distribution archive.\n\n#\n\n# curlbuild.h.dist is not included in the source code distribution archive.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# for debug builds, we scan the sources on all regular make invokes\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Server/trunk/curl-7.47.1/include/curl/curlbuild.h.cmake" : {
      "ObjectId" : "bbb31a9408f229704ecfbadc8d886402cb95adf6",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/***************************************************************************\n *                                  _   _ ____  _\n *  Project                     ___| | | |  _ \\| |\n *                             / __| | | | |_) | |\n *                            | (__| |_| |  _ <| |___\n *                             \\___|\\___/|_| \\_\\_____|\n *\n * Copyright (C) 1998 - 2008, Daniel Stenberg, <daniel@haxx.se>, et al.\n *\n * This software is licensed as described in the file COPYING, which\n * you should have received as part of this distribution. The terms\n * are also available at https://curl.haxx.se/docs/copyright.html.\n *\n * You may opt to use, copy, modify, merge, publish, distribute and/or sell\n * copies of the Software, and permit persons to whom the Software is\n * furnished to do so, under the terms of the COPYING file.\n *\n * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTY OF ANY\n * KIND, either express or implied.\n *\n ***************************************************************************/",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/* ================================================================ */\n/*               NOTES FOR CONFIGURE CAPABLE SYSTEMS                */\n/* ================================================================ */",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/*\n * NOTE 1:\n * -------\n *\n * Nothing in this file is intended to be modified or adjusted by the\n * curl library user nor by the curl library builder.\n *\n * If you think that something actually needs to be changed, adjusted\n * or fixed in this file, then, report it on the libcurl development\n * mailing list: https://cool.haxx.se/mailman/listinfo/curl-library/\n *\n * This header file shall only export symbols which are 'curl' or 'CURL'\n * prefixed, otherwise public name space would be polluted.\n *\n * NOTE 2:\n * -------\n *\n * Right now you might be staring at file include/curl/curlbuild.h.in or\n * at file include/curl/curlbuild.h, this is due to the following reason:\n *\n * On systems capable of running the configure script, the configure process\n * will overwrite the distributed include/curl/curlbuild.h file with one that\n * is suitable and specific to the library being configured and built, which\n * is generated from the include/curl/curlbuild.h.in template file.\n *\n */",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* ================================================================ */\n/*  DEFINITION OF THESE SYMBOLS SHALL NOT TAKE PLACE ANYWHERE ELSE  */\n/* ================================================================ */",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/* ================================================================ */\n/*  EXTERNAL INTERFACE SETTINGS FOR CONFIGURE CAPABLE SYSTEMS ONLY  */\n/* ================================================================ */",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/* Configure process defines this to 1 when it finds out that system  */\n/* header file ws2tcpip.h must be included by the external interface. */",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/* Configure process defines this to 1 when it finds out that system   */\n/* header file sys/types.h must be included by the external interface. */",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "/* Configure process defines this to 1 when it finds out that system */\n/* header file stdint.h must be included by the external interface.  */",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "/* Configure process defines this to 1 when it finds out that system  */\n/* header file inttypes.h must be included by the external interface. */",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "/* Configure process defines this to 1 when it finds out that system    */\n/* header file sys/socket.h must be included by the external interface. */",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "/* Configure process defines this to 1 when it finds out that system  */\n/* header file sys/poll.h must be included by the external interface. */",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "/* The size of `long', as computed by sizeof. */",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "/* Integral data type used for curl_socklen_t. */",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "/* The size of `curl_socklen_t', as computed by sizeof. */",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "/* Data type definition of curl_socklen_t. */",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "/* Signed integral data type used for curl_off_t. */",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "/* Data type definition of curl_off_t. */",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "/* curl_off_t formatting string directive without \"%\" conversion specifier. */",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "/* unsigned curl_off_t formatting string without \"%\" conversion specifier. */",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "/* curl_off_t formatting string directive with \"%\" conversion specifier. */",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "/* The size of `curl_off_t', as computed by sizeof. */",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "/* curl_off_t constant suffix. */",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "/* unsigned curl_off_t constant suffix. */",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "Server/trunk/curl-7.47.1/lib/CMakeLists.txt" : {
      "ObjectId" : "0d37ece89c5df7e89df5fb7b3b2cae7c2d596da5",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# SET(CSOURCES\n\n# #  memdebug.c -not used\n\n# # nwlib.c - Not used\n\n# # strtok.c - specify later\n\n# # strtoofft.c - specify later\n\n# )\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# # if we have Kerberos 4, right now this is never on\n\n# #OPTION(CURL_KRB4 \"Use Kerberos 4\" OFF)\n\n# IF(CURL_KRB4)\n\n# SET(CSOURCES ${CSOURCES}\n\n# krb4.c\n\n# security.c\n\n# )\n\n# ENDIF(CURL_KRB4)\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# #OPTION(CURL_MALLOC_DEBUG \"Debug mallocs in Curl\" OFF)\n\n# MARK_AS_ADVANCED(CURL_MALLOC_DEBUG)\n\n# IF(CURL_MALLOC_DEBUG)\n\n# SET(CSOURCES ${CSOURCES}\n\n# memdebug.c\n\n# )\n\n# ENDIF(CURL_MALLOC_DEBUG)\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# # only build compat strtoofft if we need to\n\n# IF(NOT HAVE_STRTOLL AND NOT HAVE__STRTOI64)\n\n# SET(CSOURCES ${CSOURCES}\n\n# strtoofft.c\n\n# )\n\n# ENDIF(NOT HAVE_STRTOLL AND NOT HAVE__STRTOI64)\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The rest of the build\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Static lib\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# DLL / so dynamic lib\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# statically link MSVC to reduce dependancies\n",
        "Line" : 73,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# enable multiprocessor build option /MP, this will greatly increase compile speed\n",
        "Line" : 83,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# /GR- Remove RTTI to miminize the executable size\n",
        "Line" : 89,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# debug dll is different\n",
        "Line" : 93,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# Remove the \"lib\" prefix since the library is already named \"libcurl\".\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Add \"_imp\" as a suffix before the extension to avoid conflicting with the statically linked \"libcurl.lib\"\n",
        "Line" : 121,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# added by LiXizhi \n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "Server/trunk/curl-7.47.1/lib/Makefile.am" : {
      "ObjectId" : "6f5317a64e678d2049d6beff4b938697cfc75825",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#***************************************************************************\n\n#                                  _   _ ____  _\n\n#  Project                     ___| | | |  _ \\| |\n\n#                             / __| | | | |_) | |\n\n#                            | (__| |_| |  _ <| |___\n\n#                             \\___|\\___/|_| \\_\\_____|\n\n#\n\n# Copyright (C) 1998 - 2015, Daniel Stenberg, <daniel@haxx.se>, et al.\n\n#\n\n# This software is licensed as described in the file COPYING, which\n\n# you should have received as part of this distribution. The terms\n\n# are also available at https://curl.haxx.se/docs/copyright.html.\n\n#\n\n# You may opt to use, copy, modify, merge, publish, distribute and/or sell\n\n# copies of the Software, and permit persons to whom the Software is\n\n# furnished to do so, under the terms of the COPYING file.\n\n#\n\n# This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTY OF ANY\n\n# KIND, either express or implied.\n\n#\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This might hold -Werror\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Specify our include paths here, and do it relative to $(top_srcdir) and\n\n# $(top_builddir), to ensure that these paths which belong to the library\n\n# being currently built and tested are searched before the library which\n\n# might possibly already be installed in the system.\n\n#\n\n# $(top_builddir)/include/curl for generated curlbuild.h included from curl.h\n\n# $(top_builddir)/include for generated curlbuild.h inc. from lib/curl_setup.h\n\n# $(top_srcdir)/include is for libcurl's external include files\n\n# $(top_builddir)/lib is for libcurl's generated lib/curl_config.h file\n\n# $(top_srcdir)/lib for libcurl's lib/curl_setup.h and other \"private\" files\n\n# $(top_builddir)/ares is for in-tree c-ares's generated ares_build.h file\n\n# $(top_srcdir)/ares is for in-tree c-ares's external include files\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Prevent LIBS from being used for all link targets\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Bumping of SONAME conditionally may seem like a weird thing to do, and yeah\n\n# it is. The problem is that we try to avoid the bump as hard as possible, but\n\n# yet it is still necessary for a few rare situations. The configure script will\n\n# attempt to figure out these situations, and it can be forced to consider this\n\n# to be such a case! See README.curl_off_t for further details.\n\n#\n\n# This conditional soname bump SHOULD be removed at next \"proper\" bump.\n\n#\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# This flag accepts an argument of the form current[:revision[:age]]. So,\n\n# passing -version-info 3:12:1 sets current to 3, revision to 12, and age to\n\n# 1.\n\n#\n\n# Here's the simplified rule guide on how to change -version-info:\n\n# (current version is C:R:A)\n\n#\n\n# 1. if there are only source changes, use C:R+1:A\n\n# 2. if interfaces were added use C+1:0:A+1\n\n# 3. if interfaces were removed, then use C+1:0:0\n\n#\n\n# For the full guide on libcurl ABI rules, see docs/libcurl/ABI\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Makefile.inc provides the CSOURCES and HHEADERS defines\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# for debug builds, we scan the sources on all regular make invokes\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "Server/trunk/curl-7.47.1/lib/curl_config.h.cmake" : {
      "ObjectId" : "6b5070a8bcd6dd4d7f037fc575889dcd9f87ad99",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/* lib/curl_config.h.in.  Generated somehow by cmake.  */",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/* when building libcurl itself */",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/* Location of default ca bundle */",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* Location of default ca path */",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/* to disable cookies support */",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/* to disable cryptographic authentication */",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/* to disable DICT */",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "/* to disable FILE */",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "/* to disable FTP */",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "/* to disable GOPHER */",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "/* to disable IMAP */",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "/* to disable HTTP */",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "/* to disable LDAP */",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "/* to disable LDAPS */",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "/* to disable POP3 */",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "/* to disable proxies */",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "/* to disable RTSP */",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "/* to disable RTMP */",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "/* to disable SMB */",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "/* to disable SMTP */",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "/* to disable TELNET */",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "/* to disable TFTP */",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "/* to disable verbose strings */",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "/* to make a symbol visible */",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "/* Ensure using CURL_EXTERN_SYMBOL is possible */",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "/* Use Windows LDAP implementation */",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "/* when not building a shared library */",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "/* Set to explicitly specify we don't want to use thread-safe functions */",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "/* your Entropy Gathering Daemon socket pathname */",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "/* Define if you want to enable IPv6 support */",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "/* Define to the type qualifier of arg 1 for getnameinfo. */",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "/* Define to the type of arg 1 for getnameinfo. */",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "/* Define to the type of arg 2 for getnameinfo. */",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "/* Define to the type of args 4 and 6 for getnameinfo. */",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "/* Define to the type of arg 7 for getnameinfo. */",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "/* Specifies the number of arguments to getservbyport_r */",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "/* Specifies the size of the buffer to pass to getservbyport_r */",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "/* Define to 1 if you have the alarm function. */",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "/* Define to 1 if you have the <alloca.h> header file. */",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "/* Define to 1 if you have the <arpa/inet.h> header file. */",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "/* Define to 1 if you have the <arpa/tftp.h> header file. */",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "/* Define to 1 if you have the <assert.h> header file. */",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "/* Define to 1 if you have the `basename' function. */",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "/* Define to 1 if bool is an available type. */",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "/* Define to 1 if you have the clock_gettime function and monotonic timer. */",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "/* Define to 1 if you have the `closesocket' function. */",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "/* Define to 1 if you have the `CRYPTO_cleanup_all_ex_data' function. */",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "/* Define to 1 if you have the <crypto.h> header file. */",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "/* Define to 1 if you have the <des.h> header file. */",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "/* Define to 1 if you have the <dlfcn.h> header file. */",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "/* Define to 1 if you have the `ENGINE_load_builtin_engines' function. */",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "/* Define to 1 if you have the <errno.h> header file. */",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "/* Define to 1 if you have the <err.h> header file. */",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "/* Define to 1 if you have the fcntl function. */",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "/* Define to 1 if you have the <fcntl.h> header file. */",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "/* Define to 1 if you have a working fcntl O_NONBLOCK function. */",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "/* Define to 1 if you have the fdopen function. */",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "/* Define to 1 if you have the `fork' function. */",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "/* Define to 1 if you have the freeaddrinfo function. */",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "/* Define to 1 if you have the freeifaddrs function. */",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "/* Define to 1 if you have the ftruncate function. */",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "/* Define to 1 if you have a working getaddrinfo function. */",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "/* Define to 1 if you have the `geteuid' function. */",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "/* Define to 1 if you have the gethostbyaddr function. */",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "/* Define to 1 if you have the gethostbyaddr_r function. */",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "/* gethostbyaddr_r() takes 5 args */",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "/* gethostbyaddr_r() takes 7 args */",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "/* gethostbyaddr_r() takes 8 args */",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "/* Define to 1 if you have the gethostbyname function. */",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "/* Define to 1 if you have the gethostbyname_r function. */",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "/* gethostbyname_r() takes 3 args */",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "/* gethostbyname_r() takes 5 args */",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "/* gethostbyname_r() takes 6 args */",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "/* Define to 1 if you have the gethostname function. */",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "/* Define to 1 if you have a working getifaddrs function. */",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "/* Define to 1 if you have the getnameinfo function. */",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "/* Define to 1 if you have the `getpass_r' function. */",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "/* Define to 1 if you have the `getppid' function. */",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "/* Define to 1 if you have the `getprotobyname' function. */",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "/* Define to 1 if you have the `getpwuid' function. */",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "/* Define to 1 if you have the `getrlimit' function. */",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "/* Define to 1 if you have the getservbyport_r function. */",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "/* Define to 1 if you have the `gettimeofday' function. */",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "/* Define to 1 if you have a working glibc-style strerror_r function. */",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "/* Define to 1 if you have a working gmtime_r function. */",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "/* if you have the gssapi libraries */",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "/* Define to 1 if you have the <gssapi/gssapi_generic.h> header file. */",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "/* Define to 1 if you have the <gssapi/gssapi.h> header file. */",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "/* Define to 1 if you have the <gssapi/gssapi_krb5.h> header file. */",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "/* if you have the GNU gssapi libraries */",
        "Line" : 268,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "/* if you have the Heimdal gssapi libraries */",
        "Line" : 271,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "/* if you have the MIT gssapi libraries */",
        "Line" : 274,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "/* Define to 1 if you have the `idna_strerror' function. */",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "/* Define to 1 if you have the `idn_free' function. */",
        "Line" : 280,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "/* Define to 1 if you have the <idn-free.h> header file. */",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "/* Define to 1 if you have the <ifaddrs.h> header file. */",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "96" : {
        "Text" : "/* Define to 1 if you have the `inet_addr' function. */",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "97" : {
        "Text" : "/* Define to 1 if you have the inet_ntoa_r function. */",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "98" : {
        "Text" : "/* inet_ntoa_r() takes 2 args */",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "99" : {
        "Text" : "/* inet_ntoa_r() takes 3 args */",
        "Line" : 298,
        "CharPositionInLine" : 0
      },
      "100" : {
        "Text" : "/* Define to 1 if you have a IPv6 capable working inet_ntop function. */",
        "Line" : 301,
        "CharPositionInLine" : 0
      },
      "101" : {
        "Text" : "/* Define to 1 if you have a IPv6 capable working inet_pton function. */",
        "Line" : 304,
        "CharPositionInLine" : 0
      },
      "102" : {
        "Text" : "/* Define to 1 if you have the <inttypes.h> header file. */",
        "Line" : 307,
        "CharPositionInLine" : 0
      },
      "103" : {
        "Text" : "/* Define to 1 if you have the ioctl function. */",
        "Line" : 310,
        "CharPositionInLine" : 0
      },
      "104" : {
        "Text" : "/* Define to 1 if you have the ioctlsocket function. */",
        "Line" : 313,
        "CharPositionInLine" : 0
      },
      "105" : {
        "Text" : "/* Define to 1 if you have the IoctlSocket camel case function. */",
        "Line" : 316,
        "CharPositionInLine" : 0
      },
      "106" : {
        "Text" : "/* Define to 1 if you have a working IoctlSocket camel case FIONBIO function.\n   */",
        "Line" : 319,
        "CharPositionInLine" : 0
      },
      "107" : {
        "Text" : "/* Define to 1 if you have a working ioctlsocket FIONBIO function. */",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "108" : {
        "Text" : "/* Define to 1 if you have a working ioctl FIONBIO function. */",
        "Line" : 326,
        "CharPositionInLine" : 0
      },
      "109" : {
        "Text" : "/* Define to 1 if you have a working ioctl SIOCGIFADDR function. */",
        "Line" : 329,
        "CharPositionInLine" : 0
      },
      "110" : {
        "Text" : "/* Define to 1 if you have the <io.h> header file. */",
        "Line" : 332,
        "CharPositionInLine" : 0
      },
      "111" : {
        "Text" : "/* if you have the Kerberos4 libraries (including -ldes) */",
        "Line" : 335,
        "CharPositionInLine" : 0
      },
      "112" : {
        "Text" : "/* Define to 1 if you have the `krb_get_our_ip_for_realm' function. */",
        "Line" : 338,
        "CharPositionInLine" : 0
      },
      "113" : {
        "Text" : "/* Define to 1 if you have the <krb.h> header file. */",
        "Line" : 341,
        "CharPositionInLine" : 0
      },
      "114" : {
        "Text" : "/* Define to 1 if you have the lber.h header file. */",
        "Line" : 344,
        "CharPositionInLine" : 0
      },
      "115" : {
        "Text" : "/* Define to 1 if you have the ldapssl.h header file. */",
        "Line" : 347,
        "CharPositionInLine" : 0
      },
      "116" : {
        "Text" : "/* Define to 1 if you have the ldap.h header file. */",
        "Line" : 350,
        "CharPositionInLine" : 0
      },
      "117" : {
        "Text" : "/* Use LDAPS implementation */",
        "Line" : 353,
        "CharPositionInLine" : 0
      },
      "118" : {
        "Text" : "/* Define to 1 if you have the ldap_ssl.h header file. */",
        "Line" : 356,
        "CharPositionInLine" : 0
      },
      "119" : {
        "Text" : "/* Define to 1 if you have the `ldap_url_parse' function. */",
        "Line" : 359,
        "CharPositionInLine" : 0
      },
      "120" : {
        "Text" : "/* Define to 1 if you have the <libgen.h> header file. */",
        "Line" : 362,
        "CharPositionInLine" : 0
      },
      "121" : {
        "Text" : "/* Define to 1 if you have the `idn' library (-lidn). */",
        "Line" : 365,
        "CharPositionInLine" : 0
      },
      "122" : {
        "Text" : "/* Define to 1 if you have the `resolv' library (-lresolv). */",
        "Line" : 368,
        "CharPositionInLine" : 0
      },
      "123" : {
        "Text" : "/* Define to 1 if you have the `resolve' library (-lresolve). */",
        "Line" : 371,
        "CharPositionInLine" : 0
      },
      "124" : {
        "Text" : "/* Define to 1 if you have the `socket' library (-lsocket). */",
        "Line" : 374,
        "CharPositionInLine" : 0
      },
      "125" : {
        "Text" : "/* Define to 1 if you have the `ssh2' library (-lssh2). */",
        "Line" : 377,
        "CharPositionInLine" : 0
      },
      "126" : {
        "Text" : "/* Define to 1 if libssh2 provides `libssh2_version'. */",
        "Line" : 380,
        "CharPositionInLine" : 0
      },
      "127" : {
        "Text" : "/* Define to 1 if libssh2 provides `libssh2_init'. */",
        "Line" : 383,
        "CharPositionInLine" : 0
      },
      "128" : {
        "Text" : "/* Define to 1 if libssh2 provides `libssh2_exit'. */",
        "Line" : 386,
        "CharPositionInLine" : 0
      },
      "129" : {
        "Text" : "/* Define to 1 if libssh2 provides `libssh2_scp_send64'. */",
        "Line" : 389,
        "CharPositionInLine" : 0
      },
      "130" : {
        "Text" : "/* Define to 1 if libssh2 provides `libssh2_session_handshake'. */",
        "Line" : 392,
        "CharPositionInLine" : 0
      },
      "131" : {
        "Text" : "/* Define to 1 if you have the <libssh2.h> header file. */",
        "Line" : 395,
        "CharPositionInLine" : 0
      },
      "132" : {
        "Text" : "/* Define to 1 if you have the `ssl' library (-lssl). */",
        "Line" : 398,
        "CharPositionInLine" : 0
      },
      "133" : {
        "Text" : "/* if zlib is available */",
        "Line" : 401,
        "CharPositionInLine" : 0
      },
      "134" : {
        "Text" : "/* Define to 1 if you have the <limits.h> header file. */",
        "Line" : 404,
        "CharPositionInLine" : 0
      },
      "135" : {
        "Text" : "/* if your compiler supports LL */",
        "Line" : 407,
        "CharPositionInLine" : 0
      },
      "136" : {
        "Text" : "/* Define to 1 if you have the <locale.h> header file. */",
        "Line" : 410,
        "CharPositionInLine" : 0
      },
      "137" : {
        "Text" : "/* Define to 1 if you have a working localtime_r function. */",
        "Line" : 413,
        "CharPositionInLine" : 0
      },
      "138" : {
        "Text" : "/* Define to 1 if the compiler supports the 'long long' data type. */",
        "Line" : 416,
        "CharPositionInLine" : 0
      },
      "139" : {
        "Text" : "/* Define to 1 if you have the malloc.h header file. */",
        "Line" : 419,
        "CharPositionInLine" : 0
      },
      "140" : {
        "Text" : "/* Define to 1 if you have the <memory.h> header file. */",
        "Line" : 422,
        "CharPositionInLine" : 0
      },
      "141" : {
        "Text" : "/* Define to 1 if you have the MSG_NOSIGNAL flag. */",
        "Line" : 425,
        "CharPositionInLine" : 0
      },
      "142" : {
        "Text" : "/* Define to 1 if you have the <netdb.h> header file. */",
        "Line" : 428,
        "CharPositionInLine" : 0
      },
      "143" : {
        "Text" : "/* Define to 1 if you have the <netinet/in.h> header file. */",
        "Line" : 431,
        "CharPositionInLine" : 0
      },
      "144" : {
        "Text" : "/* Define to 1 if you have the <netinet/tcp.h> header file. */",
        "Line" : 434,
        "CharPositionInLine" : 0
      },
      "145" : {
        "Text" : "/* Define to 1 if you have the <net/if.h> header file. */",
        "Line" : 437,
        "CharPositionInLine" : 0
      },
      "146" : {
        "Text" : "/* Define to 1 if NI_WITHSCOPEID exists and works. */",
        "Line" : 440,
        "CharPositionInLine" : 0
      },
      "147" : {
        "Text" : "/* if you have an old MIT gssapi library, lacking GSS_C_NT_HOSTBASED_SERVICE */",
        "Line" : 443,
        "CharPositionInLine" : 0
      },
      "148" : {
        "Text" : "/* Define to 1 if you have the <openssl/crypto.h> header file. */",
        "Line" : 446,
        "CharPositionInLine" : 0
      },
      "149" : {
        "Text" : "/* Define to 1 if you have the <openssl/engine.h> header file. */",
        "Line" : 449,
        "CharPositionInLine" : 0
      },
      "150" : {
        "Text" : "/* Define to 1 if you have the <openssl/err.h> header file. */",
        "Line" : 452,
        "CharPositionInLine" : 0
      },
      "151" : {
        "Text" : "/* Define to 1 if you have the <openssl/pem.h> header file. */",
        "Line" : 455,
        "CharPositionInLine" : 0
      },
      "152" : {
        "Text" : "/* Define to 1 if you have the <openssl/pkcs12.h> header file. */",
        "Line" : 458,
        "CharPositionInLine" : 0
      },
      "153" : {
        "Text" : "/* Define to 1 if you have the <openssl/rsa.h> header file. */",
        "Line" : 461,
        "CharPositionInLine" : 0
      },
      "154" : {
        "Text" : "/* Define to 1 if you have the <openssl/ssl.h> header file. */",
        "Line" : 464,
        "CharPositionInLine" : 0
      },
      "155" : {
        "Text" : "/* Define to 1 if you have the <openssl/x509.h> header file. */",
        "Line" : 467,
        "CharPositionInLine" : 0
      },
      "156" : {
        "Text" : "/* Define to 1 if you have the <pem.h> header file. */",
        "Line" : 470,
        "CharPositionInLine" : 0
      },
      "157" : {
        "Text" : "/* Define to 1 if you have the `perror' function. */",
        "Line" : 473,
        "CharPositionInLine" : 0
      },
      "158" : {
        "Text" : "/* Define to 1 if you have the `pipe' function. */",
        "Line" : 476,
        "CharPositionInLine" : 0
      },
      "159" : {
        "Text" : "/* Define to 1 if you have a working poll function. */",
        "Line" : 479,
        "CharPositionInLine" : 0
      },
      "160" : {
        "Text" : "/* If you have a fine poll */",
        "Line" : 482,
        "CharPositionInLine" : 0
      },
      "161" : {
        "Text" : "/* Define to 1 if you have the <poll.h> header file. */",
        "Line" : 485,
        "CharPositionInLine" : 0
      },
      "162" : {
        "Text" : "/* Define to 1 if you have a working POSIX-style strerror_r function. */",
        "Line" : 488,
        "CharPositionInLine" : 0
      },
      "163" : {
        "Text" : "/* Define to 1 if you have the <pthread.h> header file */",
        "Line" : 491,
        "CharPositionInLine" : 0
      },
      "164" : {
        "Text" : "/* Define to 1 if you have the <pwd.h> header file. */",
        "Line" : 494,
        "CharPositionInLine" : 0
      },
      "165" : {
        "Text" : "/* Define to 1 if you have the `RAND_egd' function. */",
        "Line" : 497,
        "CharPositionInLine" : 0
      },
      "166" : {
        "Text" : "/* Define to 1 if you have the `RAND_screen' function. */",
        "Line" : 500,
        "CharPositionInLine" : 0
      },
      "167" : {
        "Text" : "/* Define to 1 if you have the `RAND_status' function. */",
        "Line" : 503,
        "CharPositionInLine" : 0
      },
      "168" : {
        "Text" : "/* Define to 1 if you have the recv function. */",
        "Line" : 506,
        "CharPositionInLine" : 0
      },
      "169" : {
        "Text" : "/* Define to 1 if you have the recvfrom function. */",
        "Line" : 509,
        "CharPositionInLine" : 0
      },
      "170" : {
        "Text" : "/* Define to 1 if you have the <rsa.h> header file. */",
        "Line" : 512,
        "CharPositionInLine" : 0
      },
      "171" : {
        "Text" : "/* Define to 1 if you have the select function. */",
        "Line" : 515,
        "CharPositionInLine" : 0
      },
      "172" : {
        "Text" : "/* Define to 1 if you have the send function. */",
        "Line" : 518,
        "CharPositionInLine" : 0
      },
      "173" : {
        "Text" : "/* Define to 1 if you have the <setjmp.h> header file. */",
        "Line" : 521,
        "CharPositionInLine" : 0
      },
      "174" : {
        "Text" : "/* Define to 1 if you have the `setlocale' function. */",
        "Line" : 524,
        "CharPositionInLine" : 0
      },
      "175" : {
        "Text" : "/* Define to 1 if you have the `setmode' function. */",
        "Line" : 527,
        "CharPositionInLine" : 0
      },
      "176" : {
        "Text" : "/* Define to 1 if you have the `setrlimit' function. */",
        "Line" : 530,
        "CharPositionInLine" : 0
      },
      "177" : {
        "Text" : "/* Define to 1 if you have the setsockopt function. */",
        "Line" : 533,
        "CharPositionInLine" : 0
      },
      "178" : {
        "Text" : "/* Define to 1 if you have a working setsockopt SO_NONBLOCK function. */",
        "Line" : 536,
        "CharPositionInLine" : 0
      },
      "179" : {
        "Text" : "/* Define to 1 if you have the <sgtty.h> header file. */",
        "Line" : 539,
        "CharPositionInLine" : 0
      },
      "180" : {
        "Text" : "/* Define to 1 if you have the sigaction function. */",
        "Line" : 542,
        "CharPositionInLine" : 0
      },
      "181" : {
        "Text" : "/* Define to 1 if you have the siginterrupt function. */",
        "Line" : 545,
        "CharPositionInLine" : 0
      },
      "182" : {
        "Text" : "/* Define to 1 if you have the signal function. */",
        "Line" : 548,
        "CharPositionInLine" : 0
      },
      "183" : {
        "Text" : "/* Define to 1 if you have the <signal.h> header file. */",
        "Line" : 551,
        "CharPositionInLine" : 0
      },
      "184" : {
        "Text" : "/* Define to 1 if you have the sigsetjmp function or macro. */",
        "Line" : 554,
        "CharPositionInLine" : 0
      },
      "185" : {
        "Text" : "/* Define to 1 if sig_atomic_t is an available typedef. */",
        "Line" : 557,
        "CharPositionInLine" : 0
      },
      "186" : {
        "Text" : "/* Define to 1 if sig_atomic_t is already defined as volatile. */",
        "Line" : 560,
        "CharPositionInLine" : 0
      },
      "187" : {
        "Text" : "/* Define to 1 if struct sockaddr_in6 has the sin6_scope_id member */",
        "Line" : 563,
        "CharPositionInLine" : 0
      },
      "188" : {
        "Text" : "/* Define to 1 if you have the `socket' function. */",
        "Line" : 566,
        "CharPositionInLine" : 0
      },
      "189" : {
        "Text" : "/* Define to 1 if you have the `SSL_get_shutdown' function. */",
        "Line" : 569,
        "CharPositionInLine" : 0
      },
      "190" : {
        "Text" : "/* Define to 1 if you have the <ssl.h> header file. */",
        "Line" : 572,
        "CharPositionInLine" : 0
      },
      "191" : {
        "Text" : "/* Define to 1 if you have the <stdbool.h> header file. */",
        "Line" : 575,
        "CharPositionInLine" : 0
      },
      "192" : {
        "Text" : "/* Define to 1 if you have the <stdint.h> header file. */",
        "Line" : 578,
        "CharPositionInLine" : 0
      },
      "193" : {
        "Text" : "/* Define to 1 if you have the <stdio.h> header file. */",
        "Line" : 581,
        "CharPositionInLine" : 0
      },
      "194" : {
        "Text" : "/* Define to 1 if you have the <stdlib.h> header file. */",
        "Line" : 584,
        "CharPositionInLine" : 0
      },
      "195" : {
        "Text" : "/* Define to 1 if you have the strcasecmp function. */",
        "Line" : 587,
        "CharPositionInLine" : 0
      },
      "196" : {
        "Text" : "/* Define to 1 if you have the strcasestr function. */",
        "Line" : 590,
        "CharPositionInLine" : 0
      },
      "197" : {
        "Text" : "/* Define to 1 if you have the strcmpi function. */",
        "Line" : 593,
        "CharPositionInLine" : 0
      },
      "198" : {
        "Text" : "/* Define to 1 if you have the strdup function. */",
        "Line" : 596,
        "CharPositionInLine" : 0
      },
      "199" : {
        "Text" : "/* Define to 1 if you have the strerror_r function. */",
        "Line" : 599,
        "CharPositionInLine" : 0
      },
      "200" : {
        "Text" : "/* Define to 1 if you have the stricmp function. */",
        "Line" : 602,
        "CharPositionInLine" : 0
      },
      "201" : {
        "Text" : "/* Define to 1 if you have the <strings.h> header file. */",
        "Line" : 605,
        "CharPositionInLine" : 0
      },
      "202" : {
        "Text" : "/* Define to 1 if you have the <string.h> header file. */",
        "Line" : 608,
        "CharPositionInLine" : 0
      },
      "203" : {
        "Text" : "/* Define to 1 if you have the strlcat function. */",
        "Line" : 611,
        "CharPositionInLine" : 0
      },
      "204" : {
        "Text" : "/* Define to 1 if you have the `strlcpy' function. */",
        "Line" : 614,
        "CharPositionInLine" : 0
      },
      "205" : {
        "Text" : "/* Define to 1 if you have the strncasecmp function. */",
        "Line" : 617,
        "CharPositionInLine" : 0
      },
      "206" : {
        "Text" : "/* Define to 1 if you have the strncmpi function. */",
        "Line" : 620,
        "CharPositionInLine" : 0
      },
      "207" : {
        "Text" : "/* Define to 1 if you have the strnicmp function. */",
        "Line" : 623,
        "CharPositionInLine" : 0
      },
      "208" : {
        "Text" : "/* Define to 1 if you have the <stropts.h> header file. */",
        "Line" : 626,
        "CharPositionInLine" : 0
      },
      "209" : {
        "Text" : "/* Define to 1 if you have the strstr function. */",
        "Line" : 629,
        "CharPositionInLine" : 0
      },
      "210" : {
        "Text" : "/* Define to 1 if you have the strtok_r function. */",
        "Line" : 632,
        "CharPositionInLine" : 0
      },
      "211" : {
        "Text" : "/* Define to 1 if you have the strtoll function. */",
        "Line" : 635,
        "CharPositionInLine" : 0
      },
      "212" : {
        "Text" : "/* if struct sockaddr_storage is defined */",
        "Line" : 638,
        "CharPositionInLine" : 0
      },
      "213" : {
        "Text" : "/* Define to 1 if you have the timeval struct. */",
        "Line" : 641,
        "CharPositionInLine" : 0
      },
      "214" : {
        "Text" : "/* Define to 1 if you have the <sys/filio.h> header file. */",
        "Line" : 644,
        "CharPositionInLine" : 0
      },
      "215" : {
        "Text" : "/* Define to 1 if you have the <sys/ioctl.h> header file. */",
        "Line" : 647,
        "CharPositionInLine" : 0
      },
      "216" : {
        "Text" : "/* Define to 1 if you have the <sys/param.h> header file. */",
        "Line" : 650,
        "CharPositionInLine" : 0
      },
      "217" : {
        "Text" : "/* Define to 1 if you have the <sys/poll.h> header file. */",
        "Line" : 653,
        "CharPositionInLine" : 0
      },
      "218" : {
        "Text" : "/* Define to 1 if you have the <sys/resource.h> header file. */",
        "Line" : 656,
        "CharPositionInLine" : 0
      },
      "219" : {
        "Text" : "/* Define to 1 if you have the <sys/select.h> header file. */",
        "Line" : 659,
        "CharPositionInLine" : 0
      },
      "220" : {
        "Text" : "/* Define to 1 if you have the <sys/socket.h> header file. */",
        "Line" : 662,
        "CharPositionInLine" : 0
      },
      "221" : {
        "Text" : "/* Define to 1 if you have the <sys/sockio.h> header file. */",
        "Line" : 665,
        "CharPositionInLine" : 0
      },
      "222" : {
        "Text" : "/* Define to 1 if you have the <sys/stat.h> header file. */",
        "Line" : 668,
        "CharPositionInLine" : 0
      },
      "223" : {
        "Text" : "/* Define to 1 if you have the <sys/time.h> header file. */",
        "Line" : 671,
        "CharPositionInLine" : 0
      },
      "224" : {
        "Text" : "/* Define to 1 if you have the <sys/types.h> header file. */",
        "Line" : 674,
        "CharPositionInLine" : 0
      },
      "225" : {
        "Text" : "/* Define to 1 if you have the <sys/uio.h> header file. */",
        "Line" : 677,
        "CharPositionInLine" : 0
      },
      "226" : {
        "Text" : "/* Define to 1 if you have the <sys/un.h> header file. */",
        "Line" : 680,
        "CharPositionInLine" : 0
      },
      "227" : {
        "Text" : "/* Define to 1 if you have the <sys/utime.h> header file. */",
        "Line" : 683,
        "CharPositionInLine" : 0
      },
      "228" : {
        "Text" : "/* Define to 1 if you have the <termios.h> header file. */",
        "Line" : 686,
        "CharPositionInLine" : 0
      },
      "229" : {
        "Text" : "/* Define to 1 if you have the <termio.h> header file. */",
        "Line" : 689,
        "CharPositionInLine" : 0
      },
      "230" : {
        "Text" : "/* Define to 1 if you have the <time.h> header file. */",
        "Line" : 692,
        "CharPositionInLine" : 0
      },
      "231" : {
        "Text" : "/* Define to 1 if you have the <tld.h> header file. */",
        "Line" : 695,
        "CharPositionInLine" : 0
      },
      "232" : {
        "Text" : "/* Define to 1 if you have the `tld_strerror' function. */",
        "Line" : 698,
        "CharPositionInLine" : 0
      },
      "233" : {
        "Text" : "/* Define to 1 if you have the `uname' function. */",
        "Line" : 701,
        "CharPositionInLine" : 0
      },
      "234" : {
        "Text" : "/* Define to 1 if you have the <unistd.h> header file. */",
        "Line" : 704,
        "CharPositionInLine" : 0
      },
      "235" : {
        "Text" : "/* Define to 1 if you have the `utime' function. */",
        "Line" : 707,
        "CharPositionInLine" : 0
      },
      "236" : {
        "Text" : "/* Define to 1 if you have the <utime.h> header file. */",
        "Line" : 710,
        "CharPositionInLine" : 0
      },
      "237" : {
        "Text" : "/* Define to 1 if compiler supports C99 variadic macro style. */",
        "Line" : 713,
        "CharPositionInLine" : 0
      },
      "238" : {
        "Text" : "/* Define to 1 if compiler supports old gcc variadic macro style. */",
        "Line" : 716,
        "CharPositionInLine" : 0
      },
      "239" : {
        "Text" : "/* Define to 1 if you have the winber.h header file. */",
        "Line" : 719,
        "CharPositionInLine" : 0
      },
      "240" : {
        "Text" : "/* Define to 1 if you have the windows.h header file. */",
        "Line" : 722,
        "CharPositionInLine" : 0
      },
      "241" : {
        "Text" : "/* Define to 1 if you have the winldap.h header file. */",
        "Line" : 725,
        "CharPositionInLine" : 0
      },
      "242" : {
        "Text" : "/* Define to 1 if you have the winsock2.h header file. */",
        "Line" : 728,
        "CharPositionInLine" : 0
      },
      "243" : {
        "Text" : "/* Define to 1 if you have the winsock.h header file. */",
        "Line" : 731,
        "CharPositionInLine" : 0
      },
      "244" : {
        "Text" : "/* Define this symbol if your OS supports changing the contents of argv */",
        "Line" : 734,
        "CharPositionInLine" : 0
      },
      "245" : {
        "Text" : "/* Define to 1 if you have the writev function. */",
        "Line" : 737,
        "CharPositionInLine" : 0
      },
      "246" : {
        "Text" : "/* Define to 1 if you have the ws2tcpip.h header file. */",
        "Line" : 740,
        "CharPositionInLine" : 0
      },
      "247" : {
        "Text" : "/* Define to 1 if you have the <x509.h> header file. */",
        "Line" : 743,
        "CharPositionInLine" : 0
      },
      "248" : {
        "Text" : "/* Define if you have the <process.h> header file. */",
        "Line" : 746,
        "CharPositionInLine" : 0
      },
      "249" : {
        "Text" : "/* if you have the zlib.h header file */",
        "Line" : 749,
        "CharPositionInLine" : 0
      },
      "250" : {
        "Text" : "/* Define to the sub-directory in which libtool stores uninstalled libraries.\n   */",
        "Line" : 752,
        "CharPositionInLine" : 0
      },
      "251" : {
        "Text" : "/* If you lack a fine basename() prototype */",
        "Line" : 756,
        "CharPositionInLine" : 0
      },
      "252" : {
        "Text" : "/* Define to 1 if you need the lber.h header file even with ldap.h */",
        "Line" : 759,
        "CharPositionInLine" : 0
      },
      "253" : {
        "Text" : "/* Define to 1 if you need the malloc.h header file even with stdlib.h */",
        "Line" : 762,
        "CharPositionInLine" : 0
      },
      "254" : {
        "Text" : "/* Define to 1 if _REENTRANT preprocessor symbol must be defined. */",
        "Line" : 765,
        "CharPositionInLine" : 0
      },
      "255" : {
        "Text" : "/* cpu-machine-OS */",
        "Line" : 768,
        "CharPositionInLine" : 0
      },
      "256" : {
        "Text" : "/* Name of package */",
        "Line" : 771,
        "CharPositionInLine" : 0
      },
      "257" : {
        "Text" : "/* Define to the address where bug reports for this package should be sent. */",
        "Line" : 774,
        "CharPositionInLine" : 0
      },
      "258" : {
        "Text" : "/* Define to the full name of this package. */",
        "Line" : 777,
        "CharPositionInLine" : 0
      },
      "259" : {
        "Text" : "/* Define to the full name and version of this package. */",
        "Line" : 780,
        "CharPositionInLine" : 0
      },
      "260" : {
        "Text" : "/* Define to the one symbol short name of this package. */",
        "Line" : 783,
        "CharPositionInLine" : 0
      },
      "261" : {
        "Text" : "/* Define to the version of this package. */",
        "Line" : 786,
        "CharPositionInLine" : 0
      },
      "262" : {
        "Text" : "/* a suitable file to read random data from */",
        "Line" : 789,
        "CharPositionInLine" : 0
      },
      "263" : {
        "Text" : "/* Define to the type of arg 1 for recvfrom. */",
        "Line" : 792,
        "CharPositionInLine" : 0
      },
      "264" : {
        "Text" : "/* Define to the type pointed by arg 2 for recvfrom. */",
        "Line" : 795,
        "CharPositionInLine" : 0
      },
      "265" : {
        "Text" : "/* Define to 1 if the type pointed by arg 2 for recvfrom is void. */",
        "Line" : 798,
        "CharPositionInLine" : 0
      },
      "266" : {
        "Text" : "/* Define to the type of arg 3 for recvfrom. */",
        "Line" : 801,
        "CharPositionInLine" : 0
      },
      "267" : {
        "Text" : "/* Define to the type of arg 4 for recvfrom. */",
        "Line" : 804,
        "CharPositionInLine" : 0
      },
      "268" : {
        "Text" : "/* Define to the type pointed by arg 5 for recvfrom. */",
        "Line" : 807,
        "CharPositionInLine" : 0
      },
      "269" : {
        "Text" : "/* Define to 1 if the type pointed by arg 5 for recvfrom is void. */",
        "Line" : 810,
        "CharPositionInLine" : 0
      },
      "270" : {
        "Text" : "/* Define to the type pointed by arg 6 for recvfrom. */",
        "Line" : 813,
        "CharPositionInLine" : 0
      },
      "271" : {
        "Text" : "/* Define to 1 if the type pointed by arg 6 for recvfrom is void. */",
        "Line" : 816,
        "CharPositionInLine" : 0
      },
      "272" : {
        "Text" : "/* Define to the function return type for recvfrom. */",
        "Line" : 819,
        "CharPositionInLine" : 0
      },
      "273" : {
        "Text" : "/* Define to the type of arg 1 for recv. */",
        "Line" : 822,
        "CharPositionInLine" : 0
      },
      "274" : {
        "Text" : "/* Define to the type of arg 2 for recv. */",
        "Line" : 825,
        "CharPositionInLine" : 0
      },
      "275" : {
        "Text" : "/* Define to the type of arg 3 for recv. */",
        "Line" : 828,
        "CharPositionInLine" : 0
      },
      "276" : {
        "Text" : "/* Define to the type of arg 4 for recv. */",
        "Line" : 831,
        "CharPositionInLine" : 0
      },
      "277" : {
        "Text" : "/* Define to the function return type for recv. */",
        "Line" : 834,
        "CharPositionInLine" : 0
      },
      "278" : {
        "Text" : "/* Define as the return type of signal handlers (`int' or `void'). */",
        "Line" : 837,
        "CharPositionInLine" : 0
      },
      "279" : {
        "Text" : "/* Define to the type qualifier of arg 5 for select. */",
        "Line" : 840,
        "CharPositionInLine" : 0
      },
      "280" : {
        "Text" : "/* Define to the type of arg 1 for select. */",
        "Line" : 843,
        "CharPositionInLine" : 0
      },
      "281" : {
        "Text" : "/* Define to the type of args 2, 3 and 4 for select. */",
        "Line" : 846,
        "CharPositionInLine" : 0
      },
      "282" : {
        "Text" : "/* Define to the type of arg 5 for select. */",
        "Line" : 849,
        "CharPositionInLine" : 0
      },
      "283" : {
        "Text" : "/* Define to the function return type for select. */",
        "Line" : 852,
        "CharPositionInLine" : 0
      },
      "284" : {
        "Text" : "/* Define to the type qualifier of arg 2 for send. */",
        "Line" : 855,
        "CharPositionInLine" : 0
      },
      "285" : {
        "Text" : "/* Define to the type of arg 1 for send. */",
        "Line" : 858,
        "CharPositionInLine" : 0
      },
      "286" : {
        "Text" : "/* Define to the type of arg 2 for send. */",
        "Line" : 861,
        "CharPositionInLine" : 0
      },
      "287" : {
        "Text" : "/* Define to the type of arg 3 for send. */",
        "Line" : 864,
        "CharPositionInLine" : 0
      },
      "288" : {
        "Text" : "/* Define to the type of arg 4 for send. */",
        "Line" : 867,
        "CharPositionInLine" : 0
      },
      "289" : {
        "Text" : "/* Define to the function return type for send. */",
        "Line" : 870,
        "CharPositionInLine" : 0
      },
      "290" : {
        "Text" : "/* The size of `int', as computed by sizeof. */",
        "Line" : 873,
        "CharPositionInLine" : 0
      },
      "291" : {
        "Text" : "/* The size of `short', as computed by sizeof. */",
        "Line" : 876,
        "CharPositionInLine" : 0
      },
      "292" : {
        "Text" : "/* The size of `long', as computed by sizeof. */",
        "Line" : 879,
        "CharPositionInLine" : 0
      },
      "293" : {
        "Text" : "/* The size of `off_t', as computed by sizeof. */",
        "Line" : 882,
        "CharPositionInLine" : 0
      },
      "294" : {
        "Text" : "/* The size of `size_t', as computed by sizeof. */",
        "Line" : 885,
        "CharPositionInLine" : 0
      },
      "295" : {
        "Text" : "/* The size of `time_t', as computed by sizeof. */",
        "Line" : 888,
        "CharPositionInLine" : 0
      },
      "296" : {
        "Text" : "/* The size of `void*', as computed by sizeof. */",
        "Line" : 891,
        "CharPositionInLine" : 0
      },
      "297" : {
        "Text" : "/* Define to 1 if you have the ANSI C header files. */",
        "Line" : 894,
        "CharPositionInLine" : 0
      },
      "298" : {
        "Text" : "/* Define to the type of arg 3 for strerror_r. */",
        "Line" : 897,
        "CharPositionInLine" : 0
      },
      "299" : {
        "Text" : "/* Define to 1 if you can safely include both <sys/time.h> and <time.h>. */",
        "Line" : 900,
        "CharPositionInLine" : 0
      },
      "300" : {
        "Text" : "/* Define if you want to enable c-ares support */",
        "Line" : 903,
        "CharPositionInLine" : 0
      },
      "301" : {
        "Text" : "/* Define if you want to enable POSIX threaded DNS lookup */",
        "Line" : 906,
        "CharPositionInLine" : 0
      },
      "302" : {
        "Text" : "/* Define to disable non-blocking sockets. */",
        "Line" : 909,
        "CharPositionInLine" : 0
      },
      "303" : {
        "Text" : "/* if GnuTLS is enabled */",
        "Line" : 912,
        "CharPositionInLine" : 0
      },
      "304" : {
        "Text" : "/* if PolarSSL is enabled */",
        "Line" : 915,
        "CharPositionInLine" : 0
      },
      "305" : {
        "Text" : "/* if libSSH2 is in use */",
        "Line" : 918,
        "CharPositionInLine" : 0
      },
      "306" : {
        "Text" : "/* If you want to build curl with the built-in manual */",
        "Line" : 921,
        "CharPositionInLine" : 0
      },
      "307" : {
        "Text" : "/* if NSS is enabled */",
        "Line" : 924,
        "CharPositionInLine" : 0
      },
      "308" : {
        "Text" : "/* if you want to use OpenLDAP code instead of legacy ldap implementation */",
        "Line" : 927,
        "CharPositionInLine" : 0
      },
      "309" : {
        "Text" : "/* if OpenSSL is in use */",
        "Line" : 930,
        "CharPositionInLine" : 0
      },
      "310" : {
        "Text" : "/* if Unix domain sockets are enabled  */",
        "Line" : 933,
        "CharPositionInLine" : 0
      },
      "311" : {
        "Text" : "/* Define to 1 if you are building a Windows target without large file\n   support. */",
        "Line" : 936,
        "CharPositionInLine" : 0
      },
      "312" : {
        "Text" : "/* to enable SSPI support */",
        "Line" : 940,
        "CharPositionInLine" : 0
      },
      "313" : {
        "Text" : "/* to enable Windows SSL  */",
        "Line" : 943,
        "CharPositionInLine" : 0
      },
      "314" : {
        "Text" : "/* Define to 1 if using yaSSL in OpenSSL compatibility mode. */",
        "Line" : 946,
        "CharPositionInLine" : 0
      },
      "315" : {
        "Text" : "/* Version number of package */",
        "Line" : 949,
        "CharPositionInLine" : 0
      },
      "316" : {
        "Text" : "/* Define to avoid automatic inclusion of winsock.h */",
        "Line" : 952,
        "CharPositionInLine" : 0
      },
      "317" : {
        "Text" : "/* Define to 1 if OS is AIX. */",
        "Line" : 955,
        "CharPositionInLine" : 0
      },
      "318" : {
        "Text" : "/* Number of bits in a file offset, on hosts where this is settable. */",
        "Line" : 960,
        "CharPositionInLine" : 0
      },
      "319" : {
        "Text" : "/* Define for large files, on AIX-style hosts. */",
        "Line" : 963,
        "CharPositionInLine" : 0
      },
      "320" : {
        "Text" : "/* define this if you need it to compile thread-safe code */",
        "Line" : 966,
        "CharPositionInLine" : 0
      },
      "321" : {
        "Text" : "/* Define to empty if `const' does not conform to ANSI C. */",
        "Line" : 969,
        "CharPositionInLine" : 0
      },
      "322" : {
        "Text" : "/* Type to use in place of in_addr_t when system does not provide it. */",
        "Line" : 972,
        "CharPositionInLine" : 0
      },
      "323" : {
        "Text" : "/* Define to `__inline__' or `__inline' if that's what the C compiler\n   calls it, or to nothing if 'inline' is not supported under any name.  */",
        "Line" : 975,
        "CharPositionInLine" : 0
      },
      "324" : {
        "Text" : "/* Define to `unsigned int' if <sys/types.h> does not define. */",
        "Line" : 981,
        "CharPositionInLine" : 0
      },
      "325" : {
        "Text" : "/* the signed version of size_t */",
        "Line" : 984,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 326
    },
    "Server/trunk/curl-7.47.1/packages/AIX/Makefile.am" : {
      "ObjectId" : "4b038ed31cae1c50dced08e47553ec3c0a30f876",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Server/trunk/curl-7.47.1/packages/AIX/RPM/Makefile.am" : {
      "ObjectId" : "d1e7bf9d93b88441b805d4e3a4fa2767e19d8de8",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Server/trunk/curl-7.47.1/packages/EPM/Makefile.am" : {
      "ObjectId" : "b010a4b038a27b2c186d7c5023e81d1162b8e5c5",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Server/trunk/curl-7.47.1/packages/Linux/Makefile.am" : {
      "ObjectId" : "5753055799b263c6fcba124906fdfe3332459e4d",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Server/trunk/curl-7.47.1/packages/Linux/RPM/Makefile.am" : {
      "ObjectId" : "5d46d87c67100c702b4706d42fac6ba72498b660",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Server/trunk/curl-7.47.1/packages/Makefile.am" : {
      "ObjectId" : "bef04f3c2e5c5415bf697b71659f5cdec3734dad",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Server/trunk/curl-7.47.1/packages/Solaris/Makefile.am" : {
      "ObjectId" : "d0129479f072d583a38701e2f916d52f28774eb4",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Server/trunk/curl-7.47.1/packages/Win32/Makefile.am" : {
      "ObjectId" : "93350ea13f97c27ec33b2764c1ea4c49b749a931",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Server/trunk/curl-7.47.1/packages/Win32/cygwin/Makefile.am" : {
      "ObjectId" : "b56148dc928eb63f7e7f00e454a65fffa3cff955",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#\n\n# Build a Cygwin binary tar ball\n\n#\n\n# Read the README file for details on using this Makefile\n\n#\n\n# NOTE: As I'm not particularly familiar with Makefiles, this was the\n\n#  best I could come up with. It should probably be enhanced someday\n\n#  to actually use the correct target and pre-requisite names, etc...\n\n#  If anyone else wants to volunteer, feel free ;-)\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Cygwin build number (default to \"1\")\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Cygwin tarball build dir (fully-qualified name, gets deleted when done)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# $(STRIP) $(cygwintmp)/usr/bin/cygcurl-?.dll\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# copy some files into the binary install dir\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# copy some files into the -dev install dir, remove some from binary\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# create both tar files, and delete tmp folders\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "Server/trunk/curl-7.47.1/packages/vms/Makefile.am" : {
      "ObjectId" : "38f65859a3afc8a585a0775d5f54a83788164f61",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Server/trunk/curl-7.47.1/scripts/Makefile.am" : {
      "ObjectId" : "ef41454427256896d86a4485f81f3adf7d84db72",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#***************************************************************************\n\n#                                  _   _ ____  _\n\n#  Project                     ___| | | |  _ \\| |\n\n#                             / __| | | | |_) | |\n\n#                            | (__| |_| |  _ <| |___\n\n#                             \\___|\\___/|_| \\_\\_____|\n\n#\n\n# Copyright (C) 1998 - 2015, Daniel Stenberg, <daniel@haxx.se>, et al.\n\n#\n\n# This software is licensed as described in the file COPYING, which\n\n# you should have received as part of this distribution. The terms\n\n# are also available at https://curl.haxx.se/docs/copyright.html.\n\n#\n\n# You may opt to use, copy, modify, merge, publish, distribute and/or sell\n\n# copies of the Software, and permit persons to whom the Software is\n\n# furnished to do so, under the terms of the COPYING file.\n\n#\n\n# This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTY OF ANY\n\n# KIND, either express or implied.\n\n#\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# if not cross-compiling:\n",
        "Line" : 32,
        "CharPositionInLine" : 5
      },
      "2" : {
        "Text" : "# if not cross-compiling:\n",
        "Line" : 40,
        "CharPositionInLine" : 5
      },
      "CommentCount" : 3
    },
    "Server/trunk/curl-7.47.1/src/CMakeLists.txt" : {
      "ObjectId" : "cfcefb3962d09353c47cc1135a4eaa819e05f18a",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use the C locale to ensure that only ASCII characters appear in the\n\n# embedded text. NROFF and MANOPT are set in the parent CMakeLists.txt\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# CURL_FILES comes from Makefile.inc\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# To be able to reach \"curl_setup_once.h\"\n\n# To be able to reach \"curl_config.h\"\n\n# To be able to reach \"curl/curlbuild.h\"\n",
        "Line" : 57,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "# This is needed as tool_hugehelp.c is generated in the binary dir\n",
        "Line" : 60,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# To be able to reach \"tool_hugehelp.h\"\n",
        "Line" : 61,
        "CharPositionInLine" : 32
      },
      "5" : {
        "Text" : "#Build cURL executable\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "################################################################################\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#SET_TARGET_PROPERTIES(${EXE_NAME} ARCHIVE_OUTPUT_DIRECTORY \"blah blah blah\")\n\n#SET_TARGET_PROPERTIES(${EXE_NAME} RUNTIME_OUTPUT_DIRECTORY \"blah blah blah\")\n\n#SET_TARGET_PROPERTIES(${EXE_NAME} LIBRARY_OUTPUT_DIRECTORY \"blah blah blah\")\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add the postfix to the executable since it is not added automatically as for modules and shared libraries\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#INCLUDE(ModuleInstall OPTIONAL)\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "Server/trunk/curl-7.47.1/src/Makefile.am" : {
      "ObjectId" : "535a740a55e15c5916c6bdc186ef6426c1720992",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#***************************************************************************\n\n#                                  _   _ ____  _\n\n#  Project                     ___| | | |  _ \\| |\n\n#                             / __| | | | |_) | |\n\n#                            | (__| |_| |  _ <| |___\n\n#                             \\___|\\___/|_| \\_\\_____|\n\n#\n\n# Copyright (C) 1998 - 2015, Daniel Stenberg, <daniel@haxx.se>, et al.\n\n#\n\n# This software is licensed as described in the file COPYING, which\n\n# you should have received as part of this distribution. The terms\n\n# are also available at https://curl.haxx.se/docs/copyright.html.\n\n#\n\n# You may opt to use, copy, modify, merge, publish, distribute and/or sell\n\n# copies of the Software, and permit persons to whom the Software is\n\n# furnished to do so, under the terms of the COPYING file.\n\n#\n\n# This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTY OF ANY\n\n# KIND, either express or implied.\n\n#\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# remove targets if the command fails\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Specify our include paths here, and do it relative to $(top_srcdir) and\n\n# $(top_builddir), to ensure that these paths which belong to the library\n\n# being currently built and tested are searched before the library which\n\n# might possibly already be installed in the system.\n\n#\n\n# $(top_builddir)/include/curl for generated curlbuild.h included from curl.h\n\n# $(top_builddir)/include for generated curlbuild.h inc. from lib/curl_setup.h\n\n# $(top_srcdir)/include is for libcurl's external include files\n\n# $(top_builddir)/lib is for libcurl's generated lib/curl_config.h file\n\n# $(top_builddir)/src is for curl's generated src/curl_config.h file\n\n# $(top_srcdir)/lib for libcurl's lib/curl_setup.h and other \"borrowed\" files\n\n# $(top_srcdir)/src is for curl's src/tool_setup.h and \"curl-private\" files\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# CURL_FILES comes from Makefile.inc\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This might hold -Werror\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Prevent LIBS from being used for all link targets\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# if unit tests are enabled, build a static library to link them with\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Use the C locale to ensure that only ASCII characters appear in the\n\n# embedded text.\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# figured out by the configure script\n",
        "Line" : 89,
        "CharPositionInLine" : 36
      },
      "9" : {
        "Text" : "# Here are the stuff to create a built-in manual\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# This generates the tool_hugehelp.c file in both uncompressed and\n\n# compressed formats\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# HAVE_LIBZ\n",
        "Line" : 115,
        "CharPositionInLine" : 5
      },
      "12" : {
        "Text" : "# This generates the tool_hugehelp.c file uncompressed only\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# USE_MANUAL\n",
        "Line" : 122,
        "CharPositionInLine" : 5
      },
      "14" : {
        "Text" : "# built-in manual has been disabled, make a blank file\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# ignore tool_hugehelp.c since it is generated source code and it plays\n\n# by slightly different rules!\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# for debug builds, we scan the sources on all regular make invokes\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "Server/trunk/flann-1.8.4-src/CMakeLists.txt" : {
      "ObjectId" : "3279915846feb125a81b65eec866adea333f5d57",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMAKE_C_COMPILER_ID and CMAKE_CXX_COMPILER_ID are documented as internal variables subject to\n\n# change at: http://www.cmake.org/cmake/help/v2.8.8/cmake.html#variable:CMAKE_LANG_COMPILER_ID\n\n# however currently this seems the most robust way to detect the presence of the Clang compiler\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add an \"uninstall\" target\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the build type.  Options are:\n\n#  Debug          : w/ debug symbols, w/o optimization\n\n#  Release        : w/o debug symbols, w/ optimization\n\n#  RelWithDebInfo : w/ debug symbols, w/ optimization\n\n#  MinSizeRel     : w/o debug symbols, w/ optimization, stripped binaries\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#set(CMAKE_BUILD_TYPE Release)\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#set(CMAKE_BUILD_TYPE Debug)\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#set the default path for built executables to the \"bin\" directory\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#set the default path for built libraries to the \"lib\" directory\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# set output path for tests\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# find python\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Parallel HDF5 needs to find the \"mpi.h\" header file\n",
        "Line" : 88,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# CUDA support\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#set the C/C++ include path to the \"include\" directory\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# require proper c++\n\n#add_definitions( \"-Wall -ansi -pedantic\" )\n\n# HDF5 uses long long which is not ansi\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# lots of warnings with cl.exe right now, use /W1\n",
        "Line" : 150,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# CPACK options\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# RPM\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# DEB\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# NSIS\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# dpkg\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "Server/trunk/flann-1.8.4-src/src/CMakeLists.txt" : {
      "ObjectId" : "911a573f2eb6becc094229fbde75ce3a8add2662",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Server/trunk/flann-1.8.4-src/src/cpp/CMakeLists.txt" : {
      "ObjectId" : "78a204a3c8cf068facc872e1d3d823ae9ec2d55c",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#include_directories(${CMAKE_SOURCE_DIR}/include algorithms util nn .)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# \ttarget_link_libraries(flann_cuda cudpp_x86_64)\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "Server/trunk/flann-1.8.4-src/src/matlab/CMakeLists.txt" : {
      "ObjectId" : "2fc0f6aa06e82217d52702e3c73fe4c8f53c3d69",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#IF(WIN32)\n\n#    SET(MEXEXT_CMD cmd /C mexext)\n\n#ELSE(WIN32)\n\n#    SET(MEXEXT_CMD mexext)\n\n#ENDIF(WIN32)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Server/trunk/flann-1.8.4-src/src/python/CMakeLists.txt" : {
      "ObjectId" : "5057221481763c5aa1a1e5f07012a1c35857e053",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# python instalation\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Server/trunk/jsoncpp-0.5.0/CMakeLists.txt" : {
      "ObjectId" : "462785c06974cbd2dc6af7e1bf633c694b3a8918",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Author: LiXizhi\n\n# Company: ParaEngine.com\n\n# Date: 2010.10.4\n\n# Note: this is fast json reader/writer. we switched to it from tinyjson(boost spirit)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# source files for tinyxpath\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# SOURCE_GROUP(\"header\" FILES ${jsoncpp_headers})\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# SOURCE_GROUP(\"source\" FILES ${jsoncpp_sources})\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# statically link MSVC to reduce dependancies\n",
        "Line" : 29,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 5
    },
    "Server/trunk/libiconv/CMakeLists.txt" : {
      "ObjectId" : "fdac94a2121345ad027f71fb5443f0cc09178a6e",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# clear variable\n",
        "Line" : 16,
        "CharPositionInLine" : 32
      },
      "1" : {
        "Text" : "# statically link MSVC to reduce dependancies\n",
        "Line" : 55,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# /GR- Remove RTTI to miminize the executable size\n",
        "Line" : 65,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 3
    },
    "Server/trunk/lua-5.1.4/CMakeLists.txt" : {
      "ObjectId" : "dc1fb23244d27255b7fae3bf7bceb45949361661",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Author: LiXizhi\n\n# Company: ParaEngine.com\n\n# Date: 2009.4.5, this is actually lua 5.1.5 patched with coco(coroutine)\n\n# Note: download lua src, \n\n# O edit luaconf.h. and edit luaconf.h as below:\n\n# #define LUA_IDSIZE\t120\n\n# #define LUA_COMPAT_GETN\n\n# add npl_compiler.c(h) file to the source\n\n# and then use cmake to compile\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# source files for lua\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# src/luac.c src/lua.c\n\n# Note: added by LiXizhi 2010.3.15, which is exported from src/luac.c\n\n# src/npl_compiler.c src/npl_compiler.h\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# statically link MSVC to reduce dependancies\n",
        "Line" : 33,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# /GR- Remove RTTI to miminize the executable size\n",
        "Line" : 43,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# the following will build lua as dll, the reason for this, is that we need its pdb files for debugging using decoda (a lua debugger). \n\n# plus it also makes core game engine update more granular. \n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# generate program database (PDB symbol files even in release build)\n",
        "Line" : 63,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# To turn size optimisations on again\n",
        "Line" : 66,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# add a stripped version of symbol files during release build\n",
        "Line" : 68,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# SET_TARGET_PROPERTIES(lua PROPERTIES OUTPUT_NAME \"lua51\")\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "Server/trunk/luabind-0.9.2beta/CMakeLists.txt" : {
      "ObjectId" : "4245ca4b71ec5a077823c9df9b87684c4161986d",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Author: LiXizhi\n\n# Company: ParaEngine.com\n\n# Date: 2010.5.27\n\n# Note: download luabind and boost src, and then use cmake to compile\n\n# Note1: During release build, edit luabind/config.hpp and add #define LUABIND_NO_ERROR_CHECKING\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# source files for luabind\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# statically link MSVC to reduce dependancies\n",
        "Line" : 29,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# suppress warnings\n",
        "Line" : 39,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 4
    },
    "Server/trunk/luabind-0.9/CMakeLists.txt" : {
      "ObjectId" : "3349870d62b8a8000735b6841ec6cb349278ddef",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Author: LiXizhi\n\n# Company: ParaEngine.com\n\n# Date: 2010.5.27\n\n# Note: download luabind and boost src, and then use cmake to compile\n\n# Note1: During release build, edit luabind/config.hpp and add #define LUABIND_NO_ERROR_CHECKING\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# source files for luabind\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# statically link MSVC to reduce dependancies\n",
        "Line" : 31,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# suppress warnings\n",
        "Line" : 41,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 4
    },
    "Server/trunk/luasql/CMakeLists.txt" : {
      "ObjectId" : "9b6992aa260c47cd85ba7c3df0b30d112cf601f4",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Author: LiXizhi\n\n# Company: ParaEngine.com\n\n# Date: 2013.1.31\n\n# Note: based on luasql and official mysqlclient and postgresql.\n\n# make sure the include and link directory are set correctly on linux and window.\n\n# and then use cmake to compile\n\n# One may also add PostgreSQL_ROOT=\"C:\\Program Files (x86)\\PostgreSQL\\9.6\" variable in your environment variable.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# source files for luasql\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# statically link MSVC to reduce dependancies ONLY IN RELEASE MODE\n",
        "Line" : 59,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# /GR- Remove RTTI to miminize the executable size\n",
        "Line" : 66,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# the following will build lua as dll, the reason for this, is that we need its pdb files for debugging using decoda (a lua debugger).\n\n# plus it also makes core game engine update more granular.\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# generate program database (PDB symbol files even in release build)\n",
        "Line" : 76,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# To turn size optimisations on again\n",
        "Line" : 79,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# add a stripped version of symbol files during release build\n",
        "Line" : 81,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 8
    },
    "Server/trunk/luasql/FindMySQL.cmake" : {
      "ObjectId" : "c29d0249e5a739ed2932844d1d85c7648d34b9aa",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find MySQL\n\n# Find the MySQL includes and client library\n\n# This module defines\n\n#  MYSQL_INCLUDE_DIR, where to find mysql.h\n\n#  MYSQL_LIBRARIES, the libraries needed to use MySQL.\n\n#  MYSQL_FOUND, If false, do not try to use MySQL.\n\n#  MYSQL_DLL, only set under win32 in case one needs to copy library\n\n#\n\n# Copyright (c) 2006, Jaroslaw Staniek, <js@iidea.pl>\n\n# Copyright 2016, LiXizhi@yeah.net\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# LiXizhi: uncomment to find dir again\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# read environment variables and change \\ to /\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "Server/trunk/pcl/common/CMakeLists.txt" : {
      "ObjectId" : "3cbe228250636f0e8d8ad05f4072ec9eb75ab690",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# statically link MSVC to reduce dependancies\n",
        "Line" : 28,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "Server/trunk/pcl/features/CMakeLists.txt" : {
      "ObjectId" : "1c902c9fd89e5fbdc0bf93d53c9d615af4827115",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# statically link MSVC to reduce dependancies\n",
        "Line" : 33,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "Server/trunk/pcl/filters/CMakeLists.txt" : {
      "ObjectId" : "2712981dacaccd0b0292ccceb37694773271a000",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install include files\n",
        "Line" : 129,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "Server/trunk/pcl/kdtree/CMakeLists.txt" : {
      "ObjectId" : "311dffc13316d8c8475b15a971a79da620c6a776",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install include files\n",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "Server/trunk/pcl/octree/CMakeLists.txt" : {
      "ObjectId" : "c79f74609de286209f338cadc6dc49a4090a7c34",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install include files\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "Server/trunk/pcl/search/CMakeLists.txt" : {
      "ObjectId" : "cd82a0ef592a2a5befc41321fe03147795e600b4",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Server/trunk/sqlite-3.6.23.1/CMakeLists.txt" : {
      "ObjectId" : "728e64277f5c3ea8e199bb9486e5c344fbaa20a6",
      "LastModified" : "2019-01-19T14:04:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Author: LiXizhi\n\n# Company: ParaEngine.com\n\n# Date: 2009.4.5\n\n# Note: download sqlite src, and then use cmake to compile\n\n# we will build as dll in win32 and static linked lib under linux. \n\n# Note: add #include \"paraengine_sqlite3.h\" at the very beginning of sqlite3.h and sqlite3.c to automatically define SQLITE_API according to ParaEngine usage macro. \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add the binary tree to the search path for include files\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Note: include the ParaEngine/NPLRuntime include directory\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# include boost if client is not defined, it allows us to use a different boost version than the client on the server build.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add more boost components here\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# source files for sqlite\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# sqlite3.def\n",
        "Line" : 43,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# statically link MSVC to reduce dependancies\n",
        "Line" : 53,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# /GR- Remove RTTI to miminize the executable size\n",
        "Line" : 67,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# the following will build it as dll under win32, since it will make the core game engine update more granular. \n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# To turn size optimisations on again\n",
        "Line" : 76,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# set(TEST_DIR \"D:/code/npl/TableDB/\")\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# COMMAND ${CMAKE_COMMAND} -E copy $<TARGET_FILE:sqlite> ${TEST_DIR}\n",
        "Line" : 99,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 13
    },
    "Server/trunk/tinyxpath_1_3_1/CMakeLists.txt" : {
      "ObjectId" : "2287206387e7a68a1207ddc27225c048b0aed674",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Author: LiXizhi\n\n# Company: ParaEngine.com\n\n# Date: 2009.4.6\n\n# Note: download tinyxpath src, and then use cmake to compile\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# source files for tinyxpath\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# statically link MSVC to reduce dependancies\n",
        "Line" : 22,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 3
    },
    "Server/trunk/zlib-1.2.11/CMakeLists.txt" : {
      "ObjectId" : "0d6312d315aebc9797d7ac03593bfce6636dbf67",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Check to see if we have large file support\n\n#\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We add these other definitions here because CheckTypeSize.cmake\n\n# in CMake 2.4.x does not automatically do so and we want\n\n# compatibility with CMake 2.4.x.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# clear variable\n",
        "Line" : 47,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "#\n\n# Check for fseeko\n\n#\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Check for unistd.h\n\n#\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If we're doing an out of source build and the user has a zconf.h\n\n# in their source tree...\n",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#============================================================================\n\n# zlib\n\n#============================================================================\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# if(NOT MINGW)\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# set(ZLIB_DLL_SRCS\n",
        "Line" : 127,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# win32/zlib1.rc # If present will override custom build rule below.\n",
        "Line" : 128,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# )\n",
        "Line" : 129,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# endif()\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# parse the full version number from zlib.h and include in ZLIB_FULL_VERSION\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# This gets us DLL resource information when compiling on MinGW.\n",
        "Line" : 171,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# statically link MSVC to reduce dependancies\n",
        "Line" : 187,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "# /GR- Remove RTTI to miminize the executable size\n",
        "Line" : 197,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 16
    },
    "Server/trunk/zlib-1.2.3/CMakeLists.txt" : {
      "ObjectId" : "915b5dfacc98f0a8db73f1d6b431e8ac73f40385",
      "LastModified" : "2018-07-30T11:31:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Author: LiXizhi\n\n# Company: ParaEngine.com\n\n# Date: 2009.4.5\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Note: set to true if build as dll\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# source files for zlib\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# statically link MSVC to reduce dependancies\n",
        "Line" : 21,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 4
    }
  },
  "FileTypes" : {
    "CMAKE" : 239,
    "CMAKESOURCE" : 2,
    "MAKEFILE" : 10,
    "AUTOMAKE" : 33,
    "ANT" : 1
  },
  "ElapsedTime" : 4859
}