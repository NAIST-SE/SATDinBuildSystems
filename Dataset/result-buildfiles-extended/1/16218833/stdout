{
  "Repository" : "16218833",
  "Revision" : "HEAD",
  "ObjectId" : "fc626ba062aeed2b4f497748992c00462826ad12",
  "CommitTime" : "2019-02-28T17:17:56Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "d9e5fb8566b83b35480b848b88efcd253f44f5b6",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2013 The Regents of the University of California (Regents).\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are\n\n# met:\n\n#\n\n#     * Redistributions of source code must retain the above copyright\n\n#       notice, this list of conditions and the following disclaimer.\n\n#\n\n#     * Redistributions in binary form must reproduce the above\n\n#       copyright notice, this list of conditions and the following\n\n#       disclaimer in the documentation and/or other materials provided\n\n#       with the distribution.\n\n#\n\n#     * Neither the name of The Regents or University of California nor the\n\n#       names of its contributors may be used to endorse or promote products\n\n#       derived from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n# Please contact the author of this library if you have any questions.\n\n# Author: Chris Sweeney (sweeney.chris.m@gmail.com)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Disable warnings about rpath on MacOS X for now.\n\n# TODO(cmsweeney): Figure out the proper way to handle this!\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CMake 3.0\n",
        "Line" : 43,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "# Set up the git hook to make Gerrit Change-Id: lines in commit messages.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# .git directory can be found on Unix based system, or on Windows with\n\n# Git Bash (shipped with msysgit)\n",
        "Line" : 52,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Download the hook only if it is not already present. We borrow the hook\n\n# hosted by Ceres because it is not specific to the project.\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Make the downloaded file executable, since it is not by default.\n",
        "Line" : 65,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# ==============================================================================\n\n# Additional cmake find modules\n\n# ==============================================================================\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# THEIA data directory\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Eigen\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Use a larger inlining threshold for Clang, since it hobbles Eigen,\n\n# resulting in an unreasonably slow version of the blas routines. The\n\n# -Qunused-arguments is needed because CMake passes the inline\n\n# threshold to the linker and clang complains about it and dies.\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Older versions of Clang (<= 2.9) do not support the 'return-type-c-linkage'\n\n# option, so check for its presence before adding it to the default flags set.\n",
        "Line" : 120,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# GFlags. The namespace patch is borrow from Ceres Solver (see license in\n\n# FindGflags.cmake)\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Google Logging\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Ceres\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# OpenImageIO\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Suitesparse\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# On Ubuntu the system install of SuiteSparse (v3.4.0) up to at least\n\n# Ubuntu 13.10 cannot be used to link shared libraries.\n",
        "Line" : 173,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Disable use of SuiteSparse if it cannot be found and continue.\n",
        "Line" : 191,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# RocksDB\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# NOTE: This fix came from Ceres solver with the following comment:\n\n#\n\n# Eigen SparseQR generates various compiler warnings related to unused and\n\n# uninitialised local variables, which prevents Ceres compilation as we use\n\n# -Werror.  To avoid having to individually suppress these warnings around\n\n# the #include statments for Eigen headers across all GCC/Clang versions, we\n\n# tell CMake to treat Eigen headers as system headers.  This results in all\n\n# compiler warnings from them being suppressed.\n\n#\n\n# Note that this is *not* propagated to clients, ie CERES_INCLUDE_DIRS\n\n# used by clients after find_package(Ceres) does not identify Eigen as\n\n# as system headers.\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# build Third party libraries included in distro.\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Generate the User's Guide (html).\n\n# The corresponding target is UserGuide, but is included in ALL.\n",
        "Line" : 261,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# ---------------- Install commands ----------------- #\n\n# Install the .h files\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Add an uninstall target to remove all installed files.\n",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Set up install directories. INCLUDE_INSTALL_DIR, LIB_INSTALL_DIR and\n\n# CMAKECONFIG_INSTALL_DIR must not be absolute paths.\n",
        "Line" : 284,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# This \"exports\" all targets which have been put into the export set\n\n# \"TheiaExport\". This means that CMake generates a file with the given\n\n# filename, which can later on be loaded by projects using this package.\n\n# This file contains ADD_LIBRARY(bar IMPORTED) statements for each target\n\n# in the export set, so when loaded later on CMake will create \"imported\"\n\n# library targets from these, which can be used in many ways in the same way\n\n# as a normal library target created via a normal ADD_LIBRARY().\n",
        "Line" : 298,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Figure out the relative path from the installed Config.cmake file to the\n\n# install prefix (which may be at runtime different from the chosen\n\n# CMAKE_INSTALL_PREFIX if under Windows the package was installed anywhere)\n\n# This relative path will be configured into the TheiaConfig.cmake.\n",
        "Line" : 308,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Create a TheiaConfig.cmake file. <name>Config.cmake files are searched by\n\n# FIND_PACKAGE() automatically. We configure that file so that we can put any\n\n# information we want in it, e.g. version numbers, include directories, etc.\n",
        "Line" : 315,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Additionally, when CMake has found a TheiaConfig.cmake, it can check for a\n\n# TheiaConfigVersion.cmake in the same directory when figuring out the version\n\n# of the package when a version has been specified in the FIND_PACKAGE() call,\n\n# e.g. FIND_PACKAGE(Theia [0.5.2] REQUIRED). The version argument is optional.\n",
        "Line" : 321,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Install these files into the same directory as the generated exports-file,\n\n# we include the FindPackage scripts for libraries whose headers are included\n\n# in the public API of Theia and should thus be present in THEIA_INCLUDE_DIRS.\n",
        "Line" : 328,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 31
    },
    "applications/CMakeLists.txt" : {
      "ObjectId" : "3adc152ae3dcb579fbe88c4569c510b334118c20",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Basic programs\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Tools for building SfM models\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Reconstruction visualization.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Useful tools for analyzing reconstructions.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# File conversions and exporters.\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/FindEigen.cmake" : {
      "ObjectId" : "f6d266410524eee17a91614ab63fb28aff3aa3e6",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Ceres Solver - A fast non-linear least squares minimizer\n\n# Copyright 2015 Google Inc. All rights reserved.\n\n# http://ceres-solver.org/\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright notice,\n\n#   this list of conditions and the following disclaimer.\n\n# * Redistributions in binary form must reproduce the above copyright notice,\n\n#   this list of conditions and the following disclaimer in the documentation\n\n#   and/or other materials provided with the distribution.\n\n# * Neither the name of Google Inc. nor the names of its contributors may be\n\n#   used to endorse or promote products derived from this software without\n\n#   specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n# Author: alexs.mac@gmail.com (Alex Stewart)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FindEigen.cmake - Find Eigen library, version >= 3.\n\n#\n\n# This module defines the following variables:\n\n#\n\n# EIGEN_FOUND: TRUE iff Eigen is found.\n\n# EIGEN_INCLUDE_DIRS: Include directories for Eigen.\n\n# EIGEN_VERSION: Extracted from Eigen/src/Core/util/Macros.h\n\n# EIGEN_WORLD_VERSION: Equal to 3 if EIGEN_VERSION = 3.2.0\n\n# EIGEN_MAJOR_VERSION: Equal to 2 if EIGEN_VERSION = 3.2.0\n\n# EIGEN_MINOR_VERSION: Equal to 0 if EIGEN_VERSION = 3.2.0\n\n# FOUND_INSTALLED_EIGEN_CMAKE_CONFIGURATION: True iff the version of Eigen\n\n#                                            found was built & installed /\n\n#                                            exported as a CMake package.\n\n#\n\n# The following variables control the behaviour of this module:\n\n#\n\n# EIGEN_PREFER_EXPORTED_EIGEN_CMAKE_CONFIGURATION: TRUE/FALSE, iff TRUE then\n\n#                           then prefer using an exported CMake configuration\n\n#                           generated by Eigen over searching for the\n\n#                           Eigen components manually.  Otherwise (FALSE)\n\n#                           ignore any exported Eigen CMake configurations and\n\n#                           always perform a manual search for the components.\n\n#                           Default: TRUE iff user does not define this variable\n\n#                           before we are called, and does NOT specify\n\n#                           EIGEN_INCLUDE_DIR_HINTS, otherwise FALSE.\n\n# EIGEN_INCLUDE_DIR_HINTS: List of additional directories in which to\n\n#                          search for eigen includes, e.g: /timbuktu/eigen3.\n\n#\n\n# The following variables are also defined by this module, but in line with\n\n# CMake recommended FindPackage() module style should NOT be referenced directly\n\n# by callers (use the plural variables detailed above instead).  These variables\n\n# do however affect the behaviour of the module via FIND_[PATH/LIBRARY]() which\n\n# are NOT re-called (i.e. search for library is not repeated) if these variables\n\n# are set with valid values _in the CMake cache_. This means that if these\n\n# variables are set directly in the cache, either by the user in the CMake GUI,\n\n# or by the user passing -DVAR=VALUE directives to CMake when called (which\n\n# explicitly defines a cache variable), then they will be used verbatim,\n\n# bypassing the HINTS variables and other hard-coded search locations.\n\n#\n\n# EIGEN_INCLUDE_DIR: Include directory for CXSparse, not including the\n\n#                    include directory of any dependencies.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Called if we failed to find Eigen or any of it's required dependencies,\n\n# unsets all public (designed to be used externally) variables and reports\n\n# error message at priority depending upon [REQUIRED/QUIET/<NONE>] argument.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make results of search visible in the CMake GUI if Eigen has not\n\n# been found so that user does not have to toggle to advanced view.\n",
        "Line" : 81,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Note <package>_FIND_[REQUIRED/QUIETLY] variables defined by FindPackage()\n\n# use the camelcase library name, not uppercase.\n",
        "Line" : 84,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Neither QUIETLY nor REQUIRED, use no priority which emits a message\n\n# but continues configuration and allows generation.\n",
        "Line" : 91,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Protect against any alternative find_package scripts for this library having\n\n# been called previously (in a client project) which set EIGEN_FOUND, but not\n\n# the other variables we require / set here which could cause the search logic\n\n# here to fail.\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# -----------------------------------------------------------------\n\n# By default, if the user has expressed no preference for using an exported\n\n# Eigen CMake configuration over performing a search for the installed\n\n# components, and has not specified any hints for the search locations, then\n\n# prefer an exported configuration if available.\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Try to find an exported CMake configuration for Eigen.\n\n#\n\n# We search twice, s/t we can invert the ordering of precedence used by\n\n# find_package() for exported package build directories, and installed\n\n# packages (found via CMAKE_SYSTEM_PREFIX_PATH), listed as items 6) and 7)\n\n# respectively in [1].\n\n#\n\n# By default, exported build directories are (in theory) detected first, and\n\n# this is usually the case on Windows.  However, on OS X & Linux, the install\n\n# path (/usr/local) is typically present in the PATH environment variable\n\n# which is checked in item 4) in [1] (i.e. before both of the above, unless\n\n# NO_SYSTEM_ENVIRONMENT_PATH is passed).  As such on those OSs installed\n\n# packages are usually detected in preference to exported package build\n\n# directories.\n\n#\n\n# To ensure a more consistent response across all OSs, and as users usually\n\n# want to prefer an installed version of a package over a locally built one\n\n# where both exist (esp. as the exported build directory might be removed\n\n# after installation), we first search with NO_CMAKE_PACKAGE_REGISTRY which\n\n# means any build directories exported by the user are ignored, and thus\n\n# installed directories are preferred.  If this fails to find the package\n\n# we then research again, but without NO_CMAKE_PACKAGE_REGISTRY, so any\n\n# exported build directories will now be detected.\n\n#\n\n# To prevent confusion on Windows, we also pass NO_CMAKE_BUILDS_PATH (which\n\n# is item 5) in [1]), to not preferentially use projects that were built\n\n# recently with the CMake GUI to ensure that we always prefer an installed\n\n# version if available.\n\n#\n\n# [1] http://www.cmake.org/cmake/help/v2.8.11/cmake.html#command:find_package\n",
        "Line" : 119,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Failed to find an installed version of Eigen, repeat search allowing\n\n# exported build directories.\n",
        "Line" : 156,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Again pass NO_CMAKE_BUILDS_PATH, as we know that Eigen is exported and\n\n# do not want to treat projects built with the CMake GUI preferentially.\n",
        "Line" : 160,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Search user-installed locations first, so that we prefer user installs\n\n# to system installs where both exist.\n",
        "Line" : 181,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Mac OS X\n",
        "Line" : 185,
        "CharPositionInLine" : 32
      },
      "13" : {
        "Text" : "# Mac OS X.\n",
        "Line" : 186,
        "CharPositionInLine" : 37
      },
      "14" : {
        "Text" : "# Additional suffixes to try appending to each search path.\n",
        "Line" : 189,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Default root directory for Eigen.\n",
        "Line" : 191,
        "CharPositionInLine" : 11
      },
      "16" : {
        "Text" : "# Windows (for C:/Program Files prefix) < 3.3\n",
        "Line" : 192,
        "CharPositionInLine" : 25
      },
      "17" : {
        "Text" : "# Windows (for C:/Program Files prefix) >= 3.3\n",
        "Line" : 193,
        "CharPositionInLine" : 28
      },
      "18" : {
        "Text" : "# Search supplied hint directories first if supplied.\n",
        "Line" : 195,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Mark internally as found, then verify. EIGEN_REPORT_NOT_FOUND() unsets\n\n# if called.\n",
        "Line" : 210,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Extract Eigen version from Eigen/src/Core/util/Macros.h\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# This is on a single line s/t CMake does not interpret it as a list of\n\n# elements and insert ';' separators which would result in 3.;2.;0 nonsense.\n",
        "Line" : 241,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Set standard CMake FindPackage variables if found.\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Handle REQUIRED / QUIET optional arguments and version.\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Only mark internal variables as advanced if we found Eigen, otherwise\n\n# leave it visible in the standard GUI for the user to set manually.\n",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Autogenerated by find_package(Eigen3)\n",
        "Line" : 262,
        "CharPositionInLine" : 16
      },
      "CommentCount" : 26
    },
    "cmake/FindGflags.cmake" : {
      "ObjectId" : "32c04ea0cdf9c8a0245921d3f2f63a1e10c84820",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Ceres Solver - A fast non-linear least squares minimizer\n\n# Copyright 2015 Google Inc. All rights reserved.\n\n# http://ceres-solver.org/\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright notice,\n\n#   this list of conditions and the following disclaimer.\n\n# * Redistributions in binary form must reproduce the above copyright notice,\n\n#   this list of conditions and the following disclaimer in the documentation\n\n#   and/or other materials provided with the distribution.\n\n# * Neither the name of Google Inc. nor the names of its contributors may be\n\n#   used to endorse or promote products derived from this software without\n\n#   specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n# Author: alexs.mac@gmail.com (Alex Stewart)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FindGflags.cmake - Find Google gflags logging library.\n\n#\n\n# This module will attempt to find gflags, either via an exported CMake\n\n# configuration (generated by gflags >= 2.1 which are built with CMake), or\n\n# by performing a standard search for all gflags components.  The order of\n\n# precedence for these two methods of finding gflags is controlled by:\n\n# GFLAGS_PREFER_EXPORTED_GFLAGS_CMAKE_CONFIGURATION.\n\n#\n\n# This module defines the following variables:\n\n#\n\n# GFLAGS_FOUND: TRUE iff gflags is found.\n\n# GFLAGS_INCLUDE_DIRS: Include directories for gflags.\n\n# GFLAGS_LIBRARIES: Libraries required to link gflags.\n\n# GFLAGS_NAMESPACE: The namespace in which gflags is defined.  In versions of\n\n#                   gflags < 2.1, this was google, for versions >= 2.1 it is\n\n#                   by default gflags, although can be configured when building\n\n#                   gflags to be something else (i.e. google for legacy\n\n#                   compatibility).\n\n# FOUND_INSTALLED_GFLAGS_CMAKE_CONFIGURATION: True iff the version of gflags\n\n#                                             found was built & installed /\n\n#                                             exported as a CMake package.\n\n#\n\n# The following variables control the behaviour of this module when an exported\n\n# gflags CMake configuration is not found.\n\n#\n\n# GFLAGS_PREFER_EXPORTED_GFLAGS_CMAKE_CONFIGURATION: TRUE/FALSE, iff TRUE then\n\n#                           then prefer using an exported CMake configuration\n\n#                           generated by gflags >= 2.1 over searching for the\n\n#                           gflags components manually.  Otherwise (FALSE)\n\n#                           ignore any exported gflags CMake configurations and\n\n#                           always perform a manual search for the components.\n\n#                           Default: TRUE iff user does not define this variable\n\n#                           before we are called, and does NOT specify either\n\n#                           GFLAGS_INCLUDE_DIR_HINTS or GFLAGS_LIBRARY_DIR_HINTS\n\n#                           otherwise FALSE.\n\n# GFLAGS_INCLUDE_DIR_HINTS: List of additional directories in which to\n\n#                           search for gflags includes, e.g: /timbuktu/include.\n\n# GFLAGS_LIBRARY_DIR_HINTS: List of additional directories in which to\n\n#                           search for gflags libraries, e.g: /timbuktu/lib.\n\n#\n\n# The following variables are also defined by this module, but in line with\n\n# CMake recommended FindPackage() module style should NOT be referenced directly\n\n# by callers (use the plural variables detailed above instead).  These variables\n\n# do however affect the behaviour of the module via FIND_[PATH/LIBRARY]() which\n\n# are NOT re-called (i.e. search for library is not repeated) if these variables\n\n# are set with valid values _in the CMake cache_. This means that if these\n\n# variables are set directly in the cache, either by the user in the CMake GUI,\n\n# or by the user passing -DVAR=VALUE directives to CMake when called (which\n\n# explicitly defines a cache variable), then they will be used verbatim,\n\n# bypassing the HINTS variables and other hard-coded search locations.\n\n#\n\n# GFLAGS_INCLUDE_DIR: Include directory for gflags, not including the\n\n#                     include directory of any dependencies.\n\n# GFLAGS_LIBRARY: gflags library, not including the libraries of any\n\n#                 dependencies.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Reset CALLERS_CMAKE_FIND_LIBRARY_PREFIXES to its value when FindGflags was\n\n# invoked, necessary for MSVC.\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Called if we failed to find gflags or any of it's required dependencies,\n\n# unsets all public (designed to be used externally) variables and reports\n\n# error message at priority depending upon [REQUIRED/QUIET/<NONE>] argument.\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Do not use unset, as we want to keep GFLAGS_NAMESPACE in the cache,\n\n# but simply clear its value.\n",
        "Line" : 103,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Make results of search visible in the CMake GUI if gflags has not\n\n# been found so that user does not have to toggle to advanced view.\n",
        "Line" : 108,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Note <package>_FIND_[REQUIRED/QUIETLY] variables defined by FindPackage()\n\n# use the camelcase library name, not uppercase.\n",
        "Line" : 116,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Neither QUIETLY nor REQUIRED, use no priority which emits a message\n\n# but continues configuration and allows generation.\n",
        "Line" : 123,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Verify that all variable names passed as arguments are defined (can be empty\n\n# but must be defined) or raise a fatal error.\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Use check_cxx_source_compiles() to compile trivial test programs to determine\n\n# the gflags namespace.  This works on all OSs except Windows.  If using Visual\n\n# Studio, it fails because msbuild forces check_cxx_source_compiles() to use\n\n# CMAKE_BUILD_TYPE=Debug for the test project, which usually breaks detection\n\n# because MSVC requires that the test project use the same build type as gflags,\n\n# which would normally be built in Release.\n\n#\n\n# Defines: GFLAGS_NAMESPACE in the caller's scope with the detected namespace,\n\n#          which is blank (empty string, will test FALSE is CMake conditionals)\n\n#          if detection failed.\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Verify that all required variables are defined.\n",
        "Line" : 151,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Ensure that GFLAGS_NAMESPACE is always unset on completion unless\n\n# we explicitly set if after having the correct namespace.\n",
        "Line" : 154,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Setup include path & link library for gflags for CHECK_CXX_SOURCE_COMPILES.\n",
        "Line" : 159,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# First try the (older) google namespace.  Note that the output variable\n\n# MUST be unique to the build type as otherwise the test is not repeated as\n\n# it is assumed to have already been performed.\n",
        "Line" : 162,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Try (newer) gflags namespace instead.  Note that the output variable\n\n# MUST be unique to the build type as otherwise the test is not repeated as\n\n# it is assumed to have already been performed.\n",
        "Line" : 177,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Use regex on the gflags headers to attempt to determine the gflags namespace.\n\n# Checks both gflags.h (contained namespace on versions < 2.1.2) and\n\n# gflags_declare.h, which contains the namespace on versions >= 2.1.2.\n\n# In general, this method should only be used when\n\n# GFLAGS_CHECK_GFLAGS_NAMESPACE_USING_TRY_COMPILE() cannot be used, or has\n\n# failed.\n\n#\n\n# Defines: GFLAGS_NAMESPACE in the caller's scope with the detected namespace,\n\n#          which is blank (empty string, will test FALSE is CMake conditionals)\n\n#          if detection failed.\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Verify that all required variables are defined.\n",
        "Line" : 206,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Ensure that GFLAGS_NAMESPACE is always undefined on completion unless\n\n# we explicitly set if after having the correct namespace.\n",
        "Line" : 208,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Scan gflags.h to identify what namespace gflags was built with.  On\n\n# versions of gflags < 2.1.2, gflags.h was configured with the namespace\n\n# directly, on >= 2.1.2, gflags.h uses the GFLAGS_NAMESPACE #define which\n\n# is defined in gflags_declare.h, we try each location in turn.\n",
        "Line" : 212,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Found valid gflags namespace from gflags.h.\n",
        "Line" : 238,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Failed to find gflags namespace from gflags.h, gflags is likely a new\n\n# version, check gflags_declare.h, which in newer versions (>= 2.1.2) contains\n\n# the GFLAGS_NAMESPACE #define, which is then referenced in gflags.h.\n",
        "Line" : 243,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# Found valid gflags namespace from gflags.h.\n",
        "Line" : 268,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Protect against any alternative find_package scripts for this library having\n\n# been called previously (in a client project) which set GFLAGS_FOUND, but not\n\n# the other variables we require / set here which could cause the search logic\n\n# here to fail.\n",
        "Line" : 274,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# -----------------------------------------------------------------\n\n# By default, if the user has expressed no preference for using an exported\n\n# gflags CMake configuration over performing a search for the installed\n\n# components, and has not specified any hints for the search locations, then\n\n# prefer a gflags exported configuration if available.\n",
        "Line" : 280,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Try to find an exported CMake configuration for gflags, as generated by\n\n# gflags versions >= 2.1.\n\n#\n\n# We search twice, s/t we can invert the ordering of precedence used by\n\n# find_package() for exported package build directories, and installed\n\n# packages (found via CMAKE_SYSTEM_PREFIX_PATH), listed as items 6) and 7)\n\n# respectively in [1].\n\n#\n\n# By default, exported build directories are (in theory) detected first, and\n\n# this is usually the case on Windows.  However, on OS X & Linux, the install\n\n# path (/usr/local) is typically present in the PATH environment variable\n\n# which is checked in item 4) in [1] (i.e. before both of the above, unless\n\n# NO_SYSTEM_ENVIRONMENT_PATH is passed).  As such on those OSs installed\n\n# packages are usually detected in preference to exported package build\n\n# directories.\n\n#\n\n# To ensure a more consistent response across all OSs, and as users usually\n\n# want to prefer an installed version of a package over a locally built one\n\n# where both exist (esp. as the exported build directory might be removed\n\n# after installation), we first search with NO_CMAKE_PACKAGE_REGISTRY which\n\n# means any build directories exported by the user are ignored, and thus\n\n# installed directories are preferred.  If this fails to find the package\n\n# we then research again, but without NO_CMAKE_PACKAGE_REGISTRY, so any\n\n# exported build directories will now be detected.\n\n#\n\n# To prevent confusion on Windows, we also pass NO_CMAKE_BUILDS_PATH (which\n\n# is item 5) in [1]), to not preferentially use projects that were built\n\n# recently with the CMake GUI to ensure that we always prefer an installed\n\n# version if available.\n\n#\n\n# [1] http://www.cmake.org/cmake/help/v2.8.11/cmake.html#command:find_package\n",
        "Line" : 296,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Failed to find an installed version of gflags, repeat search allowing\n\n# exported build directories.\n",
        "Line" : 334,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# Again pass NO_CMAKE_BUILDS_PATH, as we know that gflags is exported and\n\n# do not want to treat projects built with the CMake GUI preferentially.\n",
        "Line" : 338,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# gflags v2.1 - 2.1.2 shipped with a bug in their gflags-config.cmake [1]\n\n# whereby gflags_LIBRARIES = \"gflags\", but there was no imported target\n\n# called \"gflags\", they were called: gflags[_nothreads]-[static/shared].\n\n# As this causes linker errors when gflags is not installed in a location\n\n# on the current library paths, detect if this problem is present and\n\n# fix it.\n\n#\n\n# [1] https://github.com/gflags/gflags/issues/110\n",
        "Line" : 350,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# NOTE: This is not written as additional conditions in the outer\n\n#       if (gflags_FOUND) as the NOT TARGET \"${gflags_LIBRARIES}\"\n\n#       condition causes problems if gflags is not found.\n",
        "Line" : 359,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# Ordering here expresses preference for detection, specifically we do not\n\n# want to use the _nothreads variants if the full library is available.\n",
        "Line" : 369,
        "CharPositionInLine" : 6
      },
      "30" : {
        "Text" : "# gflags does not export the namespace in their CMake configuration, so\n\n# use our function to determine what it should be, as it can be either\n\n# gflags or google dependent upon version & configuration.\n\n#\n\n# NOTE: We use the regex method to determine the namespace here, as\n\n#       check_cxx_source_compiles() will not use imported targets, which\n\n#       is what gflags will be in this case.\n",
        "Line" : 400,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# Either failed to find an exported gflags CMake configuration, or user\n\n# told us not to use one.  Perform a manual search for all gflags components.\n",
        "Line" : 421,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# Handle possible presence of lib prefix for libraries on MSVC, see\n\n# also GFLAGS_RESET_FIND_LIBRARY_PREFIX().\n",
        "Line" : 424,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# Preserve the caller's original values for CMAKE_FIND_LIBRARY_PREFIXES\n\n# s/t we can set it back before returning.\n",
        "Line" : 427,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# The empty string in this list is important, it represents the case when\n\n# the libraries have no prefix (shared libraries / DLLs).\n",
        "Line" : 430,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# Search user-installed locations first, so that we prefer user installs\n\n# to system installs where both exist.\n",
        "Line" : 435,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# Mac OS X\n",
        "Line" : 439,
        "CharPositionInLine" : 32
      },
      "37" : {
        "Text" : "# Mac OS X.\n",
        "Line" : 440,
        "CharPositionInLine" : 37
      },
      "38" : {
        "Text" : "# Windows (for C:/Program Files prefix).\n",
        "Line" : 444,
        "CharPositionInLine" : 19
      },
      "39" : {
        "Text" : "# Windows (for C:/Program Files prefix).\n",
        "Line" : 445,
        "CharPositionInLine" : 21
      },
      "40" : {
        "Text" : "# Mac OS X.\n",
        "Line" : 449,
        "CharPositionInLine" : 28
      },
      "41" : {
        "Text" : "# Windows (for C:/Program Files prefix).\n",
        "Line" : 453,
        "CharPositionInLine" : 15
      },
      "42" : {
        "Text" : "# Windows (for C:/Program Files prefix).\n",
        "Line" : 454,
        "CharPositionInLine" : 17
      },
      "43" : {
        "Text" : "# Search supplied hint directories first if supplied.\n",
        "Line" : 456,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# gflags typically requires a threading library (which is OS dependent), note\n\n# that this defines the CMAKE_THREAD_LIBS_INIT variable.  If we are able to\n\n# detect threads, we assume that gflags requires it.\n",
        "Line" : 482,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "# On Windows (including MinGW), the Shlwapi library is used by gflags if\n\n# available.\n",
        "Line" : 487,
        "CharPositionInLine" : 2
      },
      "46" : {
        "Text" : "# Mark internally as found, then verify. GFLAGS_REPORT_NOT_FOUND() unsets\n\n# if called.\n",
        "Line" : 497,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "# Identify what namespace gflags was built with.\n",
        "Line" : 501,
        "CharPositionInLine" : 2
      },
      "48" : {
        "Text" : "# To handle Windows peculiarities / CMake bugs on MSVC we try two approaches\n\n# to detect the gflags namespace:\n\n#\n\n# 1) Try to use check_cxx_source_compiles() to compile a trivial program\n\n#    with the two choices for the gflags namespace.\n\n#\n\n# 2) [In the event 1) fails] Use regex on the gflags headers to try to\n\n#    determine the gflags namespace.  Whilst this is less robust than 1),\n\n#    it does avoid any interaction with msbuild.\n",
        "Line" : 503,
        "CharPositionInLine" : 4
      },
      "49" : {
        "Text" : "# Failed to determine gflags namespace using check_cxx_source_compiles()\n\n# method, try and obtain it using regex on the gflags headers instead.\n",
        "Line" : 515,
        "CharPositionInLine" : 6
      },
      "50" : {
        "Text" : "# Make the GFLAGS_NAMESPACE a cache variable s/t the user can view it, and could\n\n# overwrite it in the CMake GUI.\n",
        "Line" : 530,
        "CharPositionInLine" : 2
      },
      "51" : {
        "Text" : "# gflags does not seem to provide any record of the version in its\n\n# source tree, thus cannot extract version.\n",
        "Line" : 535,
        "CharPositionInLine" : 2
      },
      "52" : {
        "Text" : "# Catch case when caller has set GFLAGS_NAMESPACE in the cache / GUI\n\n# with an invalid value.\n",
        "Line" : 538,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "# Catch case when caller has set GFLAGS_INCLUDE_DIR in the cache / GUI and\n\n# thus FIND_[PATH/LIBRARY] are not called, but specified locations are\n\n# invalid, otherwise we would report the library as found.\n",
        "Line" : 547,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "# TODO: This regex for gflags library is pretty primitive, we use lowercase\n\n#       for comparison to handle Windows using CamelCase library names, could\n\n#       this check be better?\n",
        "Line" : 557,
        "CharPositionInLine" : 2
      },
      "55" : {
        "Text" : "# Set standard CMake FindPackage variables if found.\n",
        "Line" : 573,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# Handle REQUIRED / QUIET optional arguments.\n",
        "Line" : 579,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# Only mark internal variables as advanced if we found gflags, otherwise\n\n# leave them visible in the standard GUI for the user to set manually.\n",
        "Line" : 584,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# Autogenerated by find_package(gflags)\n",
        "Line" : 590,
        "CharPositionInLine" : 16
      },
      "CommentCount" : 59
    },
    "cmake/FindGlog.cmake" : {
      "ObjectId" : "979dceda4b8ec5e1a5457f4e32dbdc9a27834a1e",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Ceres Solver - A fast non-linear least squares minimizer\n\n# Copyright 2015 Google Inc. All rights reserved.\n\n# http://ceres-solver.org/\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright notice,\n\n#   this list of conditions and the following disclaimer.\n\n# * Redistributions in binary form must reproduce the above copyright notice,\n\n#   this list of conditions and the following disclaimer in the documentation\n\n#   and/or other materials provided with the distribution.\n\n# * Neither the name of Google Inc. nor the names of its contributors may be\n\n#   used to endorse or promote products derived from this software without\n\n#   specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n# Author: alexs.mac@gmail.com (Alex Stewart)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FindGlog.cmake - Find Google glog logging library.\n\n#\n\n# This module defines the following variables:\n\n#\n\n# GLOG_FOUND: TRUE iff glog is found.\n\n# GLOG_INCLUDE_DIRS: Include directories for glog.\n\n# GLOG_LIBRARIES: Libraries required to link glog.\n\n# FOUND_INSTALLED_GLOG_CMAKE_CONFIGURATION: True iff the version of glog found\n\n#                                           was built & installed / exported\n\n#                                           as a CMake package.\n\n#\n\n# The following variables control the behaviour of this module:\n\n#\n\n# GLOG_PREFER_EXPORTED_GLOG_CMAKE_CONFIGURATION: TRUE/FALSE, iff TRUE then\n\n#                           then prefer using an exported CMake configuration\n\n#                           generated by glog > 0.3.4 over searching for the\n\n#                           glog components manually.  Otherwise (FALSE)\n\n#                           ignore any exported glog CMake configurations and\n\n#                           always perform a manual search for the components.\n\n#                           Default: TRUE iff user does not define this variable\n\n#                           before we are called, and does NOT specify either\n\n#                           GLOG_INCLUDE_DIR_HINTS or GLOG_LIBRARY_DIR_HINTS\n\n#                           otherwise FALSE.\n\n# GLOG_INCLUDE_DIR_HINTS: List of additional directories in which to\n\n#                         search for glog includes, e.g: /timbuktu/include.\n\n# GLOG_LIBRARY_DIR_HINTS: List of additional directories in which to\n\n#                         search for glog libraries, e.g: /timbuktu/lib.\n\n#\n\n# The following variables are also defined by this module, but in line with\n\n# CMake recommended FindPackage() module style should NOT be referenced directly\n\n# by callers (use the plural variables detailed above instead).  These variables\n\n# do however affect the behaviour of the module via FIND_[PATH/LIBRARY]() which\n\n# are NOT re-called (i.e. search for library is not repeated) if these variables\n\n# are set with valid values _in the CMake cache_. This means that if these\n\n# variables are set directly in the cache, either by the user in the CMake GUI,\n\n# or by the user passing -DVAR=VALUE directives to CMake when called (which\n\n# explicitly defines a cache variable), then they will be used verbatim,\n\n# bypassing the HINTS variables and other hard-coded search locations.\n\n#\n\n# GLOG_INCLUDE_DIR: Include directory for glog, not including the\n\n#                   include directory of any dependencies.\n\n# GLOG_LIBRARY: glog library, not including the libraries of any\n\n#               dependencies.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Reset CALLERS_CMAKE_FIND_LIBRARY_PREFIXES to its value when\n\n# FindGlog was invoked.\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Called if we failed to find glog or any of it's required dependencies,\n\n# unsets all public (designed to be used externally) variables and reports\n\n# error message at priority depending upon [REQUIRED/QUIET/<NONE>] argument.\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Make results of search visible in the CMake GUI if glog has not\n\n# been found so that user does not have to toggle to advanced view.\n",
        "Line" : 91,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Note <package>_FIND_[REQUIRED/QUIETLY] variables defined by FindPackage()\n\n# use the camelcase library name, not uppercase.\n",
        "Line" : 98,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Neither QUIETLY nor REQUIRED, use no priority which emits a message\n\n# but continues configuration and allows generation.\n",
        "Line" : 105,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Protect against any alternative find_package scripts for this library having\n\n# been called previously (in a client project) which set GLOG_FOUND, but not\n\n# the other variables we require / set here which could cause the search logic\n\n# here to fail.\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# -----------------------------------------------------------------\n\n# By default, if the user has expressed no preference for using an exported\n\n# glog CMake configuration over performing a search for the installed\n\n# components, and has not specified any hints for the search locations, then\n\n# prefer a glog exported configuration if available.\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Try to find an exported CMake configuration for glog, as generated by\n\n# glog versions > 0.3.4\n\n#\n\n# We search twice, s/t we can invert the ordering of precedence used by\n\n# find_package() for exported package build directories, and installed\n\n# packages (found via CMAKE_SYSTEM_PREFIX_PATH), listed as items 6) and 7)\n\n# respectively in [1].\n\n#\n\n# By default, exported build directories are (in theory) detected first, and\n\n# this is usually the case on Windows.  However, on OS X & Linux, the install\n\n# path (/usr/local) is typically present in the PATH environment variable\n\n# which is checked in item 4) in [1] (i.e. before both of the above, unless\n\n# NO_SYSTEM_ENVIRONMENT_PATH is passed).  As such on those OSs installed\n\n# packages are usually detected in preference to exported package build\n\n# directories.\n\n#\n\n# To ensure a more consistent response across all OSs, and as users usually\n\n# want to prefer an installed version of a package over a locally built one\n\n# where both exist (esp. as the exported build directory might be removed\n\n# after installation), we first search with NO_CMAKE_PACKAGE_REGISTRY which\n\n# means any build directories exported by the user are ignored, and thus\n\n# installed directories are preferred.  If this fails to find the package\n\n# we then research again, but without NO_CMAKE_PACKAGE_REGISTRY, so any\n\n# exported build directories will now be detected.\n\n#\n\n# To prevent confusion on Windows, we also pass NO_CMAKE_BUILDS_PATH (which\n\n# is item 5) in [1]), to not preferentially use projects that were built\n\n# recently with the CMake GUI to ensure that we always prefer an installed\n\n# version if available.\n\n#\n\n# NOTE: We use the NAMES option as glog erroneously uses 'google-glog' as its\n\n#       project name when built with CMake, but exports itself as just 'glog'.\n\n#       On Linux/OS X this does not break detection as the project name is\n\n#       not used as part of the install path for the CMake package files,\n\n#       e.g. /usr/local/lib/cmake/glog, where the <glog> suffix is hardcoded\n\n#       in glog's CMakeLists.  However, on Windows the project name *is*\n\n#       part of the install prefix: C:/Program Files/google-glog/[include,lib].\n\n#       However, by default CMake checks:\n\n#       C:/Program Files/<FIND_PACKAGE_ARGUMENT_NAME='glog'> which does not\n\n#       exist and thus detection fails.  Thus we use the NAMES to force the\n\n#       search to use both google-glog & glog.\n\n#\n\n# [1] http://www.cmake.org/cmake/help/v2.8.11/cmake.html#command:find_package\n",
        "Line" : 134,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Failed to find an installed version of glog, repeat search allowing\n\n# exported build directories.\n",
        "Line" : 185,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Again pass NO_CMAKE_BUILDS_PATH, as we know that glog is exported and\n\n# do not want to treat projects built with the CMake GUI preferentially.\n",
        "Line" : 189,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# glog wraps the include directories into the exported glog::glog target.\n",
        "Line" : 205,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Either failed to find an exported glog CMake configuration, or user\n\n# told us not to use one.  Perform a manual search for all glog components.\n",
        "Line" : 215,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Handle possible presence of lib prefix for libraries on MSVC, see\n\n# also GLOG_RESET_FIND_LIBRARY_PREFIX().\n",
        "Line" : 218,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Preserve the caller's original values for CMAKE_FIND_LIBRARY_PREFIXES\n\n# s/t we can set it back before returning.\n",
        "Line" : 221,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# The empty string in this list is important, it represents the case when\n\n# the libraries have no prefix (shared libraries / DLLs).\n",
        "Line" : 224,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Search user-installed locations first, so that we prefer user installs\n\n# to system installs where both exist.\n",
        "Line" : 229,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Mac OS X\n",
        "Line" : 233,
        "CharPositionInLine" : 32
      },
      "19" : {
        "Text" : "# Mac OS X.\n",
        "Line" : 234,
        "CharPositionInLine" : 37
      },
      "20" : {
        "Text" : "# Windows (for C:/Program Files prefix).\n",
        "Line" : 237,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# CMake installs with project name prefix.\n",
        "Line" : 243,
        "CharPositionInLine" : 24
      },
      "22" : {
        "Text" : "# Mac OS X.\n",
        "Line" : 248,
        "CharPositionInLine" : 28
      },
      "23" : {
        "Text" : "# Windows (for C:/Program Files prefix).\n",
        "Line" : 251,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# CMake installs with project name prefix.\n",
        "Line" : 257,
        "CharPositionInLine" : 20
      },
      "25" : {
        "Text" : "# Search supplied hint directories first if supplied.\n",
        "Line" : 260,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Mark internally as found, then verify. GLOG_REPORT_NOT_FOUND() unsets\n\n# if called.\n",
        "Line" : 286,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# Glog does not seem to provide any record of the version in its\n\n# source tree, thus cannot extract version.\n",
        "Line" : 290,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# Catch case when caller has set GLOG_INCLUDE_DIR in the cache / GUI and\n\n# thus FIND_[PATH/LIBRARY] are not called, but specified locations are\n\n# invalid, otherwise we would report the library as found.\n",
        "Line" : 293,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# TODO: This regex for glog library is pretty primitive, we use lowercase\n\n#       for comparison to handle Windows using CamelCase library names, could\n\n#       this check be better?\n",
        "Line" : 303,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# Set standard CMake FindPackage variables if found.\n",
        "Line" : 319,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# If we are using an exported CMake glog target, the include directories are\n\n# wrapped into the target itself, and do not have to be (and are not)\n\n# separately specified.  In which case, we should not add GLOG_INCLUDE_DIRS\n\n# to the list of required variables in order that glog be reported as found.\n",
        "Line" : 325,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Handle REQUIRED / QUIET optional arguments.\n",
        "Line" : 335,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Only mark internal variables as advanced if we found glog, otherwise\n\n# leave them visible in the standard GUI for the user to set manually.\n",
        "Line" : 340,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Autogenerated by find_package(glog)\n",
        "Line" : 345,
        "CharPositionInLine" : 35
      },
      "CommentCount" : 35
    },
    "cmake/FindOpenImageIO.cmake" : {
      "ObjectId" : "73dcb3139fb8437fb3643eee29ec769ade5d53b8",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FindOpenImageIO.cmake - Find OpenImageIO library.\n\n#\n\n# This module defines the following variables:\n\n#\n\n# OPENIMAGEIO_FOUND: TRUE iff OpenImageIO is found.\n\n# OPENIMAGEIO_INCLUDE_DIRS: Include directories for OpenImageIO.\n\n# OPENIMAGEIO_LIBRARIES: Libraries required to link OpenImageIO.\n\n#\n\n# The following variables control the behaviour of this module:\n\n#\n\n# OPENIMAGEIO_INCLUDE_DIR_HINTS: List of additional directories in which to\n\n#                         search for OpenImageIO includes, e.g: /timbuktu/include.\n\n# OPENIMAGEIO_LIBRARY_DIR_HINTS: List of additional directories in which to\n\n#                         search for OpenImageIO libraries, e.g: /timbuktu/lib.\n\n#\n\n# The following variables are also defined by this module, but in line with\n\n# CMake recommended FindPackage() module style should NOT be referenced directly\n\n# by callers (use the plural variables detailed above instead).  These variables\n\n# do however affect the behaviour of the module via FIND_[PATH/LIBRARY]() which\n\n# are NOT re-called (i.e. search for library is not repeated) if these variables\n\n# are set with valid values _in the CMake cache_. This means that if these\n\n# variables are set directly in the cache, either by the user in the CMake GUI,\n\n# or by the user passing -DVAR=VALUE directives to CMake when called (which\n\n# explicitly defines a cache variable), then they will be used verbatim,\n\n# bypassing the HINTS variables and other hard-coded search locations.\n\n#\n\n# OPENIMAGEIO_INCLUDE_DIR: Include directory for OpenImageIO, not including the\n\n#                   include directory of any dependencies.\n\n# OPENIMAGEIO_LIBRARY: OpenImageIO library, not including the libraries of any\n\n#               dependencies.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Reset CALLERS_CMAKE_FIND_LIBRARY_PREFIXES to its value when\n\n# FindOpenImageIO was invoked.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Called if we failed to find OpenImageIO or any of it's required dependencies,\n\n# unsets all public (designed to be used externally) variables and reports\n\n# error message at priority depending upon [REQUIRED/QUIET/<NONE>] argument.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make results of search visible in the CMake GUI if OpenImageIO has not\n\n# been found so that user does not have to toggle to advanced view.\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Note <package>_FIND_[REQUIRED/QUIETLY] variables defined by FindPackage()\n\n# use the camelcase library name, not uppercase.\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Neither QUIETLY nor REQUIRED, use no priority which emits a message\n\n# but continues configuration and allows generation.\n",
        "Line" : 61,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Handle possible presence of lib prefix for libraries on MSVC, see\n\n# also OPENIMAGEIO_RESET_FIND_LIBRARY_PREFIX().\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Preserve the caller's original values for CMAKE_FIND_LIBRARY_PREFIXES\n\n# s/t we can set it back before returning.\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# The empty string in this list is important, it represents the case when\n\n# the libraries have no prefix (shared libraries / DLLs).\n",
        "Line" : 73,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Search user-installed locations first, so that we prefer user installs\n\n# to system installs where both exist.\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Mac OS X\n",
        "Line" : 82,
        "CharPositionInLine" : 30
      },
      "11" : {
        "Text" : "# Mac OS X.\n",
        "Line" : 83,
        "CharPositionInLine" : 35
      },
      "12" : {
        "Text" : "# Windows (for C:/Program Files prefix).\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Mac OS X.\n",
        "Line" : 95,
        "CharPositionInLine" : 26
      },
      "14" : {
        "Text" : "# Windows (for C:/Program Files prefix).\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Search supplied hint directories first if supplied.\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Mark internally as found, then verify. OPENIMAGEIO_REPORT_NOT_FOUND() unsets\n\n# if called.\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# OpenImageIO does not seem to provide any record of the version in its\n\n# source tree, thus cannot extract version.\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Catch case when caller has set OPENIMAGEIO_INCLUDE_DIR in the cache / GUI and\n\n# thus FIND_[PATH/LIBRARY] are not called, but specified locations are\n\n# invalid, otherwise we would report the library as found.\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# TODO: This regex for OpenImageIO library is pretty primitive, we use lowercase\n\n#       for comparison to handle Windows using CamelCase library names, could\n\n#       this check be better?\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Set standard CMake FindPackage variables if found.\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Handle REQUIRED / QUIET optional arguments.\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Only mark internal variables as advanced if we found OpenImageIO, otherwise\n\n# leave them visible in the standard GUI for the user to set manually.\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "cmake/FindRocksDB.cmake" : {
      "ObjectId" : "f3a85df715f85ae8a596c056ab4a7bb3336a1f1d",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake; -*-\n\n# - Try to find rocksdb include dirs and libraries\n\n# Usage of this module as follows:\n\n# This file defines:\n\n# * ROCKSDB_FOUND if protoc was found\n\n# * ROCKSDB_LIBRARY The lib to link to (currently only a static unix lib, not\n\n# portable)\n\n# * ROCKSDB_INCLUDE The include directories for rocksdb.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set defaults\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# find the include files\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# locate the library\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# On MacOS\n",
        "Line" : 75,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# On Linux\n",
        "Line" : 78,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#  list(APPEND ROCKSDB_LIBRARY \"-lrt\")\n",
        "Line" : 99,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# if the include and the program are found then we have it\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "cmake/FindSphinx.cmake" : {
      "ObjectId" : "220108dab438ec151a7c6146f7c139a1ba3e8d81",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Ceres Solver - A fast non-linear least squares minimizer\n\n# Copyright 2015 Google Inc. All rights reserved.\n\n# http://ceres-solver.org/\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright notice,\n\n#   this list of conditions and the following disclaimer.\n\n# * Redistributions in binary form must reproduce the above copyright notice,\n\n#   this list of conditions and the following disclaimer in the documentation\n\n#   and/or other materials provided with the distribution.\n\n# * Neither the name of Google Inc. nor the names of its contributors may be\n\n#   used to endorse or promote products derived from this software without\n\n#   specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n# Author: pablo.speciale@gmail.com (Pablo Speciale)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find the Sphinx documentation generator\n\n#\n\n# This modules defines\n\n#  SPHINX_EXECUTABLE\n\n#  SPHINX_FOUND\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindSuiteSparse.cmake" : {
      "ObjectId" : "d3360d17971670968d0a19a8fe8c30c13ec1c3fb",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Ceres Solver - A fast non-linear least squares minimizer\n\n# Copyright 2015 Google Inc. All rights reserved.\n\n# http://ceres-solver.org/\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright notice,\n\n#   this list of conditions and the following disclaimer.\n\n# * Redistributions in binary form must reproduce the above copyright notice,\n\n#   this list of conditions and the following disclaimer in the documentation\n\n#   and/or other materials provided with the distribution.\n\n# * Neither the name of Google Inc. nor the names of its contributors may be\n\n#   used to endorse or promote products derived from this software without\n\n#   specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n# Author: alexs.mac@gmail.com (Alex Stewart)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FindSuiteSparse.cmake - Find SuiteSparse libraries & dependencies.\n\n#\n\n# This module defines the following variables:\n\n#\n\n# SUITESPARSE_FOUND: TRUE iff SuiteSparse and all dependencies have been found.\n\n# SUITESPARSE_INCLUDE_DIRS: Include directories for all SuiteSparse components.\n\n# SUITESPARSE_LIBRARIES: Libraries for all SuiteSparse component libraries and\n\n#                        dependencies.\n\n# SUITESPARSE_VERSION: Extracted from UFconfig.h (<= v3) or\n\n#                      SuiteSparse_config.h (>= v4).\n\n# SUITESPARSE_MAIN_VERSION: Equal to 4 if SUITESPARSE_VERSION = 4.2.1\n\n# SUITESPARSE_SUB_VERSION: Equal to 2 if SUITESPARSE_VERSION = 4.2.1\n\n# SUITESPARSE_SUBSUB_VERSION: Equal to 1 if SUITESPARSE_VERSION = 4.2.1\n\n#\n\n# SUITESPARSE_IS_BROKEN_SHARED_LINKING_UBUNTU_SYSTEM_VERSION: TRUE iff running\n\n#     on Ubuntu, SUITESPARSE_VERSION is 3.4.0 and found SuiteSparse is a system\n\n#     install, in which case found version of SuiteSparse cannot be used to link\n\n#     a shared library due to a bug (static linking is unaffected).\n\n#\n\n# The following variables control the behaviour of this module:\n\n#\n\n# SUITESPARSE_INCLUDE_DIR_HINTS: List of additional directories in which to\n\n#                                search for SuiteSparse includes,\n\n#                                e.g: /timbuktu/include.\n\n# SUITESPARSE_LIBRARY_DIR_HINTS: List of additional directories in which to\n\n#                                search for SuiteSparse libraries,\n\n#                                e.g: /timbuktu/lib.\n\n#\n\n# The following variables define the presence / includes & libraries for the\n\n# SuiteSparse components searched for, the SUITESPARSE_XX variables are the\n\n# union of the variables for all components.\n\n#\n\n# == Symmetric Approximate Minimum Degree (AMD)\n\n# AMD_FOUND\n\n# AMD_INCLUDE_DIR\n\n# AMD_LIBRARY\n\n#\n\n# == Constrained Approximate Minimum Degree (CAMD)\n\n# CAMD_FOUND\n\n# CAMD_INCLUDE_DIR\n\n# CAMD_LIBRARY\n\n#\n\n# == Column Approximate Minimum Degree (COLAMD)\n\n# COLAMD_FOUND\n\n# COLAMD_INCLUDE_DIR\n\n# COLAMD_LIBRARY\n\n#\n\n# Constrained Column Approximate Minimum Degree (CCOLAMD)\n\n# CCOLAMD_FOUND\n\n# CCOLAMD_INCLUDE_DIR\n\n# CCOLAMD_LIBRARY\n\n#\n\n# == Sparse Supernodal Cholesky Factorization and Update/Downdate (CHOLMOD)\n\n# CHOLMOD_FOUND\n\n# CHOLMOD_INCLUDE_DIR\n\n# CHOLMOD_LIBRARY\n\n#\n\n# == Multifrontal Sparse QR (SuiteSparseQR)\n\n# SUITESPARSEQR_FOUND\n\n# SUITESPARSEQR_INCLUDE_DIR\n\n# SUITESPARSEQR_LIBRARY\n\n#\n\n# == Common configuration for all but CSparse (SuiteSparse version >= 4).\n\n# SUITESPARSE_CONFIG_FOUND\n\n# SUITESPARSE_CONFIG_INCLUDE_DIR\n\n# SUITESPARSE_CONFIG_LIBRARY\n\n#\n\n# == Common configuration for all but CSparse (SuiteSparse version < 4).\n\n# UFCONFIG_FOUND\n\n# UFCONFIG_INCLUDE_DIR\n\n#\n\n# Optional SuiteSparse Dependencies:\n\n#\n\n# == Serial Graph Partitioning and Fill-reducing Matrix Ordering (METIS)\n\n# METIS_FOUND\n\n# METIS_LIBRARY\n\n#\n\n# == Intel Thread Building Blocks (TBB)\n\n# TBB_FOUND\n\n# TBB_LIBRARY\n\n# TBB_MALLOC_FOUND\n\n# TBB_MALLOC_LIBRARY\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Reset CALLERS_CMAKE_FIND_LIBRARY_PREFIXES to its value when\n\n# FindSuiteSparse was invoked.\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Called if we failed to find SuiteSparse or any of it's required dependencies,\n\n# unsets all public (designed to be used externally) variables and reports\n\n# error message at priority depending upon [REQUIRED/QUIET/<NONE>] argument.\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Do NOT unset SUITESPARSE_FOUND_REQUIRED_VARS here, as it is used by\n\n# FindPackageHandleStandardArgs() to generate the automatic error message on\n\n# failure which highlights which components are missing.\n",
        "Line" : 134,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Note <package>_FIND_[REQUIRED/QUIETLY] variables defined by FindPackage()\n\n# use the camelcase library name, not uppercase.\n",
        "Line" : 140,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Neither QUIETLY nor REQUIRED, use no priority which emits a message\n\n# but continues configuration and allows generation.\n",
        "Line" : 147,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Do not call return(), s/t we keep processing if not called with REQUIRED\n\n# and report all missing components, rather than bailing after failing to find\n\n# the first.\n",
        "Line" : 152,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Protect against any alternative find_package scripts for this library having\n\n# been called previously (in a client project) which set SUITESPARSE_FOUND, but\n\n# not the other variables we require / set here which could cause the search\n\n# logic here to fail.\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Handle possible presence of lib prefix for libraries on MSVC, see\n\n# also SUITESPARSE_RESET_FIND_LIBRARY_PREFIX().\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Preserve the caller's original values for CMAKE_FIND_LIBRARY_PREFIXES\n\n# s/t we can set it back before returning.\n",
        "Line" : 166,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# The empty string in this list is important, it represents the case when\n\n# the libraries have no prefix (shared libraries / DLLs).\n",
        "Line" : 169,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Specify search directories for include files and libraries (this is the union\n\n# of the search directories for all OSs).  Search user-specified hint\n\n# directories first if supplied, and search user-installed locations first\n\n# so that we prefer user installs to system installs where both exist.\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Mac OS X\n\n# Mac OS X\n",
        "Line" : 180,
        "CharPositionInLine" : 30
      },
      "14" : {
        "Text" : "# Mac OS X\n\n# Mac OS X\n",
        "Line" : 186,
        "CharPositionInLine" : 26
      },
      "15" : {
        "Text" : "# Additional suffixes to try appending to each search path.\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Windows/Ubuntu\n",
        "Line" : 192,
        "CharPositionInLine" : 16
      },
      "17" : {
        "Text" : "# Wrappers to find_path/library that pass the SuiteSparse search hints/paths.\n\n#\n\n# suitesparse_find_component(<component> [FILES name1 [name2 ...]]\n\n#                                        [LIBRARIES name1 [name2 ...]]\n\n#                                        [REQUIRED])\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Specified headers not found.\n",
        "Line" : 222,
        "CharPositionInLine" : 6
      },
      "19" : {
        "Text" : "# Specified libraries not found.\n",
        "Line" : 244,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "# Given the number of components of SuiteSparse, and to ensure that the\n\n# automatic failure message generated by FindPackageHandleStandardArgs()\n\n# when not all required components are found is helpful, we maintain a list\n\n# of all variables that must be defined for SuiteSparse to be considered found.\n",
        "Line" : 257,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# BLAS.\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# LAPACK.\n",
        "Line" : 271,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# SuiteSparseQR may be compiled with Intel Threading Building Blocks,\n\n# we assume that if TBB is installed, SuiteSparseQR was compiled with\n\n# support for it, this will do no harm if it wasn't.\n",
        "Line" : 287,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Add the TBB libraries to the SuiteSparseQR libraries (the only\n\n# libraries to optionally depend on TBB).\n",
        "Line" : 298,
        "CharPositionInLine" : 6
      },
      "25" : {
        "Text" : "# UFconfig / SuiteSparse_config.\n\n#\n\n# If SuiteSparse version is >= 4 then SuiteSparse_config is required.\n\n# For SuiteSparse 3, UFconfig.h is required.\n",
        "Line" : 311,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# SuiteSparse_config (SuiteSparse version >= 4) requires librt library for\n\n# timing by default when compiled on Linux or Unix, but not on OSX (which\n\n# does not have librt).\n",
        "Line" : 319,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# Failed to find SuiteSparse_config (>= v4 installs), instead look for\n\n# UFconfig header which should be present in < v4 installs.\n",
        "Line" : 335,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# Extract the SuiteSparse version from the appropriate header (UFconfig.h for\n\n# <= v3, SuiteSparse_config.h for >= v4).\n",
        "Line" : 348,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# SuiteSparse version <= 3.\n",
        "Line" : 353,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# This is on a single line s/t CMake does not interpret it as a list of\n\n# elements and insert ';' separators which would result in 4.;2.;1 nonsense.\n",
        "Line" : 378,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# SuiteSparse version >= 4.\n",
        "Line" : 386,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# This is on a single line s/t CMake does not interpret it as a list of\n\n# elements and insert ';' separators which would result in 4.;2.;1 nonsense.\n",
        "Line" : 412,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "# METIS (Optional dependency).\n",
        "Line" : 419,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Only mark SuiteSparse as found if all required components and dependencies\n\n# have been found.\n",
        "Line" : 422,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Handle config separately, as otherwise at least one of them will be set\n\n# to NOTFOUND which would cause any check on SUITESPARSE_INCLUDE_DIRS to fail.\n",
        "Line" : 439,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# As SuiteSparse includes are often all in the same directory, remove any\n\n# repetitions.\n",
        "Line" : 449,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# Important: The ordering of these libraries is *NOT* arbitrary, as these\n\n# could potentially be static libraries their link ordering is important.\n",
        "Line" : 453,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "# Determine if we are running on Ubuntu with the package install of SuiteSparse\n\n# which is broken and does not support linking a shared library.\n",
        "Line" : 474,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Any even moderately recent Ubuntu release (likely to be affected by\n\n# this bug) should have lsb_release, if it isn't present we are likely\n\n# on a different Linux distribution (should be fine).\n",
        "Line" : 481,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "# We are on Ubuntu, and the SuiteSparse version matches the broken\n\n# system install version and is a system install.\n",
        "Line" : 490,
        "CharPositionInLine" : 6
      },
      "41" : {
        "Text" : "# Handle REQUIRED and QUIET arguments to FIND_PACKAGE\n",
        "Line" : 504,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Do not pass VERSION_VAR to FindPackageHandleStandardArgs() if we failed to\n\n# find SuiteSparse to avoid a confusing autogenerated failure message\n\n# that states 'not found (missing: FOO) (found version: x.y.z)'.\n",
        "Line" : 512,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 43
    },
    "cmake/OptimizeTheiaCompilerFlags.cmake" : {
      "ObjectId" : "39f93bf14121e1d2d45dfb900d75fa0679154ace",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2013 The Regents of the University of California (Regents).\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are\n\n# met:\n\n#\n\n#     * Redistributions of source code must retain the above copyright\n\n#       notice, this list of conditions and the following disclaimer.\n\n#\n\n#     * Redistributions in binary form must reproduce the above\n\n#       copyright notice, this list of conditions and the following\n\n#       disclaimer in the documentation and/or other materials provided\n\n#       with the distribution.\n\n#\n\n#     * Neither the name of The Regents or University of California nor the\n\n#       names of its contributors may be used to endorse or promote products\n\n#       derived from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n# Please contact the author of this library if you have any questions.\n\n# Author: Chris Sweeney (cmsweeney@cs.ucsb.edu)\n\n#\n\n# Much of this file was modified from Ceres Solver which has the license below:\n\n#\n\n# Ceres Solver - A fast non-linear least squares minimizer\n\n# Copyright 2010, 2011, 2012 Google Inc. All rights reserved.\n\n# http://code.google.com/p/ceres-solver/\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright notice,\n\n#   this list of conditions and the following disclaimer.\n\n# * Redistributions in binary form must reproduce the above copyright notice,\n\n#   this list of conditions and the following disclaimer in the documentation\n\n#   and/or other materials provided with the distribution.\n\n# * Neither the name of Google Inc. nor the names of its contributors may be\n\n#   used to endorse or promote products derived from this software without\n\n#   specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n# Author: keir@google.com (Keir Mierle)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# These two methods are macros so that they can modify global parameters\n\n# (functions cannot do that easily with CMake). Much of the compilation\n\n# parameter setup was borrowed and possibly modified from Ceres Solver.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Change the default build type from Debug to Release, while still\n\n# supporting overriding the build type.\n\n#\n\n# The CACHE STRING logic here and elsewhere is needed to force CMake\n\n# to pay attention to the value of these variables.\n",
        "Line" : 71,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Set the default Theia flags to an empty string.\n",
        "Line" : 90,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Linux\n",
        "Line" : 95,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Mac OS X\n",
        "Line" : 101,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# Use of -fast only applicable for Apple's GCC\n\n# Assume this is being used if GCC version < 4.3 on OSX\n",
        "Line" : 104,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Use of -O3 requires use of gold linker & LLVM-gold plugin, which might\n\n# well not be present / in use and without which files will compile, but\n\n# not link ('file not recognized') so explicitly check for support\n",
        "Line" : 116,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# Set c++ standard to c++11\n",
        "Line" : 130,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Mac OS X before Mavericks uses libstdc++ by default but does not support\n\n# c++11. Force it to use libc++.\n",
        "Line" : 137,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# Check for the thread_local keyword. If it cannot be used, set the macro to\n\n# indicate so.\n",
        "Line" : 148,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# After the tweaks for the compile settings, disable some warnings on MSVC.\n",
        "Line" : 158,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Disable signed/unsigned int conversion warnings.\n",
        "Line" : 160,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Disable warning about using struct/class for the same symobl.\n",
        "Line" : 162,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Disable warning about the insecurity of using \"std::copy\".\n",
        "Line" : 164,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Disable performance warning about int-to-bool conversion.\n",
        "Line" : 166,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Disable performance warning about fopen insecurity.\n",
        "Line" : 168,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Disable warning about int64 to int32 conversion. Disabling\n\n# this warning may not be correct; needs investigation.\n\n# TODO(keir): Investigate these warnings in more detail.\n",
        "Line" : 170,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# It's not possible to use STL types in DLL interfaces in a portable and\n\n# reliable way. However, that's what happens with Google Log and Google Flags\n\n# on Windows. MSVC gets upset about this and throws warnings that we can't do\n\n# much about. The real solution is to link static versions of Google Log and\n\n# Google Test, but that seems tricky on Windows. So, disable the warning.\n",
        "Line" : 174,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Google Flags doesn't have their DLL import/export stuff set up correctly,\n\n# which results in linker warnings. This is irrelevant for Theia, so ignore\n\n# the warnings.\n",
        "Line" : 181,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Visual Studio has a limit to how many addresses and object can hold. This\n\n# can hobble templated classes that are large and result in compiler errors.\n",
        "Line" : 186,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Update the C/CXX flags for MSVC to use either the static or shared\n\n# C-Run Time (CRT) library based on the user option: MSVC_USE_STATIC_CRT.\n",
        "Line" : 190,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Use static CRT.\n",
        "Line" : 201,
        "CharPositionInLine" : 8
      },
      "23" : {
        "Text" : "# Use shared, not static, CRT.\n",
        "Line" : 206,
        "CharPositionInLine" : 8
      },
      "24" : {
        "Text" : "# Tuple sizes of 10 are used by Gtest.\n",
        "Line" : 213,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# GCC is not strict enough by default, so enable most of the warnings.\n",
        "Line" : 218,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 26
    },
    "docs/CMakeLists.txt" : {
      "ObjectId" : "1c8847832bda2edaa885c8bbbf727450fa6c36e0",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Ceres Solver - A fast non-linear least squares minimizer\n\n# Copyright 2013 Google Inc. All rights reserved.\n\n# http://code.google.com/p/ceres-solver/\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright notice,\n\n#   this list of conditions and the following disclaimer.\n\n# * Redistributions in binary form must reproduce the above copyright notice,\n\n#   this list of conditions and the following disclaimer in the documentation\n\n#   and/or other materials provided with the distribution.\n\n# * Neither the name of Google Inc. nor the names of its contributors may be\n\n#   used to endorse or promote products derived from this software without\n\n#   specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "docs/source/CMakeLists.txt" : {
      "ObjectId" : "446e2b00bf7bbcf176e9b1cb90d93d4c1d323d9d",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# HTML output directory\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Install documentation\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Building using 'make_docs.py' python script\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "libraries/CMakeLists.txt" : {
      "ObjectId" : "84f38298e442705aabf493b5310eeaf9b2160af0",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# AKAZE feature extractor.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Cereal for portable IO.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Flann for fast approximate nearest neighbor searches.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add Optimo.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add Statx.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# STLPlus for filepath tools.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add VLFeat.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add VisualSfM files.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "libraries/akaze/CMakeLists.txt" : {
      "ObjectId" : "297501c31a7041fd04de38afbf566b98058f062b",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Where to output binaries and libraries\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CImg is needed for reading/displaying the images.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#INCLUDE_DIRECTORIES(${cimg_INCLUDE_DIR} ${timer_INCLUDE_DIR} ./)\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Use a larger inlining threshold for Clang, since it hobbles Eigen,\n\n# resulting in an unreasonably slow version of the blas routines. The\n\n# -Qunused-arguments is needed because CMake passes the inline\n\n# threshold to the linker and clang complains about it and dies.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Older versions of Clang (<= 2.9) do not support the 'return-type-c-linkage'\n\n# option, so check for its presence before adding it to the default flags set.\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Clang does not (yet) support OpenMP.\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Retain the help string associated with the OPENMP option\n\n# when updating it to disable use of OPENMP.\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Find quietly s/t as we can continue without OpenMP if it is not found.\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Retain the help string associated with the OPENMP option\n\n# when updating it to disable use of OPENMP.\n",
        "Line" : 57,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# At least on Linux, we need pthreads to be enabled for mutex to\n\n# compile.  This may not work on Windows or Android.\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Support for Debug mode.\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Demo program extracting akaze features.\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Demo program matching akaze features.\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "libraries/akaze/cimg/CMakeLists.txt" : {
      "ObjectId" : "c0fd246d9814bd5dd55b56c4ac2b1014a666c728",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeFiles.txt for CImg\n\n#\n\n# Haz-Edine Assemlal <assemlal@gmail.com>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# register local modules\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Packaging defines\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Clang does not (yet) support OpenMP.\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Retain the help string associated with the OPENMP option\n\n# when updating it to disable use of OPENMP.\n",
        "Line" : 67,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Find quietly s/t as we can continue without OpenMP if it is not found.\n",
        "Line" : 73,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# At least on Linux, we need pthreads to be enabled for mutex to\n\n# compile.  This may not work on Windows or Android.\n",
        "Line" : 81,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Retain the help string associated with the OPENMP option\n\n# when updating it to disable use of OPENMP.\n",
        "Line" : 91,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# aliases\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "libraries/akaze/cimg/cmake-modules/FindBOARD.cmake" : {
      "ObjectId" : "0e4c78c8e4eb67a81981007e15d72d25e34e860b",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find BOARD\n\n# Find the native BOARD includes and library\n\n# This module defines\n\n#  BOARD_INCLUDE_DIR, where to find jpeglib.h, etc.\n\n#  BOARD_LIBRARIES, the libraries needed to use BOARD.\n\n#  BOARD_FOUND, If false, do not try to use BOARD.\n\n# also defined, but not for general use are\n\n#  BOARD_LIBRARY, where to find the BOARD library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Deprecated declarations.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "libraries/akaze/cimg/cmake-modules/FindEZMINC.cmake" : {
      "ObjectId" : "ce68b7c1aa3d154c05f77d145fe6bd827fb0a6a7",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FindEZMINC.cmake module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find the native MINC includes and library\n\n# This module defines\n\n#  EZMINC_INCLUDE_DIR, where to find jpeglib.h, etc.\n\n#  EZMINC_LIBRARIES, the libraries needed to use EZMINC.\n\n#  EZMINC_FOUND, If false, do not try to use EZMINC.\n\n# also defined, but not for general use are\n\n#  EZMINC_LIBRARY, where to find the MINC library.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "libraries/akaze/cimg/cmake-modules/FindFFMPEG.cmake" : {
      "ObjectId" : "5493689b2631d1c0d8eed9f761ff46f2c4ebb6d0",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find FFMPEG\n\n# Once done this will define\n\n# \n\n#  FFMPEG_FOUND          - system has FFMPEG\n\n#  FFMPEG_INCLUDE_DIR    - the include directories\n\n#  FFMPEG_LIBRARY_DIR    - the directory containing the libraries\n\n#  FFMPEG_LIBRARIES      - link these to use FFMPEG\n\n#  FFMPEG_SWSCALE_FOUND  - FFMPEG also has SWSCALE\n\n#   \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add in swscale if found\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# find includes\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#   message( \"checking: \" ${INC_} )\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#      message( \"found: \" ${TMP_} )\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# clear out duplicates\n\n#LIST( REMOVE_DUPLICATES FFMPEG_INCLUDE_DIR )\n\n#LIST( REMOVE_DUPLICATES FFMPEG_LIBRARY_DIR )\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# find the full paths of the libraries\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "libraries/akaze/cimg/cmake-modules/FindFFTW3.cmake" : {
      "ObjectId" : "ed849c5101fa12c68cdc0bb33a7566f4569c459c",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find FFTW3.\n\n# Usage: find_package(FFTW3 [COMPONENTS [single double long-double threads]])\n\n#\n\n# Variables used by this module:\n\n#  FFTW3_ROOT_DIR             - FFTW3 root directory\n\n# Variables defined by this module:\n\n#  FFTW3_FOUND                - system has FFTW3\n\n#  FFTW3_INCLUDE_DIR          - the FFTW3 include directory (cached)\n\n#  FFTW3_INCLUDE_DIRS         - the FFTW3 include directories\n\n#                               (identical to FFTW3_INCLUDE_DIR)\n\n#  FFTW3[FL]?_LIBRARY         - the FFTW3 library - double, single(F), \n\n#                               long-double(L) precision (cached)\n\n#  FFTW3[FL]?_THREADS_LIBRARY - the threaded FFTW3 library - double, single(F), \n\n#                               long-double(L) precision (cached)\n\n#  FFTW3_LIBRARIES            - list of all FFTW3 libraries found\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (C) 2009-2010\n\n# ASTRON (Netherlands Institute for Radio Astronomy)\n\n# P.O.Box 2, 7990 AA Dwingeloo, The Netherlands\n\n#\n\n# This file is part of the LOFAR software suite.\n\n# The LOFAR software suite is free software: you can redistribute it and/or\n\n# modify it under the terms of the GNU General Public License as published\n\n# by the Free Software Foundation, either version 3 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# The LOFAR software suite is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along\n\n# with the LOFAR software suite. If not, see <http://www.gnu.org/licenses/>.\n\n#\n\n# $Id: FindFFTW3.cmake 15918 2010-06-25 11:12:42Z loose $\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use double precision by default.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Loop over each component.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# If using threads, we need to link against threaded libraries as well.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Keep a list of variable names that we need to pass on to\n\n# find_package_handle_standard_args().\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Search for all requested libraries.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Search for the header file.\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "libraries/akaze/cimg/cmake-modules/FindFFTW3F.cmake" : {
      "ObjectId" : "c5dd5f3312f66ebf2496ede107e2462dec803a1c",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find FFTW\n\n# Once done this will define\n\n#  FFTW_FOUND - System has FFTW3\n\n#  FFTW_INCLUDE_DIRS - The FFTW3 include directories\n\n#  FFTW_LIBRARIES - The libraries needed to use FFTW3\n\n#  FFTW_DEFINITIONS - Compiler switches required for using FFTW3\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set FFTW3F_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "libraries/akaze/cimg/cmake-modules/FindGTK2.cmake" : {
      "ObjectId" : "39beae9bb7f19f4cb478ccfd902fcff8fd0c7407",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - FindGTK2.cmake\n\n# This module can find the GTK2 widget libraries and several of its other\n\n# optional components like gtkmm, glade, and glademm.\n\n#\n\n# NOTE: If you intend to use version checking, CMake 2.6.2 or later is\n\n#       required.\n\n#\n\n# Specify one or more of the following components\n\n# as you call this find module. See example below.\n\n#\n\n#   gtk\n\n#   gtkmm\n\n#   glade\n\n#   glademm\n\n#\n\n# The following variables will be defined for your use\n\n#\n\n#   GTK2_FOUND - Were all of your specified components found?\n\n#   GTK2_INCLUDE_DIRS - All include directories\n\n#   GTK2_LIBRARIES - All libraries\n\n#\n\n#   GTK2_VERSION - The version of GTK2 found (x.y.z)\n\n#   GTK2_MAJOR_VERSION - The major version of GTK2\n\n#   GTK2_MINOR_VERSION - The minor version of GTK2\n\n#   GTK2_PATCH_VERSION - The patch version of GTK2\n\n#\n\n# Optional variables you can define prior to calling this module:\n\n#\n\n#   GTK2_DEBUG - Enables verbose debugging of the module\n\n#   GTK2_SKIP_MARK_AS_ADVANCED - Disable marking cache variables as advanced\n\n#\n\n#=================\n\n# Example Usage:\n\n#\n\n#   Call find_package() once, here are some examples to pick from:\n\n#\n\n#   Require GTK 2.6 or later\n\n#       find_package(GTK2 2.6 REQUIRED gtk)\n\n#\n\n#   Require GTK 2.10 or later and Glade\n\n#       find_package(GTK2 2.10 REQUIRED gtk glade)\n\n#\n\n#   Search for GTK/GTKMM 2.8 or later\n\n#       find_package(GTK2 2.8 COMPONENTS gtk gtkmm)\n\n#\n\n#   if(GTK2_FOUND)\n\n#      include_directories(${GTK2_INCLUDE_DIRS})\n\n#      add_executable(mygui mygui.cc)\n\n#      target_link_libraries(mygui ${GTK2_LIBRARIES})\n\n#   endif()\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2009 Kitware, Inc.\n\n# Copyright 2008-2009 Philip Lowman <philip@yhbt.com>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distributed this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Version 0.7 (3/22/09)\n\n#   * Checked into CMake CVS\n\n#   * Added versioning support\n\n#   * Module now defaults to searching for GTK if COMPONENTS not specified.\n\n#   * Added HKCU prior to HKLM registry key and GTKMM specific environment\n\n#      variable as per mailing list discussion.\n\n#   * Added lib64 to include search path and a few other search paths where GTK\n\n#      may be installed on Unix systems.\n\n#   * Switched to lowercase CMake commands\n\n#   * Prefaced internal variables with _GTK2 to prevent collision\n\n#   * Changed internal macros to functions\n\n#   * Enhanced documentation\n\n# Version 0.6 (1/8/08)\n\n#   Added GTK2_SKIP_MARK_AS_ADVANCED option\n\n# Version 0.5 (12/19/08)\n\n#   Second release to cmake mailing list\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#=============================================================\n\n# _GTK2_GET_VERSION\n\n# Internal function to parse the version number in gtkversion.h\n\n#   _OUT_major = Major version number\n\n#   _OUT_minor = Minor version number\n\n#   _OUT_micro = Micro version number\n\n#   _gtkversion_hdr = Header file to parse\n\n#=============================================================\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#=============================================================\n\n# _GTK2_FIND_INCLUDE_DIR\n\n# Internal function to find the GTK include directories\n\n#   _var = variable to set\n\n#   _hdr = header file to look for\n\n#=============================================================\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# FIXME\n",
        "Line" : 131,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# for /usr/lib/gtk-2.0/include\n",
        "Line" : 152,
        "CharPositionInLine" : 45
      },
      "7" : {
        "Text" : "#=============================================================\n\n# _GTK2_FIND_LIBRARY\n\n# Internal function to find libraries packaged with GTK2\n\n#   _var = library variable to create\n\n#=============================================================\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Not GTK versions per se but the versions encoded into Windows\n\n# import libraries (GtkMM 2.14.1 has a gtkmm-vc80-2_4.lib for example)\n\n# Also the MSVC libraries use _ for . (this is handled below)\n",
        "Line" : 201,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Add vc80/vc90 midfixes\n",
        "Line" : 215,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# For some silly reason the MSVC libraries use _ instead of .\n\n# in the version fields\n",
        "Line" : 247,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# And for debug\n",
        "Line" : 256,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# Copy list back to original names\n",
        "Line" : 263,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# Set debug to release\n",
        "Line" : 312,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "#=============================================================\n",
        "Line" : 318,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#\n\n# main()\n\n#\n",
        "Line" : 320,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Assume they only want GTK\n",
        "Line" : 329,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "#\n\n# If specified, enforce version number\n\n#\n",
        "Line" : 333,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# If we can't find the GTK include dir, we can't do version checking\n",
        "Line" : 362,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# If the version check fails, exit out of the module here\n",
        "Line" : 378,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "#\n\n# Find all components\n\n#\n",
        "Line" : 383,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#elseif(_GTK2_component STREQUAL \"gdk_pixbuf\")\n\n#_GTK2_FIND_INCLUDE_DIR(GTK2_GDKPIXBUF_INCLUDE_DIR gdk-pixbuf/gdk-pixbuf.h)\n\n#_GTK2_FIND_LIBRARY    (GTK2_GDKPIXBUF_LIBRARY gdk_pixbuf false true)\n",
        "Line" : 412,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "#\n\n# Solve for the GTK2 version if we haven't already\n\n#\n",
        "Line" : 463,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\n\n# Try to enforce components\n\n#\n",
        "Line" : 474,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# This gets set to GTK2_FOUND\n",
        "Line" : 478,
        "CharPositionInLine" : 40
      },
      "25" : {
        "Text" : "# Unset our variables.\n",
        "Line" : 533,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 26
    },
    "libraries/akaze/cimg/cmake-modules/FindHDF5.cmake" : {
      "ObjectId" : "e0f25a7e6db6e3c014d8c3580847eccb758293e4",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find HDF5, a library for reading and writing self describing array data.\n\n#\n\n# This module invokes the HDF5 wrapper compiler that should be installed\n\n# alongside HDF5.  Depending upon the HDF5 Configuration, the wrapper compiler\n\n# is called either h5cc or h5pcc.  If this succeeds, the module will then call\n\n# the compiler with the -show argument to see what flags are used when compiling\n\n# an HDF5 client application.\n\n#\n\n# The module will optionally accept the COMPONENTS argument.  If no COMPONENTS\n\n# are specified, then the find module will default to finding only the HDF5 C\n\n# library.  If one or more COMPONENTS are specified, the module will attempt to\n\n# find the language bindings for the specified components.  Currently, the only\n\n# valid components are C and CXX.  The module does not yet support finding the\n\n# Fortran bindings.  If the COMPONENTS argument is not given, the module will\n\n# attempt to find only the C bindings.\n\n#\n\n# On UNIX systems, this module will read the variable HDF5_USE_STATIC_LIBRARIES\n\n# to determine whether or not to prefer a static link to a dynamic link for HDF5\n\n# and all of it's dependencies.  To use this feature, make sure that the\n\n# HDF5_USE_STATIC_LIBRARIES variable is set before the call to find_package.\n\n#\n\n# To provide the module with a hint about where to find your HDF5 installation,\n\n# you can set the environment variable HDF5_ROOT.  The Find module will then\n\n# look in this path when searching for HDF5 executables, paths, and libraries.\n\n#\n\n# In addition to finding the includes and libraries required to compile an HDF5\n\n# client application, this module also makes an effort to find tools that come\n\n# with the HDF5 distribution that may be useful for regression testing.\n\n# \n\n# This module will define the following variables:\n\n#  HDF5_INCLUDE_DIR - Location of the hdf5 includes\n\n#  HDF5_DEFINITIONS - Required compiler definitions for HDF5\n\n#  HDF5_C_LIBRARIES - Required libraries for the HDF5 C bindings.\n\n#  HDF5_CXX_LIBRARIES - Required libraries for the HDF5 C++ bindings\n\n#  HDF5_LIBRARIES - Required libraries for all requested bindings\n\n#  HDF5_FOUND - true if HDF5 was found on the system\n\n#  HDF5_LIBRARY_DIRS - the full set of library directories\n\n#  HDF5_IS_PARALLEL - Whether or not HDF5 was found with parallel IO support\n\n#  HDF5_C_COMPILER_EXECUTABLE - the path to the HDF5 C wrapper compiler\n\n#  HDF5_CXX_COMPILER_EXECUTABLE - the path to the HDF5 C++ wrapper compiler\n\n#  HDF5_DIFF_EXECUTABLE - the path to the HDF5 dataset comparison tool\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distributed this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This module is maintained by Will Dicharry <wdicharry@stellarscience.com>.\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Remove following line for cmake-2.6 compatibility\n\n#include(SelectLibraryConfigurations)\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# List of the valid HDF5 components\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# try to find the HDF5 wrapper compilers\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Invoke the HDF5 wrapper compiler.  The compiler return value is stored to the\n\n# return_value argument, the text output is stored to the output variable.\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# do nothing\n",
        "Line" : 101,
        "CharPositionInLine" : 12
      },
      "8" : {
        "Text" : "# Parse a compile line for definitions, includes, library paths, and libraries.\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Match the include paths\n",
        "Line" : 117,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Match the definitions\n",
        "Line" : 127,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Match the library paths\n",
        "Line" : 133,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# now search for the library names specified in the compile line (match -l...)\n\n# match only -l's preceded by a space or comma\n\n# this is to exclude directory names like xxx-linux/\n",
        "Line" : 144,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# strip the -l from all of the library flags and add to the search list\n",
        "Line" : 149,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Do nothing: we already have HDF5_INCLUDE_PATH and HDF5_LIBRARIES in the\n\n# cache, it would be a shame to override them\n",
        "Line" : 157,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# add the extra specified components, ensuring that they are valid.\n",
        "Line" : 166,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# seed the initial lists of libraries to find with items we know we need\n",
        "Line" : 178,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# take a guess that the includes may be in the 'include' sibling directory\n\n# of a library directory.\n",
        "Line" : 191,
        "CharPositionInLine" : 12
      },
      "18" : {
        "Text" : "# set the definitions for the language bindings.\n",
        "Line" : 198,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# find the HDF5 include directories\n",
        "Line" : 201,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# find the HDF5 libraries\n",
        "Line" : 220,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "# According to bug 1643 on the CMake bug tracker, this is the\n\n# preferred method for searching for a static library.\n\n# See http://www.cmake.org/Bug/view.php?id=1643.  We search\n\n# first for the full static library name, but fall back to a\n\n# generic search on the name if the static search fails.\n",
        "Line" : 223,
        "CharPositionInLine" : 16
      },
      "22" : {
        "Text" : "# Remove following line for cmake-2.6 compatibility\n",
        "Line" : 244,
        "CharPositionInLine" : 12
      },
      "23" : {
        "Text" : "#select_library_configurations( HDF5_${LIB} )\n",
        "Line" : 245,
        "CharPositionInLine" : 5
      },
      "24" : {
        "Text" : "# even though we adjusted the individual library names in\n\n# select_library_configurations, we still need to distinguish\n\n# between debug and release variants because HDF5_LIBRARIES will\n\n# need to specify different lists for debug and optimized builds.\n\n# We can't just use the HDF5_${LIB}_LIBRARY variable (which was set\n\n# up by the selection macro above) because it may specify debug and\n\n# optimized variants for a particular library, but a list of\n\n# libraries is allowed to specify debug and optimized only once.\n",
        "Line" : 247,
        "CharPositionInLine" : 12
      },
      "25" : {
        "Text" : "# Append the libraries for this language binding to the list of all\n\n# required libraries.\n",
        "Line" : 262,
        "CharPositionInLine" : 8
      },
      "26" : {
        "Text" : "# We may have picked up some duplicates in various lists during the above\n\n# process for the language bindings (both the C and C++ bindings depend on\n\n# libz for example).  Remove the duplicates.\n",
        "Line" : 270,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# Construct the complete list of HDF5 libraries with debug and optimized\n\n# variants when the generator supports them.\n",
        "Line" : 286,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# If the HDF5 include directory was found, open H5pubconf.h to determine if\n\n# HDF5 was compiled with parallel IO support\n",
        "Line" : 296,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 29
    },
    "libraries/akaze/cimg/cmake-modules/FindImageMagick.cmake" : {
      "ObjectId" : "33b8aad606e1a9a1c5b08b4285fe119f76ce8eb9",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find the ImageMagick binary suite.\n\n# This module will search for a set of ImageMagick tools specified\n\n# as components in the FIND_PACKAGE call. Typical components include,\n\n# but are not limited to (future versions of ImageMagick might have\n\n# additional components not listed here):\n\n#\n\n#  animate\n\n#  compare\n\n#  composite\n\n#  conjure\n\n#  convert\n\n#  display\n\n#  identify\n\n#  import\n\n#  mogrify\n\n#  montage\n\n#  stream\n\n#\n\n# If no component is specified in the FIND_PACKAGE call, then it only\n\n# searches for the ImageMagick executable directory. This code defines\n\n# the following variables:\n\n#\n\n#  ImageMagick_FOUND                  - TRUE if all components are found.\n\n#  ImageMagick_EXECUTABLE_DIR         - Full path to executables directory.\n\n#  ImageMagick_<component>_FOUND      - TRUE if <component> is found.\n\n#  ImageMagick_<component>_EXECUTABLE - Full path to <component> executable.\n\n#\n\n# There are also components for the following ImageMagick APIs:\n\n#\n\n#  Magick++\n\n#  MagickWand\n\n#  MagickCore\n\n#\n\n# For these components the following variables are set:\n\n#\n\n#  ImageMagick_FOUND                    - TRUE if all components are found.\n\n#  ImageMagick_INCLUDE_DIRS             - Full paths to all include dirs.\n\n#  ImageMagick_LIBRARIES                - Full paths to all libraries.\n\n#  ImageMagick_<component>_FOUND        - TRUE if <component> is found.\n\n#  ImageMagick_<component>_INCLUDE_DIRS - Full path to <component> include dirs.\n\n#  ImageMagick_<component>_LIBRARIES    - Full path to <component> libraries.\n\n#\n\n# Example Usages:\n\n#  FIND_PACKAGE(ImageMagick)\n\n#  FIND_PACKAGE(ImageMagick COMPONENTS convert)\n\n#  FIND_PACKAGE(ImageMagick COMPONENTS convert mogrify display)\n\n#  FIND_PACKAGE(ImageMagick COMPONENTS Magick++)\n\n#  FIND_PACKAGE(ImageMagick COMPONENTS Magick++ convert)\n\n#\n\n# Note that the standard FIND_PACKAGE features are supported\n\n# (i.e., QUIET, REQUIRED, etc.).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2007-2009 Kitware, Inc.\n\n# Copyright 2007-2008 Miguel A. Figueroa-Villanueva <miguelf at ieee dot org>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distributed this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#---------------------------------------------------------------------\n\n# Helper functions\n\n#---------------------------------------------------------------------\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#---------------------------------------------------------------------\n\n# Start Actual Work\n\n#---------------------------------------------------------------------\n\n# Try to find a ImageMagick installation binary path.\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Find each component. Search for all tools in same dir\n\n# <ImageMagick_EXECUTABLE_DIR>; otherwise they should be found\n\n# independently and not in a cohesive module such as this one.\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# DEPRECATED: forced components for backward compatibility\n",
        "Line" : 139,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#---------------------------------------------------------------------\n\n# Standard Package Output\n\n#---------------------------------------------------------------------\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Maintain consistency with all other variables.\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#---------------------------------------------------------------------\n\n# DEPRECATED: Setting variables for backward compatibility.\n\n#---------------------------------------------------------------------\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "libraries/akaze/cimg/cmake-modules/FindJPEG.cmake" : {
      "ObjectId" : "299e4588eebc15aeb7846854ce616ca8287c07d3",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find JPEG\n\n# Find the native JPEG includes and library\n\n# This module defines\n\n#  JPEG_INCLUDE_DIR, where to find jpeglib.h, etc.\n\n#  JPEG_LIBRARIES, the libraries needed to use JPEG.\n\n#  JPEG_FOUND, If false, do not try to use JPEG.\n\n# also defined, but not for general use are\n\n#  JPEG_LIBRARY, where to find the JPEG library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2001-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distributed this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set JPEG_FOUND to TRUE if \n\n# all listed variables are TRUE\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Deprecated declarations.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "libraries/akaze/cimg/cmake-modules/FindLAPACK.cmake" : {
      "ObjectId" : "0ae98dfa7b9ceb0b6526c0427f89438bf547474e",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find LAPACK library\n\n# This module finds an installed fortran library that implements the LAPACK\n\n# linear-algebra interface (see http://www.netlib.org/lapack/).\n\n#\n\n# The approach follows that taken for the autoconf macro file, acx_lapack.m4\n\n# (distributed at http://ac-archive.sourceforge.net/ac-archive/acx_lapack.html).\n\n#\n\n# This module sets the following variables:\n\n#  LAPACK_FOUND - set to true if a library implementing the LAPACK interface\n\n#    is found\n\n#  LAPACK_LINKER_FLAGS - uncached list of required linker flags (excluding -l\n\n#    and -L).\n\n#  LAPACK_LIBRARIES - uncached list of libraries (using full path name) to\n\n#    link against to use LAPACK\n\n#  LAPACK95_LIBRARIES - uncached list of libraries (using full path name) to\n\n#    link against to use LAPACK95\n\n#  LAPACK95_FOUND - set to true if a library implementing the LAPACK f95\n\n#    interface is found\n\n#  BLA_STATIC  if set on this determines what kind of linkage we do (static)\n\n#  BLA_VENDOR  if set checks only the specified vendor, if not set checks\n\n#     all the possibilities\n\n#  BLA_F95     if set on tries to find the f95 interfaces for BLAS/LAPACK\n\n### List of vendors (BLA_VENDOR) valid in this module\n\n##  Intel(mkl), ACML,Apple, NAS, Generic\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2007-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO: move this stuff to separate module\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This macro checks for the existence of the combination of fortran libraries\n\n# given by _list.  If the combination is found, this macro checks (using the\n\n# Check_Fortran_Function_Exists macro) whether can link against that library\n\n# combination using the name of a routine given by _name using the linker\n\n# flags given by _flags.  If the combination of libraries is found and passes\n\n# the link test, LIBRARIES is set to the list of complete library paths that\n\n# have been found.  Otherwise, LIBRARIES is set to FALSE.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# N.B. _prefix is the prefix applied to the names of all cached variables that\n\n# are generated internally and marked advanced by this macro.\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# for ubuntu's libblas3gf and liblapack3gf packages\n",
        "Line" : 92,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Test this combination of libraries.\n",
        "Line" : 107,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#  message(\"DEBUG: CMAKE_REQUIRED_LIBRARIES = ${CMAKE_REQUIRED_LIBRARIES}\")\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#message(\"DEBUG: ${LIBRARIES} = ${${LIBRARIES}}\")\n",
        "Line" : 122,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#acml lapack\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Apple LAPACK library?\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Generic LAPACK library?\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#intel lapack\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# old\n",
        "Line" : 234,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# new >= 10.3\n",
        "Line" : 246,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# old\n",
        "Line" : 259,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# new >= 10.3\n",
        "Line" : 271,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 17
    },
    "libraries/akaze/cimg/cmake-modules/FindMINC.cmake" : {
      "ObjectId" : "e41659c6100b970b3bf22e59e9a15f7126b49ac2",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FindMINC.cmake module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find the native MINC includes and library\n\n# This module defines\n\n#  MINC_INCLUDE_DIR, where to find jpeglib.h, etc.\n\n#  MINC_LIBRARIES, the libraries needed to use MINC.\n\n#  MINC_FOUND, If false, do not try to use MINC.\n\n# also defined, but not for general use are\n\n#  MINC_LIBRARY, where to find the MINC library.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "libraries/akaze/cimg/cmake-modules/FindNetCDF.cmake" : {
      "ObjectId" : "3075b702c1cb71f7df473cd326c7db2f56091307",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# MSTK NetCDF Find Module\n\n# Shamelessly stolen from Amanzi open source code https://software.lanl.gov/ascem/trac\n\n#\n\n# Usage:\n\n#    Control the search through NetCDF_DIR or setting environment variable\n\n#    NetCDF_ROOT to the NetCDF installation prefix.\n\n#\n\n#    This module does not search default paths! \n\n#\n\n#    Following variables are set:\n\n#    NetCDF_FOUND            (BOOL)       Flag indicating if NetCDF was found\n\n#    NetCDF_INCLUDE_DIR      (PATH)       Path to the NetCDF include file\n\n#    NetCDF_INCLUDE_DIRS     (LIST)       List of all required include files\n\n#    NetCDF_LIBRARY_DIR      (PATH)       Path to the NetCDF library\n\n#    NetCDF_LIBRARY          (FILE)       NetCDF library\n\n#    NetCDF_LIBRARIES        (LIST)       List of all required NetCDF libraries\n\n#\n\n#    Additional variables set\n\n#    NetCDF_C_LIBRARY        (FILE)       NetCDF C library\n\n#    NetCDF_CXX_LIBRARY      (FILE)       NetCDF C++ library\n\n#    NetCDF_LARGE_DIMS       (BOOL)       Checks the header files for size of \n\n#                                          NC_MAX_DIMS, NC_MAX_VARS and NC_MAX_VARS_DIMS\n\n#                                          Returns TRUE if\n\n#                                          NC_MAX_DIMS >= 655363\n\n#                                          NC_MAX_VARS >= 524288\n\n#                                          NC_MAX_VAR_DIMS >= 8\n\n#\n\n# #############################################################################\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Standard CMake modules see CMAKE_ROOT/Modules\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# MSTK CMake functions see <root>/cmake/modules for source\n\n#include(PrintVariable)\n\n#include(AddPackageDependency)\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Do nothing. Variables are set. No need to search again\n",
        "Line" : 46,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Cache variables\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Search for include files\n\n# Search order preference:\n\n#  (1) NetCDF_INCLUDE_DIR - check existence of path AND if the include files exist\n\n#  (2) NetCDF_DIR/<include>\n\n#  (3) Default CMake paths See cmake --html-help=out.html file for more information.\n\n#\n",
        "Line" : 64,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#        if (EXISTS \"${NetCDF_INCLUDE_DIR}\")\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#       else()\n\n#           message(SEND_ERROR \"NetCDF_INCLUDE_DIR=${NetCDF_INCLUDE_DIR} does not exist\")\n\n#           set(NetCDF_INCLUDE_DIR \"NetCDF_INCLUDE_DIR-NOTFOUND\")\n\n#       endif()\n",
        "Line" : 84,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "#            if (EXISTS \"${NetCDF_DIR}\" )\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#            else()\n\n#                 message(SEND_ERROR \"NetCDF_DIR=${NetCDF_DIR} does not exist\")\n\n#                 set(NetCDF_INCLUDE_DIR \"NetCDF_INCLUDE_DIR-NOTFOUND\")\n\n#            endif()    \n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# # Large dimension check here\n\n# if ( NetCDF_INCLUDE_DIR ) \n",
        "Line" : 123,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "#     set(netcdf_h \"${NetCDF_INCLUDE_DIR}/netcdf.h\" )\n\n#     message(STATUS \"NetCDF include file ${netcdf_h} will be searched for define values\")\n",
        "Line" : 126,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "#     file(STRINGS \"${netcdf_h}\" netcdf_max_dims_string REGEX \"^#define NC_MAX_DIMS\")\n\n#     string(REGEX REPLACE \"[^0-9]\" \"\" netcdf_max_dims \"${netcdf_max_dims_string}\")\n",
        "Line" : 129,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "#     file(STRINGS \"${netcdf_h}\" netcdf_max_vars_string REGEX \"^#define NC_MAX_VARS\")\n\n#     string(REGEX REPLACE \"[^0-9]\" \"\" netcdf_max_vars \"${netcdf_max_vars_string}\")\n",
        "Line" : 132,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "#     file(STRINGS \"${netcdf_h}\" netcdf_max_var_dims_string REGEX \"^#define NC_MAX_VAR_DIMS\")\n\n#     string(REGEX REPLACE \"[^0-9]\" \"\" netcdf_max_var_dims \"${netcdf_max_var_dims_string}\")\n",
        "Line" : 135,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "#     #PRINT_VARIABLE(netcdf_max_dims_string)\n\n#     #PRINT_VARIABLE(netcdf_max_dims)\n\n#     #PRINT_VARIABLE(netcdf_max_vars)\n\n#     #PRINT_VARIABLE(netcdf_max_var_dims)\n",
        "Line" : 138,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "#     if ( \n\n#          ( (netcdf_max_dims EQUAL 65536)  OR (netcdf_max_dims GREATER 65536) ) AND\n\n#          ( (netcdf_max_vars EQUAL 524288) OR (netcdf_max_vars GREATER 524288) ) AND\n\n#          ( (netcdf_max_var_dims EQUAL 8)  OR  (netcdf_max_var_dims GREATER 8)  )\n",
        "Line" : 143,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "#         )\n\n#         set(NetCDF_LARGE_DIMS TRUE)\n\n#     else()\n\n#         message(WARNING \"The NetCDF found in ${NetCDF_DIR} does not have the correct NC_MAX_DIMS, NC_MAX_VARS and NC_MAX_VAR_DIMS\\n\"\n\n#                          \"It may not be compatible with other TPL libraries such MOAB and ExodusII\\n\" )\n\n#         set(NetCDF_LARGE_DIMS FALSE)\n\n#     endif()\n",
        "Line" : 148,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# endif()    \n",
        "Line" : 156,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Search for libraries \n\n# Search order preference:\n\n#  (1) NetCDF_LIBRARY_DIR - check existence of path AND if the include files exist\n\n#  (2) NetCDF_DIR/<lib,Lib>\n\n#  (3) Default CMake paths See cmake --html-help=out.html file for more information.\n\n#\n",
        "Line" : 158,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "#        if (EXISTS \"${NetCDF_LIBRARY_DIR}\")\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#        else()\n\n#            message(SEND_ERROR \"NetCDF_LIBRARY_DIR=${NetCDF_LIBRARY_DIR} does not exist\")\n\n#            set(NetCDF_LIBRARY \"NetCDF_C_LIBRARY-NOTFOUND\")\n\n#            set(NetCDF_LIBRARY \"NetCDF_CXX_LIBRARY-NOTFOUND\")\n\n#        endif()\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#            if (EXISTS \"${NetCDF_DIR}\" )\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#            else()\n\n#                 message(SEND_ERROR \"NetCDF_DIR=${NetCDF_DIR} does not exist\")\n\n#                 set(NetCDF_LIBRARY \"NetCDF_C_LIBRARY-NOTFOUND\")\n\n#                 set(NetCDF_LIBRARY \"NetCDF_CXX_LIBRARY-NOTFOUND\")\n\n#            endif()    \n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#    if ( NOT NetCDF_CXX_LIBRARY )\n\n#        message(SEND_ERROR \"Can not locate NetCDF CXX library\")\n\n#    endif()    \n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Define the LIBRARIES and INCLUDE_DORS\n",
        "Line" : 234,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# Need to find the NetCDF config script to check for HDF5\n",
        "Line" : 238,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# Send useful message if everything is found\n",
        "Line" : 271,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# find_package)handle)standard_args should set NetCDF_FOUND but it does not!\n",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 30
    },
    "libraries/akaze/cimg/cmake-modules/FindOpenCV.cmake" : {
      "ObjectId" : "d6e4cf191bfefc64ae47c987d10fbd31e2e1fe31",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################\n\n#                  Find OpenCV Library\n\n# See http://sourceforge.net/projects/opencvlibrary/\n\n#----------------------------------------------------------\n\n#\n\n## 1: Setup:\n\n# The following variables are optionally searched for defaults\n\n#  OpenCV_DIR:            Base directory of OpenCv tree to use.\n\n#\n\n## 2: Variable\n\n# The following are set after configuration is done: \n\n#  \n\n#  OpenCV_FOUND\n\n#  OpenCV_LIBS\n\n#  OpenCV_INCLUDE_DIR\n\n#  OpenCV_VERSION (OpenCV_VERSION_MAJOR, OpenCV_VERSION_MINOR, OpenCV_VERSION_PATCH)\n\n#\n\n#\n\n# Deprecated variable are used to maintain backward compatibility with\n\n# the script of Jan Woetzel (2006/09): www.mip.informatik.uni-kiel.de/~jw\n\n#  OpenCV_INCLUDE_DIRS\n\n#  OpenCV_LIBRARIES\n\n#  OpenCV_LINK_DIRECTORIES\n\n# \n\n## 3: Version\n\n#\n\n# 2010/04/07 Benoit Rat, Correct a bug when OpenCVConfig.cmake is not found.\n\n# 2010/03/24 Benoit Rat, Add compatibility for when OpenCVConfig.cmake is not found.\n\n# 2010/03/22 Benoit Rat, Creation of the script.\n\n#\n\n#\n\n# tested with:\n\n# - OpenCV 2.1:  MinGW, MSVC2008\n\n# - OpenCV 2.0:  MinGW, MSVC2008, GCC4\n\n#\n\n#\n\n## 4: Licence:\n\n#\n\n# LGPL 2.1 : GNU Lesser General Public License Usage\n\n# Alternatively, this file may be used under the terms of the GNU Lesser\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# General Public License version 2.1 as published by the Free Software\n\n# Foundation and appearing in the file LICENSE.LGPL included in the\n\n# packaging of this file.  Please review the following information to\n\n# ensure the GNU Lesser General Public License version 2.1 requirements\n\n# will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.\n\n# \n\n#----------------------------------------------------------\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##====================================================\n\n## Find OpenCV libraries\n\n##----------------------------------------------------\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#When its possible to use the Config script use it.\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "## Include the standard CMake script\n",
        "Line" : 65,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "## Search for a specific version\n",
        "Line" : 68,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#Otherwise it try to guess it.\n",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#Find OpenCV version by looking at cvver.h\n",
        "Line" : 80,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#set(CVLIB_SUFFIX \"${OpenCV_VERSION_MAJOR}${OpenCV_VERSION_MINOR}${OpenCV_VERSION_PATCH}\")\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "## Initiate the variable before the loop\n",
        "Line" : 94,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "## Loop over each components\n",
        "Line" : 98,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "#Remove the cache value\n",
        "Line" : 104,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "#both debug/release\n",
        "Line" : 107,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "#only debug\n",
        "Line" : 110,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "#only release\n",
        "Line" : 113,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "#no library found\n",
        "Line" : 116,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "#Add to the general list\n",
        "Line" : 121,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "##====================================================\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "##====================================================\n\n## Print message\n\n##----------------------------------------------------\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# make FIND_PACKAGE friendly\n",
        "Line" : 142,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "##====================================================\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "##====================================================\n\n## Backward compatibility\n\n##----------------------------------------------------\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "##====================================================",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "libraries/akaze/cimg/cmake-modules/FindOpenEXR.cmake" : {
      "ObjectId" : "299db56772ef77f90e6be57d1f6b6535632701bc",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find the OpenEXR libraries\n\n# This check defines:\n\n#\n\n#  OPENEXR_FOUND - system has OpenEXR\n\n#  OPENEXR_INCLUDE_DIR - OpenEXR include directory\n\n#  OPENEXR_LIBRARIES - Libraries needed to use OpenEXR\n\n#\n\n# Copyright (c) 2006, Alexander Neundorf, <neundorf@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#       set(OPENEXR_LIBRARIES ${OPENEXR_IMATH_LIBRARY} ${OPENEXR_ILMIMF_LIBRARY} ${OPENEXR_IEX_LIBRARY} ${OPENEXR_HALF_LIBRARY} ${OPENEXR_ILMTHREAD_LIBARY} CACHE STRING \"The libraries needed to use OpenEXR\")\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "libraries/akaze/cimg/cmake-modules/FindOpenMP.cmake" : {
      "ObjectId" : "5ea329da48409cfc59d6b9bf3542063753f6b362",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Finds OpenMP support\n\n# This module can be used to detect OpenMP support in a compiler.\n\n# If the compiler supports OpenMP, the flags required to compile with\n\n# openmp support are set.  \n\n#\n\n# The following variables are set:\n\n#   OpenMP_C_FLAGS - flags to add to the C compiler for OpenMP support\n\n#   OpenMP_CXX_FLAGS - flags to add to the CXX compiler for OpenMP support\n\n#   OPENMP_FOUND - true if openmp is detected\n\n#\n\n# Supported compilers can be found at http://openmp.org/wp/openmp-compilers/\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2009 Kitware, Inc.\n\n# Copyright 2008-2009 André Rigland Brodtkorb <Andre.Brodtkorb@ifi.uio.no>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distributed this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Gnu\n",
        "Line" : 32,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#Microsoft Visual Studio\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#Intel windows\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#Intel\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#Empty, if compiler automatically accepts openmp\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#Sun\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#HP\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#IBM XL C/c++\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#Portland Group\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# sample openmp source code to test\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# use the same source for CXX as C for now\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# if these are set then do not try to find them again,\n\n# by avoiding any try_compiles for the flags\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# check c compiler\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# check cxx compiler\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# handle the standard arguments for find_package\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "libraries/akaze/cimg/cmake-modules/FindPNG.cmake" : {
      "ObjectId" : "8df3573e912c332fa54b2057cbdac5493ddb04d3",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find the native PNG includes and library\n\n#\n\n# This module defines\n\n#  PNG_INCLUDE_DIR, where to find png.h, etc.\n\n#  PNG_LIBRARIES, the libraries to link against to use PNG.\n\n#  PNG_DEFINITIONS - You should add_definitons(${PNG_DEFINITIONS}) before compiling code that includes png library files.\n\n#  PNG_FOUND, If false, do not try to use PNG.\n\n# also defined, but not for general use are\n\n#  PNG_LIBRARY, where to find the PNG library.\n\n# None of the above will be defined unles zlib can be found.\n\n# PNG depends on Zlib\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2002-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distributed this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# OpenBSD\n",
        "Line" : 33,
        "CharPositionInLine" : 40
      },
      "3" : {
        "Text" : "# png.h includes zlib.h. Sigh.\n",
        "Line" : 40,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# No need to define PNG_USE_DLL here, because it's default for Cygwin.\n",
        "Line" : 46,
        "CharPositionInLine" : 11
      },
      "5" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set PNG_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "libraries/akaze/cimg/cmake-modules/FindTIFF.cmake" : {
      "ObjectId" : "87116347dab00b1f5f95c237e77d4533049b2bee",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find TIFF library\n\n# Find the native TIFF includes and library\n\n# This module defines\n\n#  TIFF_INCLUDE_DIR, where to find tiff.h, etc.\n\n#  TIFF_LIBRARIES, libraries to link against to use TIFF.\n\n#  TIFF_FOUND, If false, do not try to use TIFF.\n\n# also defined, but not for general use are\n\n#  TIFF_LIBRARY, where to find the TIFF library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2002-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distributed this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set TIFF_FOUND to TRUE if \n\n# all listed variables are TRUE\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "libraries/akaze/cimg/cmake-modules/FindTest.cmake" : {
      "ObjectId" : "bcc823585efeb218a0fe4453d750fc1b265d466e",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find FFMPEG\n\n# Once done this will define\n\n#\n\n#  FFMPEG_FOUND - system has FFMPEG\n\n#  FFMPEG_INCLUDE_DIRS - the FFMPEG include directory\n\n#  FFMPEG_LIBRARIES - Link these to use FFMPEG\n\n#  FFMPEG_DEFINITIONS - Compiler switches required for using FFMPEG\n\n#\n\n#  Copyright (c) 2006 Andreas Schneider <mail@cynapses.org>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# show the FFMPEG_INCLUDE_DIRS and FFMPEG_LIBRARIES variables only in the advanced view\n",
        "Line" : 101,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "libraries/akaze/cimg/cmake-modules/FindX11.cmake" : {
      "ObjectId" : "531c02663d39f27c9cd11d0523a56c20fb92fdef",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find X11 installation\n\n# Try to find X11 on UNIX systems. The following values are defined\n\n#  X11_FOUND        - True if X11 is available\n\n#  X11_INCLUDE_DIR  - include directories to use X11\n\n#  X11_LIBRARIES    - link against these to use X11\n\n#\n\n# and also the following more fine grained variables:\n\n# Include paths: X11_ICE_INCLUDE_PATH,          X11_ICE_LIB,        X11_ICE_FOUND\n\n#                X11_Xaccessrules_INCLUDE_PATH,                     X11_Xaccess_FOUND\n\n#                X11_Xaccessstr_INCLUDE_PATH,                       X11_Xaccess_FOUND\n\n#                X11_Xau_INCLUDE_PATH,          X11_Xau_LIB,        X11_Xau_FOUND\n\n#                X11_Xcomposite_INCLUDE_PATH,   X11_Xcomposite_LIB, X11_Xcomposite_FOUND\n\n#                X11_Xcursor_INCLUDE_PATH,      X11_Xcursor_LIB,    X11_Xcursor_FOUND\n\n#                X11_Xdamage_INCLUDE_PATH,      X11_Xdamage_LIB,    X11_Xdamage_FOUND\n\n#                X11_Xdmcp_INCLUDE_PATH,        X11_Xdmcp_LIB,      X11_Xdmcp_FOUND\n\n#                                               X11_Xext_LIB,       X11_Xext_FOUND\n\n#                X11_dpms_INCLUDE_PATH,         (in X11_Xext_LIB),  X11_dpms_FOUND\n\n#                X11_XShm_INCLUDE_PATH,         (in X11_Xext_LIB),  X11_XShm_FOUND\n\n#                X11_Xshape_INCLUDE_PATH,       (in X11_Xext_LIB),  X11_Xshape_FOUND\n\n#                X11_xf86misc_INCLUDE_PATH,     X11_Xxf86misc_LIB,  X11_xf86misc_FOUND\n\n#                X11_xf86vmode_INCLUDE_PATH,                        X11_xf86vmode_FOUND\n\n#                X11_Xfixes_INCLUDE_PATH,       X11_Xfixes_LIB,     X11_Xfixes_FOUND\n\n#                X11_Xft_INCLUDE_PATH,          X11_Xft_LIB,        X11_Xft_FOUND\n\n#                X11_Xinerama_INCLUDE_PATH,     X11_Xinerama_LIB,   X11_Xinerama_FOUND\n\n#                X11_Xinput_INCLUDE_PATH,       X11_Xinput_LIB,     X11_Xinput_FOUND\n\n#                X11_Xkb_INCLUDE_PATH,                              X11_Xkb_FOUND\n\n#                X11_Xkblib_INCLUDE_PATH,                           X11_Xkb_FOUND\n\n#                X11_Xpm_INCLUDE_PATH,          X11_Xpm_LIB,        X11_Xpm_FOUND\n\n#                X11_XTest_INCLUDE_PATH,        X11_XTest_LIB,      X11_XTest_FOUND\n\n#                X11_Xrandr_INCLUDE_PATH,       X11_Xrandr_LIB,     X11_Xrandr_FOUND\n\n#                X11_Xrender_INCLUDE_PATH,      X11_Xrender_LIB,    X11_Xrender_FOUND\n\n#                X11_Xscreensaver_INCLUDE_PATH, X11_Xscreensaver_LIB, X11_Xscreensaver_FOUND\n\n#                X11_Xt_INCLUDE_PATH,           X11_Xt_LIB,         X11_Xt_FOUND\n\n#                X11_Xutil_INCLUDE_PATH,                            X11_Xutil_FOUND\n\n#                X11_Xv_INCLUDE_PATH,           X11_Xv_LIB,         X11_Xv_FOUND\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2001-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distributed this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# X11 is never a framework and some header files may be\n\n# found in tcl on the mac\n",
        "Line" : 52,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Look for includes; keep the list sorted by name of the cmake *_INCLUDE_PATH\n\n# variable (which doesn't need to match the include file name).\n",
        "Line" : 76,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Solaris lacks XKBrules.h, so we should skip kxkbd there.\n",
        "Line" : 79,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Find additional X libraries. Keep list sorted by library name.\n",
        "Line" : 111,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# start with empty list\n",
        "Line" : 138,
        "CharPositionInLine" : 23
      },
      "7" : {
        "Text" : "# start with empty list\n",
        "Line" : 157,
        "CharPositionInLine" : 21
      },
      "8" : {
        "Text" : "# Deprecated variable for backwards compatibility with CMake 1.4\n",
        "Line" : 280,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Translated from an autoconf-generated configure script.\n\n# See libs.m4 in autoconf's m4 directory.\n",
        "Line" : 289,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# See if XOpenDisplay in X11 works by itself.\n",
        "Line" : 296,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# Find library needed for dnet_ntoa.\n",
        "Line" : 299,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# Find library needed for gethostbyname.\n",
        "Line" : 311,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# Find library needed for connect.\n",
        "Line" : 325,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# Find library needed for remove.\n",
        "Line" : 334,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "# Find library needed for shmat.\n",
        "Line" : 343,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# Build the final list of libraries.\n",
        "Line" : 364,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# X11_FIND_REQUIRED_<component> could be checked too\n",
        "Line" : 433,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "libraries/akaze/cimg/cmake-modules/FindZLIB.cmake" : {
      "ObjectId" : "806634306b1be4381b618cba493c12e6b007573b",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find zlib\n\n# Find the native ZLIB includes and library\n\n#\n\n#  ZLIB_INCLUDE_DIRS - where to find zlib.h, etc.\n\n#  ZLIB_LIBRARIES    - List of libraries when using zlib.\n\n#  ZLIB_FOUND        - True if zlib found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2001-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distributed this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Per-recommendation\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set ZLIB_FOUND to TRUE if \n\n# all listed variables are TRUE\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "libraries/akaze/cmake/CheckSSEFeatures.cmake" : {
      "ObjectId" : "a674855f26358e4f0c9a7ee3eaef56fd74f342bc",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# Check for the presence of SSE and figure out the flags to use for it.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Test CLANG\n\n#if(CMAKE_COMPILER_IS_CLANG)\n\n#  if(APPLE)\n\n#    SET(SSE_FLAGS \"${SSE_FLAGS} -march=native\")\n\n#  endif(APPLE)\n\n#endif(CMAKE_COMPILER_IS_CLANG)\n",
        "Line" : 6,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Test GCC/G++\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Unfortunately we need to check for SSE to enable \"-mfpmath=sse\" alongside \n\n# \"-march=native\". The reason for this is that by default, 32bit architectures\n\n# tend to use the x87 FPU (which has 80 bit internal precision), thus leading\n\n# to different results than 64bit architectures which are using SSE2 (64 bit internal\n\n# precision). One solution would be to use \"-ffloat-store\" on 32bit (see \n\n# http://gcc.gnu.org/onlinedocs/gcc/Optimize-Options.html), but that slows code down,\n\n# so the preferred solution is to try \"-mpfmath=sse\" first.\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Setting -ffloat-store to alleviate 32bit vs 64bit discrepancies on non-SSE\n\n# platforms.\n",
        "Line" : 169,
        "CharPositionInLine" : 12
      },
      "5" : {
        "Text" : "###############################################################################\n\n# Check for the presence of SSE 4.1\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "###############################################################################\n\n# Check for the presence of SSE 3\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "libraries/akaze/cmake/FindEigen.cmake" : {
      "ObjectId" : "e03b04c9df6f7e8b1197bd8af62d4f271cef99d3",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This CMake module was taken from Ceres. Ceres Solver license is included.\n\n#\n\n#\n\n# Ceres Solver - A fast non-linear least squares minimizer\n\n# Copyright 2013 Google Inc. All rights reserved.\n\n# http://code.google.com/p/ceres-solver/\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright notice,\n\n#   this list of conditions and the following disclaimer.\n\n# * Redistributions in binary form must reproduce the above copyright notice,\n\n#   this list of conditions and the following disclaimer in the documentation\n\n#   and/or other materials provided with the distribution.\n\n# * Neither the name of Google Inc. nor the names of its contributors may be\n\n#   used to endorse or promote products derived from this software without\n\n#   specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n# Author: alexs.mac@gmail.com (Alex Stewart)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FindEigen.cmake - Find Eigen library, version >= 3.\n\n#\n\n# This module defines the following variables:\n\n#\n\n# EIGEN_FOUND: TRUE iff Eigen is found.\n\n# EIGEN_INCLUDE_DIRS: Include directories for Eigen.\n\n#\n\n# EIGEN_VERSION: Extracted from Eigen/src/Core/util/Macros.h\n\n# EIGEN_WORLD_VERSION: Equal to 3 if EIGEN_VERSION = 3.2.0\n\n# EIGEN_MAJOR_VERSION: Equal to 2 if EIGEN_VERSION = 3.2.0\n\n# EIGEN_MINOR_VERSION: Equal to 0 if EIGEN_VERSION = 3.2.0\n\n#\n\n# The following variables control the behaviour of this module:\n\n#\n\n# EIGEN_INCLUDE_DIR_HINTS: List of additional directories in which to\n\n#                          search for eigen includes, e.g: /timbuktu/eigen3.\n\n#\n\n# The following variables are also defined by this module, but in line with\n\n# CMake recommended FindPackage() module style should NOT be referenced directly\n\n# by callers (use the plural variables detailed above instead).  These variables\n\n# do however affect the behaviour of the module via FIND_[PATH/LIBRARY]() which\n\n# are NOT re-called (i.e. search for library is not repeated) if these variables\n\n# are set with valid values _in the CMake cache_. This means that if these\n\n# variables are set directly in the cache, either by the user in the CMake GUI,\n\n# or by the user passing -DVAR=VALUE directives to CMake when called (which\n\n# explicitly defines a cache variable), then they will be used verbatim,\n\n# bypassing the HINTS variables and other hard-coded search locations.\n\n#\n\n# EIGEN_INCLUDE_DIR: Include directory for CXSparse, not including the\n\n#                    include directory of any dependencies.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Called if we failed to find Eigen or any of it's required dependencies,\n\n# unsets all public (designed to be used externally) variables and reports\n\n# error message at priority depending upon [REQUIRED/QUIET/<NONE>] argument.\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make results of search visible in the CMake GUI if Eigen has not\n\n# been found so that user does not have to toggle to advanced view.\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Note <package>_FIND_[REQUIRED/QUIETLY] variables defined by FindPackage()\n\n# use the camelcase library name, not uppercase.\n",
        "Line" : 75,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Neither QUIETLY nor REQUIRED, use no priority which emits a message\n\n# but continues configuration and allows generation.\n",
        "Line" : 82,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Search user-installed locations first, so that we prefer user installs\n\n# to system installs where both exist.\n\n#\n\n# TODO: Add standard Windows search locations for Eigen.\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Mac OS X\n",
        "Line" : 94,
        "CharPositionInLine" : 37
      },
      "8" : {
        "Text" : "# Mac OS X.\n",
        "Line" : 95,
        "CharPositionInLine" : 42
      },
      "9" : {
        "Text" : "# Search supplied hint directories first if supplied.\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Mark internally as found, then verify. EIGEN_REPORT_NOT_FOUND() unsets\n\n# if called.\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Extract Eigen version from Eigen/src/Core/util/Macros.h\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# This is on a single line s/t CMake does not interpret it as a list of\n\n# elements and insert ';' separators which would result in 3.;2.;0 nonsense.\n",
        "Line" : 142,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Set standard CMake FindPackage variables if found.\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Handle REQUIRED / QUIET optional arguments and version.\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Only mark internal variables as advanced if we found Eigen, otherwise\n\n# leave it visible in the standard GUI for the user to set manually.\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "libraries/akaze/cmake/OptimizeCompilerFlags.cmake" : {
      "ObjectId" : "6fd793dea3e9fada2907deb9657a5f11834fbb8d",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2013 The Regents of the University of California (Regents).\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are\n\n# met:\n\n#\n\n#     * Redistributions of source code must retain the above copyright\n\n#       notice, this list of conditions and the following disclaimer.\n\n#\n\n#     * Redistributions in binary form must reproduce the above\n\n#       copyright notice, this list of conditions and the following\n\n#       disclaimer in the documentation and/or other materials provided\n\n#       with the distribution.\n\n#\n\n#     * Neither the name of The Regents or University of California nor the\n\n#       names of its contributors may be used to endorse or promote products\n\n#       derived from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n# Please contact the author of this library if you have any questions.\n\n# Author: Chris Sweeney (cmsweeney@cs.ucsb.edu)\n\n#\n\n# These two methods are macros so that they can modify global parameters\n\n# (functions cannot do that easily with CMake). Much of the compilation\n\n# parameter setup was borrowed and possibly modified from Ceres Solver.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Change the default build type from Debug to Release, while still\n\n# supporting overriding the build type.\n\n#\n\n# The CACHE STRING logic here and elsewhere is needed to force CMake\n\n# to pay attention to the value of these variables.\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Set the default Akaze flags to an empty string.\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Linux\n",
        "Line" : 63,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# Mac OS X\n",
        "Line" : 69,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Use of -fast only applicable for Apple's GCC\n\n# Assume this is being used if GCC version < 4.3 on OSX\n",
        "Line" : 72,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Use of -O3 requires use of gold linker & LLVM-gold plugin, which might\n\n# well not be present / in use and without which files will compile, but\n\n# not link ('file not recognized') so explicitly check for support\n",
        "Line" : 84,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# Set c++ standard to c++11\n",
        "Line" : 98,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Mac OS X before Mavericks uses libstdc++ by default but does not support\n\n# c++11. Force it to use libc++.\n",
        "Line" : 105,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# After the tweaks for the compile settings, disable some warnings on MSVC.\n",
        "Line" : 118,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Disable signed/unsigned int conversion warnings.\n",
        "Line" : 120,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Disable warning about using struct/class for the same symobl.\n",
        "Line" : 122,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Disable warning about the insecurity of using \"std::copy\".\n",
        "Line" : 124,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Disable performance warning about int-to-bool conversion.\n",
        "Line" : 126,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Disable performance warning about fopen insecurity.\n",
        "Line" : 128,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Disable warning about int64 to int32 conversion. Disabling\n\n# this warning may not be correct; needs investigation.\n\n# TODO(keir): Investigate these warnings in more detail.\n",
        "Line" : 130,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# It's not possible to use STL types in DLL interfaces in a portable and\n\n# reliable way. However, that's what happens with Google Log and Google Flags\n\n# on Windows. MSVC gets upset about this and throws warnings that we can't do\n\n# much about. The real solution is to link static versions of Google Log and\n\n# Google Test, but that seems tricky on Windows. So, disable the warning.\n",
        "Line" : 134,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Google Flags doesn't have their DLL import/export stuff set up correctly,\n\n# which results in linker warnings. This is irrelevant for Akaze, so ignore\n\n# the warnings.\n",
        "Line" : 141,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Visual Studio has a limit to how many addresses and object can hold. This\n\n# can hobble templated classes that are large and result in compiler errors.\n",
        "Line" : 146,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Update the C/CXX flags for MSVC to use either the static or shared\n\n# C-Run Time (CRT) library based on the user option: MSVC_USE_STATIC_CRT.\n",
        "Line" : 150,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Use static CRT.\n",
        "Line" : 161,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "# Use shared, not static, CRT.\n",
        "Line" : 166,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# Tuple sizes of 10 are used by Gtest.\n",
        "Line" : 173,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# GCC is not strict enough by default, so enable most of the warnings.\n",
        "Line" : 178,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 24
    },
    "libraries/akaze/timer/CMakeLists.txt" : {
      "ObjectId" : "0f841ba775fd6314feb7c432c812b94b7fcd3f08",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libraries/cereal/CMakeLists.txt" : {
      "ObjectId" : "2bedd433d9131125c1b76aaf63767558e4c559fa",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# installing cereal requires INTERFACE lib\n",
        "Line" : 5,
        "CharPositionInLine" : 39
      },
      "1" : {
        "Text" : "# ignored\n",
        "Line" : 28,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : "# find_package(Boost COMPONENTS serialization unit_test_framework)\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# if(Boost_FOUND)\n\n#   include_directories(SYSTEM ${Boost_INCLUDE_DIRS})\n\n#   enable_testing()\n\n#   add_subdirectory(unittests)\n\n# endif(Boost_FOUND)\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# add_subdirectory(sandbox)\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# find_package(Doxygen)\n\n# if(DOXYGEN_FOUND)\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#   configure_file(\"${CMAKE_CURRENT_SOURCE_DIR}/doc/doxygen.in\" \"${CMAKE_CURRENT_BINARY_DIR}/doxygen.cfg\" @ONLY)\n\n#   add_custom_target(doc\n\n#     COMMAND ${DOXYGEN_EXECUTABLE} \"${CMAKE_CURRENT_BINARY_DIR}/doxygen.cfg\"\n\n#     WORKING_DIRECTORY \"${CMAKE_CURRENT_BINARY_DIR}\"\n\n#     COMMENT \"Generating API documentation with Doxygen\" VERBATIM\n\n#     )\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#   configure_file(\"${CMAKE_CURRENT_SOURCE_DIR}/scripts/updatedoc.in\" \"${CMAKE_CURRENT_BINARY_DIR}/updatedoc.sh\" @ONLY)\n\n#   add_custom_target(update-doc\n\n#     COMMAND \"${CMAKE_CURRENT_BINARY_DIR}/updatedoc.sh\"\n\n#     DEPENDS doc\n\n#     COMMENT \"Copying documentation to gh-pages branch\" VERBATIM\n\n#     )\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# endif(DOXYGEN_FOUND)\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "libraries/cereal/sandbox/CMakeLists.txt" : {
      "ObjectId" : "5008e420fc58b944ac7de9da562ca4b76e52f603",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libraries/cereal/sandbox/sandbox_shared_lib/CMakeLists.txt" : {
      "ObjectId" : "5d8ea0886049f729831ad2441a1ecb4236e07fae",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libraries/cereal/unittests/CMakeLists.txt" : {
      "ObjectId" : "71aa70b28ba6ff90013cc28283ce5f8701f5edb3",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# A semi-colon separated list of test sources that should not be automatically built with boost unit test\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build the portability test only if we are on a 64-bit machine (void* is 8 bytes)\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Build all of the non-special tests and link against the boost unit test framework\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Check to see if our target is listed in \"SPECIAL_TESTS\"\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# TODO: This won't work right now, because we would need a 32-bit boost\n\n## If we are on a 64-bit machine, create an extra 32-bit version of the test\n\n#if(${CMAKE_SIZEOF_VOID_P} EQUAL 8)\n\n#  add_executable(${TEST_TARGET}_32 ${TEST_SOURCE})\n\n#  set_target_properties(${TEST_TARGET}_32 PROPERTIES\n\n#    COMPILE_DEFINITIONS \"BOOST_TEST_DYN_LINK;BOOST_TEST_MODULE=${TEST_TARGET}\"\n\n#    COMPILE_FLAGS \"-m32\" LINK_FLAGS \"-m32\")\n\n#  target_link_libraries(${TEST_TARGET}_32 ${Boost_LIBRARIES})\n\n#  add_test(\"${TEST_TARGET}_32\" \"${TEST_TARGET}_32\")\n\n#endif()\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Add the valgrind target\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add the coverage target\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# add tests to coverage\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Check to see if our target is listed in \"SPECIAL_TESTS\"\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 9
    },
    "libraries/cereal/unittests/cmake-config-module.cmake" : {
      "ObjectId" : "1b2f46420d25e1b3353edeb19de41beae4468ded",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# cmake configure step for cereal\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# cmake install cereal\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# create test project sources\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# cmake install cereal\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "libraries/flann/CMakeLists.txt" : {
      "ObjectId" : "bd355b9c6b1bb69228beecbcafc86c2002abe681",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# detect if using the Clang compiler\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add an \"uninstall\" target\n\n# CONFIGURE_FILE (\"${PROJECT_SOURCE_DIR}/cmake/uninstall_target.cmake.in\"\n\n#     \"${PROJECT_BINARY_DIR}/uninstall_target.cmake\" IMMEDIATE @ONLY)\n\n# ADD_CUSTOM_TARGET (uninstall \"${CMAKE_COMMAND}\" -P\n\n#     \"${PROJECT_BINARY_DIR}/uninstall_target.cmake\")\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the build type.  Options are:\n\n#  Debug          : w/ debug symbols, w/o optimization\n\n#  Release        : w/o debug symbols, w/ optimization\n\n#  RelWithDebInfo : w/ debug symbols, w/ optimization\n\n#  MinSizeRel     : w/o debug symbols, w/ optimization, stripped binaries\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#set(CMAKE_BUILD_TYPE Release)\n",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#set(CMAKE_BUILD_TYPE Debug)\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#set the default path for built executables to the \"bin\" directory\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#set the default path for built libraries to the \"lib\" directory\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# set output path for tests\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# find python\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Parallel HDF5 needs to find the \"mpi.h\" header file\n",
        "Line" : 89,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# CUDA support\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#set the C/C++ include path to the \"include\" directory\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# require proper c++\n\n#add_definitions( \"-Wall -ansi -pedantic\" )\n\n# HDF5 uses long long which is not ansi\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# lots of warnings with cl.exe right now, use /W1\n",
        "Line" : 151,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# CPACK options\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# RPM\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# DEB\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# NSIS\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# dpkg\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "libraries/flann/cmake/CMakeLists.txt" : {
      "ObjectId" : "fb70f4cc3e0a7e78a0cc99ff69f324ab39fb78ae",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libraries/flann/cmake/FindFlann.cmake" : {
      "ObjectId" : "a6375c044842978ceb60dcc9faf02843dd760340",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# Find Flann\n\n#\n\n# This sets the following variables:\n\n# FLANN_FOUND - True if FLANN was found.\n\n# FLANN_INCLUDE_DIRS - Directories containing the FLANN include files.\n\n# FLANN_LIBRARIES - Libraries needed to use FLANN.\n\n# FLANN_DEFINITIONS - Compiler flags for FLANN.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "libraries/flann/cmake/UseLATEX.cmake" : {
      "ObjectId" : "77bd7096b0a5b5cef4431d2836f8db85db015277",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# File: UseLATEX.cmake\n\n# CMAKE commands to actually use the LaTeX compiler\n\n# Version: 1.7.3\n\n# Author: Kenneth Moreland (kmorel at sandia dot gov)\n\n#\n\n# Copyright 2004 Sandia Corporation.\n\n# Under the terms of Contract DE-AC04-94AL85000, there is a non-exclusive\n\n# license for use of this work by or on behalf of the\n\n# U.S. Government. Redistribution and use in source and binary forms, with\n\n# or without modification, are permitted provided that this Notice and any\n\n# statement of authorship are reproduced on all copies.\n\n#\n\n# The following MACROS are defined:\n\n#\n\n# ADD_LATEX_DOCUMENT(<tex_file>\n\n#                       [BIBFILES <bib_files>]\n\n#                       [INPUTS <input_tex_files>]\n\n#                       [IMAGE_DIRS] <image_directories>\n\n#                       [IMAGES] <image_files>\n\n#                       [CONFIGURE] <tex_files>\n\n#                       [DEPENDS] <tex_files>\n\n#                       [USE_INDEX] [USE_GLOSSARY]\n\n#                       [DEFAULT_PDF] [MANGLE_TARGET_NAMES])\n\n#       Adds targets that compile <tex_file>.  The latex output is placed\n\n#       in LATEX_OUTPUT_PATH or CMAKE_CURRENT_BINARY_DIR if the former is\n\n#       not set.  The latex program is picky about where files are located,\n\n#       so all input files are copied from the source directory to the\n\n#       output directory.  This includes the target tex file, any tex file\n\n#       listed with the INPUTS option, the bibliography files listed with\n\n#       the BIBFILES option, and any .cls, .bst, and .clo files found in\n\n#       the current source directory.  Images found in the IMAGE_DIRS\n\n#       directories or listed by IMAGES are also copied to the output\n\n#       directory and coverted to an appropriate format if necessary.  Any\n\n#       tex files also listed with the CONFIGURE option are also processed\n\n#       with the CMake CONFIGURE_FILE command (with the @ONLY flag.  Any\n\n#       file listed in CONFIGURE but not the target tex file or listed with\n\n#       INPUTS has no effect. DEPENDS can be used to specify generated files\n\n#       that are needed to compile the latex target.\n\n#\n\n#       The following targets are made:\n\n#               dvi: Makes <name>.dvi\n\n#               pdf: Makes <name>.pdf using pdflatex.\n\n#               safepdf: Makes <name>.pdf using ps2pdf.  If using the default\n\n#                       program arguments, this will ensure all fonts are\n\n#                       embedded and no lossy compression has been performed\n\n#                       on images.\n\n#               ps: Makes <name>.ps\n\n#               html: Makes <name>.html\n\n#               auxclean: Deletes <name>.aux.  This is sometimes necessary\n\n#                       if a LaTeX error occurs and writes a bad aux file.\n\n#\n\n#       The dvi target is added to the ALL.  That is, it will be the target\n\n#       built by default.  If the DEFAULT_PDF argument is given, then the\n\n#       pdf target will be the default instead of dvi.\n\n#\n\n#       If the argument MANGLE_TARGET_NAMES is given, then each of the\n\n#       target names above will be mangled with the <tex_file> name.  This\n\n#       is to make the targets unique if ADD_LATEX_DOCUMENT is called for\n\n#       multiple documents.  If the argument USE_INDEX is given, then\n\n#       commands to build an index are made.  If the argument USE_GLOSSARY\n\n#       is given, then commands to build a glossary are made.\n\n#\n\n# History:\n\n#\n\n# 1.7.3 Fix some issues with interactions between makeglossaries and bibtex\n\n#       (thanks to Mark de Wever).\n\n#\n\n# 1.7.2 Use ps2pdf to convert eps to pdf to get around the problem with\n\n#       ImageMagick dropping the bounding box (thanks to Lukasz Lis).\n\n#\n\n# 1.7.1 Fixed some dependency issues.\n\n#\n\n# 1.7.0 Added DEPENDS options (thanks to Theodore Papadopoulo).\n\n#\n\n# 1.6.1 Ported the makeglossaries command to CMake and embedded the port\n\n#       into UseLATEX.cmake.\n\n#\n\n# 1.6.0 Allow the use of the makeglossaries command.  Thanks to Oystein\n\n#       S. Haaland for the patch.\n\n#\n\n# 1.5.0 Allow any type of file in the INPUTS lists, not just tex file\n\n#       (suggested by Eric Noulard).  As a consequence, the ability to\n\n#       specify tex files without the .tex extension is removed.  The removed\n\n#       function is of dubious value anyway.\n\n#\n\n#       When copying input files, skip over any file that exists in the\n\n#       binary directory but does not exist in the source directory with the\n\n#       assumption that these files were added by some other mechanism.  I\n\n#       find this useful when creating large documents with multiple\n\n#       chapters that I want to build separately (for speed) as I work on\n\n#       them.  I use the same boilerplate as the starting point for all\n\n#       and just copy it with different configurations.  This was what the\n\n#       separate ADD_LATEX_DOCUMENT method was supposed to originally be for.\n\n#       Since its external use is pretty much deprecated, I removed that\n\n#       documentation.\n\n#\n\n# 1.4.1 Copy .sty files along with the other class and package files.\n\n#\n\n# 1.4.0 Added a MANGLE_TARGET_NAMES option that will mangle the target names.\n\n#\n\n#       Fixed problem with copying bib files that became apparent with\n\n#       CMake 2.4.\n\n#\n\n# 1.3.0 Added a LATEX_OUTPUT_PATH variable that allows you or the user to\n\n#       specify where the built latex documents to go.  This is especially\n\n#       handy if you want to do in-source builds.\n\n#\n\n#       Removed the ADD_LATEX_IMAGES macro and absorbed the functionality\n\n#       into ADD_LATEX_DOCUMENT.  The old interface was always kind of\n\n#       clunky anyway since you had to specify the image directory in both\n\n#       places.  It also made supporting LATEX_OUTPUT_PATH problematic.\n\n#\n\n#       Added support for jpeg files.\n\n#\n\n# 1.2.0 Changed the configuration options yet again.  Removed the NO_CONFIGURE\n\n#       Replaced it with a CONFIGURE option that lists input files for which\n\n#       configure should be run.\n\n#\n\n#       The pdf target no longer depends on the dvi target.  This allows you\n\n#       to build latex documents that require pdflatex.  Also added an option\n\n#       to make the pdf target the default one.\n\n#\n\n# 1.1.1 Added the NO_CONFIGURE option.  The @ character can be used when\n\n#       specifying table column separators.  If two or more are used, then\n\n#       will incorrectly substitute them.\n\n#\n\n# 1.1.0 Added ability include multiple bib files.  Added ability to do copy\n\n#       sub-tex files for multipart tex files.\n\n#\n\n# 1.0.0 If both ps and pdf type images exist, just copy the one that\n\n#       matches the current render mode.  Replaced a bunch of STRING\n\n#       commands with GET_FILENAME_COMPONENT commands that were made to do\n\n#       the desired function.\n\n#\n\n# 0.4.0 First version posted to CMake Wiki.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#############################################################################\n\n# Find the location of myself while originally executing.  If you do this\n\n# inside of a macro, it will recode where the macro was invoked.\n\n#############################################################################\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#############################################################################\n\n# Generic helper macros\n\n#############################################################################\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Helpful list macros.\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Parse macro arguments.\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Match the contents of a file to a regular expression.\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The FILE STRINGS command would be a bit better, but it's not supported on\n\n# older versions of CMake.\n",
        "Line" : 199,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#############################################################################\n\n# Macros that perform processing during a LaTeX build.\n\n#############################################################################\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#############################################################################\n\n# Helper macros for establishing LaTeX build.\n\n#############################################################################\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Just holds extensions for known image types.  They should all be lower case.\n",
        "Line" : 357,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# ImageMagick has broken eps to pdf conversion\n\n# use ps2pdf instead\n",
        "Line" : 391,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Makes custom commands to convert a file to a particular type.\n",
        "Line" : 411,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# As a shortcut, we can just copy the file.\n",
        "Line" : 430,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# Check to see if there is another input file of the appropriate type.\n",
        "Line" : 440,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# If we still need to convert, do it.\n",
        "Line" : 450,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Adds custom commands to process the given files for dvi and pdf builds.\n\n# Adds the output files to the given variables (does not replace).\n",
        "Line" : 460,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Check to see if we need to downsample the image.\n",
        "Line" : 469,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# Make sure the output directory exists.\n",
        "Line" : 479,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "# Do conversions for dvi.\n",
        "Line" : 483,
        "CharPositionInLine" : 6
      },
      "19" : {
        "Text" : "# Do conversions for pdf.\n",
        "Line" : 487,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "# Special case: output exists but input does not.  Assume that it was\n\n# created elsewhere and skip the input file copy.\n",
        "Line" : 540,
        "CharPositionInLine" : 6
      },
      "21" : {
        "Text" : "#############################################################################\n\n# Commands provided by the UseLATEX.cmake \"package\"\n\n#############################################################################\n",
        "Line" : 548,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Parses arguments to ADD_LATEX_DOCUMENT and ADD_LATEX_TARGETS and sets the\n\n# variables LATEX_TARGET, LATEX_IMAGE_DIR, LATEX_BIBFILES, LATEX_DEPENDS, and\n\n# LATEX_INPUTS.\n",
        "Line" : 558,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# The first argument is the target latex file.\n",
        "Line" : 569,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Backward compatibility between 1.6.0 and 1.6.1.\n",
        "Line" : 582,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Set up target names.\n",
        "Line" : 592,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# For each directory in LATEX_IMAGE_DIRS, glob all the image files and\n\n# place them in LATEX_IMAGES.\n",
        "Line" : 609,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# Repeat these commands twice.\n",
        "Line" : 640,
        "CharPositionInLine" : 25
      },
      "28" : {
        "Text" : "# Add commands and targets for building dvi outputs.\n",
        "Line" : 703,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# Add commands and targets for building pdf outputs (with pdflatex).\n",
        "Line" : 716,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# Since both the pdf and safepdf targets have the same output, we\n\n# cannot properly do the dependencies for both.  When selecting safepdf,\n\n# simply force a recompile every time.\n",
        "Line" : 739,
        "CharPositionInLine" : 6
      },
      "31" : {
        "Text" : "#############################################################################\n\n# Actually do stuff\n\n#############################################################################\n",
        "Line" : 794,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Must be part of the actual configure (included from CMakeLists.txt).\n",
        "Line" : 811,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 33
    },
    "libraries/flann/cmake/flann_utils.cmake" : {
      "ObjectId" : "afe4742d0c500d8b0fbd3cd2e6b82fd37ece7617",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find version components\n",
        "Line" : 10,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# workaround a FindHDF5 bug\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add build target\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# add dependency to 'tests' target\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# add target for running test\n",
        "Line" : 51,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# add dependency to 'test' target\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# add build target\n",
        "Line" : 65,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# add dependency to 'tests' target\n",
        "Line" : 68,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# add target for running test\n",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# add dependency to 'test' target\n",
        "Line" : 80,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# find test file\n",
        "Line" : 85,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# add target for running test\n",
        "Line" : 92,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# add dependency to 'test' target\n",
        "Line" : 100,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Also make sure that downloads are done before we run any tests\n",
        "Line" : 114,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 14
    },
    "libraries/flann/doc/CMakeLists.txt" : {
      "ObjectId" : "aeac8edc596c00defa7628dd65804bc1e8dd3c42",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libraries/flann/examples/CMakeLists.txt" : {
      "ObjectId" : "ae424e23392fa7ce574c45f0a4dfa117a4d7ccc0",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libraries/flann/src/CMakeLists.txt" : {
      "ObjectId" : "911a573f2eb6becc094229fbde75ce3a8add2662",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libraries/flann/src/cpp/CMakeLists.txt" : {
      "ObjectId" : "5797b102db32d6d9d99339ef7ac946504761b58f",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#include_directories(${CMAKE_SOURCE_DIR}/include algorithms ext util nn .)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# \ttarget_link_libraries(flann_cuda cudpp_x86_64)\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "libraries/flann/src/matlab/CMakeLists.txt" : {
      "ObjectId" : "a89b6b815f7a5f56048157772fdb9781dca8100c",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#IF(WIN32)\n\n#    SET(MEXEXT_CMD cmd /C mexext)\n\n#ELSE(WIN32)\n\n#    SET(MEXEXT_CMD mexext)\n\n#ENDIF(WIN32)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "libraries/flann/src/python/CMakeLists.txt" : {
      "ObjectId" : "5057221481763c5aa1a1e5f07012a1c35857e053",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# python instalation\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "libraries/flann/test/CMakeLists.txt" : {
      "ObjectId" : "f21b58ffca826014c105b3bfe2190ccd0ef3dd37",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---------- pyunit tests --------------\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---------- ruby spec ----------------\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "libraries/gtest/CMakeLists.txt" : {
      "ObjectId" : "621d0f0421543eba41e1d69f497814104bb9c6a7",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# CMake build script for Google Test.\n\n#\n\n# To run the tests for Google Test itself on Linux, use 'make test' or\n\n# ctest.  You can select which tests to run using 'ctest -R regex'.\n\n# For more options, run 'ctest --help'.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BUILD_SHARED_LIBS is a standard CMake variable, but we declare it here to\n\n# make it prominent in the GUI.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# When other libraries are using a shared version of runtime libraries,\n\n# Google Test also has to use one.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Defines pre_project_set_up_hermetic_build() and set_up_hermetic_build().\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "########################################################################\n\n#\n\n# Project-wide settings\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Name of the project.\n\n#\n\n# CMake files in this project can refer to the root source directory\n\n# as ${gtest_SOURCE_DIR} and to the root binary directory as\n\n# ${gtest_BINARY_DIR}.\n\n# Language \"C\" is required for find_package(Threads).\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define helper functions and macros used by Google Test.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Defined in internal_utils.cmake.\n",
        "Line" : 62,
        "CharPositionInLine" : 30
      },
      "8" : {
        "Text" : "# Where Google Test's .h files can be found.\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Where Google Test's libraries can be found.\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Summary of tuple support for Microsoft Visual Studio:\n\n# Compiler    version(MS)  version(cmake)  Support\n\n# ----------  -----------  --------------  -----------------------------\n\n# <= VS 2010  <= 10        <= 1600         Use Google Tests's own tuple.\n\n# VS 2012     11           1700            std::tr1::tuple + _VARIADIC_MAX=10\n\n# VS 2013     12           1800            std::tr1::tuple\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "########################################################################\n\n#\n\n# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Google Test libraries.  We build them using more strict warnings than what\n\n# are used for other targets, to ensure that gtest can be compiled by a user\n\n# aggressive about warnings.\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# If the CMake version supports it, attach header directory information\n\n# to the targets for when we are part of a parent build (ie being pulled\n\n# in via add_subdirectory() rather than being a standalone build).\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "########################################################################\n\n#\n\n# Install rules\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "########################################################################\n\n#\n\n# Samples on how to link user tests with gtest or gtest_main.\n\n#\n\n# They are not built by default.  To build them, set the\n\n# gtest_build_samples option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_samples=ON flag when running cmake.\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "########################################################################\n\n#\n\n# Google Test's own tests.\n\n#\n\n# You can skip this section if you aren't interested in testing\n\n# Google Test itself.\n\n#\n\n# The tests are not built by default.  To build them, set the\n\n# gtest_build_tests option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_tests=ON flag when running cmake.\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# This must be set in the root directory for the tests to be run by\n\n# 'make test' or ctest.\n",
        "Line" : 143,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "############################################################\n\n# C++ tests built with standard compiler flags.\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "############################################################\n\n# C++ tests built with non-standard compiler flags.\n",
        "Line" : 178,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 181,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# 1600 is Visual Studio 2010.\n",
        "Line" : 210,
        "CharPositionInLine" : 43
      },
      "22" : {
        "Text" : "# Visual Studio 2010, 2012, and 2013 define symbols in std::tr1 that\n\n# conflict with our own definitions. Therefore using our own tuple does not\n\n# work on those compilers.\n",
        "Line" : 211,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "############################################################\n\n# Python tests.\n",
        "Line" : 225,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Visual Studio .NET 2003 does not support STL with exceptions disabled.\n",
        "Line" : 231,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# 1310 is Visual Studio .NET 2003\n",
        "Line" : 232,
        "CharPositionInLine" : 46
      },
      "26" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 268,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 27
    },
    "libraries/gtest/Makefile.am" : {
      "ObjectId" : "29797e4e9de4e1d5e5f93bba14288de87f623946",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Automake file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Nonstandard package files for distribution\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# gtest source files that we don't compile directly.  They are\n\n# #included by gtest-all.cc.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Sample files that we don't compile.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# C++ test files that we don't compile directly.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Python tests that we don't run.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# CMake script\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# MSVC project files\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# xcode project files\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# xcode sample files\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# C++Builder project files\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Distribute and install M4 macro\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# We define the global AM_CPPFLAGS as everything we compile includes from these\n\n# directories.\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Modifies compiler and linker flags for pthreads compatibility.\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Build rules for libraries.\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Bulid rules for samples and tests. Automake's naming for some of\n\n# these variables isn't terribly obvious, so this is a brief\n\n# reference:\n\n#\n\n# TESTS -- Programs run automatically by \"make check\"\n\n# check_PROGRAMS -- Programs built by \"make check\" but not necessarily run\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# A simple sample on using gtest.\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Another sample.  It also verifies that libgtest works.\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# This tests most constructs of gtest and verifies that libgtest_main\n\n# and libgtest work.\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Tests that fused gtest files compile and work.\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Build rules for putting fused Google Test files into the distribution\n\n# package. The user can also create those files by manually running\n\n# scripts/fuse_gtest_files.py.\n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Death tests may produce core dumps in the build directory. In case\n\n# this happens, clean them to keep distcleancheck happy.\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Disables 'make install' as installing a compiled version of Google\n\n# Test can lead to undefined behavior due to violation of the\n\n# One-Definition Rule.\n",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "libraries/gtest/cmake/internal_utils.cmake" : {
      "ObjectId" : "93e6dbb7c196d33706425ffbe3fcf3ed48d07f03",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Defines functions and macros useful for building Google Test and\n\n# Google Mock.\n\n#\n\n# Note:\n\n#\n\n# - This file will be run twice when building Google Mock (once via\n\n#   Google Test's CMakeLists.txt, and once via Google Mock's).\n\n#   Therefore it shouldn't have any side effects other than defining\n\n#   the functions and macros.\n\n#\n\n# - The functions/macros defined in this file may depend on Google\n\n#   Test and Google Mock's option() definitions, and thus must be\n\n#   called *after* the options have been defined.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Tweaks CMake's default compiler/linker settings to suit Google Test's needs.\n\n#\n\n# This must be a macro(), as inside a function string() can only\n\n# update variables in the function scope.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For MSVC, CMake sets certain flags to defaults we want to override.\n\n# This replacement code is taken from sample in the CMake Wiki at\n\n# http://www.cmake.org/Wiki/CMake_FAQ#Dynamic_Replace.\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# When Google Test is built as a shared library, it should also use\n\n# shared runtime libraries.  Otherwise, it may end up with multiple\n\n# copies of runtime library data in different modules, resulting in\n\n# hard-to-find crashes. When it is built as a static library, it is\n\n# preferable to use CRT as static libraries, as we don't have to rely\n\n# on CRT DLLs being available. CMake always defaults to using shared\n\n# CRT libraries, so we override that default here.\n",
        "Line" : 28,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# We prefer more strict warning checking for building Google Test.\n\n# Replaces /W3 with /W4 in defaults.\n",
        "Line" : 38,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Defines the compiler/linker flags used to build Google Test and\n\n# Google Mock.  You can tweak these definitions to suit your need.  A\n\n# variable's value is empty before it's explicitly assigned to.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Defines CMAKE_USE_PTHREADS_INIT and CMAKE_THREAD_LIBS_INIT.\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Newlines inside flags variables break CMake's NMake generator.\n\n# TODO(vladl@google.com): Add -RTCs and -RTCu to debug builds.\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# 1400 is Visual Studio 2005\n",
        "Line" : 59,
        "CharPositionInLine" : 33
      },
      "9" : {
        "Text" : "# Suppress spurious warnings MSVC 7.1 sometimes issues.\n\n# Forcing value to bool.\n",
        "Line" : 60,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# Copy constructor and assignment operator could not be generated.\n",
        "Line" : 63,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# Compatibility warnings not applicable to Google Test.\n\n# Resolved overload was found by argument-dependent lookup.\n",
        "Line" : 65,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# 1500 is Visual Studio 2008\n",
        "Line" : 69,
        "CharPositionInLine" : 33
      },
      "13" : {
        "Text" : "# Conditional expression is constant.\n\n# When compiling with /W4, we get several instances of C4127\n\n# (Conditional expression is constant). In our code, we disable that\n\n# warning on a case-by-case basis. However, on Visual Studio 2005,\n\n# the warning fires on std::list. Therefore on that compiler and earlier,\n\n# we disable the warning project-wide.\n",
        "Line" : 70,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# 1700 is Visual Studio 2012.\n",
        "Line" : 78,
        "CharPositionInLine" : 39
      },
      "15" : {
        "Text" : "# Suppress \"unreachable code\" warning on VS 2012 and later.\n\n# http://stackoverflow.com/questions/3232669 explains the issue.\n",
        "Line" : 79,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# Until version 4.3.2, GCC doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 93,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Sun Pro doesn't provide macros to indicate whether exceptions and\n\n# RTTI are enabled, so we define GTEST_HAS_* explicitly.\n",
        "Line" : 101,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# CMake 2.8 changes Visual Age's compiler ID to \"XL\".\n",
        "Line" : 107,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Until version 9.0, Visual Age doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 110,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# RTTI can not be disabled in HP aCC compiler.\n",
        "Line" : 118,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# The pthreads library is available and allowed.\n",
        "Line" : 122,
        "CharPositionInLine" : 32
      },
      "22" : {
        "Text" : "# For building gtest's own tests and samples.\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# For building the gtest libraries.\n",
        "Line" : 136,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# type can be either STATIC or SHARED to denote a static or shared library.\n\n# ARGN refers to additional arguments after 'cxx_flags'.\n",
        "Line" : 143,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "########################################################################\n\n#\n\n# Helper functions for creating build targets.\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# cxx_executable_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ executable that depends on the given libraries and\n\n# is built from the given source files with the given compiler flags.\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# To support mixing linking in static and dynamic libraries, link each\n\n# library in with an extra call to target_link_libraries.\n",
        "Line" : 187,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# cxx_executable(name dir lib srcs...)\n\n#\n\n# creates a named target that depends on the given libs and is built\n\n# from the given source files.  dir/name.cc is implicitly included in\n\n# the source file list.\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Sets PYTHONINTERP_FOUND and PYTHON_EXECUTABLE.\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# cxx_test_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ test that depends on the given libs and is built\n\n# from the given source files with the given compiler flags.\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# cxx_test(name libs srcs...)\n\n#\n\n# creates a named test target that depends on the given libs and is\n\n# built from the given source files.  Unlike cxx_test_with_flags,\n\n# test/name.cc is already implicitly included in the source file list.\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# py_test(name)\n\n#\n\n# creates a Python test with the given name whose main module is in\n\n# test/name.py.  It does nothing if Python is not installed.\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# We are not supporting Python tests on Linux yet as they consider\n\n# all Linux environments to be google3 and try to use google3 features.\n",
        "Line" : 231,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# ${CMAKE_BINARY_DIR} is known at configuration time, so we can\n\n# directly bind it from cmake. ${CTEST_CONFIGURATION_TYPE} is known\n\n# only at ctest runtime (by calling ctest -c <Configuration>), so\n\n# we have to escape $ to delay variable substitution here.\n",
        "Line" : 234,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 36
    },
    "libraries/gtest/make/Makefile" : {
      "ObjectId" : "9ac74493ba55246597e90b898fae847ae358eab5",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# A sample Makefile for building Google Test and using it in user\n\n# tests.  Please tweak it to suit your environment and project.  You\n\n# may want to move it to your project's root directory.\n\n#\n\n# SYNOPSIS:\n\n#\n\n#   make [all]  - makes everything.\n\n#   make TARGET - makes the given target.\n\n#   make clean  - removes all files generated by make.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Please tweak the following variable definitions as needed by your\n\n# project, except GTEST_HEADERS, which you can use in your own targets\n\n# but shouldn't modify.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Points to the root of Google Test, relative to where this file is.\n\n# Remember to tweak this if you move this file.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Where to find user code.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Flags passed to the preprocessor.\n\n# Set Google Test's header directory as a system directory, such that\n\n# the compiler doesn't generate warnings in Google Test headers.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Flags passed to the C++ compiler.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# All tests produced by this Makefile.  Remember to add new tests you\n\n# created to the list.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# All Google Test headers.  Usually you shouldn't change this\n\n# definition.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# House-keeping build targets.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Builds gtest.a and gtest_main.a.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Usually you shouldn't tweak such internal variables, indicated by a\n\n# trailing _.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# For simplicity and to avoid depending on Google Test's\n\n# implementation details, the dependencies specified below are\n\n# conservative and not optimized.  This is fine as Google Test\n\n# compiles fast and for ordinary users its source rarely changes.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Builds a sample test.  A test should link with either gtest.a or\n\n# gtest_main.a, depending on whether it defines its own main()\n\n# function.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "libraries/gtest/scripts/test/Makefile" : {
      "ObjectId" : "cdff584637b7a6e9df1fa43ce8f588c43815e561",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# A Makefile for fusing Google Test and building a sample test against it.\n\n#\n\n# SYNOPSIS:\n\n#\n\n#   make [all]  - makes everything.\n\n#   make TARGET - makes the given target.\n\n#   make check  - makes everything and runs the built sample test.\n\n#   make clean  - removes all files generated by make.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Points to the root of fused Google Test, relative to where this file is.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Paths to the fused gtest files.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Where to find the sample test.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Where to find gtest_main.cc.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Flags passed to the preprocessor.\n\n# We have no idea here whether pthreads is available in the system, so\n\n# disable its use.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Flags passed to the C++ compiler.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "libraries/optimo/CMakeLists.txt" : {
      "ObjectId" : "80f5e5f7d2967b714639f1d9b4b5e66dc383dc29",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2014  Victor Fragoso <vfragoso@cs.ucsb.edu>\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are\n\n# met:\n\n#\n\n#     * Redistributions of source code must retain the above copyright\n\n#       notice, this list of conditions and the following disclaimer.\n\n#\n\n#     * Redistributions in binary form must reproduce the above\n\n#       copyright notice, this list of conditions and the following\n\n#       disclaimer in the documentation and/or other materials provided\n\n#       with the distribution.\n\n#\n\n#     * Neither the name of the University of California, Santa Barbara nor the\n\n#       names of its contributors may be used to endorse or promote products\n\n#       derived from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL VICTOR FRAGOSO BE LIABLE FOR ANY DIRECT,\n\n# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\n# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n\n# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\n# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# C++11\n\n# Compiler-specific C++11 activation.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Mac OS X before Mavericks uses libstdc++ by default but does not support\n\n# c++11. Force it to use libc++.\n",
        "Line" : 50,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# Showing the C++ compiler flags\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Locations to search for Eigen\n\n# Eigen\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Setting CXX FLAGS appropriately. The code below was inspired from\n\n# Google CERES and modified for this library.\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Linux\n",
        "Line" : 83,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Mac OS X\n",
        "Line" : 89,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Linux\n",
        "Line" : 110,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Mac OS X\n",
        "Line" : 114,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# CLANG\n",
        "Line" : 119,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Installation of Headers\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "libraries/optimo/optimo/CMakeLists.txt" : {
      "ObjectId" : "eb69948a9f60854208b3e8f19c4d7092361ca37c",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#See root directory for macros \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "libraries/optimo/optimo/core/CMakeLists.txt" : {
      "ObjectId" : "47c2ae6456d17bba1ef0bd4f67c61ce97cfab16b",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tests:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "libraries/optimo/optimo/solvers/CMakeLists.txt" : {
      "ObjectId" : "016c1c1f2bc03472b8d157207c879352661dc7d3",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tests:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "libraries/spectra/benchmark/Makefile" : {
      "ObjectId" : "e3de13405a1dbb79a3833e079b6e38f47881e9a4",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "libraries/spectra/test/Makefile" : {
      "ObjectId" : "7bb636465077437f25f89f1fe4dd152ee48652dc",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "libraries/statx/CMakeLists.txt" : {
      "ObjectId" : "23b9e49e7dc8072cfcd98694ac5f61a383ab2412",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2014  Victor Fragoso <vfragoso@cs.ucsb.edu>\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are\n\n# met:\n\n#\n\n#     * Redistributions of source code must retain the above copyright\n\n#       notice, this list of conditions and the following disclaimer.\n\n#\n\n#     * Redistributions in binary form must reproduce the above\n\n#       copyright notice, this list of conditions and the following\n\n#       disclaimer in the documentation and/or other materials provided\n\n#       with the distribution.\n\n#\n\n#     * Neither the name of the University of California, Santa Barbara nor the\n\n#       names of its contributors may be used to endorse or promote products\n\n#       derived from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL VICTOR FRAGOSO BE LIABLE FOR ANY DIRECT,\n\n# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\n# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n\n# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\n# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# C++11\n\n# Compiler-specific C++11 activation.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Mac OS X before Mavericks uses libstdc++ by default but does not support\n\n# c++11. Force it to use libc++.\n",
        "Line" : 52,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# Activate CERES\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Eigen\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Google Flags\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Google Logging\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Google ceres-solver\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Check for CERES\n",
        "Line" : 95,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# BLAS\n",
        "Line" : 105,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# LAPACK\n",
        "Line" : 108,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Find and include optimo headers\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Polygamma functions from burkardt\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Setting CXX FLAGS appropriately. The code below was inspired from\n\n# Google CERES and modified for this library.\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Linux\n",
        "Line" : 137,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Mac OS X\n",
        "Line" : 144,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Linux\n",
        "Line" : 165,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Mac OS X\n",
        "Line" : 169,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# CLANG\n",
        "Line" : 174,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Main Library\n\n# Note: Gumbel parameter estimator was removed due to compatibility issues with Eigen 3.2.3.\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Check if CERES was activated\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Adding subdirectory\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Exporting target for Theia\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "libraries/statx/statx/CMakeLists.txt" : {
      "ObjectId" : "918483d3f94fed44fc5d446e69dc1f5fd467e8e1",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#See root directory for macros \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "libraries/statx/statx/distributions/CMakeLists.txt" : {
      "ObjectId" : "34507adb18d4d30f99607d2b087984a044111ac6",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tests:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#See root directory for macros \n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "libraries/statx/statx/distributions/evd/CMakeLists.txt" : {
      "ObjectId" : "ce9e98d4671af5308dfb9a2bae065b04049b99ed",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tests:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "libraries/statx/statx/utils/CMakeLists.txt" : {
      "ObjectId" : "9ae82d71fe427d6eb2fb1123c202d54382e7e498",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libraries/stlplus3/CMakeLists.txt" : {
      "ObjectId" : "fc0b314ffd5b14642468d8d8040b09d5891567d4",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libraries/visual_sfm/CMakeLists.txt" : {
      "ObjectId" : "6259a65ae3559e9600c82469dfd9e45041656571",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libraries/vlfeat/CMakeLists.txt" : {
      "ObjectId" : "7f4ffc79695a97ff78b797e5e6569d601f34934a",
      "LastModified" : "2018-11-02T17:22:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/theia/CMakeLists.txt" : {
      "ObjectId" : "2d817501ca05cea6f54b1209aeddab830bf51bf7",
      "LastModified" : "2019-02-28T17:17:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2013 The Regents of the University of California (Regents).\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are\n\n# met:\n\n#\n\n#     * Redistributions of source code must retain the above copyright\n\n#       notice, this list of conditions and the following disclaimer.\n\n#\n\n#     * Redistributions in binary form must reproduce the above\n\n#       copyright notice, this list of conditions and the following\n\n#       disclaimer in the documentation and/or other materials provided\n\n#       with the distribution.\n\n#\n\n#     * Neither the name of The Regents or University of California nor the\n\n#       names of its contributors may be used to endorse or promote products\n\n#       derived from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n# Please contact the author of this library if you have any questions.\n\n# Author: Chris Sweeney (cmsweeney@cs.ucsb.edu)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create empty output file\n",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Get short filename\n",
        "Line" : 38,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Replace filename spaces & extension separator for C compatibility\n",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Read hex data from file\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Convert hex data for C compatibility\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Append data to output file\n",
        "Line" : 46,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Add headers\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add sources\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    }
  },
  "FileTypes" : {
    "CMAKE" : 71,
    "MAKEFILE" : 4,
    "AUTOMAKE" : 1
  },
  "ElapsedTime" : 2515
}