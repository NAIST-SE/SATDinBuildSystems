{
  "Repository" : "28597630",
  "Revision" : "HEAD",
  "ObjectId" : "330635e7f42dcd0036b7d1b529be530607f4dc81",
  "CommitTime" : "2019-04-05T22:03:32Z",
  "Files" : {
    "pom.xml" : {
      "ObjectId" : "4b5dd29c96c251d06aaaa038acfea66cee76f77c",
      "LastModified" : "2019-03-29T17:35:08Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : " OS-specific JVM arguments for running integration tests ",
        "Line" : 77,
        "CharPositionInLine" : 67
      },
      "2" : {
        "Text" : " Adds scripts to main jar, in-memory jar, sources jar, and standalone \n\t\t\tjar ",
        "Line" : 94,
        "CharPositionInLine" : 11
      },
      "3" : {
        "Text" : " <exclude>*.sh</exclude> ",
        "Line" : 106,
        "CharPositionInLine" : 38
      },
      "4" : {
        "Text" : " applies to sparkDML.sh ",
        "Line" : 106,
        "CharPositionInLine" : 70
      },
      "5" : {
        "Text" : " PLEASE DO NOT REMOVE! NEEDED to \"PACKAGE\" ANTLR RUNTIME INTO SYSTEMML.JAR ",
        "Line" : 162,
        "CharPositionInLine" : 86
      },
      "6" : {
        "Text" : " Include signature files so that recent versions of Java will run \n\t\t\t\t\t\tthe resulting jar without complaining about \"Invalid signature file digest \n\t\t\t\t\t\tfor Manifest main attributes\". ",
        "Line" : 187,
        "CharPositionInLine" : 41
      },
      "7" : {
        "Text" : " Test suite classes kept in a separate folder for compatibility \n\t\t\t\t\t\t\t\t\twith the Eclipse JUnit test runner. ",
        "Line" : 215,
        "CharPositionInLine" : 49
      },
      "8" : {
        "Text" : " 2.4.1, 2.5.0, 2.6.1, 3.4.0 ",
        "Line" : 361,
        "CharPositionInLine" : 80
      },
      "9" : {
        "Text" : " Currently, all tests are integration tests. ",
        "Line" : 373,
        "CharPositionInLine" : 56
      },
      "10" : {
        "Text" : "$NO-MVN-MAN-VER$ ",
        "Line" : 377,
        "CharPositionInLine" : 52
      },
      "11" : {
        "Text" : " STDERR/STDOUT to individual .txt files instead of console ",
        "Line" : 380,
        "CharPositionInLine" : 72
      },
      "12" : {
        "Text" : " Run (num cores) test harness classes in parallel, each in a separate \n\t\t\t\t\t\tprocess ",
        "Line" : 384,
        "CharPositionInLine" : 18
      },
      "13" : {
        "Text" : " Third argument prevents Java from popping up lots of windows on \n\t\t\t\t\t\tMacOS ",
        "Line" : 389,
        "CharPositionInLine" : 16
      },
      "14" : {
        "Text" : " All tests are integration tests as far as Maven is concerned. ",
        "Line" : 394,
        "CharPositionInLine" : 77
      },
      "15" : {
        "Text" : " *** HACK ALERT *** HACK ALERT *** HACK ALERT *** ",
        "Line" : 411,
        "CharPositionInLine" : 62
      },
      "16" : {
        "Text" : " Failsafe 2.18 has a bug in computing # cores, so use 2.17 ",
        "Line" : 412,
        "CharPositionInLine" : 71
      },
      "17" : {
        "Text" : "$NO-MVN-MAN-VER$ ",
        "Line" : 413,
        "CharPositionInLine" : 52
      },
      "18" : {
        "Text" : " *** END HACK *** ",
        "Line" : 414,
        "CharPositionInLine" : 30
      },
      "19" : {
        "Text" : " STDERR/STDOUT to individual .txt files instead of console ",
        "Line" : 426,
        "CharPositionInLine" : 72
      },
      "20" : {
        "Text" : " Tests are grouped into suites, one suite per package. ",
        "Line" : 429,
        "CharPositionInLine" : 68
      },
      "21" : {
        "Text" : " 2 processes per test ",
        "Line" : 433,
        "CharPositionInLine" : 35
      },
      "22" : {
        "Text" : " Limit Spark log output",
        "Line" : 437,
        "CharPositionInLine" : 36
      },
      "23" : {
        "Text" : " Last argument prevents Java from popping up lots of windows on \n\t\t\t\t\t\tMacOS ",
        "Line" : 443,
        "CharPositionInLine" : 16
      },
      "24" : {
        "Text" : " Path for GPU integration tests, enabled for gpuTests profile ",
        "Line" : 449,
        "CharPositionInLine" : 111
      },
      "25" : {
        "Text" : " <include>**/integration/applications/**/*Suite.java</include> ",
        "Line" : 450,
        "CharPositionInLine" : 77
      },
      "26" : {
        "Text" : " <include>**/integration/conversion/*Suite.java</include> ",
        "Line" : 451,
        "CharPositionInLine" : 72
      },
      "27" : {
        "Text" : " <include>**/integration/functions/data/*Suite.java</include> ",
        "Line" : 452,
        "CharPositionInLine" : 76
      },
      "28" : {
        "Text" : " <include>**/integration/functions/codegenalg/*Suite.java</include> ",
        "Line" : 464,
        "CharPositionInLine" : 82
      },
      "29" : {
        "Text" : " <include>**/integration/functions/**/*Test*.java</include> ",
        "Line" : 465,
        "CharPositionInLine" : 74
      },
      "30" : {
        "Text" : " <include>**/integration/mlcontext/algorithms/*Suite.java</include> ",
        "Line" : 467,
        "CharPositionInLine" : 82
      },
      "31" : {
        "Text" : " <include>**/integration/scalability/**/*Test.java</include> ",
        "Line" : 469,
        "CharPositionInLine" : 75
      },
      "32" : {
        "Text" : " NOTE: We don't clean up systemml.egg-info since this makes it \n\t\t\t\t\t\t\tdifficult to uninstall a dev version after a maven clean ",
        "Line" : 503,
        "CharPositionInLine" : 68
      },
      "33" : {
        "Text" : " remove antlr tokens files during initialize phase so antlr4 ",
        "Line" : 541,
        "CharPositionInLine" : 75
      },
      "34" : {
        "Text" : " plugin can regenerate them during generate-sources phase ",
        "Line" : 542,
        "CharPositionInLine" : 72
      },
      "35" : {
        "Text" : " <argument>${skipTests}</argument> ",
        "Line" : 629,
        "CharPositionInLine" : 77
      },
      "36" : {
        "Text" : " Profile for Windows builds. Not currently needed, but might be needed \n\t\t\t\tin the future. ",
        "Line" : 744,
        "CharPositionInLine" : 23
      },
      "37" : {
        "Text" : " Extra JVM args for Windows go here. ",
        "Line" : 752,
        "CharPositionInLine" : 49
      },
      "38" : {
        "Text" : " Prevent m2e warnings in Eclipse. ",
        "Line" : 767,
        "CharPositionInLine" : 48
      },
      "39" : {
        "Text" : " Jupyter Notebooks ",
        "Line" : 894,
        "CharPositionInLine" : 35
      },
      "40" : {
        "Text" : " Generated antlr files ",
        "Line" : 896,
        "CharPositionInLine" : 39
      },
      "41" : {
        "Text" : " Generated python files ",
        "Line" : 899,
        "CharPositionInLine" : 40
      },
      "42" : {
        "Text" : " Sphinx reStructuredText files ",
        "Line" : 901,
        "CharPositionInLine" : 47
      },
      "43" : {
        "Text" : " Compiled ptx file from nvcc ",
        "Line" : 903,
        "CharPositionInLine" : 45
      },
      "44" : {
        "Text" : " Proto files ",
        "Line" : 905,
        "CharPositionInLine" : 29
      },
      "45" : {
        "Text" : " Test Validation files ",
        "Line" : 908,
        "CharPositionInLine" : 39
      },
      "46" : {
        "Text" : " Perftest requirement file ",
        "Line" : 920,
        "CharPositionInLine" : 43
      },
      "47" : {
        "Text" : " profile to enable running tests on the GPU ",
        "Line" : 929,
        "CharPositionInLine" : 54
      },
      "48" : {
        "Text" : " Can be used to ignore doclint javadoc issues ",
        "Line" : 938,
        "CharPositionInLine" : 57
      },
      "49" : {
        "Text" : " <activation> <jdk>[1.8,)</jdk> </activation> ",
        "Line" : 940,
        "CharPositionInLine" : 57
      },
      "50" : {
        "Text" : " Profile to create binary distributions. Execute with `mvn clean package \n\t\t\t\t-P distribution` ",
        "Line" : 948,
        "CharPositionInLine" : 25
      },
      "51" : {
        "Text" : " Will generate META-INF/DEPENDENCIES META-INF/LICENSE META-INF/NOTICE ",
        "Line" : 1044,
        "CharPositionInLine" : 88
      },
      "52" : {
        "Text" : " Need to include the following packages, so exclude others: org.apache.sysml.api \n\t\t\t\t\t\t\t\torg.apache.sysml.runtime.instructions.spark.utils (for RDDConverterUtils, \n\t\t\t\t\t\t\t\tetc) org.apache.sysml.runtime.matrix (for MatrixCharacteristics, etc) org.apache.sysml.runtime.matrix.data \n\t\t\t\t\t\t\t\t(for MatrixIndexes, MatrixBlock, etc) org.apache.sysml.udf ",
        "Line" : 1060,
        "CharPositionInLine" : 71
      },
      "53" : {
        "Text" : " Attach python artifact so it can be installed and deployed. ",
        "Line" : 1150,
        "CharPositionInLine" : 74
      },
      "54" : {
        "Text" : " Profile to create lightweight jar (currently for JMLC only) ",
        "Line" : 1179,
        "CharPositionInLine" : 72
      },
      "55" : {
        "Text" : " Profile to create standalone jar. Execute with `mvn clean package \n\t\t\t\t-P standalone-jar` ",
        "Line" : 1220,
        "CharPositionInLine" : 27
      },
      "56" : {
        "Text" : " always exclude recursive fetching of native libraries ",
        "Line" : 1299,
        "CharPositionInLine" : 74
      },
      "57" : {
        "Text" : " always exclude recursive fetching of native libraries ",
        "Line" : 1312,
        "CharPositionInLine" : 74
      },
      "58" : {
        "Text" : " always exclude recursive fetching of native libraries ",
        "Line" : 1325,
        "CharPositionInLine" : 74
      },
      "59" : {
        "Text" : " always exclude recursive fetching of native libraries ",
        "Line" : 1338,
        "CharPositionInLine" : 74
      },
      "60" : {
        "Text" : " always exclude recursive fetching of native libraries ",
        "Line" : 1351,
        "CharPositionInLine" : 74
      },
      "61" : {
        "Text" : " for all platforms, to be included in the extra jar ",
        "Line" : 1358,
        "CharPositionInLine" : 62
      },
      "62" : {
        "Text" : " Commented until the PowerPC jcuda libraries are deployed for 0.9.0 version\n\t\t<dependency>\n\t\t\t<groupId>org.jcuda</groupId>\n\t\t\t<artifactId>jcuda-natives</artifactId>\n\t\t\t<classifier>linux-ppc_64</classifier>\n\t\t\t<version>${jcuda.version}</version>\n\t\t\t<scope>${jcuda.scope}</scope>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.jcuda</groupId>\n\t\t\t<artifactId>jcublas-natives</artifactId>\n\t\t\t<classifier>linux-ppc_64</classifier>\n\t\t\t<version>${jcuda.version}</version>\n\t\t\t<scope>${jcuda.scope}</scope>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.jcuda</groupId>\n\t\t\t<artifactId>jcusparse-natives</artifactId>\n\t\t\t<classifier>linux-ppc_64</classifier>\n\t\t\t<version>${jcuda.version}</version>\n\t\t\t<scope>${jcuda.scope}</scope>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.jcuda</groupId>\n\t\t\t<artifactId>jcusolver-natives</artifactId>\n\t\t\t<classifier>linux-ppc_64</classifier>\n\t\t\t<version>${jcuda.version}</version>\n\t\t\t<scope>${jcuda.scope}</scope>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.jcuda</groupId>\n\t\t\t<artifactId>jcudnn-natives</artifactId>\n\t\t\t<classifier>linux-ppc_64</classifier>\n\t\t\t<version>${jcuda.version}</version>\n\t\t\t<scope>${jcuda.scope}</scope>\n\t\t</dependency>\n\t\t ",
        "Line" : 1467,
        "CharPositionInLine" : 7
      },
      "63" : {
        "Text" : " Commented until the MacOS jcuda libraries are deployed for 0.9.0 version\n\t\t<dependency>\n\t\t\t<groupId>org.jcuda</groupId>\n\t\t\t<artifactId>jcuda-natives</artifactId>\n\t\t\t<classifier>apple-x86_64</classifier>\n\t\t\t<version>${jcuda.version}</version>\n\t\t\t<scope>${jcuda.scope}</scope>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.jcuda</groupId>\n\t\t\t<artifactId>jcublas-natives</artifactId>\n\t\t\t<classifier>apple-x86_64</classifier>\n\t\t\t<version>${jcuda.version}</version>\n\t\t\t<scope>${jcuda.scope}</scope>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.jcuda</groupId>\n\t\t\t<artifactId>jcusparse-natives</artifactId>\n\t\t\t<classifier>apple-x86_64</classifier>\n\t\t\t<version>${jcuda.version}</version>\n\t\t\t<scope>${jcuda.scope}</scope>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.jcuda</groupId>\n\t\t\t<artifactId>jcusolver-natives</artifactId>\n\t\t\t<classifier>apple-x86_64</classifier>\n\t\t\t<version>${jcuda.version}</version>\n\t\t\t<scope>${jcuda.scope}</scope>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.jcuda</groupId>\n\t\t\t<artifactId>jcudnn-natives</artifactId>\n\t\t\t<classifier>apple-x86_64</classifier>\n\t\t\t<version>${jcuda.version}</version>\n\t\t\t<scope>${jcuda.scope}</scope>\n\t\t</dependency>\n\t\t ",
        "Line" : 1505,
        "CharPositionInLine" : 7
      },
      "64" : {
        "Text" : " fast java compiler for codegen, consistent version w/ spark ",
        "Line" : 1606,
        "CharPositionInLine" : 71
      },
      "65" : {
        "Text" : " Libraries for yarn integration ",
        "Line" : 1632,
        "CharPositionInLine" : 42
      },
      "CommentCount" : 66
    },
    "src/main/cpp/CMakeLists.txt" : {
      "ObjectId" : "5dd27201a49a2be06993cfe05eae831c3e689ab8",
      "LastModified" : "2018-02-03T02:30:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Licensed to the Apache Software Foundation (ASF) under one\n\n# or more contributor license agreements.  See the NOTICE file\n\n# distributed with this work for additional information\n\n# regarding copyright ownership.  The ASF licenses this file\n\n# to you under the Apache License, Version 2.0 (the\n\n# \"License\"); you may not use this file except in compliance\n\n# with the License.  You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing,\n\n# software distributed under the License is distributed on an\n\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n\n# KIND, either express or implied.  See the License for the\n\n# specific language governing permissions and limitations\n\n# under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# All custom find modules\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Options to Use OpenBLAS or Intel MKL\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Build a shared libraray\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# sets the installation path to src/main/cpp/lib\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# sets the name of the output to include the os and the architecture\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# sets the name of the output to include the os and the architecture\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Option written to a config.h file\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Include directories. (added for Linux & Darwin, fix later for windows)\n\n# include paths can be spurious\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Include the binary dir which contains \"config.h\"\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Setting CXX compiler flags\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# OpenMP is required\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 12
    },
    "src/main/cpp/cmake/FindMKL.cmake" : {
      "ObjectId" : "f2a50eb8078368d6fe7127cfb34246e040cda274",
      "LastModified" : "2017-04-30T18:16:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Licensed to the Apache Software Foundation (ASF) under one\n\n# or more contributor license agreements.  See the NOTICE file\n\n# distributed with this work for additional information\n\n# regarding copyright ownership.  The ASF licenses this file\n\n# to you under the Apache License, Version 2.0 (the\n\n# \"License\"); you may not use this file except in compliance\n\n# with the License.  You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing,\n\n# software distributed under the License is distributed on an\n\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n\n# KIND, either express or implied.  See the License for the\n\n# specific language governing permissions and limitations\n\n# under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find the MKL libraries\n\n#\n\n# Options:\n\n#\n\n#   MKL_USE_SINGLE_DYNAMIC_LIBRARY  : use single dynamic library interface\n\n#   MKL_USE_STATIC_LIBS             : use static libraries\n\n#   MKL_MULTI_THREADED              : use multi-threading\n\n#\n\n# This module defines the following variables:\n\n#\n\n#   MKL_FOUND            : True mkl is found\n\n#   MKL_INCLUDE_DIR      : unclude directory\n\n#   MKL_LIBRARIES        : the libraries to link against.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ---[ Options\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ---[ Root folders\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ---[ Find include dir\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ---[ Find libraries\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/main/cpp/cmake/FindOpenBLAS.cmake" : {
      "ObjectId" : "bd6f2aaff5285efc8e91087295bb7b191908d772",
      "LastModified" : "2017-04-30T18:16:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Licensed to the Apache Software Foundation (ASF) under one\n\n# or more contributor license agreements.  See the NOTICE file\n\n# distributed with this work for additional information\n\n# regarding copyright ownership.  The ASF licenses this file\n\n# to you under the Apache License, Version 2.0 (the\n\n# \"License\"); you may not use this file except in compliance\n\n# with the License.  You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing,\n\n# software distributed under the License is distributed on an\n\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n\n# KIND, either express or implied.  See the License for the\n\n# specific language governing permissions and limitations\n\n# under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#    Check include files\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#    Check libraries\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/main/cpp/config.h.cmake" : {
      "ObjectId" : "e3f9407ebf17fb9bd37f6178344e355ed05d172f",
      "LastModified" : "2017-04-30T18:16:23Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/* Whether to use Open Blas */",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/* Whether to use Intel MKL */",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/main/cpp/kernels/Makefile" : {
      "ObjectId" : "ec10317d53c587dbcc00bf327055a9f5f7fcfd1e",
      "LastModified" : "2018-02-03T02:30:41Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Licensed to the Apache Software Foundation (ASF) under one\n\n# or more contributor license agreements.  See the NOTICE file\n\n# distributed with this work for additional information\n\n# regarding copyright ownership.  The ASF licenses this file\n\n# to you under the Apache License, Version 2.0 (the\n\n# \"License\"); you may not use this file except in compliance\n\n# with the License.  You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing,\n\n# software distributed under the License is distributed on an\n\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n\n# KIND, either express or implied.  See the License for the\n\n# specific language governing permissions and limitations\n\n# under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use these flags for precise math\n\n#CUDAFLAGS= -ptx -c -arch=sm_30 -ftz=false -prec-div=true -prec-sqrt=true\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/main/pythondoc/Makefile" : {
      "ObjectId" : "e68aeafd6afed14ccd102ae163a0afa59158c104",
      "LastModified" : "2018-02-03T02:30:41Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Licensed to the Apache Software Foundation (ASF) under one\n\n# or more contributor license agreements.  See the NOTICE file\n\n# distributed with this work for additional information\n\n# regarding copyright ownership.  The ASF licenses this file\n\n# to you under the Apache License, Version 2.0 (the\n\n# \"License\"); you may not use this file except in compliance\n\n# with the License.  You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing,\n\n# software distributed under the License is distributed on an\n\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n\n# KIND, either express or implied.  See the License for the\n\n# specific language governing permissions and limitations\n\n# under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Minimal makefile for Sphinx documentation\n\n#\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Put it first so that \"make\" without argument is like \"make help\".\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Catch-all target: route all unknown targets to Sphinx using the new\n\n# \"make mode\" option.  $(O) is meant as a shortcut for $(SPHINXOPTS).\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    }
  },
  "FileTypes" : {
    "CMAKE" : 3,
    "CMAKESOURCE" : 1,
    "MAKEFILE" : 2,
    "MAVEN" : 1
  },
  "ElapsedTime" : 6834
}