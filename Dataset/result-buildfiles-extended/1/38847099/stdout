{
  "Repository" : "38847099",
  "Revision" : "HEAD",
  "ObjectId" : "4619d58d498bcf6720a3122a6b98f480ce460efa",
  "CommitTime" : "2018-11-27T18:04:18Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "c12d4b1b20a16bfc838764921fe162a55593b7e4",
      "LastModified" : "2018-09-29T15:56:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#SET (CMAKE_CXX_COMPILER             \"/home/stefie10/dev/pidrone/src/ein/timecpp.sh\")\n\n#SET (CMAKE_CXX_COMPILER             \"/usr/bin/clang++-5.0\")\n\n#SET (CMAKE_C_COMPILER             \"/usr/bin/clang-5.0\")\n\n#SET (CMAKE_AR      \"/usr/bin/llvm-ar-5.0\")\n\n#SET (CMAKE_LINKER  \"/usr/bin/llvm-ld-5.0\")\n\n#SET (CMAKE_NM      \"/usr/bin/llvm-nm-5.0\")\n\n#SET (CMAKE_OBJDUMP \"/usr/bin/llvm-objdump-5.0\")\n\n#SET (CMAKE_RANLIB  \"/usr/bin/llvm-ranlib-5.0\")\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} ${OPENMP_FLAG} -O3 -std=c++11 -fpermissive\")\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# you must pick one robot. \n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/FindOpenCL.cmake" : {
      "ObjectId" : "4d3ed842c35da92b63faf748b7148b0100774b9d",
      "LastModified" : "2016-03-20T23:10:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindOpenCL\n\n# ----------\n\n#\n\n# Try to find OpenCL\n\n#\n\n# Once done this will define::\n\n#\n\n#   OpenCL_FOUND          - True if OpenCL was found\n\n#   OpenCL_INCLUDE_DIRS   - include directories for OpenCL\n\n#   OpenCL_LIBRARIES      - link against this library to use OpenCL\n\n#   OpenCL_VERSION_STRING - Highest supported OpenCL version (eg. 1.2)\n\n#   OpenCL_VERSION_MAJOR  - The major version of the OpenCL implementation\n\n#   OpenCL_VERSION_MINOR  - The minor version of the OpenCL implementation\n\n#\n\n# The module will also define two cache variables::\n\n#\n\n#   OpenCL_INCLUDE_DIR    - the OpenCL include directory\n\n#   OpenCL_LIBRARY        - the path to the OpenCL library\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2014 Matthaeus G. Chajdas\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindPackageHandleStandardArgs.cmake" : {
      "ObjectId" : "57ada51848c1d614dc97699de5d5a83b92330de6",
      "LastModified" : "2016-03-20T23:10:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindPackageHandleStandardArgs\n\n# -----------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module provides a function intended to be used in :ref:`Find Modules`\n\n# implementing :command:`find_package(<PackageName>)` calls.  It handles the\n\n# ``REQUIRED``, ``QUIET`` and version-related arguments of ``find_package``.\n\n# It also sets the ``<PackageName>_FOUND`` variable.  The package is\n\n# considered found if all variables listed contain valid results, e.g.\n\n# valid filepaths.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# .. command:: find_package_handle_standard_args\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#   There are two signatures::\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#     find_package_handle_standard_args(<PackageName>\n\n#       (DEFAULT_MSG|<custom-failure-message>)\n\n#       <required-var>...\n\n#       )\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#     find_package_handle_standard_args(<PackageName>\n\n#       [FOUND_VAR <result-var>]\n\n#       [REQUIRED_VARS <required-var>...]\n\n#       [VERSION_VAR <version-var>]\n\n#       [HANDLE_COMPONENTS]\n\n#       [CONFIG_MODE]\n\n#       [FAIL_MESSAGE <custom-failure-message>]\n\n#       )\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#   The ``<PackageName>_FOUND`` variable will be set to ``TRUE`` if all\n\n#   the variables ``<required-var>...`` are valid and any optional\n\n#   constraints are satisfied, and ``FALSE`` otherwise.  A success or\n\n#   failure message may be displayed based on the results and on\n\n#   whether the ``REQUIRED`` and/or ``QUIET`` option was given to\n\n#   the :command:`find_package` call.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#   The options are:\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#   ``(DEFAULT_MSG|<custom-failure-message>)``\n\n#     In the simple signature this specifies the failure message.\n\n#     Use ``DEFAULT_MSG`` to ask for a default message to be computed\n\n#     (recommended).  Not valid in the full signature.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#   ``FOUND_VAR <result-var>``\n\n#     Obsolete.  Specifies either ``<PackageName>_FOUND`` or\n\n#     ``<PACKAGENAME>_FOUND`` as the result variable.  This exists only\n\n#     for compatibility with older versions of CMake and is now ignored.\n\n#     Result variables of both names are always set for compatibility.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#   ``REQUIRED_VARS <required-var>...``\n\n#     Specify the variables which are required for this package.\n\n#     These may be named in the generated failure message asking the\n\n#     user to set the missing variable values.  Therefore these should\n\n#     typically be cache entries such as ``FOO_LIBRARY`` and not output\n\n#     variables like ``FOO_LIBRARIES``.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#   ``VERSION_VAR <version-var>``\n\n#     Specify the name of a variable that holds the version of the package\n\n#     that has been found.  This version will be checked against the\n\n#     (potentially) specified required version given to the\n\n#     :command:`find_package` call, including its ``EXACT`` option.\n\n#     The default messages include information about the required\n\n#     version and the version which has been actually found, both\n\n#     if the version is ok or not.\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#   ``HANDLE_COMPONENTS``\n\n#     Enable handling of package components.  In this case, the command\n\n#     will report which components have been found and which are missing,\n\n#     and the ``<PackageName>_FOUND`` variable will be set to ``FALSE``\n\n#     if any of the required components (i.e. not the ones listed after\n\n#     the ``OPTIONAL_COMPONENTS`` option of :command:`find_package`) are\n\n#     missing.\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#   ``CONFIG_MODE``\n\n#     Specify that the calling find module is a wrapper around a\n\n#     call to ``find_package(<PackageName> NO_MODULE)``.  This implies\n\n#     a ``VERSION_VAR`` value of ``<PackageName>_VERSION``.  The command\n\n#     will automatically check whether the package configuration file\n\n#     was found.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#   ``FAIL_MESSAGE <custom-failure-message>``\n\n#     Specify a custom failure message instead of using the default\n\n#     generated message.  Not recommended.\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Example for the simple signature:\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# .. code-block:: cmake\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#   find_package_handle_standard_args(LibXml2 DEFAULT_MSG\n\n#     LIBXML2_LIBRARY LIBXML2_INCLUDE_DIR)\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# The ``LibXml2`` package is considered to be found if both\n\n# ``LIBXML2_LIBRARY`` and ``LIBXML2_INCLUDE_DIR`` are valid.\n\n# Then also ``LibXml2_FOUND`` is set to ``TRUE``.  If it is not found\n\n# and ``REQUIRED`` was used, it fails with a\n\n# :command:`message(FATAL_ERROR)`, independent whether ``QUIET`` was\n\n# used or not.  If it is found, success will be reported, including\n\n# the content of the first ``<required-var>``.  On repeated CMake runs,\n\n# the same message will not be printed again.\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Example for the full signature:\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# .. code-block:: cmake\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#   find_package_handle_standard_args(LibArchive\n\n#     REQUIRED_VARS LibArchive_LIBRARY LibArchive_INCLUDE_DIR\n\n#     VERSION_VAR LibArchive_VERSION)\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# In this case, the ``LibArchive`` package is considered to be found if\n\n# both ``LibArchive_LIBRARY`` and ``LibArchive_INCLUDE_DIR`` are valid.\n\n# Also the version of ``LibArchive`` will be checked by using the version\n\n# contained in ``LibArchive_VERSION``.  Since no ``FAIL_MESSAGE`` is given,\n\n# the default messages will be printed.\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Another example for the full signature:\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# .. code-block:: cmake\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#   find_package(Automoc4 QUIET NO_MODULE HINTS /opt/automoc4)\n\n#   find_package_handle_standard_args(Automoc4  CONFIG_MODE)\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# In this case, a ``FindAutmoc4.cmake`` module wraps a call to\n\n# ``find_package(Automoc4 NO_MODULE)`` and adds an additional search\n\n# directory for ``automoc4``.  Then the call to\n\n# ``find_package_handle_standard_args`` produces a proper success/failure\n\n# message.\n\n#=======================================================================\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#=============================================================================\n\n# Copyright 2007-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# internal helper macro\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# internal helper macro to generate the failure message when used in CONFIG_MODE:\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# <name>_CONFIG is set, but FOUND is false, this means that some other of the REQUIRED_VARS was not found:\n",
        "Line" : 159,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# If _CONSIDERED_CONFIGS is set, the config-file has been found, but no suitable version.\n\n# List them all in the error message:\n",
        "Line" : 163,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# Simple case: No Config-file was found at all:\n",
        "Line" : 180,
        "CharPositionInLine" : 6
      },
      "33" : {
        "Text" : "# set up the arguments for CMAKE_PARSE_ARGUMENTS and check whether we are in\n\n# new extended or in the \"old\" mode:\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# now that we collected all arguments, process them\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# In config-mode, we rely on the variable <package>_CONFIG, which is set by find_package()\n\n# when it successfully found the config-file, including version checking:\n",
        "Line" : 220,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# collect all variables which were not found, so they can be printed, so the\n\n# user knows better what went wrong (#6375)\n",
        "Line" : 247,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# check if all passed variables are valid\n",
        "Line" : 251,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "# component handling\n",
        "Line" : 269,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "# version handling:\n",
        "Line" : 300,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# check with DEFINED here as the requested or found version may be \"0\"\n",
        "Line" : 305,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# exact version required\n",
        "Line" : 309,
        "CharPositionInLine" : 44
      },
      "42" : {
        "Text" : "# count the dots in the version string\n",
        "Line" : 310,
        "CharPositionInLine" : 8
      },
      "43" : {
        "Text" : "# add one dot because there is one dot more than there are components\n",
        "Line" : 312,
        "CharPositionInLine" : 8
      },
      "44" : {
        "Text" : "# Because of the C++ implementation of find_package() ${_NAME}_FIND_VERSION_COUNT\n\n# is at most 4 here. Therefore a simple lookup table is used.\n",
        "Line" : 315,
        "CharPositionInLine" : 10
      },
      "45" : {
        "Text" : "# minimum version specified:\n",
        "Line" : 345,
        "CharPositionInLine" : 17
      },
      "46" : {
        "Text" : "# if the package was not found, but a version was given, add that to the output:\n",
        "Line" : 356,
        "CharPositionInLine" : 6
      },
      "47" : {
        "Text" : "# print the result:\n",
        "Line" : 377,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 48
    },
    "cmake/FindPackageMessage.cmake" : {
      "ObjectId" : "a0349d3db99a3b446c421d9bdc14142ab278e72f",
      "LastModified" : "2016-03-20T23:10:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindPackageMessage\n\n# ------------------\n\n#\n\n#\n\n#\n\n# FIND_PACKAGE_MESSAGE(<name> \"message for user\" \"find result details\")\n\n#\n\n# This macro is intended to be used in FindXXX.cmake modules files.  It\n\n# will print a message once for each unique find result.  This is useful\n\n# for telling the user where a package was found.  The first argument\n\n# specifies the name (XXX) of the package.  The second argument\n\n# specifies the message to display.  The third argument lists details\n\n# about the find result so that if they change the message will be\n\n# displayed again.  The macro also obeys the QUIET argument to the\n\n# find_package command.\n\n#\n\n# Example:\n\n#\n\n# ::\n\n#\n\n#   if(X11_FOUND)\n\n#     FIND_PACKAGE_MESSAGE(X11 \"Found X11: ${X11_X11_LIB}\"\n\n#       \"[${X11_X11_LIB}][${X11_INCLUDE_DIR}]\")\n\n#   else()\n\n#    ...\n\n#   endif()\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2008-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Avoid printing a message repeatedly for the same find result.\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# The message has not yet been printed.\n",
        "Line" : 48,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# Save the find details in the cache to avoid printing the same\n\n# message again.\n",
        "Line" : 51,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 5
    },
    "src/cephes/Makefile" : {
      "ObjectId" : "0c02789e2d4ea98a6c741710490cd82a7c0590b8",
      "LastModified" : "2016-03-20T23:10:48Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/opencl/oclNbody/Makefile" : {
      "ObjectId" : "a0d518ad44e940449e03f656e655a710c39843a9",
      "LastModified" : "2016-03-20T23:10:48Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "################################################################################\r\n\n#\r\n\n# Copyright 1993-2009 NVIDIA Corporation.  All rights reserved.\r\n\n#\r\n\n# NOTICE TO USER:   \r\n\n#\r\n\n# This source code is subject to NVIDIA ownership rights under U.S. and \r\n\n# international Copyright laws.  \r\n\n#\r\n\n# NVIDIA MAKES NO REPRESENTATION ABOUT THE SUITABILITY OF THIS SOURCE \r\n\n# CODE FOR ANY PURPOSE.  IT IS PROVIDED \"AS IS\" WITHOUT EXPRESS OR \r\n\n# IMPLIED WARRANTY OF ANY KIND.  NVIDIA DISCLAIMS ALL WARRANTIES WITH \r\n\n# REGARD TO THIS SOURCE CODE, INCLUDING ALL IMPLIED WARRANTIES OF \r\n\n# MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE.   \r\n\n# IN NO EVENT SHALL NVIDIA BE LIABLE FOR ANY SPECIAL, INDIRECT, INCIDENTAL, \r\n\n# OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS \r\n\n# OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE \r\n\n# OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE \r\n\n# OR PERFORMANCE OF THIS SOURCE CODE.  \r\n\n#\r\n\n# U.S. Government End Users.  This source code is a \"commercial item\" as \r\n\n# that term is defined at 48 C.F.R. 2.101 (OCT 1995), consisting  of \r\n\n# \"commercial computer software\" and \"commercial computer software \r\n\n# documentation\" as such terms are used in 48 C.F.R. 12.212 (SEPT 1995) \r\n\n# and is provided to the U.S. Government only as a commercial end item.  \r\n\n# Consistent with 48 C.F.R.12.212 and 48 C.F.R. 227.7202-1 through \r\n\n# 227.7202-4 (JUNE 1995), all U.S. Government End Users acquire the \r\n\n# source code with only those rights set forth herein.\r\n\n#\r\n\n################################################################################\r\n\n#\r\n\n# Build script for project\r\n\n#\r\n\n################################################################################\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add source files here\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C/C++ source files (compiled with gcc / c++)\r\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "################################################################################\r\n\n# Rules and targets\r\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# NOTE: Assuming P4 based install until OpenCL becomes public\r\n\n# Adjust P4_Root, default is ${HOME}/perforce/\r\n\n# P4_ROOT=${HOME}/myperforce/\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/qtgui/untitled.pro" : {
      "ObjectId" : "47dd6046fb0f38e003234b51010e8da6b1517072",
      "LastModified" : "2016-03-20T23:10:48Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2015-05-19T14:24:35\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 4,
    "QMAKE" : 1,
    "MAKEFILE" : 2
  },
  "ElapsedTime" : 4227
}