{
  "Repository" : "33306685",
  "Revision" : "HEAD",
  "ObjectId" : "ed556a64e7f3220cffff775632b73cb326f0f766",
  "CommitTime" : "2018-10-11T20:31:34Z",
  "Files" : {
    "Makefile" : {
      "ObjectId" : "fe823073ddfff4d3fc704bb9a61edda847519a9a",
      "LastModified" : "2018-10-11T18:53:58Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# The versions of gmp and mpfr, for matching on the archive names.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The repo to clone valgrind from.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The architecture thhat we're buiding herbgrind for, in the syntax of\n\n# valgrind filename conventions for this sort of thing.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# We use the README file of a repo as a proxy for whether or not that\n\n# repo currently exists.\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Check out valgrind from source.\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Make a directory for the herbgrind tool\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ...and copy the files from the top level herbgrind folder into it.\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# The herbgrind makefile needs to be recreated, if it's source .am\n\n# file changes or we've just cloned the valgrind repo\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Copy over the latest version of all the herbgrind stuff, including\n\n# the .am file that we need for this step.\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Run a script to modify the setup files to include the herbgrind\n\n# directory.\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Run the autogen and configure scripts to turn the .am file into a\n\n# real makefile.\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# This is the target we call to bring in the dependencies, like gmp,\n\n# mpfr, and valgrind, and to make sure the herbgrind files have been\n\n# initially copied over.\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Then, let's run the python script to generate the mathreplace header\n\n# in src/\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# This is the target we call to actually get the executable built so\n\n# we can run herbgrind.\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Copy over the herbgrind sources again, because why the hell not.\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Run make install to build the binaries and put them in the right\n\n# place.\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Alias the compile target to just \"compile\" for ease of use\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Use the gmp README to tell if gmp has been extracted yet.\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Extract gmp, and rename its folder so we don't have to use the\n\n# version number all over the place.\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Touch the README to update its timestamp so that we don't build it\n\n# again next time unless the archive changes.\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Patch the gmp files to remove instances of memory functions which\n\n# will fail to link with the valgrind partial c library.\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Configure and make it, putting its output in the install folder\n\n# locally instead of in a global location, so it doesn't conflict with\n\n# other versions of gmp.\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Adding this flag ensures that MPFR doesn't allocate any of it's\n\n# variables as thread local. This is important because valgrind moves\n\n# around all the tool memory, so we get lots of problems if we let the\n\n# linker try to put thread local variables on our stack. Luckily,\n\n# herbgrind doesn't need threads, nor does valgrind, and client\n\n# programs will be serialized by valgrind, so it's safe to disable\n\n# these.\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Use the mpfr readme to tell if mpfr has been extracted yet.\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Extract mpfr, and rename its folder so we don't have to use the\n\n# version number all over the place.\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Touch the README to update its timestamp so that we don't build it\n\n# again next time unless the archive changes.\n",
        "Line" : 243,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Patch the mpfr files to allow us to use alternative memory functions\n\n# which will not fail at link time.\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Configure and make mpfr. We want to use the gmp we built locally for\n\n# this, and we'll install it locally too for the same reasons as\n\n# above.\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# The .out version is the binary; TESTS stores the expected output files\n",
        "Line" : 282,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 29
    },
    "bench/Makefile" : {
      "ObjectId" : "c7a6ff8b91e4f92803497fbea3e60e8fe9b93b9e",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# NOTE : does not build mini-nocall.sout (trouble on osx)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "bench/plotter/Makefile" : {
      "ObjectId" : "195c1fe551fea8b7bbe7d29256f91ebace30e368",
      "LastModified" : "2018-06-28T18:34:15Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/Makefile.am" : {
      "ObjectId" : "6a9306bdf74eec58561e82883bd54a4f318d892e",
      "LastModified" : "2018-06-28T18:34:15Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# herbgrind-<platform>\n\n#----------------------------------------------------------------------------\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# vgpreload_herbgrind-<platform>.so\n\n#----------------------------------------------------------------------------\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/docs/Makefile.am" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2016-05-24T21:52:55Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/tests/Makefile.am" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2016-05-24T21:52:55Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "test/herbie-crosseval/Makefile" : {
      "ObjectId" : "fde23e4da86e05efcfd1243113c3e2c6f4069cb7",
      "LastModified" : "2018-06-28T18:34:15Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0,
      "Errorlog" : "line 30:57 token recognition error at: '\\1'\n"
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 4,
    "AUTOMAKE" : 3
  },
  "ElapsedTime" : 1390
}