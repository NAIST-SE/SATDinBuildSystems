{
  "Repository" : "1360906",
  "Revision" : "HEAD",
  "ObjectId" : "2ac32b5702cadbead42a2b736659a526ac5815bb",
  "CommitTime" : "2016-07-28T13:50:16Z",
  "Files" : {
    "api/pom.xml" : {
      "ObjectId" : "739c73701f6f3e83f8275c6caeb460a38dd7c466",
      "LastModified" : "2014-06-17T10:07:58Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "hbm/pom.xml" : {
      "ObjectId" : "e5dfdaacfb013bf5293c4c40c32edb7cba42f10b",
      "LastModified" : "2015-07-24T10:07:04Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Currently the autogeneration of java code is disabled as it doesn't currently generate the enum fields at the moment.\n                 It used to but isn't working at the moment. ",
        "Line" : 46,
        "CharPositionInLine" : 65
      },
      "1" : {
        "Text" : " This generates the Java ",
        "Line" : 62,
        "CharPositionInLine" : 38
      },
      "2" : {
        "Text" : " This generates the SQL ",
        "Line" : 70,
        "CharPositionInLine" : 37
      },
      "CommentCount" : 3
    },
    "help/pom.xml" : {
      "ObjectId" : "cc7b753405cdef4a753dd435e373e459bf0297d1",
      "LastModified" : "2014-06-17T10:07:58Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "impl/pom.xml" : {
      "ObjectId" : "0db2fd5d26e0c7f42d2e4027bc67180050adb995",
      "LastModified" : "2015-07-24T10:07:04Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Similar to MySQL ",
        "Line" : 114,
        "CharPositionInLine" : 38
      },
      "1" : {
        "Text" : " Could be in the API, but SolrJ has quite a few dependencies. ",
        "Line" : 152,
        "CharPositionInLine" : 73
      },
      "2" : {
        "Text" : " We don't use this, would be nice to be optional\nin solr.\nIt pulls in other things as well which is why\nI'm\nexcluding it ",
        "Line" : 161,
        "CharPositionInLine" : 17
      },
      "3" : {
        "Text" : " TODO: The tests in the impl are failing at the moment. ",
        "Line" : 194,
        "CharPositionInLine" : 68
      },
      "CommentCount" : 4
    },
    "integration-tests/pom.xml" : {
      "ObjectId" : "8f4f10d5cd7afdd3ca94566fce92cb7a22a0347d",
      "LastModified" : "2010-06-28T09:04:03Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "ldap/pom.xml" : {
      "ObjectId" : "c80a0239118250e2ba9e8715b6a164bf12603929",
      "LastModified" : "2014-06-17T10:07:58Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "pack/pom.xml" : {
      "ObjectId" : "8ee898bed22d684f0c229451a324d7f5e7457b6b",
      "LastModified" : "2014-06-17T10:07:58Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "pom.xml" : {
      "ObjectId" : "7a073e2c07087ccd8a05ea914b0755fa4a175ab2",
      "LastModified" : "2016-03-10T10:27:36Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Set the paths back to standard maven pattern ",
        "Line" : 31,
        "CharPositionInLine" : 56
      },
      "1" : {
        "Text" : " Set the paths back to standard maven pattern ",
        "Line" : 63,
        "CharPositionInLine" : 59
      },
      "2" : {
        "Text" : " Internal project ",
        "Line" : 126,
        "CharPositionInLine" : 29
      },
      "CommentCount" : 3
    },
    "tool/pom.xml" : {
      "ObjectId" : "2a55c5c3e7a634239a50f2a68b1fe7457d7369ef",
      "LastModified" : "2016-03-10T10:27:36Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " We have to use grizzly to be able to inject HttpServletRequest/Response ",
        "Line" : 84,
        "CharPositionInLine" : 84
      },
      "1" : {
        "Text" : " Needed for generating PDF Files for export ",
        "Line" : 163,
        "CharPositionInLine" : 54
      },
      "2" : {
        "Text" : " We don't want to upgrade to a newer version as the license switched\n\t\t    from MPL+LGPL to AGPL and the AGPL isn't ECL compatible.",
        "Line" : 165,
        "CharPositionInLine" : 66
      },
      "3" : {
        "Text" : " So we can mock non-injected dependencies ",
        "Line" : 185,
        "CharPositionInLine" : 52
      },
      "4" : {
        "Text" : " Needed for powermock ",
        "Line" : 204,
        "CharPositionInLine" : 32
      },
      "5" : {
        "Text" : " Profile which should pull everything into the war so it can be run\n\t\t\t\t\t\t\t\t\t\twithout Sakai. ",
        "Line" : 219,
        "CharPositionInLine" : 29
      },
      "6" : {
        "Text" : " Sakai services ",
        "Line" : 235,
        "CharPositionInLine" : 28
      },
      "7" : {
        "Text" : " These exclusions are for external JS files which are in the project. ",
        "Line" : 273,
        "CharPositionInLine" : 84
      },
      "8" : {
        "Text" : " To test this is working run: mvn22 -DdryRun=true license:update-file-header ",
        "Line" : 274,
        "CharPositionInLine" : 91
      },
      "9" : {
        "Text" : "\n\t\t\t\t\t\t\t<exclude>%regex[main/webapp/static/lib/.*/.*]</exclude>\n\t\t\t\t\t\t\tThis is the same as the regex above but using ant. Anything inside a folder is excluded\n\t\t\t\t\t\t ",
        "Line" : 278,
        "CharPositionInLine" : 11
      },
      "10" : {
        "Text" : " This fires off the YUI compressor. ",
        "Line" : 299,
        "CharPositionInLine" : 48
      },
      "11" : {
        "Text" : "\n\t\t\t\t\t\t     The ajax-solr source code has a small change to allow a conversion\n\t\t\t\t\t\t     function when reading JSON.\n\t\t\t\t\t\t  ",
        "Line" : 309,
        "CharPositionInLine" : 12
      },
      "12" : {
        "Text" : " This doesn't compile with the closure compiler ",
        "Line" : 316,
        "CharPositionInLine" : 63
      },
      "13" : {
        "Text" : " This doesn't compile with the closure compiler ",
        "Line" : 359,
        "CharPositionInLine" : 63
      },
      "CommentCount" : 14
    }
  },
  "FileTypes" : {
    "MAVEN" : 9
  },
  "ElapsedTime" : 641
}