{
  "Repository" : "7506289",
  "Revision" : "HEAD",
  "ObjectId" : "765f0654b2d17dc60797fca147e19f5a8d883e37",
  "CommitTime" : "2019-04-18T02:50:11Z",
  "Files" : {
    "app/proguard-rules.pro" : {
      "ObjectId" : "eafb7bd9b2a1bfedc443c506fac6bf719cb3ce5a",
      "LastModified" : "2019-01-20T15:00:39Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# By default, the flags in this file are appended to flags specified\n\n# in C:\\Users\\Francisco\\android-sdks/tools/proguard/proguard-android.txt\n\n# You can edit the include path and order by changing the proguardFiles\n\n# directive in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add any project specific keep options here:\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "mupen64plus-audio-sles/proguard-rules.pro" : {
      "ObjectId" : "f1b424510da51fd82143bc74a0a801ae5a1e2fcd",
      "LastModified" : "2018-02-02T05:49:17Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# You can control the set of applied configuration files using the\n\n# proguardFiles setting in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Uncomment this to preserve the line number information for\n\n# debugging stack traces.\n\n#-keepattributes SourceFile,LineNumberTable\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If you keep the line number information, uncomment this to\n\n# hide the original source file name.\n\n#-renamesourcefileattribute SourceFile\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "mupen64plus-core/proguard-rules.pro" : {
      "ObjectId" : "f1b424510da51fd82143bc74a0a801ae5a1e2fcd",
      "LastModified" : "2018-02-02T05:49:17Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# You can control the set of applied configuration files using the\n\n# proguardFiles setting in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Uncomment this to preserve the line number information for\n\n# debugging stack traces.\n\n#-keepattributes SourceFile,LineNumberTable\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If you keep the line number information, uncomment this to\n\n# hide the original source file name.\n\n#-renamesourcefileattribute SourceFile\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "mupen64plus-core/upstream/projects/unix/Makefile" : {
      "ObjectId" : "6fa3366287ea34fef1c01b982c0b5eb7c61a058e",
      "LastModified" : "2019-03-18T04:15:29Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\n# *   Mupen64plus - Makefile                                                *\n\n# *   Mupen64Plus homepage: https://mupen64plus.org/                        *\n\n# *   Copyright (C) 2008-2009 Richard Goedeken                              *\n\n# *   Copyright (C) 2007-2008 DarkJeztr Tillin9                             *\n\n# *                                                                         *\n\n# *   This program is free software; you can redistribute it and/or modify  *\n\n# *   it under the terms of the GNU General Public License as published by  *\n\n# *   the Free Software Foundation; either version 2 of the License, or     *\n\n# *   (at your option) any later version.                                   *\n\n# *                                                                         *\n\n# *   This program is distributed in the hope that it will be useful,       *\n\n# *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *\n\n# *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *\n\n# *   GNU General Public License for more details.                          *\n\n# *                                                                         *\n\n# *   You should have received a copy of the GNU General Public License     *\n\n# *   along with this program; if not, write to the                         *\n\n# *   Free Software Foundation, Inc.,                                       *\n\n# *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.          *\n\n# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n# Makefile for Mupen64Plus Core\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# detect operating system\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# detect system architecture\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# base CFLAGS, LDLIBS, and LDFLAGS\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# directory paths\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Since we are building a shared library, we must compile with -fPIC on some architectures\n\n# On 32-bit x86 systems we do not want to use -fPIC because we don't have to and it has a big performance penalty on this arch\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# tweak flags for 32-bit build on 64-bit system\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# set special flags per-system\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# only export api symbols\n",
        "Line" : 196,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# only export api symbols\n",
        "Line" : 231,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# assembler also needs base include directories\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# disable verbose output\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# test for essential build dependencies\n",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# use system zlib on OSX\n",
        "Line" : 270,
        "CharPositionInLine" : 18
      },
      "14" : {
        "Text" : "# OpenCV lib\n",
        "Line" : 310,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# test for presence of SDL\n",
        "Line" : 322,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# OSD uses non-ES code and breaks attribs of video plugins\n",
        "Line" : 350,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# search for OpenGL libraries\n",
        "Line" : 368,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# set base program pointers and flags\n",
        "Line" : 399,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# no 'ldconfig' under OSX\n",
        "Line" : 415,
        "CharPositionInLine" : 20
      },
      "20" : {
        "Text" : "# compiler/linker flags for various compile-time options.\n\n# 1. macro for no assembly language\n",
        "Line" : 425,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# 2. variables for profiling and adding debugging symbols\n",
        "Line" : 430,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# 3. other options given to the makefile on the command line\n",
        "Line" : 446,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# 4. compile-time directory paths for building into the library\n",
        "Line" : 463,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# set installation options\n",
        "Line" : 468,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# list of required source files for compilation\n",
        "Line" : 482,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# MD5 lib\n",
        "Line" : 551,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# xxhash\n",
        "Line" : 557,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# oglft\n",
        "Line" : 582,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# source files for optional features\n",
        "Line" : 587,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# UGLY libopcodes version check (we check for > 2.28)\n",
        "Line" : 664,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# generate a list of object files to build, make a temporary directory for them\n",
        "Line" : 681,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# we have a special object file for the new dynarec\n",
        "Line" : 692,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# build targets\n",
        "Line" : 695,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# build dependency files\n",
        "Line" : 759,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# It is important to disable LTO for this object file\n\n# otherwise we can't extract usefull information from it.\n",
        "Line" : 765,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Script hackery for generating ASM include files for the new dynarec assembly code\n",
        "Line" : 770,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# standard build rules\n",
        "Line" : 775,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 38
    },
    "mupen64plus-input-android/proguard-rules.pro" : {
      "ObjectId" : "f1b424510da51fd82143bc74a0a801ae5a1e2fcd",
      "LastModified" : "2018-02-02T05:49:17Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# You can control the set of applied configuration files using the\n\n# proguardFiles setting in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Uncomment this to preserve the line number information for\n\n# debugging stack traces.\n\n#-keepattributes SourceFile,LineNumberTable\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If you keep the line number information, uncomment this to\n\n# hide the original source file name.\n\n#-renamesourcefileattribute SourceFile\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "mupen64plus-input-raphnet/libusb/Makefile.am" : {
      "ObjectId" : "0155625ac1e15990fe679b488a1366304b7c807f",
      "LastModified" : "2019-03-18T04:15:29Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "mupen64plus-input-raphnet/libusb/doc/Makefile.am" : {
      "ObjectId" : "76211f2dfa50bdb39e1b56d4307e0bb1be377a81",
      "LastModified" : "2019-03-18T04:15:29Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "mupen64plus-input-raphnet/libusb/examples/Makefile.am" : {
      "ObjectId" : "8081927417fb69e07058050ef3fccde21954b99c",
      "LastModified" : "2019-03-18T04:15:29Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "mupen64plus-input-raphnet/libusb/libusb/Makefile.am" : {
      "ObjectId" : "80e3705e520df50ee04a86f03ec29e96dfd89829",
      "LastModified" : "2019-03-18T04:15:29Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Rebuild the import lib from the .def so that MS and MinGW DLLs can be interchanged\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "mupen64plus-input-raphnet/libusb/tests/Makefile.am" : {
      "ObjectId" : "12c51056aa2e43fd5e5a140c7fabd4216813d625",
      "LastModified" : "2019-03-18T04:15:29Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "mupen64plus-input-raphnet/proguard-rules.pro" : {
      "ObjectId" : "f1b424510da51fd82143bc74a0a801ae5a1e2fcd",
      "LastModified" : "2019-03-18T04:15:29Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# You can control the set of applied configuration files using the\n\n# proguardFiles setting in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Uncomment this to preserve the line number information for\n\n# debugging stack traces.\n\n#-keepattributes SourceFile,LineNumberTable\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If you keep the line number information, uncomment this to\n\n# hide the original source file name.\n\n#-renamesourcefileattribute SourceFile\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "mupen64plus-input-raphnet/upstream/projects/unix/Makefile" : {
      "ObjectId" : "9ee72264812dfcca1697b9e4d5d391577f8f766e",
      "LastModified" : "2019-03-18T04:15:29Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\n# *   Mupen64plus-input-raphnetraw - Makefile                               *\n\n# *   Copyright (C) 2016 Raphael Assenat                                    *\n\n# *                                                                         *\n\n# *   Mupen64Plus homepage: http://code.google.com/p/mupen64plus/           *\n\n# *                                                                         *\n\n# *   This program is free software; you can redistribute it and/or modify  *\n\n# *   it under the terms of the GNU General Public License as published by  *\n\n# *   the Free Software Foundation; either version 2 of the License, or     *\n\n# *   (at your option) any later version.                                   *\n\n# *                                                                         *\n\n# *   This program is distributed in the hope that it will be useful,       *\n\n# *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *\n\n# *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *\n\n# *   GNU General Public License for more details.                          *\n\n# *                                                                         *\n\n# *   You should have received a copy of the GNU General Public License     *\n\n# *   along with this program; if not, write to the                         *\n\n# *   Free Software Foundation, Inc.,                                       *\n\n# *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.          *\n\n# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n# Makefile for raphnetraw Input plugin in Mupen64plus\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# detect operating system\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# detect system architecture, only if it matters for build flags\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# base CFLAGS, LDLIBS, and LDFLAGS\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Since we are building a shared library, we must compile with -fPIC on some architectures\n\n# On 32-bit x86 systems we do not want to use -fPIC because we don't have to and it has a big performance penalty on this arch\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# tweak flags for 32-bit build on 64-bit system\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# set special flags per-system\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#xcode-select has been around since XCode 3.0, i.e. OS X 10.5\n",
        "Line" : 125,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# test for presence of HIDLIB\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# set mupen64plus core API header path\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# reduced compile output when running make without V=1\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# set base program pointers and flags\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# set special flags for given Makefile parameters\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# set installation options\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# list of source files to compile\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# generate a list of object files build, make a temporary directory for them\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# build targets\n",
        "Line" : 254,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# build dependency files\n",
        "Line" : 301,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# standard build rules\n",
        "Line" : 305,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "mupen64plus-rsp-cxd4/proguard-rules.pro" : {
      "ObjectId" : "f1b424510da51fd82143bc74a0a801ae5a1e2fcd",
      "LastModified" : "2019-03-18T04:15:29Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# You can control the set of applied configuration files using the\n\n# proguardFiles setting in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Uncomment this to preserve the line number information for\n\n# debugging stack traces.\n\n#-keepattributes SourceFile,LineNumberTable\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If you keep the line number information, uncomment this to\n\n# hide the original source file name.\n\n#-renamesourcefileattribute SourceFile\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "mupen64plus-rsp-cxd4/upstream/projects/unix/Makefile" : {
      "ObjectId" : "077405e24875c0ca7e21bba0ce1ac9ff4e148f8b",
      "LastModified" : "2019-03-18T04:15:29Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\n# *   mupen64plus-rsp-cxd4 - Makefile                                       *\n\n# *   Mupen64Plus homepage: https://mupen64plus.org/                        *\n\n# *   Copyright (C) 2010 Jon Ring                                           *\n\n# *   Copyright (C) 2008-2009 Richard Goedeken                              *\n\n# *   Copyright (C) 2007-2008 DarkJeztr Tillin9                             *\n\n# *                                                                         *\n\n# *   This program is free software; you can redistribute it and/or modify  *\n\n# *   it under the terms of the GNU General Public License as published by  *\n\n# *   the Free Software Foundation; either version 2 of the License, or     *\n\n# *   (at your option) any later version.                                   *\n\n# *                                                                         *\n\n# *   This program is distributed in the hope that it will be useful,       *\n\n# *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *\n\n# *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *\n\n# *   GNU General Public License for more details.                          *\n\n# *                                                                         *\n\n# *   You should have received a copy of the GNU General Public License     *\n\n# *   along with this program; if not, write to the                         *\n\n# *   Free Software Foundation, Inc.,                                       *\n\n# *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.          *\n\n# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n# Makefile for CXD4 RSP plugin in Mupen64plus.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# detect operating system\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# detect system architecture\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# base CFLAGS, LDLIBS, and LDFLAGS\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Since we are building a shared library, we must compile with -fPIC on some architectures\n\n# On 32-bit x86 systems we do not want to use -fPIC because we don't have to and it has a big performance penalty on this arch\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# tweak flags for 32-bit build on 64-bit system\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# set special flags per-system\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# set mupen64plus core API header path\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# reduced compile output when running make without V=1\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# set base program pointers and flags\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# set special flags for given Makefile parameters\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# set installation options\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# list of source files to compile\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# generate a list of object files build, make a temporary directory for them\n",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# build targets\n",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# build dependency files\n",
        "Line" : 321,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# standard build rules\n",
        "Line" : 325,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "mupen64plus-rsp-hle/proguard-rules.pro" : {
      "ObjectId" : "f1b424510da51fd82143bc74a0a801ae5a1e2fcd",
      "LastModified" : "2019-03-18T04:15:29Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# You can control the set of applied configuration files using the\n\n# proguardFiles setting in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Uncomment this to preserve the line number information for\n\n# debugging stack traces.\n\n#-keepattributes SourceFile,LineNumberTable\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If you keep the line number information, uncomment this to\n\n# hide the original source file name.\n\n#-renamesourcefileattribute SourceFile\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "mupen64plus-rsp-hle/upstream/projects/unix/Makefile" : {
      "ObjectId" : "f9162a2bdeb832c1edf195908821e1424c3fcc74",
      "LastModified" : "2019-03-18T04:15:29Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\n# *   mupen64plus-rsp-hle - Makefile                                        *\n\n# *   Mupen64Plus homepage: https://mupen64plus.org/                        *\n\n# *   Copyright (C) 2008-2009 Richard Goedeken                              *\n\n# *   Copyright (C) 2007-2008 DarkJeztr Tillin9                             *\n\n# *                                                                         *\n\n# *   This program is free software; you can redistribute it and/or modify  *\n\n# *   it under the terms of the GNU General Public License as published by  *\n\n# *   the Free Software Foundation; either version 2 of the License, or     *\n\n# *   (at your option) any later version.                                   *\n\n# *                                                                         *\n\n# *   This program is distributed in the hope that it will be useful,       *\n\n# *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *\n\n# *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *\n\n# *   GNU General Public License for more details.                          *\n\n# *                                                                         *\n\n# *   You should have received a copy of the GNU General Public License     *\n\n# *   along with this program; if not, write to the                         *\n\n# *   Free Software Foundation, Inc.,                                       *\n\n# *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.          *\n\n# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n# Makefile for Mupen64 HLE RSP plugin in Mupen64plus.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# detect operating system\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# detect system architecture\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# base CFLAGS, LDLIBS, and LDFLAGS\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Since we are building a shared library, we must compile with -fPIC on some architectures\n\n# On 32-bit x86 systems we do not want to use -fPIC because we don't have to and it has a big performance penalty on this arch\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# tweak flags for 32-bit build on 64-bit system\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# set special flags per-system\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# only export api symbols\n",
        "Line" : 152,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# set mupen64plus core API header path\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# reduced compile output when running make without V=1\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# set base program pointers and flags\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# set special flags for given Makefile parameters\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# set installation options\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# enable/disable task dumping support\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# list of source files to compile\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# generate a list of object files build, make a temporary directory for them\n",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# build targets\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# build dependency files\n",
        "Line" : 309,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# standard build rules\n",
        "Line" : 313,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "mupen64plus-ui-console/proguard-rules.pro" : {
      "ObjectId" : "f1b424510da51fd82143bc74a0a801ae5a1e2fcd",
      "LastModified" : "2019-03-18T04:15:29Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# You can control the set of applied configuration files using the\n\n# proguardFiles setting in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Uncomment this to preserve the line number information for\n\n# debugging stack traces.\n\n#-keepattributes SourceFile,LineNumberTable\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If you keep the line number information, uncomment this to\n\n# hide the original source file name.\n\n#-renamesourcefileattribute SourceFile\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "mupen64plus-ui-console/upstream/projects/unix/Makefile" : {
      "ObjectId" : "42f11a98dfe64f03e9151a41728e849b4d2bc9cd",
      "LastModified" : "2019-03-18T04:23:50Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\n# *   Mupen64plus - Makefile                                                *\n\n# *   Mupen64Plus homepage: https://mupen64plus.org/                        *\n\n# *   Copyright (C) 2009 Richard42                                          *\n\n# *                                                                         *\n\n# *   This program is free software; you can redistribute it and/or modify  *\n\n# *   it under the terms of the GNU General Public License as published by  *\n\n# *   the Free Software Foundation; either version 2 of the License, or     *\n\n# *   (at your option) any later version.                                   *\n\n# *                                                                         *\n\n# *   This program is distributed in the hope that it will be useful,       *\n\n# *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *\n\n# *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *\n\n# *   GNU General Public License for more details.                          *\n\n# *                                                                         *\n\n# *   You should have received a copy of the GNU General Public License     *\n\n# *   along with this program; if not, write to the                         *\n\n# *   Free Software Foundation, Inc.,                                       *\n\n# *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.          *\n\n# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n# Makefile for Mupen64plus-ui-console\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# detect operation system\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# detect system architecture, only if it matters for build flags\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# base CFLAGS, LDLIBS, and LDFLAGS\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# set special flags per-system\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# test for presence of SDL\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# tweak flags for 32-bit build on 64-bit system\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# set mupen64plus core API header path\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# reduced compile output when running make without V=1\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# set base program pointers and flags\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# check if PIE is the default for the compiler\n",
        "Line" : 181,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# set installation options\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# set special flags for given Makefile parameters\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# note: COREDIR _must_ end in a slash if you want it to work; not necessary for the others\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# list of source files to compile\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# generate a list of object files build, make a temporary directory for them\n",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# build targets\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# build dependency files\n",
        "Line" : 322,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# standard build rules\n",
        "Line" : 326,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "mupen64plus-video-angrylion-plus/proguard-rules.pro" : {
      "ObjectId" : "f1b424510da51fd82143bc74a0a801ae5a1e2fcd",
      "LastModified" : "2019-03-18T04:15:29Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# You can control the set of applied configuration files using the\n\n# proguardFiles setting in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Uncomment this to preserve the line number information for\n\n# debugging stack traces.\n\n#-keepattributes SourceFile,LineNumberTable\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If you keep the line number information, uncomment this to\n\n# hide the original source file name.\n\n#-renamesourcefileattribute SourceFile\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "mupen64plus-video-angrylion-plus/upstream/CMakeLists.txt" : {
      "ObjectId" : "3f3b37bbf5ba15095198fbb440de4fe6071d3074",
      "LastModified" : "2019-03-18T04:15:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set policy CMP0042 for MacOS X\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# check for INTERPROCEDURAL_OPTIMIZATION support\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C++14 is required for the Parallel utility class\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# disable warnings to use unportable secure file IO\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# default to release build\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# RDP core library and shared plugin library\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# run script to generate version.h\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# link libgcc/libstdc++ statically, fixes cryptic \"_ZNSt13runtime_errorC1EPKc\" error\n",
        "Line" : 68,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# set PIC option for non-MinGW targets\n",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# set IPO option, if supported\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Project64 GFX Plugin (Windows only)\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Mupen64Plus GFX plugin\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "mupen64plus-video-glide64mk2/proguard-rules.pro" : {
      "ObjectId" : "f1b424510da51fd82143bc74a0a801ae5a1e2fcd",
      "LastModified" : "2019-03-18T04:15:29Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# You can control the set of applied configuration files using the\n\n# proguardFiles setting in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Uncomment this to preserve the line number information for\n\n# debugging stack traces.\n\n#-keepattributes SourceFile,LineNumberTable\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If you keep the line number information, uncomment this to\n\n# hide the original source file name.\n\n#-renamesourcefileattribute SourceFile\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "mupen64plus-video-glide64mk2/upstream/projects/unix/Makefile" : {
      "ObjectId" : "f037bc67c3bf4b7cf0abc0b3a7ee033864722673",
      "LastModified" : "2019-03-18T04:25:31Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\n# *   Mupen64plus-video-glide64mk2 - Makefile                               *\n\n# *   Mupen64Plus homepage: https://mupen64plus.org/                        *\n\n# *   Copyright (C) 2010 Jon Ring                                           *\n\n# *   Copyright (C) 2007-2009 Richard Goedeken                              *\n\n# *   Copyright (C) 2007-2008 DarkJeztr Tillin9                             *\n\n# *                                                                         *\n\n# *   This program is free software; you can redistribute it and/or modify  *\n\n# *   it under the terms of the GNU General Public License as published by  *\n\n# *   the Free Software Foundation; either version 2 of the License, or     *\n\n# *   (at your option) any later version.                                   *\n\n# *                                                                         *\n\n# *   This program is distributed in the hope that it will be useful,       *\n\n# *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *\n\n# *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *\n\n# *   GNU General Public License for more details.                          *\n\n# *                                                                         *\n\n# *   You should have received a copy of the GNU General Public License     *\n\n# *   along with this program; if not, write to the                         *\n\n# *   Free Software Foundation, Inc.,                                       *\n\n# *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.          *\n\n# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n# Makefile for Glide64mk2 plugin in Mupen64Plus\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# detect operating system\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# detect system architecture\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# base CFLAGS, LDLIBS, and LDFLAGS\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Since we are building a shared library, we must compile with -fPIC on some architectures\n\n# On 32-bit x86 systems we do not want to use -fPIC because we don't have to and it has a big performance penalty on this arch\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# tweak flags for 32-bit build on 64-bit system\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# set special flags per-system\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# only export api symbols\n",
        "Line" : 185,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# use system zlib on OSX\n",
        "Line" : 201,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# search for OpenGL libraries\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# test for presence of SDL\n",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# set mupen64plus core API header path\n",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# reduced compile output when running make without V=1\n",
        "Line" : 311,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# set base program pointers and flags\n",
        "Line" : 320,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# set special flags for given Makefile parameters\n",
        "Line" : 330,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# set installation options\n",
        "Line" : 349,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# list of source files to compile\n",
        "Line" : 366,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# generate a list of object files build, make a temporary directory for them\n",
        "Line" : 443,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# build targets\n",
        "Line" : 449,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# build dependency files\n",
        "Line" : 501,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# standard build rules\n",
        "Line" : 507,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "mupen64plus-video-gliden64/proguard-rules.pro" : {
      "ObjectId" : "f1b424510da51fd82143bc74a0a801ae5a1e2fcd",
      "LastModified" : "2019-03-18T04:15:29Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# You can control the set of applied configuration files using the\n\n# proguardFiles setting in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Uncomment this to preserve the line number information for\n\n# debugging stack traces.\n\n#-keepattributes SourceFile,LineNumberTable\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If you keep the line number information, uncomment this to\n\n# hide the original source file name.\n\n#-renamesourcefileattribute SourceFile\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "mupen64plus-video-gliden64/upstream/projects/msvc/GLideNUI.pro" : {
      "ObjectId" : "8329544dca3294f43d4a7bdaeb3e91811e380155",
      "LastModified" : "2019-03-18T04:15:29Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2015-01-26T21:59:49\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "mupen64plus-video-gliden64/upstream/src/CMakeLists.txt" : {
      "ObjectId" : "d414caa6aade6b22ba18eda39cc5febda14581c2",
      "LastModified" : "2019-03-26T03:14:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#check if we're running on Raspberry Pi\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Pandora as a SGX530, but it should share the bugs and limitations as SGX540\n",
        "Line" : 231,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Build type\n",
        "Line" : 306,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#check for compiler version\n",
        "Line" : 336,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Or else we get an error message, because cmake can't figure out from the \".o\"-suffix that it is a C-linker we need.\n",
        "Line" : 359,
        "CharPositionInLine" : 21
      },
      "5" : {
        "Text" : "# Or else we get an error message, because cmake can't figure out from the \".o\"-suffix that it is a C-linker we need.\n",
        "Line" : 392,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 6
    },
    "mupen64plus-video-gliden64/upstream/src/GLideNHQ/CMakeLists.txt" : {
      "ObjectId" : "e6dcec2b2442dde506b793f9e669290fcfab4659",
      "LastModified" : "2019-03-18T04:15:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build type\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#SET( CMAKE_CXX_FLAGS  \"${CMAKE_CXX_FLAGS} ${GCC_CPP11_COMPILE_FLAGS} \" )\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#      set_target_properties(GLideNHQ PROPERTIES LINK_SEARCH_START_STATIC 1)\n\n#      set_target_properties(GLideNHQ PROPERTIES LINK_SEARCH_END_STATIC 1)\n\n#      set(CMAKE_FIND_LIBRARY_SUFFIXES \".a\")\n\n#      find_library(PNGLIB libpng.a)\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Or else we get an error message, because cmake can't figure out from the \".o\"-suffix that it is a C-linker we need.\n",
        "Line" : 152,
        "CharPositionInLine" : 26
      },
      "CommentCount" : 4
    },
    "mupen64plus-video-gliden64/upstream/src/GLideNHQ/test/CMakeLists.txt" : {
      "ObjectId" : "7f166b490517cabd93ca6fc557ca104f64531810",
      "LastModified" : "2019-03-18T04:15:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build type\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#SET( CMAKE_CXX_FLAGS  \"${CMAKE_CXX_FLAGS} ${GCC_CPP11_COMPILE_FLAGS}\" )\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "mupen64plus-video-gliden64/upstream/src/GLideNUI/GLideNUI.pro" : {
      "ObjectId" : "7be53681e33f0d362743c3186623f665d429a3f3",
      "LastModified" : "2019-03-18T04:15:29Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2015-01-26T21:59:49\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "mupen64plus-video-gliden64/upstream/src/osal/CMakeLists.txt" : {
      "ObjectId" : "47ea468bcc4938f3e2459f69719424f88729bdc9",
      "LastModified" : "2019-03-18T04:15:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build type\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "mupen64plus-video-gln64/proguard-rules.pro" : {
      "ObjectId" : "f1b424510da51fd82143bc74a0a801ae5a1e2fcd",
      "LastModified" : "2019-03-18T04:15:29Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# You can control the set of applied configuration files using the\n\n# proguardFiles setting in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Uncomment this to preserve the line number information for\n\n# debugging stack traces.\n\n#-keepattributes SourceFile,LineNumberTable\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If you keep the line number information, uncomment this to\n\n# hide the original source file name.\n\n#-renamesourcefileattribute SourceFile\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "mupen64plus-video-rice/proguard-rules.pro" : {
      "ObjectId" : "f1b424510da51fd82143bc74a0a801ae5a1e2fcd",
      "LastModified" : "2019-03-18T04:15:29Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# You can control the set of applied configuration files using the\n\n# proguardFiles setting in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Uncomment this to preserve the line number information for\n\n# debugging stack traces.\n\n#-keepattributes SourceFile,LineNumberTable\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If you keep the line number information, uncomment this to\n\n# hide the original source file name.\n\n#-renamesourcefileattribute SourceFile\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "mupen64plus-video-rice/upstream/projects/unix/Makefile" : {
      "ObjectId" : "388575c4728bbb470f50d2fa2cbe94bde97518d5",
      "LastModified" : "2019-03-18T04:25:31Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\n# *   Mupen64plus-video-rice - Makefile                                     *\n\n# *   Mupen64Plus homepage: https://mupen64plus.org/                        *\n\n# *   Copyright (C) 2007-2009 Richard Goedeken                              *\n\n# *   Copyright (C) 2007-2008 DarkJeztr Tillin9                             *\n\n# *                                                                         *\n\n# *   This program is free software; you can redistribute it and/or modify  *\n\n# *   it under the terms of the GNU General Public License as published by  *\n\n# *   the Free Software Foundation; either version 2 of the License, or     *\n\n# *   (at your option) any later version.                                   *\n\n# *                                                                         *\n\n# *   This program is distributed in the hope that it will be useful,       *\n\n# *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *\n\n# *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *\n\n# *   GNU General Public License for more details.                          *\n\n# *                                                                         *\n\n# *   You should have received a copy of the GNU General Public License     *\n\n# *   along with this program; if not, write to the                         *\n\n# *   Free Software Foundation, Inc.,                                       *\n\n# *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.          *\n\n# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n# Makefile for RiceVideo plugin in Mupen64Plus\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# detect operating system\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# force PIC under OSX\n",
        "Line" : 46,
        "CharPositionInLine" : 11
      },
      "3" : {
        "Text" : "# detect system architecture\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# base CFLAGS, LDLIBS, and LDFLAGS\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Since we are building a shared library, we must compile with -fPIC on some architectures\n\n# On 32-bit x86 systems we do not want to use -fPIC because we don't have to and it has a big performance penalty on this arch\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# tweak flags for 32-bit build on 64-bit system\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# set special flags per-system\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# only export api symbols\n",
        "Line" : 163,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# test for essential build dependencies\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# search for OpenGL libraries\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# test for presence of SDL\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# set mupen64plus core API header path\n",
        "Line" : 243,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# reduced compile output when running make without V=1\n",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# set base program pointers and flags\n",
        "Line" : 274,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# set special flags for given Makefile parameters\n",
        "Line" : 284,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# set installation options\n",
        "Line" : 297,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# list of source files to compile\n",
        "Line" : 314,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# generate a list of object files build, make a temporary directory for them\n",
        "Line" : 360,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# build targets\n",
        "Line" : 366,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# build dependency files\n",
        "Line" : 414,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# standard build rules\n",
        "Line" : 420,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 22
    },
    "ndkLibs/SDL2/CMakeLists.txt" : {
      "ObjectId" : "0128c7ac7d3e6aaa5cd614f2305f43ab95ee77d2",
      "LastModified" : "2019-03-18T04:15:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# !!! FIXME: this should probably do \"MACOSX_RPATH ON\" as a target property\n\n# !!! FIXME:  for the SDL2 shared library (so you get an\n\n# !!! FIXME:  install_name (\"soname\") of \"@rpath/libSDL-whatever.dylib\"\n\n# !!! FIXME:  instead of \"/usr/local/lib/libSDL-whatever.dylib\"), but I'm\n\n# !!! FIXME:  punting for now and leaving the existing behavior. Until this\n\n# !!! FIXME:  properly resolved, this line silences a warning in CMake 3.0+.\n\n# !!! FIXME:  remove it and this comment entirely once the problem is\n\n# !!! FIXME:  properly resolved.\n\n#cmake_policy(SET CMP0042 OLD)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# General settings\n\n# Edit include/SDL_version.h and change the version, then:\n\n#   SDL_MICRO_VERSION += 1;\n\n#   SDL_INTERFACE_AGE += 1;\n\n#   SDL_BINARY_AGE += 1;\n\n# if any functions have been added, set SDL_INTERFACE_AGE to 0.\n\n# if backwards compatibility has been broken,\n\n# set SDL_BINARY_AGE and SDL_INTERFACE_AGE to 0.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# the following should match the versions in Xcode project file:\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set defaults preventing destination file conflicts\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Calculate a libtool-like version number\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# General settings & flags\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Check for 64 or 32 bit\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Get the platform\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# TODO: iOS?\n",
        "Line" : 122,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Don't mistake osx for unix\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# JavaScript does not yet have threading support, so disable pthreads when building for Emscripten.\n",
        "Line" : 142,
        "CharPositionInLine" : 40
      },
      "11" : {
        "Text" : "# Default option knobs\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Compiler info\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# VisualStudio 8.0+\n",
        "Line" : 165,
        "CharPositionInLine" : 34
      },
      "14" : {
        "Text" : "#set(CMAKE_C_FLAGS \"/ZI /WX- /\n",
        "Line" : 167,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Default flags, if not set otherwise\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Hackish, but does the trick on Win32\n",
        "Line" : 187,
        "CharPositionInLine" : 37
      },
      "17" : {
        "Text" : "# Make sure /RTC1 is disabled, otherwise it will use functions from the CRT\n",
        "Line" : 203,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Those are used for pkg-config and friends, so that the SDL2.pc, sdl2-config,\n\n# etc. are created correctly.\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# When building shared lib for Windows with MinGW,\n\n# avoid the DLL having a \"lib\" prefix\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Emscripten toolchain has a nonempty default value for this, and the checks\n\n# in this file need to change that, so remember the original value, and\n\n# restore back to that afterwards. For check_function_exists() to work in\n\n# Emscripten, this value must be at its default value.\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# We build SDL on cygwin without the UNIX emulation layer\n",
        "Line" : 229,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# General includes\n",
        "Line" : 243,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# All these ENABLED_BY_DEFAULT vars will default to ON if not specified, so\n\n#  you only need to have a platform override them if they are disabling.\n",
        "Line" : 251,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Set up default values for the currently supported set of subsystems:\n\n# Emscripten/Javascript does not have assembly support, a dynamic library\n\n# loading architecture, low-level CPU inspection or multithreading.\n",
        "Line" : 255,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "#set_option(DEPENDENCY_TRACKING \"Use gcc -MMD -MT dependency tracking\" ON)\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# TODO: We should (should we?) respect cmake's ${BUILD_SHARED_LIBS} flag here\n\n# The options below are for compatibility to configure's default behaviour.\n",
        "Line" : 347,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# General source files\n",
        "Line" : 355,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Do nada - use optimization settings to determine the assertion level\n",
        "Line" : 375,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# Compiler option evaluation\n",
        "Line" : 389,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Check for -Wall first, so later things can override pieces of it.\n",
        "Line" : 391,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# TODO: Those all seem to be quite GCC specific - needs to be\n\n# reworked for better compiler support\n",
        "Line" : 472,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# if only HAVE_ALTIVEC_H_HDR is set\n",
        "Line" : 613,
        "CharPositionInLine" : 31
      },
      "33" : {
        "Text" : "# TODO: SDL_cpuinfo.h needs to support the user's configuration wish\n\n# for MSVC - right now it is always activated\n",
        "Line" : 622,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# TODO:\n\n#else()\n\n#  if(USE_GCC OR USE_CLANG)\n\n#    list(APPEND EXTRA_CFLAGS \"-mno-sse\" \"-mno-sse2\" \"-mno-sse3\" \"-mno-mmx\")\n\n#  endif()\n",
        "Line" : 633,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# TODO: Can't deactivate on FreeBSD? w/o LIBC, SDL_stdinc.h can't define\n\n# anything.\n",
        "Line" : 640,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# needed for M_PI\n",
        "Line" : 667,
        "CharPositionInLine" : 41
      },
      "37" : {
        "Text" : "# TODO: refine the mprotect check\n",
        "Line" : 683,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# Enable/disable various subsystems of the SDL library\n",
        "Line" : 739,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Haptic requires some private functions from the joystick subsystem.\n",
        "Line" : 752,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "# TODO: in configure.in, the test for LOADSO and SDL_DLOPEN is a bit weird:\n\n# if LOADSO is not wanted, SDL_LOADSO_DISABLED is set\n\n# If however on Unix or APPLE dlopen() is detected via CheckDLOPEN(),\n\n# SDL_LOADSO_DISABLED will not be set, regardless of the LOADSO settings\n",
        "Line" : 766,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# General SDL subsystem options, valid for all platforms\n",
        "Line" : 771,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# CheckDummyAudio/CheckDiskAudio - valid for all platforms\n",
        "Line" : 773,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "# Relevant for Unix/Darwin only\n",
        "Line" : 789,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# SDL_spinlock.c Needs to be compiled in ARM mode.\n\n# There seems to be no better way currently to set the ARM mode.\n\n# see: https://issuetracker.google.com/issues/62264618\n\n# Another option would be to set ARM mode to all compiled files\n",
        "Line" : 809,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "# Core stuff\n",
        "Line" : 875,
        "CharPositionInLine" : 4
      },
      "46" : {
        "Text" : "#enable gles\n",
        "Line" : 882,
        "CharPositionInLine" : 4
      },
      "47" : {
        "Text" : "# Platform-specific options and settings\n",
        "Line" : 913,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# Hide noisy warnings that intend to aid mostly during initial stages of porting a new\n\n# project. Uncomment at will for verbose cross-compiling -I/../ path info.\n",
        "Line" : 915,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "#enable gles\n",
        "Line" : 958,
        "CharPositionInLine" : 4
      },
      "50" : {
        "Text" : "# Need to check for Raspberry PI first and add platform specific compiler flags, otherwise the test for GLES fails!\n",
        "Line" : 997,
        "CharPositionInLine" : 4
      },
      "51" : {
        "Text" : "# We've already found the header, so REQUIRE the lib to be present\n",
        "Line" : 1068,
        "CharPositionInLine" : 8
      },
      "52" : {
        "Text" : "# seems to be BSD specific - limit the test to BSD only?\n",
        "Line" : 1089,
        "CharPositionInLine" : 20
      },
      "53" : {
        "Text" : "# Prevent codegen that would use the VC runtime libraries.\n",
        "Line" : 1170,
        "CharPositionInLine" : 4
      },
      "54" : {
        "Text" : "# Check for DirectX\n",
        "Line" : 1177,
        "CharPositionInLine" : 2
      },
      "55" : {
        "Text" : "# xinput.h may need windows.h, but doesn't include it itself.\n",
        "Line" : 1190,
        "CharPositionInLine" : 6
      },
      "56" : {
        "Text" : "# TODO: change $ENV{DXSDL_DIR} to get the path from the include checks\n",
        "Line" : 1218,
        "CharPositionInLine" : 6
      },
      "57" : {
        "Text" : "# headers needed elsewhere ...\n",
        "Line" : 1226,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# requires SDL_LOADSO on Windows (IME, DX, etc.)\n",
        "Line" : 1251,
        "CharPositionInLine" : 4
      },
      "59" : {
        "Text" : "# Libraries for Win32 native and MinGW\n",
        "Line" : 1294,
        "CharPositionInLine" : 2
      },
      "60" : {
        "Text" : "# TODO: in configure.in the check for timers is set on\n\n# cygwin | mingw32* - does this include mingw32CE?\n",
        "Line" : 1297,
        "CharPositionInLine" : 2
      },
      "61" : {
        "Text" : "# TODO: rework this all for proper MacOS X, iOS and Darwin support\n",
        "Line" : 1379,
        "CharPositionInLine" : 2
      },
      "62" : {
        "Text" : "# We always need these libs on macOS at the moment.\n\n# !!! FIXME: we need Carbon for some very old API calls in\n\n# !!! FIXME:  src/video/cocoa/SDL_cocoakeyboard.c, but we should figure out\n\n# !!! FIXME:  how to dump those.\n",
        "Line" : 1381,
        "CharPositionInLine" : 2
      },
      "63" : {
        "Text" : "# Requires the darwin file implementation\n",
        "Line" : 1390,
        "CharPositionInLine" : 2
      },
      "64" : {
        "Text" : "# !!! FIXME: modern CMake doesn't need \"LANGUAGE C\" for Objective-C.\n",
        "Line" : 1394,
        "CharPositionInLine" : 4
      },
      "65" : {
        "Text" : "# !!! FIXME: why is COREVIDEO inside this if() block?\n",
        "Line" : 1397,
        "CharPositionInLine" : 4
      },
      "66" : {
        "Text" : "# !!! FIXME: modern CMake doesn't need \"LANGUAGE C\" for Objective-C.\n",
        "Line" : 1406,
        "CharPositionInLine" : 4
      },
      "67" : {
        "Text" : "# !!! FIXME: modern CMake doesn't need \"LANGUAGE C\" for Objective-C.\n",
        "Line" : 1466,
        "CharPositionInLine" : 4
      },
      "68" : {
        "Text" : "# Actually load the frameworks at the end so we don't duplicate include.\n",
        "Line" : 1472,
        "CharPositionInLine" : 2
      },
      "69" : {
        "Text" : "# iOS hack needed - http://code.google.com/p/ios-cmake/ ?\n",
        "Line" : 1502,
        "CharPositionInLine" : 2
      },
      "70" : {
        "Text" : "# TODO: Use FIND_PACKAGE(OpenGL) instead\n",
        "Line" : 1547,
        "CharPositionInLine" : 6
      },
      "71" : {
        "Text" : "# Dummies\n\n# configure.in does it differently:\n\n# if not have X\n\n#   if enable_X {  SDL_X_DISABLED = 1 }\n\n#   [add dummy sources]\n\n# so it always adds a dummy, without checking, if it was actually requested.\n\n# This leads to missing internal references on building, since the\n\n# src/X/*.c does not get included.\n",
        "Line" : 1564,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# results in unresolved symbols on OSX\n",
        "Line" : 1574,
        "CharPositionInLine" : 33
      },
      "73" : {
        "Text" : "# We always need to have threads and timers around\n",
        "Line" : 1601,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# Append the -MMD -MT flags\n\n# if(DEPENDENCY_TRACKING)\n\n#   if(COMPILER_IS_GNUCC)\n\n#     set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -MMD -MT \\$@\")\n\n#   endif()\n\n# endif()\n",
        "Line" : 1617,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# Prepare the flags and remove duplicates\n",
        "Line" : 1627,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# Compat helpers for the configuration files\n",
        "Line" : 1640,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# TODO: we need a Windows script, too\n",
        "Line" : 1642,
        "CharPositionInLine" : 2
      },
      "78" : {
        "Text" : "# Clean up the different lists\n",
        "Line" : 1665,
        "CharPositionInLine" : 2
      },
      "79" : {
        "Text" : "# MESSAGE(STATUS \"SDL_LIBS: ${SDL_LIBS}\")\n\n# MESSAGE(STATUS \"SDL_STATIC_LIBS: ${SDL_STATIC_LIBS}\")\n",
        "Line" : 1674,
        "CharPositionInLine" : 2
      },
      "80" : {
        "Text" : "##### Info output #####\n",
        "Line" : 1687,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# Longest option is VIDEO_X11_XSCREENSAVER = 22 characters\n\n# Get the padding\n",
        "Line" : 1704,
        "CharPositionInLine" : 2
      },
      "82" : {
        "Text" : "# Ensure that the extra cflags are used at compile time\n",
        "Line" : 1730,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# Always build SDLmain\n",
        "Line" : 1733,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# Don't try to link with the default set of libraries.\n",
        "Line" : 1759,
        "CharPositionInLine" : 4
      },
      "85" : {
        "Text" : "# Note: Apparently, OUTPUT_NAME must really be unique; even when\n\n# CMAKE_IMPORT_LIBRARY_SUFFIX or the like are given. Otherwise\n\n# the static build may race with the import lib and one will get\n\n# clobbered, when the suffix is realized via subsequent rename.\n",
        "Line" : 1777,
        "CharPositionInLine" : 4
      },
      "86" : {
        "Text" : "# TODO: Win32 platforms keep the same suffix .lib for import and static\n\n# libraries - do we need to consider this?\n",
        "Line" : 1788,
        "CharPositionInLine" : 2
      },
      "87" : {
        "Text" : "##### Tests #####\n",
        "Line" : 1798,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "##### Installation targets #####\n",
        "Line" : 1807,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "##### Export files #####\n",
        "Line" : 1813,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "# \".so\", \".dylib\", etc.\n",
        "Line" : 1859,
        "CharPositionInLine" : 46
      },
      "91" : {
        "Text" : "# FreeBSD uses ${PREFIX}/libdata/pkgconfig\n",
        "Line" : 1870,
        "CharPositionInLine" : 4
      },
      "92" : {
        "Text" : "# TODO: what about the .spec file? Is it only needed for RPM creation?\n",
        "Line" : 1877,
        "CharPositionInLine" : 2
      },
      "93" : {
        "Text" : "##### Uninstall target #####\n",
        "Line" : 1881,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 94
    },
    "ndkLibs/SDL2/SDL2Config.cmake" : {
      "ObjectId" : "4a5f646020ef4c415e082c799932104c37ddaa3a",
      "LastModified" : "2019-03-18T04:15:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ndkLibs/SDL2/android-project/app/proguard-rules.pro" : {
      "ObjectId" : "eaf0e916cdf0b2a92e4ad3c261f620b2f0f50dbb",
      "LastModified" : "2019-03-18T04:15:29Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# By default, the flags in this file are appended to flags specified\n\n# in [sdk]/tools/proguard/proguard-android.txt\n\n# You can edit the include path and order by changing the proguardFiles\n\n# directive in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add any project specific keep options here:\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "ndkLibs/SDL2/cmake/macros.cmake" : {
      "ObjectId" : "96a7ce8b1406692acaf32a25d9c864da3f94cb45",
      "LastModified" : "2019-03-18T04:15:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Message Output\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# prefix for each element\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Do not use string(REPLACE \";\" \" \") here to avoid messing up list\n\n# entries\n",
        "Line" : 60,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "ndkLibs/SDL2/cmake/sdlchecks.cmake" : {
      "ObjectId" : "4a2c3ed57856e3a43ab48f5f7cd40db9c4b7043b",
      "LastModified" : "2019-03-18T04:15:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# reduce the library name for shared linking\n",
        "Line" : 7,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# resolves symlinks\n",
        "Line" : 9,
        "CharPositionInLine" : 69
      },
      "2" : {
        "Text" : "# Requires:\n\n# - n/a\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Requires:\n\n# - n/a\n\n# Optional:\n\n# - ALSA_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Requires:\n\n# - PkgCheckModules\n\n# Optional:\n\n# - PULSEAUDIO_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Requires:\n\n# - PkgCheckModules\n\n# Optional:\n\n# - JACK_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Requires:\n\n# - PkgCheckModules\n\n# Optional:\n\n# - ESD_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Requires:\n\n# - n/a\n\n# Optional:\n\n# - ARTS_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# TODO\n",
        "Line" : 243,
        "CharPositionInLine" : 10
      },
      "9" : {
        "Text" : "# Requires:\n\n# - n/a\n\n# Optional:\n\n# - NAS_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# TODO: set include paths properly, so the NAS headers are found\n",
        "Line" : 263,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Requires:\n\n# - n/a\n\n# Optional:\n\n# - SNDIO_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 287,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# TODO: set include paths properly, so the sndio headers are found\n",
        "Line" : 294,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Requires:\n\n# - PkgCheckModules\n\n# Optional:\n\n# - FUSIONSOUND_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 318,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Requires:\n\n# - LIBSAMPLERATE\n\n# Optional:\n\n# - LIBSAMPLERATE_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 348,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Requires:\n\n# - n/a\n\n# Optional:\n\n# - X11_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 373,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Check for multitouch\n",
        "Line" : 510,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# Requires:\n\n# - EGL\n\n# - PkgCheckModules\n\n# Optional:\n\n# - MIR_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 567,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Requires:\n\n# - EGL\n\n# - PkgCheckModules\n\n# Optional:\n\n# - WAYLAND_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 628,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# We have to generate some protocol interface code for some unstable Wayland features.\n",
        "Line" : 665,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "# Requires:\n\n# - n/a\n\n#\n",
        "Line" : 702,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Apple always has Cocoa.\n",
        "Line" : 707,
        "CharPositionInLine" : 14
      },
      "22" : {
        "Text" : "# Requires:\n\n# - PkgCheckModules\n\n# Optional:\n\n# - DIRECTFB_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 720,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Requires:\n\n# - n/a\n",
        "Line" : 751,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Requires:\n\n# - nada\n",
        "Line" : 781,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Requires:\n\n# - nada\n",
        "Line" : 799,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Requires:\n\n# - nada\n\n# Optional:\n\n# - THREADS opt\n\n# Sets:\n\n# PTHREAD_CFLAGS\n\n# PTHREAD_LIBS\n",
        "Line" : 832,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# the android libc provides built-in support for pthreads, so no\n\n# additional linking or compile flags are necessary\n",
        "Line" : 842,
        "CharPositionInLine" : 6
      },
      "28" : {
        "Text" : "# causes Carbon.p complaints?\n\n# set(PTHREAD_CFLAGS \"-D_REENTRANT -D_THREAD_SAFE\")\n",
        "Line" : 852,
        "CharPositionInLine" : 6
      },
      "29" : {
        "Text" : "# Run some tests\n",
        "Line" : 884,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# Can be faked, if necessary\n\n# Can be faked, if necessary\n",
        "Line" : 951,
        "CharPositionInLine" : 65
      },
      "31" : {
        "Text" : "# Requires\n\n# - nada\n\n# Optional:\n\n# Sets:\n\n# USB_LIBS\n\n# USB_CFLAGS\n",
        "Line" : 968,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Requires:\n\n# - n/a\n",
        "Line" : 1108,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Requires:\n\n# - EGL\n\n# - PkgCheckModules\n\n# Optional:\n\n# - KMSDRM_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 1143,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 34
    },
    "ndkLibs/SDL2/include/SDL_config.h.cmake" : {
      "ObjectId" : "48dd2d41b785186e3eaced3092cefe6157f300e6",
      "LastModified" : "2019-03-18T04:15:29Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/*\n  Simple DirectMedia Layer\n  Copyright (C) 1997-2018 Sam Lantinga <slouken@libsdl.org>\n\n  This software is provided 'as-is', without any express or implied\n  warranty.  In no event will the authors be held liable for any damages\n  arising from the use of this software.\n\n  Permission is granted to anyone to use this software for any purpose,\n  including commercial applications, and to alter it and redistribute it\n  freely, subject to the following restrictions:\n\n  1. The origin of this software must not be misrepresented; you must not\n     claim that you wrote the original software. If you use this software\n     in a product, an acknowledgment in the product documentation would be\n     appreciated but is not required.\n  2. Altered source versions must be plainly marked as such, and must not be\n     misrepresented as being the original software.\n  3. This notice may not be removed or altered from any source distribution.\n*/",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/**\n *  \\file SDL_config.h.in\n *\n *  This is a set of defines to configure the SDL features\n */",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/* General platform specific identifiers */",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* C language features */",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/* C datatypes */\n/* Define SIZEOF_VOIDP for 64/32 architectures */",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/* Comment this if you want to build without any C library requirements */",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/* Useful headers */",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "/* C library functions */",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "/* We may need some replacement for stdarg.h here */",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "/* SDL internal assertion support */",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "/* Allow disabling of core subsystems */",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "/* Enable various audio drivers */",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "/* Enable various input drivers */",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "/* Enable various sensor drivers */",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "/* Enable various shared object loading systems */",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "/* Enable various threading systems */",
        "Line" : 306,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "/* Enable various timer systems */",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "/* Enable various video drivers */",
        "Line" : 319,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "/* Enable OpenGL support */",
        "Line" : 376,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "/* Enable Vulkan support */",
        "Line" : 388,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "/* Enable system power support */",
        "Line" : 391,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "/* Enable system filesystem support */",
        "Line" : 400,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "/* Enable assembly routines */",
        "Line" : 409,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "/* Enable dynamic libsamplerate support */",
        "Line" : 413,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "/* Platform specific definitions */",
        "Line" : 416,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "/* Older Visual C++ headers don't have the Win64-compatible typedefs... */",
        "Line" : 451,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 26
    },
    "ndkLibs/SDL2/src/hidapi/Makefile.am" : {
      "ObjectId" : "3382a1f040bcd84e64b5b4d49f3bdd06df9d4604",
      "LastModified" : "2019-03-18T04:15:29Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "ndkLibs/SDL2/src/hidapi/hidtest/Makefile.am" : {
      "ObjectId" : "d2786445a316ce0eb0e1033eb599ebf6fddd29d4",
      "LastModified" : "2019-03-18T04:15:29Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Linux\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Other OS's\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "ndkLibs/SDL2/src/hidapi/ios/Makefile.am" : {
      "ObjectId" : "1f8f2cec66a275ecdb5a10322fc63a7c924da979",
      "LastModified" : "2019-03-18T04:15:29Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "ndkLibs/SDL2/src/hidapi/libusb/Makefile.am" : {
      "ObjectId" : "13c9d355178815e6a3fb899501e30dbd1cd032ef",
      "LastModified" : "2019-03-18T04:15:29Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "ndkLibs/SDL2/src/hidapi/linux/Makefile.am" : {
      "ObjectId" : "230eeb75a207745621b72a1a12bddf1c182cdade",
      "LastModified" : "2019-03-18T04:15:29Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "ndkLibs/SDL2/src/hidapi/mac/Makefile.am" : {
      "ObjectId" : "23d96e08fb6c25a41e940a8dd0900353231dcf1c",
      "LastModified" : "2019-03-18T04:15:29Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "ndkLibs/SDL2/src/hidapi/testgui/Makefile.am" : {
      "ObjectId" : "1c02f3f2c3559ba327db83c3d622221ef0c008ae",
      "LastModified" : "2019-03-18T04:15:29Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Linux\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Other OS's\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Rules for copying the binary and its dependencies into the app bundle.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "ndkLibs/SDL2/src/hidapi/windows/Makefile.am" : {
      "ObjectId" : "97e261ac9ee1edaab169dbf068340240c823a257",
      "LastModified" : "2019-03-18T04:15:29Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "ndkLibs/SDL2/test/CMakeLists.txt" : {
      "ObjectId" : "3c25c5c7c98790944cc22c408cec58152544b0e6",
      "LastModified" : "2019-03-18T04:15:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Global settings for all of the test targets\n\n# FIXME: is this wrong?\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FIXME: Parent directory CMakeLists.txt only sets these for mingw/cygwin,\n\n# but we need them for VS as well.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# HACK: Dummy target to cause the resource files to be copied to the build directory.\n\n# Need to make it an executable so we can use the TARGET_FILE_DIR generator expression.\n\n# This is needed so they get copied to the correct Debug/Release subdirectory in Xcode.\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# TODO: Might be easier to make all targets depend on the resources...?\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "ndkLibs/SDL2/test/nacl/Makefile" : {
      "ObjectId" : "9ca166c12742e3c6ae23d6c7ac84a421244e9c1d",
      "LastModified" : "2019-03-18T04:15:29Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (c) 2013 The Chromium Authors. All rights reserved.\n\n# Use of this source code is governed by a BSD-style license that can be\n\n# found in the LICENSE file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# GNU Makefile based on shared rules provided by the Native Client SDK.\n\n# See README.Makefiles for more details.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# NACL_SDK_ROOT ?= $(abspath $(CURDIR)/../../..)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ppapi_simple and SDL2 end up being listed twice due to dependency solving issues -- Gabriel\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Build rules generated by macros from common.mk:\n\n# Overriden macro from NACL SDK to be able to customize the library search path -- Gabriel\n\n# Specific Link Macro \n\n#\n\n# $1 = Target Name\n\n# $2 = List of inputs\n\n# $3 = List of libs\n\n# $4 = List of deps\n\n# $5 = List of lib dirs\n\n# $6 = Other Linker Args\n\n#\n\n# For debugging, we translate the pre-finalized .bc file.\n\n#\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "ndkLibs/png/CMakeLists.txt" : {
      "ObjectId" : "48c6fa2879503e2c3cb38d4c9ce3af21271dda6c",
      "LastModified" : "2019-03-18T04:15:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (C) 2007,2009-2017 Glenn Randers-Pehrson\n\n# Written by Christian Ehrlicher, 2007\n\n# Revised by Roger Lowman, 2009-2010\n\n# Revised by Clifford Yapp, 2011-2012\n\n# Revised by Roger Leigh, 2016\n\n# Revised by Andreas Franek, 2016\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This code is released under the libpng license.\n\n# For conditions of distribution and use, see the disclaimer\n\n# and license in png.h\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set MacOSX @rpath usage globally.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Use new variable expansion policy.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# needed packages\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#Allow users to specify location of Zlib,\n\n# Useful if zlib is being built alongside this as a sub-project\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# not needed on windows\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# COMMAND LINE OPTIONS\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Many more configuration options could be added here\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# set definitions and sources for arm\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# set definitions and sources for powerpc\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# set definitions and sources for intel\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# set definitions and sources for MIPS\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# SET LIBNAME\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# to distinguish between debug and release lib\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Check if LD supports linker scripts.\n",
        "Line" : 198,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Find symbol prefix.  Likely obsolete and unnecessary with recent\n\n# toolchains (it's not done in many other projects).\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# No awk available to generate sources; use pre-built pnglibconf.h\n",
        "Line" : 266,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Dummy\n",
        "Line" : 269,
        "CharPositionInLine" : 30
      },
      "20" : {
        "Text" : "# Generate .chk from .out with awk\n\n# generate_chk(INPUT inputfile OUTPUT outputfile [DEPENDS dep1 [dep2...]])\n",
        "Line" : 272,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# Generate .out from .c with awk\n\n# generate_out(INPUT inputfile OUTPUT outputfile [DEPENDS dep1 [dep2...]])\n",
        "Line" : 295,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# Generate specific source file with awk\n\n# generate_source(OUTPUT outputfile [DEPENDS dep1 [dep2...]])\n",
        "Line" : 318,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# Copy file\n",
        "Line" : 337,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Generate scripts/pnglibconf.h\n",
        "Line" : 346,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Generate pnglibconf.c\n",
        "Line" : 352,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Generate pnglibconf.h\n",
        "Line" : 369,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# Generate pngprefix.h\n",
        "Line" : 384,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# A single target handles generation of all generated files.  If\n\n# they are dependend upon separately by multiple targets, this\n\n# confuses parallel make (it would require a separate top-level\n\n# target for each file to track the dependencies properly).\n",
        "Line" : 426,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# OUR SOURCES\n",
        "Line" : 446,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# NOW BUILD OUR TARGET\n",
        "Line" : 514,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# msvc does not append 'lib' - do it here to have consistent name\n",
        "Line" : 525,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# does not work without changing name\n",
        "Line" : 543,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# MSVC doesn't use a different file extension for shared vs. static\n\n# libs.  We are able to change OUTPUT_NAME to remove the _static\n\n# for all other platforms.\n",
        "Line" : 547,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# msvc does not append 'lib' - do it here to have consistent name\n",
        "Line" : 561,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# have generator expressions\n",
        "Line" : 613,
        "CharPositionInLine" : 36
      },
      "36" : {
        "Text" : "# old 2.x add_test; limited and won't work well on Windows\n",
        "Line" : 619,
        "CharPositionInLine" : 9
      },
      "37" : {
        "Text" : "# Note LIBPNG is a dummy value as there are no generator expressions\n",
        "Line" : 620,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# Find test PNG files by globbing, but sort lists to ensure\n\n# consistency between different filesystems.\n",
        "Line" : 629,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "# Should already be sorted, but sort anyway to be certain.\n",
        "Line" : 721,
        "CharPositionInLine" : 6
      },
      "40" : {
        "Text" : "# Set a variable with CMake code which:\n\n# Creates a symlink from src to dest (if possible) or alternatively\n\n# copies if different.\n",
        "Line" : 758,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# If we don't need to symlink something that's coming from a build target,\n\n# we can go ahead and symlink/copy at configure time.\n",
        "Line" : 776,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "# We need to use generator expressions, which can be a bit tricky, so for\n\n# simplicity make the symlink a POST_BUILD step and use the TARGET\n\n# signature of add_custom_command.\n",
        "Line" : 793,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "# Create source generation scripts.\n",
        "Line" : 811,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# libpng is a library so default to 'lib'\n",
        "Line" : 820,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# CREATE PKGCONFIG FILES\n\n# we use the same files like ./configure, so we have to set its vars\n\n# Only do this on Windows for Cygwin - the files don't make much sense outside\n\n# a UNIX look alike\n",
        "Line" : 825,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# SET UP LINKS\n",
        "Line" : 844,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#   VERSION 16.${PNGLIB_RELEASE}.1.6.34\n",
        "Line" : 847,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# If CMake > 2.4.x, we set a variable used below to export\n\n# targets to an export file.\n\n# TODO: Use VERSION_GREATER after our cmake_minimum_required >= 2.6.2\n",
        "Line" : 853,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# future proof\n",
        "Line" : 858,
        "CharPositionInLine" : 38
      },
      "50" : {
        "Text" : "# INSTALL\n",
        "Line" : 862,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Create a symlink for libpng.dll.a => libpng16.dll.a on Cygwin\n",
        "Line" : 872,
        "CharPositionInLine" : 4
      },
      "52" : {
        "Text" : "# Install man pages\n",
        "Line" : 910,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "# Install pkg-config files\n",
        "Line" : 916,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "# On versions of CMake that support it, create an export file CMake\n\n# users can include() to import our targets\n",
        "Line" : 929,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# what's with libpng-manual.txt and all the extra files?\n",
        "Line" : 935,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# UNINSTALL\n\n# do we need this?\n",
        "Line" : 937,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# DIST\n\n# do we need this?\n",
        "Line" : 940,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# to create msvc import lib for mingw compiled shared lib\n\n# pexports libpng.dll > libpng.def\n\n# lib /def:libpng.def /machine:x86\n",
        "Line" : 943,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 59
    },
    "ndkLibs/png/Makefile.am" : {
      "ObjectId" : "08db3e5990940045df9c1c7f784c276e2f309fc5",
      "LastModified" : "2019-03-18T04:15:29Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Makefile.am, the source file for Makefile.in (and hence Makefile), is\n\n#\n\n# Copyright (c) 2004-2016 Glenn Randers-Pehrson\n\n# Last changed in libpng 1.6.25 [September 1, 2016]\n\n#\n\n# This code is released under the libpng license.\n\n# For conditions of distribution and use, see the disclaimer\n\n# and license in png.h\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# test programs - run on make check, make distcheck\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Utilities - installed\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This ensures that pnglibconf.h gets built at the start of 'make all' or\n\n# 'make check', but it does not add dependencies to the individual programs,\n\n# this is done below.\n\n#\n\n# IMPORTANT: always add the object modules of new programs to the list below\n\n# because otherwise the sequence 'configure; make new-program' will *sometimes*\n\n# result in the installed (system) pnglibconf.h being used and the result is\n\n# always wrong and always very confusing.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Generally these are single line shell scripts to run a test with a particular\n\n# set of parameters:\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# man pages\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# generate the -config scripts if required\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# rules to build libpng, only build the old library on request\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# EXTRA_LTLIBRARIES= libpng.la\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#   Versioned symbols and restricted exports\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#   Only restricted exports when possible\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#distribute headers in /usr/include/libpng/*\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# pkg-config stuff, note that libpng.pc is always required in order\n\n# to get the correct library\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Extra source distribution files, '${srcdir}' is used below to stop build files\n\n# from those directories being included.  This only works if the configure is\n\n# not done in the source directory!\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# PNG_COPTS give extra options for the C compiler to be used on all compilation\n\n# steps (unless targe_CFLAGS is specified; that will take precedence over\n\n# AM_CFLAGS)\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# DFNCPP is normally just CPP - the C preprocessor - but on Solaris and maybe\n\n# other operating systems (NeXT?) the C preprocessor selected by configure\n\n# checks input tokens for validity - effectively it performs part of the ANSI-C\n\n# parsing - and therefore fails with the .df files.  configure.ac has special\n\n# checks for this and sets DFNCPP appropriately.\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Rename functions in scripts/prefix.out with a PNG_PREFIX prefix.\n\n# Rename macros in scripts/macro.lst from PNG_PREFIXpng_ to PNG_ (the actual\n\n# implementation of the macro).\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# is empty\n",
        "Line" : 223,
        "CharPositionInLine" : 13
      },
      "18" : {
        "Text" : "# The following is necessary to ensure that the local pnglibconf.h is used, not\n\n# an installed one (this can happen immediately after on a clean system if\n\n# 'make test' is the first thing the user does.)  Only files which include\n\n# one of the png source files (typically png.h or pngpriv.h) need to be listed\n\n# here:\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# We must use -DPNG_NO_USE_READ_MACROS here even when the library may actually\n\n# be built with PNG_USE_READ_MACROS; this prevents the read macros from\n\n# interfering with the symbol file format.\n",
        "Line" : 254,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# The .c file for pnglibconf.h is machine generated\n",
        "Line" : 275,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Symbol checks (.def and .out files should match)\n",
        "Line" : 285,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# used on demand to regenerate the standard header, CPPFLAGS should\n\n# be empty - no non-standard defines\n",
        "Line" : 294,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Extra checks\n",
        "Line" : 313,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Don't distribute the generated script files\n",
        "Line" : 316,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Make links between installed files with release-specific names and the generic\n\n# file names.  If this install rule is run the generic names will be deleted and\n\n# recreated - this has obvious issues for systems with multiple installations.\n",
        "Line" : 320,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# EXT_LIST is a list of the possibly library directory extensions, this exists\n\n# because we can't find a good way of discovering the file extensions that are\n\n# actually installed on a given system, so instead we check for every extension\n\n# we have seen.\n",
        "Line" : 338,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# If --enable-unversioned-links is specified the header and lib file links\n\n# will be automatically made on a 'make install':\n",
        "Line" : 366,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Likewise, --install-pc causes libpng.pc to be constructed:\n",
        "Line" : 376,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# And --install-config:\n",
        "Line" : 383,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# The following addition ensures that 'make all' always builds the test programs\n\n# too.  It used to, but some change either in libpng or configure stopped this\n\n# working.\n",
        "Line" : 389,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 31
    },
    "ndkLibs/soundtouch/Makefile.am" : {
      "ObjectId" : "9c77e6de08142f0d1ef088710304faa2f596c5e1",
      "LastModified" : "2019-03-18T04:15:29Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to create Makefile.in\n\n##\n\n## $Id: Makefile.am 199 2014-10-05 15:33:08Z oparviai $\n\n##\n\n## Copyright (C) 2003 - David W. Durham\n\n## \n\n## This file is part of SoundTouch, an audio processing library for pitch/time adjustments\n\n## \n\n## SoundTouch is free software; you can redistribute it and/or modify it under the\n\n## terms of the GNU General Public License as published by the Free Software\n\n## Foundation; either version 2 of the License, or (at your option) any later\n\n## version.\n\n## \n\n## SoundTouch is distributed in the hope that it will be useful, but WITHOUT ANY\n\n## WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\n\n## A PARTICULAR PURPOSE.  See the GNU General Public License for more details.\n\n## \n\n## You should have received a copy of the GNU General Public License along with\n\n## this program; if not, write to the Free Software Foundation, Inc., 59 Temple\n\n## Place - Suite 330, Boston, MA  02111-1307, USA\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## I used config/am_include.mk for common definitions\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Descend into SUBDIRS and run make. Look at the Makefile.am files in the\n\n## subdirectories Start at frontend_fox/Makefile.am to see how everything works.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# list files that are documentation to be packaged in a release tarball and installed\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# extra data files that are to be pacakged in a release tarball and installed into the data directory\n\n#pkgdata_DATA=\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# sets up for soundtouch.m4 to be installed\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## These extra files and directories will be included in the distribution. by\n\n## using make-dist by default many common filenames are automatically included\n\n## such as AUTHORS, COPYING, etc the bootstrap script really shouldn't be a part\n\n## of a final package, but it is useful for developers who might want to make\n\n## changes to the configure scripts or makefiles.\n\n# NOTE: wouldn't have to list the .TXT file if it were named without the .TXT\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## This removes stuff from the distribution which may be present\n\n## from a cvs checkout or other build reasons\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# remove all CVS directories\n",
        "Line" : 59,
        "CharPositionInLine" : 44
      },
      "9" : {
        "Text" : "# CVS revision files left around for some reason\n",
        "Line" : 60,
        "CharPositionInLine" : 52
      },
      "10" : {
        "Text" : "## This happens at 'make distclean'\n\n#distcleancheck:\n\n#\trm -rf files-that-may-also-need-to-be-deleted-on-'make distclean'\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# flag to aclocal where to find m4 macros for tests\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "ndkLibs/soundtouch/include/Makefile.am" : {
      "ObjectId" : "f1e5c2bb6a4068b3db81f6474300df55ff067834",
      "LastModified" : "2019-03-18T04:15:29Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to create Makefile.in\n\n##\n\n## $Id: Makefile.am 11 2008-02-10 16:26:55Z oparviai $\n\n##\n\n## Copyright (C) 2003 - David W. Durham\n\n## \n\n## This file is part of SoundTouch, an audio processing library for pitch/time adjustments\n\n## \n\n## SoundTouch is free software; you can redistribute it and/or modify it under the\n\n## terms of the GNU General Public License as published by the Free Software\n\n## Foundation; either version 2 of the License, or (at your option) any later\n\n## version.\n\n## \n\n## SoundTouch is distributed in the hope that it will be useful, but WITHOUT ANY\n\n## WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\n\n## A PARTICULAR PURPOSE.  See the GNU General Public License for more details.\n\n## \n\n## You should have received a copy of the GNU General Public License along with\n\n## this program; if not, write to the Free Software Foundation, Inc., 59 Temple\n\n## Place - Suite 330, Boston, MA  02111-1307, USA\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## I used config/am_include.mk for common definitions\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "ndkLibs/soundtouch/source/Makefile.am" : {
      "ObjectId" : "3113ce81e9bf5152dd8275a5c3787ee0306c40b4",
      "LastModified" : "2019-03-18T04:15:29Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to create Makefile.in\n\n##\n\n## $Id: Makefile.am 38 2008-12-25 17:00:23Z oparviai $\n\n##\n\n## Copyright (C) 2003 - David W. Durham\n\n## \n\n## This file is part of SoundTouch, an audio processing library for pitch/time adjustments\n\n## \n\n## SoundTouch is free software; you can redistribute it and/or modify it under the\n\n## terms of the GNU General Public License as published by the Free Software\n\n## Foundation; either version 2 of the License, or (at your option) any later\n\n## version.\n\n## \n\n## SoundTouch is distributed in the hope that it will be useful, but WITHOUT ANY\n\n## WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\n\n## A PARTICULAR PURPOSE.  See the GNU General Public License for more details.\n\n## \n\n## You should have received a copy of the GNU General Public License along with\n\n## this program; if not, write to the Free Software Foundation, Inc., 59 Temple\n\n## Place - Suite 330, Boston, MA  02111-1307, USA\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set to something if you want other stuff to be included in the distribution tarball\n\n#EXTRA_DIST=\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "ndkLibs/soundtouch/source/SoundStretch/Makefile.am" : {
      "ObjectId" : "3b2c7549a37d834d0503ebd58dc029e8e2bc83c9",
      "LastModified" : "2019-03-18T04:15:29Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to create Makefile.in\n\n##\n\n## $Id: Makefile.am 209 2015-05-01 07:55:47Z oparviai $\n\n##\n\n## Copyright (C) 2003 - David W. Durham\n\n## \n\n## This file is part of SoundTouch, an audio processing library for pitch/time adjustments\n\n## \n\n## SoundTouch is free software; you can redistribute it and/or modify it under the\n\n## terms of the GNU General Public License as published by the Free Software\n\n## Foundation; either version 2 of the License, or (at your option) any later\n\n## version.\n\n## \n\n## SoundTouch is distributed in the hope that it will be useful, but WITHOUT ANY\n\n## WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\n\n## A PARTICULAR PURPOSE.  See the GNU General Public License for more details.\n\n## \n\n## You should have received a copy of the GNU General Public License along with\n\n## this program; if not, write to the Free Software Foundation, Inc., 59 Temple\n\n## Place - Suite 330, Boston, MA  02111-1307, USA\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## bin_PROGRAMS is the macro that tells automake the name of the programs to\n\n## install in the bin directory (/usr/local/bin) by default. By setting\n\n## --prefix= at configure time the user can change this (eg: ./configure\n\n## --prefix=/usr will install soundstretch under /usr/bin/soundstretch )\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# extra files to include in distrubution tarball\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## for every name listed under bin_PROGRAMS, you have a <prog>_SOURCES. This lists\n\n## all the sources in the current directory that are used to build soundstretch.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## soundstretch_LDADD is a list of extras to pass at link time. All the objects\n\n## created by the above soundstretch_SOURCES are automatically linked in, so here I\n\n## list object files from other directories as well as flags passed to the\n\n## linker. \n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## linker flags. \n\n# OP 2011-7-17 Linker flag -s disabled to prevent stripping symbols by default\n\n#soundstretch_LDFLAGS=-s\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## additional compiler flags\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#clean-local: \n\n#\t-rm -f additional-files-to-remove-on-make-clean\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "ndkLibs/soundtouch/source/SoundTouch/Makefile.am" : {
      "ObjectId" : "13537b0a5dfbf8b90c796a3ee14f112aa515eccc",
      "LastModified" : "2019-03-18T04:15:29Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to create Makefile.in\n\n##\n\n## $Id: Makefile.am 230 2015-09-20 07:38:32Z oparviai $\n\n##\n\n## This file is part of SoundTouch, an audio processing library for pitch/time adjustments\n\n## \n\n## SoundTouch is free software; you can redistribute it and/or modify it under the\n\n## terms of the GNU General Public License as published by the Free Software\n\n## Foundation; either version 2 of the License, or (at your option) any later\n\n## version.\n\n## \n\n## SoundTouch is distributed in the hope that it will be useful, but WITHOUT ANY\n\n## WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\n\n## A PARTICULAR PURPOSE.  See the GNU General Public License for more details.\n\n## \n\n## You should have received a copy of the GNU General Public License along with\n\n## this program; if not, write to the Free Software Foundation, Inc., 59 Temple\n\n## Place - Suite 330, Boston, MA  02111-1307, USA\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set to something if you want other stuff to be included in the distribution tarball\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Compiler flags\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Compile the files that need MMX and SSE individually.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# We enable optimizations by default.\n\n# If MMX is supported compile with -mmmx.\n\n# Do not assume -msse is also supported.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# We enable optimizations by default.\n\n# If SSE is supported compile with -msse.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Let the user disable optimizations if he wishes to.\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Modify the default 0.0.0 to LIB_SONAME.0.0\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# other linking flags to add\n\n# noinst_LTLIBRARIES = libSoundTouchOpt.la\n\n# libSoundTouch_la_LIBADD = libSoundTouchOpt.la\n\n# libSoundTouchOpt_la_SOURCES = mmx_optimized.cpp sse_optimized.cpp \n\n# libSoundTouchOpt_la_CXXFLAGS = -O3 -msse -fcheck-new -I../../include\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    }
  },
  "FileTypes" : {
    "CMAKE" : 11,
    "CMAKESOURCE" : 1,
    "QMAKE" : 16,
    "MAKEFILE" : 8,
    "AUTOMAKE" : 19
  },
  "ElapsedTime" : 5136
}