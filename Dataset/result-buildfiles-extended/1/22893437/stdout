{
  "Repository" : "22893437",
  "Revision" : "HEAD",
  "ObjectId" : "0873e0b9d7d5c84245966ab48874d2583310979c",
  "CommitTime" : "2018-04-18T18:35:51Z",
  "Files" : {
    "core/cmake/platforms.cmake" : {
      "ObjectId" : "910f0bc554295e94c195948c8fc9a1b8c0cbb848",
      "LastModified" : "2015-07-17T00:27:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# FOR \"PACKAGES\" TO BE FOUND WHEN CROSS-COMPILING (ANDROID, EMSCRIPTEN, MXE...)\n\n# REQUIRED: ALL THE \"PACKAGES\" MUST BE LOCATED UNDER THE \"HOME\" PATH\n\n#\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ---\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "core/cmake/run.cmake" : {
      "ObjectId" : "b07b212f074605a07eb0461cafa74ba2df962d10",
      "LastModified" : "2016-10-28T13:11:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# USAGE EXAMPLES:\n\n#\n\n# 1) ctest -S run.cmake -V -DPLATFORM=osx\n\n# 2) ctest -S run.cmake -VV -DPLATFORM=android -DCLEAN=ON\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# --- START ---\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# WILL EXECUTE CTestConfig.cmake\n\n#\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# --- CONFIGURE ---\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# --- BUILD + INSTALL ---\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# --- TEST ---\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "core/cmake/sketch.cmake" : {
      "ObjectId" : "908f2c37276b56afc2a5a9a494691369a346773d",
      "LastModified" : "2016-12-05T18:04:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ---\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ---\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ---\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "core/cmake/test.cmake" : {
      "ObjectId" : "ac06e5bee873f332a5e333d8ffba1e9f03072c48",
      "LastModified" : "2018-01-09T17:48:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ---\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ---\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ---\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ---\n",
        "Line" : 275,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ---\n",
        "Line" : 301,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "core/cmake/toolchains/android.cmake" : {
      "ObjectId" : "5dbd6aedc060ae62f73b47a1686e592d026f68df",
      "LastModified" : "2016-10-28T13:11:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ---\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# TODO: AVOID DOUBLE-INCLUSION OF FLAGS\n\n#\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "core/cmake/toolchains/android.toolchain.cmake" : {
      "ObjectId" : "0d70a63c726d373b45a12618b6fb14849ad97cea",
      "LastModified" : "2015-07-17T00:27:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2010-2011, Ethan Rublee\n\n# Copyright (c) 2011-2014, Andrey Kamaev\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# 1.  Redistributions of source code must retain the above copyright notice,\n\n#     this list of conditions and the following disclaimer.\n\n#\n\n# 2.  Redistributions in binary form must reproduce the above copyright notice,\n\n#     this list of conditions and the following disclaimer in the documentation\n\n#     and/or other materials provided with the distribution.\n\n#\n\n# 3.  Neither the name of the copyright holder nor the names of its\n\n#     contributors may be used to endorse or promote products derived from this\n\n#     software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ------------------------------------------------------------------------------\n\n#  Android CMake toolchain file, for use with the Android NDK r5-r10e\n\n#  Requires cmake 2.6.3 or newer (2.8.9 or newer is recommended).\n\n#  See home page: https://github.com/taka-no-me/android-cmake\n\n#\n\n#  Usage Linux:\n\n#   $ export ANDROID_NDK=/absolute/path/to/the/android-ndk\n\n#   $ mkdir build && cd build\n\n#   $ cmake -DCMAKE_TOOLCHAIN_FILE=path/to/the/android.toolchain.cmake ..\n\n#   $ make -j8\n\n#\n\n#  Usage Windows:\n\n#     You need native port of make to build your project.\n\n#     Android NDK r7 (and newer) already has make.exe on board.\n\n#     For older NDK you have to install it separately.\n\n#     For example, this one: http://gnuwin32.sourceforge.net/packages/make.htm\n\n#\n\n#   $ SET ANDROID_NDK=C:\\absolute\\path\\to\\the\\android-ndk\n\n#   $ mkdir build && cd build\n\n#   $ cmake.exe -G\"MinGW Makefiles\"\n\n#       -DCMAKE_TOOLCHAIN_FILE=path\\to\\the\\android.toolchain.cmake\n\n#       -DCMAKE_MAKE_PROGRAM=\"%ANDROID_NDK%\\prebuilt\\windows\\bin\\make.exe\" ..\n\n#   $ cmake.exe --build .\n\n#\n\n#\n\n#  Options (can be set as cmake parameters: -D<option_name>=<value>):\n\n#    ANDROID_NDK=/opt/android-ndk - path to the NDK root.\n\n#      Can be set as environment variable. Can be set only at first cmake run.\n\n#\n\n#    ANDROID_ABI=armeabi-v7a - specifies the target Application Binary\n\n#      Interface (ABI). This option nearly matches to the APP_ABI variable\n\n#      used by ndk-build tool from Android NDK.\n\n#\n\n#      Possible targets are:\n\n#        \"armeabi\" - ARMv5TE based CPU with software floating point operations\n\n#        \"armeabi-v7a\" - ARMv7 based devices with hardware FPU instructions\n\n#            this ABI target is used by default\n\n#        \"armeabi-v7a with NEON\" - same as armeabi-v7a, but\n\n#            sets NEON as floating-point unit\n\n#        \"armeabi-v7a with VFPV3\" - same as armeabi-v7a, but\n\n#            sets VFPV3 as floating-point unit (has 32 registers instead of 16)\n\n#        \"armeabi-v6 with VFP\" - tuned for ARMv6 processors having VFP\n\n#        \"x86\" - IA-32 instruction set\n\n#        \"mips\" - MIPS32 instruction set\n\n#\n\n#      64-bit ABIs for NDK r10 and newer:\n\n#        \"arm64-v8a\" - ARMv8 AArch64 instruction set\n\n#        \"x86_64\" - Intel64 instruction set (r1)\n\n#        \"mips64\" - MIPS64 instruction set (r6)\n\n#\n\n#    ANDROID_NATIVE_API_LEVEL=android-8 - level of Android API compile for.\n\n#      Option is read-only when standalone toolchain is used.\n\n#      Note: building for \"android-L\" requires explicit configuration.\n\n#\n\n#    ANDROID_TOOLCHAIN_NAME=arm-linux-androideabi-4.9 - the name of compiler\n\n#      toolchain to be used. The list of possible values depends on the NDK\n\n#      version. For NDK r10c the possible values are:\n\n#\n\n#        * aarch64-linux-android-4.9\n\n#        * aarch64-linux-android-clang3.4\n\n#        * aarch64-linux-android-clang3.5\n\n#        * arm-linux-androideabi-4.6\n\n#        * arm-linux-androideabi-4.8\n\n#        * arm-linux-androideabi-4.9 (default)\n\n#        * arm-linux-androideabi-clang3.4\n\n#        * arm-linux-androideabi-clang3.5\n\n#        * mips64el-linux-android-4.9\n\n#        * mips64el-linux-android-clang3.4\n\n#        * mips64el-linux-android-clang3.5\n\n#        * mipsel-linux-android-4.6\n\n#        * mipsel-linux-android-4.8\n\n#        * mipsel-linux-android-4.9\n\n#        * mipsel-linux-android-clang3.4\n\n#        * mipsel-linux-android-clang3.5\n\n#        * x86-4.6\n\n#        * x86-4.8\n\n#        * x86-4.9\n\n#        * x86-clang3.4\n\n#        * x86-clang3.5\n\n#        * x86_64-4.9\n\n#        * x86_64-clang3.4\n\n#        * x86_64-clang3.5\n\n#\n\n#    ANDROID_FORCE_ARM_BUILD=OFF - set ON to generate 32-bit ARM instructions\n\n#      instead of Thumb. Is not available for \"armeabi-v6 with VFP\"\n\n#      (is forced to be ON) ABI.\n\n#\n\n#    ANDROID_NO_UNDEFINED=ON - set ON to show all undefined symbols as linker\n\n#      errors even if they are not used.\n\n#\n\n#    ANDROID_SO_UNDEFINED=OFF - set ON to allow undefined symbols in shared\n\n#      libraries. Automatically turned for NDK r5x and r6x due to GLESv2\n\n#      problems.\n\n#\n\n#    ANDROID_STL=gnustl_static - specify the runtime to use.\n\n#\n\n#      Possible values are:\n\n#        none           -> Do not configure the runtime.\n\n#        system         -> Use the default minimal system C++ runtime library.\n\n#                          Implies -fno-rtti -fno-exceptions.\n\n#                          Is not available for standalone toolchain.\n\n#        system_re      -> Use the default minimal system C++ runtime library.\n\n#                          Implies -frtti -fexceptions.\n\n#                          Is not available for standalone toolchain.\n\n#        gabi++_static  -> Use the GAbi++ runtime as a static library.\n\n#                          Implies -frtti -fno-exceptions.\n\n#                          Available for NDK r7 and newer.\n\n#                          Is not available for standalone toolchain.\n\n#        gabi++_shared  -> Use the GAbi++ runtime as a shared library.\n\n#                          Implies -frtti -fno-exceptions.\n\n#                          Available for NDK r7 and newer.\n\n#                          Is not available for standalone toolchain.\n\n#        stlport_static -> Use the STLport runtime as a static library.\n\n#                          Implies -fno-rtti -fno-exceptions for NDK before r7.\n\n#                          Implies -frtti -fno-exceptions for NDK r7 and newer.\n\n#                          Is not available for standalone toolchain.\n\n#        stlport_shared -> Use the STLport runtime as a shared library.\n\n#                          Implies -fno-rtti -fno-exceptions for NDK before r7.\n\n#                          Implies -frtti -fno-exceptions for NDK r7 and newer.\n\n#                          Is not available for standalone toolchain.\n\n#        gnustl_static  -> Use the GNU STL as a static library.\n\n#                          Implies -frtti -fexceptions.\n\n#        gnustl_shared  -> Use the GNU STL as a shared library.\n\n#                          Implies -frtti -fno-exceptions.\n\n#                          Available for NDK r7b and newer.\n\n#                          Silently degrades to gnustl_static if not available.\n\n#\n\n#    ANDROID_STL_FORCE_FEATURES=ON - turn rtti and exceptions support based on\n\n#      chosen runtime. If disabled, then the user is responsible for settings\n\n#      these options.\n\n#\n\n#  What?:\n\n#    android-cmake toolchain searches for NDK/toolchain in the following order:\n\n#      ANDROID_NDK - cmake parameter\n\n#      ANDROID_NDK - environment variable\n\n#      ANDROID_STANDALONE_TOOLCHAIN - cmake parameter\n\n#      ANDROID_STANDALONE_TOOLCHAIN - environment variable\n\n#      ANDROID_NDK - default locations\n\n#      ANDROID_STANDALONE_TOOLCHAIN - default locations\n\n#\n\n#    Make sure to do the following in your scripts:\n\n#      SET( CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} ${my_cxx_flags}\" )\n\n#      SET( CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} ${my_cxx_flags}\" )\n\n#    The flags will be prepopulated with critical flags, so don't loose them.\n\n#    Also be aware that toolchain also sets configuration-specific compiler\n\n#    flags and linker flags.\n\n#\n\n#    ANDROID and BUILD_ANDROID will be set to true, you may test any of these\n\n#    variables to make necessary Android-specific configuration changes.\n\n#\n\n#    Also ARMEABI or ARMEABI_V7A or X86 or MIPS or ARM64_V8A or X86_64 or MIPS64\n\n#    will be set true, mutually exclusive. NEON option will be set true\n\n#    if VFP is set to NEON.\n\n#\n\n# ------------------------------------------------------------------------------\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# subsequent toolchain loading is not really needed\n",
        "Line" : 190,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# touch toolchain variable to suppress \"unused variable\" warning\n",
        "Line" : 195,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# inherit settings in recursive loads\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# this one is important\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# this one not so much\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# rpath makes low sense for Android\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# NDK search paths\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# known ABIs\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# API level defaults\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# fight against cygwin\n",
        "Line" : 338,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# remove cygwin from PATH\n",
        "Line" : 347,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# detect current host platform\n",
        "Line" : 356,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# see if we have path to Android NDK\n",
        "Line" : 381,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# see if we have path to Android standalone toolchain\n",
        "Line" : 386,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "#try to find Android NDK in one of the the default locations\n",
        "Line" : 390,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "#try to find Android standalone toolchain in one of the the default locations\n",
        "Line" : 404,
        "CharPositionInLine" : 3
      },
      "18" : {
        "Text" : "# remember found paths\n",
        "Line" : 415,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# try to detect change\n",
        "Line" : 432,
        "CharPositionInLine" : 1
      },
      "20" : {
        "Text" : "# android NDK layout\n",
        "Line" : 456,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# try to automatically detect the layout\n",
        "Line" : 459,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# only 32-bit at the moment\n",
        "Line" : 471,
        "CharPositionInLine" : 71
      },
      "23" : {
        "Text" : "# only 32-bit at the moment\n",
        "Line" : 476,
        "CharPositionInLine" : 71
      },
      "24" : {
        "Text" : "# ANDROID_NDK_LAYOUT STREQUAL \"RELEASE\"\n",
        "Line" : 480,
        "CharPositionInLine" : 8
      },
      "25" : {
        "Text" : "# try to detect change of NDK\n",
        "Line" : 487,
        "CharPositionInLine" : 1
      },
      "26" : {
        "Text" : "# get all the details about standalone toolchain\n",
        "Line" : 501,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#message(\"machine: !${__machine}!\\narch: !${__arch}!\\nversion: !${__version}!\\ntoolchain: !${__toolchain}!\\n\")\n",
        "Line" : 568,
        "CharPositionInLine" : 3
      },
      "28" : {
        "Text" : "# get all the details about NDK\n",
        "Line" : 580,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# do not go through all toolchains if we know the name\n",
        "Line" : 589,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# we need clang to go after gcc\n",
        "Line" : 602,
        "CharPositionInLine" : 39
      },
      "31" : {
        "Text" : "# build list of available ABIs\n",
        "Line" : 620,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# choose target ABI\n",
        "Line" : 633,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# verify that target ABI is supported\n",
        "Line" : 635,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# set target ABI options\n",
        "Line" : 645,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# need always fallback to older platform\n",
        "Line" : 691,
        "CharPositionInLine" : 1
      },
      "36" : {
        "Text" : "# really dirty hack\n\n# it is not possible to change CMAKE_SYSTEM_PROCESSOR after the first run...\n",
        "Line" : 719,
        "CharPositionInLine" : 1
      },
      "37" : {
        "Text" : "# choose toolchain\n",
        "Line" : 732,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# choose native API level\n",
        "Line" : 781,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# adjust API level\n",
        "Line" : 785,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# validate\n",
        "Line" : 797,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# remember target ABI\n",
        "Line" : 819,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# runtime choice (STL, rtti, exceptions)\n",
        "Line" : 827,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# setup paths and STL for standalone toolchain\n",
        "Line" : 895,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# old location ( pre r8c )\n",
        "Line" : 904,
        "CharPositionInLine" : 3
      },
      "45" : {
        "Text" : "# always search static GNU STL to get the location of libsupc++.a\n",
        "Line" : 914,
        "CharPositionInLine" : 2
      },
      "46" : {
        "Text" : "# clang\n",
        "Line" : 949,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# setup paths and STL for NDK\n",
        "Line" : 973,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# do nothing\n",
        "Line" : 979,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "# before r7\n",
        "Line" : 989,
        "CharPositionInLine" : 42
      },
      "50" : {
        "Text" : "# before r8d\n",
        "Line" : 997,
        "CharPositionInLine" : 46
      },
      "51" : {
        "Text" : "# before r7\n",
        "Line" : 1002,
        "CharPositionInLine" : 42
      },
      "52" : {
        "Text" : "# gnustl binary for 4.7 compiler is buggy :(\n\n# TODO: look for right fix\n",
        "Line" : 1014,
        "CharPositionInLine" : 4
      },
      "53" : {
        "Text" : "# find libsupc++.a - rtti & exceptions\n",
        "Line" : 1032,
        "CharPositionInLine" : 1
      },
      "54" : {
        "Text" : "# r8b or newer\n",
        "Line" : 1034,
        "CharPositionInLine" : 137
      },
      "55" : {
        "Text" : "# r7-r8\n",
        "Line" : 1036,
        "CharPositionInLine" : 110
      },
      "56" : {
        "Text" : "# before r7\n",
        "Line" : 1038,
        "CharPositionInLine" : 36
      },
      "57" : {
        "Text" : "# case of shared STL linkage\n",
        "Line" : 1058,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# TODO: check if .so file exists before the renaming\n",
        "Line" : 1061,
        "CharPositionInLine" : 1
      },
      "59" : {
        "Text" : "# ccache support\n",
        "Line" : 1065,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# setup the cross-compiler\n",
        "Line" : 1078,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# Use gcc-ar if we have it for better LTO support.\n",
        "Line" : 1102,
        "CharPositionInLine" : 2
      },
      "62" : {
        "Text" : "# Force set compilers because standard identification works badly for us\n",
        "Line" : 1126,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# force ASM compiler (required for CMake < 2.8.5)\n",
        "Line" : 1149,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# flags and definitions\n",
        "Line" : 1165,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# try to convert path to 8.3 form\n",
        "Line" : 1171,
        "CharPositionInLine" : 2
      },
      "66" : {
        "Text" : "# quotes can break try_compile and compiler identification\n",
        "Line" : 1186,
        "CharPositionInLine" : 2
      },
      "67" : {
        "Text" : "# NDK flags\n",
        "Line" : 1193,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# always compile ARMEABI_V6 in arm mode; otherwise there is no difference from ARMEABI\n",
        "Line" : 1210,
        "CharPositionInLine" : 2
      },
      "69" : {
        "Text" : "# good/necessary when porting desktop libraries\n",
        "Line" : 1237,
        "CharPositionInLine" : 62
      },
      "70" : {
        "Text" : "# see https://android-review.googlesource.com/#/c/47564/\n",
        "Line" : 1244,
        "CharPositionInLine" : 72
      },
      "71" : {
        "Text" : "# ABI-specific flags\n",
        "Line" : 1247,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# vfp == vfpv2\n",
        "Line" : 1258,
        "CharPositionInLine" : 91
      },
      "73" : {
        "Text" : "# STL\n",
        "Line" : 1273,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# C objects:\n",
        "Line" : 1284,
        "CharPositionInLine" : 2
      },
      "75" : {
        "Text" : "# variables controlling optional build flags\n",
        "Line" : 1302,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# before r7\n",
        "Line" : 1303,
        "CharPositionInLine" : 40
      },
      "77" : {
        "Text" : "# libGLESv2.so in NDK's prior to r7 refers to missing external symbols.\n\n# So this flag option is required for all projects using OpenGL from native.\n",
        "Line" : 1304,
        "CharPositionInLine" : 1
      },
      "78" : {
        "Text" : "# linker flags\n",
        "Line" : 1324,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# this is *required* to use the following linker flags that routes around\n\n# a CPU bug in some Cortex-A8 implementations:\n",
        "Line" : 1328,
        "CharPositionInLine" : 1
      },
      "80" : {
        "Text" : "# there is some sysroot-related problem in mips linker...\n",
        "Line" : 1335,
        "CharPositionInLine" : 2
      },
      "81" : {
        "Text" : "# after r8b\n",
        "Line" : 1356,
        "CharPositionInLine" : 48
      },
      "82" : {
        "Text" : "# version 4.6\n",
        "Line" : 1364,
        "CharPositionInLine" : 8
      },
      "83" : {
        "Text" : "# cache flags\n",
        "Line" : 1386,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# put flags to cache (for debug purpose only)\n",
        "Line" : 1397,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# finish flags\n",
        "Line" : 1403,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# pie/pic\n",
        "Line" : 1420,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "# configure rtti\n",
        "Line" : 1430,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "# configure exceptios\n",
        "Line" : 1439,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# global includes and link directories\n",
        "Line" : 1450,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "# avoid CMP0015 policy warning\n",
        "Line" : 1452,
        "CharPositionInLine" : 111
      },
      "91" : {
        "Text" : "# detect if need link crtbegin_so.o explicitly\n",
        "Line" : 1455,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "# setup output directories\n",
        "Line" : 1492,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "# copy shaed stl library to build directory\n",
        "Line" : 1509,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "# set these global flags for cmake client scripts to change behavior\n",
        "Line" : 1521,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "# where is the target environment\n",
        "Line" : 1525,
        "CharPositionInLine" : 0
      },
      "96" : {
        "Text" : "# only search for libraries and includes in the ndk toolchain\n",
        "Line" : 1528,
        "CharPositionInLine" : 0
      },
      "97" : {
        "Text" : "# macro to find packages on the host OS\n",
        "Line" : 1534,
        "CharPositionInLine" : 0
      },
      "98" : {
        "Text" : "# macro to find programs on the host OS\n",
        "Line" : 1556,
        "CharPositionInLine" : 0
      },
      "99" : {
        "Text" : "# export toolchain settings for the try_compile() command\n",
        "Line" : 1578,
        "CharPositionInLine" : 0
      },
      "100" : {
        "Text" : "# force cmake to produce / instead of \\ in build commands for Ninja generator\n",
        "Line" : 1615,
        "CharPositionInLine" : 0
      },
      "101" : {
        "Text" : "# it is a bad hack after all\n\n# CMake generates Ninja makefiles with UNIX paths only if it thinks that we are going to build with MinGW\n",
        "Line" : 1617,
        "CharPositionInLine" : 1
      },
      "102" : {
        "Text" : "# tell CMake that we are MinGW\n\n# stop recursion\n",
        "Line" : 1619,
        "CharPositionInLine" : 37
      },
      "103" : {
        "Text" : "# unset( CMAKE_COMPILER_IS_MINGW ) # can't unset because CMake does not convert back-slashes in response files without it\n",
        "Line" : 1623,
        "CharPositionInLine" : 1
      },
      "104" : {
        "Text" : "# Variables controlling behavior or set by cmake toolchain:\n\n#   ANDROID_ABI : \"armeabi-v7a\" (default), \"armeabi\", \"armeabi-v7a with NEON\", \"armeabi-v7a with VFPV3\", \"armeabi-v6 with VFP\", \"x86\", \"mips\", \"arm64-v8a\", \"x86_64\", \"mips64\"\n\n#   ANDROID_NATIVE_API_LEVEL : 3,4,5,8,9,14,15,16,17,18,19,21 (depends on NDK version)\n\n#   ANDROID_STL : gnustl_static/gnustl_shared/stlport_static/stlport_shared/gabi++_static/gabi++_shared/system_re/system/none\n\n#   ANDROID_FORBID_SYGWIN : ON/OFF\n\n#   ANDROID_NO_UNDEFINED : ON/OFF\n\n#   ANDROID_SO_UNDEFINED : OFF/ON  (default depends on NDK version)\n\n#   ANDROID_FUNCTION_LEVEL_LINKING : ON/OFF\n\n#   ANDROID_GOLD_LINKER : ON/OFF\n\n#   ANDROID_NOEXECSTACK : ON/OFF\n\n#   ANDROID_RELRO : ON/OFF\n\n#   ANDROID_FORCE_ARM_BUILD : ON/OFF\n\n#   ANDROID_STL_FORCE_FEATURES : ON/OFF\n\n#   ANDROID_LIBM_PATH : path to libm.so (set to something like $(TOP)/out/target/product/<product_name>/obj/lib/libm.so) to workaround unresolved `sincos`\n\n# Can be set only at the first run:\n\n#   ANDROID_NDK : path to your NDK install\n\n#   NDK_CCACHE : path to your ccache executable\n\n#   ANDROID_TOOLCHAIN_NAME : the NDK name of compiler toolchain\n\n#   ANDROID_NDK_HOST_X64 : try to use x86_64 toolchain (default for x64 host systems)\n\n#   ANDROID_NDK_LAYOUT : the inner NDK structure (RELEASE, LINARO, ANDROID)\n\n#   LIBRARY_OUTPUT_PATH_ROOT : <any valid path>\n\n#   ANDROID_STANDALONE_TOOLCHAIN\n\n#\n\n# Primary read-only variables:\n\n#   ANDROID : always TRUE\n\n#   ARMEABI : TRUE for arm v6 and older devices\n\n#   ARMEABI_V6 : TRUE for arm v6\n\n#   ARMEABI_V7A : TRUE for arm v7a\n\n#   ARM64_V8A : TRUE for arm64-v8a\n\n#   NEON : TRUE if NEON unit is enabled\n\n#   VFPV3 : TRUE if VFP version 3 is enabled\n\n#   X86 : TRUE if configured for x86\n\n#   X86_64 : TRUE if configured for x86_64\n\n#   MIPS : TRUE if configured for mips\n\n#   MIPS64 : TRUE if configured for mips64\n\n#   BUILD_WITH_ANDROID_NDK : TRUE if NDK is used\n\n#   BUILD_WITH_STANDALONE_TOOLCHAIN : TRUE if standalone toolchain is used\n\n#   ANDROID_NDK_HOST_SYSTEM_NAME : \"windows\", \"linux-x86\" or \"darwin-x86\" depending on host platform\n\n#   ANDROID_NDK_ABI_NAME : \"armeabi\", \"armeabi-v7a\", \"x86\", \"mips\", \"arm64-v8a\", \"x86_64\", \"mips64\" depending on ANDROID_ABI\n\n#   ANDROID_NDK_RELEASE : from r5 to r10e; set only for NDK\n\n#   ANDROID_NDK_RELEASE_NUM : numeric ANDROID_NDK_RELEASE version (1000*major+minor)\n\n#   ANDROID_ARCH_NAME : \"arm\", \"x86\", \"mips\", \"arm64\", \"x86_64\", \"mips64\" depending on ANDROID_ABI\n\n#   ANDROID_SYSROOT : path to the compiler sysroot\n\n#   TOOL_OS_SUFFIX : \"\" or \".exe\" depending on host platform\n\n#   ANDROID_COMPILER_IS_CLANG : TRUE if clang compiler is used\n\n#\n\n# Secondary (less stable) read-only variables:\n\n#   ANDROID_COMPILER_VERSION : GCC version used (not Clang version)\n\n#   ANDROID_CLANG_VERSION : version of clang compiler if clang is used\n\n#   ANDROID_CXX_FLAGS : C/C++ compiler flags required by Android platform\n\n#   ANDROID_SUPPORTED_ABIS : list of currently allowed values for ANDROID_ABI\n\n#   ANDROID_TOOLCHAIN_MACHINE_NAME : \"arm-linux-androideabi\", \"arm-eabi\" or \"i686-android-linux\"\n\n#   ANDROID_TOOLCHAIN_ROOT : path to the top level of toolchain (standalone or placed inside NDK)\n\n#   ANDROID_CLANG_TOOLCHAIN_ROOT : path to clang tools\n\n#   ANDROID_SUPPORTED_NATIVE_API_LEVELS : list of native API levels found inside NDK\n\n#   ANDROID_STL_INCLUDE_DIRS : stl include paths\n\n#   ANDROID_RTTI : if rtti is enabled by the runtime\n\n#   ANDROID_EXCEPTIONS : if exceptions are enabled by the runtime\n\n#   ANDROID_GCC_TOOLCHAIN_NAME : read-only, differs from ANDROID_TOOLCHAIN_NAME only if clang is used\n\n#\n\n# Defaults:\n\n#   ANDROID_DEFAULT_NDK_API_LEVEL\n\n#   ANDROID_DEFAULT_NDK_API_LEVEL_${ARCH}\n\n#   ANDROID_NDK_SEARCH_PATHS\n\n#   ANDROID_SUPPORTED_ABIS_${ARCH}\n\n#   ANDROID_SUPPORTED_NDK_VERSIONS\n",
        "Line" : 1628,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 105
    },
    "core/cmake/toolchains/emscripten.cmake" : {
      "ObjectId" : "990de22a14a3f935e5f47703d981229fc2ba4244",
      "LastModified" : "2016-10-28T13:11:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ---\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# TODO: AVOID DOUBLE-INCLUSION OF FLAGS\n\n#\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "core/cmake/toolchains/ios.cmake" : {
      "ObjectId" : "88cf5056d48a4a59b7fde346190b1f721bb19e6b",
      "LastModified" : "2016-10-28T13:11:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ---\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# TODO: AVOID DOUBLE-INCLUSION OF FLAGS\n\n#\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "core/cmake/toolchains/ios.xcode.cmake" : {
      "ObjectId" : "a7f1a64a105b92d52e5f13a845d1464195634a9d",
      "LastModified" : "2017-01-31T23:04:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# SAVING TIME AND UNNECESSARY TROUBLE\n\n#\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ---\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# NECESSARY WHEN SEVERAL ARCHITECTURES MUST BE BUILT\n",
        "Line" : 32,
        "CharPositionInLine" : 49
      },
      "3" : {
        "Text" : "# ---\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# NECESSARY, OTHERWISE add_executable() IN CMakeLists.txt WON'T HAVE ANY EFFECT\n",
        "Line" : 37,
        "CharPositionInLine" : 29
      },
      "CommentCount" : 5
    },
    "core/cmake/toolchains/mxe.cmake" : {
      "ObjectId" : "350e6b9b0e1a81e1d5c4039b2cfb051ec51dfc7b",
      "LastModified" : "2017-01-31T23:04:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ---\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# TODO: AVOID DOUBLE-INCLUSION OF FLAGS\n\n#\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "core/cmake/toolchains/osx.cmake" : {
      "ObjectId" : "19941ae5bb0a6988a20821df2ac676cbd3a42ab6",
      "LastModified" : "2017-01-31T23:04:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ---\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# TODO: AVOID DOUBLE-INCLUSION OF FLAGS\n\n#\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "core/src/CMakeLists.txt" : {
      "ObjectId" : "6985dab3dc82e88141209e143448c10df01dad29",
      "LastModified" : "2018-01-09T17:48:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ---\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ---\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ---\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ---\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ---\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ---\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "deps/harfbuzz/CMakeLists.txt" : {
      "ObjectId" : "aa93e3c2de4205274b57b92a8295817d1e354f2a",
      "LastModified" : "2017-01-31T23:04:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/TestingAccelerometer/CMakeLists.txt" : {
      "ObjectId" : "fc7012a86057502008408671535f9e193a24722d",
      "LastModified" : "2017-01-31T23:04:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/TestingAccelerometer/CTestConfig.cmake" : {
      "ObjectId" : "82de7894bd6b8939c82cecf699441ca947ffd2f2",
      "LastModified" : "2017-01-31T23:04:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#   -DIOS_DEPLOYMENT_TARGET=5.1.1\n\n#   -DIOS_ARCHS=armv7\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/TestingBoost/CMakeLists.txt" : {
      "ObjectId" : "9fb9b8146e14f09199bc35c22bbb6bd007f06f77",
      "LastModified" : "2017-01-31T23:04:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/TestingBoost/CTestConfig.cmake" : {
      "ObjectId" : "b105b148d45cccd827c2badb4762bba3c5bfc4be",
      "LastModified" : "2017-01-31T23:04:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#   -DIOS_DEPLOYMENT_TARGET=5.1.1\n\n#   -DIOS_ARCHS=armv7\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/TestingCPP14/CMakeLists.txt" : {
      "ObjectId" : "558febbf84fca6d958a62826ff4fe93274bf0ce7",
      "LastModified" : "2017-01-31T23:04:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/TestingCPP14/CTestConfig.cmake" : {
      "ObjectId" : "4bfe86d8fa3b2eafa4abf3aed62781f2ffbb3a21",
      "LastModified" : "2017-01-31T23:04:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#   -DIOS_DEPLOYMENT_TARGET=5.1.1\n\n#   -DIOS_ARCHS=armv7\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/TestingCamera/CMakeLists.txt" : {
      "ObjectId" : "d530f59155a3ce663bd8713c86c7c0da557e8500",
      "LastModified" : "2017-01-31T23:04:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/TestingCamera/CTestConfig.cmake" : {
      "ObjectId" : "cd7856dfc4e72c24fc152a08b80e1ffe480b577b",
      "LastModified" : "2017-01-31T23:04:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#   -DIOS_DEPLOYMENT_TARGET=5.1.1\n\n#   -DIOS_ARCHS=armv7\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/TestingDrawing2d/CMakeLists.txt" : {
      "ObjectId" : "e29c76e79ba660a7c985329e491fba92736d1d23",
      "LastModified" : "2017-01-31T23:04:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/TestingDrawing2d/CTestConfig.cmake" : {
      "ObjectId" : "8ec667d0542fe7de51f1c014a014e56554449c5d",
      "LastModified" : "2017-01-31T23:04:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#   -DIOS_DEPLOYMENT_TARGET=5.1.1\n\n#   -DIOS_ARCHS=armv7\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/TestingDrawing3d/CMakeLists.txt" : {
      "ObjectId" : "cd583fd1a0ae292fae916e35119c63e9b8de46b8",
      "LastModified" : "2017-01-31T23:04:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/TestingDrawing3d/CTestConfig.cmake" : {
      "ObjectId" : "52e0eb76781e488cdc9fbb3d2037d1a88c5eb503",
      "LastModified" : "2017-01-31T23:04:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#   -DIOS_DEPLOYMENT_TARGET=5.1.1\n\n#   -DIOS_ARCHS=armv7\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/TestingFBO/CMakeLists.txt" : {
      "ObjectId" : "f25eb94410d94af9e390222090f51843acc38f49",
      "LastModified" : "2018-01-09T17:48:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/TestingFBO/CTestConfig.cmake" : {
      "ObjectId" : "46e58760648ad38a0786d5b3df083c5c96885af5",
      "LastModified" : "2018-01-09T17:48:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#   -DIOS_DEPLOYMENT_TARGET=5.1.1\n\n#   -DIOS_ARCHS=armv7\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/TestingFileDialog/CMakeLists.txt" : {
      "ObjectId" : "ac51b4d00130bbdebf990dea90e0746124ed5d71",
      "LastModified" : "2018-01-09T17:48:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/TestingFileDialog/CTestConfig.cmake" : {
      "ObjectId" : "09c823b48743b27dbd0a8ed687ad8cb5854facd8",
      "LastModified" : "2018-01-09T17:48:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/TestingFileSystem2/CMakeLists.txt" : {
      "ObjectId" : "50ce31185b52609ded4b7bacd80123cd065d8939",
      "LastModified" : "2018-01-09T17:48:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/TestingFileSystem2/CTestConfig.cmake" : {
      "ObjectId" : "ad2b5e81bda8e69ee912017fb26fe2286ed25f55",
      "LastModified" : "2018-01-09T17:48:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#   -DIOS_DEPLOYMENT_TARGET=5.1.1\n\n#   -DIOS_ARCHS=armv7\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#   -DRUN=BROWSER\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tests/TestingFileSystem3/CMakeLists.txt" : {
      "ObjectId" : "ca9046f7b7b10e8c3e627164e5c2fd0d73debdd8",
      "LastModified" : "2018-01-09T17:48:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/TestingFileSystem3/CTestConfig.cmake" : {
      "ObjectId" : "8c5c9ed717b631a231c52215b85afda89ea112e2",
      "LastModified" : "2018-01-09T17:48:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#   -DIOS_DEPLOYMENT_TARGET=5.1.1\n\n#   -DIOS_ARCHS=armv7\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#   -DRUN=SPIDERMONKEY\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tests/TestingGLM/CMakeLists.txt" : {
      "ObjectId" : "112e4bed213114f4ba7f832e55fee6d4a21e9aab",
      "LastModified" : "2018-01-09T17:48:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/TestingGLM/CTestConfig.cmake" : {
      "ObjectId" : "e03eb9924624fd182fd4f6ff0b27339566783fd0",
      "LastModified" : "2018-01-09T17:48:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#   -DIOS_DEPLOYMENT_TARGET=5.1.1\n\n#   -DIOS_ARCHS=armv7\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/TestingGTest/CMakeLists.txt" : {
      "ObjectId" : "4776050ba3d9acc5549b79ad469782705525fc83",
      "LastModified" : "2018-01-09T17:48:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_test(NAME MessageTest  COMMAND ./run.sh \"--gtest_filter=MessageTest.*\")\n\n#add_test(NAME PrintersTest COMMAND ./run.sh \"--gtest_filter=Print*Test.*\")\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/TestingGTest/CTestConfig.cmake" : {
      "ObjectId" : "98c619e8e42b39110f76b13d67165b7d9c82441c",
      "LastModified" : "2018-01-09T17:48:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#   -DIOS_DEPLOYMENT_TARGET=5.1.1\n\n#   -DIOS_ARCHS=armv7\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/TestingHarfbuzz/CMakeLists.txt" : {
      "ObjectId" : "fac0a82fccc9a63d1f5f60f99170b0b32bcde8a8",
      "LastModified" : "2018-01-09T17:48:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/TestingHarfbuzz/CTestConfig.cmake" : {
      "ObjectId" : "ef4e6bfe66132409d27b76e5c64f83713a9638b9",
      "LastModified" : "2018-01-09T17:48:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#   -DIOS_DEPLOYMENT_TARGET=5.1.1\n\n#   -DIOS_ARCHS=armv7\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/TestingIO/CMakeLists.txt" : {
      "ObjectId" : "860cc906eae79a640e6bb5c42d4ae4fb136af471",
      "LastModified" : "2018-01-09T17:48:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/TestingIO/CTestConfig.cmake" : {
      "ObjectId" : "5f6f93eff8be355e5a7f5512c9d60b7bd45b66b2",
      "LastModified" : "2018-01-09T17:48:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#   -DIOS_DEPLOYMENT_TARGET=5.1.1\n\n#   -DIOS_ARCHS=armv7\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/TestingInput/CMakeLists.txt" : {
      "ObjectId" : "74fa6009fe3830d80f55fce413e6b175229817aa",
      "LastModified" : "2018-01-09T17:48:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/TestingInput/CTestConfig.cmake" : {
      "ObjectId" : "a1caf9014cfaf5386f457d2ad8a203e28cd740cc",
      "LastModified" : "2018-01-09T17:48:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#   -DIOS_DEPLOYMENT_TARGET=5.1.1\n\n#   -DIOS_ARCHS=armv7\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/TestingJsonCPP/CMakeLists.txt" : {
      "ObjectId" : "0923376874f8dcf7fe6605d717eb0ab1090b41b9",
      "LastModified" : "2018-01-09T17:48:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/TestingJsonCPP/CTestConfig.cmake" : {
      "ObjectId" : "952809817eb8b534d900ff3fcb1850c5ea5ea6a2",
      "LastModified" : "2018-01-09T17:48:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#   -DIOS_DEPLOYMENT_TARGET=5.1.1\n\n#   -DIOS_ARCHS=armv7\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/TestingLibJpeg/CMakeLists.txt" : {
      "ObjectId" : "12c1d944c4a4de4f47979aed8e96756daff98b3a",
      "LastModified" : "2018-01-09T17:48:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/TestingLibJpeg/CTestConfig.cmake" : {
      "ObjectId" : "190b90f3c6764ea4a5ec71550d2f55d72aa16c5c",
      "LastModified" : "2018-01-09T17:48:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#   -DIOS_DEPLOYMENT_TARGET=5.1.1\n\n#   -DIOS_ARCHS=armv7\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/TestingLibPng/CMakeLists.txt" : {
      "ObjectId" : "aedfd84c21a8324195e6d6f3fc926bdfc96d8842",
      "LastModified" : "2018-01-09T17:48:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/TestingLibPng/CTestConfig.cmake" : {
      "ObjectId" : "d21d21b63850efc8830770c0aac1e1ba671ab6b8",
      "LastModified" : "2018-01-09T17:48:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#   -DIOS_DEPLOYMENT_TARGET=5.1.1\n\n#   -DIOS_ARCHS=armv7\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/TestingLighting/CMakeLists.txt" : {
      "ObjectId" : "b1a38ed5bbf2cb281d95ad869d56d475788bafa7",
      "LastModified" : "2018-01-09T17:48:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/TestingLighting/CTestConfig.cmake" : {
      "ObjectId" : "30476dc83a85932c56fd6067c16dbe80058a7c48",
      "LastModified" : "2018-01-09T17:48:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#   -DIOS_DEPLOYMENT_TARGET=5.1.1\n\n#   -DIOS_ARCHS=armv7\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/TestingProtobuf/CMakeLists.txt" : {
      "ObjectId" : "19f3ad6db64109cd676e918538c9ff1df8810641",
      "LastModified" : "2018-01-09T17:48:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/TestingProtobuf/CTestConfig.cmake" : {
      "ObjectId" : "862cae25881b19caebd1e7ae4f9c30b0f66cba0c",
      "LastModified" : "2018-01-09T17:48:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#   -DIOS_DEPLOYMENT_TARGET=5.1.1\n\n#   -DIOS_ARCHS=armv7\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/TestingPugiXML/CMakeLists.txt" : {
      "ObjectId" : "513a5d0f1dccd6efe4a69b77970d68df5468b0f1",
      "LastModified" : "2018-01-09T17:48:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/TestingPugiXML/CTestConfig.cmake" : {
      "ObjectId" : "0ff909d7d75d448d6eb868bf3395d90beee2d050",
      "LastModified" : "2018-01-09T17:48:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#   -DIOS_DEPLOYMENT_TARGET=5.1.1\n\n#   -DIOS_ARCHS=armv7\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/TestingRevolver/CMakeLists.txt" : {
      "ObjectId" : "abb58c9a2e6505cd84a3cc9c4bc0954fc713e79a",
      "LastModified" : "2018-01-09T17:48:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/TestingRevolver/CTestConfig.cmake" : {
      "ObjectId" : "600a942869c8e4092ec5c98a4ad1cd4a36bbd39d",
      "LastModified" : "2018-01-09T17:48:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#   -DIOS_DEPLOYMENT_TARGET=5.1.1\n\n#   -DIOS_ARCHS=armv7\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/TestingSVG/CMakeLists.txt" : {
      "ObjectId" : "ab043ee853ad9c676ce4c90b120c427b1089f326",
      "LastModified" : "2018-01-09T17:48:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/TestingSVG/CTestConfig.cmake" : {
      "ObjectId" : "70a1692573b150d1b550a0bdf16de1eadc0f244b",
      "LastModified" : "2018-01-09T17:48:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#   -DIOS_DEPLOYMENT_TARGET=5.1.1\n\n#   -DIOS_ARCHS=armv7\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/TestingSplines/CMakeLists.txt" : {
      "ObjectId" : "563d13c481333d8a680b36e5bfb40984c7ba589c",
      "LastModified" : "2018-01-09T17:48:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/TestingSplines/CTestConfig.cmake" : {
      "ObjectId" : "f719af0c289eac856311b966e2e8204b1849c70b",
      "LastModified" : "2018-01-09T17:48:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#   -DIOS_DEPLOYMENT_TARGET=5.1.1\n\n#   -DIOS_ARCHS=armv7\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/TestingTesselation/CMakeLists.txt" : {
      "ObjectId" : "bc02ee85c04cdf735e3122308cbea200a47d9d67",
      "LastModified" : "2018-01-09T17:48:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/TestingTesselation/CTestConfig.cmake" : {
      "ObjectId" : "6395a12f221212407776509bc6c25760a16a5657",
      "LastModified" : "2018-01-09T17:48:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#   -DIOS_DEPLOYMENT_TARGET=5.1.1\n\n#   -DIOS_ARCHS=armv7\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/TestingTouch/CMakeLists.txt" : {
      "ObjectId" : "fddf5507f60bf4af9568a313691454161d1d6906",
      "LastModified" : "2018-01-09T17:48:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/TestingTouch/CTestConfig.cmake" : {
      "ObjectId" : "cff2814879a34670fd2e6adb931e1e2e6d74e015",
      "LastModified" : "2018-01-09T17:48:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#   -DIOS_DEPLOYMENT_TARGET=5.1.1\n\n#   -DIOS_ARCHS=armv7\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 65
  },
  "ElapsedTime" : 934
}