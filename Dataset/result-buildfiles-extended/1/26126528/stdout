{
  "Repository" : "26126528",
  "Revision" : "HEAD",
  "ObjectId" : "24db79d4c28108d0c985dbccac4eb93faeb1000b",
  "CommitTime" : "2016-08-07T20:44:35Z",
  "Files" : {
    "android/snap-android/build.xml" : {
      "ObjectId" : "4fcc66b5f481dade8303bdedf1f99f7eae6a11cb",
      "LastModified" : "2016-02-14T13:59:51Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " The local.properties file is created and updated by the 'android' tool.\n         It contains the path to the SDK. It should *NOT* be checked into\n         Version Control Systems. ",
        "Line" : 6,
        "CharPositionInLine" : 38
      },
      "1" : {
        "Text" : " The ant.properties file can be created by you. It is only edited by the\n         'android' tool to add properties to it.\n         This is the place to change some Ant specific build properties.\n         Here are some properties you may want to change/update:\n\n         source.dir\n             The name of the source directory. Default is 'src'.\n         out.dir\n             The name of the output directory. Default is 'bin'.\n\n         For other overridable properties, look at the beginning of the rules\n         files in the SDK, at tools/ant/build.xml\n\n         Properties related to the SDK location or the project target should\n         be updated using the 'android' tool with the 'update' action.\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems.\n\n         ",
        "Line" : 28,
        "CharPositionInLine" : 13
      },
      "2" : {
        "Text" : " if sdk.dir was not set from one of the property file, then\n         get it from the ANDROID_HOME env var.\n         This must be done before we load project.properties since\n         the proguard config can use sdk.dir ",
        "Line" : 34,
        "CharPositionInLine" : 49
      },
      "3" : {
        "Text" : " The project.properties file is created and updated by the 'android'\n         tool, as well as ADT.\n\n         This contains project specific properties such as project target, and library\n         dependencies. Lower level build properties are stored in ant.properties\n         (or in .classpath for Eclipse projects).\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems. ",
        "Line" : 48,
        "CharPositionInLine" : 77
      },
      "4" : {
        "Text" : " quick check on sdk.dir ",
        "Line" : 51,
        "CharPositionInLine" : 36
      },
      "5" : {
        "Text" : "\n        Import per project custom build rules if present at the root of the project.\n        This is the place to put custom intermediary targets such as:\n            -pre-build\n            -pre-compile\n            -post-compile (This is typically used for code obfuscation.\n                           Compiled code location: ${out.classes.absolute.dir}\n                           If this is not done in place, override ${out.dex.input.absolute.dir})\n            -post-package\n            -post-build\n            -pre-clean\n    ",
        "Line" : 68,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : " Import the actual build file.\n\n         To customize existing targets, there are two options:\n         - Customize only one target:\n             - copy/paste the target into this file, *before* the\n               <import> task.\n             - customize it to your needs.\n         - Customize the whole content of build.xml\n             - copy/paste the content of the rules files (minus the top node)\n               into this file, replacing the <import> task.\n             - customize to your needs.\n\n         ***********************\n         ****** IMPORTANT ******\n         ***********************\n         In all cases you must update the value of version-tag below to read 'custom' instead of an integer,\n         in order to avoid having your file be overridden by tools such as \"android update project\"\n    ",
        "Line" : 88,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : " version-tag: 1 ",
        "Line" : 89,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 8
    },
    "develop/build.xml" : {
      "ObjectId" : "6a8c6e48f66f0d36c9a877f7d3ccc3415ff91e15",
      "LastModified" : "2016-05-29T23:25:05Z",
      "FileType" : "ANT",
      "CommentCount" : 0
    },
    "develop/pom.xml" : {
      "ObjectId" : "c4ad98ed5d5e69510a5cf54fc5a6fe9da4e1b203",
      "LastModified" : "2016-03-17T22:48:42Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "develop/snap-agent/pom.xml" : {
      "ObjectId" : "09c6fa719ca069b8da20b0dd998877269550abb9",
      "LastModified" : "2016-03-17T22:48:42Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "develop/snap-develop/pom.xml" : {
      "ObjectId" : "ab431376617c553de3584f6a4edfd4909dff705d",
      "LastModified" : "2016-05-29T23:25:05Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " this is used for inheritance merges ",
        "Line" : 194,
        "CharPositionInLine" : 80
      },
      "1" : {
        "Text" : " bind to the packaging phase ",
        "Line" : 195,
        "CharPositionInLine" : 72
      },
      "CommentCount" : 2
    },
    "develop/snap-graphics/pom.xml" : {
      "ObjectId" : "9003fbbe021f817bc3e31b837f428e746b7711e9",
      "LastModified" : "2016-03-17T22:48:42Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "develop/snap-service/build.xml" : {
      "ObjectId" : "db7b79a8ea57399b4efb4d8e578e873bc3bf7b13",
      "LastModified" : "2016-08-06T14:41:02Z",
      "FileType" : "ANT",
      "CommentCount" : 0
    },
    "develop/snap-service/pom.xml" : {
      "ObjectId" : "b64133c9d8ee807ed90db13beb584f49fcccaf33",
      "LastModified" : "2016-03-17T22:48:42Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " this is used for inheritance merges ",
        "Line" : 57,
        "CharPositionInLine" : 80
      },
      "1" : {
        "Text" : " bind to the packaging phase ",
        "Line" : 58,
        "CharPositionInLine" : 72
      },
      "CommentCount" : 2
    },
    "develop/snap-service/proguard.pro" : {
      "ObjectId" : "2087b3000182241e4281b696a7d5d2935c080f59",
      "LastModified" : "2016-03-17T22:48:42Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#\n\n# This ProGuard configuration file illustrates how to process a program\n\n# library, such that it remains usable as a library.\n\n# Usage:\n\n#     java -jar proguard.jar @library.pro\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Specify the input jars, output jars, and library jars.\n\n# In this case, the input jar is the program library that we want to process.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Save the obfuscation mapping to a file, so we can de-obfuscate any stack\n\n# traces later on. Keep a fixed source file attribute and all line number\n\n# tables to get line numbers in the stack traces.\n\n# You can comment this out if you're not interested in stack traces.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Preserve all annotations.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add optimizations\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Preserve all public classes, and their public and protected fields and\n\n# methods.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Preserve all .class method names.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Preserve all native method names and the names of their classes.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Preserve the special static methods that are required in all enumeration\n\n# classes.\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Explicitly preserve all serialization members. The Serializable interface\n\n# is only a marker interface, so it wouldn't save them.\n\n# You can comment this out if your library doesn't use serialization.\n\n# If your code contains serializable classes that have to be backward\n\n# compatible, please refer to the manual.\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Your library may contain more items that need to be preserved; \n\n# typically classes that are dynamically created using Class.forName:\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "develop/snap-template/pom.xml" : {
      "ObjectId" : "004dcba47c48878ad5a3c5897ba372d6c3e91923",
      "LastModified" : "2016-05-29T23:25:05Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "engine/pom.xml" : {
      "ObjectId" : "1aac5f73a436dbce76d601f138f938d0af072494",
      "LastModified" : "2016-05-29T23:25:05Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "engine/snap-engine/build.xml" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2016-05-29T23:25:05Z",
      "FileType" : "ANT",
      "CommentCount" : 0
    },
    "engine/snap-engine/pom.xml" : {
      "ObjectId" : "a6f2de1a0e32a564d81e109ab3f3f62e577f8db7",
      "LastModified" : "2016-05-29T23:25:05Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "main/pom.xml" : {
      "ObjectId" : "46026ce93a98847684d86dd57c896b5dacf2f171",
      "LastModified" : "2016-08-06T14:41:02Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "main/snap-common/pom.xml" : {
      "ObjectId" : "178a191c66b5922b0140f9923a9fddbbe013e11d",
      "LastModified" : "2016-05-29T23:25:05Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "main/snap-compile/pom.xml" : {
      "ObjectId" : "daae27f1137fae78f99e9e4610c9f79fb2130252",
      "LastModified" : "2016-08-06T14:41:02Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "main/snap-core/pom.xml" : {
      "ObjectId" : "348ed57d6b4a24fda1e0331bea485c9f5f24b765",
      "LastModified" : "2016-05-29T23:25:05Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "main/snap-parse/pom.xml" : {
      "ObjectId" : "700e3eae641dfa4004f0b78613e4cc102153d2ca",
      "LastModified" : "2016-05-29T23:25:05Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "main/snap-tree/pom.xml" : {
      "ObjectId" : "ed5cef01868e063f7fbaf04b4139bc105c9ecb9c",
      "LastModified" : "2016-08-06T14:41:02Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "site/pom.xml" : {
      "ObjectId" : "3e1c4359caacc72bc01ff18f70efe731993f043e",
      "LastModified" : "2016-08-06T14:41:02Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " this is used for inheritance merges ",
        "Line" : 113,
        "CharPositionInLine" : 80
      },
      "1" : {
        "Text" : " bind to the packaging phase ",
        "Line" : 114,
        "CharPositionInLine" : 72
      },
      "CommentCount" : 2
    },
    "test/pom.xml" : {
      "ObjectId" : "94fff34394d97f3e3587492682955046d7214bfb",
      "LastModified" : "2016-08-06T14:41:02Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "test/snap-test/build.xml" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2016-08-06T14:41:02Z",
      "FileType" : "ANT",
      "CommentCount" : 0
    },
    "test/snap-test/pom.xml" : {
      "ObjectId" : "fa7e44f78cf6db8d2a3a6176ae9228867acaab3d",
      "LastModified" : "2016-08-06T14:41:02Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "QMAKE" : 1,
    "ANT" : 5,
    "MAVEN" : 17
  },
  "ElapsedTime" : 2400
}