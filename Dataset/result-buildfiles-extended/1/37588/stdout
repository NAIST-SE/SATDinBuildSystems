{
  "Repository" : "37588",
  "Revision" : "HEAD",
  "ObjectId" : "e22b836ab6fa28f3b525d3453d3a274937f24ff3",
  "CommitTime" : "2019-04-16T10:30:24Z",
  "Files" : {
    "Applications/AppList.cmake" : {
      "ObjectId" : "96d4a8abb8b341bf2ff1cc29e72f2f7c4abc0c0e",
      "LastModified" : "2015-09-02T12:23:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is included in the top-level MITK CMakeLists.txt file to\n\n# allow early dependency checking\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This variable is fed to ctkFunctionSetupPlugins() macro in the\n\n# top-level MITK CMakeLists.txt file. This allows to automatically\n\n# enable required plug-in runtime dependencies for applications using\n\n# the CTK DGraph executable and the ctkMacroValidateBuildOptions macro.\n\n# For this to work, directories containing executables must contain\n\n# a CMakeLists.txt file containing a \"project(...)\" command and a\n\n# target_libraries.cmake file setting a list named \"target_libraries\"\n\n# with required plug-in target names.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Format is \"Directory Name^^CMake Option Name^^Executable Name (without file suffix)\"\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Applications/CMakeLists.txt" : {
      "ObjectId" : "67222278ec9d571d74af8dabb09849b2a2cad7c4",
      "LastModified" : "2019-02-25T10:39:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# extract target_dir and option_name\n",
        "Line" : 20,
        "CharPositionInLine" : 10
      },
      "1" : {
        "Text" : "# check if the application is enabled\n",
        "Line" : 25,
        "CharPositionInLine" : 10
      },
      "CommentCount" : 2
    },
    "Applications/CoreApp/CMakeLists.txt" : {
      "ObjectId" : "fee4eb37b24f359041b2ad793ff4934ee9d7f768",
      "LastModified" : "2015-09-02T12:23:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create a cache entry for the provisioning file which is used to export\n\n# the file name in the MITKConfig.cmake file. This will keep external projects\n\n# which rely on this file happy.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Plug-ins listed below will not be\n\n#  - added as a build-time dependency to the executable\n\n#  - listed in the provisioning file for the executable\n\n#  - installed if they are external plug-ins\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# subproject support\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Applications/CoreApp/target_libraries.cmake" : {
      "ObjectId" : "b959c1b3b8ead07a24c67ff0572004bdeea79c57",
      "LastModified" : "2015-09-02T12:23:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# A list of plug-in targets which should be automatically enabled\n\n# (or be available in external projects) for this application.\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Applications/Diffusion/CMakeLists.txt" : {
      "ObjectId" : "feeb9517782d92f58bef6829671d1627c5584c92",
      "LastModified" : "2019-02-25T10:39:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create a cache entry for the provisioning file which is used to export\n\n# the file name in the MITKConfig.cmake file. This will keep external projects\n\n# which rely on this file happy.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# should be identical to the list in /CMake/mitkBuildConfigurationmitkDiffusion.cmake\n\n# remember to set plugins which should be automatically toggled in target_libraries.cmake\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Plug-ins listed below will not be\n\n#  - added as a build-time dependency to the executable\n\n#  - listed in the provisioning file for the executable\n\n#  - installed if they are external plug-ins\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add meta dependencies (e.g. on auto-load modules from depending modules)\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add a build time dependency to legacy BlueBerry bundles.\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Applications/Diffusion/CPackOptions.cmake" : {
      "ObjectId" : "5c33b2ae11c3eb7d3127a3588591877d3aca90be",
      "LastModified" : "2019-02-25T10:39:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set Diffusion specific CPack options\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Major version is the year of release\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Minor version is the month of release\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Patch versioning is not intended to be done\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# this should result in names like 2011.09, 2012.06, ...\n\n# version has to be set explicitly to avoid such things as CMake creating the install directory \"MITK Diffusion 2011..\"\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#set(CPACK_PACKAGE_VERSION \"${CPACK_PACKAGE_VERSION_MAJOR}.${CPACK_PACKAGE_VERSION_MINOR}\")#.${CPACK_PACKAGE_VERSION_PATCH}\")\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "Applications/Diffusion/target_libraries.cmake" : {
      "ObjectId" : "0b880357cb2327165250032d1191b284b9a80e1f",
      "LastModified" : "2019-02-25T10:39:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# A list of plug-in targets which should be automatically enabled\n\n# (or be available in external projects) for this application\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Applications/PluginGenerator/CMakeLists.txt" : {
      "ObjectId" : "81f86676a0531c6a617a9e22855948d2ef974072",
      "LastModified" : "2019-02-25T10:39:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Prerequisites\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Executable\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# subproject support\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Win32 Convenience\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Testing\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Test the plugin generator\n",
        "Line" : 66,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Packaging support\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Applications/PluginGenerator/PluginTemplate/CMakeLists.txt" : {
      "ObjectId" : "f859fc08a57b5a9886053c7fa66f50a539ec0ef0",
      "LastModified" : "2015-09-02T12:23:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Applications/PluginGenerator/PluginTemplate/files.cmake" : {
      "ObjectId" : "c1b3369574a9cc882d738520b3e6e437307af40d",
      "LastModified" : "2015-09-02T12:23:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# list of resource files which can be used by the plug-in\n\n# system without loading the plug-ins shared library,\n\n# for example the icon used in the menu and tabs for the\n\n# plug-in views in the workbench\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# list of Qt .qrc files which contain additional resources\n\n# specific to this plugin\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Applications/PluginGenerator/PluginTemplate/manifest_headers.cmake" : {
      "ObjectId" : "cc383dba7bd6845fd9428b7904a9e9cf1e84da19",
      "LastModified" : "2011-08-06T15:21:06Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Applications/PluginGenerator/ProjectTemplate/Apps/TemplateApp/CMakeLists.txt" : {
      "ObjectId" : "fc1a393c380eddaeb8f1b7e4ae0c5a22038e4801",
      "LastModified" : "2019-02-25T10:39:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Plug-ins listed below will not be\n\n#  - added as a build-time dependency to the executable\n\n#  - listed in the provisioning file for the executable\n\n#  - installed if they are external plug-ins\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Applications/PluginGenerator/ProjectTemplate/CMake/CPackSetup.cmake" : {
      "ObjectId" : "4b180dbb6dca6f65762e3072f57dc303fdede289",
      "LastModified" : "2015-09-02T12:23:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# append revision number if available\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Applications/PluginGenerator/ProjectTemplate/CMake/MacroEmptyExternalProject.cmake" : {
      "ObjectId" : "389a055993c7cf08db30ac493986c3b4418cdbe1",
      "LastModified" : "2015-09-02T12:23:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Convenient macro allowing to define a \"empty\" project in case an external one is provided\n\n# using for example <proj>_DIR.\n\n# Doing so allows to keep the external project dependency system happy.\n\n#\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Applications/PluginGenerator/ProjectTemplate/CMakeExternals/MITK.cmake" : {
      "ObjectId" : "605fdec3d0a6f47f9656cbcee4ac9bf855d15341",
      "LastModified" : "2019-02-25T10:39:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# MITK\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Create CMake options to customize the MITK build\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Look for Qt at the superbuild level, to catch missing Qt libs early\n",
        "Line" : 63,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Configure the set of default pixel types\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Create options to inject pre-build dependencies\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 92,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Create the final variable containing superbuild boolean args\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 117,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Additional MITK CMake variables\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 126,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Configure the MITK souce code location\n",
        "Line" : 151,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# The project is provided using MITK_DIR, nevertheless since other\n\n# projects may depend on MITK, let's add an 'empty' one\n",
        "Line" : 193,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Further, do some sanity checks in the case of a pre-built MITK\n",
        "Line" : 197,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 10
    },
    "Applications/PluginGenerator/ProjectTemplate/CMakeLists.txt" : {
      "ObjectId" : "59c7326a004532c9bab7c88b130617991687728a",
      "LastModified" : "2019-02-25T10:39:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Change project and application name to your own\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Set the language standard (MITK requires C++14)\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Set a default build type if none was specified\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set the possible values of build type for cmake-gui\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Superbuild Option - Enabled by default\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# See http://cmake.org/cmake/help/cmake-2-8-docs.html#section_Policies for details\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# NEW: CMAKE_BACKWARDS_COMPATIBILITY should no longer be used.\n\n# NEW: Logical target names must be globally unique.\n\n# NEW: Libraries linked via full path no longer produce linker search paths.\n\n# NEW: Libraries linked may NOT have leading or trailing whitespace.\n\n# NEW: Preprocessor definition values are now escaped automatically.\n\n# NEW: Installing MACOSX_BUNDLE targets requires a BUNDLE DESTINATION.\n\n# NEW: List command no longer ignores empty elements.\n\n# NEW: Libraries linked by full-path must have a valid library file name.\n\n# NEW: FILE GLOB_RECURSE calls should not follow symlinks by default.\n\n# NEW: Bad variable reference syntax is an error.\n\n# NEW: Included scripts do automatic cmake_policy PUSH and POP.\n\n# NEW: if() recognizes numbers and boolean constants.\n\n# NEW: Duplicate binary directories are not allowed.\n\n# NEW: Input directories must have CMakeLists.txt\n\n# NEW: Automatically link Qt executables to qtmain target on Windows.\n\n# NEW: Double colon in target name means ALIAS or IMPORTED target.\n",
        "Line" : 47,
        "CharPositionInLine" : 10
      },
      "7" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Update CMake module path\n\n#------------------------------------------------------------------------------\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# CMake Function(s) and Macro(s)\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Output directories.\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Additional Options (also shown during superbuild)\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Superbuild script\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#*****************************************************************************\n\n#**************************** END OF SUPERBUILD ****************************\n\n#*****************************************************************************\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Prerequesites\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# CMake Function(s) and Macro(s)\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Set project specific options and variables (NOT available during superbuild)\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Ask the user if a console window should be shown with the applications\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Get project version info\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Installation preparation\n\n#\n\n# These should be set before any MITK install macros are used\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# on macOS all CTK plugins get copied into every\n\n# application bundle (.app directory) specified here\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Set symbol visibility Flags\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# The MITK module build system does not yet support default hidden visibility\n",
        "Line" : 193,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# \"-fvisibility=hidden -fvisibility-inlines-hidden\")\n",
        "Line" : 194,
        "CharPositionInLine" : 29
      },
      "23" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Set coverage Flags\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Project C/CXX Flags\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Set C/CXX Flags\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Testing\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Setup file for setting custom ctest vars\n",
        "Line" : 248,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# Configuration for the CMake-generated test driver\n",
        "Line" : 255,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# ${MY_PROJECT_NAME}_SUPERBUILD_BINARY_DIR\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 274,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# If ${MY_PROJECT_NAME}_SUPERBUILD_BINARY_DIR isn't defined, it means this project is\n\n# *NOT* build using Superbuild. In that specific case, ${MY_PROJECT_NAME}_SUPERBUILD_BINARY_DIR\n\n# should default to PROJECT_BINARY_DIR\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# MITK modules\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 285,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#add_subdirectory(Modules)\n",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# CTK plugins\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 291,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# The CMake code in this section *must* be in the top-level CMakeLists.txt file\n",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Add subdirectories\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 309,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Installation\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 315,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# set MITK cpack variables\n",
        "Line" : 319,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Customize CPack variables for this project\n",
        "Line" : 322,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# include CPack model once all variables are set\n",
        "Line" : 331,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Additional installation rules\n",
        "Line" : 334,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Last configuration steps\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 337,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 42
    },
    "Applications/PluginGenerator/ProjectTemplate/Plugins/Plugins.cmake" : {
      "ObjectId" : "b5b5fc1943746e6865abc74705ecbfcec13517cc",
      "LastModified" : "2015-09-02T12:23:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Applications/PluginGenerator/ProjectTemplate/SuperBuild.cmake" : {
      "ObjectId" : "13ce6ef7e925a4e6216717d0dce96d8b486b10b5",
      "LastModified" : "2019-02-25T10:39:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# ExternalProjects\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Look for git early on, if needed\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# External project settings\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Compute -G arg for configuring external projects with the same CMake generator:\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Use this value where semi-colons are needed in ep_add args:\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "##\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# debug flags\n",
        "Line" : 61,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# release flags\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# relwithdebinfo\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# link flags\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Include external projects\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Set superbuild boolean args\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Create the final variable containing superbuild boolean args\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Project Utilities\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Mandatory dependencies\n",
        "Line" : 120,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Optional dependencies\n",
        "Line" : 122,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Additional Project CXX/C Flags\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Project Configure\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# --------------- Build options ----------------\n",
        "Line" : 154,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# --------------- Compile options ----------------\n",
        "Line" : 162,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# debug flags\n",
        "Line" : 167,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# release flags\n",
        "Line" : 170,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# relwithdebinfo\n",
        "Line" : 173,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# link flags\n",
        "Line" : 176,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# ------------- Boolean build options --------------\n",
        "Line" : 180,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# ----------------- Miscellaneous ---------------\n",
        "Line" : 185,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Project\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# The variable SUPERBUILD_EXCLUDE_${MY_PROJECT_NAME}BUILD_TARGET should be set when submitting to a dashboard\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Custom target allowing to drive the build of the project itself\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 29
    },
    "Applications/PluginGenerator/SetupPackaging.cmake" : {
      "ObjectId" : "a5d7c42929bac2acd154ef89e8b3be3be3243e17",
      "LastModified" : "2015-09-02T12:23:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Installation\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Packaging\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# First, set the generator variable\n\n#\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# include required mfc libraries\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# tell cpack to strip all debug symbols from all files\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Applications/Solstice/CMakeLists.txt" : {
      "ObjectId" : "53779edb5f3a22827e8c3befa4bba82afbb72934",
      "LastModified" : "2019-02-25T10:39:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Plug-ins listed below will not be\n\n#  - added as a build-time dependency to the executable\n\n#  - listed in the provisioning file for the executable\n\n#  - installed if they are external plug-ins\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add meta dependencies (e.g. on auto-load modules from depending modules)\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Setting application icon for macOS systems\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Applications/Workbench/CMakeLists.txt" : {
      "ObjectId" : "c2ad329f0f15ce94ed2fe31693096715b9c5f6fd",
      "LastModified" : "2019-02-25T10:39:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create a cache entry for the provisioning file which is used to export\n\n# the file name in the MITKConfig.cmake file. This will keep external projects\n\n# which rely on this file happy.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Plug-ins listed below will not be\n\n#  - added as a build-time dependency to the executable\n\n#  - listed in the provisioning file for the executable\n\n#  - installed if they are external plug-ins\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add meta dependencies (e.g. on auto-load modules from depending modules)\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Setting application icon for macOS systems\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add a build time dependency to legacy BlueBerry bundles.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Applications/Workbench/target_libraries.cmake" : {
      "ObjectId" : "d88d280b30839cb3ba5909b8631e3fe2b95c68ce",
      "LastModified" : "2019-02-25T10:39:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# A list of plug-in targets which should be automatically enabled\n\n# (or be available in external projects) for this application.\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/BuildConfigurations/All.cmake" : {
      "ObjectId" : "6a8d90677eb2b0cea54de50ab0ab64506ec13877",
      "LastModified" : "2019-02-25T10:39:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/BuildConfigurations/Default.cmake" : {
      "ObjectId" : "ef01ad8c0566dfd71fb42d122fdbba7df203d357",
      "LastModified" : "2019-02-25T10:39:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/BuildConfigurations/DiffusionAll.cmake" : {
      "ObjectId" : "75e57fa11e5c3db4138deba385c834d2d93f78b0",
      "LastModified" : "2019-02-25T10:39:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enable non-optional external dependencies\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build neither all plugins nor examples\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Activate in-application help generation\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Disable console window\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "CMake/BuildConfigurations/DiffusionRelease.cmake" : {
      "ObjectId" : "c98f87ba1f1dfe18df1a3690fb8cb9d69d6578c6",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enable non-optional external dependencies\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Disable all apps but MITK Diffusion\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Activate Diffusion Mini Apps\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Build neither all plugins nor examples\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Activate in-application help generation\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Enable console window\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "CMake/BuildConfigurations/DiffusionRelease_NoPython.cmake" : {
      "ObjectId" : "0fb51dbc67156258f8ffe26de75659c83803124c",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enable non-optional external dependencies\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Disable all apps but MITK Diffusion\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Activate Diffusion Mini Apps\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Build neither all plugins nor examples\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Activate in-application help generation\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Enable console window\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "CMake/BuildConfigurations/MITKModelFitRelease.cmake" : {
      "ObjectId" : "0c178b801635ec44655b4df330b39a22f34c7e86",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/BuildConfigurations/WorkbenchRelease.cmake" : {
      "ObjectId" : "e4b4da592b9b698c19a79f47b1ce5b436d9bb958",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Ensure that the in-application help can be build\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/BuildConfigurations/camiPhotoacousticsSetup.cmake" : {
      "ObjectId" : "4a881e5fb6d3249a8774c546d3e692de21785b20",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enable open cv and open igt link, which is a necessary configuration\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Enable default plugins and the navigation modules\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMake/BuildConfigurations/camiPhotoacousticsWorkstation.cmake" : {
      "ObjectId" : "14a6e49fd8c30ff24ed73806a5bf47c6ba2ce5fb",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enable open cv and open igt link, which is a necessary configuration\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Enable default plugins and the navigation modules\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMake/BuildConfigurations/mitkNavigationModules.cmake" : {
      "ObjectId" : "c315c718e01b2150f88e51ca55b9e3018675afa6",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enable open cv and open igt link, which is a necessary configuration\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Enable default plugins and the navigation modules\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMake/BundleUtilities.cmake" : {
      "ObjectId" : "bcda1270fab76bb156f7749556d1cd2adf284c5a",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Special version of BundleUtilities that calls to a local GetPrerequisites which implements a caching mechanism.\n\n# Thank you to Daniel Maleike for the contribution\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#.rst:\n\n# BundleUtilities\n\n# ---------------\n\n#\n\n# Functions to help assemble a standalone bundle application.\n\n#\n\n# A collection of CMake utility functions useful for dealing with .app\n\n# bundles on the Mac and bundle-like directories on any OS.\n\n#\n\n# The following functions are provided by this module:\n\n#\n\n# ::\n\n#\n\n#    fixup_bundle\n\n#    copy_and_fixup_bundle\n\n#    verify_app\n\n#    get_bundle_main_executable\n\n#    get_dotapp_dir\n\n#    get_bundle_and_executable\n\n#    get_bundle_all_executables\n\n#    get_item_key\n\n#    get_item_rpaths\n\n#    clear_bundle_keys\n\n#    set_bundle_key_values\n\n#    get_bundle_keys\n\n#    copy_resolved_item_into_bundle\n\n#    copy_resolved_framework_into_bundle\n\n#    fixup_bundle_item\n\n#    verify_bundle_prerequisites\n\n#    verify_bundle_symlinks\n\n#\n\n# Requires CMake 2.6 or greater because it uses function, break and\n\n# PARENT_SCOPE.  Also depends on GetPrerequisites.cmake.\n\n#\n\n# ::\n\n#\n\n#   FIXUP_BUNDLE(<app> <libs> <dirs>)\n\n#\n\n# Fix up a bundle in-place and make it standalone, such that it can be\n\n# drag-n-drop copied to another machine and run on that machine as long\n\n# as all of the system libraries are compatible.\n\n#\n\n# If you pass plugins to fixup_bundle as the libs parameter, you should\n\n# install them or copy them into the bundle before calling fixup_bundle.\n\n# The \"libs\" parameter is a list of libraries that must be fixed up, but\n\n# that cannot be determined by otool output analysis.  (i.e., plugins)\n\n#\n\n# Gather all the keys for all the executables and libraries in a bundle,\n\n# and then, for each key, copy each prerequisite into the bundle.  Then\n\n# fix each one up according to its own list of prerequisites.\n\n#\n\n# Then clear all the keys and call verify_app on the final bundle to\n\n# ensure that it is truly standalone.\n\n#\n\n# As an optional parameter (IGNORE_ITEM) a list of file names can be passed,\n\n# which are then ignored (e.g. IGNORE_ITEM \"vcredist_x86.exe;vcredist_x64.exe\")\n\n#\n\n# ::\n\n#\n\n#   COPY_AND_FIXUP_BUNDLE(<src> <dst> <libs> <dirs>)\n\n#\n\n# Makes a copy of the bundle <src> at location <dst> and then fixes up\n\n# the new copied bundle in-place at <dst>...\n\n#\n\n# ::\n\n#\n\n#   VERIFY_APP(<app>)\n\n#\n\n# Verifies that an application <app> appears valid based on running\n\n# analysis tools on it.  Calls \"message(FATAL_ERROR\" if the application\n\n# is not verified.\n\n#\n\n# As an optional parameter (IGNORE_ITEM) a list of file names can be passed,\n\n# which are then ignored (e.g. IGNORE_ITEM \"vcredist_x86.exe;vcredist_x64.exe\")\n\n#\n\n# ::\n\n#\n\n#   GET_BUNDLE_MAIN_EXECUTABLE(<bundle> <result_var>)\n\n#\n\n# The result will be the full path name of the bundle's main executable\n\n# file or an \"error:\" prefixed string if it could not be determined.\n\n#\n\n# ::\n\n#\n\n#   GET_DOTAPP_DIR(<exe> <dotapp_dir_var>)\n\n#\n\n# Returns the nearest parent dir whose name ends with \".app\" given the\n\n# full path to an executable.  If there is no such parent dir, then\n\n# simply return the dir containing the executable.\n\n#\n\n# The returned directory may or may not exist.\n\n#\n\n# ::\n\n#\n\n#   GET_BUNDLE_AND_EXECUTABLE(<app> <bundle_var> <executable_var> <valid_var>)\n\n#\n\n# Takes either a \".app\" directory name or the name of an executable\n\n# nested inside a \".app\" directory and returns the path to the \".app\"\n\n# directory in <bundle_var> and the path to its main executable in\n\n# <executable_var>\n\n#\n\n# ::\n\n#\n\n#   GET_BUNDLE_ALL_EXECUTABLES(<bundle> <exes_var>)\n\n#\n\n# Scans the given bundle recursively for all executable files and\n\n# accumulates them into a variable.\n\n#\n\n# ::\n\n#\n\n#   GET_ITEM_KEY(<item> <key_var>)\n\n#\n\n# Given a file (item) name, generate a key that should be unique\n\n# considering the set of libraries that need copying or fixing up to\n\n# make a bundle standalone.  This is essentially the file name including\n\n# extension with \".\" replaced by \"_\"\n\n#\n\n# This key is used as a prefix for CMake variables so that we can\n\n# associate a set of variables with a given item based on its key.\n\n#\n\n# ::\n\n#\n\n#   CLEAR_BUNDLE_KEYS(<keys_var>)\n\n#\n\n# Loop over the list of keys, clearing all the variables associated with\n\n# each key.  After the loop, clear the list of keys itself.\n\n#\n\n# Caller of get_bundle_keys should call clear_bundle_keys when done with\n\n# list of keys.\n\n#\n\n# ::\n\n#\n\n#   SET_BUNDLE_KEY_VALUES(<keys_var> <context> <item> <exepath> <dirs>\n\n#                         <copyflag> [<rpaths>])\n\n#\n\n# Add a key to the list (if necessary) for the given item.  If added,\n\n# also set all the variables associated with that key.\n\n#\n\n# ::\n\n#\n\n#   GET_BUNDLE_KEYS(<app> <libs> <dirs> <keys_var>)\n\n#\n\n# Loop over all the executable and library files within the bundle (and\n\n# given as extra <libs>) and accumulate a list of keys representing\n\n# them.  Set values associated with each key such that we can loop over\n\n# all of them and copy prerequisite libs into the bundle and then do\n\n# appropriate install_name_tool fixups.\n\n#\n\n# As an optional parameter (IGNORE_ITEM) a list of file names can be passed,\n\n# which are then ignored (e.g. IGNORE_ITEM \"vcredist_x86.exe;vcredist_x64.exe\")\n\n#\n\n# ::\n\n#\n\n#   COPY_RESOLVED_ITEM_INTO_BUNDLE(<resolved_item> <resolved_embedded_item>)\n\n#\n\n# Copy a resolved item into the bundle if necessary.  Copy is not\n\n# necessary if the resolved_item is \"the same as\" the\n\n# resolved_embedded_item.\n\n#\n\n# ::\n\n#\n\n#   COPY_RESOLVED_FRAMEWORK_INTO_BUNDLE(<resolved_item> <resolved_embedded_item>)\n\n#\n\n# Copy a resolved framework into the bundle if necessary.  Copy is not\n\n# necessary if the resolved_item is \"the same as\" the\n\n# resolved_embedded_item.\n\n#\n\n# By default, BU_COPY_FULL_FRAMEWORK_CONTENTS is not set.  If you want\n\n# full frameworks embedded in your bundles, set\n\n# BU_COPY_FULL_FRAMEWORK_CONTENTS to ON before calling fixup_bundle.  By\n\n# default, COPY_RESOLVED_FRAMEWORK_INTO_BUNDLE copies the framework\n\n# dylib itself plus the framework Resources directory.\n\n#\n\n# ::\n\n#\n\n#   FIXUP_BUNDLE_ITEM(<resolved_embedded_item> <exepath> <dirs>)\n\n#\n\n# Get the direct/non-system prerequisites of the resolved embedded item.\n\n# For each prerequisite, change the way it is referenced to the value of\n\n# the _EMBEDDED_ITEM keyed variable for that prerequisite.  (Most likely\n\n# changing to an \"@executable_path\" style reference.)\n\n#\n\n# This function requires that the resolved_embedded_item be \"inside\" the\n\n# bundle already.  In other words, if you pass plugins to fixup_bundle\n\n# as the libs parameter, you should install them or copy them into the\n\n# bundle before calling fixup_bundle.  The \"libs\" parameter is a list of\n\n# libraries that must be fixed up, but that cannot be determined by\n\n# otool output analysis.  (i.e., plugins)\n\n#\n\n# Also, change the id of the item being fixed up to its own\n\n# _EMBEDDED_ITEM value.\n\n#\n\n# Accumulate changes in a local variable and make *one* call to\n\n# install_name_tool at the end of the function with all the changes at\n\n# once.\n\n#\n\n# If the BU_CHMOD_BUNDLE_ITEMS variable is set then bundle items will be\n\n# marked writable before install_name_tool tries to change them.\n\n#\n\n# ::\n\n#\n\n#   VERIFY_BUNDLE_PREREQUISITES(<bundle> <result_var> <info_var>)\n\n#\n\n# Verifies that the sum of all prerequisites of all files inside the\n\n# bundle are contained within the bundle or are \"system\" libraries,\n\n# presumed to exist everywhere.\n\n#\n\n# As an optional parameter (IGNORE_ITEM) a list of file names can be passed,\n\n# which are then ignored (e.g. IGNORE_ITEM \"vcredist_x86.exe;vcredist_x64.exe\")\n\n#\n\n# ::\n\n#\n\n#   VERIFY_BUNDLE_SYMLINKS(<bundle> <result_var> <info_var>)\n\n#\n\n# Verifies that any symlinks found in the bundle point to other files\n\n# that are already also in the bundle...  Anything that points to an\n\n# external file causes this function to fail the verification.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The functions defined in this file depend on the get_prerequisites function\n\n# (and possibly others) found in:\n\n#\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Read Info.plist as a list of lines:\n\n#\n",
        "Line" : 242,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Scan the lines for \"<key>CFBundleExecutable</key>\" - the line after that\n\n# is the name of the main executable.\n\n#\n",
        "Line" : 250,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Ultimate goal:\n\n# If not in \"Contents/MacOS\" then scan the bundle for matching files. If\n\n# there is only one executable file that matches, then use it, otherwise\n\n# it's an error...\n\n#\n\n#file(GLOB_RECURSE file_list \"${bundle}/${bundle_executable}\")\n",
        "Line" : 269,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# But for now, pragmatically, it's an error. Expect the main executable\n\n# for the bundle to be in Contents/MacOS, it's an error if it's not:\n\n#\n",
        "Line" : 276,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "#\n\n# More inclusive technique... (This one would work on Windows and Linux\n\n# too, if a developer followed the typical Mac bundle naming convention...)\n\n#\n\n# If there is no Info.plist file, try to find an executable with the same\n\n# base name as the .app directory:\n\n#\n",
        "Line" : 283,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# If there is a \".app\" parent directory,\n\n# ascend until we hit it:\n\n#   (typical of a Mac bundle executable)\n\n#\n",
        "Line" : 300,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Otherwise use a directory containing the exe\n\n#   (typical of a non-bundle executable on Mac, Windows or Linux)\n\n#\n",
        "Line" : 316,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Is it a directory ending in .app?\n",
        "Line" : 337,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "#message(\"info: handled .app directory case...\")\n",
        "Line" : 345,
        "CharPositionInLine" : 10
      },
      "13" : {
        "Text" : "# Is it an executable file?\n",
        "Line" : 353,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "#message(\"info: handled executable file in .app dir case...\")\n",
        "Line" : 361,
        "CharPositionInLine" : 10
      },
      "15" : {
        "Text" : "#message(\"info: handled executable file in any dir case...\")\n",
        "Line" : 367,
        "CharPositionInLine" : 10
      },
      "16" : {
        "Text" : "# find command is much quicker than checking every file one by one on Unix\n\n# which can take long time for large bundles, and since anyway we expect\n\n# executable to have execute flag set we can narrow the list much quicker.\n",
        "Line" : 394,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Substitute $ORIGIN with the exepath and add to the found rpaths\n",
        "Line" : 444,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "# For frameworks, construct the name under the embedded path from the\n\n# opening \"${item_name}.framework/\" to the closing \"/${item_name}\":\n\n#\n",
        "Line" : 500,
        "CharPositionInLine" : 6
      },
      "19" : {
        "Text" : "# For other items, just use the same name as the original, but in the\n\n# embedded path:\n\n#\n",
        "Line" : 505,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "# Replace @executable_path and resolve \"..\" references:\n\n#\n",
        "Line" : 511,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# *But* -- if we are not copying, then force resolved_embedded_item to be\n\n# the same as resolved_item. In the case of multiple executables in the\n\n# original bundle, using the default_embedded_path results in looking for\n\n# the resolved executable next to the main bundle executable. This is here\n\n# so that exes in the other sibling directories (like \"bin\") get fixed up\n\n# properly...\n\n#\n",
        "Line" : 516,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "#message(\"warning: item key '${key}' already in the list, subsequent references assumed identical to first\")\n",
        "Line" : 537,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# Always use the exepath of the main bundle executable for @executable_path\n\n# replacements:\n\n#\n",
        "Line" : 551,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# But do fixups on all executables in the bundle:\n\n#\n",
        "Line" : 556,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# Set keys for main executable first:\n\n#\n",
        "Line" : 560,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# Get rpaths specified by main executable:\n\n#\n",
        "Line" : 564,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# For each extra lib, accumulate a key as well and then also accumulate\n\n# any of its prerequisites. (Extra libs are typically dynamically loaded\n\n# plugins: libraries that are prerequisites for full runtime functionality\n\n# but that do not show up in otool -L output...)\n\n#\n",
        "Line" : 569,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# For each executable found in the bundle, accumulate keys as we go.\n\n# The list of keys should be complete when all prerequisites of all\n\n# binaries in the bundle have been analyzed.\n\n#\n",
        "Line" : 598,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# Main executable is scanned first above:\n\n#\n",
        "Line" : 603,
        "CharPositionInLine" : 6
      },
      "30" : {
        "Text" : "# Add the exe itself to the keys:\n\n#\n",
        "Line" : 606,
        "CharPositionInLine" : 8
      },
      "31" : {
        "Text" : "# Get rpaths specified by executable:\n\n#\n",
        "Line" : 610,
        "CharPositionInLine" : 8
      },
      "32" : {
        "Text" : "# Add each prerequisite to the keys:\n\n#\n",
        "Line" : 618,
        "CharPositionInLine" : 6
      },
      "33" : {
        "Text" : "# preserve library symlink structure\n",
        "Line" : 641,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# ignore case on Windows\n",
        "Line" : 650,
        "CharPositionInLine" : 12
      },
      "35" : {
        "Text" : "# Propagate values to caller's scope:\n\n#\n",
        "Line" : 668,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# ignore case on Windows\n",
        "Line" : 686,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "# ignore case on Windows\n",
        "Line" : 705,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "#message(\"copying COMMAND ${CMAKE_COMMAND} -E copy ${resolved_item} ${resolved_embedded_item}\")\n",
        "Line" : 716,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "# ignore case on Windows\n",
        "Line" : 728,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "# Full Framework (everything):\n",
        "Line" : 740,
        "CharPositionInLine" : 6
      },
      "41" : {
        "Text" : "#message(\"copying COMMAND ${CMAKE_COMMAND} -E copy_directory '${resolved_dir}' '${resolved_embedded_dir}'\")\n",
        "Line" : 745,
        "CharPositionInLine" : 6
      },
      "42" : {
        "Text" : "# Framework lib itself:\n\n#message(\"copying COMMAND ${CMAKE_COMMAND} -E copy ${resolved_item} ${resolved_embedded_item}\")\n",
        "Line" : 748,
        "CharPositionInLine" : 6
      },
      "43" : {
        "Text" : "# Plus Resources, if they exist:\n",
        "Line" : 752,
        "CharPositionInLine" : 6
      },
      "44" : {
        "Text" : "#message(\"copying COMMAND ${CMAKE_COMMAND} -E copy_directory '${resolved_resources}' '${resolved_embedded_resources}'\")\n",
        "Line" : 756,
        "CharPositionInLine" : 8
      },
      "45" : {
        "Text" : "# Some frameworks e.g. Qt put Info.plist in wrong place, so when it is\n\n# missing in resources, copy it from other well known incorrect locations:\n",
        "Line" : 760,
        "CharPositionInLine" : 6
      },
      "46" : {
        "Text" : "# Check for Contents/Info.plist in framework root (older Qt SDK):\n",
        "Line" : 763,
        "CharPositionInLine" : 8
      },
      "47" : {
        "Text" : "#message(\"copying COMMAND ${CMAKE_COMMAND} -E copy_directory '${resolved_info_plist}' '${resolved_embedded_info_plist}'\")\n",
        "Line" : 767,
        "CharPositionInLine" : 10
      },
      "48" : {
        "Text" : "# Check if framework is versioned and fix it layout\n",
        "Line" : 772,
        "CharPositionInLine" : 6
      },
      "49" : {
        "Text" : "# Ensure Current symlink points to the framework version\n",
        "Line" : 777,
        "CharPositionInLine" : 8
      },
      "50" : {
        "Text" : "# Restore symlinks in framework root pointing to current framework\n\n# binary and resources:\n",
        "Line" : 781,
        "CharPositionInLine" : 8
      },
      "51" : {
        "Text" : "# This item's key is \"ikey\":\n\n#\n",
        "Line" : 802,
        "CharPositionInLine" : 2
      },
      "52" : {
        "Text" : "# Ensure the item is \"inside the .app bundle\" -- it should not be fixed up if\n\n# it is not in the .app bundle... Otherwise, we'll modify files in the build\n\n# tree, or in other varied locations around the file system, with our call to\n\n# install_name_tool. Make sure that doesn't happen here:\n\n#\n",
        "Line" : 806,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "# Each referenced item's key is \"rkey\" in the loop:\n\n#\n",
        "Line" : 844,
        "CharPositionInLine" : 4
      },
      "54" : {
        "Text" : "# Only if install_name_tool supports -delete_rpath:\n\n#\n",
        "Line" : 859,
        "CharPositionInLine" : 2
      },
      "55" : {
        "Text" : "# Change this item's id and all of its references in one call\n\n# to install_name_tool:\n\n#\n",
        "Line" : 875,
        "CharPositionInLine" : 2
      },
      "56" : {
        "Text" : "#get_prerequisites_clear_cache()\n",
        "Line" : 891,
        "CharPositionInLine" : 2
      },
      "57" : {
        "Text" : "#get_property(current_cache GLOBAL PROPERTY prerequisites_cachevariables)\n\n#message(\"  current cache='${current_cache}'\")\n",
        "Line" : 897,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# On the Mac,\n\n# \"embedded\" and \"system\" prerequisites are fine... anything else means\n\n# the bundle's prerequisites are not verified (i.e., the bundle is not\n\n# really \"standalone\")\n\n#\n\n# On Windows (and others? Linux/Unix/...?)\n\n# \"local\" and \"system\" prereqs are fine...\n\n#\n",
        "Line" : 1023,
        "CharPositionInLine" : 8
      },
      "59" : {
        "Text" : "# Found non-system/somehow-unacceptable prerequisites:\n",
        "Line" : 1050,
        "CharPositionInLine" : 10
      },
      "60" : {
        "Text" : "# TODO: implement this function for real...\n\n# Right now, it is just a stub that verifies unconditionally...\n",
        "Line" : 1073,
        "CharPositionInLine" : 2
      },
      "61" : {
        "Text" : "# Verify that the bundle does not have any \"external\" prerequisites:\n\n#\n",
        "Line" : 1098,
        "CharPositionInLine" : 2
      },
      "62" : {
        "Text" : "# Verify that the bundle does not have any symlinks to external files:\n\n#\n",
        "Line" : 1106,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 63
    },
    "CMake/FindAnt.cmake" : {
      "ObjectId" : "b96ef5e74e98daca606ddbfb0c447f28359f4d58",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find Ant (a java build tool)\n\n# This module defines\n\n# ANT_VERSION version string of ant if found\n\n# ANT_FOUND, If false, do not try to use ant\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/FindBetData.cmake" : {
      "ObjectId" : "f15a41f9f27d30a3d87b230973a9df9a2ce5d29f",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/FindDCMQI.cmake" : {
      "ObjectId" : "effc1e727aca0defff55d938f802899e693f2ee1",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find all libraries, store debug and release separately\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find Release libraries\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Find Debug libraries\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Add libraries to variable according to build type\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "CMake/FindDCMTK.cmake" : {
      "ObjectId" : "aec7baacfef00030aaf4794aaefa9930f6e3336e",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\r\n\n# FindDCMTK\r\n\n# ---------\r\n\n#\r\n\n# Find DCMTK libraries and applications\r\n\n#\r\n\n# The module defines the following variables::\r\n\n#\r\n\n#  DCMTK_INCLUDE_DIRS  - Directories to include to use DCMTK\r\n\n#  DCMTK_LIBRARIES     - Files to link against to use DCMTK\r\n\n#  DCMTK_FOUND         - If false, don't try to use DCMTK\r\n\n#  DCMTK_DIR           - (optional) Source directory for DCMTK\r\n\n#\r\n\n# Compatibility\r\n\n# ^^^^^^^^^^^^^\r\n\n#\r\n\n# This module is able to find a version of DCMTK that does or does not export\r\n\n# a *DCMTKConfig.cmake* file. It applies a two step process:\r\n\n#\r\n\n# * Step 1:  Attempt to find DCMTK version providing a *DCMTKConfig.cmake* file.\r\n\n# * Step 2:  If step 1 failed, rely on *FindDCMTK.cmake* to set `DCMTK_*` variables details below.\r\n\n#\r\n\n#\r\n\n# `Recent DCMTK\r\n\n# <http://git.dcmtk.org/web?p=dcmtk.git;a=commit;h=662ae187c493c6b9a73dd5e3875372cebd0c11fe>`_\r\n\n# provides a *DCMTKConfig.cmake* :manual:`package configuration file\r\n\n# <cmake-packages(7)>`. To exclusively use the package configuration file\r\n\n# (recommended when possible), pass the `NO_MODULE` option to\r\n\n# :command:`find_package`. For example, `find_package(DCMTK NO_MODULE)`.\r\n\n# This requires official DCMTK snapshot *3.6.1_20140617* or newer.\r\n\n#\r\n\n#\r\n\n# Until all clients update to the more recent DCMTK, build systems will need\r\n\n# to support different versions of DCMTK.\r\n\n#\r\n\n# On any given system, the following combinations of DCMTK versions could be\r\n\n# considered:\r\n\n#\r\n\n# +--------+---------------------+-----------------------+-------------------+\r\n\n# |        |   SYSTEM DCMTK      |      LOCAL DCMTK      |     Supported ?   |\r\n\n# +--------+---------------------+-----------------------+-------------------+\r\n\n# | Case A |   NA                |      [ ] DCMTKConfig  |         YES       |\r\n\n# +--------+---------------------+-----------------------+-------------------+\r\n\n# | Case B |   NA                |      [X] DCMTKConfig  |         YES       |\r\n\n# +--------+---------------------+-----------------------+-------------------+\r\n\n# | Case C |   [ ] DCMTKConfig   |      NA               |         YES       |\r\n\n# +--------+---------------------+-----------------------+-------------------+\r\n\n# | Case D |   [X] DCMTKConfig   |      NA               |         YES       |\r\n\n# +--------+---------------------+-----------------------+-------------------+\r\n\n# | Case E |   [ ] DCMTKConfig   |      [ ] DCMTKConfig  |         YES (*)   |\r\n\n# +--------+---------------------+-----------------------+-------------------+\r\n\n# | Case F |   [X] DCMTKConfig   |      [ ] DCMTKConfig  |         NO        |\r\n\n# +--------+---------------------+-----------------------+-------------------+\r\n\n# | Case G |   [ ] DCMTKConfig   |      [X] DCMTKConfig  |         YES       |\r\n\n# +--------+---------------------+-----------------------+-------------------+\r\n\n# | Case H |   [X] DCMTKConfig   |      [X] DCMTKConfig  |         YES       |\r\n\n# +--------+---------------------+-----------------------+-------------------+\r\n\n#\r\n\n#  (*) See Troubleshooting section.\r\n\n#\r\n\n# Legend:\r\n\n#\r\n\n#   NA ...............: Means that no System or Local DCMTK is available\r\n\n#\r\n\n#   [ ] DCMTKConfig ..: Means that the version of DCMTK does NOT export a DCMTKConfig.cmake file.\r\n\n#\r\n\n#   [X] DCMTKConfig ..: Means that the version of DCMTK exports a DCMTKConfig.cmake file.\r\n\n#\r\n\n#\r\n\n# Troubleshooting\r\n\n# ^^^^^^^^^^^^^^^\r\n\n#\r\n\n# What to do if my project finds a different version of DCMTK?\r\n\n#\r\n\n# Remove DCMTK entry from the CMake cache per :command:`find_package`\r\n\n# documentation.\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\r\n\n# Copyright 2004-2009 Kitware, Inc.\r\n\n# Copyright 2009-2010 Mathieu Malaterre <mathieu.malaterre@gmail.com>\r\n\n# Copyright 2010 Thomas Sondergaard <ts@medical-insight.com>\r\n\n#\r\n\n# Distributed under the OSI-approved BSD License (the \"License\");\r\n\n# see accompanying file Copyright.txt for details.\r\n\n#\r\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\r\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n\n# See the License for more information.\r\n\n#=============================================================================\r\n\n# (To distribute this file outside of CMake, substitute the full\r\n\n#  License text for the above reference.)\r\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\r\n\n# Written for VXL by Amitha Perera.\r\n\n# Upgraded for GDCM by Mathieu Malaterre.\r\n\n# Modified for EasyViz by Thomas Sondergaard.\r\n\n#\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Ensure that DCMTK_DIR is set to a reasonable default value\r\n\n# so that DCMTK libraries can be found on a standard Unix distribution.\r\n\n# It also overwrite the value of DCMTK_DIR after this one has been\r\n\n# set by a successful discovery of DCMTK by the unpatched FindDCMTK.cmake module\r\n\n# distributed with CMake (as of 0167cea)\r\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\r\n\n# Step1: Attempt to find a version of DCMTK providing a DCMTKConfig.cmake file.\r\n\n#\r\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Restore the value reset by the previous call to 'find_package(DCMTK QUIET NO_MODULE)'\r\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\r\n\n# Step2: Attempt to find a version of DCMTK that does NOT provide a DCMTKConfig.cmake file.\r\n\n#\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# prefer DCMTK_DIR over default system paths like /usr/lib\r\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# this is given to FIND_LIBRARY or FIND_PATH\r\n",
        "Line" : 147,
        "CharPositionInLine" : 63
      },
      "9" : {
        "Text" : "# Find all libraries, store debug and release separately\r\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Find Release libraries\r\n",
        "Line" : 170,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Find Debug libraries\r\n",
        "Line" : 183,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Add libraries to variable according to build type\r\n",
        "Line" : 199,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Hack - Not having a DCMTKConfig.cmake file to read the settings from, we will attempt to\r\n\n# find the library in all cases.\r\n\n# Ideally, pthread library should be discovered only if DCMTK_WITH_THREADS is enabled.\r\n",
        "Line" : 212,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "#\r\n\n# SPECIFIC CASE FOR DCMTK BUILD DIR as DCMTK_DIR\r\n\n# (as opposed to a DCMTK install dir)\r\n\n# Have to find the source directory.\r\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# add the 'include' path so eg\r\n\n#include \"dcmtk/dcmimgle/dcmimage.h\"\r\n\n# works\r\n",
        "Line" : 288,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Compatibility: This variable is deprecated\r\n",
        "Line" : 315,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Workaround bug in packaging of DCMTK 3.6.0 on Debian.\r\n\n# See http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=637687\r\n",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "CMake/FindEclipse.cmake" : {
      "ObjectId" : "4ffae2f828233543090644d0a4519550bacc84fc",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find Eclipse\n\n# The following variables are set if Eclipse is found.\n\n#\n\n#  Eclipse_DIR      - the path to the Eclipse base directory.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Look for an installation.\n\n#\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look in other places.\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Help the user find it if we cannot.\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "CMake/FindEigen.cmake" : {
      "ObjectId" : "2ec430484c2fb776629249959b6580469f1945a7",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/FindGit.cmake" : {
      "ObjectId" : "5bc9acf22803c05b57ddbae236e8d0200e5e6d11",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# FindGit\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We don't append git.cmd, since it does not correctly return\n\n# exit codes, see http://code.google.com/p/msysgit/issues/detail?id=428\n",
        "Line" : 10,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# check if ${dir} is a proper Git repository\n",
        "Line" : 26,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# In case, git-svn is used, attempt to extract svn info\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "CMake/FindNumpy.cmake" : {
      "ObjectId" : "1c8cb85820a27f545caf3c97cc7ca2b6c4e21edf",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  Variables set by this script\n\n#  NUMPY_FOUND\n\n#  NUMPY_INCLUDE_DIR\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/FindOpenCL.cmake" : {
      "ObjectId" : "551d768b13dfbdaed3e7b2704b882bb9f0e16e9c",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find OpenCL\n\n# This module tries to find an OpenCL implementation on your system. It supports\n\n# AMD / ATI, Apple and NVIDIA implementations, but should work, too.\n\n#\n\n# To set manually the paths, define these environment variables:\n\n# OpenCL_INCPATH    - Include path (e.g. OpenCL_INCPATH=/opt/cuda/4.0/cuda/include)\n\n# OpenCL_LIBPATH    - Library path (e.h. OpenCL_LIBPATH=/usr/lib64/nvidia)\n\n#\n\n# Once done this will define\n\n#  OPENCL_FOUND        - system has OpenCL\n\n#  OPENCL_INCLUDE_DIRS  - the OpenCL include directory\n\n#  OPENCL_LIBRARIES    - link these to use OpenCL\n\n#\n\n# WIN32 should work, but is untested\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# need to convert path in the cmake style ?\n",
        "Line" : 42,
        "CharPositionInLine" : 52
      },
      "2" : {
        "Text" : "# On Win32 search relative to the library\n",
        "Line" : 53,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Unix style platforms\n",
        "Line" : 59,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# The AMD SDK currently does not place its headers\n\n# in /usr/include, therefore also search relative\n\n# to the library\n",
        "Line" : 66,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# This is often the same, so clean up\n",
        "Line" : 81,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "CMake/FixMacOSInstaller.cmake" : {
      "ObjectId" : "bc3ebc5f695f918d6ebca6d4f31779fcb2719d08",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#############################\n\n# (1) Fix Qt-related issues #\n\n#############################\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compile list of Qt frameworks in bundle\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For each Qt framework, change the style of dependencies to other\n\n# Qt frameworks from @executable_path to @rpath. The install name tool\n\n# only changes existing dependencies.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Do the same for QtWebEngineProcess\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add corresponding rpath entries to the actual application and QtWebEngineProcess.\n\n# The install name tool returns an error if an entry is already present.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "##################################################\n\n# (2) Fix hard dependencies to auto-load modules #\n\n##################################################\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Create symlinks to auto-load modules in MitkCore directory\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "CMake/GetPrerequisites.cmake" : {
      "ObjectId" : "be5e8548cb85fd2e75d0e9d963854ff0f4e9f63e",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Special version of GetPrerequisites that implements a caching mechanism.\n\n# Thank you to Daniel Maleike for the contribution\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#.rst:\n\n# GetPrerequisites\n\n# ----------------\n\n#\n\n# Functions to analyze and list executable file prerequisites.\n\n#\n\n# This module provides functions to list the .dll, .dylib or .so files\n\n# that an executable or shared library file depends on.  (Its\n\n# prerequisites.)\n\n#\n\n# It uses various tools to obtain the list of required shared library\n\n# files:\n\n#\n\n# ::\n\n#\n\n#    dumpbin (Windows)\n\n#    ldd (Linux/Unix)\n\n#    otool (macOS)\n\n#\n\n# The following functions are provided by this module:\n\n#\n\n# ::\n\n#\n\n#    get_prerequisites\n\n#    list_prerequisites\n\n#    list_prerequisites_by_glob\n\n#    gp_append_unique\n\n#    is_file_executable\n\n#    gp_item_default_embedded_path\n\n#      (projects can override with gp_item_default_embedded_path_override)\n\n#    gp_resolve_item\n\n#      (projects can override with gp_resolve_item_override)\n\n#    gp_resolved_file_type\n\n#      (projects can override with gp_resolved_file_type_override)\n\n#    gp_file_type\n\n#\n\n# Requires CMake 2.6 or greater because it uses function, break, return\n\n# and PARENT_SCOPE.\n\n#\n\n# ::\n\n#\n\n#   GET_PREREQUISITES(<target> <prerequisites_var> <exclude_system> <recurse>\n\n#                     <exepath> <dirs> [<rpaths>])\n\n#\n\n# Get the list of shared library files required by <target>.  The list\n\n# in the variable named <prerequisites_var> should be empty on first\n\n# entry to this function.  On exit, <prerequisites_var> will contain the\n\n# list of required shared library files.\n\n#\n\n# <target> is the full path to an executable file.  <prerequisites_var>\n\n# is the name of a CMake variable to contain the results.\n\n# <exclude_system> must be 0 or 1 indicating whether to include or\n\n# exclude \"system\" prerequisites.  If <recurse> is set to 1 all\n\n# prerequisites will be found recursively, if set to 0 only direct\n\n# prerequisites are listed.  <exepath> is the path to the top level\n\n# executable used for @executable_path replacment on the Mac.  <dirs> is\n\n# a list of paths where libraries might be found: these paths are\n\n# searched first when a target without any path info is given.  Then\n\n# standard system locations are also searched: PATH, Framework\n\n# locations, /usr/lib...\n\n#\n\n# ::\n\n#\n\n#   LIST_PREREQUISITES(<target> [<recurse> [<exclude_system> [<verbose>]]])\n\n#\n\n# Print a message listing the prerequisites of <target>.\n\n#\n\n# <target> is the name of a shared library or executable target or the\n\n# full path to a shared library or executable file.  If <recurse> is set\n\n# to 1 all prerequisites will be found recursively, if set to 0 only\n\n# direct prerequisites are listed.  <exclude_system> must be 0 or 1\n\n# indicating whether to include or exclude \"system\" prerequisites.  With\n\n# <verbose> set to 0 only the full path names of the prerequisites are\n\n# printed, set to 1 extra informatin will be displayed.\n\n#\n\n# ::\n\n#\n\n#   LIST_PREREQUISITES_BY_GLOB(<glob_arg> <glob_exp>)\n\n#\n\n# Print the prerequisites of shared library and executable files\n\n# matching a globbing pattern.  <glob_arg> is GLOB or GLOB_RECURSE and\n\n# <glob_exp> is a globbing expression used with \"file(GLOB\" or\n\n# \"file(GLOB_RECURSE\" to retrieve a list of matching files.  If a\n\n# matching file is executable, its prerequisites are listed.\n\n#\n\n# Any additional (optional) arguments provided are passed along as the\n\n# optional arguments to the list_prerequisites calls.\n\n#\n\n# ::\n\n#\n\n#   GP_APPEND_UNIQUE(<list_var> <value>)\n\n#\n\n# Append <value> to the list variable <list_var> only if the value is\n\n# not already in the list.\n\n#\n\n# ::\n\n#\n\n#   IS_FILE_EXECUTABLE(<file> <result_var>)\n\n#\n\n# Return 1 in <result_var> if <file> is a binary executable, 0\n\n# otherwise.\n\n#\n\n# ::\n\n#\n\n#   GP_ITEM_DEFAULT_EMBEDDED_PATH(<item> <default_embedded_path_var>)\n\n#\n\n# Return the path that others should refer to the item by when the item\n\n# is embedded inside a bundle.\n\n#\n\n# Override on a per-project basis by providing a project-specific\n\n# gp_item_default_embedded_path_override function.\n\n#\n\n# ::\n\n#\n\n#   GP_RESOLVE_ITEM(<context> <item> <exepath> <dirs> <resolved_item_var>\n\n#                   [<rpaths>])\n\n#\n\n# Resolve an item into an existing full path file.\n\n#\n\n# Override on a per-project basis by providing a project-specific\n\n# gp_resolve_item_override function.\n\n#\n\n# ::\n\n#\n\n#   GP_RESOLVED_FILE_TYPE(<original_file> <file> <exepath> <dirs> <type_var>\n\n#                         [<rpaths>])\n\n#\n\n# Return the type of <file> with respect to <original_file>.  String\n\n# describing type of prerequisite is returned in variable named\n\n# <type_var>.\n\n#\n\n# Use <exepath> and <dirs> if necessary to resolve non-absolute <file>\n\n# values -- but only for non-embedded items.\n\n#\n\n# Possible types are:\n\n#\n\n# ::\n\n#\n\n#    system\n\n#    local\n\n#    embedded\n\n#    other\n\n#\n\n# Override on a per-project basis by providing a project-specific\n\n# gp_resolved_file_type_override function.\n\n#\n\n# ::\n\n#\n\n#   GP_FILE_TYPE(<original_file> <file> <type_var>)\n\n#\n\n# Return the type of <file> with respect to <original_file>.  String\n\n# describing type of prerequisite is returned in variable named\n\n# <type_var>.\n\n#\n\n# Possible types are:\n\n#\n\n# ::\n\n#\n\n#    system\n\n#    local\n\n#    embedded\n\n#    other\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# A file is not executable until proven otherwise:\n\n#\n",
        "Line" : 190,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# If file name ends in .exe on Windows, *assume* executable:\n\n#\n",
        "Line" : 198,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# A clause could be added here that uses output or return value of dumpbin\n\n# to determine ${result_var}. In 99%+? practical cases, the exe name\n\n# match will be sufficient...\n\n#\n",
        "Line" : 206,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Use the information returned from the Unix shell command \"file\" to\n\n# determine if ${file_full} should be considered an executable file...\n\n#\n\n# If the file command's output contains \"executable\" and does *not* contain\n\n# \"text\" then it is likely an executable suitable for prerequisite analysis\n\n# via the get_prerequisites macro.\n\n#\n",
        "Line" : 212,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Replace the name of the file in the output with a placeholder token\n\n# (the string \" _file_full_ \") so that just in case the path name of\n\n# the file contains the word \"text\" or \"executable\" we are not fooled\n\n# into thinking \"the wrong thing\" because the file name matches the\n\n# other 'file' command output we are looking for...\n\n#\n",
        "Line" : 236,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "#message(STATUS \"file_ov='${file_ov}'\")\n",
        "Line" : 245,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "#message(STATUS \"executable!\")\n",
        "Line" : 247,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "#message(STATUS \"but text, so *not* a binary executable!\")\n",
        "Line" : 249,
        "CharPositionInLine" : 10
      },
      "11" : {
        "Text" : "# Also detect position independent executables on Linux,\n\n# where \"file\" gives \"shared object ... (uses shared libraries)\"\n",
        "Line" : 256,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# \"file\" version 5.22 does not print \"(used shared libraries)\"\n\n# but uses \"interpreter\"\n",
        "Line" : 263,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# On Windows and Linux, \"embed\" prerequisites in the same directory\n\n# as the executable by default:\n\n#\n",
        "Line" : 279,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# On the Mac, relative to the executable depending on the type\n\n# of the thing we are embedding:\n\n#\n",
        "Line" : 285,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "#\n\n# The assumption here is that all executables in the bundle will be\n\n# in same-level-directories inside the bundle. The parent directory\n\n# of an executable inside the bundle should be MacOS or a sibling of\n\n# MacOS and all embedded paths returned from here will begin with\n\n# \"@executable_path/../\" and will work from all executables in all\n\n# such same-level-directories inside the bundle.\n\n#\n",
        "Line" : 289,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# By default, embed things right next to the main bundle executable:\n\n#\n",
        "Line" : 298,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Embed .dylibs right next to the main bundle executable:\n\n#\n",
        "Line" : 302,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Embed frameworks in the embedded \"Frameworks\" directory (sibling of MacOS):\n\n#\n",
        "Line" : 309,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Provide a hook so that projects can override the default embedded location\n\n# of any given library by whatever logic they choose:\n\n#\n",
        "Line" : 319,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Is it already resolved?\n\n#\n",
        "Line" : 339,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "#\n\n# @executable_path references are assumed relative to exepath\n\n#\n",
        "Line" : 347,
        "CharPositionInLine" : 6
      },
      "22" : {
        "Text" : "#message(STATUS \"info: embedded item exists (${ri})\")\n",
        "Line" : 354,
        "CharPositionInLine" : 8
      },
      "23" : {
        "Text" : "#\n\n# @loader_path references are assumed relative to the\n\n# PATH of the given \"context\" (presumably another library)\n\n#\n",
        "Line" : 365,
        "CharPositionInLine" : 6
      },
      "24" : {
        "Text" : "#message(STATUS \"info: embedded item exists (${ri})\")\n",
        "Line" : 374,
        "CharPositionInLine" : 8
      },
      "25" : {
        "Text" : "#\n\n# @rpath references are relative to the paths built into the binaries with -rpath\n\n# We handle this case like we do for other Unixes\n\n#\n",
        "Line" : 385,
        "CharPositionInLine" : 6
      },
      "26" : {
        "Text" : "#message(STATUS \"info: 'find_file' in exepath/dirs/rpaths (${ri})\")\n",
        "Line" : 394,
        "CharPositionInLine" : 8
      },
      "27" : {
        "Text" : "#message(STATUS \"info: 'find_file' in exepath/dirs (${ri})\")\n",
        "Line" : 413,
        "CharPositionInLine" : 6
      },
      "28" : {
        "Text" : "#message(STATUS \"info: 'find_file' found framework (${fw})\")\n",
        "Line" : 429,
        "CharPositionInLine" : 8
      },
      "29" : {
        "Text" : "# Using find_program on Windows will find dll files that are in the PATH.\n\n# (Converting simple file names into full path names if found.)\n\n#\n",
        "Line" : 437,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "#message(STATUS \"info: 'find_program' in exepath/dirs (${ri})\")\n",
        "Line" : 446,
        "CharPositionInLine" : 6
      },
      "31" : {
        "Text" : "# Provide a hook so that projects can override item resolution\n\n# by whatever logic they choose:\n\n#\n",
        "Line" : 454,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "#    message(STATUS \"\n\n#******************************************************************************\n\n#warning: cannot resolve item '${item}'\n\n#\n\n#  possible problems:\n\n#    need more directories?\n\n#    need to use InstallRequiredSystemLibraries?\n\n#    run in install tree instead of build tree?\n\n#\n\n#    context='${context}'\n\n#    item='${item}'\n\n#    exepath='${exepath}'\n\n#    dirs='${dirs}'\n\n#    resolved_item_var='${resolved_item_var}'\n\n#******************************************************************************\n\n#\")\n",
        "Line" : 470,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#message(STATUS \"**\")\n",
        "Line" : 498,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# canonicalize path\n",
        "Line" : 504,
        "CharPositionInLine" : 70
      },
      "35" : {
        "Text" : "# canonicalize path\n",
        "Line" : 522,
        "CharPositionInLine" : 72
      },
      "36" : {
        "Text" : "# if cygwin, we can get the properly formed windows paths from cygpath\n",
        "Line" : 552,
        "CharPositionInLine" : 8
      },
      "37" : {
        "Text" : "# Return type string based on computed booleans:\n\n#\n",
        "Line" : 600,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "#message(STATUS \"gp_resolved_file_type: '${file}' '${resolved_file}'\")\n\n#message(STATUS \"                type: '${type}'\")\n",
        "Line" : 612,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "# Provide a hook so that projects can override the decision on whether a\n\n# library belongs to the system or not by whatever logic they choose:\n\n#\n",
        "Line" : 625,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "#message(STATUS \"**\")\n",
        "Line" : 634,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# See if we know the answer from our cache. If so, we are done early\n",
        "Line" : 657,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "# incorporate all parameters into cache key\n",
        "Line" : 659,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "# if defined, then get value\n",
        "Line" : 666,
        "CharPositionInLine" : 78
      },
      "44" : {
        "Text" : "# already something non-empty -> append\n",
        "Line" : 667,
        "CharPositionInLine" : 21
      },
      "45" : {
        "Text" : "# <setup-gp_tool-vars>\n\n#\n\n# Try to choose the right tool by default. Caller can set gp_tool prior to\n\n# calling this function to force using a different tool.\n\n#\n",
        "Line" : 720,
        "CharPositionInLine" : 2
      },
      "46" : {
        "Text" : "# This is how to check for cygwin, har!\n",
        "Line" : 732,
        "CharPositionInLine" : 27
      },
      "47" : {
        "Text" : "# Try harder.\n",
        "Line" : 736,
        "CharPositionInLine" : 13
      },
      "48" : {
        "Text" : "# optional command to pre-filter gp_tool results\n",
        "Line" : 749,
        "CharPositionInLine" : 32
      },
      "49" : {
        "Text" : "# objdump generates copious output so we create a grep filter to pre-filter results\n",
        "Line" : 775,
        "CharPositionInLine" : 4
      },
      "50" : {
        "Text" : "# When running dumpbin, it also needs the \"Common7/IDE\" directory in the\n\n# PATH. It will already be in the PATH if being run from a Visual Studio\n\n# command prompt. Add it to the PATH here in case we are running from a\n\n# different command prompt.\n\n#\n",
        "Line" : 793,
        "CharPositionInLine" : 4
      },
      "51" : {
        "Text" : "# Use cmake paths as a user may have a PATH element ending with a backslash.\n\n# This will escape the list delimiter and create havoc!\n",
        "Line" : 800,
        "CharPositionInLine" : 4
      },
      "52" : {
        "Text" : "# only add to the path if it is not already in the path\n",
        "Line" : 803,
        "CharPositionInLine" : 6
      },
      "53" : {
        "Text" : "#\n\n# </setup-gp_tool-vars>\n",
        "Line" : 818,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "# Track new prerequisites at each new level of recursion. Start with an\n\n# empty list at each level:\n\n#\n",
        "Line" : 831,
        "CharPositionInLine" : 2
      },
      "55" : {
        "Text" : "# Run gp_cmd on the target:\n\n#\n",
        "Line" : 836,
        "CharPositionInLine" : 2
      },
      "56" : {
        "Text" : "# Exclude delay load dependencies under windows (they are listed in dumpbin output after the message below)\n",
        "Line" : 847,
        "CharPositionInLine" : 4
      },
      "57" : {
        "Text" : "# dumpbin error messages seem to go to stdout\n",
        "Line" : 861,
        "CharPositionInLine" : 6
      },
      "58" : {
        "Text" : "# Convert to a list of lines:\n\n#\n",
        "Line" : 880,
        "CharPositionInLine" : 2
      },
      "59" : {
        "Text" : "# check for install id and remove it from list, since otool -L can include a\n\n# reference to itself\n",
        "Line" : 885,
        "CharPositionInLine" : 2
      },
      "60" : {
        "Text" : "# second line is install name\n",
        "Line" : 898,
        "CharPositionInLine" : 4
      },
      "61" : {
        "Text" : "# trim\n",
        "Line" : 901,
        "CharPositionInLine" : 6
      },
      "62" : {
        "Text" : "#message(\"INSTALL ID is \\\"${gp_install_id}\\\"\")\n",
        "Line" : 903,
        "CharPositionInLine" : 6
      },
      "63" : {
        "Text" : "# Analyze each line for file names that match the regular expression:\n\n#\n",
        "Line" : 907,
        "CharPositionInLine" : 2
      },
      "64" : {
        "Text" : "# Extract information from each candidate:\n",
        "Line" : 914,
        "CharPositionInLine" : 4
      },
      "65" : {
        "Text" : "# Use the raw_item as the list entries returned by this function. Use the\n\n# gp_resolve_item function to resolve it to an actual full path file if\n\n# necessary.\n\n#\n",
        "Line" : 935,
        "CharPositionInLine" : 4
      },
      "66" : {
        "Text" : "# Add each item unless it is excluded:\n\n#\n",
        "Line" : 941,
        "CharPositionInLine" : 4
      },
      "67" : {
        "Text" : "# If item was really added, this is the first time we have seen it.\n\n# Add it to unseen_prereqs so that we can recursively add *its*\n\n# prerequisites...\n\n#\n\n# But first: resolve its name to an absolute full path name such\n\n# that the analysis tools can simply accept it as input.\n\n#\n",
        "Line" : 964,
        "CharPositionInLine" : 8
      },
      "68" : {
        "Text" : "# Recurse only if we could resolve the item.\n\n# Otherwise the prerequisites_var list will be cleared\n",
        "Line" : 974,
        "CharPositionInLine" : 12
      },
      "69" : {
        "Text" : "# Make result visible to caller\n",
        "Line" : 999,
        "CharPositionInLine" : 2
      },
      "70" : {
        "Text" : "# See if we added anything\n",
        "Line" : 1002,
        "CharPositionInLine" : 2
      },
      "71" : {
        "Text" : "# Something has been added to prerequisites. Note this in cache\n",
        "Line" : 1005,
        "CharPositionInLine" : 4
      },
      "72" : {
        "Text" : "# from 1 to old list length, remove first item, i.e. remove all pre-existing items\n",
        "Line" : 1008,
        "CharPositionInLine" : 58
      },
      "73" : {
        "Text" : "# not the most elegant way of cutting the list start. Simplifications welcome\n",
        "Line" : 1009,
        "CharPositionInLine" : 40
      },
      "74" : {
        "Text" : "# Update our cache\n",
        "Line" : 1014,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 75
    },
    "CMake/MITKDashboardDriverScript.cmake" : {
      "ObjectId" : "0ab743d1ecbde4c0e3a4ad16535ae72782fdc646",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Included from a dashboard script, this cmake file will drive the configure and build\n\n# steps of MITK\n\n#\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# The following variable are expected to be define in the top-level script:\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check if \"mbits\" is reachable\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# successful completion\n",
        "Line" : 43,
        "CharPositionInLine" : 25
      },
      "4" : {
        "Text" : "#\n\n# Site specific options\n\n#\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Should binary directory be cleaned?\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Attempt to build and test also if 'ctest_update' returned an error\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Set model options\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#message(\"script_mode:${SCRIPT_MODE}\")\n\n#message(\"model:${model}\")\n\n#message(\"empty_binary_directory:${empty_binary_directory}\")\n\n#message(\"force_build:${initial_force_build}\")\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#----------------------------------------------------------------------\n\n# Utility macros\n\n#----------------------------------------------------------------------\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Note should be at the end\n",
        "Line" : 185,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Send status to the \"CDash Web Admin\"\n",
        "Line" : 188,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# try to remove the stamp file for external projects\n",
        "Line" : 210,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# this should return from run_ctest()\n",
        "Line" : 219,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "#---------------------------------------------------------------------\n\n# run_ctest macro\n\n#---------------------------------------------------------------------\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# update error\n",
        "Line" : 239,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Check if a forced run was requested\n",
        "Line" : 245,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# force a build if this is the first run and the build dir is empty\n",
        "Line" : 266,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Write initial cache.\n",
        "Line" : 271,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Write initial cache.\n",
        "Line" : 276,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Clear the forced rerun request\n",
        "Line" : 291,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Project.xml is generated during the superbuild configure step\n",
        "Line" : 313,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# submit the update results *after* the submitting the Configure info,\n\n# otherwise CDash is somehow confused and cannot add the update info\n\n# to the superbuild project\n",
        "Line" : 320,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# To get CTEST_PROJECT_SUBPROJECTS and CTEST_PROJECT_EXTERNALS definition\n",
        "Line" : 327,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# Read in a list of super-build targets (SUPERBUILD_TARGETS). If an error\n\n# occurs in one of the listed projects, the ctest superbuild make step stops\n\n# and the error is reported in the dashboard. If this variable would be empty\n\n# the errors are still reported but make would keep building external\n\n# projects which leads to potentially more errors because of dependencies.\n",
        "Line" : 330,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# Build top level (either all or the supplied targets at\n\n# superbuild level\n",
        "Line" : 340,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# runs only tests that have a LABELS property matching \"SuperBuild\"\n",
        "Line" : 349,
        "CharPositionInLine" : 8
      },
      "27" : {
        "Text" : "# HACK Unfortunately ctest_coverage ignores the build argument, back-up the original dirs\n",
        "Line" : 354,
        "CharPositionInLine" : 6
      },
      "28" : {
        "Text" : "# explicitly build requested external projects as subprojects\n",
        "Line" : 357,
        "CharPositionInLine" : 6
      },
      "29" : {
        "Text" : "# HACK Unfortunately ctest_coverage ignores the build argument, try to force it...\n",
        "Line" : 372,
        "CharPositionInLine" : 8
      },
      "30" : {
        "Text" : "# runs only tests that have a LABELS property matching \"${external_project_name}\"\n",
        "Line" : 378,
        "CharPositionInLine" : 8
      },
      "31" : {
        "Text" : "# restore old coverage dirs\n",
        "Line" : 381,
        "CharPositionInLine" : 8
      },
      "32" : {
        "Text" : "# switch back to SuperBuild label\n",
        "Line" : 386,
        "CharPositionInLine" : 6
      },
      "33" : {
        "Text" : "# build everything at superbuild level which has not yet been built\n",
        "Line" : 395,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# runs only tests that have a LABELS property matching \"SuperBuild\"\n\n#func_test(\"SuperBuild\" \"${CTEST_BINARY_DIRECTORY}\")\n",
        "Line" : 399,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# Configure target\n",
        "Line" : 408,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# Build target\n",
        "Line" : 427,
        "CharPositionInLine" : 8
      },
      "37" : {
        "Text" : "# Build target\n",
        "Line" : 431,
        "CharPositionInLine" : 8
      },
      "38" : {
        "Text" : "# HACK Unfortunately ctest_coverage ignores the build argument, try to force it...\n",
        "Line" : 437,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "# runs only tests that have a LABELS property matching \"${subproject}\"\n",
        "Line" : 446,
        "CharPositionInLine" : 6
      },
      "40" : {
        "Text" : "# Build any additional target which is not build by \"all\"\n\n# i.e. the \"package\" target\n",
        "Line" : 450,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "# runs only tests that have a LABELS property matching \"${subproject}\"\n",
        "Line" : 462,
        "CharPositionInLine" : 8
      },
      "42" : {
        "Text" : "# Build Documentation target\n",
        "Line" : 471,
        "CharPositionInLine" : 6
      },
      "43" : {
        "Text" : "# Global coverage ...\n",
        "Line" : 481,
        "CharPositionInLine" : 4
      },
      "44" : {
        "Text" : "# Global dynamic analysis ...\n",
        "Line" : 488,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "# Clear the CTEST_CHECKOUT_COMMAND variable to prevent continuous clients\n\n# to try to checkout again\n",
        "Line" : 500,
        "CharPositionInLine" : 2
      },
      "46" : {
        "Text" : "# Loop no faster than once every 5 minutes\n",
        "Line" : 509,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 47
    },
    "CMake/MITKDashboardScript.TEMPLATE.cmake" : {
      "ObjectId" : "a5547205b75b6edd32fef22e9aecd1a68a8bb9c6",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# OS: Ubuntu 9.04 2.6.28-18-generic\n\n# Hardware: x86_64 GNU/Linux\n\n# GPU: NA\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Note: The specific version and processor type of this machine should be reported in the\n\n# header above. Indeed, this file will be send to the dashboard as a NOTE file.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Dashboard properties\n\n#\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# For Windows, e.g.\n\n#set(MY_COMPILER \"VC12.0\")\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# For Windows, e.g.\n\n#set(CTEST_CMAKE_COMMAND \"cmake\")\n\n#set(CTEST_CMAKE_GENERATOR \"Visual Studio 12 2013 Win64\")\n\n#set(CTEST_DASHBOARD_ROOT \"C:/dartclients\")\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The directory containing the Qt binaries\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# For Windows, e.g.\n\n#set(QT5_INSTALL_PREFIX \"C:/Qt/5.11.1/msvc2013_64\")\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# Dashboard options\n\n#\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#set(DOCUMENTATION_ARCHIVES_OUTPUT_DIRECTORY ) # for example: $ENV{HOME}/Projects/Doxygen\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Use multiple CPU cores to build\n",
        "Line" : 46,
        "CharPositionInLine" : 31
      },
      "10" : {
        "Text" : "# experimental:\n\n#     - run_ctest() macro will be called *ONE* time\n\n#     - binary directory will *NOT* be cleaned\n\n# continuous:\n\n#     - run_ctest() macro will be called EVERY 5 minutes ...\n\n#     - binary directory will *NOT* be cleaned\n\n#     - configure/build will be executed *ONLY* if the repository has been updated\n\n# nightly:\n\n#     - run_ctest() macro will be called *ONE* time\n\n#     - binary directory *WILL BE* cleaned\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# \"experimental\", \"continuous\", \"nightly\"\n",
        "Line" : 61,
        "CharPositionInLine" : 32
      },
      "12" : {
        "Text" : "#\n\n# Project specific properties\n\n#\n\n# In order to shorten the global path length, the build directory for each DartClient\n\n# uses the following abrevation sceme:\n\n# For build configuration:\n\n# Debug -> d\n\n# Release -> r\n\n# For scripte mode:\n\n# continuous -> c\n\n# nightly -> n\n\n# experimental -> e\n\n# Example directory: /MITK-sb-d-n/ for a nightly MITK superbuild in debug mode.\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Create an initial cache file for MITK. This file is used to configure the MITK-Build. Use ADDITIONAL_CMAKECACHE_OPTION\n\n# to configure the MITK-Superbuild. The\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# List of test that should be explicitly disabled on this machine\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# set any extra environment variables here\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#\n\n# Git repository - Overwrite the default value provided by the driver script\n\n#\n\n# The git repository containing MITK code\n\n#set(GIT_REPOSITORY \"/home/username/MITK\")\n\n# The branch of the MITK git repository to check out\n\n#set(GIT_BRANCH \"bug-xxx-label\")\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "##########################################\n\n# WARNING: DO NOT EDIT BEYOND THIS POINT #\n\n##########################################\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#\n\n# Convenient macro allowing to download a file\n\n#\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#\n\n# Download and include setup script\n\n#\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "CMake/MITKDashboardSetup.cmake" : {
      "ObjectId" : "7460e9ef543cb8c1eba748d3e5863b7b83922deb",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is intended to be included at the end of a custom MITKDashboardScript.TEMPLATE.cmake file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Automatically determined properties\n\n#\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Download a utility script\n\n# See T24757.\n\n# if(IS_PHABRICATOR_URL)\n\n#   set(url \"https://phabricator.mitk.org/source/mitk/browse/${GIT_BRANCH}/CMake/mitkDetectOS.sh?view=raw\")\n\n# else()\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# endif()\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Windows 7, Linux-2.6.32, Darwin...\n",
        "Line" : 30,
        "CharPositionInLine" : 50
      },
      "5" : {
        "Text" : "#\n\n# Project specific properties\n\n#\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# If the dashscript doesn't define a GIT_REPOSITORY variable, let's define it here.\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# Display build info\n\n#\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n\n# Set initial cache options\n\n#\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Remove this if block after all dartclients work\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Write a cache file for populating the MITK initial cache (not the superbuild cache).\n\n# This can be used to provide variables which are not passed through the\n\n# superbuild process to the MITK configure step)\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\n\n# Download and include dashboard driver script\n\n#\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "CMake/MacroParseArguments.cmake" : {
      "ObjectId" : "aed343d65f2ae20407181dd9a90f019e80c1e522",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# macro(MACRO_PARSE_ARGUMENTS prefix arg_names option_names)\n\n#\n\n#   From http://www.cmake.org/Wiki/CMakeMacroParseArguments:\n\n#\n\n#   The MACRO_PARSE_ARGUMENTS macro will take the arguments of another macro and\n\n#   define several variables:\n\n#\n\n#     1) The first argument to is a prefix to put on all variables it creates.\n\n#     2) The second argument is a quoted list of names,\n\n#     3) and the third argument is a quoted list of options.\n\n#\n\n#   The rest of MACRO_PARSE_ARGUMENTS are arguments from another macro to be\n\n#   parsed.\n\n#\n\n#   MACRO_PARSE_ARGUMENTS(prefix arg_names options arg1 arg2...)\n\n#\n\n#   For each item in options, MACRO_PARSE_ARGUMENTS will create a variable\n\n#   with that name, prefixed with prefix_. So, for example, if prefix is\n\n#   MY_MACRO and options is OPTION1;OPTION2, then PARSE_ARGUMENTS will create\n\n#   the variables MY_MACRO_OPTION1 and MY_MACRO_OPTION2. These variables will\n\n#   be set to true if the option exists in the command line or false otherwise.\n\n#\n\n#   For each item in arg_names, MACRO_PARSE_ARGUMENTS will create a variable\n\n#   with that name, prefixed with prefix_. Each variable will be filled with the\n\n#   arguments that occur after the given arg_name is encountered up to the next\n\n#   arg_name or the end of the arguments. All options are removed from these\n\n#   lists.\n\n#\n\n#   MACRO_PARSE_ARGUMENTS also creates a prefix_DEFAULT_ARGS variable containing\n\n#   the list of all arguments up to the first arg_name encountered.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/PackageDepends/MITK_ACVD_Config.cmake" : {
      "ObjectId" : "55d36d47bf6ad6e7259c7a0429c01c327279d5af",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/PackageDepends/MITK_ANN_Config.cmake" : {
      "ObjectId" : "72ce7e5b685b8607bbb90f15e87fc9365a8abee0",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/PackageDepends/MITK_BetData_Config.cmake" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/PackageDepends/MITK_Boost_Config.cmake" : {
      "ObjectId" : "967e1e8124affb499ccde82c22fa6e6b25a705af",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Force dynamic linking\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Boost has an auto link feature (pragma comment lib) for Windows\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "CMake/PackageDepends/MITK_CTK_Config.cmake" : {
      "ObjectId" : "7ec7d40c4667bf164300a8a9fba072546ad5d494",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/PackageDepends/MITK_CppUnit_Config.cmake" : {
      "ObjectId" : "316291d5a7346312c3bceaebf1fea4d25ed6969a",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/PackageDepends/MITK_DCMQI_Config.cmake" : {
      "ObjectId" : "ff0d74619d8ae2ff285db7af9d2793f694ba80f5",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/PackageDepends/MITK_DCMTK_Config.cmake" : {
      "ObjectId" : "155a9ab47b4a7a52b13db9848ede4720adf51c68",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/PackageDepends/MITK_Eigen_Config.cmake" : {
      "ObjectId" : "c4a7aba4ab40200b9d51d4ef85151be8beb2d280",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/PackageDepends/MITK_GDCM_Config.cmake" : {
      "ObjectId" : "0e26d2dd63d3457cd6fb778d86d463e7ecf79d40",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/PackageDepends/MITK_GLUT_Config.cmake" : {
      "ObjectId" : "a23f9ad09f96f1995c1fcfd62c5aa61fe2c7015e",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/PackageDepends/MITK_HDF5_Config.cmake" : {
      "ObjectId" : "30fe719f4fcd2e3369991ad62311052f8c8683f9",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/PackageDepends/MITK_ITK_Config.cmake" : {
      "ObjectId" : "7daf7b4d65719c8a61b1f3cb4849170e8d4b661b",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/PackageDepends/MITK_MatchPoint_Config.cmake" : {
      "ObjectId" : "7f81ac7e809ebbea2abd99153fdcc1fd88b13e90",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/PackageDepends/MITK_OpenCL_Config.cmake" : {
      "ObjectId" : "8d84d531743f15d52801935a4321b88dbdd502c8",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# on OS X the linker needs a flag pointing to the OpenCL.framework\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/PackageDepends/MITK_OpenCV_Config.cmake" : {
      "ObjectId" : "e8e59a903cc6d6c310b79c95cbf7c80396b2cc05",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# adding option for videoinput library on windows (for directshow based frame grabbing)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/PackageDepends/MITK_OpenGL_Config.cmake" : {
      "ObjectId" : "a322942bd52a336df7fcc38b0bf84baf39e68f40",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/PackageDepends/MITK_OpenIGTLink_Config.cmake" : {
      "ObjectId" : "719798a00e2621267ee9ff54487232b113bb60ba",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#string(REPLACE \" \" \";\" _igtl_cxx_flags \"${OpenIGTLink_REQUIRED_CXX_FLAGS}\")\n\n#list(APPEND ALL_COMPILE_OPTIONS ${_igtl_cxx_flags})\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/PackageDepends/MITK_OpenMP_Config.cmake" : {
      "ObjectId" : "a1d9c036f92f922a1e9812c692383977b97d1a4c",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/PackageDepends/MITK_Poco_Config.cmake" : {
      "ObjectId" : "cf5397f2d738086b1d8374a3bbe79ea5d26c7324",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/PackageDepends/MITK_PythonLibs_Config.cmake" : {
      "ObjectId" : "7c1888d59aff80d3a6dcf49690c6d3943263954e",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/PackageDepends/MITK_QVTK_Config.cmake" : {
      "ObjectId" : "ede2480b5943c18b089ca4019de4d9a7b3ee7f13",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#list(APPEND ALL_LIBRARIES QVTK)\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/PackageDepends/MITK_Qt5_Config.cmake" : {
      "ObjectId" : "37f08b516041eea59e5b0a4f53b7233144446cef",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/PackageDepends/MITK_Qwt_Config.cmake" : {
      "ObjectId" : "a8880d82d926703525fc9c3b25cb9449966bc828",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/PackageDepends/MITK_Redland_Config.cmake" : {
      "ObjectId" : "ef3916d08115f661aec1cb38b934aa5701e3ff48",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/PackageDepends/MITK_VPX_Config.cmake" : {
      "ObjectId" : "ec51ff8dc70892768baac6071832511b88c9b698",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/PackageDepends/MITK_VTK_Config.cmake" : {
      "ObjectId" : "e81aee00b9daa371c07817559357e618cd1a9a5f",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/PackageDepends/MITK_Vigra_Config.cmake" : {
      "ObjectId" : "87f8c255344fca7cf95e90056b8f81bab80836f5",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/PackageDepends/MITK_X11_Config.cmake" : {
      "ObjectId" : "84a05878b9932ea01c90acd847a7c0cc6a170db7",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/PackageDepends/MITK_ZLIB_Config.cmake" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/PackageDepends/MITK_cpprestsdk_Config.cmake" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/PackageDepends/MITK_tinyxml_Config.cmake" : {
      "ObjectId" : "ee84a8ae1a9e545e51ebb305a3f2a7e8cf840e5d",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/PackageDepends/MITK_videoInput_Config.cmake" : {
      "ObjectId" : "9399a96a7023621ebec454d43389cac050e43b1b",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#message(STATUS \"now in videoinput\")\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/Whitelists/Minimal.cmake" : {
      "ObjectId" : "6bfa892451eb8c1d0b5eec4a148afbaf7bc1f0f2",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/Whitelists/Wrapping.cmake" : {
      "ObjectId" : "33ae5929a02ae956768f642b2f267d26a1cdb40f",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/mitkFunctionAddCustomModuleTest.cmake" : {
      "ObjectId" : "0e68dde9c7df5505aed54e57a16a4f79d1ba7e57",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#!\n\n#! \\brief Add a custom test for MITK module\n\n#!\n\n#! \\param test_name Unique identifier for the test\n\n#! \\param test_function Name of the test function (the one with the argc,argv signature)\n\n#!\n\n#! Additional parameters will be passed as command line parameters to the test.\n\n#!\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/mitkFunctionAddExternalProject.cmake" : {
      "ObjectId" : "d0a3a5c2648e396b4c3172fc1a41c3bc449df8b2",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#! Register an external project.\n\n#!\n\n#! Calling this function registers an external project with the MITK\n\n#! build system. Usage:\n\n#!\n\n#!   mitkFunctionAddExternalProject(NAME name [ON|OFF]\n\n#!     [PACKAGE package] [COMPONENTS comp1...]\n\n#!     [DEPENDS dep1...]\n\n#!     [DOC docstring]\n\n#!     [NO_CACHE] [ADVANCED] [NO_PACKAGE]\n\n#!   )\n\n#!\n\n#! The function creates a MITK_USE_<name> internal cache variable if the\n\n#! NO_CACHE option is given. If the NO_CACHE option is not set, a normal\n\n#! boolean cache option is created with the given DOC argument as help string.\n\n#! The option is marked as advanced if the ADVANCED option is set. The\n\n#! option's initial value matches the ON or OFF option and defaults to OFF\n\n#! if none is given. The DEPENDS arguments are used to force the\n\n#! corresponding MITK_USE_<depN> cache variables to ON if MITK_USE_<name>\n\n#! is ON.\n\n#!\n\n#! The PACKAGE argument names the argument for the\n\n#! corresponding find_package() call in MITKs top-level CMakeLists.txt\n\n#! and MITKConfig.cmake file. It defaults to <name>. If COMPONENTS are\n\n#! specified, these are passed to the find_package() call. If the\n\n#! NO_PACKAGE option is given, the find_package() call is suppressed.\n\n#!\n\n#! For each registered external project there must exist a file called\n\n#! CMakeExternals/<name>.cmake which defines the build process for\n\n#! the external project.\n\n#!\n\n#! \\note Note that multiple calls of this function must be ordered\n\n#! relative to their declared dependencies. This applies to the DEPENDS\n\n#! arguments of this function as well as the actual target dependencies\n\n#! declared in the CMakeExternals/<name>.cmake file.\n\n#!\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Get all transitive dependencies\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Force dependencies to ON\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# This is a cache UI variable\n",
        "Line" : 83,
        "CharPositionInLine" : 10
      },
      "4" : {
        "Text" : "# This is an internal cache variable\n",
        "Line" : 87,
        "CharPositionInLine" : 10
      },
      "5" : {
        "Text" : "# Set the actual MITK_USE_<name> cache variable\n",
        "Line" : 94,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#set(${_use_var} ${_on} CACHE BOOL \"${EP_DOC}\" FORCE)\n",
        "Line" : 99,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "CMake/mitkFunctionAddLibrarySearchPaths.cmake" : {
      "ObjectId" : "fca9b740a76a966ca3e711b5bba1074a71cc57bc",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#! Helper function that stores additional library search paths in order to use them\n\n#! in the mitkFunctionGetLibrarySearchPaths function.\n\n#!\n\n#! Calling this function registers an external project with the MITK\n\n#! build system. Usage:\n\n#!\n\n#!   mitkFunctionAddLibrarySearchPaths(NAME name\n\n#!                                  PATHS path1 [path2 ...]\n\n#!                                  [DEBUG_PATHS path1 [path2 ...]]\n\n#!                                  [MINSIZEREL_PATHS path1 [path2 ...]]\n\n#!                                  [RELWITHDEBINFO_PATHS path1 [path2 ...]]\n\n#!   )\n\n#!\n\n#! The function adds the passed paths to a file stored in\n\n#! ${MITK_SUPERBUILD_BINARY_DIR}/MITK-AdditionalLibPaths.\n\n#! This information will be later on used by mitkFunctionGetLibrarySearchPaths.\n\n#! This allows external projects (also of extensions) to define library search\n\n#! paths that will be used in the superbuild. By using DEBUG_PATHS, MINSIZEREL_PATHS\n\n#! and RELWITHDEBINFO_PATHS, you can save special paths for debug, min size release\n\n#! or \"release with debug info\". If special paths are not explicitly specified,\n\n#! PATHS will be used for all configuration.\n\n#!\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/mitkFunctionAddTestLabel.cmake" : {
      "ObjectId" : "57d44da7bc5d2d56dce0c960e343f5fad4991d3f",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Use to attach a CTest/CDash label to a test (already added via ADD_TEST)\n\n#\n\n# Call with or without an explicit second parameter. If no second parameter is given,\n\n# ${MITK_DEFAULT_SUBPROJECTS} will be used as standard label\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/mitkFunctionCMakeDoxygenFilterCompile.cmake" : {
      "ObjectId" : "373f666f94aba179d86d7447323d73a8522d10b2",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#!\n\n#! \\brief Download and compile a CMake doxygen input filter\n\n#!\n\n#! \\param OUT <out-file> (optional) Supply an absolute filename for\n\n#!                       the generated executable.\n\n#! \\param NAMESPACE <namespace> (optional) Supply a C++ namespace in\n\n#!                              which the generated function declrarations\n\n#!                              should be wrapped.\n\n#!\n\n#! \\return This function sets the <code>CMakeDoxygenFilter_EXECUTABLE</code>\n\n#!         variable to the absolute path of the generated input filter executable\n\n#!         in the parent scope. If <out-file> is specified, they will be the same.\n\n#!\n\n#! This CMake function compiles the http://github.com/saschazelzer/CMakeDoxygenFilter\n\n#! project into a doxygen input filter executable. See\n\n#! http://github.com/saschazelzer/CMakeDoxygenFilter/blob/master/README for more details.\n\n#!\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-------------------- parse function arguments -------------------\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#------------------- finished parsing arguments ----------------------\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "CMake/mitkFunctionCheckCompilerFlags.cmake" : {
      "ObjectId" : "e1cade7ec0db666f7741ed43d55b52b9ac807ef5",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Helper macro allowing to check if the given flags are supported\n\n# by the underlying build tool\n\n#\n\n# If the flag(s) is/are supported, they will be appended to the string identified by RESULT_VAR\n\n#\n\n# Usage:\n\n#   mitkFunctionCheckCompilerFlags(FLAGS_TO_CHECK VALID_FLAGS_VAR)\n\n#\n\n# The above example uses the C++ compiler to check the flags. To individually check with\n\n# the C and C++ compiler, use:\n\n#\n\n#   mitkFunctionCheckCompilerFlags2(FLAGS_TO_CHECK VALID_C_FLAGS_VAR VALID_CXX_FLAGS_VAR)\n\n#\n\n# Example:\n\n#\n\n#   set(myflags)\n\n#   mitkFunctionCheckCompilerFlags(\"-fprofile-arcs\" myflags)\n\n#   message(1-myflags:${myflags})\n\n#   mitkFunctionCheckCompilerFlags(\"-fauto-bugfix\" myflags)\n\n#   message(2-myflags:${myflags})\n\n#   mitkFunctionCheckCompilerFlags(\"-Wall\" myflags)\n\n#   message(1-myflags:${myflags})\n\n#\n\n#   The output will be:\n\n#    1-myflags: -fprofile-arcs\n\n#    2-myflags: -fprofile-arcs\n\n#    3-myflags: -fprofile-arcs -Wall\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Internally, the macro CMAKE_CXX_ACCEPTS_FLAG calls TRY_COMPILE. To avoid\n\n# the cost of compiling the test each time the project is configured, the variable set by\n\n# the macro is added to the cache so that following invocation of the macro with\n\n# the same variable name skip the compilation step.\n\n# For that same reason, the mitkFunctionCheckCompilerFlags function appends a unique suffix to\n\n# the HAS_FLAG variable. This suffix is created using a 'clean version' of the flag to test.\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Save the contents of CXX_RESULT_VAR temporarily.\n\n# This is needed of ${CXX_RESULT_VAR} is one of the CMAKE_<LANG>_FLAGS_* variables.\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Clear all flags. If not, existing flags triggering warnings might lead to\n\n# false-negatives when checking for certain compiler flags.\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Internally, the macro CMAKE_CXX_COMPILER_FLAG calls TRY_COMPILE. To avoid\n\n# the cost of compiling the test each time the project is configured, the variable set by\n\n# the macro is added to the cache so that following invocation of the macro with\n\n# the same variable name skip the compilation step.\n\n# For that same reason, the mitkFunctionCheckCompilerFlags2 function appends a unique suffix to\n\n# the HAS_CXX_FLAG and HAS_C_FLAG variable. This suffix is created using a 'clean version' of the\n\n# flag to test. The value of HAS_C(XX)_FLAG_${suffix} additonally needs to be a valid\n\n# pre-processor token because CHECK_CXX_COMPILER_FLAG adds it as a definition to the compiler\n\n# arguments. An invalid token triggers compiler warnings, which in case of the \"-Werror\" flag\n\n# leads to false-negative checks.\n",
        "Line" : 80,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# workaround for gcc's strange behaviour on -Wno-... options in combination with -Werror\n\n# we test the flag without the \"no-\" prefix because that is more reliable\n",
        "Line" : 93,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "CMake/mitkFunctionCheckMitkCompatibility.cmake" : {
      "ObjectId" : "da67a36b6dd11da828d1d56e5a9a991380207ce7",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# mitkFunctionCheckMitkCompatibility(VERSIONS [<version_name> <minimum_required_version>]... [REQUIRED])\n\n#\n\n# Example:\n\n# mitkFunctionCheckMitkCompatibility(VERSIONS MITK_VERSION_PLUGIN_SYSTEM 1 REQUIRED)\n\n#\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/mitkFunctionCheckModuleDependencies.cmake" : {
      "ObjectId" : "14ecfe6f332ccc528e55712d3785c953bfe4dbf2",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#! Checks if all required modules and packages exist and stores missing\n\n#! dependencies in <missing_deps>.\n\n#!\n\n#! Usage:\n\n#!\n\n#! mitk_check_module_dependencies(\n\n#!   MODULES <module-list>\n\n#!   PACKAGES <package-list>\n\n#!   MISSING_DEPENDENCIES_VAR <missing_deps>\n\n#!   MODULE_DEPENDENCIES_VAR <module_deps>\n\n#!   PACKAGE_DEPENDENCIES_VAR <package_deps>)\n\n#!\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# variable for storing missing dependencies\n\n# variable for storing all module dependencies\n\n# variable for storing all package dependencies\n",
        "Line" : 16,
        "CharPositionInLine" : 31
      },
      "2" : {
        "Text" : "# MITK modules which the given TARGET uses\n\n# MITK packages which the given TARGET uses\n",
        "Line" : 22,
        "CharPositionInLine" : 31
      },
      "CommentCount" : 3
    },
    "CMake/mitkFunctionCheckPackageHeader.cmake" : {
      "ObjectId" : "0834326883861f1ba9059d5d2b59fa430801d328",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/mitkFunctionCompileSnippets.cmake" : {
      "ObjectId" : "11ad1deb3c71a95eb29611bd89293a32f7249779",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# get all files called \"main.cpp\"\n",
        "Line" : 3,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# get the directory containing the main.cpp file\n",
        "Line" : 7,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# If there exists a \"files.cmake\" file in the snippet directory,\n\n# include it and assume it sets the variable \"snippet_src_files\"\n\n# to a list of source files for the snippet.\n",
        "Line" : 12,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# glob all files in the directory and add them to the snippet src list\n",
        "Line" : 27,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# Uset the top-level directory name as the executable name\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "CMake/mitkFunctionConfigureVisualStudioUserProjectFile.cmake" : {
      "ObjectId" : "8fc399cff94f1292104f34b52daec665b2f086fa",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#!\n\n#! Configure user file for visual studio projects\n\n#!\n\n#! \\brief This function will configure a user file for visual studio projects\n\n#!\n\n#! \\param NAME (required) Name of the executable\n\n#!\n\n#! \\code\n\n#! mitkFunctionConfigureVisualStudioUserProjectFile(\n\n#!   NAME MyApp\n\n#! )\n\n#! \\endcode\n\n#!\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Name of the executable\n",
        "Line" : 18,
        "CharPositionInLine" : 29
      },
      "CommentCount" : 2
    },
    "CMake/mitkFunctionConvertXPSchema.cmake" : {
      "ObjectId" : "681e31bee50c7664f9bdd89b0241f6daa97ee85e",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# mitkFunctionConvertXPSchema(INPUT plugin.xml ...\n\n#                      OUTPUT_DIR output_dir\n\n#                      TARGET_NAME target_name\n\n#                      [DEPENDS depends]\n\n#                      [WORKING_DIR working_dir]\n\n#                     )\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/mitkFunctionCreateBlueBerryApplication.cmake" : {
      "ObjectId" : "f34438065129cc871e51e2d2ee6101e7dce04854",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#!\n\n#! Create a BlueBerry application.\n\n#!\n\n#! \\brief This function will create a BlueBerry application together with all\n\n#! necessary provisioning and configuration data and install support.\n\n#!\n\n#! \\param NAME (required) The name of the executable.\n\n#! \\param DESCRIPTION (optional) A human-readable description of your application.\n\n#!        The usage depends on the CPack generator (on Windows, this is a descriptive\n\n#!        text for the created shortcuts).\n\n#! \\param SOURCES (optional) A list of source files to compile into your executable. Defaults\n\n#!        to <name>.cpp.\n\n#! \\param PLUGINS (optional) A list of required plug-ins. Defaults to all known plug-ins.\n\n#! \\param EXCLUDE_PLUGINS (optional) A list of plug-ins which should not be used. Mainly\n\n#!        useful if PLUGINS was not used.\n\n#! \\param LINK_LIBRARIES A list of libraries to be linked with the executable.\n\n#! \\param LIBRARY_DIRS A list of directories to pass through to MITK_INSTALL_TARGETS\n\n#! \\param SHOW_CONSOLE (option) Show the console output window (on Windows).\n\n#! \\param NO_PROVISIONING (option) Do not create provisioning files.\n\n#! \\param NO_INSTALL (option) Do not install this executable\n\n#!\n\n#! Assuming that there exists a file called <code>MyApp.cpp</code>, an example call looks like:\n\n#! \\code\n\n#! mitkFunctionCreateBlueBerryApplication(\n\n#!   NAME MyApp\n\n#!   DESCRIPTION \"MyApp - New ways to explore medical data\"\n\n#!   EXCLUDE_PLUGINS org.mitk.gui.qt.extapplication\n\n#!   SHOW_CONSOLE\n\n#! )\n\n#! \\endcode\n\n#!\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# get all plug-in dependencies\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# add the dependencies to the list of application plug-ins\n",
        "Line" : 56,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# -----------------------------------------------------------------------\n\n# Set up include and link dirs for the executable\n\n# -----------------------------------------------------------------------\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# -----------------------------------------------------------------------\n\n# Add executable icon (Windows)\n\n# -----------------------------------------------------------------------\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# -----------------------------------------------------------------------\n\n# Create the executable and link libraries\n\n# -----------------------------------------------------------------------\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# -----------------------------------------------------------------------\n\n# Add executable icon and bundle name (Mac)\n\n# -----------------------------------------------------------------------\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# -----------------------------------------------------------------------\n\n# Set build time dependencies\n\n# -----------------------------------------------------------------------\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# This ensures that all enabled plug-ins are up-to-date when the\n\n# executable is build.\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# -----------------------------------------------------------------------\n\n# Additional files needed for the executable\n\n# -----------------------------------------------------------------------\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Create a provisioning file, listing all plug-ins\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Create a .ini file for initial parameters\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Create batch and VS user files for Windows platforms\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# -----------------------------------------------------------------------\n\n# Install support\n\n# -----------------------------------------------------------------------\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# This installs all third-party CTK plug-ins\n",
        "Line" : 185,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Install the executable\n",
        "Line" : 196,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Install the provisioning file\n",
        "Line" : 200,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# On Linux, create a shell script to start a relocatable application\n",
        "Line" : 204,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Tell cpack the executables that you want in the start menu as links\n",
        "Line" : 209,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 19
    },
    "CMake/mitkFunctionCreateCommandLineApp.cmake" : {
      "ObjectId" : "5c7d442fdd1059797583f24529763a7b7da2dae4",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#!\n\n#! Create a Command Line App.\n\n#!\n\n#! \\brief This function will create a command line executable and the scripts required to run it\n\n#!\n\n#! \\param NAME (required) Name of the command line app\n\n#! \\param DEPENDS (optional) Required MITK modules beyond MitkCommandLine\n\n#! \\param PACKAGE_DEPENDS (optional) list of \"packages\" this command line app depends on (e.g. ITK, VTK, etc.)\n\n#! \\param CPP_FILES (optional) list of cpp files, if it is not given NAME.cpp is assumed\n\n#!\n\n#! Assuming that there exists a file called <code>MyApp.cpp</code>, an example call looks like:\n\n#! \\code\n\n#! mitkFunctionCreateCommandLineApp(\n\n#!   NAME MyApp\n\n#!   DEPENDS MitkCore MitkPlanarFigure\n\n#!   PACKAGE_DEPENDS ITK VTK\n\n#! )\n\n#! \\endcode\n\n#!\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Name of the command line app\n",
        "Line" : 24,
        "CharPositionInLine" : 26
      },
      "2" : {
        "Text" : "# list of modules this command line app depends on\n\n# list of \"packages\" this command line app depends on (e.g. ITK, VTK, etc.)\n\n# (optional) list of cpp files, if it is not given NAME.cpp is assumed\n",
        "Line" : 28,
        "CharPositionInLine" : 29
      },
      "3" : {
        "Text" : "# On Linux, create a shell script to start a relocatable application\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "CMake/mitkFunctionCreateMatchPointDeployedAlgorithm.cmake" : {
      "ObjectId" : "bcd24d28185d5d362be48ef8fe823e246f21ff18",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#!\n\n#! Create a Command Line App.\n\n#!\n\n#! \\brief This function will create a command line executable and the scripts required to run it\n\n#!\n\n#! \\param NAME (required) Name of the algorithm / cmake target\n\n#! \\param DEPENDS (optional) Required MITK modules beyond MitkCommandLine\n\n#! \\param PACKAGE_DEPENDS (optional) list of \"packages\" this command line app depends on (e.g. ITK, VTK, etc.)\n\n#! \\param CPP_FILES (optional) list of cpp files, if it is not given NAME.cpp is assumed\n\n#! \\param INCLUDE_DIRS (optional): All directories that should be added as include dirs to the project\n\n#! \\param PROFILE (optional): The profile file that should be used for the algorithm. If not set it is \"./<algname>.profile\".\n\n#! \\param NO_PROFILE_GEN (optional): Flag. If set no profile resource will be generated.\n\n#! \\param ADDITIONAL_LIBS (optional) List of additional private libraries linked to this module.\n\n#!        The folder containing the library will be added to the global list of library search paths.\n\n#! \\param H_FILES (optional) List of public header files for this module.\n\n#! Assuming that there exists a file called <code>MyApp.cpp</code>, an example call looks like:\n\n#! \\code\n\n#! mitkFunctionCreateCommandLineApp(\n\n#!   NAME MyApp\n\n#!   DEPENDS MitkCore MitkPlanarFigure\n\n#!   PACKAGE_DEPENDS ITK VTK\n\n#! )\n\n#! \\endcode\n\n#!\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Name of the algorithm/target\n\n# Profile of the algorithm that should be used\n",
        "Line" : 29,
        "CharPositionInLine" : 26
      },
      "2" : {
        "Text" : "# list of modules this command line app depends on\n\n# list of \"packages\" this command line app depends on (e.g. ITK, VTK, etc.)\n\n# (optional) list of cpp files, if it is not given NAME.cpp is assumed\n\n# include directories: [PUBLIC|PRIVATE|INTERFACE] <list>\n\n# list of addidtional private libraries linked to this module.\n\n# list of header files: [PUBLIC|PRIVATE] <list>\n",
        "Line" : 34,
        "CharPositionInLine" : 29
      },
      "3" : {
        "Text" : "#Flag that indicates that no profile resource should be generated.\n",
        "Line" : 43,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 4
    },
    "CMake/mitkFunctionCreateModule.cmake" : {
      "ObjectId" : "ce984559eb34f354710558585bd6b2f1a7b162da",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##################################################################\n\n#\n\n# mitk_create_module\n\n#\n\n#! Creates a module for the automatic module dependency system within MITK.\n\n#!\n\n#! Example:\n\n#!\n\n#! \\code\n\n#! mitk_create_module(\n\n#!     DEPENDS PUBLIC MitkCore\n\n#!     PACKAGE_DEPENDS\n\n#!       PRIVATE Qt5|Xml+Networking\n\n#!       PUBLIC  ITK|Watershed\n\n#! \\endcode\n\n#!\n\n#! The <moduleName> parameter specifies the name of the module which is used\n\n#! to create a logical target name. The parameter is optional in case the\n\n#! MITK_MODULE_NAME_DEFAULTS_TO_DIRECTORY_NAME variable evaluates to TRUE. The\n\n#! module name will then be derived from the directory name in which this\n\n#! function is called.\n\n#!\n\n#! If set, the following variables will be used to validate the module name:\n\n#!\n\n#!   MITK_MODULE_NAME_REGEX_MATCH The module name must match this regular expression.\n\n#!   MITK_MODULE_NAME_REGEX_NOT_MATCH The module name must not match this regular expression.\n\n#!\n\n#! If the MITK_MODULE_NAME_PREFIX variable is set, the module name will be prefixed\n\n#! with its contents.\n\n#!\n\n#! A modules source files are specified in a separate CMake file usually\n\n#! called files.cmake, located in the module root directory. The\n\n#! mitk_create_module() macro evaluates the following CMake variables\n\n#! from the files.cmake file:\n\n#!\n\n#! - CPP_FILES A list of .cpp files\n\n#! - H_FILES A list of .h files without a corresponding .cpp file\n\n#! - TXX_FILES A list of .txx files\n\n#! - RESOURCE_FILES A list of files (resources) which are embedded into the module\n\n#! - MOC_H_FILES A list of Qt header files which should be processed by the MOC\n\n#! - UI_FILES A list of .ui Qt UI files\n\n#! - QRC_FILES A list of .qrc Qt resource files\n\n#! - DOX_FILES A list of .dox Doxygen files\n\n#!\n\n#! List of variables available after the function is called:\n\n#! - MODULE_NAME\n\n#! - MODULE_TARGET\n\n#! - MODULE_IS_ENABLED\n\n#! - MODULE_SUBPROJECTS\n\n#!\n\n#! \\sa mitk_create_executable\n\n#!\n\n#! Parameters (all optional):\n\n#!\n\n#! \\param <moduleName> The module name (also used as target name)\n\n#! \\param FILES_CMAKE File name of a CMake file setting source list variables\n\n#!        (defaults to files.cmake)\n\n#! \\param VERSION Module version number, e.g. \"1.2.0\"\n\n#! \\param AUTOLOAD_WITH A module target name identifying the module which will\n\n#!        trigger the automatic loading of this module\n\n#! \\param DEPRECATED_SINCE Marks this modules as deprecated since <arg>\n\n#! \\param DESCRIPTION A description for this module\n\n#!\n\n#! Multi-value Parameters (all optional):\n\n#!\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#! \\param SUBPROJECTS List of CDash labels\n\n#! \\param INCLUDE_DIRS Include directories for this module:\n\n#!        \\verbatim\n\n#! [[PUBLIC|PRIVATE|INTERFACE] <dir1>...]...\n\n#! \\endverbatim\n\n#!        The default scope for include directories is PUBLIC.\n\n#! \\param DEPENDS List of module dependencies:\n\n#!        \\verbatim\n\n#! [[PUBLIC|PRIVATE|INTERFACE] <module1>...]...\n\n#! \\endverbatim\n\n#!        The default scope for module dependencies is PUBLIC.\n\n#! \\param PACKAGE_DEPENDS List of public packages dependencies (e.g. Qt, VTK, etc.).\n\n#!        Package dependencies have the following syntax:\n\n#!        \\verbatim\n\n#! [PUBLIC|PRIVATE|INTERFACE] PACKAGE[|COMPONENT1[+COMPONENT2]...]\n\n#! \\endverbatim\n\n#!        The default scope for package dependencies is PRIVATE.\n\n#! \\param ADDITIONAL_LIBS List of additional private libraries linked to this module.\n\n#!        The folder containing the library will be added to the global list of library search paths.\n\n#! \\param CPP_FILES List of source files for this module. If the list is non-empty,\n\n#!        the module does not need to provide a files.cmake file or FILES_CMAKE argument.\n\n#! \\param H_FILES List of public header files for this module. It is recommended to use\n\n#!        a files.cmake file instead.\n\n#!\n\n#! Options (optional)\n\n#!\n\n#! \\param FORCE_STATIC Force building this module as a static library\n\n#! \\param GCC_DEFAULT_VISIBILITY Do not use gcc visibility flags - all\n\n#!        symbols will be exported\n\n#! \\param NO_INIT Do not create CppMicroServices initialization code\n\n#! \\param NO_FEATURE_INFO Do not create a feature info by calling add_feature_info()\n\n#! \\param WARNINGS_NO_ERRORS Do not treat compiler warnings as errors\n\n#\n\n##################################################################\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# module version number, e.g. \"1.2.0\"\n\n# export macro name for public symbols of this module (DEPRECATED)\n\n# a module target name identifying the module which will trigger the\n\n# automatic loading of this module\n\n# file name of a CMake file setting source list variables\n\n# (defaults to files.cmake)\n\n# marks this modules as deprecated\n\n# a description for this module\n",
        "Line" : 104,
        "CharPositionInLine" : 29
      },
      "3" : {
        "Text" : "# list of CDash labels\n\n# include directories: [PUBLIC|PRIVATE|INTERFACE] <list>\n\n# include dirs internal to this module (DEPRECATED)\n\n# list of modules this module depends on: [PUBLIC|PRIVATE|INTERFACE] <list>\n\n# list of modules this module internally depends on (DEPRECATED)\n\n# list of \"packages this module depends on (e.g. Qt, VTK, etc.): [PUBLIC|PRIVATE|INTERFACE] <package-list>\n\n# list of CMake targets this module should depend on\n\n# list of addidtional private libraries linked to this module.\n\n# list of cpp files\n\n# list of header files: [PUBLIC|PRIVATE] <list>\n",
        "Line" : 115,
        "CharPositionInLine" : 29
      },
      "4" : {
        "Text" : "# force building this module as a static library\n\n# this module is a headers-only library\n\n# do not use gcc visibility flags - all symbols will be exported\n",
        "Line" : 128,
        "CharPositionInLine" : 29
      },
      "5" : {
        "Text" : "# do not add default include directories like \"include\" or \".\"\n",
        "Line" : 131,
        "CharPositionInLine" : 30
      },
      "6" : {
        "Text" : "# do not create CppMicroServices initialization code\n\n# do not create a feature info by calling add_feature_info()\n\n# do not treat compiler warnings as errors\n\n# create an executable; do not use directly, use mitk_create_executable() instead\n\n# compile all source files as C sources\n\n# compile all source files as C++ sources\n",
        "Line" : 132,
        "CharPositionInLine" : 29
      },
      "7" : {
        "Text" : "# -----------------------------------------------------------------\n\n# Sanity checks\n",
        "Line" : 144,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# check if the subprojects exist as targets\n",
        "Line" : 199,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# -----------------------------------------------------------------\n\n# Check if module should be build\n",
        "Line" : 208,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# assume worst case\n",
        "Line" : 213,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# first we check if we have an explicit module build list\n",
        "Line" : 215,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# first of all we check for the dependencies\n",
        "Line" : 224,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# now check for every package if it is enabled. This overlaps a bit with\n\n# MITK_CHECK_MODULE ...\n",
        "Line" : 238,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# -----------------------------------------------------------------\n\n# Start creating the module\n",
        "Line" : 250,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# clear variables defined in files.cmake\n",
        "Line" : 255,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# clear other variables\n",
        "Line" : 265,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# check and set-up auto-loading\n",
        "Line" : 271,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# create a meta-target if it does not already exist\n",
        "Line" : 278,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Preprend the \"src\" directory to the cpp file list\n",
        "Line" : 303,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "# We only support hidden visibility for gcc for now. Clang still has troubles with\n\n# correctly marking template declarations and explicit template instantiations as exported.\n\n# See http://comments.gmane.org/gmane.comp.compilers.clang.scm/50028\n\n# and http://llvm.org/bugs/show_bug.cgi?id=10113\n",
        "Line" : 333,
        "CharPositionInLine" : 6
      },
      "21" : {
        "Text" : "# this would turn on unused parameter warnings, but unfortunately MSVC cannot\n\n# distinguish yet between internal and external headers so this would be triggered\n\n# a lot by external code. There is support for it on the way so this line could be\n\n# reactivated after https://gitlab.kitware.com/cmake/cmake/issues/17904 has been fixed.\n",
        "Line" : 347,
        "CharPositionInLine" : 1
      },
      "22" : {
        "Text" : "# mitkFunctionCheckCAndCXXCompilerFlags(\"/w34100\" module_c_flags module_cxx_flags)\n",
        "Line" : 351,
        "CharPositionInLine" : 8
      },
      "23" : {
        "Text" : "# The flag \"c++0x-static-nonintegral-init\" has been renamed in newer Clang\n\n# versions to \"static-member-init\", see\n\n# http://clang-developers.42468.n3.nabble.com/Wc-0x-static-nonintegral-init-gone-td3999651.html\n\n#\n\n# Also, older Clang and seemingly all gcc versions do not warn if unknown\n\n# \"-no-*\" flags are used, so CMake will happily append any -Wno-* flag to the\n\n# command line. This may get confusing if unrelated compiler errors happen and\n\n# the error output then additionally contains errors about unknown flags (which\n\n# is not the case if there were no compile errors).\n\n#\n\n# So instead of using -Wno-* we use -Wno-error=*, which will be properly rejected by\n\n# the compiler and if applicable, prints the specific warning as a real warning and\n\n# not as an error (although -Werror was given).\n",
        "Line" : 355,
        "CharPositionInLine" : 8
      },
      "24" : {
        "Text" : "# Add a source level dependencies on resource files\n",
        "Line" : 410,
        "CharPositionInLine" : 8
      },
      "25" : {
        "Text" : "# ---------------------------------------------------------------\n\n# Create the actual module target\n",
        "Line" : 449,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# Apply properties to the module target.\n",
        "Line" : 467,
        "CharPositionInLine" : 6
      },
      "27" : {
        "Text" : "# Add additional library search directories to a global property which\n\n# can be evaluated by other CMake macros, e.g. our install scripts.\n",
        "Line" : 499,
        "CharPositionInLine" : 6
      },
      "28" : {
        "Text" : "# add the target name to a global property which is used in the top-level\n\n# CMakeLists.txt file to export the target\n",
        "Line" : 516,
        "CharPositionInLine" : 6
      },
      "29" : {
        "Text" : "# for auto-loaded modules, adapt the output directory\n",
        "Line" : 520,
        "CharPositionInLine" : 8
      },
      "30" : {
        "Text" : "# if the auto-loading module is not imported, get its location\n\n# and put the auto-load module relative to it.\n",
        "Line" : 530,
        "CharPositionInLine" : 10
      },
      "31" : {
        "Text" : "# add the auto-load module name as a property\n",
        "Line" : 542,
        "CharPositionInLine" : 8
      },
      "32" : {
        "Text" : "# create export macros\n",
        "Line" : 564,
        "CharPositionInLine" : 6
      },
      "33" : {
        "Text" : "# ---------------------------------------------------------------\n\n# Properties for both header-only and compiled modules\n",
        "Line" : 585,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# Add a CppMicroServices dependency implicitly, since it is\n\n# needed for the generated \"module initialization\" code.\n",
        "Line" : 607,
        "CharPositionInLine" : 6
      },
      "35" : {
        "Text" : "# add include directories\n",
        "Line" : 622,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# -----------------------------------------------------------------\n\n# Record missing dependency information\n",
        "Line" : 640,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 37
    },
    "CMake/mitkFunctionCreatePlugin.cmake" : {
      "ObjectId" : "1c5faf618ecad25922758e8732ea83de02114cd6",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#! \\brief Creates a MITK CTK plugin.\n\n#!\n\n#! This function should be called from the plugins CMakeLists.txt file.\n\n#! The target name is available after the macro call as ${PLUGIN_TARGET}\n\n#! to add additional libraries in your CMakeLists.txt. Include paths and link\n\n#! libraries are set depending on the value of the Required-Plugins header\n\n#! in your manifest_headers.cmake file.\n\n#!\n\n#! This function internally calls ctkMacroBuildPlugin() and adds support\n\n#! for Qt Help files and installers.\n\n#!\n\n#! Options:\n\n#! \\param TEST_PLUGIN Mark this plug-in as a testing plug-in.\n\n#! \\param NO_INSTALL  Don't install this plug-in.\n\n#!\n\n#! Parameters:\n\n#!\n\n#! \\param EXPORT_DIRECTIVE (required) The export directive to use in the generated\n\n#!        <plugin_target>_Exports.h file.\n\n#!\n\n#! Multi-value parameters (all optional):\n\n#!\n\n#! \\param EXPORTED_INCLUDE_SUFFIXES A list of sub-directories which should\n\n#!        be added to the current source directory. The resulting directories\n\n#!        will be available in the set of include directories of depending plug-ins.\n\n#! \\param MODULE_DEPENDS (optional) A list of Modules this plug-in depends on.\n\n#! \\param PACKAGE_DEPENDS (optional) A list of external packages this plug-in depends on.\n\n#! \\param DOXYGEN_TAGFILES (optional) Which external tag files should be available for the plugin documentation\n\n#! \\param MOC_OPTIONS (optional) Additional options to pass to the Qt MOC compiler\n\n#! \\param WARNINGS_NO_ERRORS (optional) Do not handle compiler warnings as errors\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# options\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Mark this plug-in as a testing plug-in\n\n# Don't install this plug-in\n",
        "Line" : 36,
        "CharPositionInLine" : 16
      },
      "3" : {
        "Text" : "# single value arguments\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# (required) TODO: could be generated via CMake as it is done for MITK modules already\n",
        "Line" : 44,
        "CharPositionInLine" : 21
      },
      "5" : {
        "Text" : "# multiple value arguments\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# (optional) additional public include directories\n\n# (optional)\n",
        "Line" : 49,
        "CharPositionInLine" : 30
      },
      "7" : {
        "Text" : "# -------------- All dependencies are resolved ------------------\n",
        "Line" : 85,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Compute the plugin dependencies\n",
        "Line" : 109,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#------------------------------------------------------------#\n\n#------------------ Qt Help support -------------------------#\n",
        "Line" : 112,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Create a list of Doxygen tag files from the plug-in dependencies\n",
        "Line" : 121,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# There is not necessarily a debug and release build\n",
        "Line" : 130,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# on windows there might be a Debug or Release subdirectory\n",
        "Line" : 137,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "#message(\"PLUGIN_DOXYGEN_TAGFILES: ${PLUGIN_DOXYGEN_TAGFILES}\")\n",
        "Line" : 151,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "#------------------------------------------------------------#\n\n#------------------ Create Plug-in --------------------------#\n",
        "Line" : 162,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# we install the plug-in ourselves\n",
        "Line" : 191,
        "CharPositionInLine" : 15
      },
      "16" : {
        "Text" : "#------------------------------------------------------------#\n\n#------------------ Installer support -----------------------#\n",
        "Line" : 262,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# The MITK_AUTOLOAD_TARGETS property is used in the mitkFunctionInstallAutoLoadModules\n\n# macro which expects a list of plug-in targets.\n",
        "Line" : 289,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Generate a Qt help project (index.qhp) with doxygen\n",
        "Line" : 327,
        "CharPositionInLine" : 21
      },
      "19" : {
        "Text" : "# Use a XSL transformation to get rid of the top-level entry\n",
        "Line" : 329,
        "CharPositionInLine" : 21
      },
      "20" : {
        "Text" : "# Generate the final Qt compressed help file (.qch)\n",
        "Line" : 331,
        "CharPositionInLine" : 21
      },
      "21" : {
        "Text" : "#set_source_files_properties(${qch_file} PROPERTIES GENERATED 1)\n",
        "Line" : 336,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 22
    },
    "CMake/mitkFunctionCreateProvisioningFile.cmake" : {
      "ObjectId" : "b7c5088432c31e1e733db1e8d099371ba1edb048",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#!\n\n#! \\brief Create a provisioning file\n\n#!\n\n#! \\param FILE <provisioning-file> (required) An absolute filename for\n\n#!                                 the new provisioning file.\n\n#! \\param INCLUDE <file-list> (optional) A list of additional provisioning files\n\n#!                            which should be included.\n\n#! \\param PLUGINS <plugin-list> (optional) A list of target names for which provisioning\n\n#!                              entries should be created. The entries must be valid targets or\n\n#!                              be of the form [subdir/]target_name:OFF (this is the same form as\n\n#!                              passed to the ctkMacroSetupPlugins macro) If the list is empty,\n\n#!                              all known plug-in targets (external or internal) are considered.\n\n#! \\param EXCLUDE_PLUGINS <plugin-list> (optional) A list of plug-in symbolic names which should be excluded\n\n#!                                      from the provisioning entries.\n\n#! \\param NO_INSTALL (option) Suppress the creation of an additional provisioning file suitable for packaging.\n\n#!\n\n#! This function creates a provisioning file which can be used to provision a BlueBerry\n\n#! application. The syntax of entries in the file is\n\n#! \\code\n\n#! (READ|INSTALL|START) <file-url>\n\n#! \\endcode\n\n#! READ includes the file at <file-url> and interprets it as a provisioning file, INSTALL installs <file-url>,\n\n#! and START installs and starts <file-url> as a plug-in in the framework.\n\n#!\n\n#! <p>\n\n#! For example the following provisioning file instructs the BlueBerry framework to read the entries in\n\n#! a file called SomeApp.provisioning and subsequently INSTALL and START the plug-in com.mycompany.plugin\n\n#! \\code\n\n#! READ file:///opt/etc/SomeApp.provisioning\n\n#! START file:///opt/mycompany/plugins/libcom_mycompany_plugin.so\n\n#! \\endcode\n\n#!\n\n#! <p>\n\n#! An example invocation of this macro may look like:\n\n#! \\code\n\n#! set(_my_prov_file \"${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/MyApp.provisioning\")\n\n#! set(_my_plugins\n\n#!   com.mycompany.plugin\n\n#!   org.mitk.gui.qt.extapplication\n\n#! )\n\n#! FunctionCreateProvisioningFile(FILE ${_my_prov_file} PLUGINS ${_my_plugins})\n\n#! \\endcode\n\n#!\n\n#! \\note This function will automatically create entries for all plug-in\n\n#! dependencies of the specified plug-ins.\n\n#!\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Include other provisioning files\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# get all plug-in dependencies\n",
        "Line" : 82,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# add the dependencies to the list of plug-ins\n",
        "Line" : 84,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Fill the _plugin_list variable with external and internal plug-in target names.\n",
        "Line" : 87,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Convert the plug-in symbolic names to valid target names\n",
        "Line" : 97,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Go through the list of plug-ins\n",
        "Line" : 105,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# The entry already is a valid target (either imported or declared in the current project)\n",
        "Line" : 109,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# Check if the entry if of the form \"Some/Dir/org.my.plugin:OPTION\"\n",
        "Line" : 112,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# Check if the extracted last directory entry is a valid target\n",
        "Line" : 118,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# We got a valid target, either imported or from this project.\n",
        "Line" : 124,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# Strip the last directory and filename\n",
        "Line" : 135,
        "CharPositionInLine" : 16
      },
      "12" : {
        "Text" : "# Just strip the filename\n",
        "Line" : 138,
        "CharPositionInLine" : 16
      },
      "13" : {
        "Text" : "#message(WARNING \"Ignoring unknown plug-in target \\\"${plugin}\\\" for provisioning.\")\n",
        "Line" : 159,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 14
    },
    "CMake/mitkFunctionCreateWindowsBatchScript.cmake" : {
      "ObjectId" : "0a4755b4d4432bc5668acea36d84a220a692a8ce",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/mitkFunctionEnableBuildConfiguration.cmake" : {
      "ObjectId" : "0926cffde45fab26b017cd55b3f40cb7447d8ec7",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/mitkFunctionGenerateProjectXml.cmake" : {
      "ObjectId" : "27f9b88af2357af780b72ee2f8387f8077fa9451",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Remarks: Project.xml should contains all sub-project. That way\n\n# all dashboards should submit a similar file.\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Generate XML related to the dependencies\n\n#foreach(dependency_name ${dependencies})\n\n#  set(xml_subprojects ${xml_subprojects} \"    <Dependency name=\\\"${dependency_name}\\\"/>\\n\")\n\n#endforeach()\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "CMake/mitkFunctionGetGccVersion.cmake" : {
      "ObjectId" : "381341eac0ac55705f27a9b07e1390a38dbeb7f4",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################################\n\n#\n\n#  Library:   CTK\n\n#\n\n#  Copyright (c) Kitware Inc.\n\n#\n\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n\n#  you may not use this file except in compliance with the License.\n\n#  You may obtain a copy of the License at\n\n#\n\n#      http://www.commontk.org/LICENSE\n\n#\n\n#  Unless required by applicable law or agreed to in writing, software\n\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n#  See the License for the specific language governing permissions and\n\n#  limitations under the License.\n\n#\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#! \\brief Get the gcc version\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMake/mitkFunctionGetLibrarySearchPaths.cmake" : {
      "ObjectId" : "d976646f12bdee29d9becb30da4e6255fb31965f",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#! Helper function that gets all library search paths.\n\n#!\n\n#! Usage:\n\n#!\n\n#!   mitkFunctionGetLibrarySearchPaths(search_path intermediate_dir [DEBUG|MINSIZEREL|RELWITHDEBINFO])\n\n#!\n\n#!\n\n#! The function creates the variable ${search_path}. The variable intermediate_dir contains\n\n#! paths that should be added to the search_path but should not be checked for existance,\n\n#! because the are not yet created. The option DEBUG, MINSIZEREL or RELWITHDEBINFO can be used to indicate that\n\n#! not the paths for release configuration are requested but the debug, min size release or \"release with debug info\"\n\n#! paths.\n\n#!\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Determine the Qt5 library installation prefix\n",
        "Line" : 32,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# This is a work-around. The hdf5-config.cmake file is not robust enough\n\n# to be included several times via find_pakcage calls.\n",
        "Line" : 83,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# we cannot use _find_package(Vigra) here because the vigra-config.cmake file\n\n# always includes the target-exports files without using an include guard. This\n\n# would lead to errors when another find_package(Vigra) call is processed. The\n\n# (bad) assumption here is that for the time being, only the Classification module\n\n# is using Vigra.\n",
        "Line" : 88,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# The code below is sub-optimal. It makes assumptions about\n\n# the structure of the build directories, pointed to by\n\n# the *_DIR variables. Instead, we should rely on package\n\n# specific \"LIBRARY_DIRS\" variables, if they exist.\n",
        "Line" : 104,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# If OpenCV is built within the MITK superbuild set the binary directory\n\n# according to the lib path provided by OpenCV.\n\n# In the case where an external OpenCV is provided use the binary directory\n\n#  of this OpenCV directory\n",
        "Line" : 120,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# OpenCV is built in superbuild\n",
        "Line" : 127,
        "CharPositionInLine" : 65
      },
      "7" : {
        "Text" : "# External OpenCV build is used\n",
        "Line" : 129,
        "CharPositionInLine" : 57
      },
      "8" : {
        "Text" : "###################################################################\n\n#get the search paths added by the mitkFunctionAddLibrarySearchPath\n",
        "Line" : 167,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#Release\n",
        "Line" : 180,
        "CharPositionInLine" : 11
      },
      "10" : {
        "Text" : "###############################################\n\n#sanitize all candidates and compile final list\n",
        "Line" : 186,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Special handling for \"internal\" search dirs. The intermediate directory\n\n# might not have been created yet, so we can't check for its existence.\n\n# Hence we just add it for Windows without checking.\n",
        "Line" : 199,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 12
    },
    "CMake/mitkFunctionGetMSVCVersion.cmake" : {
      "ObjectId" : "e12baec1a3de80267456a8c177af9da0d8392693",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/mitkFunctionGetVersion.cmake" : {
      "ObjectId" : "72e181e002ff036c5928c107b4a12817457e93af",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#! \\brief Extract version information from a local working copy\n\n#!\n\n#! If the source_dir variable points to a git repository, this function\n\n#! extracts the current revision hash and branch/tag name.\n\n#!\n\n#! If the source_dir variable points to a subversion repository, this\n\n#! function extracts the current svn revision.\n\n#\n\n#! The information is provided in\n\n#! <ul>\n\n#!  <li> ${prefix}_REVISION_ID The git hash or svn revision value\n\n#!  <li> ${prefix}_REVISION_NAME The git branch/tag name or empty\n\n#!  <li> ${prefix}_WC_TYPE The working copy type, one of \"local\", \"git\", or \"svn\"\n\n#! </ul>\n\n#!\n\n#! \\param source_dir The directory containing a working copy\n\n#! \\param prefix A prefix to prepend to the variables containing\n\n#!               the extracted information.\n\n#!\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# initialize variables\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# test for svn working copy\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# For backwards compatibility\n",
        "Line" : 79,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "CMake/mitkFunctionGetVersionDescription.cmake" : {
      "ObjectId" : "e8f81115a1b28830cc79a2cba19fccff683432a2",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#! \\brief Extract the version description from a local working copy\n\n#!\n\n#! If the given repository is a git repository, the functions runs the\n\n#! git rev-parse --exact-match HEAD command\n\n#!\n\n#! Information provided is stored in  ${prefix}_REVISION_DESC an is\n\n#! \\ul\n\n#!  \\li The exact tag if the HEAD of the source-tree has a tag\n\n#!  \\li the 'git describe' output, which is <latest-reachable-tag>-<#Commits>-g<SHORT-HASH>\n\n#! \\lu\n\n#! In case the working copy contains local changes, the ${prefix}_REVISION_DESC strings will contain\n\n#! a suffix [local changes]\n\n#!\n\n#! \\param source_dir The directory containing a working copy\n\n#! \\param prefix A prefix to prepent to the variables containing\n\n#!               the extracted information\n\n#!\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# initialize variable\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# the execution failed, i.e. the HEAD has no tag,\n\n# for fallback string: execute again but without the --exact-match\n",
        "Line" : 42,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# remove newline at and of the string\n",
        "Line" : 51,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 4
    },
    "CMake/mitkFunctionInstallAutoLoadModules.cmake" : {
      "ObjectId" : "979e037cbea52a4aca5c137a4d5a5faf78ac1dfb",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#! \\brief Install auto-load modules needed by plug-ins.\n\n#!\n\n#! Uses the MITK_AUTOLOAD_TARGETS target property of the plug-in\n\n#! targets to extract a list of auto-load target names which will\n\n#! be installed in the given <code>DESTINATION</code> with an appropriate\n\n#! sub-directory appended. If an entry in <code>TARGETS</code>\n\n#! is not a known target, a warning will be issued. This macro\n\n#! can also work on imported plug-in targets.\n\n#!\n\n#! \\note This macro is usually not called directly. It is indirectly\n\n#! called by a call to FunctionCreateBlueBerryApplication().\n\n#!\n\n#! \\param PLUGINS A list of plug-in targets from which installable audo-load modules are derived.\n\n#! \\param DESTINATION The install destination, e.g. \"bin\".\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Since we need to use install(FILE ...) we need to get the absolute path to the\n\n# module. This is a bit tricky and we only support Debug and Release configurations\n\n# on multi-configuration build systems.\n",
        "Line" : 45,
        "CharPositionInLine" : 14
      },
      "CommentCount" : 2
    },
    "CMake/mitkFunctionInstallCTKPlugin.cmake" : {
      "ObjectId" : "467aa4ef0f86a61c685a4fb281ef186dfa2201cf",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#! \\brief Install CTK plug-ins.\n\n#!\n\n#! Installs the given list of CTK plug-in targets in the given\n\n#! <code>DESTINATION</code>. If an entry in <code>TARGETS</code>\n\n#! is not a known target, a warning will be issued. This macro\n\n#! can also install imported plug-in targets.\n\n#!\n\n#! \\note This macro is usually not called directly. It is used in\n\n#! mitk_create_module() and mitkFunctionInstallThirdPartyCTKPlugins().\n\n#!\n\n#! \\param TARGETS (optional) A list of plug-ins (target names) to install.\n\n#! \\param DESTINATION (optional) The install destination. Defaults to \"bin/\".\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#ARCHIVE DESTINATION ${_INSTALL_DESTINATION}\n",
        "Line" : 52,
        "CharPositionInLine" : 16
      },
      "CommentCount" : 2
    },
    "CMake/mitkFunctionInstallExternalCMakeProject.cmake" : {
      "ObjectId" : "45d90242a74e9ffd9dc03452340cdf6989f47dbe",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install external projects from a super-build \"make install\"\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/mitkFunctionInstallProvisioningFiles.cmake" : {
      "ObjectId" : "62d442aaa49a592a73c58be88a91bfc4008d9e25",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/mitkFunctionInstallThirdPartyCTKPlugins.cmake" : {
      "ObjectId" : "307fc2c4c876e9ac9a57fea0a9ecfe30d5d25289",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#! \\brief Install external CTK plug-ins.\n\n#!\n\n#! Use this macro to call mitkFunctionInstallCTKPlugin() for all known\n\n#! or given external CTK plug-ins. The arguments given until a known argument name\n\n#! are treated as plug-in target names. If none are given, all known\n\n#! external plug-ins will be installed.\n\n#!\n\n#! This macro supports multiple MacOSX Bundles by checking the variable\n\n#! MACOSX_BUNDLE_NAMES. If it exists, each plug-in will be installed\n\n#! in each given bundle (under <bundle_name>/Contents/MacOS/plugins), otherwise\n\n#! it will be installed in \"bin/plugins\".\n\n#!\n\n#! Typical usage (will install all known external plug-ins):\n\n#! \\code\n\n#! FunctionInstallThirdPartyCTKPlugins()\n\n#! \\endcode\n\n#!\n\n#! To install only the org.commontk.eventadmin plug-in for example, call:\n\n#! \\code\n\n#! FunctionInstallThirdPartyCTKPlugins(org.commontk.eventadmin)\n\n#! \\endcode\n\n#!\n\n#! \\note If you provide specific plug-in names as arguments, you must\n\n#! make sure that your list includes the transitive closure of all plug-in\n\n#! dependencies. Use the ctkFunctionGetPluginDependencies() macro to obtain\n\n#! all dependencies of a specified set of plug-ins.\n\n#!\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/mitkFunctionOrganizeSources.cmake" : {
      "ObjectId" : "5a76c8d84101d544f51626456195edd6d0c0ac5a",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# this functions gets a filelist as input and looks\n\n# for corresponding h-files to add them to the project.\n",
        "Line" : 3,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# additionally files are grouped in source-groups.\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# No parameters explicitly declared here, because\n\n# we want to allow for variable argument lists, which\n\n# are later accessed by the keyword foreach(MYFILE ${ARGV})\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# output: after calling the macro, files that were found\n\n# correspondigly to the given files are stored in the\n\n# variable:\n\n# ${CORRESPONDING_H_FILES}\n\n# ${CORRESPONDING_TXX_FILES}\n\n# ${CORRESPONDING_UI_H_FILES}\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Globbed can be found in the variables\n\n# ${GLOBBED_TXX_FILES} (CURRENTLY COMMENTED OUT)\n\n# ${GLOBBED_DOX_FILES}\n",
        "Line" : 19,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#_MACRO_APPEND_TO_LIST(_ORG_SOURCE \"${CMAKE_CURRENT_SOURCE_DIR}/\")\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#_MACRO_APPEND_TO_LIST(_ORG_TXX \"${CMAKE_CURRENT_SOURCE_DIR}/\")\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#_MACRO_APPEND_TO_LIST(_ORG_HEADER \"${CMAKE_CURRENT_SOURCE_DIR}/\")\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#_MACRO_APPEND_TO_LIST(_ORG_UI \"${CMAKE_CURRENT_SOURCE_DIR}/\")\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#_MACRO_APPEND_TO_LIST(_ORG_DOC \"${CMAKE_CURRENT_SOURCE_DIR}/\")\n",
        "Line" : 63,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "#_MACRO_APPEND_TO_LIST(_ORG_QRC \"${CMAKE_CURRENT_SOURCE_DIR}/\")\n",
        "Line" : 68,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 11
    },
    "CMake/mitkFunctionSuppressWarnings.cmake" : {
      "ObjectId" : "e19c32990c66ff399836253d4e42876e97cb240c",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# suppress some warnings in VC8 about using unsafe/deprecated c functions\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# suppress also poco linker warnings\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "CMake/mitkFunctionTestPlugin.cmake" : {
      "ObjectId" : "8defbbe7518658aae865f218940adfb80209e410",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Call this macro after calling mitk_create_plugin for a test plugin\n\n# in your CMakeLists.txt\n\n#\n\n# Variables:\n\n#\n\n# - BLUEBERRY_TEST_APP contains the name of the executable which will start the OSGi framework\n\n#\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Variables:\n\n#\n\n# - BLUEBERRY_UI_TEST_APP contains the name of the executable which will start the OSGi framework\n\n# - BLUEBERRY_TEST_APP_ID contains the application id of the application to test. If empty,\n\n#                          a minimalistic default application will be started\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMake/mitkFunctionUseModules.cmake" : {
      "ObjectId" : "173e0a5a950a91c49fcd1c3e8623cd8897b0beb3",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# remove duplicates and set package components in parent scope\n",
        "Line" : 32,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# wrap the inclusion of the MITK_<pkg>_Config.cmake file in a\n\n# function to create a scope for its variables; this allows\n\n# multiple inclusions of the file in the parent scope\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#! This CMake function sets up the necessary include directories,\n\n#! linker dependencies, and compile flags for a given target which\n\n#! depends on a set of MITK modules or packages.\n\n#!\n\n#! A package argument is of the form\n\n#!\n\n#!   [PUBLIC|PRIVATE|INTERFACE] PACKAGE[|COMPONENT1[+COMPONENT2]...]\n\n#!\n\n#! where PACKAGE is the package name (e.g. VTK) and components are\n\n#! the names of required package components or libraries.\n\n#!\n\n#! If a dependency is not available, an error is thrown.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The target name (required)\n",
        "Line" : 74,
        "CharPositionInLine" : 23
      },
      "4" : {
        "Text" : "# MITK modules which the given TARGET uses\n\n# MITK packages which the given TARGET uses\n",
        "Line" : 78,
        "CharPositionInLine" : 23
      },
      "5" : {
        "Text" : "# Sanity checks\n",
        "Line" : 86,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Iterate over all module dependencies\n",
        "Line" : 97,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Parse package dependencies\n",
        "Line" : 112,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Some package config files like MITK_Qt5_Config.cmake rely on a\n\n# properly set \"MODULE_NAME\" variable for the current target.\n",
        "Line" : 116,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Read all package information\n",
        "Line" : 119,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Don't remove \"duplicats\" because ALL_LIBRARIES may be of the form:\n\n# \"general;bla;debug;blad;general;foo;debug;food\"\n",
        "Line" : 142,
        "CharPositionInLine" : 10
      },
      "11" : {
        "Text" : "# Compile definitions are always added \"PRIVATE\" to avoid multiple definitions\n\n# on the command line due to transitive and direct dependencies adding the\n\n# same definitions.\n",
        "Line" : 148,
        "CharPositionInLine" : 10
      },
      "CommentCount" : 12
    },
    "CMake/mitkFunctionWhitelists.cmake" : {
      "ObjectId" : "d956918f0990df1a44072c68308e323ad097ae61",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n#\n\n# mitkFunctionCreateWhitelistPaths\n\n#\n\n#! Creates advanced cache variables for setting the internal and external\n\n#! whitelist directories.\n\n#!\n\n#! USAGE:\n\n#!\n\n#! \\code\n\n#! mitkFunctionCreateWhitelistPaths(<prefix>)\n\n#! \\endcode\n\n#!\n\n#! The <prefix> parameter specifies the prefix used for the created variables\n\n#! <prefix>_WHITELISTS_INTERNAL_PATH and <prefix>_WHITELISTS_EXTERNAL_PATH.\n\n#!\n\n#! Default values:\n\n#!  <prefix>_WHITELISTS_INTERNAL_PATH = <prefix>_SOURCE_DIR/CMake/Whitelists\n\n#!  <prefix>_WHITELISTS_EXTERNAL_PATH = %HOME%/.mitk/Whitelists\n\n#!\n\n#! List of variables available after the function is called:\n\n#! - <prefix>_WHITELISTS_INTERNAL_PATH\n\n#! - <prefix>_WHITELISTS_EXTERNAL_PATH\n\n#!\n\n#! Parameters:\n\n#! \\param <prefix> The prefix of the created cache variables.\n\n#\n\n###############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################################################\n\n#\n\n# mitkFunctionFindWhitelists\n\n#\n\n#! Adds all whitelists found in specfied whitelist paths to the advanced cache\n\n#! variable <prefix>_WHITELIST as enumeration entries.\n\n#!\n\n#! USAGE:\n\n#!\n\n#! \\code\n\n#! mitkFunctionFindWhitelists(<prefix>)\n\n#! \\endcode\n\n#!\n\n#! The <prefix> parameter specifies the prefix used for the created\n\n#! cache variable <prefix>_WHITELIST. Its default value is \"None\".\n\n#! The function mitkFunctionCreateWhitelistPaths must be called\n\n#! with the same <prefix> prior to this function.\n\n#!\n\n#! Whitelists are *.cmake files which set the two list variables\n\n#! enabled_modules and enabled_plugins.\n\n#!\n\n#! List of variables available after the function is called:\n\n#! - <prefix>_WHITELIST\n\n#!\n\n#! \\sa mitkFunctionCreateWhitelistPaths\n\n#!\n\n#! Parameters:\n\n#! \\param <prefix> The prefix of the created cache variable.\n\n#\n\n###############################################################################\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###############################################################################\n\n#\n\n# mitkFunctionWhitelistModules\n\n#\n\n#! Only enables modules which are present in the currently set whitelist or\n\n#! all modules if no whitelist is specified at all.\n\n#!\n\n#! USAGE:\n\n#!\n\n#! \\code\n\n#! set(<modules>\n\n#!   ModuleDir\n\n#!   AnotherModuleDir\n\n#!   ...\n\n#! )\n\n#! mitkFunctionWhitelistModules(<prefix> <modules>)\n\n#! \\endcode\n\n#!\n\n#! The <prefix> parameter specifies the prefix used to get the\n\n#! currently set whitelist from <prefix>_WHITELIST. Both functions\n\n#! mitkFunctionCreateWhitelistPaths and mitkFunctionFindWhitelists\n\n#! must be called with the same <prefix> prior to this function.\n\n#! The <modules> list must contain the module directory names instead\n\n#! of the module names itself, as the entries are used in\n\n#! add_directory calls.\n\n#!\n\n#! \\sa mitkFunctionCreateWhitelistPaths\n\n#! \\sa mitkFunctionFindWhitelists\n\n#!\n\n#! Parameters:\n\n#! \\param <prefix> The prefix of the white list cache variable.\n\n#! \\param <modules> The module directory list variable.\n\n#\n\n###############################################################################\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###############################################################################\n\n#\n\n# mitkFunctionWhitelistPlugins\n\n#\n\n#! Only enables plugins which are present in the currently set whitelist or\n\n#! all plugins if no whitelist is specified at all.\n\n#!\n\n#! USAGE:\n\n#!\n\n#! \\code\n\n#! set(<plugins>\n\n#!   org.example.plugin:OFF\n\n#!   org.example.another.plugin:ON\n\n#!   ...\n\n#! )\n\n#! mitkFunctionWhitelistPlugins(<prefix> <plugins>)\n\n#! \\endcode\n\n#!\n\n#! The <prefix> parameter specifies the prefix used to get the\n\n#! currently set whitelist from <prefix>_WHITELIST. Both functions\n\n#! mitkFunctionCreateWhitelistPaths and mitkFunctionFindWhitelists\n\n#! must be called with the same <prefix> prior to this function.\n\n#! The <plugins> list must contain the plugin names. This function\n\n#! removes plugins not found in the currently set whitelist from\n\n#! the <plugins> variable. Note that plugins which are OFF by\n\n#! default are not switched on.\n\n#!\n\n#! \\sa mitkFunctionCreateWhitelistPaths\n\n#! \\sa mitkFunctionFindWhitelists\n\n#!\n\n#! Parameters:\n\n#! \\param <prefix> The prefix of the white list cache variable.\n\n#! \\param <plugins> The plugin list variable to be modified.\n\n#\n\n###############################################################################\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "CMake/mitkInstallRules.cmake" : {
      "ObjectId" : "c07ba835cf4c7cec18789588db497f43cba4e9a5",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install MITK icon and logo\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Install Qt plugins\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Install platform-specific Qt plugins\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Install platform-specific Qt styles\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Install Qt WebEngine\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Translations are included in the Resources directory of\n\n# QtWebEngineCore.framework and are installed by default.\n",
        "Line" : 67,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Install MatchPoint binaries that are not auto-detected\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# IMPORTANT: Restore default install destination! Do not edit this file beyond this line!\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "CMake/mitkLanguageOptions.cmake" : {
      "ObjectId" : "50284ce61166e15269d29611a54a408044dda65d",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# This module finds the languages supported by MITK, and\n\n# present the option to enable support.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# This script is based on SimpleITK scripts.\n\n#\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Macro to set \"_QUIET\" and \"_QUIET_LIBRARY\" based on the first\n\n# argument being defined and true, to either REQUIRED or QUIET.\n\n#\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Setup the option for each language\n\n#\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#-----------------------------------------------------------\n\n# Python\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Debian \"jessie\" has this additional variable required to match\n\n# python versions.\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "CMake/mitkMacroConfigureItkPixelTypes.cmake" : {
      "ObjectId" : "ae63ee4b79e25a4e6234698720e0f86252a48293",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------\n\n# Configuration of the buid-in MITK pixel types\n\n#-----------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# create a list of types for template instantiations of itk image access functions\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# concatenate only the simple pixel types to the MITK_ACCESSBYITK_PIXEL_TYPE_SEQ list\n\n# see Bug 12682 for detailed information\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# separate processing of the COMPOSITE list to avoid its concatenation to the global list\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# separate processing of the VECTOR list to avoid its concatenation to the global list\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "CMake/mitkMacroCreateCTKPlugin.cmake" : {
      "ObjectId" : "c9e80e7bbabc2d2f976eaaf06f5809eee38fac40",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/mitkMacroCreateDefaultTests.cmake" : {
      "ObjectId" : "5a5f87dd04b37e7fa0c6cb84ff7d740e95766853",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create TestDriver and default tests for MITK\n\n#\n\n# CMake variables used:\n\n#\n\n# ${${KITNAME}_GUI_TESTS} : filenames of all tests that run without a parameter\n\n# ${${KITNAME}_IMAGE_GUI_TESTS : filenames of all tests that run with an image filename as parameter\n\n# ${${KITNAME}_TESTS} : filenames of all tests that run without a parameter\n\n# ${${KITNAME}_IMAGE_TESTS : filenames of all tests that run with an image filename as parameter\n\n# ${${KITNAME}_TESTIMAGES} : list of images passed as parameter for the IMAGE_TESTS\n\n# ${${KITNAME}_CUSTOM_TESTS} : filenames of custom tests which are just added to the TestDriver. Execution\n\n#                              of these has to be specified manually with the ADD_TEST CMake command.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add tests which need a GUI if it is not disabled\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#\n\n# Create the TestDriver binary which contains all the tests.\n\n#\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#\n\n# Now tell CMake which tests should be run. This is done automatically\n\n# for all tests in ${KITNAME}_TESTS and ${KITNAME}_IMAGE_TESTS. The IMAGE_TESTS\n\n# are run for each image in the TESTIMAGES list.\n\n#\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# todo: maybe search other paths as well\n\n# yes, please in mitk/Testing/Data, too\n",
        "Line" : 51,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 5
    },
    "CMake/mitkMacroCreateExecutable.cmake" : {
      "ObjectId" : "b5138cddc001ec2f7cc583bf6b47723ce089c422",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##################################################################\n\n#\n\n# MITK_CREATE_EXECUTABLE\n\n#\n\n#! Creates an executable with MITK dependencies and batch files\n\n#! for proper application start-up.\n\n#!\n\n#! USAGE:\n\n#!\n\n#! \\code\n\n#! MITK_CREATE_EXECUTABLE( [<exectuableName>]\n\n#!     [DEPENDS <modules we need>]\n\n#!     [PACKAGE_DEPENDS <packages we need, like ITK, VTK, QT>]\n\n#!     [INCLUDE_DIRS <list of additional include directories>]\n\n#!     [TARGET_DEPENDS <list of additional dependencies>\n\n#!     [WARNINGS_NO_ERRORS]\n\n#! \\endcode\n\n#!\n\n#! \\param EXECUTABLE_NAME The name for the new executable target\n\n##################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# version number, e.g. \"1.2.0\"\n\n# file name of a CMake file setting source list variables\n\n# (defaults to files.cmake)\n\n# a description for the executable\n",
        "Line" : 24,
        "CharPositionInLine" : 29
      },
      "2" : {
        "Text" : "# list of CDash labels\n\n# additional include dirs\n\n# list of modules this module depends on\n\n# list of \"packages\" this module depends on (e.g. Qt, VTK, etc.)\n\n# list of CMake targets this executable should depend on\n\n# list of additional libraries linked to this executable\n\n# (optional) list of cpp files\n",
        "Line" : 31,
        "CharPositionInLine" : 29
      },
      "3" : {
        "Text" : "# do not create CppMicroServices initialization code\n\n# do not create a feature info by calling add_feature_info()\n\n# do not create batch files on Windows\n\n# do not treat compiler warnings as errors\n",
        "Line" : 41,
        "CharPositionInLine" : 29
      },
      "4" : {
        "Text" : "# Add meta dependencies (e.g. on auto-load modules from depending modules)\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Create batch and VS user files for Windows platforms\n",
        "Line" : 82,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "CMake/mitkMacroCreateModuleTests.cmake" : {
      "ObjectId" : "762eff6ba6320ef757e7eea3611f30b73844b933",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Create tests and testdriver for this module\n\n#\n\n# Usage: MITK_CREATE_MODULE_TESTS( [EXTRA_DRIVER_INIT init_code]  )\n\n#\n\n# EXTRA_DRIVER_INIT is inserted as c++ code in the testdriver and will be executed before each test\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Now tell CMake which tests should be run. This is done automatically\n\n# for all tests in ${KITNAME}_TESTS and ${KITNAME}_IMAGE_TESTS. The IMAGE_TESTS\n\n# are run for each image in the TESTIMAGES list.\n\n#\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Add labels for CDash subproject support\n",
        "Line" : 54,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# add other file types here\n",
        "Line" : 66,
        "CharPositionInLine" : 43
      },
      "4" : {
        "Text" : "# todo: maybe search other paths as well\n\n# yes, please in mitk/Testing/Data, too\n",
        "Line" : 73,
        "CharPositionInLine" : 13
      },
      "5" : {
        "Text" : "# Add labels for CDash subproject support\n",
        "Line" : 83,
        "CharPositionInLine" : 15
      },
      "CommentCount" : 6
    },
    "CMake/mitkMacroEmptyExternalProject.cmake" : {
      "ObjectId" : "b0421eec1ed6086f9a7cad371ba3c2db90a564ef",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Convenient macro allowing to define a \"empty\" project in case an external one is provided\n\n# using for example <proj>_DIR.\n\n# Doing so allows to keep the external project dependency system happy.\n\n#\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/mitkMacroFindDependency.cmake" : {
      "ObjectId" : "f6c579c176f3b13d7a4255cbf42727651b632d3f",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#! Wraps a find_package call by forwarding QUIET and REQUIRED arguments\n\n#! from within the MITKConfig.cmake file.\n\n#!\n\n#!   mitkMacroFindDependency(<dep> [args])\n\n#!\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Prefer config mode first because it finds external\n\n# <proj>Config.cmake files pointed at by <proj>_DIR variables.\n\n# Otherwise, existing Find<proj>.cmake files could fail.\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "CMake/mitkMacroGenerateToolsLibrary.cmake" : {
      "ObjectId" : "5fead4656d81de393455cd4625b6a1281d8659f5",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# this won't work without the ${}, don't understand the cmake documentation\n",
        "Line" : 7,
        "CharPositionInLine" : 22
      },
      "1" : {
        "Text" : "# if used inside MITK core, we fill variables in files.cmake\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# GUI-less tools\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# construct tool name from file name\n",
        "Line" : 21,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# source file names for this tool\n",
        "Line" : 25,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# remember factory name for a central register call\n",
        "Line" : 28,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# part for Qt widgets\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# construct tool name from file name\n",
        "Line" : 40,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# source file names for this tool\n",
        "Line" : 45,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# care for additional files (should be used only with MITK external extensions)\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# in any case (GUI or non-GUI), create a shared library\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# configure one file with the itkLoad method\n",
        "Line" : 67,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# also mark this file for compilation\n",
        "Line" : 71,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# a library to wrap up everything\n\n# configure a file that contains an itkObjectFactory for this tool\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 14
    },
    "CMake/mitkMacroGetLinuxDistribution.cmake" : {
      "ObjectId" : "be354b0712316ad869d5c3fbbb307d56ac90cb69",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/mitkMacroGetPMDPlatformString.cmake" : {
      "ObjectId" : "082803eea44f0bef776d1fe99b32ef8fa3311e10",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/mitkMacroInstall.cmake" : {
      "ObjectId" : "e3b3d6ffbcf9bc697d3e7a3469e9720c206f60a0",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# MITK specific install macro\n\n#\n\n# On Mac everything is installed for each bundle listed in MACOSX_BUNDLE_NAMES\n\n# by replacing the DESTINATION parameter. Everything else is passed to the CMake INSTALL command\n\n#\n\n# Usage: MITK_INSTALL( )\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If there is a FILES_MATCHING parameter we need to make sure that the\n\n# DESTINATION parameter is located in front of it.\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Fix _target_location\n\n# This is used in several install macros\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "CMake/mitkMacroInstallHelperApp.cmake" : {
      "ObjectId" : "f72bf92379eab3a753b6bff378568ed62db59eff",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#! MITK specific cross plattform install macro\n\n#!\n\n#! Usage: MITK_INSTALL_HELPER_APP(target1 [target2] ....)\n\n#!\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO: how to supply to correct intermediate directory??\n\n# CMAKE_CFG_INTDIR is not expanded to actual values inside the install(CODE \"...\") macro ...\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Remove the rpath from helper applications. We assume that all dependencies\n\n# are installed into the same location as the helper application.\n",
        "Line" : 56,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# install everything, see bug 7143\n",
        "Line" : 79,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : "#--------------------------------------------------------------------------------\n\n# install a qt.conf file\n\n# this inserts some cmake code into the install script to write the file\n",
        "Line" : 92,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 5
    },
    "CMake/mitkMacroInstallTargets.cmake" : {
      "ObjectId" : "dbe1367269c41cae810bf90df9ef97b951b4a0e5",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# MITK specific cross plattform install macro\n\n#\n\n# Usage: MITK_INSTALL_TARGETS(target1 [target2] ....)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO: how to supply the correct intermediate directory??\n\n# CMAKE_CFG_INTDIR is not expanded to actual values inside the install(CODE \"...\") macro ...\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# install everything, see bug 7143\n",
        "Line" : 79,
        "CharPositionInLine" : 12
      },
      "3" : {
        "Text" : "#--------------------------------------------------------------------------------\n\n# install a qt.conf file\n\n# this inserts some cmake code into the install script to write the file\n",
        "Line" : 94,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 4
    },
    "CMake/mitkMacroMultiplexPicType.cmake" : {
      "ObjectId" : "d95bb505014742b29656ed899dfec5d7101422f0",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# MITK_MULTIPLEX_PICTYPE: generate separated source files for different\n\n# data types to reduce memory consumption of compiler during template\n\n# instantiation\n\n#\n\n# Param \"file\" should be named like mitkMyAlgo-TYPE.cpp\n\n# in the file, every occurence of @TYPE@ is replaced by the\n\n# datatype. For each datatype, a new file mitkMyAlgo-datatype.cpp\n\n# is generated and added to CPP_FILES_GENERATED.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# create filename for destination\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "CMake/mitkPackageTest.cmake" : {
      "ObjectId" : "6471278a3e1c1cdbaa31189d98c5b45ca9f05492",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#package testing\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# package testing in windows only for release\n",
        "Line" : 6,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# NOT MITK_FAST_TESTING\n",
        "Line" : 24,
        "CharPositionInLine" : 10
      },
      "CommentCount" : 3
    },
    "CMake/mitkSWIGConfigurePythonfileBuildtime.cmake" : {
      "ObjectId" : "87391853f456e49ffe2a9c2e82bfa19ad65d202d",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#file(GLOB_RECURSE TARGET_LIBRARY_FILE ${MITK_CMAKE_RUNTIME_OUTPUT_DIRECTORY}/*/${MITK_BINARY_MODULE})\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#mitkFunctionGetLibrarySearchPaths(MITK_RUNTIME_PATH release)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMake/mitkSetupCPack.cmake" : {
      "ObjectId" : "a41e91e798f0767687097c409efce24af740f4bd",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# First, set the generator variable\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set Redistributable information for windows\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Visual Studio 2017 already comes with redistributable installers.\n\n# Try to find the right one.\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# On windows set default install directory appropriately for 32 and 64 bit\n\n# installers if not already set\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# By default, do not warn when built on machines using only VS Express\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# include required mfc libraries\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# tell cpack to strip all debug symbols from all files\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# set version\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# determine possible system specific extension\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "CMake/mitkSwigAddLibraryDependencies.cmake" : {
      "ObjectId" : "bdcf1bffa9acc496f7a6685a67e708c1cd37b583",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#! This CMake macro adds the necessary library and incllude\n\n#! directories to a swig-project.\n\n#!\n\n#! params:\n\n#!  swig_module : Name of the SWIG module, for example pyMITK\n\n#!  library_names : Semicolon separated list of the libraries that are included, for example \"MitkCore;mbilog\"\n\n#!\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# function inspired by\n\n# https://stackoverflow.com/questions/37205274/swig-and-cmake-make-use-of-information-provided-by-target-include-directories\n\n# This function tells cmake which additional dependencies are existing\n\n# especially with respect to the linker dependencies.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Adding each library as a linker dependency:\n",
        "Line" : 16,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Extracting all include directories from each given project and\n\n# then including these directories to the newly created swig project.\n",
        "Line" : 18,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Checking each given librarie to include all includes from this library.\n",
        "Line" : 23,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# In addition include python dependencies:\n",
        "Line" : 27,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "CMake/mitkSwigPrepareFiles.cmake" : {
      "ObjectId" : "7e74d24aff4da903b342b587e8ef0de4ffec23dd",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This function is used to prepare all includes and files\n\n# that are necessary for a general swig project. \n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Ensure that the input file is parsed as a c++ file. This is done via \n\n# an additional source file property. \n",
        "Line" : 5,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# This variable is used to add additional parameters to SWIG. \n\n# Using a list is necessary in order to be able to pass multiple parameters\n\n# which are given as optional parameters to the input file. \n",
        "Line" : 9,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Extracting all include directories from each given project and\n\n# then including these directories to the newly created swig project. \n",
        "Line" : 15,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Adding each include path as an additional swig parameter using \n\n# the swig-option \"-I\":\n",
        "Line" : 20,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# export variable to parent scope\n",
        "Line" : 27,
        "CharPositionInLine" : 12
      },
      "6" : {
        "Text" : "# Add the Common Folder to the include system of SWIG\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# This is necessary, because SWIG hard-codeds the integer size. See\n\n# https://github.com/swig/swig/issues/568\n",
        "Line" : 37,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Set the additional parameters to the input project file:\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# In addition include python dependencies:\n",
        "Line" : 47,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Add additional include paths, for example to the common files:\n",
        "Line" : 51,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 11
    },
    "CMake/mitkTargetLinkLibrariesWithDynamicLookup.cmake" : {
      "ObjectId" : "941d25044ed7ce2cd2512926522b391315a010b8",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n#\n\n# Public Functions\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# The following functions are defined:\n\n#\n\n# .. cmake:command:: mitk_target_link_libraries_with_dynamic_lookup\n\n#\n\n# ::\n\n#\n\n#     mitk_target_link_libraries_with_dynamic_lookup(<Target> [<Libraries>])\n\n#\n\n#\n\n# Useful to \"weakly\" link a loadable module. For example, it should be used\n\n# when compiling a loadable module when the symbols should be resolve from\n\n# the run-time environment where the module is loaded, and not a specific\n\n# system library.\n\n#\n\n# Like proper linking, except that the given ``<Libraries>`` are not necessarily\n\n# linked. Instead, the ``<Target>`` is produced in a manner that allows for\n\n# symbols unresolved within it to be resolved at runtime, presumably by the\n\n# given ``<Libraries>``.  If such a target can be produced, the provided\n\n# ``<Libraries>`` are not actually linked.\n\n#\n\n# It links a library to a target such that the symbols are resolved at\n\n# run-time not link-time.\n\n#\n\n# The linker is checked to see if it supports undefined\n\n# symbols when linking a shared library. If it does then the library\n\n# is not linked when specified with this function.\n\n#\n\n# On platforms that do not support weak-linking, this function works just\n\n# like ``mitk_target_link_libraries``.\n\n#\n\n# .. note::\n\n#\n\n#     For OSX it uses ``undefined dynamic_lookup``. This is similar to using\n\n#     ``-shared`` on Linux where undefined symbols are ignored.\n\n#\n\n#     For more details, see `blog <http://blog.tim-smith.us/2015/09/python-extension-modules-os-x/>`_\n\n#     from Tim D. Smith.\n\n#\n\n#\n\n# .. cmake:command:: mitk_check_dynamic_lookup\n\n#\n\n# Check if the linker requires a command line flag to allow leaving symbols\n\n# unresolved when producing a target of type ``<TargetType>`` that is\n\n# weakly-linked against a dependency of type ``<LibType>``.\n\n#\n\n# ``<TargetType>``\n\n#   can be one of \"STATIC\", \"SHARED\", \"MODULE\", or \"EXE\".\n\n#\n\n# ``<LibType>``\n\n#   can be one of \"STATIC\", \"SHARED\", or \"MODULE\".\n\n#\n\n# Long signature:\n\n#\n\n# ::\n\n#\n\n#     mitk_check_dynamic_lookup(<TargetType>\n\n#                          <LibType>\n\n#                          <ResultVar>\n\n#                          [<LinkFlagsVar>])\n\n#\n\n#\n\n# Short signature:\n\n#\n\n# ::\n\n#\n\n#     mitk_check_dynamic_lookup(<ResultVar>) # <TargetType> set to \"MODULE\"\n\n#                                       # <LibType> set to \"SHARED\"\n\n#\n\n#\n\n# The result is cached between invocations and recomputed only when the value\n\n# of CMake's linker flag list changes; ``CMAKE_STATIC_LINKER_FLAGS`` if\n\n# ``<TargetType>`` is \"STATIC\", and ``CMAKE_SHARED_LINKER_FLAGS`` otherwise.\n\n#\n\n#\n\n# Defined variables:\n\n#\n\n# ``<ResultVar>``\n\n#   Whether the current C toolchain supports weak-linking for target binaries of\n\n#   type ``<TargetType>`` that are weakly-linked against a dependency target of\n\n#   type ``<LibType>``.\n\n#\n\n# ``<LinkFlagsVar>``\n\n#   List of flags to add to the linker command to produce a working target\n\n#   binary of type ``<TargetType>`` that is weakly-linked against a dependency\n\n#   target of type ``<LibType>``.\n\n#\n\n# ``HAS_DYNAMIC_LOOKUP_<TargetType>_<LibType>``\n\n#   Cached, global alias for ``<ResultVar>``\n\n#\n\n# ``DYNAMIC_LOOKUP_FLAGS_<TargetType>_<LibType>``\n\n#   Cached, global alias for ``<LinkFlagsVar>``\n\n#\n\n#\n\n# Private Functions\n\n# ^^^^^^^^^^^^^^^^^\n\n#\n\n# The following private functions are defined:\n\n#\n\n# .. warning:: These functions are not part of the scikit-build API. They\n\n#     exist purely as an implementation detail and may change from version\n\n#     to version without notice, or even be removed.\n\n#\n\n#     We mean it.\n\n#\n\n#\n\n# .. cmake:command:: _get_target_type\n\n#\n\n# ::\n\n#\n\n#     _get_target_type(<ResultVar> <Target>)\n\n#\n\n#\n\n# Shorthand for querying an abbreviated version of the target type\n\n# of the given ``<Target>``.\n\n#\n\n# ``<ResultVar>`` is set to:\n\n#\n\n# - \"STATIC\" for a STATIC_LIBRARY,\n\n# - \"SHARED\" for a SHARED_LIBRARY,\n\n# - \"MODULE\" for a MODULE_LIBRARY,\n\n# - and \"EXE\" for an EXECUTABLE.\n\n#\n\n# Defined variables:\n\n#\n\n# ``<ResultVar>``\n\n#   The abbreviated version of the ``<Target>``'s type.\n\n#\n\n#\n\n# .. cmake:command:: _test_weak_link_project\n\n#\n\n# ::\n\n#\n\n#     _test_weak_link_project(<TargetType>\n\n#                             <LibType>\n\n#                             <ResultVar>\n\n#                             <LinkFlagsVar>)\n\n#\n\n#\n\n# Attempt to compile and run a test project where a target of type\n\n# ``<TargetType>`` is weakly-linked against a dependency of type ``<LibType>``:\n\n#\n\n# - ``<TargetType>`` can be one of \"STATIC\", \"SHARED\", \"MODULE\", or \"EXE\".\n\n# - ``<LibType>`` can be one of \"STATIC\", \"SHARED\", or \"MODULE\".\n\n#\n\n# Defined variables:\n\n#\n\n# ``<ResultVar>``\n\n#   Whether the current C toolchain can produce a working target binary of type\n\n#   ``<TargetType>`` that is weakly-linked against a dependency target of type\n\n#   ``<LibType>``.\n\n#\n\n# ``<LinkFlagsVar>``\n\n#   List of flags to add to the linker command to produce a working target\n\n#   binary of type ``<TargetType>`` that is weakly-linked against a dependency\n\n#   target of type ``<LibType>``.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Two signatures are supported:\n",
        "Line" : 429,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#\n\n# mitk_check_dynamic_lookup(<ResultVar>)\n\n#\n",
        "Line" : 432,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#\n\n# mitk_check_dynamic_lookup(<TargetType>\n\n#                      <LibType>\n\n#                      <ResultVar>\n\n#                      [<LinkFlagsVar>])\n\n#\n",
        "Line" : 441,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# hash the CMAKE_FLAGS passed and check cache to know if we need to rerun\n",
        "Line" : 478,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "CMake/mitkTestPluginGenerator.cmake" : {
      "ObjectId" : "cf63eeefe3749fa04b348415a377f2aa19c8d9c6",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Means GenerateProject (use a short name due to Windows limitations)\n",
        "Line" : 3,
        "CharPositionInLine" : 15
      },
      "1" : {
        "Text" : "# Only test packaging if build type is \"Release\" on Windows\n",
        "Line" : 87,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Only test packaging if build type is \"Release\" on Windows\n",
        "Line" : 94,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 3
    },
    "CMake/mitkTestProjectTemplate.cmake" : {
      "ObjectId" : "ebcdaf8679d9bf39ef3757a72fa61d957a557006",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Means ProjectTemplate (use a short name due to Windows limitations)\n",
        "Line" : 5,
        "CharPositionInLine" : 15
      },
      "1" : {
        "Text" : "# Only test packaging if build type is \"Release\" on Windows\n",
        "Line" : 88,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Only test packaging if build type is \"Release\" on Windows\n",
        "Line" : 95,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 3
    },
    "CMakeExternals/ACVD.cmake" : {
      "ObjectId" : "f011a241eaf193e39ed1ce667b393b63d4d3aa32",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# ACVD\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sanity checks\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "CMakeExternals/ANN.cmake" : {
      "ObjectId" : "fc9e20ab7553a9c9437287fe05e988d1c253f261",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# ANN\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sanity checks\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "CMakeExternals/BetData.cmake" : {
      "ObjectId" : "f511435b0e96b0db9dd748dc2ef2875c8bb9521d",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Brain Extraction Data\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sanity checks\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMakeExternals/Boost-post_install-APPLE.cmake" : {
      "ObjectId" : "0ae85b93318d8fed4564224a2b3a2f07f1b460de",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMakeExternals/Boost-post_install-WIN32.cmake" : {
      "ObjectId" : "4a54f4d2a68419f05579a02074591c254cb6cbc9",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMakeExternals/Boost-pre_download.cmake" : {
      "ObjectId" : "3d1c9fda3a2547f9468dbb30b8dfabfef2d8baef",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMakeExternals/Boost.cmake" : {
      "ObjectId" : "0fd9f0ecd3dc9cc9919338ceac38e99952828d95",
      "LastModified" : "2019-04-11T09:33:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Boost\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[[ Sanity checks ]]",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#[[ Reset variables. ]]",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#[[ If you update Boost, make sure that the FindBoost module of the minimum\n      required version of CMake supports the new version of Boost.\n\n      In case you are using a higher version of CMake, download at least the\n      source code of the minimum required version of CMake to look into the\n      right version of the FindBoost module:\n\n        <CMAKE_INSTALL_DIR>/share/cmake-<VERSION>/Modules/FindBoost.cmake\n\n      Search for a list called _Boost_KNOWN_VERSIONS. If the new version is\n      not included in this list, you have three options:\n\n        * Update the minimum required version of CMake. This may require\n          adaptions of other parts of our CMake scripts and has the most\n          impact on other MITK developers. Yet this is the safest and\n          cleanest option.\n\n        * Set Boost_ADDITIONAL_VERSIONS (see the documentation of the\n          FindBoost module). As Boost libraries and dependencies between\n          them are hard-coded in the FindBoost module only for known versions,\n          this may cause trouble for other MITK developers relying on new\n          components of Boost or components with changed dependencies.\n\n        * Copy a newer version of the FindBoost module into our CMake\n          directory. Our CMake directory has a higher precedence than the\n          default CMake module directory. Doublecheck if the minimum required\n          version of CMake is able to process the newer version of the\n          FindBoost module. Also, DO NOT FORGET to mention this option right\n          above the call of cmake_minimum_required() in the top-level\n          CMakeLists.txt file AND in this file right above the set(url)\n          command below so if we update the minimum required version of CMake\n          or use another option in the future, we do not forget to remove our\n          copy of the FindBoost module again. ]]",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#[[ See Task T25540 for details. Can be removed with Boost version greater\n        1.68. In case the patch fails a \"cd .\" is executed to force the return\n        return value to be 0 (success). We need this because we reuse the\n        extracted source files and patching an already patched file returns\n        an error code that we can ignore. ]]",
        "Line" : 69,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#[[ Boost has a two-step build process. In the first step, a bootstrap\n         script is called to build b2, an executable that is used to actually\n         build Boost in the second step.\n\n         The bootstrap script expects a toolset (compiler) argument that is\n         used to build the b2 executable. The scripts and their expected\n         argument format differ between Windows and Unix. ]]",
        "Line" : 81,
        "CharPositionInLine" : 5
      },
      "6" : {
        "Text" : "#[[ Use just the major version in the toolset name. ]]",
        "Line" : 95,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "#[[ There is no generic way of deducing the Boost toolset from the\n            current minor version of Visual Studio 2017. All we can do for now\n            is to assume that for all versions greater than 14.10 and less\n            than 15.0 toolset vc141 is the right choice. ]]",
        "Line" : 100,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "#[[ Fallback to the generic case. Be prepared to add another elseif\n            branch above for future versions of Visual Studio. ]]",
        "Line" : 108,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "#[[ We support GCC and Clang on Unix. On macOS, the toolset must be set\n          to darwin. The actual compiler for all of these toolkits is set\n          further below, after the bootstrap script but before b2. ]]",
        "Line" : 116,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "#[[ At least give it a shot if the toolset is something else and let\n          the bootstrap script decide on the toolset by not passing any\n          argument. ]]",
        "Line" : 132,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "#[[ The call of b2 is more complex. b2 arguments are grouped into options\n        and properties. Options follow the standard format for arguments while\n        properties are plain key-value pairs. ]]",
        "Line" : 138,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "#[[ Build independent of any site.config file ]]",
        "Line" : 145,
        "CharPositionInLine" : 27
      },
      "13" : {
        "Text" : "#[[ Stop at first error ]]",
        "Line" : 146,
        "CharPositionInLine" : 9
      },
      "14" : {
        "Text" : "#[[ Specify the macOS platform SDK to be used. ]]",
        "Line" : 151,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "#[[ test -e ./b2 || ]]",
        "Line" : 191,
        "CharPositionInLine" : 24
      },
      "16" : {
        "Text" : "#[[ We already told Boost if we want to use GCC or Clang but so far we\n          were not able to specify the exact same compiler we set in CMake\n          when configuring the MITK superbuild for the first time.\n          For example, this can be different from the system default\n          when multiple versions of the same compiler are installed\n          at the same time.\n\n          The bootstrap script creates a configuration file for b2 that should\n          be modified if necessary before b2 is called.\n          We look for a line like\n\n            using gcc ;\n\n          and replace it with something more specific like\n\n            using gcc : : /usr/bin/gcc-7.3 ;\n\n          We use the stream editor sed for the replacement but as macOS is\n          based on BSD Unix, we use the limited but portable BSD syntax\n          instead of the more powerful GNU syntax. We also use | instead of\n          the more commonly used / separator for sed because the replacement\n          contains slashes. ]]",
        "Line" : 194,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "#[[ \"cd .\" does not work reliably ]]",
        "Line" : 234,
        "CharPositionInLine" : 24
      },
      "18" : {
        "Text" : "#[[ Do nothing ]]",
        "Line" : 238,
        "CharPositionInLine" : 32
      },
      "19" : {
        "Text" : "#[[ Do nothing ]]",
        "Line" : 242,
        "CharPositionInLine" : 36
      },
      "20" : {
        "Text" : "# test -e <INSTALL_DIR>/include/boost/config.hpp ||\n",
        "Line" : 252,
        "CharPositionInLine" : 6
      },
      "21" : {
        "Text" : "#[[ Reuse already extracted files. ]]",
        "Line" : 282,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "#[[ Move DLLs from lib to bin directory. ]]",
        "Line" : 304,
        "CharPositionInLine" : 6
      },
      "23" : {
        "Text" : "#[[ Boost does not follow the common practice of either using rpath or\n          absolute paths for referencing dependencies. We have to use the\n          install_name_tool to fix this. ]]",
        "Line" : 314,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 24
    },
    "CMakeExternals/CTK.cmake" : {
      "ObjectId" : "9bb70c18f635a0588b1ca0e1ef5fa24cfe4f0adf",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# CTK\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sanity checks\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# The CTK PluginFramework cannot cope with\n\n# a non-empty CMAKE_DEBUG_POSTFIX for the plugin\n\n# libraries yet.\n",
        "Line" : 68,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# From https://github.com/kislinsk/PythonQt.git\n",
        "Line" : 85,
        "CharPositionInLine" : 94
      },
      "CommentCount" : 4
    },
    "CMakeExternals/CppUnit.cmake" : {
      "ObjectId" : "085e5f3597439ecda390e81e8c876f4701a8404d",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# CppUnit\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sanity checks\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMakeExternals/CppUnitconfig.h.cmake" : {
      "ObjectId" : "4d7ba00387537bcf056c1025294432bdcd1707d7",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/* Inspired by config/config.h.in, config.h.cmake is used by CMake. */",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/* define if library uses std::string::compare(string,pos,n) */\n//Not used #undef FUNC_STRING_COMPARE_STRING_FIRST",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/* define to 1 if the library defines strstream */",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* Define to 1 if you have the <cmath> header file. */",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/* Define if you have the GNU dld library. */\n//Not used, dld library is obsolete anyway #undef HAVE_DLD",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/* Define to 1 if you have the `dlerror' function. */\n//Not used #undef HAVE_DLERROR",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/* Define to 1 if you have the <dlfcn.h> header file. */",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "/* Define to 1 if you have the `finite' function. */",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "/* Define to 1 if you have the `_finite' function. */",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "/* define to 1 if the compiler supports GCC C ABI name demangling */",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "/* Define to 1 if you have the <inttypes.h> header file. */\n//Not used #undef HAVE_INTTYPES_H",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "/* define if compiler has isfinite */",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "/* Define if you have the libdl library or equivalent. */",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "/* Define to 1 if you have the <memory.h> header file. */\n//Not used #undef HAVE_MEMORY_H",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "/* define to 1 if the compiler implements namespaces */",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "/* define to 1 if the compiler supports Run-Time Type Identification */",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "/* Define if you have the shl_load function. */",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "/* define to 1 if the compiler has stringstream */",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "/* Define to 1 if you have the <stdint.h> header file. */\n//Not used #undef HAVE_STDINT_H",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "/* Define to 1 if you have the <stdlib.h> header file. */\n//Not used #undef HAVE_STDLIB_H",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "/* Define to 1 if you have the <strings.h> header file. */\n//Not used #undef HAVE_STRINGS_H",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "/* Define to 1 if you have the <string.h> header file. */\n//Not used #undef HAVE_STRING_H",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "/* Define to 1 if you have the <strstream> header file. */",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "/* Define to 1 if you have the <sys/stat.h> header file. */\n//Not used #undef HAVE_SYS_STAT_H",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "/* Define to 1 if you have the <sys/types.h> header file. */\n//Not used #undef HAVE_SYS_TYPES_H",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "/* Define to 1 if you have the <unistd.h> header file. */\n//Not used #undef HAVE_UNISTD_H",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "/* Name of package */\n//Not used #undef PACKAGE",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "/* Define to the address where bug reports for this package should be sent. */\n//Not used #undef PACKAGE_BUGREPORT",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "/* Define to the full name of this package. */\n//Not used #undef PACKAGE_NAME",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "/* Define to the full name and version of this package. */\n//Not used #undef PACKAGE_STRING",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "/* Define to the one symbol short name of this package. */\n//Not used #undef PACKAGE_TARNAME",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "/* Define to the version of this package. */\n//Not used #undef PACKAGE_VERSION",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "/* Define to 1 if you have the ANSI C header files. */\n//Not used #undef STDC_HEADERS",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "/* Define to 1 to use type_info::name() for class names */",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "/* Version number of package */",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 35
    },
    "CMakeExternals/DCMQI.cmake" : {
      "ObjectId" : "40f37f6c39b4759d7f5529bb44b380fa3fb9cfff",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# DCMQI\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sanity checks\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#-DCMAKE_INSTALL_PREFIX:PATH=<INSTALL_DIR>\n",
        "Line" : 36,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "#set(${proj}_DIR ${ep_prefix})\n\n#message(${proj}_DIR: ${${proj}_DIR})\n\n#mitkFunctionInstallExternalCMakeProject(${proj})\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "CMakeExternals/DCMTK.cmake" : {
      "ObjectId" : "14a615a7b3afa99eb460b9debe9ad7154aa541f3",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# DCMTK\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sanity checks\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# see bug #9894\n",
        "Line" : 43,
        "CharPositionInLine" : 36
      },
      "3" : {
        "Text" : "# see bug #9894\n",
        "Line" : 44,
        "CharPositionInLine" : 39
      },
      "4" : {
        "Text" : "# see bug #9894\n",
        "Line" : 45,
        "CharPositionInLine" : 35
      },
      "5" : {
        "Text" : "# see bug #9894\n",
        "Line" : 46,
        "CharPositionInLine" : 37
      },
      "6" : {
        "Text" : "# see bug #9894\n",
        "Line" : 47,
        "CharPositionInLine" : 36
      },
      "7" : {
        "Text" : "# see bug #9894\n",
        "Line" : 48,
        "CharPositionInLine" : 38
      },
      "CommentCount" : 8
    },
    "CMakeExternals/Eigen.cmake" : {
      "ObjectId" : "effd8026f9ea226e76146bebe0bd8b8a4a0ba02c",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Eigen\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sanity checks\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "CMakeExternals/ExternalProjectList.cmake" : {
      "ObjectId" : "9873030a4143a2d6fdaa91278db181bf5836d5c1",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -----------------------------------------\n\n# The following external projects must be\n\n# ordered according to their\n\n# inter-dependencies\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# These are \"hard\" dependencies and always set to ON\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMakeExternals/GDCM.cmake" : {
      "ObjectId" : "dbbedac025dd938e17cd81431243a598e4dd73aa",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# GDCM\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sanity checks\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check if an external ITK build tree was specified.\n\n# If yes, use the GDCM from ITK, otherwise ITK will complain\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# On Mac some assertions fail that prevent reading certain DICOM files. Bug #19995\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "CMakeExternals/GLUT.cmake" : {
      "ObjectId" : "15cf36455ce152b65310b77bac4505a6412f66b0",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# freeglut\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sanity checks\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# add_library(GLUT SHARED IMPORTED)\n\n# set_property(TARGET GLUT PROPERTY IMPORTED_LOCATION ${GLUT_LIBRARY})\n",
        "Line" : 19,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 3
    },
    "CMakeExternals/GenerateDefaultCMakeBuildSystem.cmake" : {
      "ObjectId" : "0aa7d7df91cdf866d925db2252fe8ddc2dd9c610",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMakeExternals/HDF5.cmake" : {
      "ObjectId" : "b336c0cd5ba9a8ce383b519b5d7981a271b26b86",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# HDF5\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sanity checks\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# We might build static libs with  -DBUILD_SHARED_LIBS=0 but this conflicts with\n\n# the in ITK integrated version! So we need to go the way with dynamic libs. Too\n\n# bad :( This would be fixed by using an external HDF-Installation with ITK/VTK\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "CMakeExternals/ITK.cmake" : {
      "ObjectId" : "9bbc11a30e7ae1dc594380613bd1449da8bc516b",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# ITK\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sanity checks\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Keep the behaviour of ITK 4.3 which by default turned on ITK Review\n\n# see MITK bug #17338\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# for 4.7, the OpenJPEG is needed by review but the variable must be set\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Added Module for Wavelets\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "CMakeExternals/MITKData.cmake" : {
      "ObjectId" : "d0987a8d8b9d07835775f60b8e1b63422e5e116b",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# MITK Data\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sanity checks\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# set(revision_tag da5dd4ff) # first 8 characters of hash-tag\n\n#                  ^^^^^^^^  these are just to check correct length of hash part\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#   GIT_TAG ${revision_tag}\n\n#   URL ${MITK_THIRDPARTY_DOWNLOAD_PREFIX_URL}/mitk-data_${revision_tag}.tar.gz\n\n#   UPDATE_COMMAND \"\"\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "CMakeExternals/MatchPoint.cmake" : {
      "ObjectId" : "3c1b5f8ea5e663ee162145fb5fbf1b18c322b605",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# MatchPoint\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sanity checks\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# INSTALL_COMMAND \"${CMAKE_COMMAND} -P cmake_install.cmake\"\n",
        "Line" : 38,
        "CharPositionInLine" : 7
      },
      "3" : {
        "Text" : "#/src/ITK-build\n",
        "Line" : 45,
        "CharPositionInLine" : 35
      },
      "CommentCount" : 4
    },
    "CMakeExternals/OpenCV.cmake" : {
      "ObjectId" : "fa41a69a670a862abde23037153fafd34aacd98a",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# OpenCV\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sanity checks\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#-DBUILD_NEW_PYTHON_SUPPORT:BOOL=OFF\n",
        "Line" : 25,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# 12-05-02, muellerm, added QT usage by OpenCV if QT is used in MITK\n\n# 12-09-11, muellerm, removed automatic usage again, since this will struggle with the MITK Qt application object\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "CMakeExternals/OpenIGTLink.cmake" : {
      "ObjectId" : "c879f124d367d124221fcf15b698c3b6d2c95a4e",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# OpenIGTLink\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sanity checks\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "CMakeExternals/PCRE.cmake" : {
      "ObjectId" : "9487afb1b14ca7149ee00299b409d8151c71cf91",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#--------------------------------------------------------------------------\n\n#  PCRE (Perl Compatible Regular Expressions)\n\n#--------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Some other projects (e.g. Swig) require a pcre-config script which is not\n\n# generated when using the CMake build system.\n",
        "Line" : 16,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 2
    },
    "CMakeExternals/Poco.cmake" : {
      "ObjectId" : "9fa9bfe8211bfffccf08a05d31592d048151aa97",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Poco\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sanity checks\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "CMakeExternals/Qwt.cmake" : {
      "ObjectId" : "b397f9e0427db0d9c7ecaa6d6f3aa856a28193e6",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Qwt\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sanity checks\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMakeExternals/Raptor2.cmake" : {
      "ObjectId" : "5fed212c3eb109587e5b884ed4377ecf5193ed18",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# raptor2\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sanity checks\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMakeExternals/Rasqal.cmake" : {
      "ObjectId" : "e89464272eb841d7241db1bd04b73c141aa18934",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# rasqal\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sanity checks\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMakeExternals/Redland.cmake" : {
      "ObjectId" : "6ba7d5dac3889b5eafbbba9d8b110879ed21e593",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# redland\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sanity checks\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMakeExternals/SWIG.cmake" : {
      "ObjectId" : "40120d3dc1fe02827a236ded2fae2174b51a0602",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#------------------------------------------------------------\n\n# SWIG (Simple Wrapper Interface Generator)\n\n#-----------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We don't \"install\" SWIG in the common install prefix,\n\n# since it is only used as a tool during the MITK super-build\n\n# to generate the Python wrappings for some projects.\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# binary SWIG for windows\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# swig.exe available as pre-built binary on Windows:\n",
        "Line" : 24,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# swig uses bison find it by cmake and pass it down\n",
        "Line" : 41,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Custom install dir for SWIG\n",
        "Line" : 49,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 6
    },
    "CMakeExternals/VTK.cmake" : {
      "ObjectId" : "08ec1219e88bc6464b0fb8b54920456223799584",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# VTK\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sanity checks\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Optionally enable memory leak checks for any objects derived from vtkObject. This\n\n# will force unit tests to fail if they have any of these memory leaks.\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "CMakeExternals/Vigra.cmake" : {
      "ObjectId" : "80e0fd99eebd020c15752f1bea8abd10b5512932",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# VIGRA\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sanity checks\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# If a mac ports installation is present some imaging-io-libraries may interfere with the vigra build.\n\n# Hence, we exclude them here.\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "CMakeExternals/ZLIB.cmake" : {
      "ObjectId" : "80eb9a03ec202d57809d530474e4ddc8a4377f3e",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMakeExternals/cpprestsdk.cmake" : {
      "ObjectId" : "3e11bc1802f6fde3a4008c9fa9cc84442b1ec492",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMakeExternals/extract-Boost.replacement.cmake" : {
      "ObjectId" : "be64ccaf9a98f3633e05666b3a65fc4439588595",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMakeExternals/tinyxml.cmake" : {
      "ObjectId" : "74391bee27b37f793e21d4c14bd0a2ad07d65c0a",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# tinyxml\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sanity checks\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMakeLists.txt" : {
      "ObjectId" : "7888dc50798de65ac0d55d65c49065d0d9937fb6",
      "LastModified" : "2019-04-11T09:33:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# See https://cmake.org/cmake/help/v3.10/manual/cmake-policies.7.html for details\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Superbuild Option - Enabled by default\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# MITK Extension Feature\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Update CMake module path\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# CMake function(s) and macro(s)\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Standard CMake macros\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# MITK macros\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# includes several functions\n",
        "Line" : 66,
        "CharPositionInLine" : 38
      },
      "8" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Set a default build type if none was specified\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Set the possible values of build type for cmake-gui\n",
        "Line" : 84,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Check miminum macOS version\n\n#-----------------------------------------------------------------------------\n\n# The minimum supported macOS version is 10.13. If you use a version less than 10.13, there is no guarantee that the build still works.\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Check miminum compiler versions\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# require at least gcc 4.9 as provided by ppa:ubuntu-toolchain-r/test for Ubuntu 14.04\n",
        "Line" : 108,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# require at least clang 3.4\n",
        "Line" : 121,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# require at least clang 5.0\n",
        "Line" : 126,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# require at least Visual Studio 2017\n",
        "Line" : 131,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# This is necessary to avoid problems with compile feature checks.\n\n# CMAKE_CXX_STANDARD seems to only set the -std=c++14 flag for targets.\n\n# However, compile flag checks also need to be done with -std=c++14.\n\n# The MITK_CXX14_FLAG variable is also used for external projects\n\n# build during the MITK super-build.\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Warn if source or build path is too long\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# _src_dir_length_max - strlen(ep/src/ITK-build)\n\n# _bin_dir_length_max - strlen(MITK-build)\n",
        "Line" : 166,
        "CharPositionInLine" : 32
      },
      "19" : {
        "Text" : "# The warnings should be converted to errors\n",
        "Line" : 173,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Additional MITK Options (also shown during superbuild)\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# -----------------------------------------\n\n# General build options\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# -----------------------------------------\n\n# Qt version related variables\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Hint at default install locations of Qt\n",
        "Line" : 224,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Binary compatible to 2019\n",
        "Line" : 241,
        "CharPositionInLine" : 45
      },
      "25" : {
        "Text" : "# -----------------------------------------\n\n# Other MITK_USE_* options not related to\n\n# external projects build via the\n\n# MITK superbuild\n",
        "Line" : 288,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Build configurations\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# -----------------------------------------\n\n# Custom dependency logic\n",
        "Line" : 328,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Pixel type multiplexing\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 391,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Customize the default pixel types for multiplex macros\n",
        "Line" : 395,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# consistency checks\n",
        "Line" : 419,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Project.xml\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 459,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# A list of topologically ordered targets\n",
        "Line" : 463,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# all modules not contained in a specific subproject\n\n# all plugins not contained in a specific subproject\n",
        "Line" : 472,
        "CharPositionInLine" : 15
      },
      "34" : {
        "Text" : "# special \"subproject\" catching all unlabeled targets and tests\n",
        "Line" : 475,
        "CharPositionInLine" : 12
      },
      "35" : {
        "Text" : "# Configure CTestConfigSubProject.cmake that could be used by CTest scripts\n",
        "Line" : 478,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# those targets will be executed at the end of the ctest driver script\n\n# and they also get their own subproject label\n",
        "Line" : 483,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# Generate Project.xml file expected by the CTest driver script\n",
        "Line" : 490,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Superbuild script\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 493,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Print configuration summary\n",
        "Line" : 500,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "#*****************************************************************************\n\n#****************************  END OF SUPERBUILD  ****************************\n\n#*****************************************************************************\n",
        "Line" : 508,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# CMake function(s) and macro(s)\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 512,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Deprecated\n",
        "Line" : 554,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Global CMake variables\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 557,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Required and enabled C++14 features for all MITK code.\n\n# These are added as PUBLIC compile features to all MITK modules.\n",
        "Line" : 561,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# We can't do this yet because the CTK Plugin Framework\n\n# cannot cope with a postfix yet.\n\n#set(CMAKE_DEBUG_POSTFIX d)\n",
        "Line" : 586,
        "CharPositionInLine" : 2
      },
      "46" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Output directories.\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 591,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Make sure the directory exists\n",
        "Line" : 600,
        "CharPositionInLine" : 2
      },
      "48" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Set MITK specific options and variables (NOT available during superbuild)\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 618,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Look for optional Doxygen package\n",
        "Line" : 622,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# ASK THE USER TO SHOW THE CONSOLE WINDOW FOR CoreApp and mitkWorkbench\n",
        "Line" : 628,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# TODO: check if necessary\n",
        "Line" : 632,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# Configure pixel types used for ITK image access multiplexing\n",
        "Line" : 651,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# Configure module naming conventions\n",
        "Line" : 654,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Get MITK version info\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 661,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# MITK_VERSION\n",
        "Line" : 668,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Installation preparation\n\n#\n\n# These should be set before any MITK install macros are used\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 674,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# on macOS all BlueBerry plugins get copied into every\n\n# application bundle (.app directory) specified here\n",
        "Line" : 680,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# extract option_name\n",
        "Line" : 691,
        "CharPositionInLine" : 8
      },
      "59" : {
        "Text" : "# check if the application is enabled\n",
        "Line" : 696,
        "CharPositionInLine" : 8
      },
      "60" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Set coverage Flags\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 706,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# MITK C/CXX Flags\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 718,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# warning C4005: macro redefinition\n\n# warning C4231: nonstandard extension used : 'extern' before template explicit instantiation\n",
        "Line" : 741,
        "CharPositionInLine" : 59
      },
      "63" : {
        "Text" : "# the following line should be removed after fixing bug 17637\n",
        "Line" : 743,
        "CharPositionInLine" : 2
      },
      "64" : {
        "Text" : "# warning C4316: object alignment on heap\n\n# warning C4180: qualifier applied to function type has no meaning\n\n# warning C4251: 'identifier' : class 'type' needs to have dll-interface to be used by clients of class 'type2'\n",
        "Line" : 744,
        "CharPositionInLine" : 59
      },
      "65" : {
        "Text" : "# Apple deprecated OpenGL in macOS 10.14\n",
        "Line" : 750,
        "CharPositionInLine" : 67
      },
      "66" : {
        "Text" : "# The strict-overflow warning is generated by ITK template code\n",
        "Line" : 763,
        "CharPositionInLine" : 4
      },
      "67" : {
        "Text" : "#-Wold-style-cast\n\n#-Wsign-promo\n",
        "Line" : 767,
        "CharPositionInLine" : 4
      },
      "68" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# MITK Packages\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 791,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# We need this later for a DCMTK workaround\n",
        "Line" : 815,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# This property is populated at the top half of this file\n",
        "Line" : 818,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# Prefer config mode first because it finds external\n\n# <proj>Config.cmake files pointed at by <proj>_DIR variables.\n\n# Otherwise, existing Find<proj>.cmake files could fail.\n",
        "Line" : 827,
        "CharPositionInLine" : 6
      },
      "72" : {
        "Text" : "#we store the information because it will be overwritten by find_package\n\n#and would get lost for all EPs that use on Find<proj>.cmake instead of config\n\n#files.\n",
        "Line" : 832,
        "CharPositionInLine" : 8
      },
      "73" : {
        "Text" : "# Ensure that the MITK CMake module path comes first\n",
        "Line" : 851,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# Due to the preferred CONFIG mode in find_package calls above,\n\n# the DCMTKConfig.cmake file is read, which does not provide useful\n\n# package information. We explictly need MODULE mode to find DCMTK.\n",
        "Line" : 858,
        "CharPositionInLine" : 2
      },
      "75" : {
        "Text" : "# Help our FindDCMTK.cmake script find our super-build DCMTK\n",
        "Line" : 862,
        "CharPositionInLine" : 4
      },
      "76" : {
        "Text" : "# Use the original value\n",
        "Line" : 865,
        "CharPositionInLine" : 4
      },
      "77" : {
        "Text" : "# Due to the preferred CONFIG mode in find_package calls above,\n\n# the DCMQIConfig.cmake file is read, which does not provide useful\n\n# package information. We explictly need MODULE mode to find DCMQI.\n",
        "Line" : 872,
        "CharPositionInLine" : 2
      },
      "78" : {
        "Text" : "# Help our FindDCMQI.cmake script find our super-build DCMQI\n",
        "Line" : 875,
        "CharPositionInLine" : 4
      },
      "79" : {
        "Text" : "# Qt support\n",
        "Line" : 890,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "# at least Core required\n",
        "Line" : 892,
        "CharPositionInLine" : 61
      },
      "81" : {
        "Text" : "# Sanity checks for in-application BlueBerry plug-in help generation\n",
        "Line" : 938,
        "CharPositionInLine" : 4
      },
      "82" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Testing\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 977,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "#Rendering testing does not work for Linux nightlies, thus it is disabled per default\n\n#and activated for Mac and Windows.\n",
        "Line" : 987,
        "CharPositionInLine" : 2
      },
      "84" : {
        "Text" : "# Setup file for setting custom ctest vars\n",
        "Line" : 994,
        "CharPositionInLine" : 2
      },
      "85" : {
        "Text" : "# Initial cache for ProjectTemplate and PluginGenerator tests\n",
        "Line" : 1001,
        "CharPositionInLine" : 2
      },
      "86" : {
        "Text" : "# Configuration for the CMake-generated test driver\n",
        "Line" : 1008,
        "CharPositionInLine" : 2
      },
      "87" : {
        "Text" : "# Test the external project template\n",
        "Line" : 1031,
        "CharPositionInLine" : 2
      },
      "88" : {
        "Text" : "# Test the package target\n",
        "Line" : 1036,
        "CharPositionInLine" : 2
      },
      "89" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# MITK_SUPERBUILD_BINARY_DIR\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1042,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "# If MITK_SUPERBUILD_BINARY_DIR isn't defined, it means MITK is *NOT* build using Superbuild.\n\n# In that specific case, MITK_SUPERBUILD_BINARY_DIR should default to MITK_BINARY_DIR\n",
        "Line" : 1046,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Set C/CXX and linker flags for MITK code\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1052,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Add custom targets representing CDash subprojects\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1067,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Add subdirectories\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1077,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "# Plug-in testing (needs some work to be enabled again)\n",
        "Line" : 1107,
        "CharPositionInLine" : 2
      },
      "95" : {
        "Text" : "# Specify which plug-ins belong to this project\n",
        "Line" : 1157,
        "CharPositionInLine" : 2
      },
      "96" : {
        "Text" : "# Get infos about application directories and build options\n",
        "Line" : 1166,
        "CharPositionInLine" : 2
      },
      "97" : {
        "Text" : "# extract option_name\n",
        "Line" : 1175,
        "CharPositionInLine" : 8
      },
      "98" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Documentation\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1204,
        "CharPositionInLine" : 0
      },
      "99" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Installation\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1212,
        "CharPositionInLine" : 0
      },
      "100" : {
        "Text" : "# set MITK cpack variables\n\n# These are the default variables, which can be overwritten ( see below )\n",
        "Line" : 1217,
        "CharPositionInLine" : 0
      },
      "101" : {
        "Text" : "# Corner case if there is only one app in total\n",
        "Line" : 1249,
        "CharPositionInLine" : 2
      },
      "102" : {
        "Text" : "# Only one app is enabled (no \"build all\" flag set)\n",
        "Line" : 1252,
        "CharPositionInLine" : 2
      },
      "103" : {
        "Text" : "# Less or more then one app is enabled\n",
        "Line" : 1255,
        "CharPositionInLine" : 2
      },
      "104" : {
        "Text" : "# extract target_dir and option_name\n",
        "Line" : 1260,
        "CharPositionInLine" : 2
      },
      "105" : {
        "Text" : "# check if the application is enabled\n",
        "Line" : 1266,
        "CharPositionInLine" : 2
      },
      "106" : {
        "Text" : "# check whether application specific configuration files will be used\n",
        "Line" : 1268,
        "CharPositionInLine" : 4
      },
      "107" : {
        "Text" : "# use files if they exist\n",
        "Line" : 1270,
        "CharPositionInLine" : 6
      },
      "108" : {
        "Text" : "# add link to the list\n",
        "Line" : 1282,
        "CharPositionInLine" : 2
      },
      "109" : {
        "Text" : "# if no application specific configuration file was used, use default\n",
        "Line" : 1287,
        "CharPositionInLine" : 0
      },
      "110" : {
        "Text" : "# include CPack model once all variables are set\n",
        "Line" : 1294,
        "CharPositionInLine" : 0
      },
      "111" : {
        "Text" : "# Additional installation rules\n",
        "Line" : 1297,
        "CharPositionInLine" : 0
      },
      "112" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Last configuration steps\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1300,
        "CharPositionInLine" : 0
      },
      "113" : {
        "Text" : "# ---------------- Export targets -----------------\n",
        "Line" : 1304,
        "CharPositionInLine" : 0
      },
      "114" : {
        "Text" : "# ---------------- External projects -----------------\n",
        "Line" : 1344,
        "CharPositionInLine" : 0
      },
      "115" : {
        "Text" : "#string(REPLACE \"^^\" \";\" _mitk_external_projects ${MITK_EXTERNAL_PROJECTS})\n",
        "Line" : 1349,
        "CharPositionInLine" : 0
      },
      "116" : {
        "Text" : "# ---------------- Tools -----------------\n",
        "Line" : 1383,
        "CharPositionInLine" : 0
      },
      "117" : {
        "Text" : "# ---------------- Configure files -----------------\n",
        "Line" : 1392,
        "CharPositionInLine" : 0
      },
      "118" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# MITK Applications\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1406,
        "CharPositionInLine" : 0
      },
      "119" : {
        "Text" : "# This must come after MITKConfig.h was generated, since applications\n\n# might do a find_package(MITK REQUIRED).\n",
        "Line" : 1410,
        "CharPositionInLine" : 0
      },
      "120" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# MITK Examples\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1426,
        "CharPositionInLine" : 0
      },
      "121" : {
        "Text" : "# This must come after MITKConfig.h was generated, since applications\n\n# might do a find_package(MITK REQUIRED).\n",
        "Line" : 1431,
        "CharPositionInLine" : 2
      },
      "122" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Print configuration summary\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1436,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 123
    },
    "CTestConfig.cmake" : {
      "ObjectId" : "2abf872117bf89a9bb61919bf7820c66a90b0d46",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Documentation/CMakeLists.txt" : {
      "ObjectId" : "b71c0a8e32527b898e31b74ac0f09fa451d1acdf",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Variables:\n\n#  MITK_DOXYGEN_OUTPUT_DIR: doxygen output directory (optional)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Needed early on for redirecting the BlueBerry documentation output dir\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Compile source code snippets\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Different doxygen versions produce significantly different behaviour in the MITK documentation\n\n# especially in regards to the MITK Qt assistant help files and markdown files.\n\n# The HTML documentation is supposed to be build with Doxygen 1.8.7 or newer, the\n\n# Qt assistant QCH files are supposed to be generated with Doxygen 1.8.7 or newer.\n\n# So we check for 1.8.7 here and QCH generation support is checked in\n\n# BlueBerry/CMakeLists.txt\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This is relative to the working directory of the doxygen command\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Create QCH files for MITK and external projects\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The name of the generated MITK qch file, relative to the\n\n# Doxygen HTML output folder\n",
        "Line" : 63,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Generating ITK and VTK docs it not done yet\n\n#option(MITK_DOXYGEN_GENERATE_VTK_QCH_FILE \"Use doxygen to generate a Qt compressed help file for VTK docs\" OFF)\n\n#option(MITK_DOXYGEN_GENERATE_ITK_QCH_FILE \"Use doxygen to generate a Qt compressed help file for ITK docs\" OFF)\n\n#mark_as_advanced(MITK_DOXYGEN_GENERATE_VTK_QCH_FILE MITK_DOXYGEN_GENERATE_ITK_QCH_FILE)\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Compile a doxygen input filter for processing CMake scripts\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Configure some doxygen options\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# parse which plug-in documentation to activate\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# we want each line to end in \" \\\" and each directory be on a separate line\n",
        "Line" : 131,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# create output directories for the guides\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# convert the extension points schema files into html\n",
        "Line" : 176,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "#if(MITK_DOXYGEN_GENERATE_ITK_QCH_FILE)\n\n#  # add the command to generate the ITK documentation\n\n#  add_custom_target(doc-itk\n\n#                    COMMAND ${DOXYGEN} ${CMAKE_CURRENT_BINARY_DIR}/doxygen.itk.conf)\n\n#  add_dependencies(doc doc-itk)\n\n#endif()\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#if(MITK_DOXYGEN_GENERATE_VTK_QCH_FILE)\n\n#  # add the command to generate the VTK documentation\n\n#  add_custom_target(doc-vtk\n\n#                    COMMAND ${DOXYGEN} ${CMAKE_CURRENT_BINARY_DIR}/doxygen.vtk.conf)\n\n#  add_dependencies(doc doc-vtk)\n\n#endif()\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "Documentation/Doxygen/3-DeveloperManual/Starting/GettingToKnow/Tutorial/CMakeLists.txt" : {
      "ObjectId" : "8b137891791fe96927ad78e64b0aad7bded08bdc",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Documentation/Snippets/CMakeLists.txt" : {
      "ObjectId" : "01142e150321683de7d11fe0cee7348288ba44ac",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Annotation/CMakeLists.txt" : {
      "ObjectId" : "9b47f2ab521effa8d284b3eac0e92b6fc485458f",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Annotation/files.cmake" : {
      "ObjectId" : "b2a623392a67426941461d06b76ddf5f7beb7013",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/BlueBerryExampleLauncher/CMakeLists.txt" : {
      "ObjectId" : "e74077fe1163a3951af73f0cf8ffc4ac3fdf5a37",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# this is a workaround for Visual Studio. The relative include paths in the generated\n\n# moc files can get very long and can't be resolved by the MSVC compiler.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Create provisioning files\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Create the example launcher\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#  PLUGINS ${ALL_REQUIRED_PLUGIN_TARGETS}\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# subproject support\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Examples/BlueBerryExampleLauncher/Configurations/CustomViewer.cmake" : {
      "ObjectId" : "8341577b97d38fdaece1ac9fdf6009bed0570611",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/BlueBerryExampleLauncher/Configurations/ExamplePlugins.cmake" : {
      "ObjectId" : "8540b83658ca182bec2f522d00de132fb35024c6",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/BlueBerryExampleLauncher/Configurations/ExtensionPointDefinition.cmake" : {
      "ObjectId" : "aa5691918d65533251ecdcb3822138ef338a6edb",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/BlueBerryExampleLauncher/Configurations/MinimalApplication.cmake" : {
      "ObjectId" : "d6d30ed8fd6baf956a13e5aac419ce93143b4832",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/BlueBerryExampleLauncher/Configurations/MultiplePerspectives.cmake" : {
      "ObjectId" : "f7d468bd3c1697186408551deeb43ab71590e4ec",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/BlueBerryExampleLauncher/Configurations/SelectionServiceMITK.cmake" : {
      "ObjectId" : "aecc709ce0addb053753015cbd6aed1e497730ba",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/BlueBerryExampleLauncher/Configurations/SelectionServiceQT.cmake" : {
      "ObjectId" : "8ec723b47044c0fb4051a88353d851072a5a6462",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/BlueBerryExampleLauncher/target_libraries.cmake" : {
      "ObjectId" : "cd4c711dd5050b43bb603f6e2959bc013f361a3f",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# A list of plug-in targets which should be automatically enabled\n\n# (or be available in external projects) for this application.\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Examples/CMakeLists.txt" : {
      "ObjectId" : "e14eb0f5819447c0666c0ccf51defc8081eb10e1",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Set-up example plugins\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Specify which plug-ins belong to this project\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Add example executables\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Examples/Dump/CMakeLists.txt" : {
      "ObjectId" : "ca7227b8c3cb06bd3e5f01297ba2112de72ac329",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Dump/files.cmake" : {
      "ObjectId" : "7ac737bee11f0c7f53aabcdf86891f3ddbd6e933",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/FirstSteps/CMakeLists.txt" : {
      "ObjectId" : "1f6579406d91a69f44536729dbb7e2b06ab1d7c3",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/FirstSteps/NewModule/CMakeLists.txt" : {
      "ObjectId" : "9fd2803595f0f97217853ec7f4fdcfd81deab215",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/FirstSteps/NewModule/autoload/IO/CMakeLists.txt" : {
      "ObjectId" : "c9c1d4d72b4354c862263b1c6347453c56119273",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/FirstSteps/NewModule/autoload/IO/files.cmake" : {
      "ObjectId" : "6fdfa6212869d10bfcbcc0099939c6eec18a6901",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/FirstSteps/NewModule/cmdapps/CMakeLists.txt" : {
      "ObjectId" : "4b257e3d5c658b07ac59b8ce3e52ee9768fad845",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/FirstSteps/NewModule/files.cmake" : {
      "ObjectId" : "7bf639d033faf50f3509907d52c98ca1faedbcf9",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# DataStructures\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Examples/FirstSteps/NewModule/test/CMakeLists.txt" : {
      "ObjectId" : "153cd81e2e6e978627064a0bf18f62f938f7a9f9",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/FirstSteps/NewModule/test/files.cmake" : {
      "ObjectId" : "f365da9ce1ff86020bcae22dd0efb865b4a89863",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/MbiLog/CMakeLists.txt" : {
      "ObjectId" : "d305cf56189a64079125d91144c59fcfbdcb40ec",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/MbiLog/files.cmake" : {
      "ObjectId" : "9636f82bd1c22264f41feb04832b0fdd1e8899ab",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Plugins/PluginList.cmake" : {
      "ObjectId" : "b9d0c5d492962decee4c72ff9e86c269fb3f6b0e",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Plug-ins must be ordered according to their dependencies\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Examples/Plugins/org.mitk.example.gui.customviewer.views/CMakeLists.txt" : {
      "ObjectId" : "5f6bda694185b973971e7bc9d1c4706865c5be86",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Plugins/org.mitk.example.gui.customviewer.views/files.cmake" : {
      "ObjectId" : "bfbde590625de11a8355b24d3d84e96474e224dd",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Plugins/org.mitk.example.gui.customviewer.views/manifest_headers.cmake" : {
      "ObjectId" : "3eb20c8713983cb3778242f0604f51dddb4d2bb0",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# QmitkAbstractView\n",
        "Line" : 6,
        "CharPositionInLine" : 24
      },
      "CommentCount" : 1
    },
    "Examples/Plugins/org.mitk.example.gui.customviewer/CMakeLists.txt" : {
      "ObjectId" : "e3b690d8b2c7c26244fd1aaac8ffaceae0cc0681",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Plugins/org.mitk.example.gui.customviewer/files.cmake" : {
      "ObjectId" : "5e4540a2c9d53e52c944f9541d231bf947b08828",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Plugins/org.mitk.example.gui.customviewer/manifest_headers.cmake" : {
      "ObjectId" : "db30a2389a177dc8d6f51089f17033574c407fae",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Registers file reader factories\n",
        "Line" : 6,
        "CharPositionInLine" : 19
      },
      "1" : {
        "Text" : "# Initializes GlobalInteraction and registers MITK Core factories\n",
        "Line" : 7,
        "CharPositionInLine" : 29
      },
      "CommentCount" : 2
    },
    "Examples/Plugins/org.mitk.example.gui.extensionpointcontribution/CMakeLists.txt" : {
      "ObjectId" : "16135e0bad547f3aed3f04aa1424e8cc18ba36ca",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Plugins/org.mitk.example.gui.extensionpointcontribution/files.cmake" : {
      "ObjectId" : "9666ea12774fd31a0f2120715471f9cf8654ab13",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Plugins/org.mitk.example.gui.extensionpointcontribution/manifest_headers.cmake" : {
      "ObjectId" : "1e01c91003c7f2fb8e498dffb49cf735b4397e39",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Plugins/org.mitk.example.gui.extensionpointdefinition/CMakeLists.txt" : {
      "ObjectId" : "f390ed1b890f03a382797dd5aaab65f3d00d155c",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Plugins/org.mitk.example.gui.extensionpointdefinition/files.cmake" : {
      "ObjectId" : "a06e31030602c0d2123e1acdef667b3075b48023",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Plugins/org.mitk.example.gui.extensionpointdefinition/manifest_headers.cmake" : {
      "ObjectId" : "91ed6644a645efcf8313f7f54556f5b51f608b3f",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Plugins/org.mitk.example.gui.imaging/CMakeLists.txt" : {
      "ObjectId" : "9c8b4036f313b4b9dec091f72863216bf70d0222",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Plugins/org.mitk.example.gui.imaging/files.cmake" : {
      "ObjectId" : "a8c57e39b97cd0de4ae51e8b1d22f00ba49018ba",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Plugins/org.mitk.example.gui.imaging/manifest_headers.cmake" : {
      "ObjectId" : "6b439718eabea6c1537ee2d50af9eca111c839f5",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Plugins/org.mitk.example.gui.minimalapplication/CMakeLists.txt" : {
      "ObjectId" : "599de8238ae0f37671bde0958d2a7eea7b0f1c13",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Plugins/org.mitk.example.gui.minimalapplication/files.cmake" : {
      "ObjectId" : "558cc4bd708648bf9e73f4c4f026af5735d6a3bc",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Plugins/org.mitk.example.gui.minimalapplication/manifest_headers.cmake" : {
      "ObjectId" : "e10deb3c63a43dbf27c6c99db60ca9819035eb6f",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Plugins/org.mitk.example.gui.multipleperspectives/CMakeLists.txt" : {
      "ObjectId" : "be7b861a0d375f1eb665569733319477f5f35c68",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Plugins/org.mitk.example.gui.multipleperspectives/files.cmake" : {
      "ObjectId" : "0b6c74c4c4065cbe53cebc85e08a1daf60df3405",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Plugins/org.mitk.example.gui.multipleperspectives/manifest_headers.cmake" : {
      "ObjectId" : "c8f5f39457ec8163c8e7111358ccb861d2d184ed",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Plugins/org.mitk.example.gui.opencv/CMakeLists.txt" : {
      "ObjectId" : "3f9305da964034ba5314e5baa15487187b42fdd3",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The project name must correspond to the directory name of your plug-in\n\n# and must not contain periods.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Examples/Plugins/org.mitk.example.gui.opencv/files.cmake" : {
      "ObjectId" : "6d4570edac7572fc2b20f8d0d3d7b9d226571f1e",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Plugins/org.mitk.example.gui.opencv/manifest_headers.cmake" : {
      "ObjectId" : "2c59fae3dadcb57bf4df73a4773b3a5de855e375",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Plugins/org.mitk.example.gui.pcaexample/CMakeLists.txt" : {
      "ObjectId" : "413b21feed34f32f9817dcfb19b862976ca24d19",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Plugins/org.mitk.example.gui.pcaexample/files.cmake" : {
      "ObjectId" : "3a72da1a477256d8bd25902ff2c6f33f1789f861",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# list of resource files which can be used by the plug-in\n\n# system without loading the plug-ins shared library,\n\n# for example the icon used in the menu and tabs for the\n\n# plug-in views in the workbench\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# list of Qt .qrc files which contain additional resources\n\n# specific to this plugin\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Examples/Plugins/org.mitk.example.gui.pcaexample/manifest_headers.cmake" : {
      "ObjectId" : "f37383eaa4d4afe2c218ed8981a5b7bb36f7aad0",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Plugins/org.mitk.example.gui.regiongrowing/CMakeLists.txt" : {
      "ObjectId" : "5b90620ad8d5c10475a049c6cac45359da960f61",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Plugins/org.mitk.example.gui.regiongrowing/files.cmake" : {
      "ObjectId" : "527fc948ccdea14fdb4880205c37dd4f0705746e",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# list of resource files which can be used by the plug-in\n\n# system without loading the plug-ins shared library,\n\n# for example the icon used in the menu and tabs for the\n\n# plug-in views in the workbench\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# list of Qt .qrc files which contain additional resources\n\n# specific to this plugin\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Examples/Plugins/org.mitk.example.gui.regiongrowing/manifest_headers.cmake" : {
      "ObjectId" : "6698c3c0ec32caaf8e71529bb8b24e19d6d5daa2",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Plugins/org.mitk.example.gui.selectionservicemitk.views/CMakeLists.txt" : {
      "ObjectId" : "933cb50c16e747ea95ecf0e8fe9cb44e9a642217",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Plugins/org.mitk.example.gui.selectionservicemitk.views/files.cmake" : {
      "ObjectId" : "b74bc9f06417f220bdca64b2104dba3942a59cac",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Plugins/org.mitk.example.gui.selectionservicemitk.views/manifest_headers.cmake" : {
      "ObjectId" : "9804e1e282e1894448d209f2debd40c1b6611bca",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Plugins/org.mitk.example.gui.selectionservicemitk/CMakeLists.txt" : {
      "ObjectId" : "1b8a21763444f223ea6ac0e593e1ebf4af0b1392",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Plugins/org.mitk.example.gui.selectionservicemitk/files.cmake" : {
      "ObjectId" : "a00585cad8c32d8a98dc2e769bc3a1ba239ef7e8",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Plugins/org.mitk.example.gui.selectionservicemitk/manifest_headers.cmake" : {
      "ObjectId" : "421558643078fa3c61ec4d7e6ec31b5652076f4f",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Plugins/org.mitk.example.gui.selectionserviceqt/CMakeLists.txt" : {
      "ObjectId" : "3adbdf0b02e9cd55a6825c882919f29f52fdcdd7",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Plugins/org.mitk.example.gui.selectionserviceqt/files.cmake" : {
      "ObjectId" : "cf000c899224a69e97aa06158a7fceb41977778f",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Plugins/org.mitk.example.gui.selectionserviceqt/manifest_headers.cmake" : {
      "ObjectId" : "8f4139d85a364d0ed54935df9e3ee85850f437c2",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/QtFreeRender/CMakeLists.txt" : {
      "ObjectId" : "5fc9ccec2e00b73b78f58569d1d5f5afd595d22f",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/QtFreeRender/files.cmake" : {
      "ObjectId" : "25abca03d9ede9ef89263f032b2f30e15636c7aa",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Tutorial/CMakeLists.txt" : {
      "ObjectId" : "230332d15a712197198b13f33beb5dcf01e064ac",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Tutorial/ITKAndVTK/CMakeLists.txt" : {
      "ObjectId" : "7ae4d36f53d0646c7ceda59586573d794013bea9",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# adding additional example for mitk itk and vtk interaction\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Examples/Tutorial/ITKAndVTK/files.cmake" : {
      "ObjectId" : "626b967de0f0593764c463b08015eef945ac80b3",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Tutorial/Step1/CMakeLists.txt" : {
      "ObjectId" : "73e22ad9add36bf9f119117a074b7c645e89f582",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Tutorial/Step1/files.cmake" : {
      "ObjectId" : "f737b9bdaabf4761d9b97819d207b3d33ac2e225",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Tutorial/Step2/CMakeLists.txt" : {
      "ObjectId" : "73e22ad9add36bf9f119117a074b7c645e89f582",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Tutorial/Step2/files.cmake" : {
      "ObjectId" : "228aaba31f4abae54dfaef870a60bc55510abb5e",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Tutorial/Step3/CMakeLists.txt" : {
      "ObjectId" : "73e22ad9add36bf9f119117a074b7c645e89f582",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Tutorial/Step3/files.cmake" : {
      "ObjectId" : "92387dd3f92d59b01d9647cd12ebfb0691ab237d",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Tutorial/Step4/CMakeLists.txt" : {
      "ObjectId" : "73e22ad9add36bf9f119117a074b7c645e89f582",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Tutorial/Step4/files.cmake" : {
      "ObjectId" : "97d991f2517a848ff357cb557a0ba1475f4d52c7",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Tutorial/Step5/CMakeLists.txt" : {
      "ObjectId" : "73e22ad9add36bf9f119117a074b7c645e89f582",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Tutorial/Step5/files.cmake" : {
      "ObjectId" : "37b77371ccf966ac91c23ea61f92a875f76855a0",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Tutorial/Step6/CMakeLists.txt" : {
      "ObjectId" : "14f5b14c0fa220f755e8f0c38e2d535dfe99c829",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Tutorial/Step6/files.cmake" : {
      "ObjectId" : "51e4db201174fab8d4f1cb4611645e022652fe24",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Tutorial/Step7/CMakeLists.txt" : {
      "ObjectId" : "0bb009bb25fec1d94e5565f5e9ac4e42c087feaa",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Tutorial/Step7/files.cmake" : {
      "ObjectId" : "72cf47060e1ad9d3bd284b541d0ba2a282eab11c",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Tutorial/Step8/CMakeLists.txt" : {
      "ObjectId" : "c52a311f4b836059dd73c7b48d67f45cace68ae9",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Tutorial/Step8/files.cmake" : {
      "ObjectId" : "1be2ec21f74e3cd61ba38279b73f37b7300c5ef6",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/AlgorithmsExt/CMakeLists.txt" : {
      "ObjectId" : "ade2b4f93c6ec8ee81ffc6fe22be5d65a1bfcebe",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/AlgorithmsExt/files.cmake" : {
      "ObjectId" : "3e8bacd12d855726ed17be9711f6dcb5820d4f6c",
      "LastModified" : "2019-04-11T11:36:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/AlgorithmsExt/test/CMakeLists.txt" : {
      "ObjectId" : "4b2f4f5be62df47e1476260682a3451f98c0a5bd",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/AlgorithmsExt/test/files.cmake" : {
      "ObjectId" : "3701cf8540e788035a68325c75b3cda04da10972",
      "LastModified" : "2019-04-11T11:36:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Annotation/CMakeLists.txt" : {
      "ObjectId" : "2cf47f8160df5293b912320a440b0d875e828a0c",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Annotation/files.cmake" : {
      "ObjectId" : "22111606ce8f5b87a9704ce6b37d035e01cd8cc9",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Annotation/test/CMakeLists.txt" : {
      "ObjectId" : "153cd81e2e6e978627064a0bf18f62f938f7a9f9",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Annotation/test/files.cmake" : {
      "ObjectId" : "8b6efdd16349ee18d8411bac26ab38e2c90d63fd",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/AppUtil/CMakeLists.txt" : {
      "ObjectId" : "579fad9f59dd8aeac4a54d1500cddee8094bb81b",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/AppUtil/files.cmake" : {
      "ObjectId" : "28af97c3ec9aeec652b6a1504a037216ad92882f",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/BasicImageProcessing/CMakeLists.txt" : {
      "ObjectId" : "6302c23500e1e5a28087a92c7a2a9f4cde851546",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/BasicImageProcessing/MiniApps/CMakeLists.txt" : {
      "ObjectId" : "2df1db81db6624948413c5f9a68240ebdc61f4ff",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# list of miniapps\n\n# if an app requires additional dependencies\n\n# they are added after a \"^^\" and separated by \"_\"\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# extract mini app name and dependencies\n",
        "Line" : 30,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "# CPP_FILES ${appname}.cpp mitkCommandLineParser.cpp\n",
        "Line" : 43,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# On Linux, create a shell script to start a relocatable application\n",
        "Line" : 47,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# On Linux, create a shell script to start a relocatable application\n",
        "Line" : 89,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "Modules/BasicImageProcessing/files.cmake" : {
      "ObjectId" : "e6dc2c3eaf5c4c5247e38b5a3ced948bb8f340a8",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Biophotonics/CMakeLists.txt" : {
      "ObjectId" : "8b01549c66d84e6e2639ab00c1047e1b9925c9c9",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/BiophotonicsHardware/CMakeLists.txt" : {
      "ObjectId" : "29137eaf7cbd1a54b07330eff715b4cb5dedf96c",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#MITK_CREATE_MODULE(\n\n#  INCLUDE_DIRS ${MITK_BIN_DIR}\n\n#  INTERNAL_INCLUDE_DIRS ${INCLUDE_DIRS_INTERNAL}\n\n#  DEPENDS MitkOpenCVVideoSupport\n\n#  EXPORT_DEFINE MITK_TOFHARDWARE_EXPORT\n\n#  ADDITIONAL_LIBS ${ADDITIONAL_LIBS}\n\n#)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set Subfolder according to moduls\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add_subdirectories for each module\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#IF(BUILD_TESTING)\n\n#  add_subdirectory(Testing)\n\n#ENDIF(BUILD_TESTING)\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Modules/BiophotonicsHardware/SpectroCam/CMakeLists.txt" : {
      "ObjectId" : "98b72e720f2ec44bbf7aa5c917538487e569b863",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Begin SpectroCam hardware\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Find SpectroCam SDK\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#Find Jai SDK\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#     PUBLIC ${ADDITIONAL_LIBS}\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#End SpectroCam Hardware\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Modules/BiophotonicsHardware/SpectroCam/files.cmake" : {
      "ObjectId" : "18d1e3c5bb342da0bbb181151fcce82c09ad9df7",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/BoundingShape/CMakeLists.txt" : {
      "ObjectId" : "424395acba6f852a1c23045ea1b986c4c1fe1337",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/BoundingShape/files.cmake" : {
      "ObjectId" : "b14a0a8d3901c9512ca4d03052670c5c92096137",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/CEST/CMakeLists.txt" : {
      "ObjectId" : "b48bd100e034d7f7ee22366c1a63c12b1fb3598a",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/CEST/autoload/IO/CMakeLists.txt" : {
      "ObjectId" : "cb10fda5b5ea58ad9512bd409e9012f13ec450f4",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/CEST/autoload/IO/files.cmake" : {
      "ObjectId" : "68729cebf445e9ad10e5590b2cfbb31404085386",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/CEST/files.cmake" : {
      "ObjectId" : "34a71a20af14434bc6f9ea14a2abb865f1317f31",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/CEST/test/CMakeLists.txt" : {
      "ObjectId" : "153cd81e2e6e978627064a0bf18f62f938f7a9f9",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/CEST/test/files.cmake" : {
      "ObjectId" : "46c8a5ee61023f9dd53d32a02931dffe8df534c5",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/CMakeLists.txt" : {
      "ObjectId" : "b6f9fe8226832f42c7756d55f560ec1a66c0c55a",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Configure the CppMicroServices build\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Don't create a \"doc\" target and don't install the documentation files\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Don't install anything for now (we use the CMake BundleUtilities script)\n",
        "Line" : 19,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "Modules/CameraCalibration/CMakeLists.txt" : {
      "ObjectId" : "361c50a164e95da68305fcf56053f871f94789d8",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add testing dir\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Modules/CameraCalibration/Testing/CMakeLists.txt" : {
      "ObjectId" : "d45daf111db19c8ec9b0ffc1dab4f8767f0edab1",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/CameraCalibration/Testing/files.cmake" : {
      "ObjectId" : "de3106ecf17fb14877f83473cb71a37c01d0105f",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/CameraCalibration/files.cmake" : {
      "ObjectId" : "dce19b5aed6a497d60c6a39c2bf190b47bac6bb8",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Chart/CMakeLists.txt" : {
      "ObjectId" : "102806e36dc70ddde46a5d65ccb0e262c424aad1",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Chart/files.cmake" : {
      "ObjectId" : "939382e5b03526635dbfa8612b4ffcaf75ac154a",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Classification/CLCore/CMakeLists.txt" : {
      "ObjectId" : "cd84cde61eb058c7d9a5168867b9d779914545de",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_subdirectory(test)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Modules/Classification/CLCore/files.cmake" : {
      "ObjectId" : "c3ae208ff942bea8c4ef257c34fb67f8eefc70cc",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Classification/CLCore/test/CMakeLists.txt" : {
      "ObjectId" : "153cd81e2e6e978627064a0bf18f62f938f7a9f9",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Classification/CLCore/test/files.cmake" : {
      "ObjectId" : "b3c610084ed3d7f3f6797de21959402fac0e9f6c",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Classification/CLImportanceWeighting/CMakeLists.txt" : {
      "ObjectId" : "41538b3b4774d5cd654d86fa1e390b4e7f513d33",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_subdirectory(test)\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Modules/Classification/CLImportanceWeighting/files.cmake" : {
      "ObjectId" : "a0483df9b61e8e7e2051de6a61b3c88eb58349de",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Algorithms/itkLabelSampler.cpp\n\n#Algorithms/itkSmoothedClassProbabilites.cpp\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#Features/itkNeighborhoodFunctorImageFilter.cpp\n\n#mitkCLUtil.cpp\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "Modules/Classification/CLImportanceWeighting/test/CMakeLists.txt" : {
      "ObjectId" : "153cd81e2e6e978627064a0bf18f62f938f7a9f9",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Classification/CLImportanceWeighting/test/files.cmake" : {
      "ObjectId" : "6467b84c57343da5180f8ac74fd52918dc5ebd82",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#mitkSmoothedClassProbabilitesTest.cpp\n",
        "Line" : 2,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Modules/Classification/CLLibSVM/CMakeLists.txt" : {
      "ObjectId" : "ba57c7e952abaf4455a59baf2a46544223c9826a",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#DEPENDS MitkClassificationCore MitkClassificationUtilities\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Modules/Classification/CLLibSVM/files.cmake" : {
      "ObjectId" : "289b6dcbe7e8f123bf1ebf5830da432963813715",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Classification/CLLibSVM/test/CMakeLists.txt" : {
      "ObjectId" : "b4f2e87ef64ea1224d6853f0535c8094e0075e72",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Classification/CLLibSVM/test/files.cmake" : {
      "ObjectId" : "51f31d7be403c09925851d3a7dd425d2adf454a4",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Classification/CLMRUtilities/CMakeLists.txt" : {
      "ObjectId" : "ba273c3c7415ec09453d6bf122bd8b4e5f813bad",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Classification/CLMRUtilities/files.cmake" : {
      "ObjectId" : "ed64828332ed961526dac7ecc99f64649f43d02d",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Classification/CLMRUtilities/test/CMakeLists.txt" : {
      "ObjectId" : "b4f2e87ef64ea1224d6853f0535c8094e0075e72",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Classification/CLMRUtilities/test/files.cmake" : {
      "ObjectId" : "cafe0f504fe1c960267f8ae29f377d0679a5e17e",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#mitkSmoothedClassProbabilitesTest.cpp\n\n#mitkGlobalFeaturesTest.cpp\n",
        "Line" : 2,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Modules/Classification/CLMiniApps/CMakeLists.txt" : {
      "ObjectId" : "0bb6f5e560eed6185b0384558e865a06883396cd",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# list of miniapps\n\n# if an app requires additional dependencies\n\n# they are added after a \"^^\" and separated by \"_\"\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "#    RandomForestPrediction^^MitkCLVigraRandomForest\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# extract mini app name and dependencies\n",
        "Line" : 46,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# CPP_FILES ${appname}.cpp mitkCommandLineParser.cpp\n",
        "Line" : 59,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# On Linux, create a shell script to start a relocatable application\n",
        "Line" : 63,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# This mini app does not depend on mitkDiffusionImaging at all\n",
        "Line" : 105,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# On Linux, create a shell script to start a relocatable application\n",
        "Line" : 113,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 7
    },
    "Modules/Classification/CLUtilities/CMakeLists.txt" : {
      "ObjectId" : "20f197740bd295b6d00efb81472324672f5e96da",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Classification/CLUtilities/files.cmake" : {
      "ObjectId" : "64e037b845708df01b383f49aa74ca62c8b10cba",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Classification/CLUtilities/test/CMakeLists.txt" : {
      "ObjectId" : "b4f2e87ef64ea1224d6853f0535c8094e0075e72",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Classification/CLUtilities/test/files.cmake" : {
      "ObjectId" : "579c0e0670edf85c6845c25ab957e96187aab073",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#mitkSmoothedClassProbabilitesTest.cpp\n\n#mitkGlobalFeaturesTest.cpp\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Modules/Classification/CLVigraRandomForest/CMakeLists.txt" : {
      "ObjectId" : "7fd5788e78f3c73cd19c0b77030e399c3baa7b0c",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#AUTOLOAD_WITH MitkCore\n",
        "Line" : 3,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Modules/Classification/CLVigraRandomForest/files.cmake" : {
      "ObjectId" : "358f417862f35468c02ed74cf400f007def37e31",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Classification/CLVigraRandomForest/test/CMakeLists.txt" : {
      "ObjectId" : "b4f2e87ef64ea1224d6853f0535c8094e0075e72",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Classification/CLVigraRandomForest/test/files.cmake" : {
      "ObjectId" : "3f04b16d081db16cddd5452c27a25c466ec0ea3f",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Classification/CMakeLists.txt" : {
      "ObjectId" : "0de91abd414492ba2caf7ccf77df63205df2893c",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Classification/DataCollection/CMakeLists.txt" : {
      "ObjectId" : "709794098d6586fd05806474ac75c71cfe9ecb14",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#<-- module name\n",
        "Line" : 1,
        "CharPositionInLine" : 34
      },
      "1" : {
        "Text" : "#<-- sub-folders of module\n",
        "Line" : 3,
        "CharPositionInLine" : 58
      },
      "2" : {
        "Text" : "# MitkLegacyIO #<-- modules on which your module depends on\n",
        "Line" : 5,
        "CharPositionInLine" : 19
      },
      "CommentCount" : 3
    },
    "Modules/Classification/DataCollection/Testing/CMakeLists.txt" : {
      "ObjectId" : "06d83bd7b943ea6ae3c2e9068310f479f7e86afe",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n#  mitkAddCustomModuleTest(\"mitkClassificationTest\"\n\n#    \"mitkClassificationTest\" \"Param....\")\n\n#\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Modules/Classification/DataCollection/Testing/files.cmake" : {
      "ObjectId" : "5dda63c97311b5c852b8720fe2ce46369356d0b5",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  mitkDataCollectionFromXMLTest.cpp\n\n#  mitkDataCollectionImageIteratorTest.cpp\n\n#  mitkDataCollectionBySuffix.cpp\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Modules/Classification/DataCollection/files.cmake" : {
      "ObjectId" : "6ae049e2a700067b51ee0d1abe565fe587b74f02",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/CommandLine/CMakeLists.txt" : {
      "ObjectId" : "716f6988711725bfcb1e47579d84a71502127891",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/CommandLine/files.cmake" : {
      "ObjectId" : "18618b684a45f8f5c625d07da31e27c893ab232b",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/ContourModel/CMakeLists.txt" : {
      "ObjectId" : "b52388f2ec6b3587bf5858579534150873828000",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# AUTOLOAD_WITH MitkCore TODO: Create IO Submodule and autoload that one instead.\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Modules/ContourModel/Testing/CMakeLists.txt" : {
      "ObjectId" : "263e5733408248bd0b6328f48db34e8a982051bf",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#mitkAddCustomModuleTest(mitkSegmentationInterpolationTest mitkSegmentationInterpolationTest ${MITK_DATA_DIR}/interpolation_test_manual.nrrd ${MITK_DATA_DIR}/interpolation_test_result.nrrd)\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Modules/ContourModel/Testing/files.cmake" : {
      "ObjectId" : "8d8021a143bcc03dfad5bffc605a7b11bc32b799",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/ContourModel/files.cmake" : {
      "ObjectId" : "89b6f0a7a425cc4e0b84e5ad4638911fd0025b78",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Core/CMakeLists.txt" : {
      "ObjectId" : "7dd2c80b0ecaf037e3664ede6d96e931c27f53a4",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# temporary suppress warnings in the following files until image accessors are fully integrated.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We privately use/link all ITK modules in order to support all IO, Transform, etc.\n\n# factories from ITK which are registered \"automatically\" via a factory manager.\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Do not automatically create CppMicroServices initialization code.\n\n# Because the VTK 6 \"auto-init\" functionality injects file-local static\n\n# initialization code in every cpp file which includes a VTK header,\n\n# static initialization order becomes an issue again. For the Mitk\n\n# core library, we need to ensure that the VTK static initialization stuff\n\n# happens before the CppMicroServices initialization, since the latter\n\n# might already use VTK code which needs to access VTK object factories.\n\n# Hence, CppMicroServices initialization code is placed manually within\n\n# the mitkCoreActivator.cpp file.\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# In MITK_ITK_Config.cmake, we do *not* include ITK_USE_FILE, which\n\n# prevents multiple registrations/unregistrations of ITK IO factories\n\n# during library loading/unloading (of MITK libraries). However, we need\n\n# \"one\" place where the IO factories are registered at\n\n# least once. This could be the application executable, but every executable would\n\n# need to take care of that itself. Instead, we allow the auto registration in the\n\n# Mitk Core library.\n",
        "Line" : 37,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# We manually add the define which will be of target scope. MITK\n\n# patches ITK_USE_FILE to remove the directory scoped compile\n\n# definition since it would be propagated to other targets in the\n\n# same directory scope but these targets might want to *not*\n\n# use the ITK factory manager stuff.\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "Modules/Core/TestingHelper/CMakeLists.txt" : {
      "ObjectId" : "a94c4819e3a7f7101b6236542e98c5d52a01d9c4",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Core/TestingHelper/files.cmake" : {
      "ObjectId" : "6e96a4b477b3456257531ad058d2fea1d6cf5126",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Core/files.cmake" : {
      "ObjectId" : "7b481c1ce2d9f35511d7db797bbe6a592ab6c3dc",
      "LastModified" : "2019-04-08T11:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# specializations of GenericLookupTable\n",
        "Line" : 109,
        "CharPositionInLine" : 38
      },
      "1" : {
        "Text" : "#Rendering/mitkGLMapper.cpp Moved to deprecated LegacyGL Module\n",
        "Line" : 272,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#Rendering/mitkSurfaceGLMapper2D.cpp Moved to deprecated LegacyGL Module\n",
        "Line" : 284,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "Modules/Core/test/CMakeLists.txt" : {
      "ObjectId" : "0e4dbdc2775bf4a646ff878c6e9ead8e0f382b71",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The core tests need relaxed compiler flags...\n\n# TODO fix core tests to compile without these additional no-error flags\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# disable deprecated warnings (they would lead to errors)\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "### since the rendering test's do not run in ubuntu, yet, we build them only for other systems or if the user explicitly sets the variable MITK_ENABLE_RENDERING_TESTING\n",
        "Line" : 77,
        "CharPositionInLine" : 36
      },
      "3" : {
        "Text" : "#input image to load in data storage\n",
        "Line" : 79,
        "CharPositionInLine" : 77
      },
      "4" : {
        "Text" : "#corresponding reference screenshot\n",
        "Line" : 80,
        "CharPositionInLine" : 111
      },
      "5" : {
        "Text" : "#test for standard Pic3D axial slice\n",
        "Line" : 82,
        "CharPositionInLine" : 87
      },
      "6" : {
        "Text" : "#input image to load in data storage\n",
        "Line" : 83,
        "CharPositionInLine" : 56
      },
      "7" : {
        "Text" : "#corresponding reference screenshot\n",
        "Line" : 84,
        "CharPositionInLine" : 107
      },
      "8" : {
        "Text" : "#test for color property (=blue) Pic3D sagittal slice\n",
        "Line" : 86,
        "CharPositionInLine" : 101
      },
      "9" : {
        "Text" : "#input image to load in data storage\n",
        "Line" : 87,
        "CharPositionInLine" : 56
      },
      "10" : {
        "Text" : "#corresponding reference screenshot\n",
        "Line" : 88,
        "CharPositionInLine" : 116
      },
      "11" : {
        "Text" : "#test for levelwindow property (=blood) #Pic3D sagittal slice\n",
        "Line" : 90,
        "CharPositionInLine" : 109
      },
      "12" : {
        "Text" : "#input image to load in data storage\n",
        "Line" : 91,
        "CharPositionInLine" : 56
      },
      "13" : {
        "Text" : "#corresponding reference #screenshot\n",
        "Line" : 92,
        "CharPositionInLine" : 123
      },
      "14" : {
        "Text" : "#mitkAddCustomModuleTest(mitkImageVtkMapper2D_pic3dOpacity640x480 mitkImageVtkMapper2DOpacityTest #test for opacity (=0.5) Pic3D coronal slice\n\n#                        ${MITK_DATA_DIR}/Pic3D.nrrd #input image to load in data storage\n\n#                        -V ${MITK_DATA_DIR}/RenderingTestData/ReferenceScreenshots/pic3dOpacity640x480REF.png corresponding reference screenshot\n\n#)\n",
        "Line" : 94,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "#test for a randomly chosen Pic3D swivelled slice\n",
        "Line" : 98,
        "CharPositionInLine" : 99
      },
      "16" : {
        "Text" : "#input image to load in data storage\n",
        "Line" : 99,
        "CharPositionInLine" : 56
      },
      "17" : {
        "Text" : "#corresponding reference screenshot\n",
        "Line" : 100,
        "CharPositionInLine" : 113
      },
      "18" : {
        "Text" : "#input point set to load in data storage\n",
        "Line" : 103,
        "CharPositionInLine" : 79
      },
      "19" : {
        "Text" : "#corresponding reference screenshot\n",
        "Line" : 104,
        "CharPositionInLine" : 113
      },
      "20" : {
        "Text" : "#input point set and image to load in data storage\n",
        "Line" : 107,
        "CharPositionInLine" : 112
      },
      "21" : {
        "Text" : "#corresponding reference screenshot\n",
        "Line" : 108,
        "CharPositionInLine" : 123
      },
      "22" : {
        "Text" : "#input point set to load in data storage\n",
        "Line" : 111,
        "CharPositionInLine" : 80
      },
      "23" : {
        "Text" : "#corresponding reference screenshot\n",
        "Line" : 112,
        "CharPositionInLine" : 122
      },
      "24" : {
        "Text" : "#input point set to load in data storage\n",
        "Line" : 115,
        "CharPositionInLine" : 80
      },
      "25" : {
        "Text" : "#corresponding reference screenshot\n",
        "Line" : 116,
        "CharPositionInLine" : 130
      },
      "26" : {
        "Text" : "# Currently not working on windows because of a rendering timing issue\n\n# see bug 18083 for details\n",
        "Line" : 118,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# BUG 18695 - tests deactivated, because win 32 bit continuous renders images slightly different. TODO!\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#Test reslice interpolation\n\n#note: nearest mode is already tested by swivel test\n\n#mitkAddCustomModuleTest(ResliceInterpolationIsLinear mitkImageVtkMapper2DResliceInterpolationPropertyTest\n\n#                        1 #linear\n\n#                        ${MITK_DATA_DIR}/Pic3D.nrrd\n\n#                        -V\n\n#                        ${MITK_DATA_DIR}/RenderingTestData/ReferenceScreenshots/pic3dRefLinear.png #corresponding reference screenshot LINEAR\n\n#)\n",
        "Line" : 128,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "#mitkAddCustomModuleTest(ResliceInterpolationIsCubic mitkImageVtkMapper2DResliceInterpolationPropertyTest\n\n#                        3 #cubic\n\n#                        ${MITK_DATA_DIR}/Pic3D.nrrd\n\n#                        -V\n\n#                        ${MITK_DATA_DIR}/RenderingTestData/ReferenceScreenshots/pic3dRefCubic.png #corresponding reference screenshot CUBIC\n\n#)\n\n#End test reslice interpolation\n",
        "Line" : 137,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# Testing of the rendering of binary images\n\n#mitkAddCustomModuleTest(mitkImageVtkMapper2D_binaryTestImage640x480 mitkImageVtkMapper2DTest #test for standard Pic3D axial slice\n\n#                        ${MITK_DATA_DIR}/RenderingTestData/binaryImage.nrrd #input image to load in data storage\n\n#                        -V ${MITK_DATA_DIR}/RenderingTestData/ReferenceScreenshots/binaryImage640x480REF.png #corresponding reference screenshot\n\n#)\n\n#mitkAddCustomModuleTest(mitkImageVtkMapper2D_binaryTestImageWithRef640x480 mitkImageVtkMapper2DTest #test for standard Pic3D axial slice\n\n#                        ${MITK_DATA_DIR}/Pic3D.nrrd ${MITK_DATA_DIR}/RenderingTestData/binaryImage.nrrd #input image to load in data storage\n\n#                        -V ${MITK_DATA_DIR}/RenderingTestData/ReferenceScreenshots/binaryImageWithRef640x480REF.png #corresponding reference screenshot\n\n#)\n\n# End of binary image tests\n",
        "Line" : 145,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "#corresponding reference screenshot\n",
        "Line" : 158,
        "CharPositionInLine" : 116
      },
      "32" : {
        "Text" : "#corresponding reference screenshot\n",
        "Line" : 163,
        "CharPositionInLine" : 135
      },
      "33" : {
        "Text" : "#corresponding reference screenshot\n",
        "Line" : 168,
        "CharPositionInLine" : 142
      },
      "34" : {
        "Text" : "############################## DISABLED TESTS\n",
        "Line" : 171,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "#corresponding reference screenshot\n",
        "Line" : 175,
        "CharPositionInLine" : 130
      },
      "36" : {
        "Text" : "#mitkAddCustomModuleTest(mitkImageTest_color2DImage mitkImageTest\n\n#                        ${MITK_DATA_DIR}/NrrdWritingTestImage.jpg\n\n#)\n",
        "Line" : 178,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "#mitkAddCustomModuleTest(mitkNodeDependentPointSetInteractorTest mitkNodeDependentPointSetInteractorTest\n\n#                        ${MITK_DATA_DIR}/Pic3D.pic.gz ${MITK_DATA_DIR}/BallBinary30x30x30.pic.gz\n\n#)\n",
        "Line" : 182,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "#input image to load in data storage\n",
        "Line" : 187,
        "CharPositionInLine" : 56
      },
      "39" : {
        "Text" : "#corresponding reference screenshot\n",
        "Line" : 188,
        "CharPositionInLine" : 121
      },
      "40" : {
        "Text" : "# mitkImageVtkMapper2D_pic3dOpacity640x480\n",
        "Line" : 193,
        "CharPositionInLine" : 6
      },
      "41" : {
        "Text" : "# TARGET ${TESTDRIVER}\n",
        "Line" : 200,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 42
    },
    "Modules/Core/test/files.cmake" : {
      "ObjectId" : "0b6664b2a21003ed5c5650b3413b938c22da56e9",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# tests with no extra command line parameter\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# IMPORTANT: If you plan to deactivate / comment out a test please write a bug number to the commented out line of code.\n\n#\n\n#     Example: #mitkMyTest #this test is commented out because of bug 12345\n\n#\n\n# It is important that the bug is open and that the test will be activated again before the bug is closed. This assures that\n\n# no test is forgotten after it was commented out. If there is no bug for your current problem, please add a new one and\n\n# mark it as critical.\n",
        "Line" : 3,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "################## DISABLED TESTS #################################################\n\n#mitkAbstractTransformGeometryTest.cpp #seems as tested class mitkExternAbstractTransformGeometry doesnt exist any more\n\n#mitkStateMachineContainerTest.cpp #rewrite test, indirect since no longer exported Bug 14529\n\n#mitkRegistrationBaseTest.cpp #tested class  mitkRegistrationBase doesn't exist any more\n\n#mitkSegmentationInterpolationTest.cpp #file doesn't exist!\n\n#mitkPipelineSmartPointerCorrectnessTest.cpp #file doesn't exist!\n\n#mitkITKThreadingTest.cpp #test outdated because itk::Semaphore was removed from ITK\n\n#mitkAbstractTransformPlaneGeometryTest.cpp #mitkVtkAbstractTransformPlaneGeometry doesn't exist any more\n\n#mitkTestUtilSharedLibrary.cpp #Linker problem with this test...\n\n#mitkTextOverlay2DSymbolsRenderingTest.cpp #Implementation of the tested feature is not finished yet. Ask Christoph or see bug 15104 for details.\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "################# RUNNING TESTS ###################################################\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#mitkFileWriterRegistryTest.cpp\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#since mitkInteractionTestHelper is currently creating a vtkRenderWindow\n",
        "Line" : 130,
        "CharPositionInLine" : 37
      },
      "6" : {
        "Text" : "#new rendering test in CppUnit style\n",
        "Line" : 131,
        "CharPositionInLine" : 33
      },
      "7" : {
        "Text" : "# comparisons/consistency 2D/3D\n",
        "Line" : 132,
        "CharPositionInLine" : 35
      },
      "8" : {
        "Text" : "# test with image filename as an extra command line parameter\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#only runs on images\n",
        "Line" : 140,
        "CharPositionInLine" : 32
      },
      "10" : {
        "Text" : "#only runs on images\n",
        "Line" : 141,
        "CharPositionInLine" : 28
      },
      "11" : {
        "Text" : "#only runs on surfaces\n",
        "Line" : 145,
        "CharPositionInLine" : 31
      },
      "12" : {
        "Text" : "# list of images for which the tests are run\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Currently not working on windows because of a rendering timing issue\n\n# see bug 18083 for details\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "Modules/CppMicroServices/CMakeLists.txt" : {
      "ObjectId" : "afcc73d72ee47e8120ce3e78aa084e5629943a2b",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Update CMake module path\n\n#------------------------------------------------------------------------------\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# CMake function(s) and macro(s)\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Init output directories\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Set a default build type if none was specified\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set the possible values of build type for cmake-gui\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# CMake options\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Determine if we are being build inside a larger project\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Determine the name of the install component for \"SDK\" artifacts.\n\n# The default is \"sdk\"\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# US C/CXX Flags\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Set C++ compiler flags\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# With older versions of gcc the flag -fstack-protector-all requires an extra dependency to libssp.so.\n\n# If the gcc version is lower than 4.4.0 and the build type is Release let's not include the flag.\n",
        "Line" : 192,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Enable visibility support (only for gcc >= 4.5)\n\n# We only support hidden visibility with gcc for now.\n\n#\n\n# Clang has troubles with correctly marking template declarations and explicit template\n\n# instantiations as exported across shared library boundaries. Specifically, comparing\n\n# type_info objects from STL types does not work (used in us::Any::Type() == typeid(std::string))\n\n# which could be related to the default visibility of STL types declared in libstdc++ and/or libc++\n\n# but also to using RTLD_LOCAL or RTLD_GLOBAL when loading shared libraries via dlopen().\n\n#\n\n# See http://comments.gmane.org/gmane.comp.compilers.clang.scm/50028\n\n# and http://llvm.org/bugs/show_bug.cgi?id=10113\n\n#\n",
        "Line" : 198,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# US Link Flags\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# US Header Checks\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Source directory\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 351,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Configure CppMicroServicesConfig.cmake for the build tree.\n\n# The file is used in sub-directories.\n",
        "Line" : 357,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Documentation\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 381,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Last configuration and install steps\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 387,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Version information\n",
        "Line" : 391,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Configure CppMicroServicesConfig.cmake for the install tree\n",
        "Line" : 424,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 20
    },
    "Modules/CppMicroServices/CTestConfig.cmake" : {
      "ObjectId" : "65ff58f092e83e1970e39721701fd772e7136ed2",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(CTEST_NIGHTLY_START_TIME \"23:00:00 EDT\")\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(CTEST_DROP_METHOD \"http\")\n\n#set(CTEST_DROP_SITE \"my.cdash.org\")\n\n#set(CTEST_DROP_LOCATION \"/submit.php?project=${CTEST_PROJECT_NAME}\")\n\n#set(CTEST_DROP_SITE_CDASH TRUE)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Modules/CppMicroServices/cmake/CMakePackageConfigHelpers.cmake" : {
      "ObjectId" : "26f6cc264fc2c82840d729fd954487cd369df956",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - CONFIGURE_PACKAGE_CONFIG_FILE(), WRITE_BASIC_PACKAGE_VERSION_FILE()\n\n#\n\n#    CONFIGURE_PACKAGE_CONFIG_FILE(<input> <output> INSTALL_DESTINATION <path>\n\n#                                                   [PATH_VARS <var1> <var2> ... <varN>]\n\n#                                                   [NO_SET_AND_CHECK_MACRO]\n\n#                                                   [NO_CHECK_REQUIRED_COMPONENTS_MACRO])\n\n#\n\n# CONFIGURE_PACKAGE_CONFIG_FILE() should be used instead of the plain\n\n# configure_file() command when creating the <Name>Config.cmake or <Name>-config.cmake\n\n# file for installing a project or library. It helps making the resulting package\n\n# relocatable by avoiding hardcoded paths in the installed Config.cmake file.\n\n#\n\n# In a FooConfig.cmake file there may be code like this to make the\n\n# install destinations know to the using project:\n\n#   set(FOO_INCLUDE_DIR   \"@CMAKE_INSTALL_FULL_INCLUDEDIR@\" )\n\n#   set(FOO_DATA_DIR   \"@CMAKE_INSTALL_PREFIX@/@RELATIVE_DATA_INSTALL_DIR@\" )\n\n#   set(FOO_ICONS_DIR   \"@CMAKE_INSTALL_PREFIX@/share/icons\" )\n\n#   ...logic to determine installedPrefix from the own location...\n\n#   set(FOO_CONFIG_DIR  \"${installedPrefix}/@CONFIG_INSTALL_DIR@\" )\n\n# All 4 options shown above are not sufficient, since the first 3 hardcode\n\n# the absolute directory locations, and the 4th case works only if the logic\n\n# to determine the installedPrefix is correct, and if CONFIG_INSTALL_DIR contains\n\n# a relative path, which in general cannot be guaranteed.\n\n# This has the effect that the resulting FooConfig.cmake file would work poorly\n\n# under Windows and OSX, where users are used to choose the install location\n\n# of a binary package at install time, independent from how CMAKE_INSTALL_PREFIX\n\n# was set at build/cmake time.\n\n#\n\n# Using CONFIGURE_PACKAGE_CONFIG_FILE() helps. If used correctly, it makes the\n\n# resulting FooConfig.cmake file relocatable.\n\n# Usage:\n\n#   1. write a FooConfig.cmake.in file as you are used to\n\n#   2. insert a line containing only the string \"@PACKAGE_INIT@\"\n\n#   3. instead of set(FOO_DIR \"@SOME_INSTALL_DIR@\"), use set(FOO_DIR \"@PACKAGE_SOME_INSTALL_DIR@\")\n\n#      (this must be after the @PACKAGE_INIT@ line)\n\n#   4. instead of using the normal configure_file(), use CONFIGURE_PACKAGE_CONFIG_FILE()\n\n#\n\n# The <input> and <output> arguments are the input and output file, the same way\n\n# as in configure_file().\n\n#\n\n# The <path> given to INSTALL_DESTINATION must be the destination where the FooConfig.cmake\n\n# file will be installed to. This can either be a relative or absolute path, both work.\n\n#\n\n# The variables <var1> to <varN> given as PATH_VARS are the variables which contain\n\n# install destinations. For each of them the macro will create a helper variable\n\n# PACKAGE_<var...>. These helper variables must be used\n\n# in the FooConfig.cmake.in file for setting the installed location. They are calculated\n\n# by CONFIGURE_PACKAGE_CONFIG_FILE() so that they are always relative to the\n\n# installed location of the package. This works both for relative and also for absolute locations.\n\n# For absolute locations it works only if the absolute location is a subdirectory\n\n# of CMAKE_INSTALL_PREFIX.\n\n#\n\n# By default configure_package_config_file() also generates two helper macros,\n\n# set_and_check() and check_required_components() into the FooConfig.cmake file.\n\n#\n\n# set_and_check() should be used instead of the normal set()\n\n# command for setting directories and file locations. Additionally to setting the\n\n# variable it also checks that the referenced file or directory actually exists\n\n# and fails with a FATAL_ERROR otherwise. This makes sure that the created\n\n# FooConfig.cmake file does not contain wrong references.\n\n# When using the NO_SET_AND_CHECK_MACRO, this macro is not generated into the\n\n# FooConfig.cmake file.\n\n#\n\n# check_required_components(<package_name>) should be called at the end of the\n\n# FooConfig.cmake file if the package supports components.\n\n# This macro checks whether all requested, non-optional components have been found,\n\n# and if this is not the case, sets the Foo_FOUND variable to FALSE, so that the package\n\n# is considered to be not found.\n\n# It does that by testing the Foo_<Component>_FOUND variables for all requested\n\n# required components.\n\n# When using the NO_CHECK_REQUIRED_COMPONENTS option, this macro is not generated\n\n# into the FooConfig.cmake file.\n\n#\n\n# For an example see below the documentation for WRITE_BASIC_PACKAGE_VERSION_FILE().\n\n#\n\n#\n\n#  WRITE_BASIC_PACKAGE_VERSION_FILE( filename VERSION major.minor.patch COMPATIBILITY (AnyNewerVersion|SameMajorVersion|ExactVersion) )\n\n#\n\n# Writes a file for use as <package>ConfigVersion.cmake file to <filename>.\n\n# See the documentation of find_package() for details on this.\n\n#    filename is the output filename, it should be in the build tree.\n\n#    major.minor.patch is the version number of the project to be installed\n\n# The COMPATIBILITY mode AnyNewerVersion means that the installed package version\n\n# will be considered compatible if it is newer or exactly the same as the requested version.\n\n# This mode should be used for packages which are fully backward compatible,\n\n# also across major versions.\n\n# If SameMajorVersion is used instead, then the behaviour differs from AnyNewerVersion\n\n# in that the major version number must be the same as requested, e.g. version 2.0 will\n\n# not be considered compatible if 1.0 is requested.\n\n# This mode should be used for packages which guarantee backward compatibility within the\n\n# same major version.\n\n# If ExactVersion is used, then the package is only considered compatible if the requested\n\n# version matches exactly its own version number (not considering the tweak version).\n\n# For example, version 1.2.3 of a package is only considered compatible to requested version 1.2.3.\n\n# This mode is for packages without compatibility guarantees.\n\n# If your project has more elaborated version matching rules, you will need to write your\n\n# own custom ConfigVersion.cmake file instead of using this macro.\n\n#\n\n# Internally, this macro executes configure_file() to create the resulting\n\n# version file. Depending on the COMPATIBLITY, either the file\n\n# BasicConfigVersion-SameMajorVersion.cmake.in or BasicConfigVersion-AnyNewerVersion.cmake.in\n\n# is used. Please note that these two files are internal to CMake and you should\n\n# not call configure_file() on them yourself, but they can be used as starting\n\n# point to create more sophisticted custom ConfigVersion.cmake files.\n\n#\n\n#\n\n# Example using both configure_package_config_file() and write_basic_package_version_file():\n\n# CMakeLists.txt:\n\n#   set(INCLUDE_INSTALL_DIR include/ ... CACHE )\n\n#   set(LIB_INSTALL_DIR lib/ ... CACHE )\n\n#   set(SYSCONFIG_INSTALL_DIR etc/foo/ ... CACHE )\n\n#   ...\n\n#   include(CMakePackageConfigHelpers)\n\n#   configure_package_config_file(FooConfig.cmake.in ${CMAKE_CURRENT_BINARY_DIR}/FooConfig.cmake\n\n#                                 INSTALL_DESTINATION ${LIB_INSTALL_DIR}/Foo/cmake\n\n#                                 PATH_VARS INCLUDE_INSTALL_DIR SYSCONFIG_INSTALL_DIR)\n\n#   write_basic_package_version_file(${CMAKE_CURRENT_BINARY_DIR}/FooConfigVersion.cmake\n\n#                                    VERSION 1.2.3\n\n#                                    COMPATIBILITY SameMajorVersion )\n\n#   install(FILES ${CMAKE_CURRENT_BINARY_DIR}/FooConfig.cmake ${CMAKE_CURRENT_BINARY_DIR}/FooConfigVersion.cmake\n\n#           DESTINATION ${LIB_INSTALL_DIR}/Foo/cmake )\n\n#\n\n# With a FooConfig.cmake.in:\n\n#   set(FOO_VERSION x.y.z)\n\n#   ...\n\n#   @PACKAGE_INIT@\n\n#   ...\n\n#   set_and_check(FOO_INCLUDE_DIR \"@PACKAGE_INCLUDE_INSTALL_DIR@\")\n\n#   set_and_check(FOO_SYSCONFIG_DIR \"@PACKAGE_SYSCONFIG_INSTALL_DIR@\")\n\n#\n\n#   check_required_components(Foo)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2012 Alexander Neundorf <neundorf@kde.org>\n\n#\n\n# CMake - Cross Platform Makefile Generator\n\n# Copyright 2000-2011 Kitware, Inc., Insight Software Consortium\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n#\n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#  nor the names of their contributors may be used to endorse or promote\n\n#  products derived from this software without specific prior written\n\n#  permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n# ------------------------------------------------------------------------------\n\n#\n\n# The above copyright and license notice applies to distributions of\n\n# CMake in source and binary form.  Some source files contain additional\n\n# notices of original copyright by their contributors; see each source\n\n# for details.  Third-party software packages supplied with CMake under\n\n# compatible licenses provide their own copyright notices documented in\n\n# corresponding subdirectories.\n\n#\n\n#------------------------------------------------------------------------------\n\n#\n\n# CMake was initially developed by Kitware with the following sponsorship:\n\n#\n\n#  * National Library of Medicine at the National Institutes of Health\n\n#    as part of the Insight Segmentation and Registration Toolkit (ITK).\n\n#\n\n#  * US National Labs (Los Alamos, Livermore, Sandia) ASC Parallel\n\n#    Visualization Initiative.\n\n#\n\n#  * National Alliance for Medical Image Computing (NAMIC) is funded by the\n\n#    National Institutes of Health through the NIH Roadmap for Medical Research,\n\n#    Grant U54 EB005149.\n\n#\n\n#  * Kitware, Inc.\n\n#=============================================================================\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Handle \"/usr move\" symlinks created by some Linux distros.\n",
        "Line" : 243,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "Modules/CppMicroServices/cmake/usCTestScript.cmake" : {
      "ObjectId" : "eddc8c2b01e276d6d4c593b66ed96ab96a5b33a3",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if(NOT CTEST_BUILD_NAME)\n\n#  set(CTEST_BUILD_NAME \"${CMAKE_SYSTEM}_${CTEST_COMPILER}_${CTEST_DASHBOARD_NAME}\")\n\n#endif()\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#ctest_submit()\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#=========================================================\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#            SHARED THREADING AUTOLOAD\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Modules/CppMicroServices/cmake/usCTestScript_custom.cmake" : {
      "ObjectId" : "afe87f1f1e43ad4a525387c508ffdcce345b9dae",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(CTEST_COMPILER \"gcc-4.5\")\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Modules/CppMicroServices/cmake/usCTestScript_travis.cmake" : {
      "ObjectId" : "3e9f3d2b6518f340257d88f123058157ac3c3921",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(CTEST_COMPILER \"gcc-4.5\")\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Modules/CppMicroServices/cmake/usFunctionAddResources.cmake" : {
      "ObjectId" : "5d3333f228b68bce4f9ad5795e2dad380e3855b9",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#! \\ingroup MicroServicesCMake\n\n#! \\brief Add resources to a library or executable.\n\n#!\n\n#! This CMake function uses an external command line program to generate a ZIP archive\n\n#! containing data from external resources such as text files or images or other ZIP\n\n#! archives. The created archive file can be appended or linked into the target file\n\n#! using the usFunctionEmbedResources macro.\n\n#!\n\n#! Each module can call this function to add resources and make them available at\n\n#! runtime through the Module class. Multiple calls to this function append the\n\n#! input files.\n\n#!\n\n#! In the case of linking static modules which contain resources to the target module,\n\n#! adding the static module target name to the ZIP_ARCHIVES list will merge its\n\n#! resources into the target module.\n\n#!\n\n#! Example usage:\n\n#! \\code{.cmake}\n\n#! set(module_srcs )\n\n#! usFunctionAddResources(TARGET mylib\n\n#!                        MODULE_NAME org_me_mylib\n\n#!                        FILES config.properties logo.png\n\n#!                       )\n\n#! \\endcode\n\n#!\n\n#! \\param TARGET (required) The target to which the resource files are added.\n\n#! \\param MODULE_NAME (required/optional) The module name of the target, as specified in\n\n#!        the \\c US_MODULE_NAME pre-processor definition of that target. This parameter\n\n#!        is optional if a target property with the name US_MODULE_NAME exists, containing\n\n#!        the required module name.\n\n#! \\param COMPRESSION_LEVEL (optional) The zip compression level (0-9). Defaults to the default zip\n\n#!        level. Level 0 disables compression.\n\n#! \\param WORKING_DIRECTORY (optional) The root path for all resource files listed after the\n\n#!        FILES argument. If no or a relative path is given, it is considered relativ to the\n\n#!        current CMake source directory.\n\n#! \\param FILES (optional) A list of resource files (paths to external files in the file system)\n\n#!        relative to the current working directory.\n\n#! \\param ZIP_ARCHIVES (optional) A list of zip archives (relative to the current working directory\n\n#!        or absolute file paths) whose contents is merged into the target module. If a list entry\n\n#!        is a valid target name and that target is a static library, its absolute file path is\n\n#!        used instead.\n\n#!\n\n#! \\sa usFunctionEmbedResources\n\n#! \\sa \\ref MicroServices_Resources\n\n#!\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Modules/CppMicroServices/cmake/usFunctionCheckCompilerFlags.cmake" : {
      "ObjectId" : "0ec97da19faa931bab07357930bcc5eab16700a1",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Helper macro allowing to check if the given flags are supported\n\n# by the underlying build tool\n\n#\n\n# If the flag(s) is/are supported, they will be appended to the string identified by RESULT_VAR\n\n#\n\n# Usage:\n\n#   usFunctionCheckCompilerFlags(FLAGS_TO_CHECK VALID_FLAGS_VAR)\n\n#\n\n# Example:\n\n#\n\n#   set(myflags)\n\n#   usFunctionCheckCompilerFlags(\"-fprofile-arcs\" myflags)\n\n#   message(1-myflags:${myflags})\n\n#   usFunctionCheckCompilerFlags(\"-fauto-bugfix\" myflags)\n\n#   message(2-myflags:${myflags})\n\n#   usFunctionCheckCompilerFlags(\"-Wall\" myflags)\n\n#   message(1-myflags:${myflags})\n\n#\n\n#   The output will be:\n\n#    1-myflags: -fprofile-arcs\n\n#    2-myflags: -fprofile-arcs\n\n#    3-myflags: -fprofile-arcs -Wall\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Save the contents of RESULT_VAR temporarily.\n\n# This is needed in case ${RESULT_VAR} is one of the CMAKE_<LANG>_FLAGS_* variables.\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Clear all flags. If not, existing flags triggering warnings might lead to\n\n# false-negatives when checking for certain compiler flags.\n",
        "Line" : 37,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Internally, the macro CMAKE_CXX_COMPILER_FLAG calls TRY_COMPILE. To avoid\n\n# the cost of compiling the test each time the project is configured, the variable set by\n\n# the macro is added to the cache so that following invocation of the macro with\n\n# the same variable name skip the compilation step.\n\n# For that same reason, the usFunctionCheckCompilerFlags function appends a unique suffix to\n\n# the HAS_CXX_FLAG variable. This suffix is created using a 'clean version' of the\n\n# flag to test. The value of HAS_CXX_FLAG_${suffix} additonally needs to be a valid\n\n# pre-processor token because CHECK_CXX_COMPILER_FLAG adds it as a definition to the compiler\n\n# arguments. An invalid token triggers compiler warnings, which in case of the \"-Werror\" flag\n\n# leads to false-negative checks.\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "Modules/CppMicroServices/cmake/usFunctionCheckResourceLinking.cmake" : {
      "ObjectId" : "724356551ce94863a69e84c05e1cecdaf64807df",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check linking capability\n",
        "Line" : 4,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "Modules/CppMicroServices/cmake/usFunctionCompileSnippets.cmake" : {
      "ObjectId" : "e183c408379ef06a82067df67ab33ce15710e01d",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# get all files called \"main.cpp\"\n",
        "Line" : 3,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# get the directory containing the main.cpp file\n",
        "Line" : 7,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# If there exists a \"files.cmake\" file in the snippet directory,\n\n# include it and assume it sets the variable \"snippet_src_files\"\n\n# to a list of source files for the snippet.\n",
        "Line" : 12,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# glob all files in the directory and add them to the snippet src list\n",
        "Line" : 27,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# Uset the top-level directory name as the executable name\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "Modules/CppMicroServices/cmake/usFunctionCreateTestModule.cmake" : {
      "ObjectId" : "fbe3dbc214cbb5675b809209ee2010de3542fa89",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/CppMicroServices/cmake/usFunctionEmbedResources.cmake" : {
      "ObjectId" : "cf23534b03ad33c73bb817caae0d33a98a03e772",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#! \\ingroup MicroServicesCMake\n\n#! \\brief Embed resources in a library or executable.\n\n#!\n\n#! This CMake function uses an external command line program to generate a ZIP archive\n\n#! containing data from external resources such as text files or images or other ZIP\n\n#! archives. The created archive file is appended or embedded as a binary blob to the target file.\n\n#!\n\n#! \\note To set-up correct file dependencies from your module target to your resource\n\n#!       files, you have to add a special source file to the source list of the target.\n\n#!       The source file name can be retrieved by using usFunctionGetResourceSoruce.\n\n#!       This ensures that changed resource files will automatically be re-added to the\n\n#!       module.\n\n#!\n\n#! There are two differend modes for including resources: APPEND and LINK. In APPEND mode,\n\n#! the generated zip file is appended at the end of the target file. In LINK mode, the\n\n#! zip file is compiled / linked into the target using platform specific techniques. LINK\n\n#! mode is necessary if certain tools make additional assumptions about the object layout\n\n#! of the target file (e.g. codesign on MacOS). LINK mode may result in slower module\n\n#! initialization and bigger object files. The default mode is LINK mode on MacOS and\n\n#! APPEND mode on all other platforms.\n\n#!\n\n#! Example usage:\n\n#! \\code{.cmake}\n\n#! set(module_srcs )\n\n#! usFunctionEmbedResources(TARGET mylib\n\n#!                        MODULE_NAME org_me_mylib\n\n#!                        FILES config.properties logo.png\n\n#!                       )\n\n#! \\endcode\n\n#!\n\n#! \\param TARGET (required) The target to which the resource files are added.\n\n#! \\param MODULE_NAME (required/optional) The module name of the target, as specified in\n\n#!        the \\c US_MODULE_NAME pre-processor definition of that target. This parameter\n\n#!        is optional if a target property with the name US_MODULE_NAME exists, containing\n\n#!        the required module name.\n\n#! \\param APPEND Append the resources zip file to the target file.\n\n#! \\param LINK Link (embed) the resources zip file if possible.\n\n#!\n\n#! For the WORKING_DIRECTORY, COMPRESSION_LEVEL, FILES, ZIP_ARCHIVES parameters see the\n\n#! documentation of the usFunctionAddResources macro which is called with these parameters if set.\n\n#!\n\n#! \\sa usFunctionAddResources\n\n#! \\sa usFunctionGetResourceSource\n\n#! \\sa \\ref MicroServices_Resources\n\n#!\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set default resource mode\n",
        "Line" : 81,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# This command depends on the given resource files and creates a source\n\n# file which must be added to the source list of the related target.\n\n# This way, the following command is executed if the resources change\n\n# and it just touches the created source file to force a (actually unnecessary)\n\n# re-linking and hence the execution of POST_BUILD commands.\n",
        "Line" : 171,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "Modules/CppMicroServices/cmake/usFunctionGenerateModuleInit.cmake" : {
      "ObjectId" : "b8d38faf7b8b8e94b213ade1a217b2bb8e2ac89e",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#! \\ingroup MicroServicesCMake\n\n#! \\brief Generate a source file which handles proper initialization of a module.\n\n#!\n\n#! This CMake function will store the path to a generated source file in the\n\n#! src_var variable, which should be compiled into a module. The modules source\n\n#! code must be compiled with the US_MODULE_NAME pre-processor definition.\n\n#! Example usage:\n\n#!\n\n#! \\code{.cmake}\n\n#! set(module_srcs )\n\n#! usFunctionGenerateModuleInit(module_srcs)\n\n#! add_library(mylib ${module_srcs})\n\n#! set_property(TARGET ${mylib} APPEND PROPERTY COMPILE_DEFINITIONS US_MODULE_NAME=MyModule)\n\n#! \\endcode\n\n#!\n\n#! \\param src_var (required) The name of a list variable to which the path of the generated\n\n#!        source file will be appended.\n\n#!\n\n#! \\see \\ref MicroServices_AutoLoading\n\n#!\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Modules/CppMicroServices/cmake/usFunctionGetGccVersion.cmake" : {
      "ObjectId" : "022fa606cfd907c0e0ae69889ad9f34360a83c93",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#! \\brief Get the gcc version\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Modules/CppMicroServices/cmake/usFunctionGetResourceSource.cmake" : {
      "ObjectId" : "e78c9c985889f6c8f89ae72a0814a1b9ac471e28",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#! \\ingroup MicroServicesCMake\n\n#! \\brief Get a source file name for handling resource dependencies\n\n#!\n\n#! This CMake function retrieves the name of a generated file which has to be added\n\n#! to a modules source file list to set-up resource file dependencies. This ensures\n\n#! that changed resource files will automatically be re-added to the module.\n\n#!\n\n#! Example usage:\n\n#! \\code{.cmake}\n\n#! set(module_srcs mylib.cpp)\n\n#! usFunctionGetResourceSource(TARGET mylib\n\n#!                             OUT module_srcs\n\n#!                            )\n\n#! add_library(mylib ${module_srcs})\n\n#! \\endcode\n\n#!\n\n#! \\param TARGET (required) The name of the target to which the resource files are added.\n\n#! \\param OUT (required) A list variable to which the file name will be appended.\n\n#! \\param LINK (optional) Generate a suitable source file for LINK mode.\n\n#! \\param APPEND (optional) Generate a suitable source file for APPEND mode.\n\n#!\n\n#! \\sa usFunctionAddResources\n\n#! \\sa usFunctionEmbedResources\n\n#!\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Modules/CppMicroServices/cmake/usMacroCreateModule.cmake" : {
      "ObjectId" : "b9f6426afaa6cde5ee8d8a1d905da9841287a3ec",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# For internal use only\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Include dirs and libraries\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Create library\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Generate the module init file\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Create the module library\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Compile definitions\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Link flags\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Currently, public headers include private header files,\n\n# so the internal include dirs need to be in the public\n\n# include dir section. This needs to be fixed.\n",
        "Line" : 110,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Link additional libraries\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Embed module resources\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Install support\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# US testing\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Documentation\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Compile source code snippets\n",
        "Line" : 175,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Last configuration and install steps\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Version information\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Configure config file for the build tree\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Configure config file for the install tree\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Build the examples\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "Modules/CppMicroServices/core/CMakeLists.txt" : {
      "ObjectId" : "244fa9a6355f7ddc188e00db6bccfeef07fb9b8a",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# sources and headers\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# link libraries for the CppMicroServices lib\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Configure the modules manifest.json file\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# we initialize the module in usModuleRegistry.cpp ourselves\n",
        "Line" : 31,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 4
    },
    "Modules/CppMicroServices/core/doc/CMakeLists.txt" : {
      "ObjectId" : "f5c5327bd6b29d4b8b795518a1b33cd0e2c056fe",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Compile source code snippets\n",
        "Line" : 3,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Modules/CppMicroServices/core/doc/snippets/CMakeLists.txt" : {
      "ObjectId" : "9862c1568c5aee4e77654e36a9e6a13e17e54a94",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/CppMicroServices/core/doc/snippets/uServices-resources-cmake/CMakeLists.txt" : {
      "ObjectId" : "d1ab01f6f08a333bca4e8ed9171f9ce81d126e14",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/CppMicroServices/core/doc/snippets/uServices-singleton/files.cmake" : {
      "ObjectId" : "d203a5547ff124722bcf355226e9763e9de426ed",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/CppMicroServices/core/doc/snippets/uServices-staticmodules/files.cmake" : {
      "ObjectId" : "dcf7f42c588856efbd6759fbe7eb4ca11ad18faa",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/CppMicroServices/core/examples/CMakeLists.txt" : {
      "ObjectId" : "1144b939bece2fce1c3621c54f5cc7ff36d20fff",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Set C/CXX flags\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#if(${CMAKE_PROJECT_NAME} STREQUAL ${PROJECT_NAME})\n\n#  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} ${CppMicroServices_CXX_FLAGS}\")\n\n#  set(CMAKE_CXX_FLAGS_RELEASE \"${CMAKE_CXX_FLAGS_RELEASE} ${CppMicroServices_CXX_FLAGS_RELEASE}\")\n\n#  set(CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG} ${CppMicroServices_CXX_FLAGS_DEBUG}\")\n\n#  set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} ${CppMicroServices_C_FLAGS}\")\n\n#  set(CMAKE_C_FLAGS_RELEASE \"${CMAKE_C_FLAGS_RELEASE} ${CppMicroServices_C_FLAGS_RELEASE}\")\n\n#  set(CMAKE_C_FLAGS_DEBUG \"${CMAKE_C_FLAGS_DEBUG} ${CppMicroServices_C_FLAGS_DEBUG}\")\n\n#endif()\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Init output directories\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Test if examples compile against an install tree and if the\n\n# Makefile example compiles\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The makefile is Linux specific, so only try to build the Makefile example\n\n# if we are on a proper system\n",
        "Line" : 152,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "Modules/CppMicroServices/core/examples/dictionaryclient/CMakeLists.txt" : {
      "ObjectId" : "ed36e4caee0e207c9dba50df0a70d0b6bc85931f",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/CppMicroServices/core/examples/dictionaryclient2/CMakeLists.txt" : {
      "ObjectId" : "acd00f2a3ca3ef7055947bdae4be37657b8322ec",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/CppMicroServices/core/examples/dictionaryclient3/CMakeLists.txt" : {
      "ObjectId" : "bdf08eaa5e1a0fe482fbad535f05e62a4c04c245",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/CppMicroServices/core/examples/dictionaryservice/CMakeLists.txt" : {
      "ObjectId" : "c904b4e9acc642db6e10f432caaf6c4fff5ebbd7",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The library name for the module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# A list of source code files\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Generate module initialization code\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Create the library\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add the required compile definitions\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Link the CppMicroServices library\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#CreateExample(dictionaryservice ${_srcs})\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Modules/CppMicroServices/core/examples/driver/CMakeLists.txt" : {
      "ObjectId" : "e88c04d5dfcbfc1ba747582596ab4fe709021e21",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/CppMicroServices/core/examples/eventlistener/CMakeLists.txt" : {
      "ObjectId" : "b5103996bff74a97e03cbd1624ca1ca58578121e",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/CppMicroServices/core/examples/frenchdictionary/CMakeLists.txt" : {
      "ObjectId" : "79c3031d568949bf4c2671ed0fbc64195a60f855",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/CppMicroServices/core/examples/makefile/Makefile" : {
      "ObjectId" : "c88e6e62ce7c7771e7c39b2952d28e8bd703af30",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "Modules/CppMicroServices/core/examples/spellcheckclient/CMakeLists.txt" : {
      "ObjectId" : "4600cc22ac8c09a5023632567028950e45e16945",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/CppMicroServices/core/examples/spellcheckservice/CMakeLists.txt" : {
      "ObjectId" : "6c38a331a8aa3a98640044010cc2bf265eed5f8c",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/CppMicroServices/core/include/CMakeLists.txt" : {
      "ObjectId" : "4e39d58c68386813b311ad405c93512d98c59896",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Public header files\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Modules/CppMicroServices/core/src/CMakeLists.txt" : {
      "ObjectId" : "aeb9cf14bfe5964475de4a338c089316aaff72e8",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Source files\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Modules/CppMicroServices/core/test/CMakeLists.txt" : {
      "ObjectId" : "ac64d294befb20db299274b9ab525d1fe1fbb67c",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Configure files, include dirs, etc.\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Create test modules\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Add unit tests\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Generate a custom \"module init\" file for the test driver executable\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add resources\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Register tests\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Add dependencies for shared libraries\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Modules/CppMicroServices/core/test/modules/CMakeLists.txt" : {
      "ObjectId" : "154adf6e4d78dbd799a90917354588b2177f3880",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/CppMicroServices/core/test/modules/libA/CMakeLists.txt" : {
      "ObjectId" : "48211b0c660c1b3c0a3bc2cdf8185fef6a561b2a",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/CppMicroServices/core/test/modules/libA2/CMakeLists.txt" : {
      "ObjectId" : "21968cba8c4a077cadf5168a37d97c594fdcbb2c",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/CppMicroServices/core/test/modules/libAL/CMakeLists.txt" : {
      "ObjectId" : "224c6f09cb288af8bf199b1b3840c18b3957faf0",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/CppMicroServices/core/test/modules/libAL/libAL_1/CMakeLists.txt" : {
      "ObjectId" : "5db0e45894b199fd2688bcd4b479363d10dcb010",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/CppMicroServices/core/test/modules/libAL2/CMakeLists.txt" : {
      "ObjectId" : "8fefb1736d0d8d6ca3fc914d5ce5a67f255dde0b",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/CppMicroServices/core/test/modules/libAL2/libAL2_1/CMakeLists.txt" : {
      "ObjectId" : "7c65e41ee5366e30a59d4c8f8ce0f55bebab9798",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/CppMicroServices/core/test/modules/libBWithStatic/CMakeLists.txt" : {
      "ObjectId" : "80faf30ef9841c70570d3cf52be982523f1b51c7",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/CppMicroServices/core/test/modules/libH/CMakeLists.txt" : {
      "ObjectId" : "0aa0176b5d67eda762ff7272ade0b9521edc28fa",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/CppMicroServices/core/test/modules/libM/CMakeLists.txt" : {
      "ObjectId" : "c96b103203b0e00ce4330d7424b315b8e544edcb",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/CppMicroServices/core/test/modules/libRWithAppendedResources/CMakeLists.txt" : {
      "ObjectId" : "8cfa3e268f1ffe196347c0ebd04ec9a637b8e24c",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/CppMicroServices/core/test/modules/libRWithLinkedResources/CMakeLists.txt" : {
      "ObjectId" : "581bd6ca1d389d6700d7a28f30101b6475518d5d",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/CppMicroServices/core/test/modules/libRWithResources/CMakeLists.txt" : {
      "ObjectId" : "98b5bf34100b93bfce05aa792cb263fb4a3fd6c5",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/CppMicroServices/core/test/modules/libS/CMakeLists.txt" : {
      "ObjectId" : "cb4ef91bb3b1922d95b510fe1cfa1041eab6b7a9",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/CppMicroServices/core/test/modules/libSL1/CMakeLists.txt" : {
      "ObjectId" : "29d6d614c3b71833c86161663722d29ddbc87f03",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/CppMicroServices/core/test/modules/libSL3/CMakeLists.txt" : {
      "ObjectId" : "a342806dd6d9d6c599821b3ef3e2d9f4b4b59758",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/CppMicroServices/core/test/modules/libSL4/CMakeLists.txt" : {
      "ObjectId" : "e81e7e6428f37e163fe13cb8a30d3b36b879afdb",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/CppMicroServices/doc/CMakeLists.txt" : {
      "ObjectId" : "c152886b075e5d7941c8348b0b1ded4b49e97f8f",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We are in standalone mode, so we generate a \"mainpage\"\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Compile a command line tool which transforms comments in CMake scripts into\n\n# Doxygen parseable C code.\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "Modules/CppMicroServices/tools/CMakeLists.txt" : {
      "ObjectId" : "c5d3278edaacd12e23c8e162032879e5ffbe72c1",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/DICOMQI/CMakeLists.txt" : {
      "ObjectId" : "b02baee9ea6242e711fd9a70a52f6d0f50efb559",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/DICOMQI/files.cmake" : {
      "ObjectId" : "8e4f8c670e80527db64de49de0c9fdb36047dd0d",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/DICOMReader/CMakeLists.txt" : {
      "ObjectId" : "4a1cff13220d60609471d7c6a6c0ef2027296f21",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/DICOMReader/files.cmake" : {
      "ObjectId" : "e72f2b58c1b1aa5d0f1b0276ca69311eb275e73e",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/DICOMReader/test/CMakeLists.txt" : {
      "ObjectId" : "01b228e1860cb587351f3f09099d6eb11ead4f90",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#foreach(f ${sloppyDICOMfiles})\n\n#  message(\"  ${f}\")\n\n#endforeach()\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Modules/DICOMReader/test/files.cmake" : {
      "ObjectId" : "255fd1fe7fd9fd4a90ea9694e7d767be8ba4714f",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/DICOMReaderServices/CMakeLists.txt" : {
      "ObjectId" : "ca742d6e75296a9b0051edee3b802d64a523ab13",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/DICOMReaderServices/files.cmake" : {
      "ObjectId" : "b0f9199daa683357aa9da9903a8b25f6aa5c0458",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/DICOMTesting/CMakeLists.txt" : {
      "ObjectId" : "9bc963c26e3db396e0a542e7917e6ed6ae6921e9",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# clear variables from prior files.cmake\n\n# Else CMake would use the content of these variables and would try to create tests (which are not present in DICOMTesting).\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# now create a new module only for testing purposes\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# dumps out image information\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# compares dumped out image information against reference dump\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "Modules/DICOMTesting/files.cmake" : {
      "ObjectId" : "560f35d49c97ee045863a7e1d8821983ae159e17",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/DICOMTesting/test/CMakeLists.txt" : {
      "ObjectId" : "6bb2f72b2b0e1bdfba1bbec2104967d970f5fb06",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# verify minimum expectations:\n\n#   files are recognized as DICOM\n\n#   loading files results in a given number of images\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# verifies that the loader can also be used to just scan for tags and provide them in mitk::Properties (parameter preLoadedVolume)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# these variables could be passed as parameters to a generic test creation function\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# find all test input lists\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# extract only the name of the directory of this very test case\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#message(STATUS \"DICOM loading test case '${input}'\")\n",
        "Line" : 51,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# TODO provide error messages if input not valid\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# clear list\n",
        "Line" : 57,
        "CharPositionInLine" : 20
      },
      "8" : {
        "Text" : "# read list of file names from file \"input\"\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# prepend each file with an abosolute path\n",
        "Line" : 61,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "#message(STATUS \"  Load ${dicomFiles}\")\n",
        "Line" : 66,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# use one more realistic series for testing property lists\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# this is just one small volume\n",
        "Line" : 84,
        "CharPositionInLine" : 55
      },
      "CommentCount" : 13
    },
    "Modules/DICOMTesting/test/files.cmake" : {
      "ObjectId" : "1a8b391b8af5dfabc8229ea6118483249a1b8fc4",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# tests with no extra command line parameter\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Modules/DataTypesExt/CMakeLists.txt" : {
      "ObjectId" : "f9af619a573f009b8078e581d1161591baa0f38d",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/DataTypesExt/files.cmake" : {
      "ObjectId" : "f8569f2e63a92c549c02874fcad3e2d25293277f",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/DataTypesExt/test/CMakeLists.txt" : {
      "ObjectId" : "153cd81e2e6e978627064a0bf18f62f938f7a9f9",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/DataTypesExt/test/files.cmake" : {
      "ObjectId" : "048ece655e565b5decc6c13e8288ff24993c6ced",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#only runs on images\n",
        "Line" : 9,
        "CharPositionInLine" : 39
      },
      "CommentCount" : 1
    },
    "Modules/DicomRT/CMakeLists.txt" : {
      "ObjectId" : "ecfcceffbd51801a4d08e4954d33626203480823",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/DicomRT/autoload/IO/CMakeLists.txt" : {
      "ObjectId" : "d133f9af178b2e00fc356bb90ce0527d3105da30",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/DicomRT/autoload/IO/files.cmake" : {
      "ObjectId" : "f3970e6991f13faf26cc774d639e835d10d89d94",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/DicomRT/files.cmake" : {
      "ObjectId" : "64210e3cf418be3435022ea99280a2658199a4db",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/DicomRT/test/CMakeLists.txt" : {
      "ObjectId" : "0ac397aad3e7c7f572fcdd8dd33580d410fe1a85",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/DicomRT/test/files.cmake" : {
      "ObjectId" : "104a1aa047cf3cb41714cdcb709e4ce5020b3fd1",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/DicomUI/CMakeLists.txt" : {
      "ObjectId" : "50dfc8a72388bb5bb0f785bc222d0b2fae166b79",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/DicomUI/files.cmake" : {
      "ObjectId" : "692108939bef831c7229d3f917a32b7b00b54f56",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/DiffusionImaging/CMakeLists.txt" : {
      "ObjectId" : "0be1046bbcf7de43069348c5db0620c079313986",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/DiffusionImaging/Connectomics/CMakeLists.txt" : {
      "ObjectId" : "3099bee3775d7247286b9c94c73d3d2d59ed64cd",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/DiffusionImaging/Connectomics/Testing/CMakeLists.txt" : {
      "ObjectId" : "153cd81e2e6e978627064a0bf18f62f938f7a9f9",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/DiffusionImaging/Connectomics/Testing/files.cmake" : {
      "ObjectId" : "150b651c4be4bd3f00c4499c5c99842d79c37eb3",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/DiffusionImaging/Connectomics/files.cmake" : {
      "ObjectId" : "03b16a4300c419139b9aed8c6b505c0194b4174d",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# DataStructures Connectomics\n",
        "Line" : 3,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Rendering Connectomics\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Algorithms Connectomics\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Rendering Connectomics\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Datastructures Connectomics\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Algorithms Connectomics\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "Modules/DiffusionImaging/DiffusionCmdApps/CMakeLists.txt" : {
      "ObjectId" : "ffbde72f1d3832ebf70dba8406f3f464c3924772",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# INCLUDE_DIRS Helpers\n",
        "Line" : 3,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Modules/DiffusionImaging/DiffusionCmdApps/Connectomics/CMakeLists.txt" : {
      "ObjectId" : "bcfc777262335d04f66752dab9b58145e3751798",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# needed include directories\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# list of DiffusionConnectomics cmdapps\n\n# if an app requires additional dependencies\n\n# they are added after a \"^^\" and separated by \"_\"\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# extract cmd app name and dependencies\n",
        "Line" : 20,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 3
    },
    "Modules/DiffusionImaging/DiffusionCmdApps/FiberProcessing/CMakeLists.txt" : {
      "ObjectId" : "fdf23fbbd0e4051dac264e832a83a1ee66ce198c",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# needed include directories\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# list of diffusion cmdapps\n\n# if an app requires additional dependencies\n\n# they are added after a \"^^\" and separated by \"_\"\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# extract cmd app name and dependencies\n",
        "Line" : 28,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 3
    },
    "Modules/DiffusionImaging/DiffusionCmdApps/Fiberfox/CMakeLists.txt" : {
      "ObjectId" : "a2fe4c059d41bf5559d52bbe29c1f6acb90a6cf3",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# needed include directories\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# list of diffusion cmdapps\n\n# if an app requires additional dependencies\n\n# they are added after a \"^^\" and separated by \"_\"\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# extract cmd app name and dependencies\n",
        "Line" : 20,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 3
    },
    "Modules/DiffusionImaging/DiffusionCmdApps/Misc/CMakeLists.txt" : {
      "ObjectId" : "d4746a83816560dc2de4159d691c54ca41ab9677",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# needed include directories\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# list of diffusion cmdapps\n\n# if an app requires additional dependencies\n\n# they are added after a \"^^\" and separated by \"_\"\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# extract cmd app name and dependencies\n",
        "Line" : 32,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 3
    },
    "Modules/DiffusionImaging/DiffusionCmdApps/Misc/DICOMLoader.cmake" : {
      "ObjectId" : "47ba810620d90c72de04cc0e3d1d0a5279bc97f2",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/DiffusionImaging/DiffusionCmdApps/Python/CMakeLists.txt" : {
      "ObjectId" : "8cfbef2cff9a0c16bd69fbea3b0e6e6994ace78c",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# needed include directories\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# list of diffusion cmdapps\n\n# if an app requires additional dependencies\n\n# they are added after a \"^^\" and separated by \"_\"\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# extract cmd app name and dependencies\n",
        "Line" : 19,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 3
    },
    "Modules/DiffusionImaging/DiffusionCmdApps/Quantification/CMakeLists.txt" : {
      "ObjectId" : "d0fac9521cb3f720e701b32126865402a60a5c04",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# needed include directories\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# list of diffusion cmdapps\n\n# if an app requires additional dependencies\n\n# they are added after a \"^^\" and separated by \"_\"\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# extract cmd app name and dependencies\n",
        "Line" : 23,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 3
    },
    "Modules/DiffusionImaging/DiffusionCmdApps/Tractography/CMakeLists.txt" : {
      "ObjectId" : "a14ed6d9925518b8379e85f68cc25aa08cbe5aa8",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# needed include directories\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# list of diffusion cmdapps\n\n# if an app requires additional dependencies\n\n# they are added after a \"^^\" and separated by \"_\"\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# extract cmd app name and dependencies\n",
        "Line" : 21,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 3
    },
    "Modules/DiffusionImaging/DiffusionCmdApps/TractographyEvaluation/CMakeLists.txt" : {
      "ObjectId" : "4328bcc7be4472f541aa23cbb78d3c80806c3550",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# needed include directories\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# list of diffusion cmdapps\n\n# if an app requires additional dependencies\n\n# they are added after a \"^^\" and separated by \"_\"\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# extract cmd app name and dependencies\n",
        "Line" : 27,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 3
    },
    "Modules/DiffusionImaging/DiffusionCmdApps/files.cmake" : {
      "ObjectId" : "4f4c7b86ddcdf97a36774f2944badccce3d741f4",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/DiffusionImaging/DiffusionCore/CMakeLists.txt" : {
      "ObjectId" : "a3151db1ea63371e094e98de97d63c3911cc6f75",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# With apple gcc 4.2.1 the following waring leads to an build error if boost is enabled\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Modules/DiffusionImaging/DiffusionCore/Testing/CMakeLists.txt" : {
      "ObjectId" : "c3fa88b681559caa285f708c87f44e8b3eade9d7",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The DiffusionCore tests need relaxed compiler flags...\n\n# TODO fix tests to compile without these additional no-error flags\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# disable deprecated warnings (they would lead to errors)\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "Modules/DiffusionImaging/DiffusionCore/Testing/files.cmake" : {
      "ObjectId" : "9e87b8b6059ee344c493e1ec15400bdcf0222d8b",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/DiffusionImaging/DiffusionCore/autoload/IO/CMakeLists.txt" : {
      "ObjectId" : "81ada992e3bc08923655987507481e43743dd4f5",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/DiffusionImaging/DiffusionCore/autoload/IO/files.cmake" : {
      "ObjectId" : "a7f7003a49b1873abc84b7fce455edda699e18ca",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/DiffusionImaging/DiffusionCore/files.cmake" : {
      "ObjectId" : "b8972e792de4d82ce445966d716b64da71e0e77a",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# DicomImport\n\n# DicomImport/mitkGroupDiffusionHeadersFilter.cpp\n",
        "Line" : 3,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# DataStructures -> DWI\n",
        "Line" : 19,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Properties\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Serializer\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# DataStructures -> Odf\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# DataStructures -> Tensor\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# DataStructures -> Peaks\n",
        "Line" : 45,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Algorithms\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Registration Algorithms & Co.\n",
        "Line" : 60,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Algorithms/Registration/mitkRegistrationMethodITK4.cpp\n",
        "Line" : 63,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# MultishellProcessing\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Function Collection\n",
        "Line" : 73,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# function Collection\n",
        "Line" : 78,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Rendering\n",
        "Line" : 81,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Reconstruction\n",
        "Line" : 84,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Fitting functions\n",
        "Line" : 96,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# MultishellProcessing\n",
        "Line" : 102,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Properties\n",
        "Line" : 110,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Algorithms\n",
        "Line" : 118,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 19
    },
    "Modules/DiffusionImaging/DiffusionIO/CMakeLists.txt" : {
      "ObjectId" : "fbe023567b1188580136da9260a45f5dcef4d185",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/DiffusionImaging/DiffusionIO/files.cmake" : {
      "ObjectId" : "7af682f8bcd15b5f371cd7d9c0d7c359a5e2d0e4",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#mitkFiberBundleIOFactory.cpp\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#mitkFiberBundleWriterFactory.cpp\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "Modules/DiffusionImaging/FiberTracking/CMakeLists.txt" : {
      "ObjectId" : "6907c24651f3c161bfcf73889a0dea222994bd6b",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/DiffusionImaging/FiberTracking/Testing/CMakeLists.txt" : {
      "ObjectId" : "28d176e5d912843be85b2b1fc4716676bba2d622",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Temporarily disabled. Since method relies on random numbers, the behaviour is not consistent across different systems. Solution?\n\n#mitkAddCustomModuleTest(mitkGibbsTrackingTest mitkGibbsTrackingTest ${MITK_DATA_DIR}/DiffusionImaging/qBallImage.qbi ${MITK_DATA_DIR}/DiffusionImaging/diffusionImageMask.nrrd ${MITK_DATA_DIR}/DiffusionImaging/gibbsTrackingParameters.gtp ${MITK_DATA_DIR}/DiffusionImaging/gibbsTractogram.fib)\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# apparently does not work on ubuntu\n",
        "Line" : 21,
        "CharPositionInLine" : 34
      },
      "CommentCount" : 2
    },
    "Modules/DiffusionImaging/FiberTracking/Testing/files.cmake" : {
      "ObjectId" : "3d06aa5391c12745cdcd1a0ce7e8bebf2e42c9c6",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/DiffusionImaging/FiberTracking/files.cmake" : {
      "ObjectId" : "39210be9cf52d8e9622e660475ea589e89514695",
      "LastModified" : "2019-03-28T14:05:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## IO datastructures\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Interactions\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Tractography\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# DataStructures -> FiberBundle\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Algorithms\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Tractography\n",
        "Line" : 52,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Clustering\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Fiberfox\n",
        "Line" : 82,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Binary directory resources\n",
        "Line" : 108,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 9
    },
    "Modules/DiffusionImaging/Quantification/CMakeLists.txt" : {
      "ObjectId" : "d3b6e845ccc507527fa2439adf48511d64335df8",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# With apple gcc 4.2.1 the following waring leads to an build error if boost is enabled\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#DiffusionImaging/Quantification\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Modules/DiffusionImaging/Quantification/Testing/CMakeLists.txt" : {
      "ObjectId" : "a8460a241d575496788d56a273e617d0432b6621",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#mitkAddCustomModuleTest(mitkTbssRoiNrrdImageReaderTest mitkTbssRoiNrrdImageReaderTest ${MITK_DATA_DIR}/DiffusionImaging/bodyfornix.roi)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Modules/DiffusionImaging/Quantification/Testing/files.cmake" : {
      "ObjectId" : "18fe4baae5da2859f2d1cf61a369c1b864a22fa1",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#mitkTbssRoiNrrdImageReaderTest.cpp\n",
        "Line" : 3,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Modules/DiffusionImaging/Quantification/files.cmake" : {
      "ObjectId" : "9477511ee75a023999625e1f8d856aa9eda1f9e6",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# DataStructures -> Tbss\n",
        "Line" : 3,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Rendering\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#Algorithms\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# DataStructures\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Rendering\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "Modules/GPGPU/CMakeLists.txt" : {
      "ObjectId" : "bcdfc0fa980801c2b3bdd693fab9edbf9aabdd6e",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  INCLUDE_DIRS .\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Modules/GPGPU/files.cmake" : {
      "ObjectId" : "3d0cb2f26b834bfd0be54089bdf6848c492070eb",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Gizmo/CMakeLists.txt" : {
      "ObjectId" : "571d7044cf7e4830b35b575834e6f6ed18f43454",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Gizmo/files.cmake" : {
      "ObjectId" : "5031d7ef5c69ccb5c754ad84db77a72fcffb8d10",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \"Interactions\" prefix forced by mitk::StateMachine\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Modules/GraphAlgorithms/CMakeLists.txt" : {
      "ObjectId" : "f5fb3a6c2172e842d11b0d8fc9331bd2cfcbe4ad",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  DEPENDS MitkImageStatistics\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Modules/GraphAlgorithms/files.cmake" : {
      "ObjectId" : "433112a1c80bc185b821c391963f05cde5d403ad",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/IGT/CMakeLists.txt" : {
      "ObjectId" : "0eb566597e25626fd13da369d9f1a31e5b080493",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## create IGT config\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add test programm for serial communication classADD_EXECUTABLE(SerialCommunicationTest IGTTrackingDevices/mitkSerialCommunicationTest.cpp)target_link_libraries(SerialCommunicationTest mitkIGT Mitk tinyxml PocoXML)\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Modules/IGT/MITKIGTHardware.cmake" : {
      "ObjectId" : "b18e590db4da5a6e60af1ea7d3da72ccd1551151",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Begin MicronTracker Hardware\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Begin Optitrack Hardware\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# only if MicronTracker is enabled\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#End MicronTracker Hardware\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#only if Optitrack is enabled\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#End Optitrack Hardware\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# only on Win32\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#Begin Ascension MicroBird Hardware\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#End MicroBird Hardware\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 9
    },
    "Modules/IGT/Testing/CMakeLists.txt" : {
      "ObjectId" : "94d9fef6afdabad5c0e3fc9c51b647cefdfcd63e",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/IGT/Testing/MITKIGTTrackingDeviceHardwareTesting.cmake" : {
      "ObjectId" : "43565a75937fd221a99f26e7b1979e92beadca3e",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/IGT/Testing/files.cmake" : {
      "ObjectId" : "49ace7a3f2922197114bf7da8510973f8b1b3777",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# IMPORTANT: If you plan to deactivate / comment out a test please write a bug number to the commented out line of code.\n\n#\n\n#     Example: #mitkMyTest #this test is commented out because of bug 12345\n\n#\n\n# It is important that the bug is open and that the test will be activated again before the bug is closed. This assures that\n\n# no test is forgotten after it was commented out. If there is no bug for your current problem, please add a new one and\n\n# mark it as critical.\n",
        "Line" : 2,
        "CharPositionInLine" : 3
      },
      "1" : {
        "Text" : "################## ON THE FENCE TESTS #################################################\n\n# none\n",
        "Line" : 10,
        "CharPositionInLine" : 3
      },
      "2" : {
        "Text" : "################## DISABLED TESTS #####################################################\n",
        "Line" : 13,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "################# RUNNING TESTS #######################################################\n",
        "Line" : 16,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# mitkNavigationDataPlayerTest.cpp # random fails see bug 16485.\n\n# We decided to won't fix because of complete restructuring via bug 15959.\n",
        "Line" : 45,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "# ------------------ Navigation Tool Management Tests -------------------\n",
        "Line" : 52,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "# Activated experimentally on dart clients, see task T17303 for details.\n",
        "Line" : 53,
        "CharPositionInLine" : 49
      },
      "7" : {
        "Text" : "# -----------------------------------------------------------------------\n",
        "Line" : 56,
        "CharPositionInLine" : 3
      },
      "8" : {
        "Text" : "#deactivated because of bug 18835\n",
        "Line" : 63,
        "CharPositionInLine" : 44
      },
      "9" : {
        "Text" : "# This test was disabled because of bug 17181.\n",
        "Line" : 64,
        "CharPositionInLine" : 72
      },
      "10" : {
        "Text" : "# This test was disabled because of bug 18671\n",
        "Line" : 65,
        "CharPositionInLine" : 46
      },
      "11" : {
        "Text" : "#mitkPolhemusTrackingDeviceHardwareTest.cpp\n",
        "Line" : 66,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 12
    },
    "Modules/IGT/Tutorial/CMakeLists.txt" : {
      "ObjectId" : "48aebac2a75cee1d54361d0848432737b5a6e6a5",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/IGT/autoload/DeviceRegistry/CMakeLists.txt" : {
      "ObjectId" : "d37c5cf5afc6f1cee4f1cec644de3936f6318abf",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/IGT/autoload/DeviceRegistry/files.cmake" : {
      "ObjectId" : "399157f5a99581f7aea9dbc5a5af26b571615a50",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/IGT/files.cmake" : {
      "ObjectId" : "1f3256abb02a7a4f93eae480f78c16e8f7de3ccc",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  TrackingDevices/mitkPolhemusTrackingDevice.cpp\n\n#  TrackingDevices/mitkPolhemusTool.cpp\n\n#  TrackingDevices/mitkPolhemusTrackerTypeInformation.cpp\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Modules/IGTBase/CMakeLists.txt" : {
      "ObjectId" : "a5f55007963bc8e27d212bc75cac1be6bc614023",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/IGTBase/autoload/CMakeLists.txt" : {
      "ObjectId" : "e2cfc34638529a0b3aff0cb9e37aa7b2464acf2c",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/IGTBase/autoload/IO/CMakeLists.txt" : {
      "ObjectId" : "e6e391249c2ed3c44a8e2173623cafbc5c17d26e",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/IGTBase/autoload/IO/files.cmake" : {
      "ObjectId" : "8e6176b9391ee69241e3f87dd93a9dcc5cbed4cc",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/IGTBase/files.cmake" : {
      "ObjectId" : "4d4a6ac3f2b792fe3daf1590f1632e674682a06a",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/IGTUI/CMakeLists.txt" : {
      "ObjectId" : "d37c9b60a3496eae99fd322d9a729109f049959c",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## create IGTUI config\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Modules/IGTUI/autoload/ConfigurationWidgetRegistry/CMakeLists.txt" : {
      "ObjectId" : "c5f388053ceb708299a98fc281aafb8b00729258",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/IGTUI/autoload/ConfigurationWidgetRegistry/files.cmake" : {
      "ObjectId" : "08ab869ee9f4e626fae2f6281fdfcadf727bacab",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/IGTUI/files.cmake" : {
      "ObjectId" : "5773331a13f04f435b084e2e4f38908d27ccaac7",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/IOExt/CMakeLists.txt" : {
      "ObjectId" : "ccfb990d3ca2f3a030d45b552ed59def7ad0ef67",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/IOExt/files.cmake" : {
      "ObjectId" : "da4362ee9ec75d5e1c406e2b46faa1b4f116a8bf",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/ImageDenoising/CMakeLists.txt" : {
      "ObjectId" : "ee584f51c5c8502c77c59f52903db5d6ed865707",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/ImageDenoising/Testing/CMakeLists.txt" : {
      "ObjectId" : "153cd81e2e6e978627064a0bf18f62f938f7a9f9",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/ImageDenoising/Testing/files.cmake" : {
      "ObjectId" : "1106df0d62d844ec83c573fcf64dac8e90895344",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/ImageDenoising/files.cmake" : {
      "ObjectId" : "d8b1e050ab0c6c86d3f794b8df3b65acd5e2e902",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/ImageExtraction/CMakeLists.txt" : {
      "ObjectId" : "ad9d099dda1505af1e83bacb1790b1e629e74c3e",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/ImageExtraction/Testing/CMakeLists.txt" : {
      "ObjectId" : "33373369b7cf1f856ec0563b53fc8e0390d97892",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#itkAddCustomModuleTest(mitkExtractImageFilterTest_Pic3D mitkExtractImageFilterTest ${MITK_DATA_DIR}/Pic3D.nrrd)\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Modules/ImageExtraction/Testing/files.cmake" : {
      "ObjectId" : "07e2d1e22c30ae21ecbe293931125d9a56b3c657",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#mitkExtractImageFilterTest.cpp\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Modules/ImageExtraction/files.cmake" : {
      "ObjectId" : "ebb2d57d62930475445c4418671e39aefdfb5822",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#mitkExtractSliceFilter.cpp\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Modules/ImageStatistics/CMakeLists.txt" : {
      "ObjectId" : "850733b3bd3f3b3f7dfe0987e61fa164359330bb",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/ImageStatistics/Testing/CMakeLists.txt" : {
      "ObjectId" : "5eca89a43ee1ec12ba52d4452e298c086fea49ff",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# mitkAddCustomModuleTest(mitkRoiMeasurementsTests mitkRoiMeasurementsTest ${MITK_DATA_DIR}/ImageStatisticsTestData/)\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# The following lines may be activated to generate new test cases for mitkImageStatisticsHotspotTest.\n\n# Test cases are generated by mitkMultiGaussianTest. All .xml files in Data/TestGeneration/Input will\n\n# be processed and transformed into new .xml files containing statistics in Data/TestGeneration/Output.\n\n#\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Modules/ImageStatistics/Testing/files.cmake" : {
      "ObjectId" : "2be45c6a950b56e5f8c05fc296f5cbf74f828514",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  mitkMultiGaussianTest.cpp # TODO: activate test to generate new test cases for mitkImageStatisticsHotspotTest\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Modules/ImageStatistics/files.cmake" : {
      "ObjectId" : "d41c6123293829512224502e2abc362961a9ee38",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/ImageStatisticsUI/CMakeLists.txt" : {
      "ObjectId" : "30b2a1de226f73cc2c85c20083d01dcdb3e79508",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/ImageStatisticsUI/files.cmake" : {
      "ObjectId" : "ef1f9c422caacd4f146ad3cc40a059559a574ab4",
      "LastModified" : "2019-04-11T11:36:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/IpPicSupportIO/CMakeLists.txt" : {
      "ObjectId" : "7eb227a8c8a6d99b16a8bd57a13a9efbe66bb917",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#mitkFunctionCheckCompilerFlags(\"-Wno-deprecated-declarations\" CMAKE_CXX_FLAGS)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#add_subdirectory(Testing)\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "Modules/IpPicSupportIO/Testing/CMakeLists.txt" : {
      "ObjectId" : "930c090bf04047ee3cc1950c38922d2c3f62916f",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/IpPicSupportIO/Testing/files.cmake" : {
      "ObjectId" : "4c577b2ba30097fe30544ba200b483c864ffb3b1",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#mitkPicFileIOTest.cpp\n",
        "Line" : 2,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "Modules/IpPicSupportIO/files.cmake" : {
      "ObjectId" : "828edcafa326e733314414261e887db1975904d3",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/LegacyGL/CMakeLists.txt" : {
      "ObjectId" : "6cad39c5c4e0196b2203918ddc3a6533e804e62b",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#This module is deprecated. Please use VTK replacements instead.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Modules/LegacyGL/files.cmake" : {
      "ObjectId" : "0fe2783457bea056153e893584ade0011f681ded",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#We are deprecated. Please don't use us.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Modules/LegacyIO/CMakeLists.txt" : {
      "ObjectId" : "d9debfbd64ea8722a26cd570bd0957cdc5337809",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/LegacyIO/files.cmake" : {
      "ObjectId" : "f801775e91148522f49278a4da2cf83c5d5bc81b",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/MapperExt/CMakeLists.txt" : {
      "ObjectId" : "6e186316fc93cb133f6ec33bfde9abdedb910fde",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/MapperExt/files.cmake" : {
      "ObjectId" : "3ec5ef80f6f25af424dd33cd34473f43e63a269b",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/MapperExt/test/CMakeLists.txt" : {
      "ObjectId" : "0590c01a04a18fddc01972202c14e0a4c13bca90",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### since the rendering test's do not run in ubuntu, yet, we build them only for other systems or if the user explicitly sets the variable\n",
        "Line" : 3,
        "CharPositionInLine" : 34
      },
      "CommentCount" : 1
    },
    "Modules/MapperExt/test/files.cmake" : {
      "ObjectId" : "4cd28b8c465ec46d3e9b0df19601a5c1aa771ddf",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# tests with no extra command line parameter\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# IMPORTANT: If you plan to deactivate / comment out a test please write a bug number to the commented out line of code.\n\n#\n\n#     Example: #mitkMyTest #this test is commented out because of bug 12345\n\n#\n\n# It is important that the bug is open and that the test will be activated again before the bug is closed. This assures that\n\n# no test is forgotten after it was commented out. If there is no bug for your current problem, please add a new one and\n\n# mark it as critical.\n",
        "Line" : 3,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "################## DISABLED TESTS #################################################\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "################# RUNNING TESTS ###################################################\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#new rendering test in CppUnit style\n",
        "Line" : 19,
        "CharPositionInLine" : 32
      },
      "5" : {
        "Text" : "# test with image filename as an extra command line parameter\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# image files\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# surface files\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# pointset files\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "Modules/MatchPointRegistration/CMakeLists.txt" : {
      "ObjectId" : "97bb55792b5b2c55f67bb196ee3d5ce2e44f8a55",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/MatchPointRegistration/Testing/CMakeLists.txt" : {
      "ObjectId" : "d45daf111db19c8ec9b0ffc1dab4f8767f0edab1",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/MatchPointRegistration/Testing/files.cmake" : {
      "ObjectId" : "5efdc15458700154c3cf4ef993d218269a5bdcd4",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/MatchPointRegistration/autoload/IO/CMakeLists.txt" : {
      "ObjectId" : "0881f2493be2ffd58a9a6185b52e85c7c898ecd4",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/MatchPointRegistration/autoload/IO/files.cmake" : {
      "ObjectId" : "e56b5a7dfec7cc6622355774cea454bc1f3656d8",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/MatchPointRegistration/deployment/CMakeLists.txt" : {
      "ObjectId" : "120526bfa09189ba86377d73354393b6dc281057",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/MatchPointRegistration/files.cmake" : {
      "ObjectId" : "8546d7de97ad86dbc41d8aecbbca4d57684cbc37",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/MatchPointRegistrationUI/CMakeLists.txt" : {
      "ObjectId" : "85cc6a2e283d6ad4ff7cd7a8157c6289b95aa0d5",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/MatchPointRegistrationUI/files.cmake" : {
      "ObjectId" : "1b3eedf573b006ea798e574cd2f9ad292651fbb4",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/ModelFit/CMakeLists.txt" : {
      "ObjectId" : "6ddd33235ad8082886f72f655b83261a22b410d1",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/ModelFit/autoload/IO/CMakeLists.txt" : {
      "ObjectId" : "64fbc9b5f1fa6e5e924a4a13f67c59335eae0a63",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/ModelFit/autoload/IO/files.cmake" : {
      "ObjectId" : "8452a056617fc74b9e6033bbf4a3dc89a05c9586",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/ModelFit/autoload/Models/CMakeLists.txt" : {
      "ObjectId" : "1f15532ba704198daf03dec4787fa6dd89d90ccc",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/ModelFit/autoload/Models/files.cmake" : {
      "ObjectId" : "911de0a41fd598ea2c4ccac9bf21742de382585e",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/ModelFit/cmdapps/CMakeLists.txt" : {
      "ObjectId" : "f78ad56ddaf2e01d963adf33ae94cf5577ae0a99",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# needed include directories\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# list of miniapps\n\n# if an app requires additional dependencies\n\n# they are added after a \"^^\" and separated by \"_\"\n",
        "Line" : 10,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# extract mini app name and dependencies\n",
        "Line" : 19,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 3
    },
    "Modules/ModelFit/files.cmake" : {
      "ObjectId" : "b046adcd38f22faf1bfd22eecbe8cb3047592aab",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/ModelFit/test/CMakeLists.txt" : {
      "ObjectId" : "d45daf111db19c8ec9b0ffc1dab4f8767f0edab1",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/ModelFit/test/files.cmake" : {
      "ObjectId" : "8e408bd49c18cc7d38bb69b2c0b8ed4ec1e32c00",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/ModelFitUI/CMakeLists.txt" : {
      "ObjectId" : "0e03ef28e4a6d4d5ec4ec6b13930707036a221f3",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/ModelFitUI/files.cmake" : {
      "ObjectId" : "5f080712fa23117bb7db4a74c44b042cd21a54ce",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/ModuleList.cmake" : {
      "ObjectId" : "798e7de029d41f3e1cf888c982c10272d97e5e69",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The entries in the mitk_modules list must be\n\n# ordered according to their dependencies.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Modules/Multilabel/CMakeLists.txt" : {
      "ObjectId" : "24ed1c1596feb7975ae887fc7535b7b941087f13",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Multilabel/Testing/CMakeLists.txt" : {
      "ObjectId" : "153cd81e2e6e978627064a0bf18f62f938f7a9f9",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Multilabel/Testing/files.cmake" : {
      "ObjectId" : "f9fd59ebd2cdf0c1f5f6c41ca8e773282093b5a1",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Multilabel/autoload/DICOMSegIO/CMakeLists.txt" : {
      "ObjectId" : "de9ed9e7cc575f84df80ccb8085160da2c146aed",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Multilabel/autoload/DICOMSegIO/files.cmake" : {
      "ObjectId" : "fe7f535cb254d8e513d17ae6ace17a9977535902",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Multilabel/autoload/IO/CMakeLists.txt" : {
      "ObjectId" : "9c62019a54441845507ad23c400e118427a64c96",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Multilabel/autoload/IO/files.cmake" : {
      "ObjectId" : "a5079ce42386b755536d0e94f60914650ee333b6",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Multilabel/files.cmake" : {
      "ObjectId" : "bde04e5e6f8cf840bdf28bb0538c89705fee3330",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/OpenCL/CMakeLists.txt" : {
      "ObjectId" : "25b7ef1cbdf477b45dddd797cb7c8c166587d01c",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# create the module\n",
        "Line" : 3,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Modules/OpenCL/Testing/CMakeLists.txt" : {
      "ObjectId" : "153cd81e2e6e978627064a0bf18f62f938f7a9f9",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/OpenCL/Testing/files.cmake" : {
      "ObjectId" : "10dff632d756e6545a4a521aa0b28b6aef64c426",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/OpenCL/files.cmake" : {
      "ObjectId" : "c1f158a404d82ced7fefc66e4690cb97bd384b36",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# helper classes\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# module activator\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# base data and filter objects\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# own filter implementations\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Modules/OpenCVVideoSupport/CMakeLists.txt" : {
      "ObjectId" : "c070905b75c50bdaa2227608bf05eebfe794212b",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/OpenCVVideoSupport/Testing/CMakeLists.txt" : {
      "ObjectId" : "d3213749b2fff9a1b76d476c4b29d597ce663262",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test needs to be revised as it fails randomly.\n\n# mitkAddCustomModuleTest(\"mitkGrabCutOpenCVImageFilterTest\" \"mitkGrabCutOpenCVImageFilterTest\"\n\n# \"${MITK_DATA_DIR}/OpenCV-Data/GrabCutInput.png\"\n\n# \"${MITK_DATA_DIR}/OpenCV-Data/GrabCutMask.png\"\n\n# \"${MITK_DATA_DIR}/OpenCV-Data/GrabCutOutput.png\"\n\n#)\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Modules/OpenCVVideoSupport/Testing/files.cmake" : {
      "ObjectId" : "4ea328571ee6dcbe096a69a46c2a1feba5f84316",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/OpenCVVideoSupport/UI/CMakeLists.txt" : {
      "ObjectId" : "21d213e3ab45e43482076c3e13e879bc9b95ba67",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# no tests yet\n\n#if(BUILD_TESTING)\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#add_subdirectory(Testing)\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#endif(BUILD_TESTING)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Modules/OpenCVVideoSupport/UI/files.cmake" : {
      "ObjectId" : "aee20cfa2f68fa78d02fcd5b9768f99ebc336195",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/OpenCVVideoSupport/files.cmake" : {
      "ObjectId" : "20507780121735a4e5eddfe8da74b4ed93113314",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/OpenIGTLink/CMakeLists.txt" : {
      "ObjectId" : "ac6c973d10b4445ce823c7ec25cead43bcace3d7",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/OpenIGTLink/Testing/CMakeLists.txt" : {
      "ObjectId" : "153cd81e2e6e978627064a0bf18f62f938f7a9f9",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/OpenIGTLink/Testing/files.cmake" : {
      "ObjectId" : "6db6c6577f1453ff62594eeea49868e34923a43c",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/OpenIGTLink/files.cmake" : {
      "ObjectId" : "51166028428161735ff28de85e9f76d8ac88a72b",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/OpenIGTLinkUI/CMakeLists.txt" : {
      "ObjectId" : "b693ea20abbf980634039980dfa3f63ef4bbef12",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#SUBPROJECTS MITKOpenIGTLink\n",
        "Line" : 2,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#GENERATED_CPP ${TOOL_GUI_CPPS} ${TOOL_CPPS}\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "## create IGTUI config\n\n#configure_file(mitkIGTUIConfig.h.in ${PROJECT_BINARY_DIR}/mitkIGTUIConfig.h @ONLY)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Modules/OpenIGTLinkUI/files.cmake" : {
      "ObjectId" : "186d97d9446ebb935822ff740b2a4960eedb9702",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#resources/OpenIGTLinkUI.qrc\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Modules/Persistence/CMakeLists.txt" : {
      "ObjectId" : "29e8584e0b33ab976fe35a3c26911be7bbd0028c",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Persistence/Testing/CMakeLists.txt" : {
      "ObjectId" : "153cd81e2e6e978627064a0bf18f62f938f7a9f9",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Persistence/Testing/files.cmake" : {
      "ObjectId" : "cbf6894db46a9ad048e87a3b033cfcebb71e5b43",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Persistence/files.cmake" : {
      "ObjectId" : "9604345c04a1f8eb35281a2b3e3ee92521a22472",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Pharmacokinetics/CMakeLists.txt" : {
      "ObjectId" : "ee417b64e28d197227ebe7b36b460b8947ad0213",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Pharmacokinetics/autoload/Models/CMakeLists.txt" : {
      "ObjectId" : "e4930a98e5f888649d0dfb5daceb294841ed95ea",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Pharmacokinetics/autoload/Models/files.cmake" : {
      "ObjectId" : "363c531b12ef4f9b0445169c2cf23ea6119852a1",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Pharmacokinetics/cmdapps/CMakeLists.txt" : {
      "ObjectId" : "bbb4b7341c532f750b4855d8fdf96ca3300f3f1d",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# needed include directories\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# list of miniapps\n\n# if an app requires additional dependencies\n\n# they are added after a \"^^\" and separated by \"_\"\n",
        "Line" : 10,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# extract mini app name and dependencies\n",
        "Line" : 20,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# On Linux, create a shell script to start a relocatable application\n",
        "Line" : 35,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 4
    },
    "Modules/Pharmacokinetics/files.cmake" : {
      "ObjectId" : "a389ac558585995e9fa15b59dd4415a3f0f77f0a",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Pharmacokinetics/test/CMakeLists.txt" : {
      "ObjectId" : "d45daf111db19c8ec9b0ffc1dab4f8767f0edab1",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Pharmacokinetics/test/files.cmake" : {
      "ObjectId" : "713e14913fb4bcf4f7b1e04e6a0a2324384a8566",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ConvertToConcentrationTest.cpp\n",
        "Line" : 3,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Modules/PharmacokineticsUI/CMakeLists.txt" : {
      "ObjectId" : "f9adf7c888680fbaebd00ca6e09fff43ebc0e35b",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/PharmacokineticsUI/files.cmake" : {
      "ObjectId" : "afb8e68b31aa4d19d362ce0cbf71440b53ee3bca",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/PhotoacousticsAlgorithms/CMakeLists.txt" : {
      "ObjectId" : "5e001afcf0eaddd477e90a68bbd7718d20aa0940",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#AUTOLOAD_WITH MitkCore\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Modules/PhotoacousticsAlgorithms/MitkPABeamformingTool/CMakeLists.txt" : {
      "ObjectId" : "ba56da85ab5107780571973971a4e20ec3dce9f1",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/PhotoacousticsAlgorithms/MitkPABeamformingTool/files.cmake" : {
      "ObjectId" : "1bed148e4256dbd27f088ce582246ae556babf3c",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/PhotoacousticsAlgorithms/MitkPAResampleCropTool/CMakeLists.txt" : {
      "ObjectId" : "eedce280064ffe11f8193db454c6b77bcf6495fd",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/PhotoacousticsAlgorithms/MitkPAResampleCropTool/files.cmake" : {
      "ObjectId" : "f8bb3ffe666d0991bfab825a9f150a565b6766c0",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/PhotoacousticsAlgorithms/files.cmake" : {
      "ObjectId" : "87f8116092d6d709b27c45239442e720189ff774",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/PhotoacousticsAlgorithms/test/CMakeLists.txt" : {
      "ObjectId" : "153cd81e2e6e978627064a0bf18f62f938f7a9f9",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/PhotoacousticsAlgorithms/test/files.cmake" : {
      "ObjectId" : "f3ac9a4454beb58e6a484fc30a6e8acbf5b8f047",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# IMPORTANT: If you plan to deactivate / comment out a test please write a bug number to the commented out line of code.\n\n#\n\n#     Example: #mitkMyTest #this test is commented out because of bug 12345\n\n#\n\n# It is important that the bug is open and that the test will be activated again before the bug is closed. This assures that\n\n# no test is forgotten after it was commented out. If there is no bug for your current problem, please add a new one and\n\n# mark it as critical.\n\n################## DISABLED TESTS #####################################################\n",
        "Line" : 2,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#mitkBandpassFilterTest.cpp #This test is disabled because of T25780\n\n#mitkBeamformingFilterTest.cpp #This test is disabled because of T25780\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "################# RUNNING TESTS #######################################################\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "Modules/PhotoacousticsHardware/CMakeLists.txt" : {
      "ObjectId" : "06bde63943c75e1f50f6247a7c567de65653c414",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/PhotoacousticsHardware/files.cmake" : {
      "ObjectId" : "d6d5d518808f13c71709c20f638577f088586a9e",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/PhotoacousticsLib/CMakeLists.txt" : {
      "ObjectId" : "83269bc48d5b4881b0173eaf6b6d5a41e9173044",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/PhotoacousticsLib/MitkMCxyz/CMakeLists.txt" : {
      "ObjectId" : "8e528dc4757dc20ad31d764d27d466fb648d8a3d",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/PhotoacousticsLib/MitkMCxyz/files.cmake" : {
      "ObjectId" : "284bae1500f4928755d7108c1d6ca52915120b2a",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/PhotoacousticsLib/MitkPAPhantomGenerator/CMakeLists.txt" : {
      "ObjectId" : "8ebf2fa24df1e86df64a37864f627ca6dd143c52",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/PhotoacousticsLib/MitkPAPhantomGenerator/files.cmake" : {
      "ObjectId" : "07f708562da4a6769c3979b9b9454fb5eeb25e5e",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/PhotoacousticsLib/MitkSpectralUnmixing/CMakeLists.txt" : {
      "ObjectId" : "f2faf72a92cce4d4ea2d15afca9b1e724dd28647",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/PhotoacousticsLib/MitkSpectralUnmixing/files.cmake" : {
      "ObjectId" : "a0a3a5cdb38b4169f60c1157ddb70209b60a6d38",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/PhotoacousticsLib/MitkTissueBatchGenerator/CMakeLists.txt" : {
      "ObjectId" : "715883129969b5f46e83c67ec601153056f324f3",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/PhotoacousticsLib/MitkTissueBatchGenerator/files.cmake" : {
      "ObjectId" : "d4e42c83d540507074a32c4b963a42a274601816",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/PhotoacousticsLib/files.cmake" : {
      "ObjectId" : "5bc7c84dfcbaa48ad84cdca45ae2de18a8e0118c",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/PhotoacousticsLib/test/CMakeLists.txt" : {
      "ObjectId" : "153cd81e2e6e978627064a0bf18f62f938f7a9f9",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/PhotoacousticsLib/test/files.cmake" : {
      "ObjectId" : "c6a200ad696cc6400213aeedcc80e52c63e87ee2",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# IMPORTANT: If you plan to deactivate / comment out a test please write a bug number to the commented out line of code.\n\n#\n\n#     Example: #mitkMyTest #this test is commented out because of bug 12345\n\n#\n\n# It is important that the bug is open and that the test will be activated again before the bug is closed. This assures that\n\n# no test is forgotten after it was commented out. If there is no bug for your current problem, please add a new one and\n\n# mark it as critical.\n",
        "Line" : 2,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "################## ON THE FENCE TESTS #################################################\n\n# none\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "################## DISABLED TESTS #####################################################\n\n# mitkMCThreadHandlerTest.cpp #Timing issue on VMs\n\n# mitkPhotoacousticIOTest.cpp #Not suitable for large scale testing as it performs IO actions.\n\n################# RUNNING TESTS #######################################################\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "Modules/PlanarFigure/CMakeLists.txt" : {
      "ObjectId" : "0933cc7d71283eda8814d98ef5c4cc5c7a55262b",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/PlanarFigure/files.cmake" : {
      "ObjectId" : "dc4d3b3be203215b2a2f386dcc492de8ead80e26",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/PlanarFigure/test/CMakeLists.txt" : {
      "ObjectId" : "55f7454d122f5d34d41cb85c89a41a8eda670778",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set verbose to 1 to get a list of all defined test cases during CMake configuration\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# viewportTest():\n\n#\n\n# 1. Sets up a scene with a DICOM image, several planar figures, an STL file\n\n# 2. Modifies the viewport of the VTK renderer to only a part of the render window\n\n# 3. Compares the rendering result against an expected version\n\n#\n\n# Parameters determine the size and position of the viewport and the render window\n\n# The expected result is mitkViewportRenderingTest_${testPostfix}.png\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# postfix to uniquely identify the test case\n",
        "Line" : 20,
        "CharPositionInLine" : 17
      },
      "3" : {
        "Text" : "# \"rw\" = render window\n",
        "Line" : 21,
        "CharPositionInLine" : 21
      },
      "4" : {
        "Text" : "# \"vp\" = viewport\n",
        "Line" : 22,
        "CharPositionInLine" : 37
      },
      "5" : {
        "Text" : "# list of images/files for visualization\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# use all ADDITIONAL parameters after vpHeight as filenames\n",
        "Line" : 25,
        "CharPositionInLine" : 22
      },
      "7" : {
        "Text" : "# transform the input parameters in required test parameters\n",
        "Line" : 27,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#message(STATUS \"Testing viewport of ${vpWidth}x${vpHeight} at ${vpLeft},${vpBottom} in render window of size ${rwWidth}x${rwHeight} ('${testPostfix}')\")\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# add the actual test\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "#corresponding reference screenshot\n",
        "Line" : 41,
        "CharPositionInLine" : 100
      },
      "11" : {
        "Text" : "# The following lines loop over several variations of aspect ratios for\n\n# - render window\n\n# - a viewport within this render window\n\n# - an input image (defines the input world geometry)\n\n# ---------------------------------------------------------------------\n\n#\n\n# Render window\n\n#  - Square\n\n#  - Landscape\n\n#  - Portrait\n\n#\n\n# Viewport\n\n#  - Square\n\n#  - Landscape\n\n#  - Portrait\n\n#\n\n# World / Image\n\n#  - Square\n\n#  - Landscape\n\n#  - Portrait\n\n#\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "### since the rendering test's do not run in ubuntu, yet, we build them only for other systems or if the user explicitly sets the variable MITK_ENABLE_RENDERING_TESTING\n",
        "Line" : 74,
        "CharPositionInLine" : 36
      },
      "13" : {
        "Text" : "# construct test case name from various aspect ratios\n",
        "Line" : 82,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# construct test image name from aspect ratio\n",
        "Line" : 85,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# nice DICOM name encoding and gray value test image\n",
        "Line" : 86,
        "CharPositionInLine" : 100
      },
      "16" : {
        "Text" : "# render window size\n",
        "Line" : 95,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# viewport size\n",
        "Line" : 108,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# world size\n",
        "Line" : 121,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# Summary\n",
        "Line" : 133,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# endif MITK_ENABLE_RENDERING_TESTING\n",
        "Line" : 154,
        "CharPositionInLine" : 10
      },
      "21" : {
        "Text" : "# endif TARGET ${TESTDRIVER}\n",
        "Line" : 155,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 22
    },
    "Modules/PlanarFigure/test/files.cmake" : {
      "ObjectId" : "5644cbb13bf75b61531186feaf8de5a20b464a63",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#since mitkInteractionTestHelper is currently creating a vtkRenderWindow\n",
        "Line" : 13,
        "CharPositionInLine" : 34
      },
      "CommentCount" : 1
    },
    "Modules/PlanarFigureSegmentation/CMakeLists.txt" : {
      "ObjectId" : "417756d1d5978a4ba97cc6659df3e3d37e1e32b3",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/PlanarFigureSegmentation/files.cmake" : {
      "ObjectId" : "2a18d8c1c8607ae6bd64165b86ed034e9b992b95",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Python/CMakeLists.txt" : {
      "ObjectId" : "e56f24834241e736530cda5075daf98af82bac47",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Python/autoload/PythonService/CMakeLists.txt" : {
      "ObjectId" : "b957860437dac4e59eb86c8e8d65f27701e6388f",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Python/autoload/PythonService/files.cmake" : {
      "ObjectId" : "c27300d6a0ae5d55b9fc4813ca6b426165218f99",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Python/files.cmake" : {
      "ObjectId" : "2761a05f152eded545af6507e5d04f0a99c15f54",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/QtOverlays/CMakeLists.txt" : {
      "ObjectId" : "152ef266661fc09f17ca4c317ab90bd36da7097c",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# unused variable found in qt src related to bug-16780 on osx using the compiler: Apple LLVM version 4.2 (clang-425.0.28) (based on LLVM 3.2svn) Target: x86_64-apple-darwin12.4.0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# In file included from /Users/Cordes/developing/src/MITK-Master/Modules/Overlays/QmitkScalarBar.cpp:20:\n\n# In file included from /Users/Cordes/dartclients/toolkits/qt-4.8.4-Build/include/QtGui/QPaintEvent:1:\n\n# In file included from /Users/Cordes/dartclients/toolkits/qt-4.8.4-Build/include/QtGui/qevent.h:52:\n\n# /Users/Cordes/dartclients/toolkits/qt-4.8.4-Build/include/QtGui/qmime.h:119:10: error: private field 'type' is not used [-Werror,-Wunused-private-field]\n\n#     char type;\n\n#           ^\n\n# 1 error generated.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# start fix for the module Overlays\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# end fix\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Modules/QtOverlays/files.cmake" : {
      "ObjectId" : "72ab1ca127b0ab8c2521bc006f8d06a56cfe8c97",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/QtPython/CMakeLists.txt" : {
      "ObjectId" : "7ffe7c76dabbfa78c048c0e02a7960b7913c5684",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# temporarily disabled, bug-19153\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Modules/QtPython/Testing/CMakeLists.txt" : {
      "ObjectId" : "f84c5188fa8baa7ae7a7cc8506f878101fb65a8c",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/QtPython/Testing/files.cmake" : {
      "ObjectId" : "d4301946daf85f648032acbffd8752cca8aa630e",
      "LastModified" : "2019-04-11T11:36:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/QtPython/files.cmake" : {
      "ObjectId" : "b2aa0226dcd9619e3c979ce6d391b1b5aa1e67de",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#SET(UI_FILES\n\n#  QmitkPythonSnippets.ui\n\n#)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Modules/QtWidgets/CMakeLists.txt" : {
      "ObjectId" : "08c2333393a19a82586d656efd44f973cb223595",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# for xpm includes\n",
        "Line" : 2,
        "CharPositionInLine" : 32
      },
      "CommentCount" : 1
    },
    "Modules/QtWidgets/files.cmake" : {
      "ObjectId" : "ec5e57aa478f8a3d85065a7d74d83f91c9c20af5",
      "LastModified" : "2019-04-08T11:27:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/QtWidgets/test/CMakeLists.txt" : {
      "ObjectId" : "153cd81e2e6e978627064a0bf18f62f938f7a9f9",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/QtWidgets/test/files.cmake" : {
      "ObjectId" : "e915c0c8b2762c3412f049b450a6be72fc84cd72",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# test fails easily on MacOS, rarely on Windows, needs to be fixed before permanent activation (bug 15479)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Modules/QtWidgetsExt/CMakeLists.txt" : {
      "ObjectId" : "5fc72f81b07147601c8256e6f926f448b068c3d3",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/QtWidgetsExt/files.cmake" : {
      "ObjectId" : "e8bd9dd1f6937b1f11f7734049a7e99391d2dc67",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/RDF/CMakeLists.txt" : {
      "ObjectId" : "7cfc95757289f0a8eaf0a63f83b0bb71fe7347b3",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/RDF/Testing/CMakeLists.txt" : {
      "ObjectId" : "42638c56cd2fa47648a12eddba3dd72798c64e5d",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/RDF/Testing/files.cmake" : {
      "ObjectId" : "ce71323c6332a6a0707e3a9f6743b1ac77a4ed56",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# tests with no extra command line parameter\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Modules/RDF/files.cmake" : {
      "ObjectId" : "e58ca817871fa27007bd1d1ece9c684a992093fc",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/REST/CMakeLists.txt" : {
      "ObjectId" : "2b0286b6b60f93271f003a77b1afe66d57237dc4",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/REST/files.cmake" : {
      "ObjectId" : "cdb6da57a4df4a52afa12abb4671d6f206ffd852",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/REST/test/CMakeLists.txt" : {
      "ObjectId" : "42638c56cd2fa47648a12eddba3dd72798c64e5d",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/REST/test/files.cmake" : {
      "ObjectId" : "7299b4bcce58621dca97b2f646fde1b5f15a970e",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/RESTService/CMakeLists.txt" : {
      "ObjectId" : "7a43698da85bee2ef4622bcba8d0809f685e205d",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/RESTService/files.cmake" : {
      "ObjectId" : "df7a46d0bcc053b17b7df636e4c01a13e40016c2",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/RTUI/CMakeLists.txt" : {
      "ObjectId" : "242fef139f65cefea02d6c6179d7e577dd57d11d",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/RTUI/files.cmake" : {
      "ObjectId" : "d983cea1eba1803f334bbcfce943e1f369a6ae2d",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/RegistrationOntology/CMakeLists.txt" : {
      "ObjectId" : "ad8b81348164f0fb5cb7ed4cb84fad0ae292a8dd",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/RegistrationOntology/files.cmake" : {
      "ObjectId" : "1e696fcf9f9c0909a66ce6e1f3373b7e7df90edf",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Remeshing/CMakeLists.txt" : {
      "ObjectId" : "c3da914c8e117740975dceb312491fb393d36153",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Remeshing/Testing/CMakeLists.txt" : {
      "ObjectId" : "a29ccbc9474097dfd04a681b4a83e1cc5522f2ae",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Remeshing/Testing/files.cmake" : {
      "ObjectId" : "055665bf468eba4343f5a839e47cdc9f6e32ee97",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Remeshing/files.cmake" : {
      "ObjectId" : "a9a6a7d8ebb9a77a304df938223077205b32f3af",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/RenderWindowManager/CMakeLists.txt" : {
      "ObjectId" : "f2a2a480bc324882863fb61789de2c8fd1563d1e",
      "LastModified" : "2019-04-08T11:27:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/RenderWindowManager/files.cmake" : {
      "ObjectId" : "8d8bb99f849b81b1260cdd93c52200fda9d4fccb",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/RenderWindowManagerUI/CMakeLists.txt" : {
      "ObjectId" : "7f5d63fa951ccbd05c0fa519c53e1ac6fb2fe962",
      "LastModified" : "2019-04-08T11:27:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/RenderWindowManagerUI/files.cmake" : {
      "ObjectId" : "1637b1a861211d4b372d2a9002526d1e420acd6c",
      "LastModified" : "2019-04-08T11:27:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/SceneSerialization/CMakeLists.txt" : {
      "ObjectId" : "f7b36d7e220b0c354d00f0f194e86a6c10e3faa6",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/SceneSerialization/files.cmake" : {
      "ObjectId" : "82b60f3a5e436b7f30a13b1fd085bbbc89a93966",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/SceneSerialization/test/CMakeLists.txt" : {
      "ObjectId" : "00442dea82a7a871060c86d0ac87909e33c418ac",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# scene to load\n",
        "Line" : 16,
        "CharPositionInLine" : 99
      },
      "1" : {
        "Text" : "# reference rendering\n",
        "Line" : 17,
        "CharPositionInLine" : 112
      },
      "2" : {
        "Text" : "# fix not yet integrated\n",
        "Line" : 19,
        "CharPositionInLine" : 13
      },
      "3" : {
        "Text" : "# scene to load\n",
        "Line" : 21,
        "CharPositionInLine" : 97
      },
      "4" : {
        "Text" : "# reference rendering\n",
        "Line" : 22,
        "CharPositionInLine" : 110
      },
      "CommentCount" : 5
    },
    "Modules/SceneSerialization/test/files.cmake" : {
      "ObjectId" : "2db30a086f700e5c6d6af55f85a3cf740f0ee9f2",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/SceneSerializationBase/CMakeLists.txt" : {
      "ObjectId" : "95aa6b358acf9042cc4d73cd646753e941a408cd",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/SceneSerializationBase/files.cmake" : {
      "ObjectId" : "e5218fadf68f8a54870105bb1045363fabab196c",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/SceneSerializationBase/test/CMakeLists.txt" : {
      "ObjectId" : "9e651d1e8930e2b6d29e4cd551008c996942557d",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/SceneSerializationBase/test/files.cmake" : {
      "ObjectId" : "443288d963633f89824e687d717e8af5ff9b7c6c",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Segmentation/CMakeLists.txt" : {
      "ObjectId" : "1ec269d597e6a41bfc35adbc9696a880b63d8c1d",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/Segmentation/Testing/CMakeLists.txt" : {
      "ObjectId" : "263e5733408248bd0b6328f48db34e8a982051bf",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#mitkAddCustomModuleTest(mitkSegmentationInterpolationTest mitkSegmentationInterpolationTest ${MITK_DATA_DIR}/interpolation_test_manual.nrrd ${MITK_DATA_DIR}/interpolation_test_result.nrrd)\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Modules/Segmentation/Testing/files.cmake" : {
      "ObjectId" : "998fe8337dc5ca5c681d1fd900ffa8b809844250",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  mitkToolManagerTest.cpp\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#new cpp unit style\n",
        "Line" : 13,
        "CharPositionInLine" : 48
      },
      "2" : {
        "Text" : "#since mitkInteractionTestHelper is currently creating a vtkRenderWindow\n",
        "Line" : 16,
        "CharPositionInLine" : 34
      },
      "3" : {
        "Text" : "#only runs on images\n",
        "Line" : 24,
        "CharPositionInLine" : 40
      },
      "CommentCount" : 4
    },
    "Modules/Segmentation/files.cmake" : {
      "ObjectId" : "071e038786cd3a0c49b1622949e715de16bedad6",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Algorithms/mitkImageToContourModelFilter.cpp\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#DataManagement/mitkContourElement.cpp\n\n#DataManagement/mitkContourModel.cpp\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#SO\n",
        "Line" : 66,
        "CharPositionInLine" : 46
      },
      "3" : {
        "Text" : "#IO/mitkContourModelIOFactory.cpp\n\n#IO/mitkContourModelReader.cpp\n\n#IO/mitkContourModelWriter.cpp\n\n#IO/mitkContourModelWriterFactory.cpp\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#Rendering/mitkContourModelGLMapper2D.cpp\n\n#Rendering/mitkContourModelMapper2D.cpp\n\n#Rendering/mitkContourModelMapper3D.cpp\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#Added from ML\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "Modules/SegmentationUI/CMakeLists.txt" : {
      "ObjectId" : "daf52bda9c8e113dbdd329606d6a9592ffcfb766",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/SegmentationUI/files.cmake" : {
      "ObjectId" : "4121e6bd37b34fa928cebb996f0e357c63692a47",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Added from ML\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Added from ML\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Added from ML\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Modules/SemanticRelations/CMakeLists.txt" : {
      "ObjectId" : "72db95214ffda1594d0f8c3071c740c181540b7e",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/SemanticRelations/Test/CMakeLists.txt" : {
      "ObjectId" : "153cd81e2e6e978627064a0bf18f62f938f7a9f9",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/SemanticRelations/Test/files.cmake" : {
      "ObjectId" : "3e491291c0d0de56af3d9cfdc3dae91f61dfb953",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/SemanticRelations/files.cmake" : {
      "ObjectId" : "b5e1bddd7a7ed7e536cbe8660a119b2e7bf71b9e",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/SemanticRelationsUI/CMakeLists.txt" : {
      "ObjectId" : "1a94ea6b531b35815edafb3510ddf7a258547f89",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/SemanticRelationsUI/files.cmake" : {
      "ObjectId" : "8208ef2d169b65fba463fc206373bb713250f6ab",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/SurfaceInterpolation/CMakeLists.txt" : {
      "ObjectId" : "de0af4ff0671efa13d30a838d88698251b816d51",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/SurfaceInterpolation/Testing/CMakeLists.txt" : {
      "ObjectId" : "153cd81e2e6e978627064a0bf18f62f938f7a9f9",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/SurfaceInterpolation/Testing/files.cmake" : {
      "ObjectId" : "be4eb82fbfd9219b130606b1c54c34fa8dfd0355",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/SurfaceInterpolation/files.cmake" : {
      "ObjectId" : "7d2db9fb049eddb362f60e349895f1f0cbfbb12a",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/ToFHardware/CMakeLists.txt" : {
      "ObjectId" : "45414ffffeded6c02e4be550e9014daefcbd77b7",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Define the platform string\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set(tofHardware_srcs )\n\n# usFunctionEmbedResources(tofHardware_srcs\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# LIBRARY_NAME mitkToFHardware\n\n# ROOT_DIR ${MITK_DATA_DIR}/ToF-Data/CalibrationFiles\n\n# FILES  Default_Parameters.xml Kinect_IR_camera.xml Kinect_RGB_camera.xml Mesa-SR4000_Camera.xml PMDCamBoard_camera.xml PMDCamCube2_camera.xml PMDCamCube3_camera.xml\n",
        "Line" : 13,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "# )\n",
        "Line" : 16,
        "CharPositionInLine" : 24
      },
      "4" : {
        "Text" : "# Install external libraries which are not directly linked to a MITK module\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#foreach(tofhardwaresubfolder_dir ${tofhardwaresubfolder_dirs})\n\n#  add_subdirectory(${tofhardwaresubfolder_dirs})\n\n#endforeach()\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "Modules/ToFHardware/Kinect/CMakeLists.txt" : {
      "ObjectId" : "e4342230e2cd072bca30e15a07047267f9bf528f",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Begin Kinect hardware\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#End Kinect Hardware\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Modules/ToFHardware/Kinect/Testing/CMakeLists.txt" : {
      "ObjectId" : "153cd81e2e6e978627064a0bf18f62f938f7a9f9",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/ToFHardware/Kinect/Testing/files.cmake" : {
      "ObjectId" : "49dccb082a4d7abec203291433fd92db45e65c47",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/ToFHardware/Kinect/files.cmake" : {
      "ObjectId" : "8d51676d3dfebccde32c78d7c5a69cd62005292a",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/ToFHardware/KinectV2/CMakeLists.txt" : {
      "ObjectId" : "e1b35b9d9f658a72941376e8d3f960a1b9a8e1d7",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/ToFHardware/KinectV2/Testing/CMakeLists.txt" : {
      "ObjectId" : "153cd81e2e6e978627064a0bf18f62f938f7a9f9",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/ToFHardware/KinectV2/Testing/files.cmake" : {
      "ObjectId" : "a879ff9c9f6138fd2fbdea5ed68c5aaba804f347",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/ToFHardware/KinectV2/files.cmake" : {
      "ObjectId" : "295f8035b603e8b5b010e7f4f23c4d143cb9039e",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Todo: Replace me one we have actual calibration files\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Modules/ToFHardware/MesaSR4000/CMakeLists.txt" : {
      "ObjectId" : "fb5efc890c5452e2a39434aa8b536968899dec25",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Begin MESA SR4000 hardware\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#End MESA SR4000 Hardware\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Modules/ToFHardware/MesaSR4000/Testing/CMakeLists.txt" : {
      "ObjectId" : "153cd81e2e6e978627064a0bf18f62f938f7a9f9",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/ToFHardware/MesaSR4000/Testing/files.cmake" : {
      "ObjectId" : "ff2836532725491692bbbdb39ef3814a9c460e1f",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Modules/ToFHardware/MesaSR4000/files.cmake" : {
      "ObjectId" : "3f26a61a9eab44af5e0674c9a7c113c422713b3f",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/ToFHardware/PMD/CMakeLists.txt" : {
      "ObjectId" : "0e2aaca2cd3f8d286f520cab625a9b13401fbd85",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Begin PMD Module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Creating Basics for all PMD devices\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----Setting generall Path-----\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#-----Creating the PMD-Module itself-----\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#Only for CamCube\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#  message(${MITK_BINARY_DIR})\n\n#  message(${MITK_PMD_SDK_DIR})\n\n#  message(${_PLATFORM_STRING})\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#-------------------------------Begin CamBoard hardware-------------------------------------------\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#  FILE(GLOB MITK_TOF_PMD_CAMBOARD_SOURCE camboard.${_PLATFORM_STRING}.pap)\n\n#  FILE(GLOB MITK_TOF_PMD_CAMBOARD_PROC camboardproc.${_PLATFORM_STRING}.ppp)\n\n#  FILE(GLOB MITK_TOF_PMD_FILE_SOURCE ${MITK_PMD_SDK_DIR}/plugins/pmdfile.${_PLATFORM_STRING}.pcp)\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#----------------------------------------Begin PMD O3 hardware--------------------------------------------\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# only if PMD O3 is enabled\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#Generate the mitkToFPMDConfig.h file which is used internally\n",
        "Line" : 101,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 11
    },
    "Modules/ToFHardware/PMD/Testing/CMakeLists.txt" : {
      "ObjectId" : "153cd81e2e6e978627064a0bf18f62f938f7a9f9",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/ToFHardware/PMD/Testing/files.cmake" : {
      "ObjectId" : "280b80228954285291b83d4690b0781deacb4033",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/ToFHardware/PMD/files.cmake" : {
      "ObjectId" : "d1c00bd46f06b37e539a77db4f3e5816f0708057",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#the PMDRawDataCamCubeDeviceFactory need the\n",
        "Line" : 8,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "#and the PMDRawDataDevice depends on\n",
        "Line" : 10,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "#wenn nichts geht, dann wieder nach unten\n",
        "Line" : 13,
        "CharPositionInLine" : 34
      },
      "3" : {
        "Text" : "##---------------------------------------------------Use of CamCube--------------------------------------------\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#mitkToFCameraPMDPlayerController only works for 32 bit\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# SET(CPP_FILES ${CPP_FILES} mitkToFCameraPMDPlayerControllerStub.cpp)\n",
        "Line" : 33,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "#----------------------------------------------Use of CamBoard-----------------------------------------------\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#---------------------------------------------------------------------------------------------------------\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#------------------------------------------------Use of O3-----------------------------------------------\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "Modules/ToFHardware/Testing/CMakeLists.txt" : {
      "ObjectId" : "26dd60344273cf2b1be00444c561215a0847b12f",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Only enabled for Windows and Mac nightlies.\n\n#If you want to run this on linux, just enable the flag in the superbuild.\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#testname\n",
        "Line" : 9,
        "CharPositionInLine" : 80
      },
      "2" : {
        "Text" : "#testclassname\n",
        "Line" : 10,
        "CharPositionInLine" : 41
      },
      "3" : {
        "Text" : "#input image\n",
        "Line" : 11,
        "CharPositionInLine" : 43
      },
      "4" : {
        "Text" : "#reference image\n",
        "Line" : 12,
        "CharPositionInLine" : 102
      },
      "5" : {
        "Text" : "#rendering tests cannot run in parallel\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "Modules/ToFHardware/Testing/files.cmake" : {
      "ObjectId" : "58b84b76f2ea20260e632f06d569db630fb743d7",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#mitkThreadedToFRawDataReconstructionTest.cpp\n",
        "Line" : 2,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#mitkToFImageRecorderFilterTest.cpp\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "Modules/ToFHardware/files.cmake" : {
      "ObjectId" : "90d445dbc4fb0132f227b47f44d4d0ccf374835d",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#IF(NOT MITK_USE_TOF_PMDCAMCUBE)\n\n#IF(NOT MITK_USE_TOF_PMDCAMBOARD)\n\n#IF(NOT MITK_USE_TOF_PMDO3)\n\n#SET(CPP_FILES ${CPP_FILES}\n\n#  mitkToFCameraPMDControllerStub.cpp\n\n#)\n\n#ENDIF(NOT MITK_USE_TOF_PMDO3)\n\n#ENDIF(NOT MITK_USE_TOF_PMDCAMBOARD)\n\n#ENDIF(NOT MITK_USE_TOF_PMDCAMCUBE)\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Modules/ToFHardware/mitkToFHardwareInstallRules.cmake" : {
      "ObjectId" : "15cb4265cc77f98c352caaaee8cd94a89f610413",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Only for CamCube\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-------------------------------Begin CamBoard hardware-------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#    MITK_INSTALL(FILES ${MITK_PMD_SDK_DIR}/plugins/camboard.W64.pap CONFIGURATIONS Release)\n\n#    MITK_INSTALL(FILES ${MITK_PMD_SDK_DIR}/plugins/camboardproc.W64.ppp CONFIGURATIONS Release)\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#----------------------------------------Begin PMD O3 hardware--------------------------------------------\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Modules/ToFProcessing/CMakeLists.txt" : {
      "ObjectId" : "51c57e409bb1ecaef89eebb720b891adc5b0f987",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/ToFProcessing/Testing/CMakeLists.txt" : {
      "ObjectId" : "5c76b6f0217e70386e6280d06d10104bd13c4fea",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#camera intrinsics\n\n#kinect distance image\n",
        "Line" : 6,
        "CharPositionInLine" : 91
      },
      "1" : {
        "Text" : "#mitkAddCustomModuleTest(mitkToFImageDownsamplingFilterTest_20 mitkToFImageDownsamplingFilterTest PMDCamCube2_MF0_IT0_20Images_DistanceImage.pic)\n\n#mitkAddCustomModuleTest(mitkToFImageDownsamplingFilterTest_1 mitkToFImageDownsamplingFilterTest PMDCamCube2_MF0_IT0_1Images_DistanceImage.pic)\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "Modules/ToFProcessing/Testing/files.cmake" : {
      "ObjectId" : "56bcb0184b137690cd85d9717e2ad1b2737cb20e",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#mitkToFImageDownsamplingFilterTest.cpp\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Modules/ToFProcessing/files.cmake" : {
      "ObjectId" : "3fe591eb0a903e0e29633be34a3a0c043cf6b1cf",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/ToFUI/CMakeLists.txt" : {
      "ObjectId" : "2eaf906d34e44c9e9b3d6083a01273ec0cfc61e7",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/ToFUI/files.cmake" : {
      "ObjectId" : "419506ffa0ee89920d1606e8d5a1603bacea7b47",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# uncomment the following line if you want to use Qt resources\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Modules/TubeGraph/CMakeLists.txt" : {
      "ObjectId" : "1d4949980d90486224d2d6e6e91a7cc270a14838",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The Boost Graph library at least up to version 1.57 does not\n\n# compile with gcc < 4.7 and -std=c++0x, see\n\n# http://stackoverflow.com/questions/25395805/compile-error-with-boost-graph-1-56-0-and-g-4-6-4\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#add_subdirectory(test)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Modules/TubeGraph/files.cmake" : {
      "ObjectId" : "8cd0a31a023daf98f2146905e9f3689c1b671096",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/TumorInvasionAnalysis/CMakeLists.txt" : {
      "ObjectId" : "270882e7982c8571e600e3c34b3887f27edb791d",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#<-- modules on which your module depends\n",
        "Line" : 3,
        "CharPositionInLine" : 131
      },
      "CommentCount" : 1
    },
    "Modules/TumorInvasionAnalysis/MiniApps/CMakeLists.txt" : {
      "ObjectId" : "8525a62c291c0f87c387e250b71185e42e31380d",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# list of miniapps\n\n# if an app requires additional dependencies\n\n# they are added after a \"^^\" and separated by \"_\"\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "#Resampling^^\n",
        "Line" : 18,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# extract mini app name and dependencies\n",
        "Line" : 27,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 3
    },
    "Modules/TumorInvasionAnalysis/files.cmake" : {
      "ObjectId" : "a757fcc18b8748b6de015cd8bfe71222c102c326",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/TumorInvasionAnalysis/test/CMakeLists.txt" : {
      "ObjectId" : "153cd81e2e6e978627064a0bf18f62f938f7a9f9",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/TumorInvasionAnalysis/test/files.cmake" : {
      "ObjectId" : "138e8852525587c114910171a3488384d2ffa49b",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Testing the basic classification funtionality\n",
        "Line" : 2,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Modules/US/CMakeLists.txt" : {
      "ObjectId" : "5add219afe1b2311ad5fd7f4ab12fd4237e8051b",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## create US config\n\n#CONFIGURE_FILE(mitkUSConfig.h.in ${PROJECT_BINARY_DIR}/mitkUSConfig.h @ONLY)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Modules/US/Testing/CMakeLists.txt" : {
      "ObjectId" : "9fe9323c1cf72d9c054c627e83b255c4f12c4df4",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/US/Testing/files.cmake" : {
      "ObjectId" : "c3b51c1dd76ccb10a98548a15d5704076a880643",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -----------------------------------------------------------------------\n",
        "Line" : 5,
        "CharPositionInLine" : 3
      },
      "1" : {
        "Text" : "# ------------------ Deavtivated Tests ----------------------------------\n",
        "Line" : 7,
        "CharPositionInLine" : 3
      },
      "2" : {
        "Text" : "# see http://bugs.mitk.org/show_bug.cgi?id=18180\n",
        "Line" : 9,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "# -----------------------------------------------------------------------\n",
        "Line" : 12,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 4
    },
    "Modules/US/USHardwareDiPhAS/CMakeLists.txt" : {
      "ObjectId" : "f0d0d271567ad0978f8a706f57184e37d6d73b1a",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/US/USHardwareDiPhAS/files.cmake" : {
      "ObjectId" : "84d6550ddbb3f17a7e077d28f42e0a07dd7bd726",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/US/USHardwareTelemed/CMakeLists.txt" : {
      "ObjectId" : "a37c14c96f90aee1a160e9a76b57f47126b9d2cb",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/US/USHardwareTelemed/files.cmake" : {
      "ObjectId" : "113283c33c05e10551c9d2c6c7d8852f8c89e937",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/US/USNavigation/CMakeLists.txt" : {
      "ObjectId" : "ada0962b54c8ed12d59b7f259b4470df2237fd8d",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/US/USNavigation/Testing/CMakeLists.txt" : {
      "ObjectId" : "a73187c4c5a8d794064552fcd71f03aa3b3efbcf",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/US/USNavigation/Testing/files.cmake" : {
      "ObjectId" : "80bda0d9431fa66958e09bab44731d795b9a895c",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -----------------------------------------------------------------------\n",
        "Line" : 5,
        "CharPositionInLine" : 3
      },
      "1" : {
        "Text" : "# ------------------ Deavtivated Tests ----------------------------------\n",
        "Line" : 7,
        "CharPositionInLine" : 3
      },
      "2" : {
        "Text" : "# -----------------------------------------------------------------------\n",
        "Line" : 9,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 3
    },
    "Modules/US/USNavigation/files.cmake" : {
      "ObjectId" : "b240daaede284f0ae0f38cf1a596cc986616e14c",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/US/files.cmake" : {
      "ObjectId" : "42c099ed219d7938993d41391d2b7306cda6cb0e",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Module Activator\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Model Classes\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Filters and Sources\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Control Interfaces\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Modules/USUI/CMakeLists.txt" : {
      "ObjectId" : "76d63c0aa171ef37c22b5a85cb79dde8aa5c7d5c",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/USUI/files.cmake" : {
      "ObjectId" : "828924aadcc50bbee9d8689bd5689b8f3704fd08",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/XNAT/CMakeLists.txt" : {
      "ObjectId" : "467e78c28eccd7c098a69ca316bbe05e2678b0de",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Modules/XNAT/files.cmake" : {
      "ObjectId" : "c7bac427c8d2253304036b05e14d68087220235e",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/PluginList.cmake" : {
      "ObjectId" : "4446b8ab1ae1775fb62cf811cb30a373ccff8ffc",
      "LastModified" : "2019-04-08T11:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Plug-ins must be ordered according to their dependencies\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#org.blueberry.test:ON\n\n#org.blueberry.uitest:ON\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#Testing/org.blueberry.core.runtime.tests:ON\n\n#Testing/org.blueberry.osgi.tests:ON\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "Plugins/Testing/org.blueberry.core.runtime.tests/CMakeLists.txt" : {
      "ObjectId" : "4f06c8b20002df5460672f8e303ca63ede4b8ffc",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/Testing/org.blueberry.core.runtime.tests/files.cmake" : {
      "ObjectId" : "904a56991cdf625f7831378484e928b4969792e9",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/Testing/org.blueberry.core.runtime.tests/manifest_headers.cmake" : {
      "ObjectId" : "8b41b0f2cf51b8a7bdaecb28020f0a54f8de49f1",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/Testing/org.blueberry.osgi.tests/CMakeLists.txt" : {
      "ObjectId" : "a7a9a5798b910bd5679bb284a941051012fe74e4",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/Testing/org.blueberry.osgi.tests/files.cmake" : {
      "ObjectId" : "197cf50487a77d1d4e879dcadb231a219ae7b5c5",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/Testing/org.blueberry.osgi.tests/manifest_headers.cmake" : {
      "ObjectId" : "68eb0fe0b84b13b8f946064e2861391d01f66895",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/Testing/org.blueberry.ui.tests/CMakeLists.txt" : {
      "ObjectId" : "f57bb14965473d16c70cb0e37f27643d5aa8fa41",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/Testing/org.blueberry.ui.tests/files.cmake" : {
      "ObjectId" : "2bc694a1106c9d28d65a066e5283dde89109bac2",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# API Tests\n",
        "Line" : 19,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Plugins/Testing/org.blueberry.ui.tests/manifest_headers.cmake" : {
      "ObjectId" : "e114bf166fb3fec09304c8c75f99dccb9d6f25b6",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.blueberry.core.commands/CMakeLists.txt" : {
      "ObjectId" : "6577b177be8b6f8e87fceafad820d4fede447876",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.blueberry.core.commands/files.cmake" : {
      "ObjectId" : "163e67c47c9e81a18b53c77fd40a18b2e1c38570",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.blueberry.core.commands/manifest_headers.cmake" : {
      "ObjectId" : "331e4404bfc208a1447af49b97c55e21b6a987ac",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.blueberry.core.expressions/CMakeLists.txt" : {
      "ObjectId" : "043348563e2a7530566ffe5fdca864dfa9fa6bc2",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.blueberry.core.expressions/files.cmake" : {
      "ObjectId" : "8d410d5d88e2d4c97616deca475cc6536427b08d",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.blueberry.core.expressions/manifest_headers.cmake" : {
      "ObjectId" : "e2eeaadec9fe523fd27698e3cc5da9874d78d351",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.blueberry.core.jobs/CMakeLists.txt" : {
      "ObjectId" : "14d094330d142e8620f06eb3a51038939073d716",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.blueberry.core.jobs/files.cmake" : {
      "ObjectId" : "0f3859ae066c7461f96346e06329d32e474c36e7",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.blueberry.core.jobs/manifest_headers.cmake" : {
      "ObjectId" : "db7108a05edfabb576df2137905244e45913263a",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.blueberry.core.runtime/CMakeLists.txt" : {
      "ObjectId" : "91029832dcf1c8eb6927a01dedd49823e0691771",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set compiler flags\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Plugins/org.blueberry.core.runtime/files.cmake" : {
      "ObjectId" : "e954d8f9303e2b1352088983a94f65e1c9a4be5f",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# application\n",
        "Line" : 56,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# registry\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "Plugins/org.blueberry.core.runtime/manifest_headers.cmake" : {
      "ObjectId" : "becee679968ad3a9e0cd01888c77f00d490d8c7f",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.blueberry.core.runtime/target_libraries.cmake" : {
      "ObjectId" : "b24576f07e7ac4489ccb4b21862c351223c015ba",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n#\n\n# This file should list the libraries required to build the current CTK plugin.\n\n# For specifying required plugins, see the manifest_headers.cmake file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Plugins/org.blueberry.test/CMakeLists.txt" : {
      "ObjectId" : "a1fb3b2ae35e4767291451d116e8dcd14670fb4c",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.blueberry.test/files.cmake" : {
      "ObjectId" : "2021d90c53bcb6c3687efba5b22e4ee69f70adf0",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.blueberry.test/manifest_headers.cmake" : {
      "ObjectId" : "0ff436ef9feafce03f8c03058a89dd1c6a9e310a",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.blueberry.ui.qt.help/CMakeLists.txt" : {
      "ObjectId" : "dee5567fde43014604c75d59135494f704956b9f",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.blueberry.ui.qt.help/files.cmake" : {
      "ObjectId" : "224105c84ca15fb2ae7caf9fec8852d2a884c089",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.blueberry.ui.qt.help/manifest_headers.cmake" : {
      "ObjectId" : "705b1660ce8ad712dccc0fb25d01504fe172fbc0",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.blueberry.ui.qt.help/target_libraries.cmake" : {
      "ObjectId" : "d960ce8173bd71ae01d1873c0f1060b8006154f0",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n#\n\n# This file should list the libraries required to build the current CTK plugin.\n\n# For specifying required plugins, see the manifest_headers.cmake file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Plugins/org.blueberry.ui.qt.log/CMakeLists.txt" : {
      "ObjectId" : "fa9f780cf1c0511b4aff079dabf2d22d6178096d",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.blueberry.ui.qt.log/files.cmake" : {
      "ObjectId" : "7f19a73a24f6295ad73a86c11b35c17fc9afdb7d",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.blueberry.ui.qt.log/manifest_headers.cmake" : {
      "ObjectId" : "2e97a135f4006dad6caa635573d35d8c59f7dbe1",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.blueberry.ui.qt.objectinspector/CMakeLists.txt" : {
      "ObjectId" : "b178f8ceed4dec2aa0eb052f918750f643d080b6",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.blueberry.ui.qt.objectinspector/files.cmake" : {
      "ObjectId" : "53a473f378b8d852292f31ff90d1b1c87d6eda2c",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.blueberry.ui.qt.objectinspector/manifest_headers.cmake" : {
      "ObjectId" : "3ce375a003fb6fc17b5c79d6ba728ad821ee0011",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.blueberry.ui.qt/CMakeLists.txt" : {
      "ObjectId" : "a03b353eda5b4db07e3587891445fe124a7f579a",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.blueberry.ui.qt/files.cmake" : {
      "ObjectId" : "1c615172516983c258a2342db5a08cf29fc69714",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#actions\n",
        "Line" : 110,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#actions/berryMenuBarManager.cpp\n",
        "Line" : 122,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#application\n",
        "Line" : 130,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#commands\n",
        "Line" : 138,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#guitk\n",
        "Line" : 146,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#handlers\n",
        "Line" : 153,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#intro\n",
        "Line" : 161,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#models\n",
        "Line" : 167,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#tweaklets\n",
        "Line" : 171,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#presentations\n",
        "Line" : 176,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#services\n",
        "Line" : 184,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "#testing\n",
        "Line" : 195,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "#util\n",
        "Line" : 198,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# application\n",
        "Line" : 202,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "#intro\n",
        "Line" : 243,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 15
    },
    "Plugins/org.blueberry.ui.qt/manifest_headers.cmake" : {
      "ObjectId" : "de44e117cab4f817133bc15acb972bdd8a2132da",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.blueberry.uitest/CMakeLists.txt" : {
      "ObjectId" : "7f828c370c23a92a50c76b7d1db106f570fab437",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.blueberry.uitest/files.cmake" : {
      "ObjectId" : "412fa2378b738fc240bc81417e367fc463467752",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.blueberry.uitest/manifest_headers.cmake" : {
      "ObjectId" : "2d9e380cd0152d350665839dd2f458041821d29f",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.core.ext/CMakeLists.txt" : {
      "ObjectId" : "1eeffccb13f536ee40f6a5ced68b7ebc51f7c705",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.core.ext/files.cmake" : {
      "ObjectId" : "d16543df6962d66bc424db72c526b181231134bb",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.core.ext/manifest_headers.cmake" : {
      "ObjectId" : "f900ff64fdf454d89f149cf6af0f1c126f017801",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.core.jobs/CMakeLists.txt" : {
      "ObjectId" : "db37394a7bf74452f147de6d8ffbb271ed03dc78",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.core.jobs/files.cmake" : {
      "ObjectId" : "ce7df10ec24c175fe2ff645570e6bd1277ce05d1",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.core.jobs/manifest_headers.cmake" : {
      "ObjectId" : "1c6b184f23da0d80b6d826fd199627777d235a99",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.core.services/CMakeLists.txt" : {
      "ObjectId" : "ab0342e9475473c18f9c9b4ae718eb8a19d59661",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.core.services/files.cmake" : {
      "ObjectId" : "28e8dc5b8bf278f72fbd496dc0a00d7a0b5ff3f0",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.core.services/manifest_headers.cmake" : {
      "ObjectId" : "6661dcb2a8b7cc16db66c73b65afdd7f9f79944a",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.common/CMakeLists.txt" : {
      "ObjectId" : "4708013faa14cff5697c5a985b369bc0f1bbe139",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.common/files.cmake" : {
      "ObjectId" : "ced5665193d4e785d51dadffc8007bd098910e1e",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(CPP_FILES manifest.cpp)\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Plugins/org.mitk.gui.common/manifest_headers.cmake" : {
      "ObjectId" : "4dfb13fb9628a439f8e24028b31134da1540562a",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.aicpregistration/CMakeLists.txt" : {
      "ObjectId" : "5f2488d6d8179d8bdfee04ab4c400eaff1e82cb0",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.aicpregistration/files.cmake" : {
      "ObjectId" : "759cd2017c7a49ea379bea638710beda9ede927e",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# list of resource files which can be used by the plug-in\n\n# system without loading the plug-ins shared library,\n\n# for example the icon used in the menu and tabs for the\n\n# plug-in views in the workbench\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# list of Qt .qrc files which contain additional resources\n\n# specific to this plugin\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Plugins/org.mitk.gui.qt.aicpregistration/manifest_headers.cmake" : {
      "ObjectId" : "90b4a677d8766fbd808230a4b52deed837e73dea",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.application/CMakeLists.txt" : {
      "ObjectId" : "04efa26bd061b55c2e3fa16d69feee86c95b9212",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.application/files.cmake" : {
      "ObjectId" : "9bf54191eaa31826ae69ac2d9d74d28c49528fdb",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.application/manifest_headers.cmake" : {
      "ObjectId" : "26537411150ab418e322895d2f6edb54bd313876",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.application/target_libraries.cmake" : {
      "ObjectId" : "d960ce8173bd71ae01d1873c0f1060b8006154f0",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n#\n\n# This file should list the libraries required to build the current CTK plugin.\n\n# For specifying required plugins, see the manifest_headers.cmake file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Plugins/org.mitk.gui.qt.basicimageprocessing/CMakeLists.txt" : {
      "ObjectId" : "b40272d0dffa3e9ff2be8aea451b11652be7e3c2",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.basicimageprocessing/files.cmake" : {
      "ObjectId" : "c178c9087c6f4fc9436bff6ca239344d0904540e",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.basicimageprocessing/manifest_headers.cmake" : {
      "ObjectId" : "1276fbfbfedec81e3be5fdf10d85ec200dca8fc2",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.cest/CMakeLists.txt" : {
      "ObjectId" : "02e76db46fcbfbcbc16ecb9b03f0aa2ca59002dc",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.cest/files.cmake" : {
      "ObjectId" : "67dcc599ba02845c9ec48dbf3fef9aad111fccf8",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# list of resource files which can be used by the plug-in\n\n# system without loading the plug-ins shared library,\n\n# for example the icon used in the menu and tabs for the\n\n# plug-in views in the workbench\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# list of Qt .qrc files which contain additional resources\n\n# specific to this plugin\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Plugins/org.mitk.gui.qt.cest/manifest_headers.cmake" : {
      "ObjectId" : "5d763902edbee04b486ff9b38e25fe099b846a11",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.chartExample/CMakeLists.txt" : {
      "ObjectId" : "0dca18627d6355d5c3bfd85db386d484b7551918",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.chartExample/files.cmake" : {
      "ObjectId" : "b097c50982dea1e90def9a7f6bc65ae1f0c13e03",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# list of resource files which can be used by the plug-in\n\n# system without loading the plug-ins shared library,\n\n# for example the icon used in the menu and tabs for the\n\n# plug-in views in the workbench\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# list of Qt .qrc files which contain additional resources\n\n# specific to this plugin\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Plugins/org.mitk.gui.qt.chartExample/manifest_headers.cmake" : {
      "ObjectId" : "cd9dfa7afccf5d495c64f096717873738dbe2bcb",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.classificationsegmentation/CMakeLists.txt" : {
      "ObjectId" : "6722ebed1496a782c7cb61d544fc92889aa579f0",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.classificationsegmentation/files.cmake" : {
      "ObjectId" : "d058df59d86fb43350b64bfa25457cfbc3bd1125",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# list of resource files which can be used by the plug-in\n\n# system without loading the plug-ins shared library,\n\n# for example the icon used in the menu and tabs for the\n\n# plug-in views in the workbench\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# list of Qt .qrc files which contain additional resources\n\n# specific to this plugin\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Plugins/org.mitk.gui.qt.classificationsegmentation/manifest_headers.cmake" : {
      "ObjectId" : "5e2df456c2b584314451271722bd5a999e54e879",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.cmdlinemodules/CMakeLists.txt" : {
      "ObjectId" : "9f8ac489da5610275ccbfa8f55691336de6f4728",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copy CTK Qt (designer) plugins to a Qt default path in the MITK bin\n\n# this has been implemented as a fix for bug 19379\n\n# The Qt plugins provided by CTK were not found in the plugin paths\n\n# when running in the build tree\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Plugins/org.mitk.gui.qt.cmdlinemodules/files.cmake" : {
      "ObjectId" : "ab516fb30bf6e9236fbc197acf4caf2c9f441337",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# list of resource files which can be used by the plug-in\n\n# system without loading the plug-ins shared library,\n\n# for example the icon used in the menu and tabs for the\n\n# plug-in views in the workbench\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# list of Qt .qrc files which contain additional resources\n\n# specific to this plugin\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Plugins/org.mitk.gui.qt.cmdlinemodules/manifest_headers.cmake" : {
      "ObjectId" : "8ed170d027cade4cc74824f058d4abfd10c1d09c",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.common.legacy/CMakeLists.txt" : {
      "ObjectId" : "720f7b98a316be05b35878753c01cc42f811eaf4",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.common.legacy/files.cmake" : {
      "ObjectId" : "331c6b063f245b4dc41848cc57d8f1e89c612df1",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.common.legacy/manifest_headers.cmake" : {
      "ObjectId" : "b9d31fb32e51ca0136646660a233522f6a360f15",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.common/CMakeLists.txt" : {
      "ObjectId" : "d30d57f00e1fa7c1969635ced67115ca53a25d03",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.common/files.cmake" : {
      "ObjectId" : "c3b68caa5dd861bda43d6e8bc70072619a297060",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.common/manifest_headers.cmake" : {
      "ObjectId" : "785ba2d40fc93bb77fe0158e8b51ab7bd51124ac",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.common/testing/CMakeLists.txt" : {
      "ObjectId" : "c56ac6d48a136fc4545b767dc120cf9548712dd0",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.common/testing/files.cmake" : {
      "ObjectId" : "04afecf4236a84780e0c3826ea9052b36a2fed2c",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# API Tests\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#  icons/view.gif\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Plugins/org.mitk.gui.qt.common/testing/manifest_headers.cmake" : {
      "ObjectId" : "7b73fbce2248da9699b60c2abc5fddc4682dcd84",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.coreapplication/CMakeLists.txt" : {
      "ObjectId" : "69927c8d5b8754633da37ccccc80d7120671ce83",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.coreapplication/files.cmake" : {
      "ObjectId" : "863322168d2c8100dfcb32cffbd14e2021462318",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.coreapplication/manifest_headers.cmake" : {
      "ObjectId" : "ab0cc3127cb91307ccb8af6ffe55423fd8e989ea",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.datamanager/CMakeLists.txt" : {
      "ObjectId" : "d5fe776fcbece3c3b1ee01a798d4740425127bae",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.datamanager/files.cmake" : {
      "ObjectId" : "59ebc6effd52ba38bc5fedb554dab9f886bd524a",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.datamanager/manifest_headers.cmake" : {
      "ObjectId" : "c72b4ecb981609638df51d77ce7af3b384f82ba6",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.datamanagerlight/CMakeLists.txt" : {
      "ObjectId" : "1d7f02526c04e9266f8bebc51aa5a385787aac5a",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.datamanagerlight/files.cmake" : {
      "ObjectId" : "2bf1582833ef6a54cf59de6fc189d1b6fb83d74a",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.datamanagerlight/manifest_headers.cmake" : {
      "ObjectId" : "fe45140ebbbfc184d1454ed036e32cb400c84ce1",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.datastorageviewertest/CMakeLists.txt" : {
      "ObjectId" : "add23310bde83e1d2b4a4ef983234fb31772cc03",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.datastorageviewertest/files.cmake" : {
      "ObjectId" : "7346b84a06185ffba2049fe7342aa087a8850783",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.datastorageviewertest/manifest_headers.cmake" : {
      "ObjectId" : "31898162958d93429fd9f807f93775c93353f9f5",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.dicom/CMakeLists.txt" : {
      "ObjectId" : "e42f75544671eddf542261ab887f52fda2bda54a",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Note:\n\n# If we use an installed version of DCMTK then DCMTK_DIR points to the subdirectory\n\n# of the installation directory (share/dcmtk) that contains DCMTKConfig.cmake.\n\n# Therefore we look for the the storescp command in the '../../bin' directory, too.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Plugins/org.mitk.gui.qt.dicom/files.cmake" : {
      "ObjectId" : "fd1508a301008a3c660fd784835b661cb4da9b4d",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# list of resource files which can be used by the plug-in\n\n# system without loading the plug-ins shared library,\n\n# for example the icon used in the menu and tabs for the\n\n# plug-in views in the workbench\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# list of Qt .qrc files which contain additional resources\n\n# specific to this plugin\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Plugins/org.mitk.gui.qt.dicom/manifest_headers.cmake" : {
      "ObjectId" : "8e156520f99ca953b278afbf526144684b04be5d",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.dicominspector/CMakeLists.txt" : {
      "ObjectId" : "ea55c8d236ad4bfbf731b85de119690ae8e7733e",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.dicominspector/files.cmake" : {
      "ObjectId" : "58fe6719bba449d4618617dc1ba714c094dd4664",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# list of resource files which can be used by the plug-in\n\n# system without loading the plug-ins shared library,\n\n# for example the icon used in the menu and tabs for the\n\n# plug-in views in the workbench\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# list of Qt .qrc files which contain additional resources\n\n# specific to this plugin\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Plugins/org.mitk.gui.qt.dicominspector/manifest_headers.cmake" : {
      "ObjectId" : "745eb4447cfabc11b4b839cda9c4caa6db89a4c5",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.diffusionimaging.connectomics/CMakeLists.txt" : {
      "ObjectId" : "e440872661017373de246b7b51aa23a978483818",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The project name must correspond to the directory name of your plug-in\n\n# and must not contain periods.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Plugins/org.mitk.gui.qt.diffusionimaging.connectomics/files.cmake" : {
      "ObjectId" : "cb08f4f6c79f9cec990c6b9cb2b0a7da27bc0843",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.diffusionimaging.connectomics/manifest_headers.cmake" : {
      "ObjectId" : "95d38debb16de910f86477dc6eb7659dee452125",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.diffusionimaging.denoising/CMakeLists.txt" : {
      "ObjectId" : "159cd238a9a97c0b83bc47a07eaef91ba7da5eb9",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The project name must correspond to the directory name of your plug-in\n\n# and must not contain periods.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Plugins/org.mitk.gui.qt.diffusionimaging.denoising/files.cmake" : {
      "ObjectId" : "e56aa36406e54cd9a046637d49d5a332e07d4d52",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.diffusionimaging.denoising/manifest_headers.cmake" : {
      "ObjectId" : "cd38bf46fc144cda428d4fe5c3126c525a049394",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.diffusionimaging.fiberfox/CMakeLists.txt" : {
      "ObjectId" : "dcf135c587b92d9110ff89393c84dc9974a91457",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The project name must correspond to the directory name of your plug-in\n\n# and must not contain periods.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Plugins/org.mitk.gui.qt.diffusionimaging.fiberfox/files.cmake" : {
      "ObjectId" : "ed8c2d8ef3d1a465cac5823534ac0b32bd62260c",
      "LastModified" : "2019-04-15T09:28:03Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.diffusionimaging.fiberfox/manifest_headers.cmake" : {
      "ObjectId" : "75fc472cfc3e84371102696e3267c0ca3ae96be8",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.diffusionimaging.fiberprocessing/CMakeLists.txt" : {
      "ObjectId" : "35b0da5e173c5122b4807eb7ac0a924376d7ff8d",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The project name must correspond to the directory name of your plug-in\n\n# and must not contain periods.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Plugins/org.mitk.gui.qt.diffusionimaging.fiberprocessing/files.cmake" : {
      "ObjectId" : "0993574f5c37729ddfb73412e2539fede01fd27c",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.diffusionimaging.fiberprocessing/manifest_headers.cmake" : {
      "ObjectId" : "2f6a8b321e56fe7fbe72b31a37633f31338af968",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.diffusionimaging.ivim/CMakeLists.txt" : {
      "ObjectId" : "654e260138bed8ad7191146960be898b436c8d35",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The project name must correspond to the directory name of your plug-in\n\n# and must not contain periods.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Plugins/org.mitk.gui.qt.diffusionimaging.ivim/files.cmake" : {
      "ObjectId" : "4d36129c3e4143b0a0d7d152fe050ae0ed4bcc70",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.diffusionimaging.ivim/manifest_headers.cmake" : {
      "ObjectId" : "3385c26aaf8b03013fd6667b22021b97ae19b424",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.diffusionimaging.odfpeaks/CMakeLists.txt" : {
      "ObjectId" : "a5d753484d4b618ab4b8f50a63f0397b1422827b",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The project name must correspond to the directory name of your plug-in\n\n# and must not contain periods.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Plugins/org.mitk.gui.qt.diffusionimaging.odfpeaks/files.cmake" : {
      "ObjectId" : "593e107eb6a9fee7b3adcefec865850c2c4abb56",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.diffusionimaging.odfpeaks/manifest_headers.cmake" : {
      "ObjectId" : "01c8d1dc619f793aeb355d9b728c1078c127129a",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.diffusionimaging.partialvolume/CMakeLists.txt" : {
      "ObjectId" : "d9441802661e7768eb8b0def58f444f11bbe010f",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The project name must correspond to the directory name of your plug-in\n\n# and must not contain periods.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Plugins/org.mitk.gui.qt.diffusionimaging.partialvolume/files.cmake" : {
      "ObjectId" : "6ca97fededf3227b3f96e19772380bc88ebe9347",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.diffusionimaging.partialvolume/manifest_headers.cmake" : {
      "ObjectId" : "a7e71715150874162429384907d8cb4ba7fb7396",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.diffusionimaging.preprocessing/CMakeLists.txt" : {
      "ObjectId" : "341222ae5d63e34248f672a04f0d5dd651803b39",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The project name must correspond to the directory name of your plug-in\n\n# and must not contain periods.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Plugins/org.mitk.gui.qt.diffusionimaging.preprocessing/files.cmake" : {
      "ObjectId" : "f24fdc236a0a337aff37c63017146c2001e21601",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.diffusionimaging.preprocessing/manifest_headers.cmake" : {
      "ObjectId" : "223766b6734af269f341a81ca994759d86f3c4d2",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.diffusionimaging.python/CMakeLists.txt" : {
      "ObjectId" : "7ab1179c26a62f3bf70aaae54f3e9b7e8861aace",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The project name must correspond to the directory name of your plug-in\n\n# and must not contain periods.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(_install_DESTINATION \"BetData\")\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Plugins/org.mitk.gui.qt.diffusionimaging.python/files.cmake" : {
      "ObjectId" : "a99ac9995da88db8f7f6772897011dfdb5575bac",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.diffusionimaging.python/manifest_headers.cmake" : {
      "ObjectId" : "223766b6734af269f341a81ca994759d86f3c4d2",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.diffusionimaging.reconstruction/CMakeLists.txt" : {
      "ObjectId" : "5f0e2f510b05048f2f6f9a118798b8f9965127e8",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The project name must correspond to the directory name of your plug-in\n\n# and must not contain periods.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Plugins/org.mitk.gui.qt.diffusionimaging.reconstruction/files.cmake" : {
      "ObjectId" : "a8712192509167820ca92c518e4a391181f5b2d4",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.diffusionimaging.reconstruction/manifest_headers.cmake" : {
      "ObjectId" : "649136a2f4db7f8af5ca1ca0f111c4949d347fe6",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.diffusionimaging.registration/CMakeLists.txt" : {
      "ObjectId" : "a0dd6267f4401b393bd15328b7b33e4a8f37c0f9",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The project name must correspond to the directory name of your plug-in\n\n# and must not contain periods.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Plugins/org.mitk.gui.qt.diffusionimaging.registration/files.cmake" : {
      "ObjectId" : "0c53c6ac2e3e24e9a3a8912dcc9f7b73262a7e13",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.diffusionimaging.registration/manifest_headers.cmake" : {
      "ObjectId" : "226f6402e8965c2d922703598906256e4d8ddea8",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.diffusionimaging.tbss/CMakeLists.txt" : {
      "ObjectId" : "cda45e0351f7294e82e36fd5b06d7cc19da0700c",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The project name must correspond to the directory name of your plug-in\n\n# and must not contain periods.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Plugins/org.mitk.gui.qt.diffusionimaging.tbss/files.cmake" : {
      "ObjectId" : "7dd8059646a6af915466f398d16d07d6666515b5",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.diffusionimaging.tbss/manifest_headers.cmake" : {
      "ObjectId" : "5c107a62725155978ba1bf606efef9dd743ced78",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.diffusionimaging.tractography/CMakeLists.txt" : {
      "ObjectId" : "095d4e206a739187a7df944acb84017cb10a1fe0",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The project name must correspond to the directory name of your plug-in\n\n# and must not contain periods.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Plugins/org.mitk.gui.qt.diffusionimaging.tractography/files.cmake" : {
      "ObjectId" : "f092a694afaf07b0a5a90bc7f963cfa5c8388bfb",
      "LastModified" : "2019-04-15T09:28:03Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.diffusionimaging.tractography/manifest_headers.cmake" : {
      "ObjectId" : "b2dc929af8ad2635dedaac49eac878b5879dcf25",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.diffusionimaging/CMakeLists.txt" : {
      "ObjectId" : "7c8c92b85f325c4513c74b9f8270c0d7fa3f3a09",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.diffusionimaging/files.cmake" : {
      "ObjectId" : "5e3c8cf288e45efcc817ee29876d41ea688ab172",
      "LastModified" : "2019-04-15T09:28:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# list of resource files which can be used by the plug-in\n\n# system without loading the plug-ins shared library,\n\n# for example the icon used in the menu and tabs for the\n\n# plug-in views in the workbench\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# uncomment the following line if you want to use Qt resources\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#resources/QmitkTractbasedSpatialStatisticsView.qrc\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "Plugins/org.mitk.gui.qt.diffusionimaging/manifest_headers.cmake" : {
      "ObjectId" : "bdff16293fe9bb013553d1829b4fb70b156d73d3",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(Plugin-ActivationPolicy eager)\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Plugins/org.mitk.gui.qt.diffusionimagingapp/CMakeLists.txt" : {
      "ObjectId" : "80a74157e993b90f2f6134c78047bcf0c92f3f14",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.diffusionimagingapp/files.cmake" : {
      "ObjectId" : "2e6976a06e9cdcb1acb53abbe7edab45d5789c06",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# list of resource files which can be used by the plug-in\n\n# system without loading the plug-ins shared library,\n\n# for example the icon used in the menu and tabs for the\n\n# plug-in views in the workbench\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# uncomment the following line if you want to use Qt resources\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# set(CPP_FILES)\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Plugins/org.mitk.gui.qt.diffusionimagingapp/manifest_headers.cmake" : {
      "ObjectId" : "824c3b7930b67bdf62db44cf26a126b679c3ab93",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.dosevisualization/CMakeLists.txt" : {
      "ObjectId" : "a60f557f375d81990c505c961b1f962622f979db",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.dosevisualization/files.cmake" : {
      "ObjectId" : "e726795cdcd12c78843e31fd78c459100d916c57",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# list of resource files which can be used by the plug-in\n\n# system without loading the plug-ins shared library,\n\n# for example the icon used in the menu and tabs for the\n\n# plug-in views in the workbench\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# list of Qt .qrc files which contain additional resources\n\n# specific to this plugin\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Plugins/org.mitk.gui.qt.dosevisualization/manifest_headers.cmake" : {
      "ObjectId" : "9492c2783b5b67e8e30e657d294b480cb8e1b71a",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.eventrecorder/CMakeLists.txt" : {
      "ObjectId" : "2f08c6d36d803b58c2fa093e46776ff4e6553348",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.eventrecorder/files.cmake" : {
      "ObjectId" : "858711fa875c7c6fb3ecb0368c8d9a7c7fa57054",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# list of resource files which can be used by the plug-in\n\n# system without loading the plug-ins shared library,\n\n# for example the icon used in the menu and tabs for the\n\n# plug-in views in the workbench\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# list of Qt .qrc files which contain additional resources\n\n# specific to this plugin\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Plugins/org.mitk.gui.qt.eventrecorder/manifest_headers.cmake" : {
      "ObjectId" : "f3074cf0d102f55d3c870c01a84847bd24457ac7",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.ext/CMakeLists.txt" : {
      "ObjectId" : "16e873d40fd6d1f6c679a1f01274ef661af28c4a",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# see bug-19679\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Plugins/org.mitk.gui.qt.ext/files.cmake" : {
      "ObjectId" : "562bc5d98450b45118ea38364799977bbe0c165e",
      "LastModified" : "2019-04-08T11:27:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# list of resource files which can be used by the plug-in\n\n# system without loading the plug-ins shared library,\n\n# for example the icon used in the menu and tabs for the\n\n# plug-in views in the workbench\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# uncomment the following line if you want to use Qt resources\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Plugins/org.mitk.gui.qt.ext/manifest_headers.cmake" : {
      "ObjectId" : "d1f170d72baead416b982f7fc8b7863f78c02462",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.extapplication/CMakeLists.txt" : {
      "ObjectId" : "370a532281aa8c664382e54eb68d8fea08b23308",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.extapplication/files.cmake" : {
      "ObjectId" : "06abd0cab44be633fedf7522f9716d7b8715146e",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# list of resource files which can be used by the plug-in\n\n# system without loading the plug-ins shared library,\n\n# for example the icon used in the menu and tabs for the\n\n# plug-in views in the workbench\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Plugins/org.mitk.gui.qt.extapplication/manifest_headers.cmake" : {
      "ObjectId" : "b951506aa9688625e80a94e98c041e9027f07cde",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.fit.demo/CMakeLists.txt" : {
      "ObjectId" : "c4a48e7ffcd350be15fa49c705eb8b55d5c06ffc",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.fit.demo/files.cmake" : {
      "ObjectId" : "d58f4a7b321491d49bf23632af9c819c3a3bab4c",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# list of resource files which can be used by the plug-in\n\n# system without loading the plug-ins shared library,\n\n# for example the icon used in the menu and tabs for the\n\n# plug-in views in the workbench\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# list of Qt .qrc files which contain additional resources\n\n# specific to this plugin\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Plugins/org.mitk.gui.qt.fit.demo/manifest_headers.cmake" : {
      "ObjectId" : "03480fff78bd02d7e4d270f85fe80c1c41b07e36",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.fit.genericfitting/CMakeLists.txt" : {
      "ObjectId" : "5727a1f4399dc970d004b148a81a6787da7c016a",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.fit.genericfitting/files.cmake" : {
      "ObjectId" : "f4f3d533f5509da9a529d5a1b1cea7fea13db3d9",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# list of resource files which can be used by the plug-in\n\n# system without loading the plug-ins shared library,\n\n# for example the icon used in the menu and tabs for the\n\n# plug-in views in the workbench\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# list of Qt .qrc files which contain additional resources\n\n# specific to this plugin\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Plugins/org.mitk.gui.qt.fit.genericfitting/manifest_headers.cmake" : {
      "ObjectId" : "670a894787d37b028a8ae25d294616b2a122a967",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.fit.inspector/CMakeLists.txt" : {
      "ObjectId" : "a3af7cd4ef45adc245d5af42c20a2b5ceb7ee1f3",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.fit.inspector/files.cmake" : {
      "ObjectId" : "b6b8dbca6698f70d7eb71fcaf4dbba8ceb7a4ea4",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# list of resource files which can be used by the plug-in\n\n# system without loading the plug-ins shared library,\n\n# for example the icon used in the menu and tabs for the\n\n# plug-in views in the workbench\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# list of Qt .qrc files which contain additional resources\n\n# specific to this plugin\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Plugins/org.mitk.gui.qt.fit.inspector/manifest_headers.cmake" : {
      "ObjectId" : "df38cd0082bc7791f3d1b05e3d475baa07cdb6cf",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.geometrytools/CMakeLists.txt" : {
      "ObjectId" : "315504774f3581fc135eb74c513fc11cb2f969a8",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.geometrytools/files.cmake" : {
      "ObjectId" : "599f90d2a69bbe22615911c049b82375a47541bb",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# list of resource files which can be used by the plug-in\n\n# system without loading the plug-ins shared library,\n\n# for example the icon used in the menu and tabs for the\n\n# plug-in views in the workbench\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# list of Qt .qrc files which contain additional resources\n\n# specific to this plugin\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Plugins/org.mitk.gui.qt.geometrytools/manifest_headers.cmake" : {
      "ObjectId" : "17165dc97f16eace7b12912a8d09c073b385ee69",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.igt.app.echotrack/CMakeLists.txt" : {
      "ObjectId" : "28dfd3d2350db724420b0621714ccbcce0c3e9af",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#usFunctionAddResources(TARGET ${PLUGIN_TARGET}\n\n#  MODULE_NAME liborg_mitk_gui_qt_usnavigation\n\n#  WORKING_DIRECTORY resources\n\n#  FILES Interactions/USPointMarkInteractions.xml\n\n#        Interactions/USZoneInteractions.xml\n\n#        Interactions/USZoneInteractionsHold.xml\n\n#)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Plugins/org.mitk.gui.qt.igt.app.echotrack/files.cmake" : {
      "ObjectId" : "a980a60ba85ed7c88f3d0bbc64c1ab68903fe436",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#USNavigation.cpp //not functional anymore. Delete code?\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#src/internal/USNavigationControls.ui //not functional anymore. Delete code?\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#src/internal/USNavigation.h //not functional anymore. Delete code?\n",
        "Line" : 75,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# list of resource files which can be used by the plug-in\n\n# system without loading the plug-ins shared library,\n\n# for example the icon used in the menu and tabs for the\n\n# plug-in views in the workbench\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# list of Qt .qrc files which contain additional resources\n\n# specific to this plugin\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Plugins/org.mitk.gui.qt.igt.app.echotrack/manifest_headers.cmake" : {
      "ObjectId" : "dd435aea136b103e7efdb175e46d148dee3095bd",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.igt.app.hummelprotocolmeasurements/CMakeLists.txt" : {
      "ObjectId" : "74aff52792249a27dc0f4767bf8d568f8926f513",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.igt.app.hummelprotocolmeasurements/files.cmake" : {
      "ObjectId" : "dca2349880507ac4e7c8d6bff90cc3b9e069e5ef",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.igt.app.hummelprotocolmeasurements/manifest_headers.cmake" : {
      "ObjectId" : "3c096ce558d6b488f2237721535a1f24aff82407",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.igtexamples/CMakeLists.txt" : {
      "ObjectId" : "4e135bcd0acf416bbde9dd41d5acc50713ae58c4",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The project name must correspond to the directory name of your plug-in\n\n# and must not contain periods.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Plugins/org.mitk.gui.qt.igtexamples/files.cmake" : {
      "ObjectId" : "2e72b5f794e9cfe437860658d22e1d633f61f28c",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.igtexamples/manifest_headers.cmake" : {
      "ObjectId" : "d91112487f660a990373a0e3fe78a99a5e0f9736",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.igttracking/CMakeLists.txt" : {
      "ObjectId" : "e95daa63a7f496ddddd23a28060989a4bdc93dc3",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.igttracking/files.cmake" : {
      "ObjectId" : "1c2e872a6618811bb36204b22b073a5ba457f7f3",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# list of resource files which can be used by the plug-in\n\n# system without loading the plug-ins shared library,\n\n# for example the icon used in the menu and tabs for the\n\n# plug-in views in the workbench\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# list of Qt .qrc files which contain additional resources\n\n# specific to this plugin\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Plugins/org.mitk.gui.qt.igttracking/manifest_headers.cmake" : {
      "ObjectId" : "bdbd9bd0d41bbbb84337260015cc76064db8606b",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.imagecropper/CMakeLists.txt" : {
      "ObjectId" : "4d2a1eebde76ea719b916eb8a69cd45236036fcb",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.imagecropper/files.cmake" : {
      "ObjectId" : "27552186bb6e21fe84bd0d56d7bb972fbd879fa6",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.imagecropper/manifest_headers.cmake" : {
      "ObjectId" : "7caa5b063811f1461d312e3b30bf62d09d6847e9",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.imagenavigator/CMakeLists.txt" : {
      "ObjectId" : "df0f2b1ff254625aa00b16b40d74e5ea1b384330",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The project name must correspond to the directory name of your plug-in\n\n# and must not contain periods.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Plugins/org.mitk.gui.qt.imagenavigator/files.cmake" : {
      "ObjectId" : "1ed3313189bc38f5b5d274141e424affb0c0e0a2",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.imagenavigator/manifest_headers.cmake" : {
      "ObjectId" : "a24cc8713dfcc18cca0d7f7a80996b85bff10acc",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.lasercontrol/CMakeLists.txt" : {
      "ObjectId" : "e1e61eaca659d69a4d2f5602757e6d63c529877c",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.lasercontrol/files.cmake" : {
      "ObjectId" : "ebb9b41a94df68c67c95588170034a7b6b63dc57",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.lasercontrol/manifest_headers.cmake" : {
      "ObjectId" : "a0b4a00020a7bedab9304cfe01ef69b255a23a0a",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.matchpoint.algorithm.batch/CMakeLists.txt" : {
      "ObjectId" : "3479d83637586974c19586a4840e8865feffb83a",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.matchpoint.algorithm.batch/files.cmake" : {
      "ObjectId" : "e2300f67e830cc9f78dc044bf525df2b1d9bad78",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# list of resource files which can be used by the plug-in\n\n# system without loading the plug-ins shared library,\n\n# for example the icon used in the menu and tabs for the\n\n# plug-in views in the workbench\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# list of Qt .qrc files which contain additional resources\n\n# specific to this plugin\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Plugins/org.mitk.gui.qt.matchpoint.algorithm.batch/manifest_headers.cmake" : {
      "ObjectId" : "c8a93213a244ddc7a256222912034976e35f1a18",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.matchpoint.algorithm.browser/CMakeLists.txt" : {
      "ObjectId" : "254ab499ae421881f7c7ef1c95bbc58a12f631c3",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.matchpoint.algorithm.browser/files.cmake" : {
      "ObjectId" : "e5f66edd7afef15aeba6b18a274887b887b01aa1",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# list of resource files which can be used by the plug-in\n\n# system without loading the plug-ins shared library,\n\n# for example the icon used in the menu and tabs for the\n\n# plug-in views in the workbench\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# list of Qt .qrc files which contain additional resources\n\n# specific to this plugin\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Plugins/org.mitk.gui.qt.matchpoint.algorithm.browser/manifest_headers.cmake" : {
      "ObjectId" : "ba5d50fb87a0e1c51ea5631e15f755430e5219a8",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.matchpoint.algorithm.control/CMakeLists.txt" : {
      "ObjectId" : "d1788ddd39bc3f742229d74b189b56e590deac91",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.matchpoint.algorithm.control/files.cmake" : {
      "ObjectId" : "72703626b0edeb754e3799bc746705192e1166e4",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# list of resource files which can be used by the plug-in\n\n# system without loading the plug-ins shared library,\n\n# for example the icon used in the menu and tabs for the\n\n# plug-in views in the workbench\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# list of Qt .qrc files which contain additional resources\n\n# specific to this plugin\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Plugins/org.mitk.gui.qt.matchpoint.algorithm.control/manifest_headers.cmake" : {
      "ObjectId" : "9ec53149c4ca8b5b144b83958ca3c789df52b53b",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.matchpoint.evaluator/CMakeLists.txt" : {
      "ObjectId" : "56a7b399b384031200edb5ec85f575ecaf969a47",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.matchpoint.evaluator/files.cmake" : {
      "ObjectId" : "f278150a77f5c6d7264fc031910d034a0cdcc5ec",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# list of resource files which can be used by the plug-in\n\n# system without loading the plug-ins shared library,\n\n# for example the icon used in the menu and tabs for the\n\n# plug-in views in the workbench\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# list of Qt .qrc files which contain additional resources\n\n# specific to this plugin\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Plugins/org.mitk.gui.qt.matchpoint.evaluator/manifest_headers.cmake" : {
      "ObjectId" : "c025011f3f5b0f402f658ead1a6b8dcd2c5b9f05",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.matchpoint.framereg/CMakeLists.txt" : {
      "ObjectId" : "00524a35ec2ea2c393b062e4274e8b4172f0eced",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.matchpoint.framereg/files.cmake" : {
      "ObjectId" : "e4cfa9aa6beba5afd53f7f4d1c20ae439ffbe21b",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# list of resource files which can be used by the plug-in\n\n# system without loading the plug-ins shared library,\n\n# for example the icon used in the menu and tabs for the\n\n# plug-in views in the workbench\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# list of Qt .qrc files which contain additional resources\n\n# specific to this plugin\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Plugins/org.mitk.gui.qt.matchpoint.framereg/manifest_headers.cmake" : {
      "ObjectId" : "153ab01d0402e2742a45b9f1f7944da6a60f51c5",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.matchpoint.manipulator/CMakeLists.txt" : {
      "ObjectId" : "bc8dba8877e20b5ee8f51c337aafe029f47e24f7",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.matchpoint.manipulator/files.cmake" : {
      "ObjectId" : "7b7b6b953c8906cb21a987afe44e0ec74bc13434",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# list of resource files which can be used by the plug-in\n\n# system without loading the plug-ins shared library,\n\n# for example the icon used in the menu and tabs for the\n\n# plug-in views in the workbench\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# list of Qt .qrc files which contain additional resources\n\n# specific to this plugin\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Plugins/org.mitk.gui.qt.matchpoint.manipulator/manifest_headers.cmake" : {
      "ObjectId" : "e33e33b83517ae33d89c9755f4de8d04bd2400e9",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.matchpoint.mapper/CMakeLists.txt" : {
      "ObjectId" : "051c86ee0dbf2e9821084530639a3c0e5e772461",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.matchpoint.mapper/files.cmake" : {
      "ObjectId" : "2700970a3a4c452cfac41fef40a65139bbf2a09f",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# list of resource files which can be used by the plug-in\n\n# system without loading the plug-ins shared library,\n\n# for example the icon used in the menu and tabs for the\n\n# plug-in views in the workbench\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# list of Qt .qrc files which contain additional resources\n\n# specific to this plugin\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Plugins/org.mitk.gui.qt.matchpoint.mapper/manifest_headers.cmake" : {
      "ObjectId" : "12756751edec5187a9305931cb0f6c459750ff68",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.matchpoint.visualizer/CMakeLists.txt" : {
      "ObjectId" : "57513f9e1a2c06dd61b8f88645e67492210956cd",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.matchpoint.visualizer/files.cmake" : {
      "ObjectId" : "7964f05c2539456737c6651b5828830a7e157d20",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# list of resource files which can be used by the plug-in\n\n# system without loading the plug-ins shared library,\n\n# for example the icon used in the menu and tabs for the\n\n# plug-in views in the workbench\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# list of Qt .qrc files which contain additional resources\n\n# specific to this plugin\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Plugins/org.mitk.gui.qt.matchpoint.visualizer/manifest_headers.cmake" : {
      "ObjectId" : "4804af1214a93506db682f3a5c69ef1aa1ef03ea",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.materialeditor/CMakeLists.txt" : {
      "ObjectId" : "b8f112a380f4a7e036bb03ddc35e47f35326e27c",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The project name must correspond to the directory name of your plug-in\n\n# and must not contain periods.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Plugins/org.mitk.gui.qt.materialeditor/files.cmake" : {
      "ObjectId" : "81413caeb9bee12a845f209d5cc00cd4901ec7b9",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.materialeditor/manifest_headers.cmake" : {
      "ObjectId" : "8f72fc2fe3a70fbc0733b2f335645b90b71833b1",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.measurementtoolbox/CMakeLists.txt" : {
      "ObjectId" : "8403f27fb663e918eaacb431f27299ccf7651fc8",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The project name must correspond to the directory name of your plug-in\n\n# and must not contain periods.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Plugins/org.mitk.gui.qt.measurementtoolbox/files.cmake" : {
      "ObjectId" : "52920273352f24ebc765b44a2cb6f53ff6d34c76",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.measurementtoolbox/manifest_headers.cmake" : {
      "ObjectId" : "bea2c215a498ca1014e38c5a7dc8069d46efbac1",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.moviemaker/CMakeLists.txt" : {
      "ObjectId" : "d38a3d1797870ea82e6b9b3476b8d2bb993a0285",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The project name must correspond to the directory name of your plug-in\n\n# and must not contain periods.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Plugins/org.mitk.gui.qt.moviemaker/files.cmake" : {
      "ObjectId" : "16a46cc729eab48b29982bf81c0552126c996827",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.moviemaker/manifest_headers.cmake" : {
      "ObjectId" : "f19fb46278e9a4ccfcacf48b9450e61f4f37c8a6",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.multilabelsegmentation/CMakeLists.txt" : {
      "ObjectId" : "235d87da4b412dac337a3c6245b262048b864124",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.multilabelsegmentation/files.cmake" : {
      "ObjectId" : "d73169c8742ec5ef777a6d69ff539583a786e3d7",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#usFunctionEmbedResources(\n\n#CPP_FILES\n\n# LIBRARY_NAME \"liborg_mitk_gui_qt_multilabelsegmentation\"\n\n#ROOT_DIR resources\n\n#FILES Interactions/SegmentationInteraction.xml\n\n#      Interactions/ConfigSegmentation.xml\n\n#)\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Plugins/org.mitk.gui.qt.multilabelsegmentation/manifest_headers.cmake" : {
      "ObjectId" : "ca346536b90f744ea8842c4cea0afe379596c2d2",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.multilabelsegmentation/target_libraries.cmake" : {
      "ObjectId" : "6c71bbbf0893ef2633bd988f6f0091a868ba3382",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.mxnmultiwidgeteditor/CMakeLists.txt" : {
      "ObjectId" : "311da290372e4c26648490546b95717d46810b57",
      "LastModified" : "2019-04-08T11:27:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.mxnmultiwidgeteditor/files.cmake" : {
      "ObjectId" : "fce4919a701107b233749e4266cfb749932e2a3e",
      "LastModified" : "2019-04-08T11:27:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.mxnmultiwidgeteditor/manifest_headers.cmake" : {
      "ObjectId" : "3f743d0a72cdb0fc73956ac4385eb14b9a1dc5b1",
      "LastModified" : "2019-04-08T11:27:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.openigtlink/CMakeLists.txt" : {
      "ObjectId" : "d620947121c8a878a3db4c169d2accb2deefe0f8",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.openigtlink/files.cmake" : {
      "ObjectId" : "06b5fa76b98417144dde84bc3273ff90c8250fe2",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# list of resource files which can be used by the plug-in\n\n# system without loading the plug-ins shared library,\n\n# for example the icon used in the menu and tabs for the\n\n# plug-in views in the workbench\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# list of Qt .qrc files which contain additional resources\n\n# specific to this plugin\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Plugins/org.mitk.gui.qt.openigtlink/manifest_headers.cmake" : {
      "ObjectId" : "c7704af0d43bae02c7e8b3f90389ce9042b4abb0",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.overlaymanager/CMakeLists.txt" : {
      "ObjectId" : "4c099116f7f00cd7c548e7c466ad25431a27fcb1",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.overlaymanager/files.cmake" : {
      "ObjectId" : "9d9029e3b55db248d57642dccdad4a1c179c08c7",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# list of resource files which can be used by the plug-in\n\n# system without loading the plug-ins shared library,\n\n# for example the icon used in the menu and tabs for the\n\n# plug-in views in the workbench\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# list of Qt .qrc files which contain additional resources\n\n# specific to this plugin\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Plugins/org.mitk.gui.qt.overlaymanager/manifest_headers.cmake" : {
      "ObjectId" : "96be52bad9144be7cfafc04d83a54ad31a4f381d",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.pharmacokinetics.concentration.mri/CMakeLists.txt" : {
      "ObjectId" : "840fc6a0da0b4eeb36ebec1f610d2f5e1b04a3b3",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.pharmacokinetics.concentration.mri/files.cmake" : {
      "ObjectId" : "71983f82d68a83c6cc19b6b2def024b8025e0405",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# list of resource files which can be used by the plug-in\n\n# system without loading the plug-ins shared library,\n\n# for example the icon used in the menu and tabs for the\n\n# plug-in views in the workbench\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# list of Qt .qrc files which contain additional resources\n\n# specific to this plugin\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Plugins/org.mitk.gui.qt.pharmacokinetics.concentration.mri/manifest_headers.cmake" : {
      "ObjectId" : "2266f968b7133467af317bb98e7963b9e548b119",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.pharmacokinetics.curvedescriptor/CMakeLists.txt" : {
      "ObjectId" : "6ce35d9cd89c3c44d5c389578eb4668d63e10f5c",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.pharmacokinetics.curvedescriptor/files.cmake" : {
      "ObjectId" : "b68e376416ab4fcfb71242dc992a1d42b26f546b",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# list of resource files which can be used by the plug-in\n\n# system without loading the plug-ins shared library,\n\n# for example the icon used in the menu and tabs for the\n\n# plug-in views in the workbench\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# list of Qt .qrc files which contain additional resources\n\n# specific to this plugin\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Plugins/org.mitk.gui.qt.pharmacokinetics.curvedescriptor/manifest_headers.cmake" : {
      "ObjectId" : "3323290acb94cc7447dba8ff452472f90babccac",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.pharmacokinetics.mri/CMakeLists.txt" : {
      "ObjectId" : "b0d7d47b86ebbab378cdbb184c80fa970b98307d",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.pharmacokinetics.mri/files.cmake" : {
      "ObjectId" : "462c6d835d71ae2001d0be15b9c040a1bb136b6b",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# list of resource files which can be used by the plug-in\n\n# system without loading the plug-ins shared library,\n\n# for example the icon used in the menu and tabs for the\n\n# plug-in views in the workbench\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# list of Qt .qrc files which contain additional resources\n\n# specific to this plugin\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Plugins/org.mitk.gui.qt.pharmacokinetics.mri/manifest_headers.cmake" : {
      "ObjectId" : "e3fff30e06d76caac6fa516838cc9073da30c5f9",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.pharmacokinetics.pet/CMakeLists.txt" : {
      "ObjectId" : "713e3fedb7b743937a6d61e568ba39a6a07581e4",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.pharmacokinetics.pet/files.cmake" : {
      "ObjectId" : "f606c1674f43c8f086f98d476192066c616cc2ef",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# list of resource files which can be used by the plug-in\n\n# system without loading the plug-ins shared library,\n\n# for example the icon used in the menu and tabs for the\n\n# plug-in views in the workbench\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# list of Qt .qrc files which contain additional resources\n\n# specific to this plugin\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Plugins/org.mitk.gui.qt.pharmacokinetics.pet/manifest_headers.cmake" : {
      "ObjectId" : "87c3fac8aced6cdfdac7c8085bbbe3f87bed913b",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.pharmacokinetics.simulation/CMakeLists.txt" : {
      "ObjectId" : "945352fc13cc1fb1187f690f04d7ee30456f3903",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.pharmacokinetics.simulation/files.cmake" : {
      "ObjectId" : "f1b410b7cebd9af3c9981450f6a26d25c92de984",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# list of resource files which can be used by the plug-in\n\n# system without loading the plug-ins shared library,\n\n# for example the icon used in the menu and tabs for the\n\n# plug-in views in the workbench\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# list of Qt .qrc files which contain additional resources\n\n# specific to this plugin\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Plugins/org.mitk.gui.qt.pharmacokinetics.simulation/manifest_headers.cmake" : {
      "ObjectId" : "4134f6923e554fd04f7e0ff6b697160fd65dc95a",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.photoacoustics.imageprocessing/CMakeLists.txt" : {
      "ObjectId" : "0b44d554e69cae5f8bb43e3cc05381abba106896",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.photoacoustics.imageprocessing/files.cmake" : {
      "ObjectId" : "e4fe8ebf7d472dd162d5b6424bcfe91f38928fbb",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.photoacoustics.imageprocessing/manifest_headers.cmake" : {
      "ObjectId" : "948e85963def6206070247388d10962852016111",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.photoacoustics.pausmotioncompensation/CMakeLists.txt" : {
      "ObjectId" : "ec72937f68bff47fcc14f688ee1d13d4ff946cbb",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.photoacoustics.pausmotioncompensation/files.cmake" : {
      "ObjectId" : "8641eb6e78aca786b88b03c1d21dbecad20ecef3",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# list of resource files which can be used by the plug-in\n\n# system without loading the plug-ins shared library,\n\n# for example the icon used in the menu and tabs for the\n\n# plug-in views in the workbench\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# list of Qt .qrc files which contain additional resources\n\n# specific to this plugin\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Plugins/org.mitk.gui.qt.photoacoustics.pausmotioncompensation/manifest_headers.cmake" : {
      "ObjectId" : "7a507c291529eced9da177fd524c682414784ab5",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.photoacoustics.pausviewer/CMakeLists.txt" : {
      "ObjectId" : "5c420ea0f478c28cff4523245d89aaa46988a1f0",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The project name must correspond to the directory name of your plug-in\n\n# and must not contain periods.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Plugins/org.mitk.gui.qt.photoacoustics.pausviewer/files.cmake" : {
      "ObjectId" : "eabd5d2d685b39b3ac1843366c9ac1ee057a31d2",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.photoacoustics.pausviewer/manifest_headers.cmake" : {
      "ObjectId" : "b0abe671c4ca5a779a46f79c4e78787f932c0a8a",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.photoacoustics.simulation/CMakeLists.txt" : {
      "ObjectId" : "e481678c85e60cfbb657e7888656b76601f1fe14",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.photoacoustics.simulation/files.cmake" : {
      "ObjectId" : "1d8c9f11f8420f621e0bd8136710b34fcfc78e63",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# list of resource files which can be used by the plug-in\n\n# system without loading the plug-ins shared library,\n\n# for example the icon used in the menu and tabs for the\n\n# plug-in views in the workbench\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# list of Qt .qrc files which contain additional resources\n\n# specific to this plugin\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Plugins/org.mitk.gui.qt.photoacoustics.simulation/manifest_headers.cmake" : {
      "ObjectId" : "4580c5bd1b61c4d9f03ea4aa9cc22924b58ee4fd",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.photoacoustics.spectralunmixing/CMakeLists.txt" : {
      "ObjectId" : "ac2049cb04b91045525410bf2f65b0f7450cc649",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.photoacoustics.spectralunmixing/files.cmake" : {
      "ObjectId" : "2940e51e6b22631e06c23735f9570cb09b53edd4",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# list of resource files which can be used by the plug-in\n\n# system without loading the plug-ins shared library,\n\n# for example the icon used in the menu and tabs for the\n\n# plug-in views in the workbench\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# list of Qt .qrc files which contain additional resources\n\n# specific to this plugin\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Plugins/org.mitk.gui.qt.photoacoustics.spectralunmixing/manifest_headers.cmake" : {
      "ObjectId" : "a537cfdfe35e3b64ae2baaf74095879f4c429a56",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.pointsetinteraction/CMakeLists.txt" : {
      "ObjectId" : "bbdd395d8a5b922fd6d54e5fa88780cf333147e8",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.pointsetinteraction/files.cmake" : {
      "ObjectId" : "10c9760fe6d7d13c892991b46d63adae5614864b",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.pointsetinteraction/manifest_headers.cmake" : {
      "ObjectId" : "12c8ebbc7ce3a3e2f418a87d24b7b4cd28e3c2b0",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.pointsetinteraction/src/internal/QmitkPointSetInteractionView.cmake" : {
      "ObjectId" : "3734c471898879cefe36cf549a583853e74a1e87",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# QmitkPointSetInteractionView\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Plugins/org.mitk.gui.qt.pointsetinteractionmultispectrum/CMakeLists.txt" : {
      "ObjectId" : "3b57c693bbf1df038d40f050398eff6af8e03fb9",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.pointsetinteractionmultispectrum/files.cmake" : {
      "ObjectId" : "99f891e5896422c6d9f14d857b1ff49ffd0c67bc",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# list of resource files which can be used by the plug-in\n\n# system without loading the plug-ins shared library,\n\n# for example the icon used in the menu and tabs for the\n\n# plug-in views in the workbench\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# list of Qt .qrc files which contain additional resources\n\n# specific to this plugin\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Plugins/org.mitk.gui.qt.pointsetinteractionmultispectrum/manifest_headers.cmake" : {
      "ObjectId" : "1fbc6f2c2b7391e36337b54e2eae3573bd0ce512",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.preprocessing.resampling/CMakeLists.txt" : {
      "ObjectId" : "cd46837ebb811a1e65caaf8df21adea645954831",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.preprocessing.resampling/files.cmake" : {
      "ObjectId" : "8c61cd6c087f3e31471751f9686fb88c08943275",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.preprocessing.resampling/manifest_headers.cmake" : {
      "ObjectId" : "0eba5ba0ebdad5fc993fb4d9f614e794f407245a",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.properties/CMakeLists.txt" : {
      "ObjectId" : "285f46a4cf40965e3f843a5a4100378f6f394e32",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.properties/files.cmake" : {
      "ObjectId" : "432abbe8301eb964ae8c6f0cab0271dd8b344879",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.properties/manifest_headers.cmake" : {
      "ObjectId" : "49a9ff6bc5e96f097cd4d0a60407a269c66fa1b1",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.python/CMakeLists.txt" : {
      "ObjectId" : "3a784c3ba4ce6e125b3bf5a61b9baeb99a72b68d",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.python/files.cmake" : {
      "ObjectId" : "d2d693e93293ab2b54fc23196f80d36a5f35a5dc",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.python/manifest_headers.cmake" : {
      "ObjectId" : "a083a5b4a638d1ec785aa50fb40dbe46d2c4c611",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.radiomics/CMakeLists.txt" : {
      "ObjectId" : "ff5611408593e23c7cfad0c0acd8ce43ad9fbd11",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.radiomics/files.cmake" : {
      "ObjectId" : "919e17ce03ae7bb233b89295001183731e037756",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.radiomics/manifest_headers.cmake" : {
      "ObjectId" : "36b9e2c447e9fb4fecc1a9cfd4ee0197c311d481",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.remeshing/CMakeLists.txt" : {
      "ObjectId" : "0c79a9f4d269b5357527a67dcb1f25aa8a6bf85b",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.remeshing/files.cmake" : {
      "ObjectId" : "ef654235b44b900d841aa862e9e5b6ff0a95fdd9",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.remeshing/manifest_headers.cmake" : {
      "ObjectId" : "ec9cf23fc1377851520f318f7107b2937507d757",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.remeshing/target_libraries.cmake" : {
      "ObjectId" : "6c71bbbf0893ef2633bd988f6f0091a868ba3382",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.renderwindowmanager/CMakeLists.txt" : {
      "ObjectId" : "c7fa4849a9aa5245dea33ef24a8bd3645c4576f9",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.renderwindowmanager/files.cmake" : {
      "ObjectId" : "b6d60fcc37fb24bcadb0dd0bafc900e60cb2f162",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.renderwindowmanager/manifest_headers.cmake" : {
      "ObjectId" : "72676e48b5e8ab6e3487b3647d49c278bede268d",
      "LastModified" : "2019-04-08T11:27:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.segmentation/CMakeLists.txt" : {
      "ObjectId" : "6180e68ea473d4cfc57cec4c50ee8dddfb9c3add",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.segmentation/files.cmake" : {
      "ObjectId" : "69bc5eadc324430023b562a6d1ea63cae2cc883c",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#QmitkStatisticsAction.cpp\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#src/internal/QmitkStatisticsAction.h\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "Plugins/org.mitk.gui.qt.segmentation/manifest_headers.cmake" : {
      "ObjectId" : "f7cd162d1a7e643b6f413bbe044bdbfbfa0adfa3",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.segmentation/target_libraries.cmake" : {
      "ObjectId" : "6c71bbbf0893ef2633bd988f6f0091a868ba3382",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.semanticrelations/CMakeLists.txt" : {
      "ObjectId" : "2ffd63c2e3d7ddc867652bdd53a73af5084b09b8",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.semanticrelations/files.cmake" : {
      "ObjectId" : "8e961c0cebb4223730a004571ee0841eeaa996ef",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.semanticrelations/manifest_headers.cmake" : {
      "ObjectId" : "9da36a3fbc7ded52722faaae79d28a2fd79d632f",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.spectrocamrecorder/CMakeLists.txt" : {
      "ObjectId" : "34a55ab54cc9262e7cd8c6b6958152470299007d",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.spectrocamrecorder/files.cmake" : {
      "ObjectId" : "563aebf2753af37cba3b1bc075ad0519b5878c11",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# list of resource files which can be used by the plug-in\n\n# system without loading the plug-ins shared library,\n\n# for example the icon used in the menu and tabs for the\n\n# plug-in views in the workbench\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# list of Qt .qrc files which contain additional resources\n\n# specific to this plugin\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Plugins/org.mitk.gui.qt.spectrocamrecorder/manifest_headers.cmake" : {
      "ObjectId" : "8be1ce8a710d4d14de4ff4bbf0b89bb7a8049850",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.stdmultiwidgeteditor/CMakeLists.txt" : {
      "ObjectId" : "2976e1079de92f0460967541ce9874acbea5b7b8",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.stdmultiwidgeteditor/files.cmake" : {
      "ObjectId" : "d3cee6ea5e4a6361acb5efa78af46422982e6b82",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.stdmultiwidgeteditor/manifest_headers.cmake" : {
      "ObjectId" : "4f9014d2b50c260cad8028491df9633f7a0d06b0",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.toftutorial/CMakeLists.txt" : {
      "ObjectId" : "d895583ac18482b0d6b47ce2207cff2fc058de4f",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The project name must correspond to the directory name of your plug-in\n\n# and must not contain periods.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Plugins/org.mitk.gui.qt.toftutorial/files.cmake" : {
      "ObjectId" : "d3c0aac915a3b66ae3e85375eb74116b368c2e7d",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.toftutorial/manifest_headers.cmake" : {
      "ObjectId" : "bbad6b940d30384148ba6dfa61a5c03a97fc9441",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.tofutil/CMakeLists.txt" : {
      "ObjectId" : "a4ab27c4f9f4591ebe4224264a405bcc780a90c5",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The project name must correspond to the directory name of your plug-in\n\n# and must not contain periods.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Plugins/org.mitk.gui.qt.tofutil/files.cmake" : {
      "ObjectId" : "f3570458e8d9988fea20ba4edd585b30c7adf2cb",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.tofutil/manifest_headers.cmake" : {
      "ObjectId" : "bb478af61cf460bd5f98229df73701dbeedf6038",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.tubegraph/CMakeLists.txt" : {
      "ObjectId" : "cb85bf6f41a909ab77fed9219b1a880c5baa7814",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#QmitkExt MitkSegmentationUI\n",
        "Line" : 6,
        "CharPositionInLine" : 50
      },
      "CommentCount" : 1
    },
    "Plugins/org.mitk.gui.qt.tubegraph/files.cmake" : {
      "ObjectId" : "53d078307a5605b0a0a22c21eed8593b984722ee",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.tubegraph/manifest_headers.cmake" : {
      "ObjectId" : "011dcc7882abcde2413d2e735bfe2515c206c797",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.ugvisualization/CMakeLists.txt" : {
      "ObjectId" : "ed165f14b4f0ec6ffbb90db4db7a38d4071f4991",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.ugvisualization/files.cmake" : {
      "ObjectId" : "5cb062a6b8bc9304b6821161e5de6d47ead4aa83",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.ugvisualization/manifest_headers.cmake" : {
      "ObjectId" : "ddff09b506ca3dd1c36124f657a67545c29b01de",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.ultrasound/CMakeLists.txt" : {
      "ObjectId" : "82a82e480fdd20204fc2f516dee7d2c0e63548d9",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.ultrasound/files.cmake" : {
      "ObjectId" : "9f515ce49638b101de72e7c6078638d0ec899c15",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# list of resource files which can be used by the plug-in\n\n# system without loading the plug-ins shared library,\n\n# for example the icon used in the menu and tabs for the\n\n# plug-in views in the workbench\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# list of Qt .qrc files which contain additional resources\n\n# specific to this plugin\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Plugins/org.mitk.gui.qt.ultrasound/manifest_headers.cmake" : {
      "ObjectId" : "182113f62b6de5c59bd80d09e647053ec3f19dbb",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.viewnavigator/CMakeLists.txt" : {
      "ObjectId" : "a759507265e21682e0f0fda2534f6948168eea2f",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.viewnavigator/files.cmake" : {
      "ObjectId" : "5b58d0228eb54ffe16f45fc256cffe4931d714ce",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  mitkQtPerspectiveItem.h\n\n#  mitkQtViewItem.h\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# list of resource files which can be used by the plug-in\n\n# system without loading the plug-ins shared library,\n\n# for example the icon used in the menu and tabs for the\n\n# plug-in views in the workbench\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# list of Qt .qrc files which contain additional resources\n\n# specific to this plugin\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Plugins/org.mitk.gui.qt.viewnavigator/manifest_headers.cmake" : {
      "ObjectId" : "3235814344a5234727939c32560d64a05c4d1b2f",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.volumevisualization/CMakeLists.txt" : {
      "ObjectId" : "399315e867abdf0e2c580798a332a80e291295be",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.volumevisualization/files.cmake" : {
      "ObjectId" : "79fc343d0d5d3cd087ec0221dd5f828a1b6da932",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.volumevisualization/manifest_headers.cmake" : {
      "ObjectId" : "b21c7bed81f866c6535735d55b28c57a4a4d146f",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.xnat/CMakeLists.txt" : {
      "ObjectId" : "330e36df235d44d03225cd6186739f5dbf536f11",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.xnat/files.cmake" : {
      "ObjectId" : "3202bec320950b4df003659e15faa34b86e8f9a7",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# list of resource files which can be used by the plug-in\n\n# system without loading the plug-ins shared library,\n\n# for example the icon used in the menu and tabs for the\n\n# plug-in views in the workbench\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# list of Qt .qrc files which contain additional resources\n\n# specific to this plugin\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Plugins/org.mitk.gui.qt.xnat/manifest_headers.cmake" : {
      "ObjectId" : "e2123e2708e4bab2f80abb0d8d9e5e7afa7b60e1",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.gui.qt.xnat/target_libraries.cmake" : {
      "ObjectId" : "e18fde9a3eca4254951816c9f89ce983a109635e",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n#\n\n# This file should list the libraries required to build the current CTK plugin.\n\n# For specifying required plugins, see the manifest_headers.cmake file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Plugins/org.mitk.matchpoint.core.helper/CMakeLists.txt" : {
      "ObjectId" : "112a65a0f1e63d104b843dbc3da07e651acf37b7",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.matchpoint.core.helper/files.cmake" : {
      "ObjectId" : "17656d6808ea903f1815c4577fd7d6cc76239664",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# list of resource files which can be used by the plug-in\n\n# system without loading the plug-ins shared library,\n\n# for example the icon used in the menu and tabs for the\n\n# plug-in views in the workbench\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# list of Qt .qrc files which contain additional resources\n\n# specific to this plugin\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Plugins/org.mitk.matchpoint.core.helper/manifest_headers.cmake" : {
      "ObjectId" : "ee920f49351864e007d9d7fbcd8ab50f2e0739d2",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.planarfigure/CMakeLists.txt" : {
      "ObjectId" : "ca29acd698a2f023189b1b7149bac814a20df721",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.planarfigure/files.cmake" : {
      "ObjectId" : "044498f1438defe71a642a03fe9c3681b83950c6",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.mitk.planarfigure/manifest_headers.cmake" : {
      "ObjectId" : "5b2d8e50e355af309d8cda55d4ee233f5230cabb",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "SuperBuild.cmake" : {
      "ObjectId" : "b9f93dbd35c9f477abbd44f09a7331cac3ad40fb",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Convenient macro allowing to download a file\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# MITK Prerequisites\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check for libxt-dev\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Check for libtiff4-dev\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# We need a proper patch program. On Linux and MacOS, we assume\n\n# that \"patch\" is available. On Windows, we download patch.exe\n\n# if not patch program is found.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# ExternalProjects\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Write a file containing the list of enabled external project targets.\n\n# This file can be read by a ctest script to separately build projects.\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# A list of \"nice\" external projects, playing well together with CMake\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Setup file for setting custom ctest vars\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# External project settings\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Compute -G arg for configuring external projects with the same CMake generator:\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Use this value where semi-colons are needed in ep_add args:\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# This is a workaround for passing linker flags\n\n# actually down to the linker invocation\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# this work for libraries as well as executables\n",
        "Line" : 155,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "#debug flags\n",
        "Line" : 173,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "#release flags\n",
        "Line" : 176,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "#relwithdebinfo\n",
        "Line" : 179,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "#link flags\n",
        "Line" : 182,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# python libraries wont work with it\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Pass the CMAKE_OSX variables to external projects\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Include external projects\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Set superbuild boolean args\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 251,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Create the final variable containing superbuild boolean args\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 272,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# MITK Utilities\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 285,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Additional MITK CXX/C Flags\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 298,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# MITK Configure\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 317,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Optional python variables\n",
        "Line" : 332,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Optional pass through of Doxygen\n",
        "Line" : 349,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# --------------- Build options ----------------\n",
        "Line" : 364,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# --------------- Compile options ----------------\n",
        "Line" : 370,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# debug flags\n",
        "Line" : 378,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# release flags\n",
        "Line" : 381,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "# relwithdebinfo\n",
        "Line" : 384,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# link flags\n",
        "Line" : 387,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# Output directories\n",
        "Line" : 391,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# ------------- Boolean build options --------------\n",
        "Line" : 395,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "# ----------------- Miscellaneous ---------------\n",
        "Line" : 401,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# --------------- External project options ---------------\n",
        "Line" : 416,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# MITK\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 439,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Custom target allowing to drive the build of the MITK project itself\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 461,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 41
    },
    "Utilities/CMakeLists.txt" : {
      "ObjectId" : "1b090440c7d39232909facc3eceff7e74e659e97",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# most stuff of these uses itk_zlib.h (via mitkIpPic.h)\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# some legacy util files include in the old style with prefixed directory,\n\n# like #include <ipPic/mitkIpPic.h>\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Utilities/IpFunc/CMakeLists.txt" : {
      "ObjectId" : "ba6d8901005145042fe9af70be82dec054b11852",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Utilities/IpFunc/Makefile.am" : {
      "ObjectId" : "871facdbbc514824e5ddf915a2d52c28a7aba58d",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Utilities/IpFunc/files.cmake" : {
      "ObjectId" : "150cad0e1525cf86a938603ad45dc1ea35a868cd",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Utilities/IpFunc/ipFunc.pro" : {
      "ObjectId" : "1dc6e33bf15a94326da6e0f01b34b365674c7e67",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "Utilities/IpFunc/ipFuncLib.pro" : {
      "ObjectId" : "4f5571d1940871b5e6c3181c9f0bc90b19cb6a03",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "Utilities/IpFunc/ipFuncMain.pro" : {
      "ObjectId" : "853bacdb926f8b45abb87dd60cb205d8e0d8c598",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#DESTDIR = lib\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#INTERFACES\t= \n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#exception handling\n",
        "Line" : 22,
        "CharPositionInLine" : 26
      },
      "3" : {
        "Text" : "#edit and continue\n",
        "Line" : 23,
        "CharPositionInLine" : 32
      },
      "CommentCount" : 4
    },
    "Utilities/IpPic/CMakeLists.txt" : {
      "ObjectId" : "c137311f03ba45e8a7970d8521ecbc6491f8bdc1",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Utilities/IpPic/Makefile" : {
      "ObjectId" : "0528c955498ff55c354364f6020884fb0de755db",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#-DDMALLOC_FUNC_CHECK\n",
        "Line" : 8,
        "CharPositionInLine" : 11
      },
      "1" : {
        "Text" : "#distname: version.c\n\n#\t@echo ipPic-`sed -e '/version_string/!d' \\\n#\t  -e 's/[^0-9.]*\\([0-9.a-z]*\\).*/\\1/' -e q version.c` > $@-tmp\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\t@mv $@-tmp $@\n\n#distdir = `cat distname`\n\n#dist:$(DISTFILES) distname\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\t@tar --gzip -chvf $(distdir).tar.gz $(distdir)\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Utilities/IpPic/annotation/CMakeLists.txt" : {
      "ObjectId" : "8b137891791fe96927ad78e64b0aad7bded08bdc",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Utilities/IpPic/annotation/Makefile" : {
      "ObjectId" : "7b954dbb5b5f95a171e053da2443fe7592a11c7b",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "Utilities/IpPic/doc/CMakeLists.txt" : {
      "ObjectId" : "8b137891791fe96927ad78e64b0aad7bded08bdc",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Utilities/IpPic/files.cmake" : {
      "ObjectId" : "ef022fffa9fa66e2dcfed48eea1ff726be5415a6",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Utilities/IpPic/ipPic.pro" : {
      "ObjectId" : "8324a0b827da0ad40e59253ee7798b01ab96bb54",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "Utilities/IpSegmentation/CMakeLists.txt" : {
      "ObjectId" : "fb533b5b9abb1b99283353cf11bff879fcb65941",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Utilities/IpSegmentation/files.cmake" : {
      "ObjectId" : "6452f6aec47b2751237577e7c46604a79a629265",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Utilities/mbilog/CMakeLists.txt" : {
      "ObjectId" : "57d2e11c8000988b343e2e9b1151dbd3aa83b50f",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Utilities/mbilog/files.cmake" : {
      "ObjectId" : "a339028b0ba597e852a21fbdfc759caa6beb5d23",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Utilities/qtsingleapplication/CMakeLists.txt" : {
      "ObjectId" : "39670bc08d259c0324c6d61370f5eda1576e7962",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Utilities/qtsingleapplication/files.cmake" : {
      "ObjectId" : "bbe96fa299558b71755ff313eb60ea139527c4af",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Wrapping/CMakeLists.txt" : {
      "ObjectId" : "c757046536ae0afa8eea307acf3e330f62977c55",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Path to common files\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# make a manual list of dependencies for the Swig.i files\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# A general packaging target, not built by default, to build packages for each\n\n# language.  This should depend on all language specific targets.\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#\n\n# lua SWIG configuration\n\n#\n\n#if ( WRAP_LUA )\n\n#  add_subdirectory ( Lua )\n\n#endif()\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#\n\n# python SWIG configuration\n\n#\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#\n\n# ruby SWIG configuration\n\n#\n\n#if ( WRAP_RUBY )\n\n#  add_subdirectory ( Ruby )\n\n#endif()\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#\n\n# JAVA SWIG configuration\n\n#\n\n#if ( WRAP_JAVA )\n\n#  add_subdirectory( Java )\n\n#endif()\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#\n\n# C# SWIG configuration\n\n#\n\n#if ( WRAP_CSHARP )\n\n#  add_subdirectory ( CSharp )\n\n#endif()\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#\n\n# TCL SWIG configuration\n\n#\n\n#if ( WRAP_TCL )\n\n#  add_subdirectory ( Tcl )\n\n#endif()\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#\n\n# R SWIG configuration\n\n#\n\n#if ( WRAP_R )\n\n#  add_subdirectory( R )\n\n#endif()\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 10
    },
    "Wrapping/Python/CMakeLists.txt" : {
      "ObjectId" : "cb9327dc76f4014d516b5068087d6c235d648278",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Version 2.8.1 is the minium requirement for this script.\n\n# this is lower than the general minimum requirement.\n\n#cmake_minimum_required ( VERSION 2.8.1 FATAL_ERROR )\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Find the necessary libraries etc..\n\n#\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Options\n\n#\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Prepare the SWIG-File, i.e. especially add necessary include folders\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add additional SWIG Parameters\n\n# These parameters depend on the target language\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Create the actual SWIG project\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Currently this installation\n",
        "Line" : 60,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#  ${MITK_DOC_FILES}\n",
        "Line" : 64,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "Wrapping/Python/LegacyPackaging.cmake" : {
      "ObjectId" : "41ff58f18e7504f10a24558f73cb3aa8cf72dfc0",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# create a python list for the import documents to include in\n\n# packaging\n",
        "Line" : 2,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# specially handle the first element\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Step 1:\n\n# Do initial configuration of setup.py with variable a available\n\n# at configuration time.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Step 2:\n\n# Do file configuration during compilation with generator expressions\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Hopefully being able to turn this option on at some point in future.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Executable to setup a new Python virtual environment\n",
        "Line" : 61,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#\n\n# Setup Python Virtual Environment for testing and packaging\n\n#\n",
        "Line" : 71,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# virtualenv places the python executable in different\n\n# locations. Also note than on windows installations where python is\n\n# installed only for a single user the may be a missing dll issue.\n",
        "Line" : 76,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# configure a scripts which creates the virtualenv and installs numpy\n",
        "Line" : 88,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Packaging for distribution\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "Wrapping/Python/dist/CMakeLists.txt" : {
      "ObjectId" : "504c94c5faa0b7defce740241181333f6a88b10c",
      "LastModified" : "2019-04-10T06:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Packaging\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 1059,
    "CMAKESOURCE" : 1,
    "QMAKE" : 4,
    "MAKEFILE" : 3,
    "AUTOMAKE" : 1
  },
  "ElapsedTime" : 16832
}