{
  "Repository" : "56558",
  "Revision" : "HEAD",
  "ObjectId" : "0b3452719992f855b64fa21c9d7fbd6158a8d23a",
  "CommitTime" : "2014-07-08T09:42:35Z",
  "Files" : {
    "Makefile.am" : {
      "ObjectId" : "8f97c06cb7b58de5155b6ad00b547fac4f709631",
      "LastModified" : "2014-05-16T08:52:34Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#\n\n# Kmscon - Global Makefile\n\n# Copyright (c) 2012-2013 David Herrmann <dh.herrmann@googlemail.com>\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Global Configurations and Initializations\n\n#\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Default CFlags\n\n# Make all files include \"config.h\" by default. This shouldn't cause any\n\n# problems and we cannot forget to include it anymore.\n\n#\n\n# Also make the linker discard all unused symbols.\n\n#\n\n# When compiling in debug mode, we enable debug symbols so debugging with gdb\n\n# is easier. If optimizations are disabled, we pass -O0 to the compiler.\n\n# Otherwise, we use standard optimizations -O2.\n\n#\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Shader Converter\n\n# We use a few built-in shader files. To reduce memory-consumption, this helper\n\n# removes useless lines from the shaders before they are compiled into an object\n\n# file.\n\n#\n\n# Following regexp are used to remove characters/lines:\n\n#  ^/*.*$     Start of multi-line comment\n\n#  ^ *.*$     Multi-line comment body\n\n#  ^[ \\t]*    Indentation whitespace\n\n#  [\\r\\n]     Newlines\n\n#\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# XKB Fallback Converter\n\n# We use a static built-in XKB fallback keymap. To avoid huge memory consumption\n\n# we remove useless lines/characters first.\n\n# We also append an ASCII 0 character so it can be used as regular C-string.\n\n#\n\n# Following regexp are used to remove characters/lines:\n\n#   *= *           Whitespace around assignments\n\n#   *, *           Whitespace around commatas\n\n#   *[][{}()] *    Whitespace around braces\n\n#  ^[ \\t]*         Indentation whitespace\n\n#  [\\r\\n]          Newlines\n\n#\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# BUILD_HAVE_MANPAGES_STYLESHEET\n\n# BUILD_HAVE_XSLTPROC\n",
        "Line" : 623,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "#\n\n# Phony targets\n\n#\n",
        "Line" : 626,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n\n# Empty .SECONDARY target causes alle intermediate files to be treated as\n\n# secondary files. That is, they don't get deleted after make finished.\n\n#\n",
        "Line" : 632,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9,
      "Errorlog" : "line 186:46 token recognition error at: '\\1'\nline 186:75 token recognition error at: '\\1'\nline 191:20 token recognition error at: '\"\\x'\nline 609:26 token recognition error at: '\" ; then $(SED) -i -e 's/^\\.so \\([a-z_]\\+\\)\\.\\([0-9]\\)$$/\\.so man\\2'\nline 609:95 token recognition error at: '\\1'\nline 609:99 token recognition error at: '\\2'\n"
    }
  },
  "FileTypes" : {
    "AUTOMAKE" : 1
  },
  "ElapsedTime" : 836
}