{
  "Repository" : "6478855",
  "Revision" : "HEAD",
  "ObjectId" : "973279e9e87879b428c2160d811e74b66ad85d39",
  "CommitTime" : "2019-04-02T09:09:12Z",
  "Files" : {
    "source/CMakeLists.txt" : {
      "ObjectId" : "7fd0d3c0035f601a70ab681a3fbdadc55c71e6ca",
      "LastModified" : "2019-04-02T09:05:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#######################################\n\n# Required CMake version              #\n\n#######################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#######################################\n\n# Project name                        #\n\n#######################################\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#######################################\n\n# Project version                     #\n\n#######################################\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#######################################\n\n# Platform switches                   #\n\n#######################################\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#######################################\n\n# Platform-dependent functions check  #\n\n#######################################\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#######################################\n\n# OpENer 64-bit data types            #\n\n#######################################\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#######################################\n\n# OpENer tracer switches              #\n\n#######################################\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#######################################\n\n# OpENer library mode switch          #\n\n#######################################\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#######################################\n\n# Test switch                         #\n\n#######################################\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#######################################\n\n# OpENer C flags                      #\n\n#######################################\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "####################################################\n\n# Internal cache holding the available CIP objects #\n\n####################################################\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#######################################\n\n# Add custom CIP objects              #\n\n#######################################\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#######################################\n\n# Add subdirectories                  #\n\n#######################################\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "source/buildsupport/CodeCoverage.cmake" : {
      "ObjectId" : "72458c79e3488a9c080f5b64d038b367ceb3a7d1",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2012 - 2017, Lars Bilke\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without modification,\n\n# are permitted provided that the following conditions are met:\n\n#\n\n# 1. Redistributions of source code must retain the above copyright notice, this\n\n#    list of conditions and the following disclaimer.\n\n#\n\n# 2. Redistributions in binary form must reproduce the above copyright notice,\n\n#    this list of conditions and the following disclaimer in the documentation\n\n#    and/or other materials provided with the distribution.\n\n#\n\n# 3. Neither the name of the copyright holder nor the names of its contributors\n\n#    may be used to endorse or promote products derived from this software without\n\n#    specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n\n# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\n# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\n# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\n# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n\n# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\n# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n# CHANGES:\n\n#\n\n# 2012-01-31, Lars Bilke\n\n# - Enable Code Coverage\n\n#\n\n# 2013-09-17, Joakim SÃ¶derberg\n\n# - Added support for Clang.\n\n# - Some additional usage instructions.\n\n#\n\n# 2016-02-03, Lars Bilke\n\n# - Refactored functions to use named parameters\n\n#\n\n# 2017-06-02, Lars Bilke\n\n# - Merged with modified version from github.com/ufz/ogs\n\n#\n\n#\n\n# USAGE:\n\n#\n\n# 1. Copy this file into your cmake modules path.\n\n#\n\n# 2. Add the following line to your CMakeLists.txt:\n\n#      include(CodeCoverage)\n\n#\n\n# 3. Append necessary compiler flags:\n\n#      APPEND_COVERAGE_COMPILER_FLAGS()\n\n#\n\n# 4. If you need to exclude additional directories from the report, specify them\n\n#    using the COVERAGE_LCOV_EXCLUDES variable before calling SETUP_TARGET_FOR_COVERAGE_LCOV.\n\n#    Example:\n\n#      set(COVERAGE_LCOV_EXCLUDES 'dir1/*' 'dir2/*')\n\n#\n\n# 5. Use the functions described below to create a custom make target which\n\n#    runs your test executable and produces a code coverage report.\n\n#\n\n# 6. Build a Debug build:\n\n#      cmake -DCMAKE_BUILD_TYPE=Debug ..\n\n#      make\n\n#      make my_coverage_target\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check prereqs\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# NOT GCOV_PATH\n",
        "Line" : 80,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# NOT CMAKE_BUILD_TYPE STREQUAL \"Debug\"\n",
        "Line" : 117,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Defines a target for running and collection code coverage information\n\n# Builds dependencies, runs the given executable and outputs reports.\n\n# NOTE! The executable should always have a ZERO as exit code otherwise\n\n# the coverage generation will not complete.\n\n#\n\n# SETUP_TARGET_FOR_COVERAGE_LCOV(\n\n#     NAME testrunner_coverage                    # New target name\n\n#     EXECUTABLE testrunner -j ${PROCESSOR_COUNT} # Executable in PROJECT_BINARY_DIR\n\n#     DEPENDENCIES testrunner                     # Dependencies to build first\n\n# )\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# NOT LCOV_PATH\n",
        "Line" : 144,
        "CharPositionInLine" : 12
      },
      "6" : {
        "Text" : "# NOT GENHTML_PATH\n",
        "Line" : 148,
        "CharPositionInLine" : 12
      },
      "7" : {
        "Text" : "# Setup target\n",
        "Line" : 150,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Cleanup lcov\n",
        "Line" : 153,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Create baseline to make sure untouched files show up in the report\n",
        "Line" : 155,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# Run tests\n",
        "Line" : 158,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# Capturing lcov counters and generating report\n",
        "Line" : 161,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# add baseline counters\n",
        "Line" : 163,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# Show where to find the lcov info report\n",
        "Line" : 174,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Show info where to find the report\n",
        "Line" : 180,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# SETUP_TARGET_FOR_COVERAGE_LCOV\n",
        "Line" : 186,
        "CharPositionInLine" : 14
      },
      "16" : {
        "Text" : "# Defines a target for running and collection code coverage information\n\n# Builds dependencies, runs the given executable and outputs reports.\n\n# NOTE! The executable should always have a ZERO as exit code otherwise\n\n# the coverage generation will not complete.\n\n#\n\n# SETUP_TARGET_FOR_COVERAGE_GCOVR_XML(\n\n#     NAME ctest_coverage                    # New target name\n\n#     EXECUTABLE ctest -j ${PROCESSOR_COUNT} # Executable in PROJECT_BINARY_DIR\n\n#     DEPENDENCIES executable_target         # Dependencies to build first\n\n# )\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# NOT SIMPLE_PYTHON_EXECUTABLE\n",
        "Line" : 207,
        "CharPositionInLine" : 12
      },
      "18" : {
        "Text" : "# NOT GCOVR_PATH\n",
        "Line" : 211,
        "CharPositionInLine" : 12
      },
      "19" : {
        "Text" : "# Combine excludes to several -e arguments\n",
        "Line" : 213,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Run tests\n",
        "Line" : 221,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "# Running gcovr\n",
        "Line" : 224,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# Show info where to find the report\n",
        "Line" : 234,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# SETUP_TARGET_FOR_COVERAGE_GCOVR_XML\n",
        "Line" : 240,
        "CharPositionInLine" : 14
      },
      "24" : {
        "Text" : "# Defines a target for running and collection code coverage information\n\n# Builds dependencies, runs the given executable and outputs reports.\n\n# NOTE! The executable should always have a ZERO as exit code otherwise\n\n# the coverage generation will not complete.\n\n#\n\n# SETUP_TARGET_FOR_COVERAGE_GCOVR_HTML(\n\n#     NAME ctest_coverage                    # New target name\n\n#     EXECUTABLE ctest -j ${PROCESSOR_COUNT} # Executable in PROJECT_BINARY_DIR\n\n#     DEPENDENCIES executable_target         # Dependencies to build first\n\n# )\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# NOT SIMPLE_PYTHON_EXECUTABLE\n",
        "Line" : 261,
        "CharPositionInLine" : 12
      },
      "26" : {
        "Text" : "# NOT GCOVR_PATH\n",
        "Line" : 265,
        "CharPositionInLine" : 12
      },
      "27" : {
        "Text" : "# Combine excludes to several -e arguments\n",
        "Line" : 267,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# Run tests\n",
        "Line" : 275,
        "CharPositionInLine" : 8
      },
      "29" : {
        "Text" : "# Create folder\n",
        "Line" : 278,
        "CharPositionInLine" : 8
      },
      "30" : {
        "Text" : "# Running gcovr\n",
        "Line" : 281,
        "CharPositionInLine" : 8
      },
      "31" : {
        "Text" : "# Show info where to find the report\n",
        "Line" : 291,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# SETUP_TARGET_FOR_COVERAGE_GCOVR_HTML\n",
        "Line" : 297,
        "CharPositionInLine" : 14
      },
      "33" : {
        "Text" : "# APPEND_COVERAGE_COMPILER_FLAGS",
        "Line" : 303,
        "CharPositionInLine" : 14
      },
      "CommentCount" : 34
    },
    "source/buildsupport/MINGW/OpENer_PLATFORM_INCLUDES.cmake" : {
      "ObjectId" : "db653fda7c74b4fe07f6da5a064d5dbb6ceef6fc",
      "LastModified" : "2018-11-12T15:26:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#find_path( MSINTTYPES_DIR inttypes.h ${PROJECT_SOURCE_DIR}/contrib/msinttypes)\n",
        "Line" : 2,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "source/buildsupport/OpENer.cmake" : {
      "ObjectId" : "8b0ed7d32ee5259ad9ffc9b0135de28d23173d64",
      "LastModified" : "2018-11-12T15:26:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################\n\n# Adds platform specific include directories #\n\n############################################## \n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#######################################\n\n# Adds common Include directories     #\n\n####################################### \n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#######################################\n\n# Creates options for trace level     #\n\n####################################### \n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "source/buildsupport/OpENer_CIP_Object_generator.cmake" : {
      "ObjectId" : "b6feaf01ad37590d5b0b83eec959e344d887a74e",
      "LastModified" : "2018-11-12T15:26:06Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/buildsupport/OpENer_Tests.cmake" : {
      "ObjectId" : "a98c53269d126133fb882b9dea80b0349c451686",
      "LastModified" : "2018-11-12T15:26:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#######################################\n\n# Adds test includes                  #\n\n#######################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/buildsupport/OpENer_function_checks.cmake" : {
      "ObjectId" : "9c695bfff8fa22a18bb7b58e66205b85ae69066e",
      "LastModified" : "2018-11-12T15:26:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################\n\n# Check if functions exist on platform #\n\n########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/buildsupport/POSIX/OpENer_PLATFORM_INCLUDES.cmake" : {
      "ObjectId" : "dbfa7a7672342480a926ad3a5571aff3db034909",
      "LastModified" : "2019-03-25T15:14:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/buildsupport/Toolchain/Toolchain-EABI-ARM-Generic.cmake" : {
      "ObjectId" : "7026e52bb24c3023a0e9ad9e9ee0a354461a21b0",
      "LastModified" : "2019-04-02T09:05:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Embedded System - No OS\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Specifiy CPU\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# specify the cross compiler\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find the target environment prefix..\n\n# First see where gcc is keeping libc.a\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Strip the filename off\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Then find the canonical path to the directory one up from there\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# When we break up long strings in CMake we get semicolon\n\n# separated lists, undo this here...\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "source/buildsupport/WIN32/OpENer_PLATFORM_INCLUDES.cmake" : {
      "ObjectId" : "c58ac0023476cbca47d22a629e8bba5a3a885db2",
      "LastModified" : "2018-11-12T15:26:06Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/src/CMakeLists.txt" : {
      "ObjectId" : "5b4c0469b51c6b7b1e5e37a9039118221270dcff",
      "LastModified" : "2019-04-02T09:05:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#######################################\n\n# Add subdirectories                  #\n\n#######################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#######################################\n\n# Add common includes                 #\n\n#######################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#######################################\n\n# Add platform specific things        #\n\n#######################################\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "source/src/cip/CMakeLists.txt" : {
      "ObjectId" : "7d7b593971168add2c4539133cf4441b08aa67e3",
      "LastModified" : "2019-04-02T09:05:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#######################################\n\n# CIP library                         #\n\n#######################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#######################################\n\n# Add common includes                 #\n\n#######################################\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#######################################\n\n# Add platform-specific includes      #\n\n#######################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "source/src/cip_objects/CMakeLists.txt" : {
      "ObjectId" : "1d7cedeb56931f9b7aa90899a3e6b778972fbf84",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/src/enet_encap/CMakeLists.txt" : {
      "ObjectId" : "918895ec11cfb38cef6d740f6152e48a80dda0c3",
      "LastModified" : "2019-04-02T09:05:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#######################################\n\n# Ethernet encapsulation library      #\n\n#######################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#######################################\n\n# Add common includes                 #\n\n#######################################\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#######################################\n\n# Add platform-specific includes      #\n\n#######################################\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "source/src/ports/CMakeLists.txt" : {
      "ObjectId" : "df9cb277eb18440077a23091bdc4700fbfc03711",
      "LastModified" : "2019-04-02T09:05:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#######################################\n\n# OpENer ports\t\t\t              #\n\n#######################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#######################################\n\n# Add common includes                 #\n\n#######################################\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#######################################\n\n# Add platform-specific includes      #\n\n#######################################\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "source/src/ports/MINGW/CMakeLists.txt" : {
      "ObjectId" : "08f0a0b8c74810f00e33d7accabcdd357b8ed564",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#######################################\n\n# Add common includes                 #\n\n#######################################\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#######################################\n\n# Add platform specific things        #\n\n#######################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "source/src/ports/MINGW/sample_application/CMakeLists.txt" : {
      "ObjectId" : "ef8406e8cc7a9dde18276946b8fae9e5aaffd5e3",
      "LastModified" : "2018-11-12T15:26:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#######################################\n\n# Add common includes                 #\n\n#######################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#######################################\n\n# Add platform specific things        #\n\n#######################################\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "source/src/ports/POSIX/CMakeLists.txt" : {
      "ObjectId" : "8f459dfcf101e6c5a5d477d436161ed9d297bd65",
      "LastModified" : "2019-04-02T09:05:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#######################################\n\n# OpENer RT patch\t              #\n\n#######################################\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#######################################\n\n# Add common includes                 #\n\n#######################################\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#######################################\n\n# Add platform-specific includes      #\n\n#######################################\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Mark executables and/or libraries for installation\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "source/src/ports/POSIX/sample_application/CMakeLists.txt" : {
      "ObjectId" : "5f7ae004870c033b94b3b5a4c5d3188e8270045d",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#######################################\n\n# Add common includes                 #\n\n#######################################\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#######################################\n\n# Add platform-specific includes      #\n\n#######################################\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "source/src/ports/WIN32/CMakeLists.txt" : {
      "ObjectId" : "097b39bbe7b6aab82c893adbf5024ed9794ec332",
      "LastModified" : "2018-11-12T15:26:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#######################################\n\n# Add common includes                 #\n\n#######################################\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#######################################\n\n# Add platform specific things        #\n\n#######################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "source/src/ports/WIN32/sample_application/CMakeLists.txt" : {
      "ObjectId" : "ef8406e8cc7a9dde18276946b8fae9e5aaffd5e3",
      "LastModified" : "2018-11-12T15:26:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#######################################\n\n# Add common includes                 #\n\n#######################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#######################################\n\n# Add platform specific things        #\n\n#######################################\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "source/src/utils/CMakeLists.txt" : {
      "ObjectId" : "dcf6998c18ccb99a509cd84a8feffb1c964483f6",
      "LastModified" : "2019-04-02T09:05:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/tests/CMakeLists.txt" : {
      "ObjectId" : "e098e870afae11a44a25a1b2df3026c66dff87fc",
      "LastModified" : "2018-11-12T15:26:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#######################################\n\n# Add test subdirectories             #\n\n#######################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#######################################\n\n# Add test includes                   #\n\n#######################################\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###################################################\n\n# Copy custom test output file to binary location #\n\n###################################################\n\n#configure_file( CTestCustom.cmake ${PROJECT_BINARY_DIR}/CTestCustom.cmake )\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "########################################\n\n# Adds test to CTest environment       #\n\n########################################\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "source/tests/cip/CMakeLists.txt" : {
      "ObjectId" : "c2237a72b1f3b6b2f06cb23fe27ca42bed852cdb",
      "LastModified" : "2018-11-13T14:53:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#######################################\n\n# Add common includes                 #\n\n#######################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#######################################\n\n# Add platform-specific includes      #\n\n#######################################\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "source/tests/enet_encap/CMakeLists.txt" : {
      "ObjectId" : "75fb2ecb117257c6aaf20a21e9de6319a0200d93",
      "LastModified" : "2018-11-12T15:26:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#######################################\n\n# Add common includes                 #\n\n#######################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#######################################\n\n# Add platform-specific includes      #\n\n#######################################\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "source/tests/ports/CMakeLists.txt" : {
      "ObjectId" : "68b5695eade311612ee3cc39ee39226319ffd927",
      "LastModified" : "2018-11-12T15:26:06Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "source/tests/utils/CMakeLists.txt" : {
      "ObjectId" : "38f76dfa782191fe1ec4b80656e138f0db4b67b4",
      "LastModified" : "2018-11-12T15:26:06Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 27
  },
  "ElapsedTime" : 1404
}