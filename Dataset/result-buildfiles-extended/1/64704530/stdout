{
  "Repository" : "64704530",
  "Revision" : "HEAD",
  "ObjectId" : "c4c74f0d6a1741782acc822ee5933e24e17095a4",
  "CommitTime" : "2019-02-21T15:29:20Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "78321281ded6fbe4c1789388838d28172f853e4f",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2014-2017, David Hirvonen\n\n# All rights reserved.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMAKE_INTERPROCEDURAL_OPTIMIZATION\n",
        "Line" : 4,
        "CharPositionInLine" : 36
      },
      "2" : {
        "Text" : "#########################\n\n### CMAKE_MODULE_PATH ###\n\n#########################\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#######################\n\n### Drishti project ###\n\n#######################\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#################\n\n### Languages ###\n\n#################\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# This must be in the top/highest level directory (really)\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# for 3rd parties added by add_subdirectory\n",
        "Line" : 33,
        "CharPositionInLine" : 38
      },
      "7" : {
        "Text" : "#####################################################################\n\n## IMPORTANT: Set platform variables after project() and before\n\n## the first hunter_add_package() call. The cmake/Hunter/config.cmake\n\n## file will be parsed at the time of the first hunter_add_package()\n\n## call, so we need to populate system variable before that.\n\n## Do note move this!!!!!!!!\n\n#####################################################################\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# DRISHTI_BUILD_MERGED_SDK: (see: DRISHTI_BUILD_OPENCV_WORLD)\n\n#   Force DRISHTI_BUILD_OPENCV_WORLD=OFF since the merged\n\n#   library introduces duplicate object names (filenames)\n\n#   which causes errors when splitting libopencv_world.a\n\n#   into object files.\n\n#\n\n# DRISHTI_BUILD_OPENCV_WORLD: (see: DRISHTI_BUILD_MERGED_SDK)\n\n#   This is an override for the same setting in\n\n#   drishti-upload/config.cmake.\n\n#\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Override the drishti-upload DRISHTI_BUILD_OPENCV_WORLD option, since the opencv_world\n\n# library contains duplicate object filenames that prevents a successful split + merge\n\n# due to limitations in the ar utility.\n",
        "Line" : 66,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#######################\n\n#### CMake includes ###\n\n#######################\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "####################\n\n## Version check ###\n\n####################\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Workaround for Android Studio bug, exit as soon as Toolchain-ID/Config-ID\n\n# is ready, i.e. after first 'hunter_add_package' call.\n\n# Used in 'bin/jenkins.sh'.\n",
        "Line" : 109,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "##############\n\n## Doxygen ###\n\n##############\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "## https://tty1.net/blog/2014/cmake-doxygen_en.html\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "######################\n\n### RPATH defaults ###\n\n######################\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# see: http://www.cmake.org/Wiki/CMake_RPATH_handling\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "###########################\n\n### XCODE customization ###\n\n###########################\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Generate debug symbols but strip them (i.e., clang or gcc)\n",
        "Line" : 155,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Add -g to force dSYM generation\n",
        "Line" : 159,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# RelWithDebInfo should always have symbols\n",
        "Line" : 163,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# Minimize static analyzer time\n",
        "Line" : 167,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "#######################\n\n### Packaging/CPack ###\n\n#######################\n\n# see https://github.com/forexample/github-binary-release/blob/master/CMakeLists.txt\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# includes Cpack\n",
        "Line" : 179,
        "CharPositionInLine" : 54
      },
      "24" : {
        "Text" : "###############################\n\n### Serialization/Archives ####\n\n###############################\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# See corresponding target_compile_definitions() in src/libdrishti/CMakeLists.txt\n\n# Serialization options pertain to both library builds and integration testing.\n\n# In the case of integration testing, the user must specify serialization options\n\n# that are compatible with the compiled libraries.\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "################\n\n#### Testing ###\n\n################\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# DRISHTI_BUILD_TESTS:\n\n# ${DRISHTISDK}/src/lib/drishti/<module>/ut/\n\n# ${DRISHTISDK}/src/tests\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#################\n\n### Test data ###\n\n#################\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Override assets using corresponding environment variables if present:\n",
        "Line" : 261,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "#######################\n\n### Compiler checks ###\n\n#######################\n",
        "Line" : 272,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "### If true C++11 thread_local support exists, we will use it:\n",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Else, we will check for backups\n",
        "Line" : 280,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "###########################\n\n### Print compiler info ###\n\n###########################\n",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "####################################\n\n### Sugar: collect cmake sources ###\n\n####################################\n",
        "Line" : 298,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "##############\n\n### cotire ###\n\n##############\n",
        "Line" : 305,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# https://github.com/sakra/cotire\n",
        "Line" : 309,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#################################\n\n### Drishti LIB configuration ###\n\n#################################\n",
        "Line" : 317,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# This will build a static library using all specified modules\n",
        "Line" : 321,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# 3rd party libraries\n",
        "Line" : 332,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# duplicate symbols\n",
        "Line" : 334,
        "CharPositionInLine" : 50
      },
      "41" : {
        "Text" : "##################################################\n\n### Installation/packaging paths and variables ###\n\n##################################################\n",
        "Line" : 336,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# overwrite drishtisdk\n",
        "Line" : 339,
        "CharPositionInLine" : 32
      },
      "43" : {
        "Text" : "#### std::to_string ####\n",
        "Line" : 348,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "##################################\n\n### Includes (to be deprecated ###\n\n##################################\n",
        "Line" : 355,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#################################\n\n### Print the full asset list ###\n\n#################################\n",
        "Line" : 375,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 46
    },
    "cmake/Modules/cotire.cmake" : {
      "ObjectId" : "741d6901f157bd038741a523ddda099440159d0b",
      "LastModified" : "2016-09-30T01:58:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - cotire (compile time reducer)\n\n#\n\n# See the cotire manual for usage hints.\n\n#\n\n#=============================================================================\n\n# Copyright 2012-2016 Sascha Kratky\n\n#\n\n# Permission is hereby granted, free of charge, to any person\n\n# obtaining a copy of this software and associated documentation\n\n# files (the \"Software\"), to deal in the Software without\n\n# restriction, including without limitation the rights to use,\n\n# copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the\n\n# Software is furnished to do so, subject to the following\n\n# conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be\n\n# included in all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\n# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\n# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\n# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n\n# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n\n# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\n# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\n# OTHER DEALINGS IN THE SOFTWARE.\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# call cmake_minimum_required, but prevent modification of the CMake policy stack in include mode\n\n# cmake_minimum_required also sets the policy version as a side effect, which we have to avoid\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# activate select policies\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Compiler id for Apple Clang is now AppleClang\n",
        "Line" : 50,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# disallow use of the LOCATION target property\n",
        "Line" : 55,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# targets may not link directly to themselves\n",
        "Line" : 60,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# utility targets may not have link dependencies\n",
        "Line" : 65,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# target in the TARGET signature of add_custom_command() must exist\n",
        "Line" : 70,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# error on non-existent target in get_target_property\n",
        "Line" : 75,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# error on non-existent dependency in add_dependencies\n",
        "Line" : 80,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# do not expand variables in target source entries\n",
        "Line" : 85,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# disallow add_custom_command SOURCE signatures\n",
        "Line" : 90,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# include TARGET_OBJECTS expressions in a target's SOURCES property\n",
        "Line" : 95,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# simplify variable reference and escape sequence evaluation\n",
        "Line" : 100,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# only interpret if() arguments as variables or keywords when unquoted\n",
        "Line" : 105,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "# get_filename_component returns extension from first occurrence of . in file name\n\n# this function computes the extension from last occurrence of . in file name\n",
        "Line" : 129,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "# as of CMake 3.1 target sources may contain generator expressions\n\n# since we cannot obtain required property information about source files added\n\n# through generator expressions at configure time, we filter them out\n",
        "Line" : 182,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# consider source file unless it is excluded explicitly\n",
        "Line" : 204,
        "CharPositionInLine" : 7
      },
      "18" : {
        "Text" : "# add to excluded sources, if file is not ignored and has correct language without having the correct extension\n",
        "Line" : 214,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# separate filtered source files from already cotired ones\n\n# the COTIRE_TARGET property of a source file may be set while a target is being processed by cotire\n",
        "Line" : 223,
        "CharPositionInLine" : 1
      },
      "20" : {
        "Text" : "# add to excluded sources, if file has custom compile flags\n",
        "Line" : 234,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# remove from head\n",
        "Line" : 327,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# BFS traversal of transitive libraries\n",
        "Line" : 334,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# option with separate argument\n",
        "Line" : 358,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# remember option\n",
        "Line" : 362,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# option with joined argument\n",
        "Line" : 365,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# flush remembered option\n",
        "Line" : 369,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# add to unfiltered options\n",
        "Line" : 374,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# collect options from CMake language variables\n",
        "Line" : 412,
        "CharPositionInLine" : 1
      },
      "29" : {
        "Text" : "# add target compile flags\n",
        "Line" : 421,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# target compile options\n",
        "Line" : 434,
        "CharPositionInLine" : 1
      },
      "31" : {
        "Text" : "# interface compile options from linked library targets\n",
        "Line" : 441,
        "CharPositionInLine" : 1
      },
      "32" : {
        "Text" : "# handle language standard properties\n",
        "Line" : 452,
        "CharPositionInLine" : 1
      },
      "33" : {
        "Text" : "# handle the POSITION_INDEPENDENT_CODE target property\n",
        "Line" : 473,
        "CharPositionInLine" : 1
      },
      "34" : {
        "Text" : "# handle visibility target properties\n",
        "Line" : 485,
        "CharPositionInLine" : 1
      },
      "35" : {
        "Text" : "# platform specific flags\n",
        "Line" : 496,
        "CharPositionInLine" : 1
      },
      "36" : {
        "Text" : "# default include dirs\n",
        "Line" : 531,
        "CharPositionInLine" : 1
      },
      "37" : {
        "Text" : "# parse additional include directories from target compile flags\n",
        "Line" : 538,
        "CharPositionInLine" : 1
      },
      "38" : {
        "Text" : "# parse additional system include directories from target compile flags\n",
        "Line" : 550,
        "CharPositionInLine" : 1
      },
      "39" : {
        "Text" : "# target include directories\n",
        "Line" : 562,
        "CharPositionInLine" : 1
      },
      "40" : {
        "Text" : "# interface include directories from linked library targets\n",
        "Line" : 574,
        "CharPositionInLine" : 1
      },
      "41" : {
        "Text" : "# CMAKE_INCLUDE_CURRENT_DIR_IN_INTERFACE refers to CMAKE_CURRENT_BINARY_DIR and CMAKE_CURRENT_SOURCE_DIR\n\n# at the time, when the target was created. These correspond to the target properties BINARY_DIR and SOURCE_DIR\n\n# which are only available with CMake 3.4 or later.\n",
        "Line" : 582,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "# CMAKE_INTDIR for multi-configuration build systems\n",
        "Line" : 659,
        "CharPositionInLine" : 1
      },
      "43" : {
        "Text" : "# target export define symbol\n",
        "Line" : 663,
        "CharPositionInLine" : 1
      },
      "44" : {
        "Text" : "# directory compile definitions\n",
        "Line" : 668,
        "CharPositionInLine" : 1
      },
      "45" : {
        "Text" : "# target compile definitions\n",
        "Line" : 677,
        "CharPositionInLine" : 1
      },
      "46" : {
        "Text" : "# interface compile definitions from linked library targets\n",
        "Line" : 686,
        "CharPositionInLine" : 1
      },
      "47" : {
        "Text" : "# parse additional compile definitions from target compile flags\n\n# and don't look at directory compile definitions, which we already handled\n",
        "Line" : 695,
        "CharPositionInLine" : 1
      },
      "48" : {
        "Text" : "# parse target compile flags omitting compile definitions and include directives\n",
        "Line" : 711,
        "CharPositionInLine" : 1
      },
      "49" : {
        "Text" : "# compiler launcher is only supported for Makefile and Ninja\n",
        "Line" : 863,
        "CharPositionInLine" : 2
      },
      "50" : {
        "Text" : "# IS_NEWER_THAN returns TRUE if both files have the same timestamp\n\n# thus we do the comparison in both directions to exclude ties\n",
        "Line" : 952,
        "CharPositionInLine" : 4
      },
      "51" : {
        "Text" : "# if path matches exactly, return short non-empty string\n",
        "Line" : 996,
        "CharPositionInLine" : 3
      },
      "52" : {
        "Text" : "# check header path against ignored and honored include directories\n",
        "Line" : 1004,
        "CharPositionInLine" : 1
      },
      "53" : {
        "Text" : "# header is inside, but could be become outside if there is a shorter outside match\n",
        "Line" : 1007,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "# header is outside\n",
        "Line" : 1021,
        "CharPositionInLine" : 2
      },
      "55" : {
        "Text" : "# heuristic: ignore C headers with embedded parent directory references or \"-fixed\" or \"_fixed\" in path\n\n# these often stem from using GCC #include_next tricks, which may break the precompiled header compilation\n\n# with the error message \"error: no include path in which to search for header.h\"\n",
        "Line" : 1032,
        "CharPositionInLine" : 2
      },
      "56" : {
        "Text" : "# check header file extension\n",
        "Line" : 1042,
        "CharPositionInLine" : 1
      },
      "57" : {
        "Text" : "# cl.exe /showIncludes output looks different depending on the language pack used, e.g.:\n\n# English: \"Note: including file:   C:\\directory\\file\"\n\n# German: \"Hinweis: Einlesen der Datei:   C:\\directory\\file\"\n\n# We use a very general regular expression, relying on the presence of the : characters\n",
        "Line" : 1055,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# Visual Studio compiler output\n",
        "Line" : 1060,
        "CharPositionInLine" : 3
      },
      "59" : {
        "Text" : "# GCC like output\n",
        "Line" : 1069,
        "CharPositionInLine" : 3
      },
      "60" : {
        "Text" : "# prevent CMake macro invocation errors due to backslash characters in Windows paths\n",
        "Line" : 1085,
        "CharPositionInLine" : 2
      },
      "61" : {
        "Text" : "# canonize slashes\n",
        "Line" : 1088,
        "CharPositionInLine" : 1
      },
      "62" : {
        "Text" : "# prevent semicolon from being interpreted as a line separator\n",
        "Line" : 1090,
        "CharPositionInLine" : 1
      },
      "63" : {
        "Text" : "# then separate lines\n",
        "Line" : 1092,
        "CharPositionInLine" : 1
      },
      "64" : {
        "Text" : "# remove duplicate lines to speed up parsing\n",
        "Line" : 1095,
        "CharPositionInLine" : 1
      },
      "65" : {
        "Text" : "# stack keeps track of inside/outside project status of processed header files\n",
        "Line" : 1113,
        "CharPositionInLine" : 1
      },
      "66" : {
        "Text" : "# update stack\n",
        "Line" : 1123,
        "CharPositionInLine" : 4
      },
      "67" : {
        "Text" : "# header is a candidate if it is outside project\n",
        "Line" : 1139,
        "CharPositionInLine" : 4
      },
      "68" : {
        "Text" : "# get parent header file's inside/outside status\n",
        "Line" : 1141,
        "CharPositionInLine" : 5
      },
      "69" : {
        "Text" : "# select header file if parent header file is inside project\n\n# (e.g., a project header file that includes a standard header file)\n",
        "Line" : 1148,
        "CharPositionInLine" : 5
      },
      "70" : {
        "Text" : "# fix header's inside status on stack, it is ignored by extension now\n",
        "Line" : 1157,
        "CharPositionInLine" : 8
      },
      "71" : {
        "Text" : "# for cl.exe do not keep unparsed lines which solely consist of a source file name\n",
        "Line" : 1169,
        "CharPositionInLine" : 5
      },
      "72" : {
        "Text" : "# only consider existing source files for scanning\n",
        "Line" : 1207,
        "CharPositionInLine" : 1
      },
      "73" : {
        "Text" : "# cl.exe messes with the output streams unless the environment variable VS_UNICODE_OUTPUT is cleared\n",
        "Line" : 1223,
        "CharPositionInLine" : 2
      },
      "74" : {
        "Text" : "# use absolute path as source file location\n",
        "Line" : 1371,
        "CharPositionInLine" : 2
      },
      "75" : {
        "Text" : "# create empty log file\n",
        "Line" : 1412,
        "CharPositionInLine" : 3
      },
      "76" : {
        "Text" : "# Intel compiler requires hdrstop pragma to stop generating PCH file\n",
        "Line" : 1428,
        "CharPositionInLine" : 2
      },
      "77" : {
        "Text" : "# cl.exe options used\n\n# /nologo suppresses display of sign-on banner\n\n# /TC treat all files named on the command line as C source files\n\n# /TP treat all files named on the command line as C++ source files\n\n# /EP preprocess to stdout without #line directives\n\n# /showIncludes list include files\n",
        "Line" : 1464,
        "CharPositionInLine" : 2
      },
      "78" : {
        "Text" : "# append to list\n",
        "Line" : 1473,
        "CharPositionInLine" : 3
      },
      "79" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1476,
        "CharPositionInLine" : 3
      },
      "80" : {
        "Text" : "# GCC options used\n\n# -H print the name of each header file used\n\n# -E invoke preprocessor\n\n# -fdirectives-only do not expand macros, requires GCC >= 4.3\n",
        "Line" : 1480,
        "CharPositionInLine" : 2
      },
      "81" : {
        "Text" : "# append to list\n",
        "Line" : 1485,
        "CharPositionInLine" : 3
      },
      "82" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1491,
        "CharPositionInLine" : 3
      },
      "83" : {
        "Text" : "# Clang options used\n\n# -H print the name of each header file used\n\n# -E invoke preprocessor\n\n# -fno-color-diagnostics don't prints diagnostics in color\n",
        "Line" : 1498,
        "CharPositionInLine" : 2
      },
      "84" : {
        "Text" : "# append to list\n",
        "Line" : 1503,
        "CharPositionInLine" : 3
      },
      "85" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1506,
        "CharPositionInLine" : 3
      },
      "86" : {
        "Text" : "# Windows Intel options used\n\n# /nologo do not display compiler version information\n\n# /QH display the include file order\n\n# /EP preprocess to stdout, omitting #line directives\n\n# /TC process all source or unrecognized file types as C source files\n\n# /TP process all source or unrecognized file types as C++ source files\n",
        "Line" : 1511,
        "CharPositionInLine" : 3
      },
      "87" : {
        "Text" : "# append to list\n",
        "Line" : 1520,
        "CharPositionInLine" : 4
      },
      "88" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1523,
        "CharPositionInLine" : 4
      },
      "89" : {
        "Text" : "# Linux / Mac OS X Intel options used\n\n# -H print the name of each header file used\n\n# -EP preprocess to stdout, omitting #line directives\n\n# -Kc++ process all source or unrecognized file types as C++ source files\n",
        "Line" : 1527,
        "CharPositionInLine" : 3
      },
      "90" : {
        "Text" : "# append to list\n",
        "Line" : 1532,
        "CharPositionInLine" : 4
      },
      "91" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1538,
        "CharPositionInLine" : 4
      },
      "92" : {
        "Text" : "# cl.exe options used\n\n# /Yc creates a precompiled header file\n\n# /Fp specifies precompiled header binary file name\n\n# /FI forces inclusion of file\n\n# /TC treat all files named on the command line as C source files\n\n# /TP treat all files named on the command line as C++ source files\n\n# /Zs syntax check only\n\n# /Zm precompiled header memory allocation scaling factor\n",
        "Line" : 1557,
        "CharPositionInLine" : 2
      },
      "93" : {
        "Text" : "# append to list\n",
        "Line" : 1568,
        "CharPositionInLine" : 3
      },
      "94" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1575,
        "CharPositionInLine" : 3
      },
      "95" : {
        "Text" : "# GCC / Clang options used\n\n# -x specify the source language\n\n# -c compile but do not link\n\n# -o place output in file\n\n# note that we cannot use -w to suppress all warnings upon pre-compiling, because turning off a warning may\n\n# alter compile flags as a side effect (e.g., -Wwrite-string implies -fconst-strings)\n",
        "Line" : 1582,
        "CharPositionInLine" : 2
      },
      "96" : {
        "Text" : "# append to list\n",
        "Line" : 1591,
        "CharPositionInLine" : 3
      },
      "97" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1594,
        "CharPositionInLine" : 3
      },
      "98" : {
        "Text" : "# Windows Intel options used\n\n# /nologo do not display compiler version information\n\n# /Yc create a precompiled header (PCH) file\n\n# /Fp specify a path or file name for precompiled header files\n\n# /FI tells the preprocessor to include a specified file name as the header file\n\n# /TC process all source or unrecognized file types as C source files\n\n# /TP process all source or unrecognized file types as C++ source files\n\n# /Zs syntax check only\n\n# /Wpch-messages enable diagnostics related to pre-compiled headers (requires Intel XE 2013 Update 2)\n",
        "Line" : 1602,
        "CharPositionInLine" : 3
      },
      "99" : {
        "Text" : "# append to list\n",
        "Line" : 1614,
        "CharPositionInLine" : 4
      },
      "100" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1621,
        "CharPositionInLine" : 4
      },
      "101" : {
        "Text" : "# Linux / Mac OS X Intel options used\n\n# -pch-dir location for precompiled header files\n\n# -pch-create name of the precompiled header (PCH) to create\n\n# -Kc++ process all source or unrecognized file types as C++ source files\n\n# -fsyntax-only check only for correct syntax\n\n# -Wpch-messages enable diagnostics related to pre-compiled headers (requires Intel XE 2013 Update 2)\n",
        "Line" : 1628,
        "CharPositionInLine" : 3
      },
      "102" : {
        "Text" : "# append to list\n",
        "Line" : 1639,
        "CharPositionInLine" : 4
      },
      "103" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1648,
        "CharPositionInLine" : 4
      },
      "104" : {
        "Text" : "# cl.exe options used\n\n# /Yu uses a precompiled header file during build\n\n# /Fp specifies precompiled header binary file name\n\n# /FI forces inclusion of file\n\n# /Zm precompiled header memory allocation scaling factor\n",
        "Line" : 1665,
        "CharPositionInLine" : 2
      },
      "105" : {
        "Text" : "# append to list\n",
        "Line" : 1673,
        "CharPositionInLine" : 4
      },
      "106" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1679,
        "CharPositionInLine" : 4
      },
      "107" : {
        "Text" : "# no precompiled header, force inclusion of prefix header\n",
        "Line" : 1686,
        "CharPositionInLine" : 3
      },
      "108" : {
        "Text" : "# append to list\n",
        "Line" : 1688,
        "CharPositionInLine" : 4
      },
      "109" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1691,
        "CharPositionInLine" : 4
      },
      "110" : {
        "Text" : "# GCC options used\n\n# -include process include file as the first line of the primary source file\n\n# -Winvalid-pch warns if precompiled header is found but cannot be used\n\n# note: ccache requires the -include flag to be used in order to process precompiled header correctly\n",
        "Line" : 1696,
        "CharPositionInLine" : 2
      },
      "111" : {
        "Text" : "# append to list\n",
        "Line" : 1701,
        "CharPositionInLine" : 3
      },
      "112" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1704,
        "CharPositionInLine" : 3
      },
      "113" : {
        "Text" : "# Clang options used\n\n# -include process include file as the first line of the primary source file\n\n# -include-pch include precompiled header file\n\n# -Qunused-arguments don't emit warning for unused driver arguments\n\n# note: ccache requires the -include flag to be used in order to process precompiled header correctly\n",
        "Line" : 1708,
        "CharPositionInLine" : 2
      },
      "114" : {
        "Text" : "# append to list\n",
        "Line" : 1714,
        "CharPositionInLine" : 3
      },
      "115" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1717,
        "CharPositionInLine" : 3
      },
      "116" : {
        "Text" : "# Windows Intel options used\n\n# /Yu use a precompiled header (PCH) file\n\n# /Fp specify a path or file name for precompiled header files\n\n# /FI tells the preprocessor to include a specified file name as the header file\n\n# /Wpch-messages enable diagnostics related to pre-compiled headers (requires Intel XE 2013 Update 2)\n",
        "Line" : 1723,
        "CharPositionInLine" : 3
      },
      "117" : {
        "Text" : "# append to list\n",
        "Line" : 1731,
        "CharPositionInLine" : 5
      },
      "118" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1737,
        "CharPositionInLine" : 5
      },
      "119" : {
        "Text" : "# no precompiled header, force inclusion of prefix header\n",
        "Line" : 1744,
        "CharPositionInLine" : 4
      },
      "120" : {
        "Text" : "# append to list\n",
        "Line" : 1746,
        "CharPositionInLine" : 5
      },
      "121" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1749,
        "CharPositionInLine" : 5
      },
      "122" : {
        "Text" : "# Linux / Mac OS X Intel options used\n\n# -pch-dir location for precompiled header files\n\n# -pch-use name of the precompiled header (PCH) to use\n\n# -include process include file as the first line of the primary source file\n\n# -Wpch-messages enable diagnostics related to pre-compiled headers (requires Intel XE 2013 Update 2)\n",
        "Line" : 1754,
        "CharPositionInLine" : 3
      },
      "123" : {
        "Text" : "# append to list\n",
        "Line" : 1763,
        "CharPositionInLine" : 5
      },
      "124" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1769,
        "CharPositionInLine" : 5
      },
      "125" : {
        "Text" : "# no precompiled header, force inclusion of prefix header\n",
        "Line" : 1776,
        "CharPositionInLine" : 4
      },
      "126" : {
        "Text" : "# append to list\n",
        "Line" : 1778,
        "CharPositionInLine" : 5
      },
      "127" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1781,
        "CharPositionInLine" : 5
      },
      "128" : {
        "Text" : "# cl.exe messes with the output streams unless the environment variable VS_UNICODE_OUTPUT is cleared\n",
        "Line" : 1818,
        "CharPositionInLine" : 2
      },
      "129" : {
        "Text" : "# supported since Visual Studio C++ 6.0\n\n# and CMake does not support an earlier version\n",
        "Line" : 1834,
        "CharPositionInLine" : 2
      },
      "130" : {
        "Text" : "# GCC PCH support requires version >= 3.4\n",
        "Line" : 1838,
        "CharPositionInLine" : 2
      },
      "131" : {
        "Text" : "# all Clang versions have PCH support\n",
        "Line" : 1845,
        "CharPositionInLine" : 2
      },
      "132" : {
        "Text" : "# Intel PCH support requires version >= 8.0.0\n",
        "Line" : 1848,
        "CharPositionInLine" : 2
      },
      "133" : {
        "Text" : "# PCH compilation not supported by GCC / Clang for multi-architecture builds (e.g., i386, x86_64)\n",
        "Line" : 1866,
        "CharPositionInLine" : 2
      },
      "134" : {
        "Text" : "# ${CMAKE_CFG_INTDIR} may reference a build-time variable when using a generator which supports configuration types\n",
        "Line" : 1885,
        "CharPositionInLine" : 1
      },
      "135" : {
        "Text" : "# start new unity file segment\n",
        "Line" : 1928,
        "CharPositionInLine" : 4
      },
      "136" : {
        "Text" : "# there is only a single unity file\n",
        "Line" : 1939,
        "CharPositionInLine" : 2
      },
      "137" : {
        "Text" : "# end with final unity file segment\n",
        "Line" : 1942,
        "CharPositionInLine" : 2
      },
      "138" : {
        "Text" : "# For Xcode, we completely hand off the compilation of the prefix header to the IDE\n",
        "Line" : 2013,
        "CharPositionInLine" : 4
      },
      "139" : {
        "Text" : "# MSVC uses the extension .pch added to the prefix header base name\n",
        "Line" : 2018,
        "CharPositionInLine" : 4
      },
      "140" : {
        "Text" : "# Clang looks for a precompiled header corresponding to the prefix header with the extension .pch appended\n",
        "Line" : 2021,
        "CharPositionInLine" : 4
      },
      "141" : {
        "Text" : "# GCC looks for a precompiled header corresponding to the prefix header with the extension .gch appended\n",
        "Line" : 2024,
        "CharPositionInLine" : 4
      },
      "142" : {
        "Text" : "# Intel uses the extension .pchi added to the prefix header base name\n",
        "Line" : 2027,
        "CharPositionInLine" : 4
      },
      "143" : {
        "Text" : "# depend on target's generated source files\n",
        "Line" : 2059,
        "CharPositionInLine" : 1
      },
      "144" : {
        "Text" : "# but omit all generated source files that have the COTIRE_EXCLUDED property set to true\n",
        "Line" : 2063,
        "CharPositionInLine" : 2
      },
      "145" : {
        "Text" : "# and omit all generated source files that have the COTIRE_DEPENDENCY property set to false explicitly\n",
        "Line" : 2068,
        "CharPositionInLine" : 2
      },
      "146" : {
        "Text" : "# depend on target source files marked with custom COTIRE_DEPENDENCY property\n",
        "Line" : 2085,
        "CharPositionInLine" : 1
      },
      "147" : {
        "Text" : "# set up variables to be configured\n",
        "Line" : 2098,
        "CharPositionInLine" : 1
      },
      "148" : {
        "Text" : "# set up COTIRE_TARGET_SOURCES\n",
        "Line" : 2123,
        "CharPositionInLine" : 1
      },
      "149" : {
        "Text" : "# use absolute paths for generated files only, retrieving the LOCATION property is an expensive operation\n",
        "Line" : 2128,
        "CharPositionInLine" : 3
      },
      "150" : {
        "Text" : "# copy variable definitions to cotire target script\n",
        "Line" : 2135,
        "CharPositionInLine" : 1
      },
      "151" : {
        "Text" : "# omit COTIRE_*_INIT variables\n",
        "Line" : 2138,
        "CharPositionInLine" : 1
      },
      "152" : {
        "Text" : "# omit COTIRE_VERBOSE which is passed as a CMake define on command line\n",
        "Line" : 2143,
        "CharPositionInLine" : 1
      },
      "153" : {
        "Text" : "# generate target script file\n",
        "Line" : 2166,
        "CharPositionInLine" : 1
      },
      "154" : {
        "Text" : "# use file(GENERATE ...) to expand generator expressions in the target script at CMake generate-time\n",
        "Line" : 2171,
        "CharPositionInLine" : 2
      },
      "155" : {
        "Text" : "# for Visual Studio and Intel, we attach the precompiled header compilation to the host file\n\n# the remaining files include the precompiled header, see cotire_setup_pch_file_inclusion\n",
        "Line" : 2185,
        "CharPositionInLine" : 2
      },
      "156" : {
        "Text" : "# make object file generated from host file depend on prefix header\n",
        "Line" : 2194,
        "CharPositionInLine" : 3
      },
      "157" : {
        "Text" : "# mark host file as cotired to prevent it from being used in another cotired target\n",
        "Line" : 2196,
        "CharPositionInLine" : 3
      },
      "158" : {
        "Text" : "# for makefile based generator, we add a custom command to precompile the prefix header\n",
        "Line" : 2200,
        "CharPositionInLine" : 2
      },
      "159" : {
        "Text" : "# for Visual Studio and Intel, we include the precompiled header in all but the host file\n\n# the host file does the precompiled header compilation, see cotire_setup_pch_file_compilation\n",
        "Line" : 2227,
        "CharPositionInLine" : 2
      },
      "160" : {
        "Text" : "# mark sources as cotired to prevent them from being used in another cotired target\n",
        "Line" : 2232,
        "CharPositionInLine" : 3
      },
      "161" : {
        "Text" : "# make object files generated from source files depend on precompiled header\n",
        "Line" : 2239,
        "CharPositionInLine" : 3
      },
      "162" : {
        "Text" : "# for makefile based generator, we force the inclusion of the prefix header for a subset\n\n# of the source files, if this is a multi-language target or has excluded files\n",
        "Line" : 2245,
        "CharPositionInLine" : 3
      },
      "163" : {
        "Text" : "# mark sources as cotired to prevent them from being used in another cotired target\n",
        "Line" : 2252,
        "CharPositionInLine" : 3
      },
      "164" : {
        "Text" : "# make object files generated from source files depend on precompiled header\n",
        "Line" : 2255,
        "CharPositionInLine" : 2
      },
      "165" : {
        "Text" : "# force the inclusion of the prefix header for the given source files\n",
        "Line" : 2262,
        "CharPositionInLine" : 1
      },
      "166" : {
        "Text" : "# mark sources as cotired to prevent them from being used in another cotired target\n",
        "Line" : 2269,
        "CharPositionInLine" : 1
      },
      "167" : {
        "Text" : "# make object files generated from source files depend on prefix header\n",
        "Line" : 2271,
        "CharPositionInLine" : 1
      },
      "168" : {
        "Text" : "# for Xcode, we attach a pre-build action to generate the unity sources and prefix headers\n",
        "Line" : 2335,
        "CharPositionInLine" : 2
      },
      "169" : {
        "Text" : "# we also generate a generic, single prefix header which includes all language specific prefix headers\n",
        "Line" : 2346,
        "CharPositionInLine" : 3
      },
      "170" : {
        "Text" : "# because CMake PRE_BUILD command does not support dependencies,\n\n# we check dependencies explicity in cotire script mode when the pre-build action is run\n",
        "Line" : 2357,
        "CharPositionInLine" : 2
      },
      "171" : {
        "Text" : "# make Xcode precompile the generated prefix header with ProcessPCH and ProcessPCH++\n",
        "Line" : 2365,
        "CharPositionInLine" : 2
      },
      "172" : {
        "Text" : "# for makefile based generator, we force inclusion of the prefix header for all target source files\n\n# if this is a single-language target without any excluded files\n",
        "Line" : 2369,
        "CharPositionInLine" : 2
      },
      "173" : {
        "Text" : "# for Visual Studio and Intel, precompiled header inclusion is always done on the source file level\n\n# see cotire_setup_pch_file_inclusion\n",
        "Line" : 2373,
        "CharPositionInLine" : 3
      },
      "174" : {
        "Text" : "# set up compiled unity source dependencies via OBJECT_DEPENDS\n\n# this ensures that missing source files are generated before the unity file is compiled\n",
        "Line" : 2395,
        "CharPositionInLine" : 2
      },
      "175" : {
        "Text" : "# the OBJECT_DEPENDS property requires a list of full paths\n",
        "Line" : 2401,
        "CharPositionInLine" : 3
      },
      "176" : {
        "Text" : "# unity file compilation results in potentially huge object file, thus use /bigobj by default unter MSVC and Windows Intel\n",
        "Line" : 2410,
        "CharPositionInLine" : 3
      },
      "177" : {
        "Text" : "# CMake 3.1.0 supports generator expressions in arguments to DEPENDS\n",
        "Line" : 2418,
        "CharPositionInLine" : 3
      },
      "178" : {
        "Text" : "# prevent pre-processing errors upon generating the prefix header when a target's generated include file does not yet exist\n\n# we do not add a file-level dependency for the target's generated files though, because we only want to depend on their existence\n\n# thus we make the prefix header generation depend on a custom helper target which triggers the generation of the files\n",
        "Line" : 2462,
        "CharPositionInLine" : 1
      },
      "179" : {
        "Text" : "# custom helper target has already been generated while processing a different language\n",
        "Line" : 2467,
        "CharPositionInLine" : 2
      },
      "180" : {
        "Text" : "# GNU and Clang require indirect compilation of the prefix header to make them honor the system_header pragma\n",
        "Line" : 2492,
        "CharPositionInLine" : 2
      },
      "181" : {
        "Text" : "# set up generation of a prefix source file which includes the prefix header\n",
        "Line" : 2501,
        "CharPositionInLine" : 2
      },
      "182" : {
        "Text" : "# GNU and Clang require indirect compilation of the prefix header to make them honor the system_header pragma\n",
        "Line" : 2510,
        "CharPositionInLine" : 2
      },
      "183" : {
        "Text" : "# set up generation of a prefix source file which includes the prefix header\n",
        "Line" : 2517,
        "CharPositionInLine" : 2
      },
      "184" : {
        "Text" : "# for Xcode, we cannot apply the precompiled header to individual sources, only to the whole target\n",
        "Line" : 2690,
        "CharPositionInLine" : 3
      },
      "185" : {
        "Text" : "# for Xcode, we cannot apply the required PRE_BUILD action to generate the prefix header to an OBJECT_LIBRARY target\n",
        "Line" : 2694,
        "CharPositionInLine" : 3
      },
      "186" : {
        "Text" : "# cache message to avoid redundant messages on re-configure\n",
        "Line" : 2708,
        "CharPositionInLine" : 3
      },
      "187" : {
        "Text" : "# use all available cores\n",
        "Line" : 2728,
        "CharPositionInLine" : 3
      },
      "188" : {
        "Text" : "# check for user provided unity source file list\n",
        "Line" : 2753,
        "CharPositionInLine" : 1
      },
      "189" : {
        "Text" : "# set up unity files for parallel compilation\n",
        "Line" : 2760,
        "CharPositionInLine" : 1
      },
      "190" : {
        "Text" : "# set up single unity file for prefix header generation\n",
        "Line" : 2770,
        "CharPositionInLine" : 1
      },
      "191" : {
        "Text" : "# set up prefix header\n",
        "Line" : 2775,
        "CharPositionInLine" : 1
      },
      "192" : {
        "Text" : "# check for user provided prefix header files\n",
        "Line" : 2777,
        "CharPositionInLine" : 2
      },
      "193" : {
        "Text" : "# check if selected language has enough sources at all\n",
        "Line" : 2786,
        "CharPositionInLine" : 2
      },
      "194" : {
        "Text" : "# first file in _sourceFiles is passed as the host file\n",
        "Line" : 2796,
        "CharPositionInLine" : 4
      },
      "195" : {
        "Text" : "# user provided prefix header must be included unconditionally\n",
        "Line" : 2803,
        "CharPositionInLine" : 3
      },
      "196" : {
        "Text" : "# mark target as cotired for language\n",
        "Line" : 2807,
        "CharPositionInLine" : 1
      },
      "197" : {
        "Text" : "# for makefile based generators, we add a custom target to trigger the generation of the cotire related files\n",
        "Line" : 2835,
        "CharPositionInLine" : 2
      },
      "198" : {
        "Text" : "# Visual Studio and Intel only create precompiled header as a side effect\n",
        "Line" : 2840,
        "CharPositionInLine" : 4
      },
      "199" : {
        "Text" : "# for other generators, we add the \"clean all\" target to clean up the precompiled header\n",
        "Line" : 2855,
        "CharPositionInLine" : 2
      },
      "200" : {
        "Text" : "# remove source files that are included in the unity source\n",
        "Line" : 2866,
        "CharPositionInLine" : 3
      },
      "201" : {
        "Text" : "# add unity source files instead\n",
        "Line" : 2874,
        "CharPositionInLine" : 3
      },
      "202" : {
        "Text" : "# user provided prefix header must be included unconditionally by unity sources\n",
        "Line" : 2888,
        "CharPositionInLine" : 4
      },
      "203" : {
        "Text" : "# determine unity target sub type\n",
        "Line" : 2900,
        "CharPositionInLine" : 1
      },
      "204" : {
        "Text" : "# determine unity target sources\n",
        "Line" : 2910,
        "CharPositionInLine" : 1
      },
      "205" : {
        "Text" : "# handle automatic Qt processing\n",
        "Line" : 2913,
        "CharPositionInLine" : 1
      },
      "206" : {
        "Text" : "# if the original target sources are subject to CMake's automatic Qt processing,\n\n# also include implicitly generated <targetname>_automoc.cpp file\n",
        "Line" : 2918,
        "CharPositionInLine" : 2
      },
      "207" : {
        "Text" : "# prevent AUTOMOC, AUTOUIC and AUTORCC properties from being set when the unity target is created\n",
        "Line" : 2923,
        "CharPositionInLine" : 1
      },
      "208" : {
        "Text" : "# generate unity target\n",
        "Line" : 2930,
        "CharPositionInLine" : 1
      },
      "209" : {
        "Text" : "# depend on the original target's implicity generated <targetname>_automoc target\n",
        "Line" : 2937,
        "CharPositionInLine" : 2
      },
      "210" : {
        "Text" : "# copy output location properties\n",
        "Line" : 2940,
        "CharPositionInLine" : 1
      },
      "211" : {
        "Text" : "# append relative COTIRE_UNITY_OUTPUT_DIRECTORY to target's actual output directory\n",
        "Line" : 2950,
        "CharPositionInLine" : 3
      },
      "212" : {
        "Text" : "# copy output name\n",
        "Line" : 2975,
        "CharPositionInLine" : 1
      },
      "213" : {
        "Text" : "# copy compile stuff\n",
        "Line" : 2983,
        "CharPositionInLine" : 1
      },
      "214" : {
        "Text" : "# copy compile features\n",
        "Line" : 2994,
        "CharPositionInLine" : 1
      },
      "215" : {
        "Text" : "# copy interface stuff\n",
        "Line" : 2999,
        "CharPositionInLine" : 1
      },
      "216" : {
        "Text" : "# copy link stuff\n",
        "Line" : 3007,
        "CharPositionInLine" : 1
      },
      "217" : {
        "Text" : "# copy cmake stuff\n",
        "Line" : 3017,
        "CharPositionInLine" : 1
      },
      "218" : {
        "Text" : "# copy Apple platform specific stuff\n",
        "Line" : 3020,
        "CharPositionInLine" : 1
      },
      "219" : {
        "Text" : "# copy Windows platform specific stuff\n",
        "Line" : 3026,
        "CharPositionInLine" : 1
      },
      "220" : {
        "Text" : "# copy Android platform specific stuff\n",
        "Line" : 3040,
        "CharPositionInLine" : 1
      },
      "221" : {
        "Text" : "# use output name from original target\n",
        "Line" : 3048,
        "CharPositionInLine" : 1
      },
      "222" : {
        "Text" : "# use export symbol from original target\n",
        "Line" : 3053,
        "CharPositionInLine" : 1
      },
      "223" : {
        "Text" : "# check if cotire can be applied to target at all\n",
        "Line" : 3077,
        "CharPositionInLine" : 1
      },
      "224" : {
        "Text" : "# resolve alias\n",
        "Line" : 3089,
        "CharPositionInLine" : 1
      },
      "225" : {
        "Text" : "# check if target needs to be cotired for build type\n\n# when using configuration types, the test is performed at build time\n",
        "Line" : 3097,
        "CharPositionInLine" : 1
      },
      "226" : {
        "Text" : "# when not using configuration types, immediately create cotire intermediate dir\n",
        "Line" : 3113,
        "CharPositionInLine" : 1
      },
      "227" : {
        "Text" : "# choose languages that apply to the target\n",
        "Line" : 3118,
        "CharPositionInLine" : 1
      },
      "228" : {
        "Text" : "# use target's corresponding unity target, if available\n",
        "Line" : 3161,
        "CharPositionInLine" : 4
      },
      "229" : {
        "Text" : "# filter files in intermediate directory\n",
        "Line" : 3221,
        "CharPositionInLine" : 1
      },
      "230" : {
        "Text" : "# cotire is being run in script mode\n\n# locate -P on command args\n",
        "Line" : 3308,
        "CharPositionInLine" : 1
      },
      "231" : {
        "Text" : "# include target script if available\n",
        "Line" : 3320,
        "CharPositionInLine" : 1
      },
      "232" : {
        "Text" : "# the included target scripts sets up additional variables relating to the target (e.g., COTIRE_TARGET_SOURCES)\n",
        "Line" : 3322,
        "CharPositionInLine" : 2
      },
      "233" : {
        "Text" : "# check if target has been cotired for actual build type COTIRE_BUILD_TYPE\n",
        "Line" : 3338,
        "CharPositionInLine" : 1
      },
      "234" : {
        "Text" : "# executing pre-build action under Xcode, check dependency on target script\n",
        "Line" : 3358,
        "CharPositionInLine" : 3
      },
      "235" : {
        "Text" : "# executing custom command, no need to re-check for dependencies\n",
        "Line" : 3361,
        "CharPositionInLine" : 3
      },
      "236" : {
        "Text" : "# executing pre-build action under Xcode, check dependency on unity file and prefix dependencies\n",
        "Line" : 3380,
        "CharPositionInLine" : 3
      },
      "237" : {
        "Text" : "# executing custom command, no need to re-check for dependencies\n",
        "Line" : 3383,
        "CharPositionInLine" : 3
      },
      "238" : {
        "Text" : "# executing pre-build action under Xcode, check dependency on files to be combined\n",
        "Line" : 3451,
        "CharPositionInLine" : 3
      },
      "239" : {
        "Text" : "# executing custom command, no need to re-check for dependencies\n",
        "Line" : 3454,
        "CharPositionInLine" : 3
      },
      "240" : {
        "Text" : "# cotire is being run in include mode\n\n# set up all variable and property definitions\n",
        "Line" : 3477,
        "CharPositionInLine" : 1
      },
      "241" : {
        "Text" : "# enable parallelization for generators that run multiple jobs by default\n",
        "Line" : 3514,
        "CharPositionInLine" : 3
      },
      "242" : {
        "Text" : "# MSVC default PCH memory scaling factor of 100 percent (75 MB) is too small for template heavy C++ code\n\n# use a bigger default factor of 170 percent (128 MB)\n",
        "Line" : 3548,
        "CharPositionInLine" : 2
      },
      "243" : {
        "Text" : "# generated Ninja build files do not work if the unity target produces the same output file as the cotired target\n",
        "Line" : 3562,
        "CharPositionInLine" : 3
      },
      "244" : {
        "Text" : "# define cotire cache variables\n",
        "Line" : 3569,
        "CharPositionInLine" : 1
      },
      "245" : {
        "Text" : "# define cotire directory properties\n",
        "Line" : 3622,
        "CharPositionInLine" : 1
      },
      "246" : {
        "Text" : "# define cotire target properties\n",
        "Line" : 3694,
        "CharPositionInLine" : 1
      },
      "247" : {
        "Text" : "# define cotire source properties\n",
        "Line" : 3858,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 248
    },
    "cmake/Modules/drishti_bool_to_int.cmake" : {
      "ObjectId" : "53444115fac0e203262806c06c506ab19fe271e5",
      "LastModified" : "2017-04-22T00:07:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Modules/drishti_check_cxx_linker_flag.cmake" : {
      "ObjectId" : "e00169a7c9726e7184d87c1fdbfc90aae16f909d",
      "LastModified" : "2017-04-22T00:07:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake style would be: CheckCxxLinkerFlag, but this could very well be added in the future\n\n# Note that CheckCxxCompilerFlags will not work for linker flags.\n\n# See discussion here: https://cmake.org/pipermail/cmake/2011-July/045525.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# stash flags\n",
        "Line" : 5,
        "CharPositionInLine" : 55
      },
      "2" : {
        "Text" : "# restore flags\n",
        "Line" : 14,
        "CharPositionInLine" : 55
      },
      "CommentCount" : 3
    },
    "cmake/Modules/drishti_configure_doxygen.cmake" : {
      "ObjectId" : "56edd63ba9432f4831871c88f187ef67fd4227b2",
      "LastModified" : "2017-04-22T00:07:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Modules/drishti_copy_3rdparty_licenses.cmake" : {
      "ObjectId" : "9717f27fe34f27bf8412ff1a927a45f8e80f5ebc",
      "LastModified" : "2018-06-19T18:13:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Search all populated CMake variables matching the pattern <name>_LICENSE, and copy to specified directory\n\n# as ${drishti_license_dir}/<name>_LICENSE\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/drishti_hide.cmake" : {
      "ObjectId" : "21e44720947ee2333049bc7c69085f5d9b3b852e",
      "LastModified" : "2017-04-22T00:07:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Xcode\n",
        "Line" : 2,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "### HIDE\n",
        "Line" : 5,
        "CharPositionInLine" : 34
      },
      "CommentCount" : 2
    },
    "cmake/Modules/drishti_mirror_definition.cmake" : {
      "ObjectId" : "6818f1f8ef06f6a3866029c07828568739137f4b",
      "LastModified" : "2017-04-22T00:07:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Modules/drishti_option.cmake" : {
      "ObjectId" : "dbd5df05c8bc97bffb85c13e79cbd22a701a4bf7",
      "LastModified" : "2017-04-22T00:07:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# opencv/cmake/OpenCVUtils.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Provides an option that the user can optionally select.\n\n# Can accept condition to control when option is available for user.\n\n# Usage:\n\n#   option(<option_variable> \"help string describing the option\" <initial value or boolean expression> [IF <condition>])\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Modules/drishti_print_env_var.cmake" : {
      "ObjectId" : "044bda1fea08d37b23154d96c2de32a15873d916",
      "LastModified" : "2017-04-22T00:07:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Modules/drishti_set_cxx_flags.cmake" : {
      "ObjectId" : "2d95852fff129d1af83c28ae690f24a942087fc9",
      "LastModified" : "2017-04-22T00:07:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -Wno-narrowing  = Don't warn about type narrowing\n",
        "Line" : 5,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "cmake/Modules/drishti_set_rpath.cmake" : {
      "ObjectId" : "e9317fb548e4d900bfe408d99418b4b62bf4eb09",
      "LastModified" : "2018-06-19T18:13:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#https://cmake.org/Wiki/CMake_RPATH_handling\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/drishti_split_debug_symbols.cmake" : {
      "ObjectId" : "0138e5013a0f94dde5fec00ac312ea8e80dbb92a",
      "LastModified" : "2018-08-02T23:16:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO: For iOS universal builds we need to support both: iphoneos and iphonesimulator\n\n# i.e., _builds/<toolchain>/src/lib/drishti/Release-iphoneos/libdrishti.dylib.dSYM\n",
        "Line" : 6,
        "CharPositionInLine" : 6
      },
      "1" : {
        "Text" : "# see: https://sourceware.org/gdb/onlinedocs/gdb/Separate-Debug-Files.html\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Prefer to strip via CMake install/strip target (additional flags possible here):\n",
        "Line" : 48,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Install the unstripped library itself via build-id:\n",
        "Line" : 52,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 4
    },
    "cmake/Modules/drishti_strip.cmake" : {
      "ObjectId" : "65549d8ec5f0b27fd5a2ff9ed224ca99baa43d0f",
      "LastModified" : "2018-06-19T18:13:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Xcode\n",
        "Line" : 3,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Note: Using this option in combination with thread_local and shared libraries crashes\n\n# the linker step with the following error:\n\n#\n\n# ld: Assertion failed: (0 && \"need to handle arm64 -r reloc\"), function encodeSectionReloc,\n\n# file /Library/Caches/com.apple.xbs/Sources/ld64/ld64-264.3.102/src/ld/LinkEditClassic.hpp, line 1907.\n\n#\n\n# This should can be enabled optionally for modules that do not require thread_local.\n\n#XCODE_ATTRIBUTE_GENERATE_MASTER_OBJECT_FILE \"YES\" # \"Perform Single-Object Prelink\"\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "cmake/Modules/drishti_symbol_list.cmake" : {
      "ObjectId" : "684e29132e6d2e5c22a01f16fd010054b674371d",
      "LastModified" : "2018-06-19T18:13:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create a symbols_list file for the darwin linker\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Support xcode toolchain use XCODE_ATTRIBUTE_*\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# \"Perform Single-Object Prelink\"\n",
        "Line" : 41,
        "CharPositionInLine" : 56
      },
      "3" : {
        "Text" : "# Create a version script for GNU ld.\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# TODO: MSVC, etc\n",
        "Line" : 52,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "cmake/Modules/drishti_thread_local_storage.cmake" : {
      "ObjectId" : "b21fd6ee3fa12c737a9dd6b8ab7f973b4ebb1f0c",
      "LastModified" : "2018-06-19T18:13:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Modules/drishti_thread_local_storage_cpp11.cmake" : {
      "ObjectId" : "ba393cfce05f016457a3be6cc5e222ae0106c756",
      "LastModified" : "2018-06-19T18:13:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Modules/merge/drishti_get_library_location.cmake" : {
      "ObjectId" : "93d4905460e112804554fce8766427e5df3ab1a2",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# @file   drishti_get_library_location.cmake\n\n# @brief  CMake script to return the location of a library target.\n\n#\n\n# \\copyright Copyright 2014-2018 Elucideye, Inc. All rights reserved.\n\n# \\license{This project is released under the 3 Clause BSD License.}\n\n#\n\n# This is a helper routine for drishti_merge_libraries.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# cmake_parse_arguments\n",
        "Line" : 9,
        "CharPositionInLine" : 29
      },
      "2" : {
        "Text" : "# Introduce:\n\n# * x_LIBRARY\n\n# * x_CONFIG\n\n# * x_RESULT\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/Modules/merge/drishti_merge_get_all_dependencies.cmake" : {
      "ObjectId" : "b4d97e4c54ea08c46d0e36de783a9f675382761e",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# @file   drishti_merge_librariers_ar_ranlib.cmake\n\n# @brief  CMake script to recursively collect dependencies for a tyarget.\n\n#\n\n# \\copyright Copyright 2014-2018 Elucideye, Inc. All rights reserved.\n\n# \\license{This project is released under the 3 Clause BSD License.\n\n#\n\n# This is a helper routine for drishti_merge_libraries.cmake}\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# cmake_parse_arguments\n",
        "Line" : 11,
        "CharPositionInLine" : 29
      },
      "2" : {
        "Text" : "# Introduce:\n\n# * x_OUTPUT\n\n# * x_INPUT\n\n# * x_ALREADY_PROCESSED\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Exclude INTERFACE_LIBRARY targets\n",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# skip shared libraries\n",
        "Line" : 81,
        "CharPositionInLine" : 10
      },
      "5" : {
        "Text" : "# skip standard libraries added by '-l' flags\n",
        "Line" : 83,
        "CharPositionInLine" : 10
      },
      "6" : {
        "Text" : "# skip frameworks\n",
        "Line" : 85,
        "CharPositionInLine" : 10
      },
      "CommentCount" : 7
    },
    "cmake/Modules/merge/drishti_merge_libraries.cmake" : {
      "ObjectId" : "121032cfcd68782d21a254dc495f5e4fa5a97e2e",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# @file   drishti_merge_librariers.cmake\n\n# @brief  CMake scripts to recursively gather deps, split to .o files, and merge to mega *.a\n\n#\n\n# \\copyright Copyright 2014-2018 Elucideye, Inc. All rights reserved.\n\n# \\license{This project is released under the 3 Clause BSD License.}\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# cmake_parse_arguments\n",
        "Line" : 7,
        "CharPositionInLine" : 29
      },
      "2" : {
        "Text" : "# drishti_merge_libraries_msvc use LOCATION\n",
        "Line" : 9,
        "CharPositionInLine" : 30
      },
      "3" : {
        "Text" : "# Introduce:\n\n# * x_FINAL\n\n# * x_LIBRARIES\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "cmake/Modules/merge/drishti_merge_libraries_ar_ranlib.cmake" : {
      "ObjectId" : "037cf3625fed5fa8b826d651d7d86bfd09c17c9c",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# @file   drishti_merge_librariers_ar_ranlib.cmake\n\n# @brief  CMake scripts to merge static dependencies using ar/ranlib.\n\n#\n\n# \\copyright Copyright 2014-2018 Elucideye, Inc. All rights reserved.\n\n# \\license{This project is released under the 3 Clause BSD License.}\n\n#\n\n# This is a helper routine for drishti_merge_libraries.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# cmake_parse_arguments\n",
        "Line" : 9,
        "CharPositionInLine" : 29
      },
      "2" : {
        "Text" : "# Introduce:\n\n# * x_LIBRARIES_LIST\n\n# * x_FINAL\n\n# * x_ALL_DEPENDENCIES\n\n# * x_WORKING_DIR\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/Modules/merge/drishti_merge_libraries_msvc.cmake" : {
      "ObjectId" : "bbaa91e95ea3cb846155a9dad94e62c9a13ec4a4",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# @file   drishti_merge_librariers_ar_ranlib.cmake\n\n# @brief  CMake scripts to merge static dependencies w/ MSVC.\n\n#\n\n# \\copyright Copyright 2014-2018 Elucideye, Inc. All rights reserved.\n\n# \\license{This project is released under the 3 Clause BSD License.}\n\n#\n\n# This is a helper routine for drishti_merge_libraries.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# cmake_parse_arguments\n",
        "Line" : 9,
        "CharPositionInLine" : 29
      },
      "2" : {
        "Text" : "# Introduce:\n\n# * x_FINAL\n\n# * x_ALL_DEPENDENCIES\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/Modules/merge/drishti_merge_libraries_xcode.cmake" : {
      "ObjectId" : "82357c172413aff5147cea539da1bfb2266205ad",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# @file   drishti_merge_librariers_ar_ranlib.cmake\n\n# @brief  CMake script to merge static dependencies w/ xcode.\n\n#\n\n# \\copyright Copyright 2014-2018 Elucideye, Inc. All rights reserved.\n\n# \\license{This project is released under the 3 Clause BSD License.}\n\n#\n\n# This is a helper routine for drishti_merge_libraries.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# cmake_parse_arguments\n",
        "Line" : 9,
        "CharPositionInLine" : 29
      },
      "2" : {
        "Text" : "# Introduce:\n\n# * x_LIBRARIES_LIST\n\n# * x_FINAL\n\n# * x_ALL_DEPENDENCIES\n\n# * x_WORKING_DIR\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/Modules/merge/drishti_merge_print.cmake" : {
      "ObjectId" : "de0107dad22a20a3db169cd038aee3626f1f2f00",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# @file   drishti_merge_librariers_ar_ranlib.cmake\n\n# @brief  Print helper\n\n#\n\n# \\copyright Copyright 2014-2018 Elucideye, Inc. All rights reserved.\n\n# \\license{This project is released under the 3 Clause BSD License.}\n\n#\n\n# This is a helper routine for drishti_merge_libraries.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/merge/script/append.cmake" : {
      "ObjectId" : "505632da190158615651685b1cbe15dd132a3dae",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# @file   append.cmake\n\n# @brief  CMake helper to append libs to master list\n\n#\n\n# \\copyright Copyright 2014-2018 Elucideye, Inc. All rights reserved.\n\n# \\license{This project is released under the 3 Clause BSD License.}\n\n#\n\n# This is a helper routine for drishti_merge_libraries.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/merge/script/create_by_ar_ranlib.cmake" : {
      "ObjectId" : "b25c0b95ed975eff035dc6ac78e9af01d5c808e3",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# @file   create_by_ar_ranlib.cmake\n\n# @brief  Use CMAKE_AR and CMAKE_RANLIB to create a single static lib\n\n#\n\n# \\copyright Copyright 2014-2018 Elucideye, Inc. All rights reserved.\n\n# \\license{This project is released under the 3 Clause BSD License.}\n\n#\n\n# This is a helper routine for drishti_merge_libraries.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Verify that there are no two objects with the same name in archive\n\n# * http://www.linux.org/threads/same-filename-o-in-a.8834/\n\n# * http://stackoverflow.com/a/3821949/2288008 (second comment)\n",
        "Line" : 74,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "cmake/pack.cmake" : {
      "ObjectId" : "b31662271f1f43ad21965f9c06fd5ba9708d44ba",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(CPACK_PACKAGE_EXECUTABLES  \"test-drishti-segment\")\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(CPACK_CREATE_DESKTOP_LINKS test-drishti-segment)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/3rdparty/sugar.cmake" : {
      "ObjectId" : "28f97a460db2d73e58c8358ede8f301aab3e8054",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file generated automatically by:\n\n#   generate_sugar_files.py\n\n# see wiki for more info:\n\n#   https://github.com/ruslo/sugar/wiki/Collecting-sources\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "03e8823079918962f5d9991caa6e8ad31a2fa3ce",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2014-2017, David Hirvonen\n\n# All rights reserved.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##########################################\n\n### Initial 3RDPARTY SRC/PKG libraries ###\n\n##########################################\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Initialize default lists and populate as we go\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "################\n\n### 3rdparty ###\n\n################\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##############\n\n### OpenCV ###\n\n##############\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#############\n\n### Beast ### :: optional :: (header only)\n\n#############\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# !!! Limit use to applicaiton layer + callbacks, don't add to core libraries !!!!\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "###########\n\n### acf ###\n\n###########\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############\n\n### spdlog ###\n\n##############\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "##############\n\n### cereal ### (header only)\n\n##############\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "############\n\n### dlib ### (header only)\n\n############\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "###########\n\n### glm ### (header only)\n\n###########\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "############\n\n### half ### (header only)\n\n############\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "##############\n\n### Eigen3 ### (header only)\n\n##############\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "###############\n\n### cvmatio ###\n\n###############\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#######################\n\n### thread-pool-cpp ### (header only)\n\n#######################\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Add library\n",
        "Line" : 124,
        "CharPositionInLine" : 78
      },
      "17" : {
        "Text" : "###############\n\n### xgboost ###\n\n###############\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Add library\n",
        "Line" : 133,
        "CharPositionInLine" : 60
      },
      "19" : {
        "Text" : "###################\n\n### ogles_gpgpu ###\n\n###################\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Add library\n",
        "Line" : 142,
        "CharPositionInLine" : 70
      },
      "21" : {
        "Text" : "##################\n\n### NEON_2_SSE ### (header only)\n\n##################\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "################\n\n### sse2neon ### (header only)\n\n#################\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Add library\n",
        "Line" : 160,
        "CharPositionInLine" : 62
      },
      "24" : {
        "Text" : "# We use aglet for an \"off screen\" OpenGL context.\n\n# This currently provides 3 options:\n\n#   * GLFWContext for most desktop systems (can provide Window)\n\n#   * GLContextIOS\n\n#   * GLContextAndroid\n\n# Note: Android emulator supports GPU use\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#############\n\n### boost ###\n\n#############\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Note: Used for boost::fileystem::path() (de)construction\n\n# TODO: Find a lighterweight alternative for portble path manipulation\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "###########\n\n### eos ### :: experimental :: (header only)\n\n###########\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Make EOS_LIB optional\n",
        "Line" : 188,
        "CharPositionInLine" : 16
      },
      "29" : {
        "Text" : "# Add library\n",
        "Line" : 194,
        "CharPositionInLine" : 56
      },
      "30" : {
        "Text" : "############\n\n### dest ### :: experimental ::\n\n############\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Add library\n",
        "Line" : 205,
        "CharPositionInLine" : 56
      },
      "32" : {
        "Text" : "############\n\n## imshow ## :: experimental ::\n\n############\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Add library\n",
        "Line" : 217,
        "CharPositionInLine" : 60
      },
      "34" : {
        "Text" : "# Add the sub-libraries\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "###############\n\n### cxxopts ### :: std::regex >= gcc 4.8\n\n###############\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Build standalone examples using the public API\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Simulate naming from find_package(drishti CONFIG REQUIRED) use case \n",
        "Line" : 241,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "# Include *nix style console apps (some will run on iOS and Android)\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# (Optional) build unit tests\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 40
    },
    "src/app/CMakeLists.txt" : {
      "ObjectId" : "7af25b3625f1ee3c54e6b52b0cd59743d1ea7c64",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#############\n\n### Boost ###\n\n#############\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#################\n\n### Libraries ###\n\n#################\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "####################\n\n### Applications ###\n\n####################\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# if(DRISHTI_BUILD_ACF)\n\n#   add_subdirectory(acf)\n\n# endif()\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# cpb\n",
        "Line" : 38,
        "CharPositionInLine" : 22
      },
      "5" : {
        "Text" : "# cpb\n",
        "Line" : 39,
        "CharPositionInLine" : 23
      },
      "6" : {
        "Text" : "# This application tests the high level drishti::hci modules\n\n# which makes use of OpenGL ES (or compatible) GPGPU processing.\n\n# This is provided by the cross platform aglet library\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "src/app/cpr/CMakeLists.txt" : {
      "ObjectId" : "2578f33d9dd9d5472ab2b82e0f3092ee2083b1bb",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Rename + copy image + model file side-by-side to meet eyexml requirements:\n\n#\n\n# dir/some_eye_0.png\n\n# dir/some_eye_0.xml\n\n# dir/some_eye_1.png\n\n# dir/some_eye_1.xml\n\n# ...\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "src/app/dlib/CMakeLists.txt" : {
      "ObjectId" : "0a13ad781008023cf93d48b4e99631469da89546",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################\n\n### RapidXML ###\n\n################\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "######################\n\n### drishti-eyexml ###\n\n######################\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#######################\n\n### drishti-facexml ###\n\n#######################\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###################################################\n\n##################### DLIB apps ###################\n\n###################################################\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "############################\n\n### test_shape_predictor ###\n\n############################\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#############################\n\n### train_shape_predictor ###\n\n#############################\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Rename + copy image + model file side-by-side to meet eyexml requirements:\n\n#\n\n# dir/some_eye_0.png\n\n# dir/some_eye_0.xml\n\n# dir/some_eye_1.png\n\n# dir/some_eye_1.xml\n\n# ...\n",
        "Line" : 78,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# HOST build train + test\n",
        "Line" : 89,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "src/app/eye/CMakeLists.txt" : {
      "ObjectId" : "29c53c0c31b10c73699c300ba85bc426250cbd7c",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/app/face/CMakeLists.txt" : {
      "ObjectId" : "8788b15b20803a7d818de715cdb142fd188c224e",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#include \"videoio/VideoSource.h\"\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/app/facecrop/CMakeLists.txt" : {
      "ObjectId" : "bae72c2b390e287d6843fc958f65f0b5fa2ce4c6",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/app/fddb/CMakeLists.txt" : {
      "ObjectId" : "8af7f3ff367e35d63fab6484db0b37d0e993c0d3",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/app/hci/CMakeLists.txt" : {
      "ObjectId" : "80706ffcc8f4af22eaa8f38c761bfe26cdcfe9fe",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Get toolchain suffix:\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/app/ios/boilerplate/empty_application/sources/sugar.cmake" : {
      "ObjectId" : "41108f715bf67581ad4789d7cda4d692eb79c721",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2013, Ruslan Baratov\n\n# All rights reserved.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#    AppDelegate.hpp\n\n#    AppDelegate.mm\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/app/landmarks/CMakeLists.txt" : {
      "ObjectId" : "82f7ae8d3445f6046fe5f45997e76519df3307a8",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Local landmark library \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/app/landmarks/sugar.cmake" : {
      "ObjectId" : "7d8e8295f9b07cd298ae1ace5658d3d75ffbf5c3",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#   generate_sugar_files.py\n\n# see wiki for more info:\n\n#   https://github.com/ruslo/sugar/wiki/Collecting-sources\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/app/pose/CMakeLists.txt" : {
      "ObjectId" : "54624cb1e26850b2d72eaee7e0157a2c1691ddb5",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/app/videoio/CMakeLists.txt" : {
      "ObjectId" : "3bbac3172b43dcbfb0eea4b4d674cdb596f4bfe9",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### lib ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# VideoSink:\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# VideoSource:\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# AVFoundation framework video (i.e., quicktime *.MOV)\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# VideoSink:\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# VideoSource:\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "### app ###\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "src/benchmarks/CMakeLists.txt" : {
      "ObjectId" : "412cca3c5f5c1aca8cac63db032d43a8286233ce",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/benchmarks/opencv_size/CMakeLists.txt" : {
      "ObjectId" : "7548aefefca3ffe11a487afe5870f3bac11e9d81",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### opencv_size ####\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/examples/CMakeLists.txt" : {
      "ObjectId" : "58ad2304757361d383443be18cddaa167daafcde",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n# This directory tree contains examples built on the dependency free public SDK\n\n# contained in src/lib/drishti/drishti.  This layer contains various simple\n\n# primitive types to support easy integration as a shared library\n\n# (dynamic framework) without requiring OpenCV types or types from other\n\n# dependencies which may change.  No dynamic memory allocations are exported\n\n# across this API line (including STL to avoid libc++ vs libstdc++ conflicts,\n\n# etc).\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMAKE_INTERPROCEDURAL_OPTIMIZATION\n",
        "Line" : 11,
        "CharPositionInLine" : 36
      },
      "2" : {
        "Text" : "#################\n\n### Languages ###\n\n#################\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This must be in the top/highest level directory (really)\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# * If build as a child project then parent will set this to 'OFF' (see\n\n#   config.cmake which will be loaded on first 'hunter_add_package')\n\n# * If build as a stand alone project then option will be 'ON' and 'GIT_SELF'\n\n#   will be used for Drishti\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "################################\n\n### Application dependencies ###\n\n################################\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# for image IO\n",
        "Line" : 52,
        "CharPositionInLine" : 27
      },
      "7" : {
        "Text" : "# for CLI\n",
        "Line" : 55,
        "CharPositionInLine" : 28
      },
      "8" : {
        "Text" : "# for logging\n",
        "Line" : 58,
        "CharPositionInLine" : 27
      },
      "9" : {
        "Text" : "# add the drishti package, possibly using GIT_SELF feature\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# for tests\n",
        "Line" : 83,
        "CharPositionInLine" : 28
      },
      "11" : {
        "Text" : "###############\n\n### Samples ###\n\n###############\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "src/examples/cmake/HunterGate.cmake" : {
      "ObjectId" : "887557a5843f52e2765f5fd11f55027423927f5f",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2013-2018, Ruslan Baratov\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright notice, this\n\n#   list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright notice,\n\n#   this list of conditions and the following disclaimer in the documentation\n\n#   and/or other materials provided with the distribution.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\n# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n\n# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n\n# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is a gate file to Hunter package manager.\n\n# Include this file using `include` command and add package you need, example:\n\n#\n\n#     cmake_minimum_required(VERSION 3.2)\n\n#\n\n#     include(\"cmake/HunterGate.cmake\")\n\n#     HunterGate(\n\n#         URL \"https://github.com/path/to/hunter/archive.tar.gz\"\n\n#         SHA1 \"798501e983f14b28b10cda16afa4de69eee1da1d\"\n\n#     )\n\n#\n\n#     project(MyProject)\n\n#\n\n#     hunter_add_package(Foo)\n\n#     hunter_add_package(Boo COMPONENTS Bar Baz)\n\n#\n\n# Projects:\n\n#     * https://github.com/hunter-packages/gate/\n\n#     * https://github.com/ruslo/hunter\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# cmake_parse_arguments\n",
        "Line" : 57,
        "CharPositionInLine" : 29
      },
      "3" : {
        "Text" : "# Set HUNTER_GATE_ROOT cmake variable to suitable value.\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Check CMake variable\n",
        "Line" : 151,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Check environment variable\n",
        "Line" : 159,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Check HOME environment variable\n",
        "Line" : 167,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Check SYSTEMDRIVE and USERPROFILE environment variable (windows only)\n",
        "Line" : 175,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# while waiting for lock other instance can do all the job\n",
        "Line" : 246,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# check directory permissions\n",
        "Line" : 254,
        "CharPositionInLine" : 38
      },
      "10" : {
        "Text" : "# Disabling languages speeds up a little bit, reduces noise in the output\n\n# and avoids path too long windows error\n",
        "Line" : 256,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Need to add toolchain file too.\n\n# Otherwise on Visual Studio + MDD this will fail with error:\n\n# \"Could not find an appropriate version of the Windows 10 SDK installed on this machine\"\n",
        "Line" : 293,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# 'toolchain_arg' can't be empty\n",
        "Line" : 300,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Test case: remove Ninja from PATH but set it via CMAKE_MAKE_PROGRAM\n",
        "Line" : 308,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Must be a macro so master file 'cmake/Hunter' can\n\n# apply all variables easily just by 'include' command\n\n# (otherwise PARENT_SCOPE magic needed)\n",
        "Line" : 358,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# variable HUNTER_GATE_DONE set explicitly for external project\n\n# (see `hunter_download`)\n",
        "Line" : 363,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# First HunterGate command will init Hunter, others will be ignored\n",
        "Line" : 368,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Empty function to avoid error \"unknown function\"\n",
        "Line" : 372,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# set HUNTER_GATE_ROOT\n",
        "Line" : 459,
        "CharPositionInLine" : 30
      },
      "19" : {
        "Text" : "# Beautify path, fix probable problems with windows path slashes\n",
        "Line" : 461,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Hunter downloaded manually (e.g. by 'git clone')\n",
        "Line" : 499,
        "CharPositionInLine" : 6
      },
      "21" : {
        "Text" : "# Check Hunter already downloaded by HunterGate\n",
        "Line" : 508,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 22
    },
    "src/examples/cmake/include/init.cmake" : {
      "ObjectId" : "c6390b09da8efc94b2701c26352d6eabef885312",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Default toolchain for builds without Polly\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# By default, the source code for all managed dependencies will be removed after\n\n# building and installing to the cache.  This behavior is consistent with most\n\n# installed libraries (i.e., /usr/local/lib/*), but it does prevent stepping\n\n# through the dependencies in a debugger in cases where a problem is not\n\n# contained within the drishti project sources.  In such cases, you can set\n\n# HUNTER_KEEP_PACKAGE_SOURCES=ON from the command line during the project\n\n# configuration and the source will be left for all packages when they are\n\n# created.  This setting must be used before a package is installed -- it\n\n# won't be applied retroactively to installed packages.  In order to re-install\n\n# a package with sources you can always remove the cache\n\n# (i.e., rm -rf ${HOME}/.hunter) or, less drastically you can modify the\n\n# CONFIG-ID of an installed package to trigger the configuration and\n\n# installation steps.  This can be done by modifying the input CMAKE_ARGS\n\n# list in a hunter_config() call.  In the following example KEEP_SOURCES=1\n\n# is  added to trigger a re-installation:\n\n#\n\n#   hunter_config(foo VERSION ${HUNTER_foo_VERSION} CMAKE_ARGS KEEP_SOURCES=1)\n\n#\n\n# The HUNTER_KEEP_PACKAGE_SOURCES development feature is described here:\n\n#\n\n# In order to support stepping through package sources you will also have to\n\n# make sure that debug versions of the packages are installed.  This will\n\n# happen by default, but will not happen if you specify a release only build\n\n# using HUNTER_CONFIGURATION_TYPES=Release\n\n# https://docs.hunter.sh/en/latest/reference/user-variables.html#hunter-keep-package-sources\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# URL/SHA1 will not be used actually, settings will be inherited\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# CI: Locked CI build configuration\n\n# HunterGate called here\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Used in drishti-upload/config.cmake {\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# DRISHTI_BUILD_MIN_SIZE:\n\n#   This can alter the hunter-package options for\n\n#   various dependencies in order to produce smaller builds,\n\n#   such as eliminating code related to model training.\n\n#\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# }\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "src/examples/cmake/toolchain.cmake" : {
      "ObjectId" : "27e4a99123e9f5741f414f2e8990bfd84d26d721",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/examples/eye/CMakeLists.txt" : {
      "ObjectId" : "050396c4c336b8c1832dfdc517066475ee78a52b",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################\n\n### drishti-eye-test ###\n\n########################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/examples/facefilter/CMakeLists.txt" : {
      "ObjectId" : "dc50893d2fd429c6c5ac25e77c4953a446ced23f",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### data ##\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### lib ###\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# install resource files, etc\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "src/examples/facefilter/android-studio/CMakeLists.txt" : {
      "ObjectId" : "93fa9152fffa603c90886874a1b993734ce3c382",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add drishti_assets\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# https://sites.google.com/a/android.com/tools/tech-docs/new-build-system/user-guide#TOC-Project-Structure\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/examples/facefilter/android-studio/app/proguard-rules.pro" : {
      "ObjectId" : "39ab6f6781fe1f701344fe0c3f67590680c46e2b",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "src/examples/facefilter/app/CMakeLists.txt" : {
      "ObjectId" : "294ebfbad6e280f831bab1aea2f583098fd0c486",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/examples/facefilter/app/facefilter/CMakeLists.txt" : {
      "ObjectId" : "e5d6ebd53bcff5585e7a6188e773815adbb0c528",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# See Android Studio project\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "src/examples/facefilter/app/facefilter/desktop/CMakeLists.txt" : {
      "ObjectId" : "3065c72811d2b1eae2d38bddcd5565243bb81096",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/examples/facefilter/app/facefilter/ios/CMakeLists.txt" : {
      "ObjectId" : "bf25bebc661ec773e3dbc7095d97f484f3233f5f",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# swift support\n",
        "Line" : 1,
        "CharPositionInLine" : 37
      },
      "1" : {
        "Text" : "# add drishti_assets\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Resources\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# when building, don't use the install RPATH already\n\n# (but later on when installing)\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# add the automatically determined parts of the RPATH\n\n# which point to directories outside the build tree to the install RPATH\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Universal (iPad + iPhone)\n",
        "Line" : 52,
        "CharPositionInLine" : 47
      },
      "6" : {
        "Text" : "# http://stackoverflow.com/a/20982506/2288008\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# By default this setting is empty => archives not showing up in Xcode organizer.\n\n# http://stackoverflow.com/a/8102602/2288008y\n",
        "Line" : 56,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# If this setting is \"YES\" application can't pass archive validation.\n\n# http://stackoverflow.com/a/24040412/2288008\n",
        "Line" : 60,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# dyld: Library not loaded: @rpath/libswiftAVFoundation.dylib\n\n# Unable to load Swift runtime library (image not found): https://stackoverflow.com/a/24972407a\n",
        "Line" : 66,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Swift uses Xcode \"ACTIVE_COMPILATION_CONDITIONS\" for preprocessor flags\n\n# which have not values (they are either present or absent)\n",
        "Line" : 86,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 11
    },
    "src/examples/facefilter/app/facefilter/ios/Shaders/sugar.cmake" : {
      "ObjectId" : "1198f8e2b5c63d824fb484b0a04aa38a5ed5a759",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Requires:\n\n# @FACEFILTER_SWIZZLE@@\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/examples/facefilter/app/facefilter/ios/en.lproj/sugar.cmake" : {
      "ObjectId" : "1b825e8a5a927def300e3343d9d8c057c2057c52",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/examples/facefilter/app/facefilter/ios/sugar.cmake" : {
      "ObjectId" : "a4f22313180a736daff670a347e6f3a37a7d1fec",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/examples/facefilter/app/facefilter/sugar.cmake" : {
      "ObjectId" : "ddbb3df0c0b2ebf1aba2593db36d86198a6fc52d",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/examples/facefilter/app/sugar.cmake" : {
      "ObjectId" : "0c9164c8dce64b2995412d2c7724d674e60d50ce",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/examples/facefilter/lib/CMakeLists.txt" : {
      "ObjectId" : "e54366206d61809741aea256a4c053b8e5e2ff4d",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/examples/facefilter/lib/facefilter/CMakeLists.txt" : {
      "ObjectId" : "98b096ce5c17ce42970b73e8ce8aab5b6474c2d5",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/examples/facefilter/lib/facefilter/bindings/CMakeLists.txt" : {
      "ObjectId" : "767558f1c056279ddb1e204b8c0834f5dacb9395",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/examples/facefilter/lib/facefilter/bindings/android/CMakeLists.txt" : {
      "ObjectId" : "1bc5172c36f7996755325de25f5a5fcd24e36ab7",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ${FACEFILTER_BINDINGS_HDRS}\n",
        "Line" : 1,
        "CharPositionInLine" : 68
      },
      "CommentCount" : 1
    },
    "src/examples/facefilter/lib/facefilter/bindings/android/sugar.cmake" : {
      "ObjectId" : "889010604705ea29850d918fc1716b4cc3147f5e",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/examples/facefilter/lib/facefilter/bindings/ios/CMakeLists.txt" : {
      "ObjectId" : "73a7164d0e523401b38d9a6c56b095a9d0304ce2",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ${FACEFILTER_BINDINGS_HDRS}\n",
        "Line" : 1,
        "CharPositionInLine" : 61
      },
      "CommentCount" : 1
    },
    "src/examples/facefilter/lib/facefilter/bindings/ios/sugar.cmake" : {
      "ObjectId" : "244b547bb8d72359b4be0551f230a9e3323d24eb",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/examples/facefilter/lib/facefilter/bindings/sugar.cmake" : {
      "ObjectId" : "353678cae6ce167a378e2273cd8f3304c10ab734",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/examples/facefilter/lib/facefilter/renderer/CMakeLists.txt" : {
      "ObjectId" : "5dd4de785ed7cdea08132e9e93e81046bd4ee18d",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Exclude headers for Android Studio issue:\n\n#add_library(facefilter_renderer ${FACEFILTER_RENDERER_SRCS} ${FACEFILTER_RENDERER_HDRS})\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### drishti ###\n\n# Note: Don't IWYU here, so we can defer to alias drishti::drishti for local builds\n\n# hunter_add_package(drishti)\n\n# find_package(drishti CONFIG REQUIRED)\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "### ogles_gpgpu ###\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "### OpenCV ###\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "### Boost ###\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# FaceTrackerFactoryJson\n",
        "Line" : 33,
        "CharPositionInLine" : 55
      },
      "CommentCount" : 6
    },
    "src/examples/facefilter/lib/facefilter/renderer/android/sugar.cmake" : {
      "ObjectId" : "453bd7f2bc6a5baf2d67aa6ab3e995015e487a3d",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/examples/facefilter/lib/facefilter/renderer/sugar.cmake" : {
      "ObjectId" : "827dcb257c33dc041429b11d6a7e5a0dd5de67ba",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### drishti ###\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "### drishti ###\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "src/examples/facefilter/lib/facefilter/sugar.cmake" : {
      "ObjectId" : "afe0278d3f78a0181983c034e69ac5bf282a23e7",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/examples/facefilter/lib/sugar.cmake" : {
      "ObjectId" : "857f154f5678a904f01d5c0f880e0afac035087b",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/examples/facefilter/sugar.cmake" : {
      "ObjectId" : "a5710b64198afc8367796f7c120135049392d4fe",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/lib/CMakeLists.txt" : {
      "ObjectId" : "cbe785fbbb16ffd76cb6a488b1a20459a11344f1",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2014-2017, David Hirvonen\n\n# All rights reserved.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This directory is present to provide consistent header paths in both\n\n# the BUILD tree and the post INSTALL library/package\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/lib/drishti/CMakeLists.txt" : {
      "ObjectId" : "f35d6a24cc3833f716db593ebada24c4f1c4e9f4",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2014-2017, David Hirvonen\n\n# All rights reserved.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Customize linker flags\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##################\n\n#### world #######\n\n##################\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Here we provide our own IDE source groupings according to namespace\n\n# Each source_group() will be a subfolder of the drishti_world target:\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "### core\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "### geometry\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "### sensor\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "### ml\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "### rcpr\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "### eye\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "### graphics\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "### face\n",
        "Line" : 87,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "### hci\n\n# currently requires ogles_gpgpu\n\n# TODO: needs CPU only path\n",
        "Line" : 96,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# For Android platforms, we must specify -DHALF_ENABLE_CPP11_CMATH=0 for all modules\n\n# using the half precision floating point storage (i.e., package half)\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# For all regression modules, we must provide definitions corresponding\n\n# to options for ensemble of regression tree leaf node accumulation:\n\n#   -DDRISHTI_BUILD_REGRESSION_SIMD=(0|1)\n\n#   -DDRISHTI_BUILD_REGRESSION_FIXED_POINT=(0|1)\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Build and install a single library or framework from our set of \"object\" libraries\n\n# Note: Due to complications with object libraries we are either using per module\n\n# static libraries or a single drishti_world compilation from all global siources\n\n# gathered by the Sugar package.\n\n#   * https://public.kitware.com/Bug/bug_relationship_graph.php?bug_id=15038&graph=dependency\n\n#   * http://www.cmake.org/pipermail/cmake/2014-February/057055.html\n\n#   * https://public.kitware.com/Bug/bug_relationship_graph.php?bug_id=14970&graph=relation\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Create dependency list\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# FaceTracker.cpp -> FaceTracker.hpp -> Context.hpp -> drishti_gl.hpp -> gl/glew.h\n",
        "Line" : 166,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "### drishtisdk (static)\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# support private access to drishti/drishti_sdk.hpp\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Set the serialization mode preprocessor flags (boost and/or cereal)\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# -DDRISHTI_BUILD_MIN_SIZE=(0|1)\n",
        "Line" : 212,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# define M_PI_2 for MSVC\n",
        "Line" : 218,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "############################\n\n###### PUBLIC API ##########\n\n############################\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Install license files\n",
        "Line" : 236,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "#################################################\n\n### Generate the main shared public interface ###\n\n#################################################\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# keep header file version strings up to date:\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# The public interface can be built as either SHARED or STATIC.\n\n# There are two classes of end users: 1) hunter and 2) non-hunter.\n\n# For hunter users, either SHARED OR STATIC targets can be used\n\n# transparently.  For non-hunter users, SHARED libraries will\n\n# provide dependency free use automatically, or the\n\n# DRISHTI_MERGE_ALL_LIBS option can be used to provide a single\n\n# static library (all dependencies are identified, split and\n\n# merged into a single monolithic library for convenient dependency\n\n# free linking).\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# create a temporary target\n",
        "Line" : 267,
        "CharPositionInLine" : 38
      },
      "29" : {
        "Text" : "# These targets will be configured with appropriate include paths:\n",
        "Line" : 272,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Requires:\n\n# @DRISHTI_SDK_MAX_FACES@\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Create the public shared library\n",
        "Line" : 293,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# define M_PI_2 for Visual Studio\n",
        "Line" : 298,
        "CharPositionInLine" : 73
      },
      "33" : {
        "Text" : "# Append drishti subdirectory for installed headers\n",
        "Line" : 302,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Configure Info.plist template:\n\n#  @CF_BUNDLE_SHORT_VERSION_STRING@\n\n#  @CF_BUNDLE_VERSION@\n\n#  @CF_BUNDLE_NAME@\n\n#  @CF_BUNDLE_IDENTIFIER@\n",
        "Line" : 307,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# https://cmake.org/cmake/help/latest/prop_tgt/FRAMEWORK.html#framework\n",
        "Line" : 322,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# \"current version\" in semantic format in Mach-O binary file\n",
        "Line" : 328,
        "CharPositionInLine" : 38
      },
      "37" : {
        "Text" : "# \"compatibility version\" in semantic format in Mach-O binary file\n",
        "Line" : 329,
        "CharPositionInLine" : 40
      },
      "38" : {
        "Text" : "# iPhone/iPad\n",
        "Line" : 332,
        "CharPositionInLine" : 51
      },
      "39" : {
        "Text" : "# (Optional) merge top level library and all dependencies:\n\n# Also see: http://stackoverflow.com/a/18949281\n",
        "Line" : 349,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# ALIAS target allow us to have same interface while including project\n",
        "Line" : 360,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Error: ld: Assertion failed: (0 && \"need to handle arm64 -r reloc\")\n\n#drishti_strip(drishti)\n",
        "Line" : 364,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "###################################\n\n### set build/install include paths\n\n###################################\n",
        "Line" : 372,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Use standrad shared lib versioning except for Xcode shared frameworks\n",
        "Line" : 377,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "###################\n\n##### install #####\n\n###################\n",
        "Line" : 395,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# See: https://cmake.org/Wiki/CMake/Tutorials/How_to_create_a_ProjectConfig.cmake_file\n",
        "Line" : 401,
        "CharPositionInLine" : 2
      },
      "46" : {
        "Text" : "# Export minimal public SDK or full internal SDK\n",
        "Line" : 408,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "# Note: variable 'drishti_targets_export_name' used\n\n# TODO: Belongs to top level CMakeLists.txt\n",
        "Line" : 417,
        "CharPositionInLine" : 2
      },
      "48" : {
        "Text" : "# Headers are part of framework\n",
        "Line" : 436,
        "CharPositionInLine" : 4
      },
      "49" : {
        "Text" : "# Experimental size reduction\n",
        "Line" : 457,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "##################\n\n##### C API ######\n\n##################\n",
        "Line" : 459,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# create a temporary target\n",
        "Line" : 466,
        "CharPositionInLine" : 44
      },
      "52" : {
        "Text" : "# define M_PI_2 for Visual Studio\n",
        "Line" : 473,
        "CharPositionInLine" : 77
      },
      "53" : {
        "Text" : "# (Optional) merge top level library and all dependencies:\n\n# Also see: http://stackoverflow.com/a/18949281\n",
        "Line" : 478,
        "CharPositionInLine" : 4
      },
      "54" : {
        "Text" : "# Only use symbol_list and version script for non drishti_merge_libraries scenarios:\n\n# Undefined symbols for architecture x86_64:\n\n# \"_drishti_eye_segmenter_create_from_file\", referenced from:\n",
        "Line" : 484,
        "CharPositionInLine" : 4
      },
      "55" : {
        "Text" : "# Error: ld: Assertion failed: (0 && \"need to handle arm64 -r reloc\")\n\n#drishti_strip(drishti_c)\n",
        "Line" : 491,
        "CharPositionInLine" : 4
      },
      "56" : {
        "Text" : "# Simple install to execute post build strip\n",
        "Line" : 496,
        "CharPositionInLine" : 4
      },
      "57" : {
        "Text" : "# <prefix>/include\n",
        "Line" : 512,
        "CharPositionInLine" : 36
      },
      "58" : {
        "Text" : "#################\n\n## Unit tests ###\n\n#################\n",
        "Line" : 516,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# NOTE: These should come last to ensure all library targets are available\n",
        "Line" : 520,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# Add a static public SDK library:\n\n# * support CTest/GTest executables on iOS until CMake dynamic framework embedding is sorted out\n\n# * use this library for IDE debugging as an alternative to the stripped public library\n",
        "Line" : 524,
        "CharPositionInLine" : 4
      },
      "61" : {
        "Text" : "# define M_PI_2 for Visual Studio\n",
        "Line" : 528,
        "CharPositionInLine" : 72
      },
      "62" : {
        "Text" : "# <prefix>/include\n",
        "Line" : 534,
        "CharPositionInLine" : 38
      },
      "CommentCount" : 63
    },
    "src/lib/drishti/core/CMakeLists.txt" : {
      "ObjectId" : "74d65721256e902df717eae8826e049c63b5b0ac",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/lib/drishti/core/sugar.cmake" : {
      "ObjectId" : "e211057472bf1c5e52a22b2bf60e2f380b25eae5",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file generated automatically by:\n\n#   generate_sugar_files.py\n\n# see wiki for more info:\n\n#   https://github.com/ruslo/sugar/wiki/Collecting-sources\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For now make them all public\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/lib/drishti/drishti/CMakeLists.txt" : {
      "ObjectId" : "74d65721256e902df717eae8826e049c63b5b0ac",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/lib/drishti/drishti/sugar.cmake" : {
      "ObjectId" : "d1527df5156848ae74de7714549a68d6c2ca6da5",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file generated automatically by:\n\n#   generate_sugar_files.py\n\n# see wiki for more info:\n\n#   https://github.com/ruslo/sugar/wiki/Collecting-sources\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#drishti_sdk.hpp # generated file\n\n### Exclude private header from install\n\n### This could be included in the IDE headers\n\n# EyeSegmenterImpl.hpp\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# only needed for GPU functionality\n",
        "Line" : 44,
        "CharPositionInLine" : 19
      },
      "CommentCount" : 3
    },
    "src/lib/drishti/eye/CMakeLists.txt" : {
      "ObjectId" : "74d65721256e902df717eae8826e049c63b5b0ac",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/lib/drishti/eye/sugar.cmake" : {
      "ObjectId" : "d650ce3764afc85c9f7f24defe3f234f3678538d",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file generated automatically by:\n\n#   generate_sugar_files.py\n\n# see wiki for more info:\n\n#   https://github.com/ruslo/sugar/wiki/Collecting-sources\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/lib/drishti/face/CMakeLists.txt" : {
      "ObjectId" : "74d65721256e902df717eae8826e049c63b5b0ac",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/lib/drishti/face/sugar.cmake" : {
      "ObjectId" : "8dbe4a7e4ece4165807ac356e04913cd2175dd5d",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file generated automatically by:\n\n#   generate_sugar_files.py\n\n# see wiki for more info:\n\n#   https://github.com/ruslo/sugar/wiki/Collecting-sources\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/lib/drishti/geometry/CMakeLists.txt" : {
      "ObjectId" : "74d65721256e902df717eae8826e049c63b5b0ac",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/lib/drishti/geometry/sugar.cmake" : {
      "ObjectId" : "76217d4ee09b20a6e10a820e58c492b2e0baae7e",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file generated automatically by:\n\n#   generate_sugar_files.py\n\n# see wiki for more info:\n\n#   https://github.com/ruslo/sugar/wiki/Collecting-sources\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/lib/drishti/graphics/sugar.cmake" : {
      "ObjectId" : "868f80d389f2c5922cec58b70d4434d0199825dc",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file generated automatically by:\n\n#   generate_sugar_files.py\n\n# see wiki for more info:\n\n#   https://github.com/ruslo/sugar/wiki/Collecting-sources\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#sugar_files(\n\n#  DRISHTI_GRAPHICS_SRCS\n\n#  )\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/lib/drishti/hci/CMakeLists.txt" : {
      "ObjectId" : "74d65721256e902df717eae8826e049c63b5b0ac",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/lib/drishti/hci/sugar.cmake" : {
      "ObjectId" : "3ec77166fbf83f7be7e44dea6a7f23268bd26fa2",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file generated automatically by:\n\n#   generate_sugar_files.py\n\n# see wiki for more info:\n\n#   https://github.com/ruslo/sugar/wiki/Collecting-sources\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/lib/drishti/master/CMakeLists.txt" : {
      "ObjectId" : "74d65721256e902df717eae8826e049c63b5b0ac",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/lib/drishti/ml/CMakeLists.txt" : {
      "ObjectId" : "74d65721256e902df717eae8826e049c63b5b0ac",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/lib/drishti/ml/sugar.cmake" : {
      "ObjectId" : "247b2e0098935fce472ab26b767368263779096b",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file generated automatically by:\n\n#   generate_sugar_files.py\n\n# see wiki for more info:\n\n#   https://github.com/ruslo/sugar/wiki/Collecting-sources\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/lib/drishti/rcpr/sugar.cmake" : {
      "ObjectId" : "8b339e223e3979cb7a1974601107948508fbb2da",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file generated automatically by:\n\n#   generate_sugar_files.py\n\n# see wiki for more info:\n\n#   https://github.com/ruslo/sugar/wiki/Collecting-sources\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/lib/drishti/sensor/sugar.cmake" : {
      "ObjectId" : "385399d465a445b4531bda2819e06ab342fc2288",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file generated automatically by:\n\n#   generate_sugar_files.py\n\n# see wiki for more info:\n\n#   https://github.com/ruslo/sugar/wiki/Collecting-sources\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/lib/drishti/sugar.cmake" : {
      "ObjectId" : "a8709703e71c65001dbc3978d2fd500ae3ce2e4f",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file generated automatically by:\n\n#   generate_sugar_files.py\n\n# see wiki for more info:\n\n#   https://github.com/ruslo/sugar/wiki/Collecting-sources\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# for testing\n",
        "Line" : 14,
        "CharPositionInLine" : 23
      },
      "2" : {
        "Text" : "# public API\n",
        "Line" : 16,
        "CharPositionInLine" : 23
      },
      "3" : {
        "Text" : "# if(DRISHTI_BUILD_ACF)\n\n#   sugar_include(acf)\n\n# endif()\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/lib/drishti/testlib/sugar.cmake" : {
      "ObjectId" : "972c05f0a6e9f1550e7c89afc9554e1633f802e2",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file generated automatically by:\n\n#   generate_sugar_files.py\n\n# see wiki for more info:\n\n#   https://github.com/ruslo/sugar/wiki/Collecting-sources\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/lib/sugar.cmake" : {
      "ObjectId" : "32d9447f6a757489adff82b0dca213784ab93482",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file generated automatically by:\n\n#   generate_sugar_files.py\n\n# see wiki for more info:\n\n#   https://github.com/ruslo/sugar/wiki/Collecting-sources\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/sugar.cmake" : {
      "ObjectId" : "eb7968dd46e78b14698a580dda40293ff8c91309",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file generated automatically by:\n\n#   generate_sugar_files.py\n\n# see wiki for more info:\n\n#   https://github.com/ruslo/sugar/wiki/Collecting-sources\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/tests/CMakeLists.txt" : {
      "ObjectId" : "c953ddc1d68826d925cd35b01ffd1f6cb4bb65c5",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# if(DRISHTI_USE_THREAD_POOL_CPP)\n\n#   add_subdirectory(thread-pool)\n\n# endif()\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add_subdirectory(json)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# if(DRISHTI_USE_BEAST)\n\n#   add_subdirectory(beast)\n\n# endif()\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# if(DRISHTI_BUILD_ASAN_TEST)\n\n#   add_subdirectory(address-sanitizer)\n\n# endif()\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# # visual test\n\n# if(DRISHTI_USE_IMSHOW)\n\n#   add_subdirectory(glfwimshow)\n\n# endif()\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# if(${DRISHTI_DO_GPU_TESTING} AND DRISHTI_BUILD_OGLES_GPGPU)\n\n#   add_subdirectory(ogles_gpgpu)\n\n# endif()\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/tests/address-sanitizer/CMakeLists.txt" : {
      "ObjectId" : "62e0116513ffe468face5c9130dcbc952d33a595",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Run with: `export ASAN_OPTIONS=abort_on_error=0` on clang for _exit(1) rather than abort()\n\n# http://stackoverflow.com/q/33693486\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/tests/beast/CMakeLists.txt" : {
      "ObjectId" : "fb112aa85a3c2b8c824df96ecf90abef7621fa99",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Boost ASIO dependencies:\n\n# Boost.System for the boost::system::error_code and boost::system::system_error classes.\n\n# Boost.Regex (optional) if you use any of the read_until() or async_read_until() overloads.\n\n# OpenSSL (optional) if you use Boost.Asio's SSL support.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "####################\n\n### image-server ###\n\n####################\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# for browsing\n",
        "Line" : 12,
        "CharPositionInLine" : 66
      },
      "3" : {
        "Text" : "# for websocket_async_server.hpp\n",
        "Line" : 27,
        "CharPositionInLine" : 58
      },
      "4" : {
        "Text" : "# drishti_stdlib_string.h (android)\n",
        "Line" : 28,
        "CharPositionInLine" : 54
      },
      "5" : {
        "Text" : "####################\n\n### image-client ###\n\n####################\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# drishti_stdlib_string.h (android)\n",
        "Line" : 46,
        "CharPositionInLine" : 54
      },
      "CommentCount" : 7
    },
    "src/tests/drishti/CMakeLists.txt" : {
      "ObjectId" : "1745badb30b935a4f334010999798397deb88d78",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# public API layer\n",
        "Line" : 12,
        "CharPositionInLine" : 24
      },
      "1" : {
        "Text" : "# Use static lib to avoid dynamic frameworks in internal tests\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO: model\n",
        "Line" : 62,
        "CharPositionInLine" : 55
      },
      "3" : {
        "Text" : "#####\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/tests/glfwimshow/CMakeLists.txt" : {
      "ObjectId" : "3a2b7bb9eb930d1b7216b6fae243d21c5fe2c625",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tests/json/CMakeLists.txt" : {
      "ObjectId" : "788d8efc48f7a17610df4ad0638002490454c595",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tests/ogles_gpgpu/CMakeLists.txt" : {
      "ObjectId" : "722307d6cfbe28fb093e782d38277ba76c4bc4c7",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tests/thread-pool/CMakeLists.txt" : {
      "ObjectId" : "aefd8c59262d9f101ce6990fbd81134324d20fbe",
      "LastModified" : "2019-01-02T20:09:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### test-thread-pool ####\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 106,
    "QMAKE" : 1
  },
  "ElapsedTime" : 2021
}