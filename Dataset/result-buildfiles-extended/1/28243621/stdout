{
  "Repository" : "28243621",
  "Revision" : "HEAD",
  "ObjectId" : "193ebcf728e23285efaa8d4acc21ba234d468e84",
  "CommitTime" : "2019-04-17T22:55:11Z",
  "Files" : {
    "CvGameCoreDLL/Makefile" : {
      "ObjectId" : "28ceb24d39427a13e8d905599cc06d84fe19f8ce",
      "LastModified" : "2017-04-14T20:08:30Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#### Civilization 4 SDK Makefile 2.5 ####\n\n####  Copyright 2015 Nightinggale    ####\n\n#########################################\n\n#### Civilization 4 SDK Makefile 2.0 ####\n\n####  Copyright 2013 Nightinggale    ####\n\n#########################################\n\n#### Civilization 4 SDK Makefile 1.0 ####\n\n####  Copyright 2010 Danny Daemonic  ####\n\n#########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## User setup\n\n##\n\n## Any setting here can be overwritten by assigning a new value to the variables in Makefile.settings\n\n##  Makefile.settings is made automatically if it is missing whenever the project is build or cleaned\n\n##\n\n## Not touching the makefile itself can be beneficial if the makefile is committed to svn/git\n\n## Makefile.settings can also accept CUSTOM_CFLAGS and CUSTOM_LDFLAGS if you want to ADD additional flags\n\n##   the custom flags will not overwrite any flags the makefile sets itself\n\n##   An example could be you want to define ENABLE_MY_DEBUG_OUTPUT in C+, then you write\n\n##     CUSTOM_CFLAGS -DENABLE_MY_DEBUG_OUTPUT\n\n##     in Makefile.settings and it will be defined for you without the risk of committing active debug output to other people\n\n##\n\n##     You can write whatever you want after -D and it will work like you write #DEFINE in C++\n\n## \n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#### Paths ####\n\n#\n\n# Note: $(PROGRAMFILES) converts to \"C:\\Program Files\", \"C:\\Program Files (x86)\" or whatever fits your system.\n\n# run \"nmake.exe /P\" in cmd.exe to see what it is on your system\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Uncomment to have newly compiled dlls copied to your mod's Assets directory\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Civ install path\n\n## Path to the directory where boost and python is stored\n\n## Overwritten by enviroment variable CIV4_LIB_INSTALL_PATH\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#### Tools ####\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#### CFLAGS ####\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#### LDFLAGS ####\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#### INCLUDES ####\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#### boost and python ####\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10,
      "Errorlog" : "line 32:23 token recognition error at: '\\M'\nline 33:20 token recognition error at: '\\M'\nline 33:35 token recognition error at: '\\W'\nline 33:43 token recognition error at: '\\v'\nline 40:25 token recognition error at: '\\2'\nline 40:34 token recognition error at: '\\F'\nline 40:48 token recognition error at: '\\S'\nline 40:89 token recognition error at: '\\C'\nline 43:3 token recognition error at: '\"$(TOOLKIT)\\b'\nline 43:18 token recognition error at: '\\c'\nline 44:15 token recognition error at: '\\b'\nline 44:19 token recognition error at: '\\c'\nline 45:14 token recognition error at: '\\b'\nline 45:18 token recognition error at: '\\l'\nline 46:11 token recognition error at: '\\b'\nline 49:7 token recognition error at: '\\f'\nline 56:52 token recognition error at: '\" in NMAKE properties\\n## This will make VC++ aware of what is defined and what isn't, which affects the help popup and red lines\\n## Use Release_DEFINES for all targets except debug\\n## Assert adds /DFASSERT_ENABLE, which should be added to additional options too, if you care.\\n## However you will only be able to tell a difference if you do something with asserts other than FAssert() or FAssertMsg()\\n\\nDebug_DEFINES=/DWIN32 /D_WINDOWS /D_USRDLL /DCVGAMECOREDLL_EXPORTS /D_DEBUG\\nRelease_DEFINES=/DWIN32 /D_WINDOWS /D_USRDLL /DCVGAMECOREDLL_EXPORTS /DNDEBUG /DFINAL_RELEASE\\n\\n#### You shouldn't need to modify anything beyond this point ####\\n#################################################################\\n\\nTEMP_FILE_DIR = temp_files\\nCUSTOM_CFLAGS  =\\nCUSTOM_LDFLAGS =\\n\\n\\n\\n!IF [IF NOT EXIST Makefile.settings EXIT 1] != 0\\n!IF [ECHO CUSTOM_CFLAGS = > Makefile.settings]\\n!ENDIF\\n!ENDIF\\n!include Makefile.settings\\n\\nPRECOMPILE_DEPENDENCIES =\\nPROJECT_CFLAGS =\\nPROJECT_LDFLAGS =\\nSOURCE_DIR =\\n\\nSUBDIRPATH1 = ../\\nSUBDIRPATH2 = ../\\nSUBDIRPATH3 = ../\\nSUBDIRPATH4 = ../\\nSUBDIRPATH5 = ../\\nSUBDIRPATH6 = ../\\nSUBDIRPATH7 = ../\\nSUBDIRPATH8 = ../\\nSUBDIRPATH9 = ../\\nSUBDIRPATH10 = ../\\nSUBDIRPATH11 = ../\\nSUBDIRPATH12 = ../\\nSUBDIRPATH13 = ../\\nSUBDIRPATH14 = ../\\nSUBDIRPATH15 = ../\\n\\n!IF [IF NOT EXIST Makefile.project EXIT 1] != 0\\n!IF [ECHO SOURCE_DIR = .>> Makefile.project]\\n!ENDIF\\n!IF [ECHO PROJECT_CFLAGS = >> Makefile.project]\\n!ENDIF\\n!IF [ECHO PROJECT_LDFLAGS = >> Makefile.project]\\n!ENDIF\\n!IF [ECHO PRECOMPILE_DEPENDENCIES = >> Makefile.project]\\n!ENDIF\\n!ENDIF\\n!include Makefile.project\\n\\nSUBDIRS = . $(SUBDIR1) $(SUBDIR2) $(SUBDIR3) $(SUBDIR4) $(SUBDIR5) $(SUBDIR6) $(SUBDIR7) $(SUBDIR8) $(SUBDIR9) $(SUBDIR10) $(SUBDIR11) $(SUBDIR12) $(SUBDIR13) $(SUBDIR14) $(SUBDIR15)\\n\\nTEMP_TARGET_FILES = $(TEMP_FILE_DIR)\\$(TARGET)\\n\\n## Environmental path overwrite\\n!IFDEF CIV4_LIB_INSTALL_PATH\\nCIV4_PATH=$(CIV4_LIB_INSTALL_PATH)\\n!ENDIF\\n\\n!IFDEF FASTDEP_FULL_PATH\\nFD=$(FASTDEP_FULL_PATH)\\n!ENDIF\\n\\n#### Target Files ####\\nTarget_BIN=$(TARGET)\\C'\nline 128:36 token recognition error at: '\\C'\nline 131:36 token recognition error at: '\\C'\nline 134:37 token recognition error at: '\\C'\nline 136:34 token recognition error at: '\\C'\nline 138:31 token recognition error at: '\\C'\nline 140:31 token recognition error at: '\\C'\nline 142:33 token recognition error at: '\\C'\nline 149:35 token recognition error at: '\\d'\nline 170:18 token recognition error at: '\"$(BOOST_LIB_PATH)Boost-1.32.0\\l'\nline 170:53 token recognition error at: '\\b'\nline 172:48 token recognition error at: '\\l'\nline 172:53 token recognition error at: '\\b'\nline 174:48 token recognition error at: '\\l'\nline 174:53 token recognition error at: '\\b'\nline 176:48 token recognition error at: '\\l'\nline 176:53 token recognition error at: '\\b'\nline 245:34 token recognition error at: '\\A'\nline 256:49 token recognition error at: '\" %i IN ('dir /b $(SOURCE_DIR)\\%j\\*.cpp') DO @ECHO. $(TEMP_TARGET_FILES)\\%j\\%i.obj \\>> $(FILE_DEPENDS))\\n    @ECHO.>> $(FILE_DEPENDS)\\n\\nfastdep:\\n\\t@ECHO Running fastdep\\n\\t@$(FD) --objectextension=pch -q --removepath=$(SOURCE_DIR)\\ -O $(TEMP_TARGET_FILES) $(SOURCE_DIR)\\C'\nline 269:28 token recognition error at: '\\u'\n"
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 19087
}