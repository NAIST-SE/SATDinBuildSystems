{
  "Repository" : "6050365",
  "Revision" : "HEAD",
  "ObjectId" : "8c22f685d168000eabfc994a09c3a2a61f7f633f",
  "CommitTime" : "2019-04-14T20:29:14Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "aebd4c4be9fa2011d47208ebe3f2914d4fc9cb47",
      "LastModified" : "2018-07-29T10:35:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Config options\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# src/external/jar_xm.h does shady stuff\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/AddIfFlagCompiles.cmake" : {
      "ObjectId" : "403607b57ad5133e301e1691ea0d3d4bf28d4aee",
      "LastModified" : "2018-05-20T23:08:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/BuildType.cmake" : {
      "ObjectId" : "80ccdee2c9e47a4d25508c42bc34b3e279e43bbe",
      "LastModified" : "2018-05-20T23:08:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set a default build type if none was specified\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the possible values of build type for cmake-gui\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Taken from the https://github.com/OpenChemistry/tomviz project\n\n# Copyright (c) 2014-2017, Kitware, Inc.\n\n# All rights reserved.\n\n# \n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n# \n\n# 1. Redistributions of source code must retain the above copyright notice, this\n\n# list of conditions and the following disclaimer.\n\n# \n\n# 2. Redistributions in binary form must reproduce the above copyright notice,\n\n# this list of conditions and the following disclaimer in the documentation\n\n# and/or other materials provided with the distribution.\n\n# \n\n# 3. Neither the name of the copyright holder nor the names of its contributors\n\n# may be used to endorse or promote products derived from this software\n\n# without specific prior written permission.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n\n# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\n# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\n# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n\n# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n\n# TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n\n# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/CheckFileSystemSymlinkSupport.cmake" : {
      "ObjectId" : "798840efbc3462f9013e748178929f9d2de14904",
      "LastModified" : "2018-05-20T23:08:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Populates a ${FILESYSTEM_LACKS_SYMLINKS} variable\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/EnumOption.cmake" : {
      "ObjectId" : "d7d343f470fd8790cd5d24b3069a2fda22bfe932",
      "LastModified" : "2018-07-29T10:35:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/LibraryPathToLinkerFlags.cmake" : {
      "ObjectId" : "05942b75b18be70c3650ee495ade4651d5ba231c",
      "LastModified" : "2018-07-29T10:35:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/PopulateConfigVariablesLocally.cmake" : {
      "ObjectId" : "151070ea7b23b4b4409314d683963d40900a1c6a",
      "LastModified" : "2018-07-29T10:35:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#get_property(raylib_LIBRARIES    TARGET ${target} PROPERTY LOCATION) # only works for SHARED\n",
        "Line" : 3,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#set(raylib_LIBRARIES   \"${raylib_INCLUDE_DIRS}\" PARENT_SCOPE)\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "cmake/emscripten.cmake" : {
      "ObjectId" : "621ae7875712e79ae3a7994fd0280279b423ac9f",
      "LastModified" : "2018-07-29T10:35:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/raylib-config-version.cmake" : {
      "ObjectId" : "74fd03ccc9664c43c7608f05afc6aca9890608b8",
      "LastModified" : "2018-07-29T10:35:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# if the installed or the using project don't have CMAKE_SIZEOF_VOID_P set, ignore it:\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/raylib-config.cmake" : {
      "ObjectId" : "e2e5e9aedc8f5bd26ed7bff17592eb3c7e6024a2",
      "LastModified" : "2018-07-29T10:35:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find raylib\n\n# Options:\n\n#   raylib_USE_STATIC_LIBS - OFF by default\n\n#   raylib_VERBOSE         - OFF by default\n\n# Once done, this defines a raylib target that can be passed to\n\n# target_link_libraries as well as following variables:\n\n#\n\n#   raylib_FOUND - System has raylib installed\n\n#   raylib_INCLUDE_DIRS - The include directories for the raylib header(s)\n\n#   raylib_LIBRARIES - The libraries needed to use raylib\n\n#   raylib_LDFLAGS - The linker flags needed with raylib\n\n#   raylib_DEFINITIONS - Compiler switches required for using raylib\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/CMakeLists.txt" : {
      "ObjectId" : "ab5ff548918c7918b641acf5427d02c1b545bd34",
      "LastModified" : "2019-04-08T10:50:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Setup the project and settings\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Get the sources together\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Get the .c files\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Any any resources\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Since WASM is used, ALLOW_MEMORY_GROWTH has no extra overheads\n",
        "Line" : 60,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Do each example\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Create the basename for the example\n",
        "Line" : 76,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Setup the example\n",
        "Line" : 80,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# The local resources path needs to be mapped to /resources virtual path\n",
        "Line" : 89,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# rlgl_standalone can't be linked with raylib because of duplicate rlgl symbols\n",
        "Line" : 96,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Create the basename for the example\n",
        "Line" : 98,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Copy all of the resource files to the destination\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "examples/Makefile" : {
      "ObjectId" : "2ceb3f7dc3e0596969a7b3310a7244cfbe8e0754",
      "LastModified" : "2019-04-12T11:29:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#**************************************************************************************************\n\n#\n\n#   raylib makefile for Desktop platforms, Raspberry Pi, Android and HTML5\n\n#\n\n#   Copyright (c) 2013-2019 Ramon Santamaria (@raysan5)\n\n#\n\n#   This software is provided \"as-is\", without any express or implied warranty. In no event\n\n#   will the authors be held liable for any damages arising from the use of this software.\n\n#\n\n#   Permission is granted to anyone to use this software for any purpose, including commercial\n\n#   applications, and to alter it and redistribute it freely, subject to the following restrictions:\n\n#\n\n#     1. The origin of this software must not be misrepresented; you must not claim that you\n\n#     wrote the original software. If you use this software in a product, an acknowledgment\n\n#     in the product documentation would be appreciated but is not required.\n\n#\n\n#     2. Altered source versions must be plainly marked as such, and must not be misrepresented\n\n#     as being the original software.\n\n#\n\n#     3. This notice may not be removed or altered from any source distribution.\n\n#\n\n#**************************************************************************************************\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define required raylib variables\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Define default options\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# One of PLATFORM_DESKTOP, PLATFORM_RPI, PLATFORM_ANDROID, PLATFORM_WEB\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Locations of your newly installed library and associated headers. See ../src/Makefile\n\n# On Linux, if you have installed raylib but cannot compile the examples, check that\n\n# the *_INSTALL_PATH values here are the same as those in src/Makefile or point to known locations.\n\n# To enable system-wide compile-time and runtime linking to libraylib.so, run ../src/$ sudo make install RAYLIB_LIBTYPE_SHARED.\n\n# To enable compile-time linking to a special version of libraylib.so, change these variables here.\n\n# To enable runtime linking to a special version of libraylib.so, see EXAMPLE_RUNTIME_PATH below.\n\n# If there is a libraylib in both EXAMPLE_RUNTIME_PATH and RAYLIB_INSTALL_PATH, at runtime,\n\n# the library at EXAMPLE_RUNTIME_PATH, if present, will take precedence over the one at RAYLIB_INSTALL_PATH.\n\n# RAYLIB_INSTALL_PATH should be the desired full path to libraylib. No relative paths.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# RAYLIB_H_INSTALL_PATH locates the installed raylib header and associated source files.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Library type used for raylib: STATIC (.a) or SHARED (.so/.dll)\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Build mode for project: DEBUG or RELEASE\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Use external GLFW library instead of rglfw module\n\n# TODO: Review usage on Linux. Target version of choice. Switch on -lglfw or -lglfw3\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Use Wayland display server protocol on Linux desktop\n\n# by default it uses X11 windowing system\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# NOTE: On PLATFORM_WEB OpenAL Soft backend is used by default (check raylib/src/Makefile)\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Determine PLATFORM_OS in case PLATFORM_DESKTOP selected\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# No uname.exe on MinGW!, but OS=Windows_NT on Windows!\n\n# ifeq ($(UNAME),Msys) -> Windows\n",
        "Line" : 69,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# RAYLIB_PATH adjustment for different platforms.\n\n# If using GNU make, we can get the full path to the top of the tree. Windows? BSD?\n\n# Required for ldconfig or other tools that do not perform path expansion.\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Default path for raylib on Raspberry Pi, if installed in different path, update it!\n\n# This is not currently used by src/Makefile. Not sure of its origin or usage. Refer to wiki.\n\n# TODO: update install: target in src/Makefile for RPI, consider relation to LINUX.\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Emscripten required variables\n",
        "Line" : 119,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Define raylib release directory for compiled library.\n\n# RAYLIB_RELEASE_PATH points to provided binaries or your freshly built version.\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# EXAMPLE_RUNTIME_PATH embeds a custom runtime location of libraylib.so or other desired libraries\n\n# into each example binary compiled with RAYLIB_LIBTYPE=SHARED. It defaults to RAYLIB_RELEASE_PATH\n\n# so that these examples link at runtime with your version of libraylib.so in ../release/libs/linux\n\n# without formal installation from ../src/Makefile. It aids portability and is useful if you have\n\n# multiple versions of raylib, have raylib installed to a non-standard location, or want to\n\n# bundle libraylib.so with your game. Change it to your liking.\n\n# Note: If, at runtime, there is a libraylib.so at both EXAMPLE_RUNTIME_PATH and RAYLIB_INSTALL_PATH,\n\n# The library at EXAMPLE_RUNTIME_PATH, if present, will take precedence over RAYLIB_INSTALL_PATH,\n\n# Implemented for LINUX below with CFLAGS += -Wl,-rpath,$(EXAMPLE_RUNTIME_PATH)\n\n# To see the result, run readelf -d core/core_basic_window; looking at the RPATH or RUNPATH attribute.\n\n# To see which libraries a built example is linking to, ldd core/core_basic_window;\n\n# Look for libraylib.so.1 => $(RAYLIB_INSTALL_PATH)/libraylib.so.1 or similar listing.\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Define default C compiler: gcc\n\n# NOTE: define g++ compiler if using C++\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# OSX default compiler\n",
        "Line" : 172,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# FreeBSD, OpenBSD, NetBSD, DragonFly default compiler\n",
        "Line" : 176,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "# Define RPI cross-compiler\n\n#CC = armv6j-hardfloat-linux-gnueabi-gcc\n",
        "Line" : 182,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# WARNING: To compile to HTML5, code must be redesigned to use emscripten.h and emscripten_set_main_loop()\n\n# HTML5 emscripten compiler\n",
        "Line" : 188,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# Define default make program: Mingw32-make\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Define compiler flags:\n\n#  -O1                  defines optimization level\n\n#  -g                   enable debugging\n\n#  -s                   strip unnecessary data from build\n\n#  -Wall                turns on most, but not all, compiler warnings\n\n#  -std=c99             defines C language mode (standard C from 1999 revision)\n\n#  -std=gnu99           defines C language mode (GNU C from 1999 revision)\n\n#  -Wno-missing-braces  ignore invalid warning (GCC bug 53119)\n\n#  -D_DEFAULT_SOURCE    use with -std=c99 on Linux and PLATFORM_WEB, required for timespec\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Additional flags for compiler (if desired)\n\n#CFLAGS += -Wextra -Wmissing-prototypes -Wstrict-prototypes\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# resource file contains windows executable icon and properties\n\n# -Wl,--subsystem,windows hides the console window\n",
        "Line" : 217,
        "CharPositionInLine" : 8
      },
      "27" : {
        "Text" : "#CC = clang\n",
        "Line" : 224,
        "CharPositionInLine" : 12
      },
      "28" : {
        "Text" : "# Explicitly enable runtime link to libraylib.so\n",
        "Line" : 230,
        "CharPositionInLine" : 8
      },
      "29" : {
        "Text" : "# -Os                        # size optimization\n\n# -O2                        # optimization level 2, if used, also set --memory-init-file 0\n\n# --memory-init-file 0       # to avoid an external memory initialization code file (.mem)\n\n# -s USE_GLFW=3              # Use glfw3 library (context/input management)\n\n# -s USE_SDL=2               # Use SDL2 library, required for audio backend\n\n# -s ALLOW_MEMORY_GROWTH=1   # to allow memory resizing\n\n# -s TOTAL_MEMORY=16777216   # to specify heap memory size (default = 16MB)\n\n# -s USE_PTHREADS=1          # multithreading support\n\n# -s WASM=1                  # support Web Assembly (https://github.com/kripken/emscripten/wiki/WebAssembly)\n\n# -s EMTERPRETIFY=1          # enable emscripten code interpreter (very slow)\n\n# -s EMTERPRETIFY_ASYNC=1    # support synchronous loops by emterpreter\n\n# --profiling                # include information for code profiling\n\n# --preload-file resources   # specify a resources folder for data compilation\n",
        "Line" : 239,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# NOTE: Simple raylib examples are compiled to be interpreter by emterpreter, that way,\n\n# we can compile same code for ALL platforms with no change required, but, working on bigger\n\n# projects, code needs to be refactored to avoid a blocking while() loop, moving Update and Draw\n\n# logic to a self contained function: UpdateDrawFrame(), check core_basic_window_web.c for reference.\n",
        "Line" : 254,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# Define a custom shell .html and output extension\n",
        "Line" : 259,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# Define include paths for required headers.\n\n# Precedence: immediately local, raysan5 provided sources\n\n# NOTE: Several external required libraries (stb and others)\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Define additional directories containing required header files\n",
        "Line" : 269,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# RPI required libraries\n",
        "Line" : 271,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# Consider -L$(RAYLIB_H_INSTALL_PATH)\n",
        "Line" : 278,
        "CharPositionInLine" : 8
      },
      "36" : {
        "Text" : "# Reset everything.\n\n# Precedence: immediately local, installed version, raysan5 provided libs -I$(RAYLIB_H_INSTALL_PATH) -I$(RAYLIB_PATH)/release/include\n",
        "Line" : 282,
        "CharPositionInLine" : 8
      },
      "37" : {
        "Text" : "# Define library paths containing required libs.\n\n# Precedence: immediately local, then raysan5 provided libs\n",
        "Line" : 288,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Consider -L$(RAYLIB_INSTALL_PATH)\n",
        "Line" : 294,
        "CharPositionInLine" : 8
      },
      "39" : {
        "Text" : "# Reset everything.\n\n# Precedence: immediately local, installed version, raysan5 provided libs\n",
        "Line" : 298,
        "CharPositionInLine" : 8
      },
      "40" : {
        "Text" : "# Define any libraries required on linking\n\n# if you want to link libraries (libname.so or libname.a), use the -lname\n",
        "Line" : 308,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Libraries for Windows desktop compilation\n",
        "Line" : 312,
        "CharPositionInLine" : 8
      },
      "42" : {
        "Text" : "# Required for physac examples\n",
        "Line" : 314,
        "CharPositionInLine" : 8
      },
      "43" : {
        "Text" : "# Libraries for Debian GNU/Linux desktop compiling\n\n# NOTE: Required packages: libegl1-mesa-dev\n",
        "Line" : 318,
        "CharPositionInLine" : 8
      },
      "44" : {
        "Text" : "# On X11 requires also below libraries\n",
        "Line" : 321,
        "CharPositionInLine" : 8
      },
      "45" : {
        "Text" : "# NOTE: It seems additional libraries are not required any more, latest GLFW just dlopen them\n\n#LDLIBS += -lXrandr -lXinerama -lXi -lXxf86vm -lXcursor\n\n# On Wayland windowing system, additional libraries requires\n",
        "Line" : 323,
        "CharPositionInLine" : 8
      },
      "46" : {
        "Text" : "# Explicit link to libc\n",
        "Line" : 329,
        "CharPositionInLine" : 8
      },
      "47" : {
        "Text" : "# Libraries for OSX 10.9 desktop compiling\n\n# NOTE: Required packages: libopenal-dev libegl1-mesa-dev\n",
        "Line" : 335,
        "CharPositionInLine" : 8
      },
      "48" : {
        "Text" : "# Libraries for FreeBSD, OpenBSD, NetBSD, DragonFly desktop compiling\n\n# NOTE: Required packages: mesa-libs\n",
        "Line" : 340,
        "CharPositionInLine" : 8
      },
      "49" : {
        "Text" : "# On XWindow requires also below libraries\n",
        "Line" : 343,
        "CharPositionInLine" : 8
      },
      "50" : {
        "Text" : "# NOTE: It could require additional packages installed: libglfw3-dev\n",
        "Line" : 347,
        "CharPositionInLine" : 8
      },
      "51" : {
        "Text" : "# Libraries for Raspberry Pi compiling\n\n# NOTE: Required packages: libasound2-dev (ALSA)\n",
        "Line" : 352,
        "CharPositionInLine" : 4
      },
      "52" : {
        "Text" : "# Libraries for web (HTML5) compiling\n",
        "Line" : 357,
        "CharPositionInLine" : 4
      },
      "53" : {
        "Text" : "# Define all object files required\n",
        "Line" : 361,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# Default target entry\n",
        "Line" : 437,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# Generic compilation pattern\n\n# NOTE: Examples must be ready for Android compilation!\n",
        "Line" : 440,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# fix dylib install path name for each executable (MAC)\n",
        "Line" : 449,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# Clean everything\n",
        "Line" : 455,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 58,
      "Errorlog" : "line 123:40 token recognition error at: '\\p'\nline 125:53 token recognition error at: '\\c'\nline 125:111 token recognition error at: '\\b'\nline 125:129 token recognition error at: '\\p'\nline 125:168 token recognition error at: '\\e'\nline 125:211 token recognition error at: '\\M'\nline 125:217 token recognition error at: '\\b'\nline 126:39 token recognition error at: '\\e'\nline 260:51 token recognition error at: '\\w'\nline 260:61 token recognition error at: '\\s'\n"
    },
    "games/CMakeLists.txt" : {
      "ObjectId" : "d3f9d9fcf5499b179dbd1736d26c40152a8bc29d",
      "LastModified" : "2018-07-29T10:35:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Setup the project and settings\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Get the source toegher\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Do each game\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Create the basename for the game\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Setup the game\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Link the libraries\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Do the games with subdirectories\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "games/Makefile" : {
      "ObjectId" : "44e053c6be8d28fe17cb8978dcee128046595070",
      "LastModified" : "2019-04-08T10:50:09Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#**************************************************************************************************\n\n#\n\n#   raylib makefile for Desktop platforms, Raspberry Pi, Android and HTML5\n\n#\n\n#   Copyright (c) 2013-2019 Ramon Santamaria (@raysan5)\n\n#\n\n#   This software is provided \"as-is\", without any express or implied warranty. In no event\n\n#   will the authors be held liable for any damages arising from the use of this software.\n\n#\n\n#   Permission is granted to anyone to use this software for any purpose, including commercial\n\n#   applications, and to alter it and redistribute it freely, subject to the following restrictions:\n\n#\n\n#     1. The origin of this software must not be misrepresented; you must not claim that you\n\n#     wrote the original software. If you use this software in a product, an acknowledgment\n\n#     in the product documentation would be appreciated but is not required.\n\n#\n\n#     2. Altered source versions must be plainly marked as such, and must not be misrepresented\n\n#     as being the original software.\n\n#\n\n#     3. This notice may not be removed or altered from any source distribution.\n\n#\n\n#**************************************************************************************************\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define required raylib variables\n\n# WARNING: To compile to HTML5, code must be redesigned to use emscripten.h and emscripten_set_main_loop()\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Default path for raylib on Raspberry Pi, if installed in different path, update it!\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Library type used for raylib: STATIC (.a) or SHARED (.so/.dll)\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Use external GLFW library instead of rglfw module\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Use Wayland display server protocol on Linux desktop\n\n# by default it uses X11 windowing system\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# NOTE: On PLATFORM_WEB OpenAL Soft backend is used by default (check raylib/src/Makefile)\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Determine PLATFORM_OS in case PLATFORM_DESKTOP selected\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# No uname.exe on MinGW!, but OS=Windows_NT on Windows!\n\n# ifeq ($(UNAME),Msys) -> Windows\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Emscripten required variables\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Define raylib release directory for compiled library\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Define default C compiler: gcc\n\n# NOTE: define g++ compiler if using C++\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# OSX default compiler\n",
        "Line" : 126,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# FreeBSD, OpenBSD, NetBSD, DragonFly default compiler\n",
        "Line" : 130,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# Define RPI cross-compiler\n\n#CC = armv6j-hardfloat-linux-gnueabi-gcc\n",
        "Line" : 136,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# HTML5 emscripten compiler\n",
        "Line" : 142,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Define default make program: Mingw32-make\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Define compiler flags:\n\n#  -O1                  defines optimization level\n\n#  -g                   enable debugging\n\n#  -s                   strip unnecessary data from build\n\n#  -Wall                turns on most, but not all, compiler warnings\n\n#  -std=c99             defines C language mode (standard C from 1999 revision)\n\n#  -std=gnu99           defines C language mode (GNU C from 1999 revision)\n\n#  -Wno-missing-braces  ignore invalid warning (GCC bug 53119)\n\n#  -D_DEFAULT_SOURCE    use with -std=c99 on Linux and PLATFORM_WEB, required for timespec\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Additional flags for compiler (if desired)\n\n#CFLAGS += -Wextra -Wmissing-prototypes -Wstrict-prototypes\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# resources file contains windows exe icon\n\n# -Wl,--subsystem,windows hides the console window\n",
        "Line" : 170,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# -O2                        # if used, also set --memory-init-file 0\n\n# --memory-init-file 0       # to avoid an external memory initialization code file (.mem)\n\n# -s ALLOW_MEMORY_GROWTH=1   # to allow memory resizing\n\n# -s TOTAL_MEMORY=16777216   # to specify heap memory size (default = 16MB)\n\n# -s USE_PTHREADS=1          # multithreading support\n\n# -s WASM=1                  # support Web Assembly (https://github.com/kripken/emscripten/wiki/WebAssembly)\n\n# --preload-file resources   # specify a resources folder for data compilation\n",
        "Line" : 182,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Define a custom shell .html and output extension\n",
        "Line" : 191,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Define include paths for required headers\n\n# NOTE: Several external required libraries (stb and others)\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Define additional directories containing required header files\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# RPI requried libraries\n",
        "Line" : 202,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# Define library paths containing required libs\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Define any libraries required on linking\n\n# if you want to link libraries (libname.so or libname.a), use the -lname\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Libraries for Windows desktop compilation\n",
        "Line" : 226,
        "CharPositionInLine" : 8
      },
      "28" : {
        "Text" : "# Libraries for Debian GNU/Linux desktop compiling\n\n# NOTE: Required packages: libegl1-mesa-dev\n",
        "Line" : 230,
        "CharPositionInLine" : 8
      },
      "29" : {
        "Text" : "# On X11 requires also below libraries\n",
        "Line" : 234,
        "CharPositionInLine" : 8
      },
      "30" : {
        "Text" : "# NOTE: It seems additional libraries are not required any more, latest GLFW just dlopen them\n\n#LDLIBS += -lXrandr -lXinerama -lXi -lXxf86vm -lXcursor\n",
        "Line" : 236,
        "CharPositionInLine" : 8
      },
      "31" : {
        "Text" : "# On Wayland windowing system, additional libraries requires\n",
        "Line" : 239,
        "CharPositionInLine" : 8
      },
      "32" : {
        "Text" : "# Libraries for OSX 10.9 desktop compiling\n\n# NOTE: Required packages: libopenal-dev libegl1-mesa-dev\n",
        "Line" : 245,
        "CharPositionInLine" : 8
      },
      "33" : {
        "Text" : "# Libraries for FreeBSD, OpenBSD, NetBSD, DragonFly desktop compiling\n\n# NOTE: Required packages: mesa-libs\n",
        "Line" : 250,
        "CharPositionInLine" : 8
      },
      "34" : {
        "Text" : "# On XWindow requires also below libraries\n",
        "Line" : 254,
        "CharPositionInLine" : 8
      },
      "35" : {
        "Text" : "# NOTE: It could require additional packages installed: libglfw3-dev\n",
        "Line" : 258,
        "CharPositionInLine" : 8
      },
      "36" : {
        "Text" : "# Libraries for Raspberry Pi compiling\n\n# NOTE: Required packages: libasound2-dev (ALSA)\n",
        "Line" : 263,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "# Libraries for web (HTML5) compiling\n",
        "Line" : 268,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# Define all source files required\n",
        "Line" : 272,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# typing 'make' will invoke the default target entry\n",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Clean everything\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 41,
      "Errorlog" : "line 90:40 token recognition error at: '\\p'\nline 92:53 token recognition error at: '\\c'\nline 92:111 token recognition error at: '\\b'\nline 92:129 token recognition error at: '\\p'\nline 92:168 token recognition error at: '\\e'\nline 92:211 token recognition error at: '\\M'\nline 92:217 token recognition error at: '\\b'\nline 93:39 token recognition error at: '\\e'\nline 192:51 token recognition error at: '\\w'\nline 192:61 token recognition error at: '\\s'\n"
    },
    "games/cat_vs_roomba/Makefile" : {
      "ObjectId" : "b130465691460b77768662ec6e4460f6828c0a47",
      "LastModified" : "2019-04-08T10:50:09Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#**************************************************************************************************\n\n#\n\n#   raylib makefile for Desktop platforms, Raspberry Pi, Android and HTML5\n\n#\n\n#   Copyright (c) 2013-2019 Ramon Santamaria (@raysan5)\n\n#\n\n#   This software is provided \"as-is\", without any express or implied warranty. In no event\n\n#   will the authors be held liable for any damages arising from the use of this software.\n\n#\n\n#   Permission is granted to anyone to use this software for any purpose, including commercial\n\n#   applications, and to alter it and redistribute it freely, subject to the following restrictions:\n\n#\n\n#     1. The origin of this software must not be misrepresented; you must not claim that you\n\n#     wrote the original software. If you use this software in a product, an acknowledgment\n\n#     in the product documentation would be appreciated but is not required.\n\n#\n\n#     2. Altered source versions must be plainly marked as such, and must not be misrepresented\n\n#     as being the original software.\n\n#\n\n#     3. This notice may not be removed or altered from any source distribution.\n\n#\n\n#**************************************************************************************************\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define required raylib variables\n\n# WARNING: To compile to HTML5, code must be redesigned to use emscripten.h and emscripten_set_main_loop()\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Default path for raylib on Raspberry Pi, if installed in different path, update it!\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Library type used for raylib: STATIC (.a) or SHARED (.so/.dll)\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Use external GLFW library instead of rglfw module\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Use Wayland display server protocol on Linux desktop\n\n# by default it uses X11 windowing system\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# NOTE: On PLATFORM_WEB OpenAL Soft backend is used by default (check raylib/src/Makefile)\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Determine PLATFORM_OS in case PLATFORM_DESKTOP selected\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# No uname.exe on MinGW!, but OS=Windows_NT on Windows!\n\n# ifeq ($(UNAME),Msys) -> Windows\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Emscripten required variables\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Define raylib release directory for compiled library\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Define default C compiler: gcc\n\n# NOTE: define g++ compiler if using C++\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# OSX default compiler\n",
        "Line" : 126,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# FreeBSD, OpenBSD, NetBSD, DragonFly default compiler\n",
        "Line" : 130,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# Define RPI cross-compiler\n\n#CC = armv6j-hardfloat-linux-gnueabi-gcc\n",
        "Line" : 136,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# HTML5 emscripten compiler\n",
        "Line" : 142,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Define default make program: Mingw32-make\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Define compiler flags:\n\n#  -O1                  defines optimization level\n\n#  -g                   enable debugging\n\n#  -s                   strip unnecessary data from build\n\n#  -Wall                turns on most, but not all, compiler warnings\n\n#  -std=c99             defines C language mode (standard C from 1999 revision)\n\n#  -std=gnu99           defines C language mode (GNU C from 1999 revision)\n\n#  -Wno-missing-braces  ignore invalid warning (GCC bug 53119)\n\n#  -D_DEFAULT_SOURCE    use with -std=c99 on Linux and PLATFORM_WEB, required for timespec\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Additional flags for compiler (if desired)\n\n#CFLAGS += -Wextra -Wmissing-prototypes -Wstrict-prototypes\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# resources file contains windows exe icon\n\n# -Wl,--subsystem,windows hides the console window\n",
        "Line" : 170,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# -O2                        # if used, also set --memory-init-file 0\n\n# --memory-init-file 0       # to avoid an external memory initialization code file (.mem)\n\n# -s ALLOW_MEMORY_GROWTH=1   # to allow memory resizing\n\n# -s TOTAL_MEMORY=16777216   # to specify heap memory size (default = 16MB)\n\n# -s USE_PTHREADS=1          # multithreading support\n\n# -s WASM=1                  # support Web Assembly (https://github.com/kripken/emscripten/wiki/WebAssembly)\n\n# --preload-file resources   # specify a resources folder for data compilation\n\n# -s ASSERTIONS=1  --profiling\n",
        "Line" : 182,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Define a custom shell .html and output extension\n",
        "Line" : 192,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Define include paths for required headers\n\n# NOTE: Several external required libraries (stb and others)\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Define additional directories containing required header files\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# RPI requried libraries\n",
        "Line" : 203,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# Define library paths containing required libs\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Define any libraries required on linking\n\n# if you want to link libraries (libname.so or libname.a), use the -lname\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Libraries for Windows desktop compilation\n",
        "Line" : 227,
        "CharPositionInLine" : 8
      },
      "28" : {
        "Text" : "# Required for physac examples\n\n#LDLIBS += -static -lpthread\n",
        "Line" : 230,
        "CharPositionInLine" : 8
      },
      "29" : {
        "Text" : "# Libraries for Debian GNU/Linux desktop compiling\n\n# NOTE: Required packages: libegl1-mesa-dev\n",
        "Line" : 234,
        "CharPositionInLine" : 8
      },
      "30" : {
        "Text" : "# On X11 requires also below libraries\n",
        "Line" : 238,
        "CharPositionInLine" : 8
      },
      "31" : {
        "Text" : "# NOTE: It seems additional libraries are not required any more, latest GLFW just dlopen them\n\n#LDLIBS += -lXrandr -lXinerama -lXi -lXxf86vm -lXcursor\n",
        "Line" : 240,
        "CharPositionInLine" : 8
      },
      "32" : {
        "Text" : "# On Wayland windowing system, additional libraries requires\n",
        "Line" : 243,
        "CharPositionInLine" : 8
      },
      "33" : {
        "Text" : "# Libraries for OSX 10.9 desktop compiling\n\n# NOTE: Required packages: libopenal-dev libegl1-mesa-dev\n",
        "Line" : 249,
        "CharPositionInLine" : 8
      },
      "34" : {
        "Text" : "# Libraries for FreeBSD, OpenBSD, NetBSD, DragonFly desktop compiling\n\n# NOTE: Required packages: mesa-libs\n",
        "Line" : 254,
        "CharPositionInLine" : 8
      },
      "35" : {
        "Text" : "# On XWindow requires also below libraries\n",
        "Line" : 258,
        "CharPositionInLine" : 8
      },
      "36" : {
        "Text" : "# NOTE: It could require additional packages installed: libglfw3-dev\n",
        "Line" : 262,
        "CharPositionInLine" : 8
      },
      "37" : {
        "Text" : "# Libraries for Raspberry Pi compiling\n\n# NOTE: Required packages: libasound2-dev (ALSA)\n",
        "Line" : 267,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# Libraries for web (HTML5) compiling\n",
        "Line" : 272,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "# Define all source files required\n",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Define all object files from source files\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# For Android platform we call a custom Makefile.Android\n",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Default target entry\n\n# NOTE: We call this Makefile target or Makefile.Android target\n",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Project target defined by PROJECT_NAME\n",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Compile source files\n\n# NOTE: This pattern will compile every module defined on $(OBJS)\n",
        "Line" : 304,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Clean everything\n",
        "Line" : 309,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 46,
      "Errorlog" : "line 90:40 token recognition error at: '\\p'\nline 92:53 token recognition error at: '\\c'\nline 92:111 token recognition error at: '\\b'\nline 92:129 token recognition error at: '\\p'\nline 92:168 token recognition error at: '\\e'\nline 92:211 token recognition error at: '\\M'\nline 92:217 token recognition error at: '\\b'\nline 93:39 token recognition error at: '\\e'\nline 193:51 token recognition error at: '\\w'\nline 193:61 token recognition error at: '\\s'\n"
    },
    "games/drturtle/CMakeLists.txt" : {
      "ObjectId" : "f5778d9cbe043b7d39ef85df2b2cfa4741cbaf40",
      "LastModified" : "2019-04-08T10:50:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Executable & linking\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Resources\n\n# Copy all of the resource files to the destination\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "games/drturtle/Makefile" : {
      "ObjectId" : "4cd5033eade2f6bcce060a233cd73cf920c419db",
      "LastModified" : "2019-04-08T10:50:09Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#**************************************************************************************************\n\n#\n\n#   raylib makefile for Desktop platforms, Raspberry Pi, Android and HTML5\n\n#\n\n#   Copyright (c) 2013-2019 Ramon Santamaria (@raysan5)\n\n#\n\n#   This software is provided \"as-is\", without any express or implied warranty. In no event\n\n#   will the authors be held liable for any damages arising from the use of this software.\n\n#\n\n#   Permission is granted to anyone to use this software for any purpose, including commercial\n\n#   applications, and to alter it and redistribute it freely, subject to the following restrictions:\n\n#\n\n#     1. The origin of this software must not be misrepresented; you must not claim that you\n\n#     wrote the original software. If you use this software in a product, an acknowledgment\n\n#     in the product documentation would be appreciated but is not required.\n\n#\n\n#     2. Altered source versions must be plainly marked as such, and must not be misrepresented\n\n#     as being the original software.\n\n#\n\n#     3. This notice may not be removed or altered from any source distribution.\n\n#\n\n#**************************************************************************************************\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define required raylib variables\n\n# WARNING: To compile to HTML5, code must be redesigned to use emscripten.h and emscripten_set_main_loop()\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Default path for raylib on Raspberry Pi, if installed in different path, update it!\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Library type used for raylib: STATIC (.a) or SHARED (.so/.dll)\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Use external GLFW library instead of rglfw module\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Use Wayland display server protocol on Linux desktop\n\n# by default it uses X11 windowing system\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# NOTE: On PLATFORM_WEB OpenAL Soft backend is used by default (check raylib/src/Makefile)\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Determine PLATFORM_OS in case PLATFORM_DESKTOP selected\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# No uname.exe on MinGW!, but OS=Windows_NT on Windows!\n\n# ifeq ($(UNAME),Msys) -> Windows\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Emscripten required variables\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Define raylib release directory for compiled library\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Define default C compiler: gcc\n\n# NOTE: define g++ compiler if using C++\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# OSX default compiler\n",
        "Line" : 126,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# FreeBSD, OpenBSD, NetBSD, DragonFly default compiler\n",
        "Line" : 130,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# Define RPI cross-compiler\n\n#CC = armv6j-hardfloat-linux-gnueabi-gcc\n",
        "Line" : 136,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# HTML5 emscripten compiler\n",
        "Line" : 142,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Define default make program: Mingw32-make\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Define compiler flags:\n\n#  -O1                  defines optimization level\n\n#  -g                   enable debugging\n\n#  -s                   strip unnecessary data from build\n\n#  -Wall                turns on most, but not all, compiler warnings\n\n#  -std=c99             defines C language mode (standard C from 1999 revision)\n\n#  -std=gnu99           defines C language mode (GNU C from 1999 revision)\n\n#  -Wno-missing-braces  ignore invalid warning (GCC bug 53119)\n\n#  -D_DEFAULT_SOURCE    use with -std=c99 on Linux and PLATFORM_WEB, required for timespec\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Additional flags for compiler (if desired)\n\n#CFLAGS += -Wextra -Wmissing-prototypes -Wstrict-prototypes\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# resources file contains windows exe icon\n\n# -Wl,--subsystem,windows hides the console window\n",
        "Line" : 170,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# -O2                        # if used, also set --memory-init-file 0\n\n# --memory-init-file 0       # to avoid an external memory initialization code file (.mem)\n\n# -s ALLOW_MEMORY_GROWTH=1   # to allow memory resizing\n\n# -s TOTAL_MEMORY=16777216   # to specify heap memory size (default = 16MB)\n\n# -s USE_PTHREADS=1          # multithreading support\n\n# -s WASM=1                  # support Web Assembly (https://github.com/kripken/emscripten/wiki/WebAssembly)\n\n# --preload-file resources   # specify a resources folder for data compilation\n",
        "Line" : 182,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Define a custom shell .html and output extension\n",
        "Line" : 191,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Define include paths for required headers\n\n# NOTE: Several external required libraries (stb and others)\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Define additional directories containing required header files\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# RPI requried libraries\n",
        "Line" : 202,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# Define library paths containing required libs\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Define any libraries required on linking\n\n# if you want to link libraries (libname.so or libname.a), use the -lname\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Libraries for Windows desktop compilation\n",
        "Line" : 226,
        "CharPositionInLine" : 8
      },
      "28" : {
        "Text" : "# Libraries for Debian GNU/Linux desktop compiling\n\n# NOTE: Required packages: libegl1-mesa-dev\n",
        "Line" : 230,
        "CharPositionInLine" : 8
      },
      "29" : {
        "Text" : "# On X11 requires also below libraries\n",
        "Line" : 234,
        "CharPositionInLine" : 8
      },
      "30" : {
        "Text" : "# NOTE: It seems additional libraries are not required any more, latest GLFW just dlopen them\n\n#LDLIBS += -lXrandr -lXinerama -lXi -lXxf86vm -lXcursor\n",
        "Line" : 236,
        "CharPositionInLine" : 8
      },
      "31" : {
        "Text" : "# On Wayland windowing system, additional libraries requires\n",
        "Line" : 239,
        "CharPositionInLine" : 8
      },
      "32" : {
        "Text" : "# Libraries for OSX 10.9 desktop compiling\n\n# NOTE: Required packages: libopenal-dev libegl1-mesa-dev\n",
        "Line" : 245,
        "CharPositionInLine" : 8
      },
      "33" : {
        "Text" : "# Libraries for FreeBSD, OpenBSD, NetBSD, DragonFly desktop compiling\n\n# NOTE: Required packages: mesa-libs\n",
        "Line" : 250,
        "CharPositionInLine" : 8
      },
      "34" : {
        "Text" : "# On XWindow requires also below libraries\n",
        "Line" : 254,
        "CharPositionInLine" : 8
      },
      "35" : {
        "Text" : "# NOTE: It could require additional packages installed: libglfw3-dev\n",
        "Line" : 258,
        "CharPositionInLine" : 8
      },
      "36" : {
        "Text" : "# Libraries for Raspberry Pi compiling\n\n# NOTE: Required packages: libasound2-dev (ALSA)\n",
        "Line" : 263,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "# Libraries for web (HTML5) compiling\n",
        "Line" : 268,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# Define all source files required\n",
        "Line" : 272,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# typing 'make' will invoke the default target entry\n",
        "Line" : 275,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Clean everything\n",
        "Line" : 285,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 41,
      "Errorlog" : "line 92:43 token recognition error at: '\\c'\nline 92:101 token recognition error at: '\\b'\nline 92:119 token recognition error at: '\\p'\nline 92:158 token recognition error at: '\\e'\nline 92:201 token recognition error at: '\\M'\nline 92:207 token recognition error at: '\\b'\nline 93:28 token recognition error at: '\\e'\nline 192:51 token recognition error at: '\\w'\nline 192:61 token recognition error at: '\\s'\n"
    },
    "games/just_do/CMakeLists.txt" : {
      "ObjectId" : "f25b6e3796edcceba4ecb187fe340b8d5da10d2d",
      "LastModified" : "2019-04-08T10:50:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Grab the screens\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Executable & linking\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Resources\n\n# Copy all of the resource files to the destination\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "games/just_do/Makefile" : {
      "ObjectId" : "af9b31c12a6cdb6943cc40acf99c739840b034f9",
      "LastModified" : "2019-04-08T10:50:09Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#**************************************************************************************************\n\n#\n\n#   raylib makefile for Desktop platforms, Raspberry Pi, Android and HTML5\n\n#\n\n#   Copyright (c) 2013-2019 Ramon Santamaria (@raysan5)\n\n#\n\n#   This software is provided \"as-is\", without any express or implied warranty. In no event\n\n#   will the authors be held liable for any damages arising from the use of this software.\n\n#\n\n#   Permission is granted to anyone to use this software for any purpose, including commercial\n\n#   applications, and to alter it and redistribute it freely, subject to the following restrictions:\n\n#\n\n#     1. The origin of this software must not be misrepresented; you must not claim that you\n\n#     wrote the original software. If you use this software in a product, an acknowledgment\n\n#     in the product documentation would be appreciated but is not required.\n\n#\n\n#     2. Altered source versions must be plainly marked as such, and must not be misrepresented\n\n#     as being the original software.\n\n#\n\n#     3. This notice may not be removed or altered from any source distribution.\n\n#\n\n#**************************************************************************************************\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define required raylib variables\n\n# WARNING: To compile to HTML5, code must be redesigned to use emscripten.h and emscripten_set_main_loop()\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Default path for raylib on Raspberry Pi, if installed in different path, update it!\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Library type used for raylib: STATIC (.a) or SHARED (.so/.dll)\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Use external GLFW library instead of rglfw module\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Use Wayland display server protocol on Linux desktop\n\n# by default it uses X11 windowing system\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# NOTE: On PLATFORM_WEB OpenAL Soft backend is used by default (check raylib/src/Makefile)\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Determine PLATFORM_OS in case PLATFORM_DESKTOP selected\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# No uname.exe on MinGW!, but OS=Windows_NT on Windows!\n\n# ifeq ($(UNAME),Msys) -> Windows\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Emscripten required variables\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Define raylib release directory for compiled library\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Define default C compiler: gcc\n\n# NOTE: define g++ compiler if using C++\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# OSX default compiler\n",
        "Line" : 126,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# FreeBSD, OpenBSD, NetBSD, DragonFly default compiler\n",
        "Line" : 130,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# Define RPI cross-compiler\n\n#CC = armv6j-hardfloat-linux-gnueabi-gcc\n",
        "Line" : 136,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# HTML5 emscripten compiler\n",
        "Line" : 142,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Define default make program: Mingw32-make\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Define compiler flags:\n\n#  -O1                  defines optimization level\n\n#  -g                   enable debugging\n\n#  -s                   strip unnecessary data from build\n\n#  -Wall                turns on most, but not all, compiler warnings\n\n#  -std=c99             defines C language mode (standard C from 1999 revision)\n\n#  -std=gnu99           defines C language mode (GNU C from 1999 revision)\n\n#  -Wno-missing-braces  ignore invalid warning (GCC bug 53119)\n\n#  -D_DEFAULT_SOURCE    use with -std=c99 on Linux and PLATFORM_WEB, required for timespec\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Additional flags for compiler (if desired)\n\n#CFLAGS += -Wextra -Wmissing-prototypes -Wstrict-prototypes\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# resources file contains windows exe icon\n\n# -Wl,--subsystem,windows hides the console window\n",
        "Line" : 170,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# -O2                        # if used, also set --memory-init-file 0\n\n# --memory-init-file 0       # to avoid an external memory initialization code file (.mem)\n\n# -s ALLOW_MEMORY_GROWTH=1   # to allow memory resizing\n\n# -s TOTAL_MEMORY=16777216   # to specify heap memory size (default = 16MB)\n\n# -s USE_PTHREADS=1          # multithreading support\n\n# -s WASM=1                  # support Web Assembly (https://github.com/kripken/emscripten/wiki/WebAssembly)\n\n# --preload-file resources   # specify a resources folder for data compilation\n",
        "Line" : 182,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Define a custom shell .html and output extension\n",
        "Line" : 191,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Define include paths for required headers\n\n# NOTE: Several external required libraries (stb and others)\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Define additional directories containing required header files\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# RPI requried libraries\n",
        "Line" : 202,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# Define library paths containing required libs\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Define any libraries required on linking\n\n# if you want to link libraries (libname.so or libname.a), use the -lname\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Libraries for Windows desktop compilation\n",
        "Line" : 226,
        "CharPositionInLine" : 8
      },
      "28" : {
        "Text" : "# Libraries for Debian GNU/Linux desktop compiling\n\n# NOTE: Required packages: libegl1-mesa-dev\n",
        "Line" : 230,
        "CharPositionInLine" : 8
      },
      "29" : {
        "Text" : "# On X11 requires also below libraries\n",
        "Line" : 234,
        "CharPositionInLine" : 8
      },
      "30" : {
        "Text" : "# NOTE: It seems additional libraries are not required any more, latest GLFW just dlopen them\n\n#LDLIBS += -lXrandr -lXinerama -lXi -lXxf86vm -lXcursor\n",
        "Line" : 236,
        "CharPositionInLine" : 8
      },
      "31" : {
        "Text" : "# On Wayland windowing system, additional libraries requires\n",
        "Line" : 239,
        "CharPositionInLine" : 8
      },
      "32" : {
        "Text" : "# Libraries for OSX 10.9 desktop compiling\n\n# NOTE: Required packages: libopenal-dev libegl1-mesa-dev\n",
        "Line" : 245,
        "CharPositionInLine" : 8
      },
      "33" : {
        "Text" : "# Libraries for FreeBSD desktop compiling\n\n# NOTE: Required packages: mesa-libs\n",
        "Line" : 250,
        "CharPositionInLine" : 8
      },
      "34" : {
        "Text" : "# On XWindow requires also below libraries\n",
        "Line" : 254,
        "CharPositionInLine" : 8
      },
      "35" : {
        "Text" : "# NOTE: It could require additional packages installed: libglfw3-dev\n",
        "Line" : 258,
        "CharPositionInLine" : 8
      },
      "36" : {
        "Text" : "# Libraries for Raspberry Pi compiling\n\n# NOTE: Required packages: libasound2-dev (ALSA)\n",
        "Line" : 263,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "# Libraries for web (HTML5) compiling\n",
        "Line" : 268,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# Define all source files required\n",
        "Line" : 272,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Define all object files from source files\n",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# For Android platform we call a custom Makefile.Android\n",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Default target entry\n\n# NOTE: We call this Makefile target or Makefile.Android target\n",
        "Line" : 298,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Project target defined by PROJECT_NAME\n",
        "Line" : 303,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Compile source files\n\n# NOTE: This pattern will compile every module defined on $(OBJS)\n",
        "Line" : 307,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Clean everything\n",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 45,
      "Errorlog" : "line 92:43 token recognition error at: '\\c'\nline 92:101 token recognition error at: '\\b'\nline 92:119 token recognition error at: '\\p'\nline 92:158 token recognition error at: '\\e'\nline 92:201 token recognition error at: '\\M'\nline 92:207 token recognition error at: '\\b'\nline 93:28 token recognition error at: '\\e'\nline 192:51 token recognition error at: '\\w'\nline 192:61 token recognition error at: '\\s'\n"
    },
    "games/koala_seasons/CMakeLists.txt" : {
      "ObjectId" : "7e500d1eeecb1fd1e91f352118402f830a51b4d1",
      "LastModified" : "2019-04-08T10:50:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Grab the screens\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Executable & linking\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Resources\n\n# Copy all of the resource files to the destination\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "games/koala_seasons/Makefile" : {
      "ObjectId" : "25dbe6964c613b78b0b8d731aec8776f09a56947",
      "LastModified" : "2019-04-08T10:50:09Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#**************************************************************************************************\n\n#\n\n#   raylib makefile for Desktop platforms, Raspberry Pi, Android and HTML5\n\n#\n\n#   Copyright (c) 2013-2019 Ramon Santamaria (@raysan5)\n\n#\n\n#   This software is provided \"as-is\", without any express or implied warranty. In no event\n\n#   will the authors be held liable for any damages arising from the use of this software.\n\n#\n\n#   Permission is granted to anyone to use this software for any purpose, including commercial\n\n#   applications, and to alter it and redistribute it freely, subject to the following restrictions:\n\n#\n\n#     1. The origin of this software must not be misrepresented; you must not claim that you\n\n#     wrote the original software. If you use this software in a product, an acknowledgment\n\n#     in the product documentation would be appreciated but is not required.\n\n#\n\n#     2. Altered source versions must be plainly marked as such, and must not be misrepresented\n\n#     as being the original software.\n\n#\n\n#     3. This notice may not be removed or altered from any source distribution.\n\n#\n\n#**************************************************************************************************\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define required raylib variables\n\n# WARNING: To compile to HTML5, code must be redesigned to use emscripten.h and emscripten_set_main_loop()\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Default path for raylib on Raspberry Pi, if installed in different path, update it!\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Library type used for raylib: STATIC (.a) or SHARED (.so/.dll)\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Use external GLFW library instead of rglfw module\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Use Wayland display server protocol on Linux desktop\n\n# by default it uses X11 windowing system\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# NOTE: On PLATFORM_WEB OpenAL Soft backend is used by default (check raylib/src/Makefile)\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Determine PLATFORM_OS in case PLATFORM_DESKTOP selected\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# No uname.exe on MinGW!, but OS=Windows_NT on Windows!\n\n# ifeq ($(UNAME),Msys) -> Windows\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Emscripten required variables\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Define raylib release directory for compiled library\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Define default C compiler: gcc\n\n# NOTE: define g++ compiler if using C++\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# OSX default compiler\n",
        "Line" : 126,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# FreeBSD, OpenBSD, NetBSD, DragonFly default compiler\n",
        "Line" : 130,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# Define RPI cross-compiler\n\n#CC = armv6j-hardfloat-linux-gnueabi-gcc\n",
        "Line" : 136,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# HTML5 emscripten compiler\n",
        "Line" : 142,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Define default make program: Mingw32-make\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Define compiler flags:\n\n#  -O1                  defines optimization level\n\n#  -g                   enable debugging\n\n#  -s                   strip unnecessary data from build\n\n#  -Wall                turns on most, but not all, compiler warnings\n\n#  -std=c99             defines C language mode (standard C from 1999 revision)\n\n#  -std=gnu99           defines C language mode (GNU C from 1999 revision)\n\n#  -Wno-missing-braces  ignore invalid warning (GCC bug 53119)\n\n#  -D_DEFAULT_SOURCE    use with -std=c99 on Linux and PLATFORM_WEB, required for timespec\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Additional flags for compiler (if desired)\n\n#CFLAGS += -Wextra -Wmissing-prototypes -Wstrict-prototypes\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# resources file contains windows exe icon\n\n# -Wl,--subsystem,windows hides the console window\n",
        "Line" : 170,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# -O2                        # if used, also set --memory-init-file 0\n\n# --memory-init-file 0       # to avoid an external memory initialization code file (.mem)\n\n# -s ALLOW_MEMORY_GROWTH=1   # to allow memory resizing\n\n# -s TOTAL_MEMORY=16777216   # to specify heap memory size (default = 16MB)\n\n# -s USE_PTHREADS=1          # multithreading support\n\n# -s WASM=1                  # support Web Assembly (https://github.com/kripken/emscripten/wiki/WebAssembly)\n\n# --preload-file resources   # specify a resources folder for data compilation\n",
        "Line" : 182,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Define a custom shell .html and output extension\n",
        "Line" : 191,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Define include paths for required headers\n\n# NOTE: Several external required libraries (stb and others)\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Define additional directories containing required header files\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# RPI requried libraries\n",
        "Line" : 202,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# Define library paths containing required libs\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Define any libraries required on linking\n\n# if you want to link libraries (libname.so or libname.a), use the -lname\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Libraries for Windows desktop compilation\n",
        "Line" : 226,
        "CharPositionInLine" : 8
      },
      "28" : {
        "Text" : "# Libraries for Debian GNU/Linux desktop compiling\n\n# NOTE: Required packages: libegl1-mesa-dev\n",
        "Line" : 230,
        "CharPositionInLine" : 8
      },
      "29" : {
        "Text" : "# On X11 requires also below libraries\n",
        "Line" : 234,
        "CharPositionInLine" : 8
      },
      "30" : {
        "Text" : "# NOTE: It seems additional libraries are not required any more, latest GLFW just dlopen them\n\n#LDLIBS += -lXrandr -lXinerama -lXi -lXxf86vm -lXcursor\n",
        "Line" : 236,
        "CharPositionInLine" : 8
      },
      "31" : {
        "Text" : "# On Wayland windowing system, additional libraries requires\n",
        "Line" : 239,
        "CharPositionInLine" : 8
      },
      "32" : {
        "Text" : "# Libraries for OSX 10.9 desktop compiling\n\n# NOTE: Required packages: libopenal-dev libegl1-mesa-dev\n",
        "Line" : 245,
        "CharPositionInLine" : 8
      },
      "33" : {
        "Text" : "# Libraries for FreeBSD, OpenBSD, NetBSD, DragonFly desktop compiling\n\n# NOTE: Required packages: mesa-libs\n",
        "Line" : 250,
        "CharPositionInLine" : 8
      },
      "34" : {
        "Text" : "# On XWindow requires also below libraries\n",
        "Line" : 254,
        "CharPositionInLine" : 8
      },
      "35" : {
        "Text" : "# NOTE: It could require additional packages installed: libglfw3-dev\n",
        "Line" : 258,
        "CharPositionInLine" : 8
      },
      "36" : {
        "Text" : "# Libraries for Raspberry Pi compiling\n\n# NOTE: Required packages: libasound2-dev (ALSA)\n",
        "Line" : 263,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "# Libraries for web (HTML5) compiling\n",
        "Line" : 268,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# Define all source files required\n",
        "Line" : 272,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Define all object files from source files\n",
        "Line" : 279,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# For Android platform we call a custom Makefile.Android\n",
        "Line" : 282,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Default target entry\n\n# NOTE: We call this Makefile target or Makefile.Android target\n",
        "Line" : 291,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Project target defined by PROJECT_NAME\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Compile source files\n\n# NOTE: This pattern will compile every module defined on $(OBJS)\n",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Clean everything\n",
        "Line" : 305,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 45,
      "Errorlog" : "line 92:43 token recognition error at: '\\c'\nline 92:101 token recognition error at: '\\b'\nline 92:119 token recognition error at: '\\p'\nline 92:158 token recognition error at: '\\e'\nline 92:201 token recognition error at: '\\M'\nline 92:207 token recognition error at: '\\b'\nline 93:28 token recognition error at: '\\e'\nline 192:51 token recognition error at: '\\w'\nline 192:61 token recognition error at: '\\s'\n"
    },
    "games/light_my_ritual/CMakeLists.txt" : {
      "ObjectId" : "a35a34e061e8ca3cfd9cce16318927650635b3c3",
      "LastModified" : "2019-04-08T10:50:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Grab the screens\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Executable & linking\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Resources\n\n# Copy all of the resource files to the destination\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "games/light_my_ritual/Makefile" : {
      "ObjectId" : "3291bb3e7938a2b481f0d62a1fc2e675dd5f1583",
      "LastModified" : "2019-04-08T10:50:09Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#**************************************************************************************************\n\n#\n\n#   raylib makefile for Desktop platforms, Raspberry Pi, Android and HTML5\n\n#\n\n#   Copyright (c) 2013-2019 Ramon Santamaria (@raysan5)\n\n#\n\n#   This software is provided \"as-is\", without any express or implied warranty. In no event\n\n#   will the authors be held liable for any damages arising from the use of this software.\n\n#\n\n#   Permission is granted to anyone to use this software for any purpose, including commercial\n\n#   applications, and to alter it and redistribute it freely, subject to the following restrictions:\n\n#\n\n#     1. The origin of this software must not be misrepresented; you must not claim that you\n\n#     wrote the original software. If you use this software in a product, an acknowledgment\n\n#     in the product documentation would be appreciated but is not required.\n\n#\n\n#     2. Altered source versions must be plainly marked as such, and must not be misrepresented\n\n#     as being the original software.\n\n#\n\n#     3. This notice may not be removed or altered from any source distribution.\n\n#\n\n#**************************************************************************************************\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define required raylib variables\n\n# WARNING: To compile to HTML5, code must be redesigned to use emscripten.h and emscripten_set_main_loop()\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Default path for raylib on Raspberry Pi, if installed in different path, update it!\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Library type used for raylib: STATIC (.a) or SHARED (.so/.dll)\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Use external GLFW library instead of rglfw module\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Use Wayland display server protocol on Linux desktop\n\n# by default it uses X11 windowing system\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# NOTE: On PLATFORM_WEB OpenAL Soft backend is used by default (check raylib/src/Makefile)\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Determine PLATFORM_OS in case PLATFORM_DESKTOP selected\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# No uname.exe on MinGW!, but OS=Windows_NT on Windows!\n\n# ifeq ($(UNAME),Msys) -> Windows\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Emscripten required variables\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Define raylib release directory for compiled library\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Define default C compiler: gcc\n\n# NOTE: define g++ compiler if using C++\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# OSX default compiler\n",
        "Line" : 126,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# FreeBSD, OpenBSD, NetBSD, DragonFly default compiler\n",
        "Line" : 130,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# Define RPI cross-compiler\n\n#CC = armv6j-hardfloat-linux-gnueabi-gcc\n",
        "Line" : 136,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# HTML5 emscripten compiler\n",
        "Line" : 142,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Define default make program: Mingw32-make\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Define compiler flags:\n\n#  -O1                  defines optimization level\n\n#  -g                   enable debugging\n\n#  -s                   strip unnecessary data from build\n\n#  -Wall                turns on most, but not all, compiler warnings\n\n#  -std=c99             defines C language mode (standard C from 1999 revision)\n\n#  -std=gnu99           defines C language mode (GNU C from 1999 revision)\n\n#  -Wno-missing-braces  ignore invalid warning (GCC bug 53119)\n\n#  -D_DEFAULT_SOURCE    use with -std=c99 on Linux and PLATFORM_WEB, required for timespec\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Additional flags for compiler (if desired)\n\n#CFLAGS += -Wextra -Wmissing-prototypes -Wstrict-prototypes\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# resources file contains windows exe icon\n\n# -Wl,--subsystem,windows hides the console window\n",
        "Line" : 170,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# -O2                        # if used, also set --memory-init-file 0\n\n# --memory-init-file 0       # to avoid an external memory initialization code file (.mem)\n\n# -s ALLOW_MEMORY_GROWTH=1   # to allow memory resizing\n\n# -s TOTAL_MEMORY=16777216   # to specify heap memory size (default = 16MB)\n\n# -s USE_PTHREADS=1          # multithreading support\n\n# -s WASM=1                  # support Web Assembly (https://github.com/kripken/emscripten/wiki/WebAssembly)\n\n# --preload-file resources   # specify a resources folder for data compilation\n",
        "Line" : 182,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Define a custom shell .html and output extension\n",
        "Line" : 191,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Define include paths for required headers\n\n# NOTE: Several external required libraries (stb and others)\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Define additional directories containing required header files\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# RPI requried libraries\n",
        "Line" : 202,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# Define library paths containing required libs\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Define any libraries required on linking\n\n# if you want to link libraries (libname.so or libname.a), use the -lname\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Libraries for Windows desktop compilation\n",
        "Line" : 226,
        "CharPositionInLine" : 8
      },
      "28" : {
        "Text" : "# Libraries for Debian GNU/Linux desktop compiling\n\n# NOTE: Required packages: libegl1-mesa-dev\n",
        "Line" : 230,
        "CharPositionInLine" : 8
      },
      "29" : {
        "Text" : "# On X11 requires also below libraries\n",
        "Line" : 234,
        "CharPositionInLine" : 8
      },
      "30" : {
        "Text" : "# NOTE: It seems additional libraries are not required any more, latest GLFW just dlopen them\n\n#LDLIBS += -lXrandr -lXinerama -lXi -lXxf86vm -lXcursor\n",
        "Line" : 236,
        "CharPositionInLine" : 8
      },
      "31" : {
        "Text" : "# On Wayland windowing system, additional libraries requires\n",
        "Line" : 239,
        "CharPositionInLine" : 8
      },
      "32" : {
        "Text" : "# Libraries for OSX 10.9 desktop compiling\n\n# NOTE: Required packages: libopenal-dev libegl1-mesa-dev\n",
        "Line" : 245,
        "CharPositionInLine" : 8
      },
      "33" : {
        "Text" : "# Libraries for FreeBSD, OpenBSD, NetBSD, DragonFly desktop compiling\n\n# NOTE: Required packages: mesa-libs\n",
        "Line" : 250,
        "CharPositionInLine" : 8
      },
      "34" : {
        "Text" : "# On XWindow requires also below libraries\n",
        "Line" : 254,
        "CharPositionInLine" : 8
      },
      "35" : {
        "Text" : "# NOTE: It could require additional packages installed: libglfw3-dev\n",
        "Line" : 258,
        "CharPositionInLine" : 8
      },
      "36" : {
        "Text" : "# Libraries for Raspberry Pi compiling\n\n# NOTE: Required packages: libasound2-dev (ALSA)\n",
        "Line" : 263,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "# Libraries for web (HTML5) compiling\n",
        "Line" : 268,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# Define all source files required\n",
        "Line" : 272,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Define all object files from source files\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# For Android platform we call a custom Makefile.Android\n",
        "Line" : 281,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Default target entry\n\n# NOTE: We call this Makefile target or Makefile.Android target\n",
        "Line" : 290,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Project target defined by PROJECT_NAME\n",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Compile source files\n\n# NOTE: This pattern will compile every module defined on $(OBJS)\n",
        "Line" : 299,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Clean everything\n",
        "Line" : 304,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 45,
      "Errorlog" : "line 92:43 token recognition error at: '\\c'\nline 92:101 token recognition error at: '\\b'\nline 92:119 token recognition error at: '\\p'\nline 92:158 token recognition error at: '\\e'\nline 92:201 token recognition error at: '\\M'\nline 92:207 token recognition error at: '\\b'\nline 93:28 token recognition error at: '\\e'\nline 192:51 token recognition error at: '\\w'\nline 192:61 token recognition error at: '\\s'\n"
    },
    "games/skully_escape/CMakeLists.txt" : {
      "ObjectId" : "51047ca1469c9fd033f3e8a528f05414880a013b",
      "LastModified" : "2019-04-08T10:50:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Grab the screens\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Executable & linking\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Resources\n\n# Copy all of the resource files to the destination\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "games/skully_escape/Makefile" : {
      "ObjectId" : "4673a549e99e70c15625d2c33ed170bb84f5ac80",
      "LastModified" : "2019-04-08T10:50:09Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#**************************************************************************************************\n\n#\n\n#   raylib makefile for Desktop platforms, Raspberry Pi, Android and HTML5\n\n#\n\n#   Copyright (c) 2013-2019 Ramon Santamaria (@raysan5)\n\n#\n\n#   This software is provided \"as-is\", without any express or implied warranty. In no event\n\n#   will the authors be held liable for any damages arising from the use of this software.\n\n#\n\n#   Permission is granted to anyone to use this software for any purpose, including commercial\n\n#   applications, and to alter it and redistribute it freely, subject to the following restrictions:\n\n#\n\n#     1. The origin of this software must not be misrepresented; you must not claim that you\n\n#     wrote the original software. If you use this software in a product, an acknowledgment\n\n#     in the product documentation would be appreciated but is not required.\n\n#\n\n#     2. Altered source versions must be plainly marked as such, and must not be misrepresented\n\n#     as being the original software.\n\n#\n\n#     3. This notice may not be removed or altered from any source distribution.\n\n#\n\n#**************************************************************************************************\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define required raylib variables\n\n# WARNING: To compile to HTML5, code must be redesigned to use emscripten.h and emscripten_set_main_loop()\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Default path for raylib on Raspberry Pi, if installed in different path, update it!\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Library type used for raylib: STATIC (.a) or SHARED (.so/.dll)\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Use external GLFW library instead of rglfw module\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Use Wayland display server protocol on Linux desktop\n\n# by default it uses X11 windowing system\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# NOTE: On PLATFORM_WEB OpenAL Soft backend is used by default (check raylib/src/Makefile)\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Determine PLATFORM_OS in case PLATFORM_DESKTOP selected\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# No uname.exe on MinGW!, but OS=Windows_NT on Windows!\n\n# ifeq ($(UNAME),Msys) -> Windows\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Emscripten required variables\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Define raylib release directory for compiled library\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Define default C compiler: gcc\n\n# NOTE: define g++ compiler if using C++\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# OSX default compiler\n",
        "Line" : 126,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# FreeBSD, OpenBSD, NetBSD, DragonFly default compiler\n",
        "Line" : 130,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# Define RPI cross-compiler\n\n#CC = armv6j-hardfloat-linux-gnueabi-gcc\n",
        "Line" : 136,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# HTML5 emscripten compiler\n",
        "Line" : 142,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Define default make program: Mingw32-make\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Define compiler flags:\n\n#  -O1                  defines optimization level\n\n#  -g                   enable debugging\n\n#  -s                   strip unnecessary data from build\n\n#  -Wall                turns on most, but not all, compiler warnings\n\n#  -std=c99             defines C language mode (standard C from 1999 revision)\n\n#  -std=gnu99           defines C language mode (GNU C from 1999 revision)\n\n#  -Wno-missing-braces  ignore invalid warning (GCC bug 53119)\n\n#  -D_DEFAULT_SOURCE    use with -std=c99 on Linux and PLATFORM_WEB, required for timespec\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Additional flags for compiler (if desired)\n\n#CFLAGS += -Wextra -Wmissing-prototypes -Wstrict-prototypes\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# resources file contains windows exe icon\n\n# -Wl,--subsystem,windows hides the console window\n",
        "Line" : 170,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# -O2                        # if used, also set --memory-init-file 0\n\n# --memory-init-file 0       # to avoid an external memory initialization code file (.mem)\n\n# -s ALLOW_MEMORY_GROWTH=1   # to allow memory resizing\n\n# -s TOTAL_MEMORY=16777216   # to specify heap memory size (default = 16MB)\n\n# -s USE_PTHREADS=1          # multithreading support\n\n# -s WASM=1                  # support Web Assembly (https://github.com/kripken/emscripten/wiki/WebAssembly)\n\n# --preload-file resources   # specify a resources folder for data compilation\n",
        "Line" : 182,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Define a custom shell .html and output extension\n",
        "Line" : 191,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Define include paths for required headers\n\n# NOTE: Several external required libraries (stb and others)\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Define additional directories containing required header files\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# RPI requried libraries\n",
        "Line" : 202,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# Define library paths containing required libs\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Define any libraries required on linking\n\n# if you want to link libraries (libname.so or libname.a), use the -lname\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Libraries for Windows desktop compilation\n",
        "Line" : 226,
        "CharPositionInLine" : 8
      },
      "28" : {
        "Text" : "# Libraries for Debian GNU/Linux desktop compiling\n\n# NOTE: Required packages: libegl1-mesa-dev\n",
        "Line" : 230,
        "CharPositionInLine" : 8
      },
      "29" : {
        "Text" : "# On X11 requires also below libraries\n",
        "Line" : 234,
        "CharPositionInLine" : 8
      },
      "30" : {
        "Text" : "# NOTE: It seems additional libraries are not required any more, latest GLFW just dlopen them\n\n#LDLIBS += -lXrandr -lXinerama -lXi -lXxf86vm -lXcursor\n",
        "Line" : 236,
        "CharPositionInLine" : 8
      },
      "31" : {
        "Text" : "# On Wayland windowing system, additional libraries requires\n",
        "Line" : 239,
        "CharPositionInLine" : 8
      },
      "32" : {
        "Text" : "# Libraries for OSX 10.9 desktop compiling\n\n# NOTE: Required packages: libopenal-dev libegl1-mesa-dev\n",
        "Line" : 245,
        "CharPositionInLine" : 8
      },
      "33" : {
        "Text" : "# Libraries for FreeBSD, OpenBSD, NetBSD, DragonFly desktop compiling\n\n# NOTE: Required packages: mesa-libs\n",
        "Line" : 250,
        "CharPositionInLine" : 8
      },
      "34" : {
        "Text" : "# On XWindow requires also below libraries\n",
        "Line" : 254,
        "CharPositionInLine" : 8
      },
      "35" : {
        "Text" : "# NOTE: It could require additional packages installed: libglfw3-dev\n",
        "Line" : 258,
        "CharPositionInLine" : 8
      },
      "36" : {
        "Text" : "# Libraries for Raspberry Pi compiling\n\n# NOTE: Required packages: libasound2-dev (ALSA)\n",
        "Line" : 263,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "# Libraries for web (HTML5) compiling\n",
        "Line" : 268,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# Define all source files required\n",
        "Line" : 272,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Define all object files from source files\n",
        "Line" : 288,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# For Android platform we call a custom Makefile.Android\n",
        "Line" : 291,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Default target entry\n\n# NOTE: We call this Makefile target or Makefile.Android target\n",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Project target defined by PROJECT_NAME\n",
        "Line" : 305,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Compile source files\n\n# NOTE: This pattern will compile every module defined on $(OBJS)\n",
        "Line" : 309,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Clean everything\n",
        "Line" : 314,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 45,
      "Errorlog" : "line 92:43 token recognition error at: '\\c'\nline 92:101 token recognition error at: '\\b'\nline 92:119 token recognition error at: '\\p'\nline 92:158 token recognition error at: '\\e'\nline 92:201 token recognition error at: '\\M'\nline 92:207 token recognition error at: '\\b'\nline 93:28 token recognition error at: '\\e'\nline 192:51 token recognition error at: '\\w'\nline 192:61 token recognition error at: '\\s'\n"
    },
    "games/transmission/Makefile" : {
      "ObjectId" : "f62fe0804597fbf6327ddab0efa1e15688cca457",
      "LastModified" : "2019-04-08T10:50:09Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#**************************************************************************************************\n\n#\n\n#   raylib makefile for Desktop platforms, Raspberry Pi, Android and HTML5\n\n#\n\n#   Copyright (c) 2013-2019 Ramon Santamaria (@raysan5)\n\n#\n\n#   This software is provided \"as-is\", without any express or implied warranty. In no event\n\n#   will the authors be held liable for any damages arising from the use of this software.\n\n#\n\n#   Permission is granted to anyone to use this software for any purpose, including commercial\n\n#   applications, and to alter it and redistribute it freely, subject to the following restrictions:\n\n#\n\n#     1. The origin of this software must not be misrepresented; you must not claim that you\n\n#     wrote the original software. If you use this software in a product, an acknowledgment\n\n#     in the product documentation would be appreciated but is not required.\n\n#\n\n#     2. Altered source versions must be plainly marked as such, and must not be misrepresented\n\n#     as being the original software.\n\n#\n\n#     3. This notice may not be removed or altered from any source distribution.\n\n#\n\n#**************************************************************************************************\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define required raylib variables\n\n# WARNING: To compile to HTML5, code must be redesigned to use emscripten.h and emscripten_set_main_loop()\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Default path for raylib on Raspberry Pi, if installed in different path, update it!\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Library type used for raylib: STATIC (.a) or SHARED (.so/.dll)\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Use external GLFW library instead of rglfw module\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Use Wayland display server protocol on Linux desktop\n\n# by default it uses X11 windowing system\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# NOTE: On PLATFORM_WEB OpenAL Soft backend is used by default (check raylib/src/Makefile)\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Determine PLATFORM_OS in case PLATFORM_DESKTOP selected\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# No uname.exe on MinGW!, but OS=Windows_NT on Windows!\n\n# ifeq ($(UNAME),Msys) -> Windows\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Emscripten required variables\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Define raylib release directory for compiled library\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Define default C compiler: gcc\n\n# NOTE: define g++ compiler if using C++\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# OSX default compiler\n",
        "Line" : 126,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# FreeBSD, OpenBSD, NetBSD, DragonFly default compiler\n",
        "Line" : 130,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# Define RPI cross-compiler\n\n#CC = armv6j-hardfloat-linux-gnueabi-gcc\n",
        "Line" : 136,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# HTML5 emscripten compiler\n",
        "Line" : 142,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Define default make program: Mingw32-make\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Define compiler flags:\n\n#  -O1                  defines optimization level\n\n#  -g                   enable debugging\n\n#  -s                   strip unnecessary data from build\n\n#  -Wall                turns on most, but not all, compiler warnings\n\n#  -std=c99             defines C language mode (standard C from 1999 revision)\n\n#  -std=gnu99           defines C language mode (GNU C from 1999 revision)\n\n#  -Wno-missing-braces  ignore invalid warning (GCC bug 53119)\n\n#  -D_DEFAULT_SOURCE    use with -std=c99 on Linux and PLATFORM_WEB, required for timespec\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Additional flags for compiler (if desired)\n\n#CFLAGS += -Wextra -Wmissing-prototypes -Wstrict-prototypes\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# resources file contains windows exe icon\n\n# -Wl,--subsystem,windows hides the console window\n",
        "Line" : 170,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# -O2                        # if used, also set --memory-init-file 0\n\n# --memory-init-file 0       # to avoid an external memory initialization code file (.mem)\n\n# -s ALLOW_MEMORY_GROWTH=1   # to allow memory resizing\n\n# -s TOTAL_MEMORY=16777216   # to specify heap memory size (default = 16MB)\n\n# -s USE_PTHREADS=1          # multithreading support\n\n# -s WASM=1                  # support Web Assembly (https://github.com/kripken/emscripten/wiki/WebAssembly)\n\n# --preload-file resources   # specify a resources folder for data compilation\n",
        "Line" : 182,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Define a custom shell .html and output extension\n",
        "Line" : 191,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Define include paths for required headers\n\n# NOTE: Several external required libraries (stb and others)\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Define additional directories containing required header files\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# RPI requried libraries\n",
        "Line" : 202,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# Define library paths containing required libs\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Define any libraries required on linking\n\n# if you want to link libraries (libname.so or libname.a), use the -lname\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Libraries for Windows desktop compilation\n",
        "Line" : 226,
        "CharPositionInLine" : 8
      },
      "28" : {
        "Text" : "# Libraries for Debian GNU/Linux desktop compiling\n\n# NOTE: Required packages: libegl1-mesa-dev\n",
        "Line" : 230,
        "CharPositionInLine" : 8
      },
      "29" : {
        "Text" : "# On X11 requires also below libraries\n",
        "Line" : 234,
        "CharPositionInLine" : 8
      },
      "30" : {
        "Text" : "# NOTE: It seems additional libraries are not required any more, latest GLFW just dlopen them\n\n#LDLIBS += -lXrandr -lXinerama -lXi -lXxf86vm -lXcursor\n",
        "Line" : 236,
        "CharPositionInLine" : 8
      },
      "31" : {
        "Text" : "# On Wayland windowing system, additional libraries requires\n",
        "Line" : 239,
        "CharPositionInLine" : 8
      },
      "32" : {
        "Text" : "# Libraries for OSX 10.9 desktop compiling\n\n# NOTE: Required packages: libopenal-dev libegl1-mesa-dev\n",
        "Line" : 245,
        "CharPositionInLine" : 8
      },
      "33" : {
        "Text" : "# Libraries for FreeBSD, OpenBSD, NetBSD, DragonFly desktop compiling\n\n# NOTE: Required packages: mesa-libs\n",
        "Line" : 250,
        "CharPositionInLine" : 8
      },
      "34" : {
        "Text" : "# On XWindow requires also below libraries\n",
        "Line" : 254,
        "CharPositionInLine" : 8
      },
      "35" : {
        "Text" : "# NOTE: It could require additional packages installed: libglfw3-dev\n",
        "Line" : 258,
        "CharPositionInLine" : 8
      },
      "36" : {
        "Text" : "# Libraries for Raspberry Pi compiling\n\n# NOTE: Required packages: libasound2-dev (ALSA)\n",
        "Line" : 263,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "# Libraries for web (HTML5) compiling\n",
        "Line" : 268,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# Define all source files required\n",
        "Line" : 272,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Define all object files from source files\n",
        "Line" : 280,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# For Android platform we call a custom Makefile.Android\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Default target entry\n\n# NOTE: We call this Makefile target or Makefile.Android target\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Project target defined by PROJECT_NAME\n",
        "Line" : 297,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Compile source files\n\n# NOTE: This pattern will compile every module defined on $(OBJS)\n",
        "Line" : 301,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Clean everything\n",
        "Line" : 306,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 45,
      "Errorlog" : "line 92:43 token recognition error at: '\\c'\nline 92:101 token recognition error at: '\\b'\nline 92:119 token recognition error at: '\\p'\nline 92:158 token recognition error at: '\\e'\nline 92:201 token recognition error at: '\\M'\nline 92:207 token recognition error at: '\\b'\nline 93:28 token recognition error at: '\\e'\nline 192:51 token recognition error at: '\\w'\nline 192:61 token recognition error at: '\\s'\n"
    },
    "games/wave_collector/CMakeLists.txt" : {
      "ObjectId" : "a87dbeda81e77fd02461a3f89a2e59f1810dced7",
      "LastModified" : "2019-04-08T10:50:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Grab the screens\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Executable & linking\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Resources\n\n# Copy all of the resource files to the destination\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "games/wave_collector/Makefile" : {
      "ObjectId" : "703383b89c242d5ab04edac5de8dafd8d397309c",
      "LastModified" : "2019-04-08T10:50:09Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#**************************************************************************************************\n\n#\n\n#   raylib makefile for Desktop platforms, Raspberry Pi, Android and HTML5\n\n#\n\n#   Copyright (c) 2013-2019 Ramon Santamaria (@raysan5)\n\n#\n\n#   This software is provided \"as-is\", without any express or implied warranty. In no event\n\n#   will the authors be held liable for any damages arising from the use of this software.\n\n#\n\n#   Permission is granted to anyone to use this software for any purpose, including commercial\n\n#   applications, and to alter it and redistribute it freely, subject to the following restrictions:\n\n#\n\n#     1. The origin of this software must not be misrepresented; you must not claim that you\n\n#     wrote the original software. If you use this software in a product, an acknowledgment\n\n#     in the product documentation would be appreciated but is not required.\n\n#\n\n#     2. Altered source versions must be plainly marked as such, and must not be misrepresented\n\n#     as being the original software.\n\n#\n\n#     3. This notice may not be removed or altered from any source distribution.\n\n#\n\n#**************************************************************************************************\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define required raylib variables\n\n# WARNING: To compile to HTML5, code must be redesigned to use emscripten.h and emscripten_set_main_loop()\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Default path for raylib on Raspberry Pi, if installed in different path, update it!\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Library type used for raylib: STATIC (.a) or SHARED (.so/.dll)\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Use external GLFW library instead of rglfw module\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Use Wayland display server protocol on Linux desktop\n\n# by default it uses X11 windowing system\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# NOTE: On PLATFORM_WEB OpenAL Soft backend is used by default (check raylib/src/Makefile)\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Determine PLATFORM_OS in case PLATFORM_DESKTOP selected\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# No uname.exe on MinGW!, but OS=Windows_NT on Windows!\n\n# ifeq ($(UNAME),Msys) -> Windows\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Emscripten required variables\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Define raylib release directory for compiled library\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Define default C compiler: gcc\n\n# NOTE: define g++ compiler if using C++\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# OSX default compiler\n",
        "Line" : 126,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# FreeBSD, OpenBSD, NetBSD, DragonFly default compiler\n",
        "Line" : 130,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# Define RPI cross-compiler\n\n#CC = armv6j-hardfloat-linux-gnueabi-gcc\n",
        "Line" : 136,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# HTML5 emscripten compiler\n",
        "Line" : 142,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Define default make program: Mingw32-make\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Define compiler flags:\n\n#  -O1                  defines optimization level\n\n#  -g                   enable debugging\n\n#  -s                   strip unnecessary data from build\n\n#  -Wall                turns on most, but not all, compiler warnings\n\n#  -std=c99             defines C language mode (standard C from 1999 revision)\n\n#  -std=gnu99           defines C language mode (GNU C from 1999 revision)\n\n#  -Wno-missing-braces  ignore invalid warning (GCC bug 53119)\n\n#  -D_DEFAULT_SOURCE    use with -std=c99 on Linux and PLATFORM_WEB, required for timespec\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Additional flags for compiler (if desired)\n\n#CFLAGS += -Wextra -Wmissing-prototypes -Wstrict-prototypes\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# resources file contains windows exe icon\n\n# -Wl,--subsystem,windows hides the console window\n",
        "Line" : 170,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# -O2                        # if used, also set --memory-init-file 0\n\n# --memory-init-file 0       # to avoid an external memory initialization code file (.mem)\n\n# -s ALLOW_MEMORY_GROWTH=1   # to allow memory resizing\n\n# -s TOTAL_MEMORY=16777216   # to specify heap memory size (default = 16MB)\n\n# -s USE_PTHREADS=1          # multithreading support\n\n# -s WASM=1                  # support Web Assembly (https://github.com/kripken/emscripten/wiki/WebAssembly)\n\n# --preload-file resources   # specify a resources folder for data compilation\n",
        "Line" : 182,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Define a custom shell .html and output extension\n",
        "Line" : 191,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Define include paths for required headers\n\n# NOTE: Several external required libraries (stb and others)\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Define additional directories containing required header files\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# RPI requried libraries\n",
        "Line" : 202,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# Define library paths containing required libs\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Define any libraries required on linking\n\n# if you want to link libraries (libname.so or libname.a), use the -lname\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Libraries for Windows desktop compilation\n",
        "Line" : 226,
        "CharPositionInLine" : 8
      },
      "28" : {
        "Text" : "# Libraries for Debian GNU/Linux desktop compiling\n\n# NOTE: Required packages: libegl1-mesa-dev\n",
        "Line" : 230,
        "CharPositionInLine" : 8
      },
      "29" : {
        "Text" : "# On X11 requires also below libraries\n",
        "Line" : 234,
        "CharPositionInLine" : 8
      },
      "30" : {
        "Text" : "# NOTE: It seems additional libraries are not required any more, latest GLFW just dlopen them\n\n#LDLIBS += -lXrandr -lXinerama -lXi -lXxf86vm -lXcursor\n",
        "Line" : 236,
        "CharPositionInLine" : 8
      },
      "31" : {
        "Text" : "# On Wayland windowing system, additional libraries requires\n",
        "Line" : 239,
        "CharPositionInLine" : 8
      },
      "32" : {
        "Text" : "# Libraries for OSX 10.9 desktop compiling\n\n# NOTE: Required packages: libopenal-dev libegl1-mesa-dev\n",
        "Line" : 245,
        "CharPositionInLine" : 8
      },
      "33" : {
        "Text" : "# Libraries for FreeBSD desktop compiling\n\n# NOTE: Required packages: mesa-libs\n",
        "Line" : 250,
        "CharPositionInLine" : 8
      },
      "34" : {
        "Text" : "# On XWindow requires also below libraries\n",
        "Line" : 254,
        "CharPositionInLine" : 8
      },
      "35" : {
        "Text" : "# NOTE: It could require additional packages installed: libglfw3-dev\n",
        "Line" : 258,
        "CharPositionInLine" : 8
      },
      "36" : {
        "Text" : "# Libraries for Raspberry Pi compiling\n\n# NOTE: Required packages: libasound2-dev (ALSA)\n",
        "Line" : 263,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "# Libraries for web (HTML5) compiling\n",
        "Line" : 268,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# Define all source files required\n",
        "Line" : 272,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Define all object files from source files\n",
        "Line" : 279,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# For Android platform we call a custom Makefile.Android\n",
        "Line" : 282,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Default target entry\n\n# NOTE: We call this Makefile target or Makefile.Android target\n",
        "Line" : 291,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Project target defined by PROJECT_NAME\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Compile source files\n\n# NOTE: This pattern will compile every module defined on $(OBJS)\n",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Clean everything\n",
        "Line" : 305,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 45,
      "Errorlog" : "line 92:43 token recognition error at: '\\c'\nline 92:101 token recognition error at: '\\b'\nline 92:119 token recognition error at: '\\p'\nline 92:158 token recognition error at: '\\e'\nline 92:201 token recognition error at: '\\M'\nline 92:207 token recognition error at: '\\b'\nline 93:28 token recognition error at: '\\e'\nline 192:51 token recognition error at: '\\w'\nline 192:61 token recognition error at: '\\s'\n"
    },
    "projects/CMake/CMakeLists.txt" : {
      "ObjectId" : "cf1d65a62c8a1800d73b13fd126b77c92e9b9c7d",
      "LastModified" : "2019-04-08T10:50:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FetchContent is available in 3.11+\n",
        "Line" : 1,
        "CharPositionInLine" : 37
      },
      "1" : {
        "Text" : "# Let CMake search for a raylib-config.cmake\n",
        "Line" : 4,
        "CharPositionInLine" : 31
      },
      "2" : {
        "Text" : "# You could change the QUIET above to REQUIRED and remove this if() clause\n\n# This part downloads raylib and builds it if it's not installed on your system\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If there's none, fetch and build raylib\n",
        "Line" : 8,
        "CharPositionInLine" : 22
      },
      "4" : {
        "Text" : "# Have we downloaded raylib yet?\n",
        "Line" : 17,
        "CharPositionInLine" : 28
      },
      "5" : {
        "Text" : "# don't build the supplied examples\n\n# or games\n",
        "Line" : 21,
        "CharPositionInLine" : 48
      },
      "6" : {
        "Text" : "# build raylib\n",
        "Line" : 24,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# This is the main part:\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#set(raylib_VERBOSE 1)\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# That's it! You should have an example executable that you can run. Have fun!\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "projects/VSCode/Makefile" : {
      "ObjectId" : "3cffaaba1b47c1dfdd5ed7420754f0f048b8ce2f",
      "LastModified" : "2019-04-08T10:50:09Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#**************************************************************************************************\n\n#\n\n#   raylib makefile for Desktop platforms, Raspberry Pi, Android and HTML5\n\n#\n\n#   Copyright (c) 2013-2019 Ramon Santamaria (@raysan5)\n\n#\n\n#   This software is provided \"as-is\", without any express or implied warranty. In no event\n\n#   will the authors be held liable for any damages arising from the use of this software.\n\n#\n\n#   Permission is granted to anyone to use this software for any purpose, including commercial\n\n#   applications, and to alter it and redistribute it freely, subject to the following restrictions:\n\n#\n\n#     1. The origin of this software must not be misrepresented; you must not claim that you\n\n#     wrote the original software. If you use this software in a product, an acknowledgment\n\n#     in the product documentation would be appreciated but is not required.\n\n#\n\n#     2. Altered source versions must be plainly marked as such, and must not be misrepresented\n\n#     as being the original software.\n\n#\n\n#     3. This notice may not be removed or altered from any source distribution.\n\n#\n\n#**************************************************************************************************\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define required raylib variables\n\n# WARNING: To compile to HTML5, code must be redesigned to use emscripten.h and emscripten_set_main_loop()\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Default path for raylib on Raspberry Pi, if installed in different path, update it!\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Library type used for raylib: STATIC (.a) or SHARED (.so/.dll)\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Use external GLFW library instead of rglfw module\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Use Wayland display server protocol on Linux desktop\n\n# by default it uses X11 windowing system\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# NOTE: On PLATFORM_WEB OpenAL Soft backend is used by default (check raylib/src/Makefile)\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Determine PLATFORM_OS in case PLATFORM_DESKTOP selected\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# No uname.exe on MinGW!, but OS=Windows_NT on Windows!\n\n# ifeq ($(UNAME),Msys) -> Windows\n",
        "Line" : 53,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Emscripten required variables\n",
        "Line" : 88,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Define raylib release directory for compiled library\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Define default C compiler: gcc\n\n# NOTE: define g++ compiler if using C++\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# OSX default compiler\n",
        "Line" : 128,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# FreeBSD, OpenBSD, NetBSD, DragonFly default compiler\n",
        "Line" : 132,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# Define RPI cross-compiler\n\n#CC = armv6j-hardfloat-linux-gnueabi-gcc\n",
        "Line" : 138,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# HTML5 emscripten compiler\n",
        "Line" : 144,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Define default make program: Mingw32-make\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Define compiler flags:\n\n#  -O1                  defines optimization level\n\n#  -g                   enable debugging\n\n#  -s                   strip unnecessary data from build\n\n#  -Wall                turns on most, but not all, compiler warnings\n\n#  -std=c99             defines C language mode (standard C from 1999 revision)\n\n#  -std=gnu99           defines C language mode (GNU C from 1999 revision)\n\n#  -Wno-missing-braces  ignore invalid warning (GCC bug 53119)\n\n#  -D_DEFAULT_SOURCE    use with -std=c99 on Linux and PLATFORM_WEB, required for timespec\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Additional flags for compiler (if desired)\n\n#CFLAGS += -Wextra -Wmissing-prototypes -Wstrict-prototypes\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# resources file contains windows exe icon\n\n# -Wl,--subsystem,windows hides the console window\n",
        "Line" : 180,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# -O2                        # if used, also set --memory-init-file 0\n\n# --memory-init-file 0       # to avoid an external memory initialization code file (.mem)\n\n# -s ALLOW_MEMORY_GROWTH=1   # to allow memory resizing\n\n# -s TOTAL_MEMORY=16777216   # to specify heap memory size (default = 16MB)\n\n# -s USE_PTHREADS=1          # multithreading support\n\n# -s WASM=1                  # support Web Assembly (https://github.com/kripken/emscripten/wiki/WebAssembly)\n\n# --preload-file resources   # specify a resources folder for data compilation\n",
        "Line" : 193,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Define a custom shell .html and output extension\n",
        "Line" : 202,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Define include paths for required headers\n\n# NOTE: Several external required libraries (stb and others)\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Define additional directories containing required header files\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# RPI requried libraries\n",
        "Line" : 213,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# Define library paths containing required libs\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Define any libraries required on linking\n\n# if you want to link libraries (libname.so or libname.a), use the -lname\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Libraries for Windows desktop compilation\n",
        "Line" : 237,
        "CharPositionInLine" : 8
      },
      "28" : {
        "Text" : "# Required for physac examples\n\n#LDLIBS += -static -lpthread\n",
        "Line" : 240,
        "CharPositionInLine" : 8
      },
      "29" : {
        "Text" : "# Libraries for Debian GNU/Linux desktop compiling\n\n# NOTE: Required packages: libegl1-mesa-dev\n",
        "Line" : 244,
        "CharPositionInLine" : 8
      },
      "30" : {
        "Text" : "# On X11 requires also below libraries\n",
        "Line" : 248,
        "CharPositionInLine" : 8
      },
      "31" : {
        "Text" : "# NOTE: It seems additional libraries are not required any more, latest GLFW just dlopen them\n\n#LDLIBS += -lXrandr -lXinerama -lXi -lXxf86vm -lXcursor\n",
        "Line" : 250,
        "CharPositionInLine" : 8
      },
      "32" : {
        "Text" : "# On Wayland windowing system, additional libraries requires\n",
        "Line" : 253,
        "CharPositionInLine" : 8
      },
      "33" : {
        "Text" : "# Libraries for OSX 10.9 desktop compiling\n\n# NOTE: Required packages: libopenal-dev libegl1-mesa-dev\n",
        "Line" : 259,
        "CharPositionInLine" : 8
      },
      "34" : {
        "Text" : "# Libraries for FreeBSD, OpenBSD, NetBSD, DragonFly desktop compiling\n\n# NOTE: Required packages: mesa-libs\n",
        "Line" : 264,
        "CharPositionInLine" : 8
      },
      "35" : {
        "Text" : "# On XWindow requires also below libraries\n",
        "Line" : 268,
        "CharPositionInLine" : 8
      },
      "36" : {
        "Text" : "# NOTE: It could require additional packages installed: libglfw3-dev\n",
        "Line" : 272,
        "CharPositionInLine" : 8
      },
      "37" : {
        "Text" : "# Libraries for Raspberry Pi compiling\n\n# NOTE: Required packages: libasound2-dev (ALSA)\n",
        "Line" : 277,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# Libraries for web (HTML5) compiling\n",
        "Line" : 282,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "# Define a recursive wildcard function\n",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Define all source files required\n",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Define all object files from source files\n",
        "Line" : 293,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "#OBJS = $(SRC:$(SRC_DIR)/%.c=$(OBJ_DIR)/%.o)\n",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# For Android platform we call a custom Makefile.Android\n",
        "Line" : 298,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Default target entry\n\n# NOTE: We call this Makefile target or Makefile.Android target\n",
        "Line" : 307,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Project target defined by PROJECT_NAME\n",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Compile source files\n\n# NOTE: This pattern will compile every module defined on $(OBJS)\n\n#%.o: %.c\n",
        "Line" : 316,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Clean everything\n",
        "Line" : 322,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48,
      "Errorlog" : "line 92:40 token recognition error at: '\\p'\nline 94:53 token recognition error at: '\\c'\nline 94:111 token recognition error at: '\\b'\nline 94:129 token recognition error at: '\\p'\nline 94:168 token recognition error at: '\\e'\nline 94:211 token recognition error at: '\\M'\nline 94:217 token recognition error at: '\\b'\nline 95:39 token recognition error at: '\\e'\nline 203:51 token recognition error at: '\\w'\nline 203:61 token recognition error at: '\\s'\n"
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "c65a4996f8e0431009c96fd0b674d824d0a1289a",
      "LastModified" : "2019-04-08T10:50:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Setup the project and settings\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Get the sources together\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Explicitly check against \"ON\", because USE_EXTERNAL_GLFW is a tristate option\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "### Config options ###\n\n# Translate the config options to what raylib wants\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Need to force OpenGL 3.3 on OS X\n\n# See: https://github.com/raysan5/raylib/issues/341\n",
        "Line" : 63,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Change the name of the output library\n",
        "Line" : 95,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Keep lib*.(a|dll) name, but avoid *.lib files overwriting each other on Windows\n",
        "Line" : 168,
        "CharPositionInLine" : 16
      },
      "7" : {
        "Text" : "# populates raylib_{FOUND, INCLUDE_DIRS, LIBRARIES, LDFLAGS, DEFINITIONS}\n",
        "Line" : 243,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Copy the header files to the build directory\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Print the flags for the user\n",
        "Line" : 254,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Packaging\n",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Remove this, if you want the NSIS installer on Windows\n",
        "Line" : 270,
        "CharPositionInLine" : 31
      },
      "CommentCount" : 12
    },
    "src/Makefile" : {
      "ObjectId" : "997f041c96c2bf2294767fddf78e0fdc8ad45d43",
      "LastModified" : "2019-04-12T11:29:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#******************************************************************************\n\n#\n\n#  raylib makefile\n\n#\n\n#  Platforms supported:\n\n#    PLATFORM_DESKTOP:  Windows (Win32, Win64)\n\n#    PLATFORM_DESKTOP:  Linux (32 and 64 bit)\n\n#    PLATFORM_DESKTOP:  OSX/macOS\n\n#    PLATFORM_DESKTOP:  FreeBSD, OpenBSD, NetBSD, DragonFly\n\n#    PLATFORM_ANDROID:  Android (ARM, ARM64)\n\n#    PLATFORM_RPI:      Raspberry Pi (Raspbian)\n\n#    PLATFORM_WEB:      HTML5 (Chrome, Firefox)\n\n#\n\n#  Many thanks to Milan Nikolic (@gen2brain) for implementing Android platform pipeline.\n\n#  Many thanks to Emanuele Petriglia for his contribution on GNU/Linux pipeline.\n\n#\n\n#  Copyright (c) 2014-2019 Ramon Santamaria (@raysan5)\n\n#\n\n#  This software is provided \"as-is\", without any express or implied warranty.\n\n#  In no event will the authors be held liable for any damages arising from\n\n#  the use of this software.\n\n#\n\n#  Permission is granted to anyone to use this software for any purpose,\n\n#  including commercial applications, and to alter it and redistribute it\n\n#  freely, subject to the following restrictions:\n\n#\n\n#    1. The origin of this software must not be misrepresented; you must not\n\n#    claim that you wrote the original software. If you use this software in a\n\n#    product, an acknowledgment in the product documentation would be\n\n#    appreciated but is not required.\n\n#\n\n#    2. Altered source versions must be plainly marked as such, and must not\n\n#    be misrepresented as being the original software.\n\n#\n\n#    3. This notice may not be removed or altered from any source distribution.\n\n#\n\n#******************************************************************************\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Please read the wiki to know how to compile raylib, because there are different methods.\n\n# https://github.com/raysan5/raylib/wiki\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Define required raylib variables\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# See below for alternatives.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Define default options\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# One of PLATFORM_DESKTOP, PLATFORM_RPI, PLATFORM_ANDROID, PLATFORM_WEB\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Library type used for raylib: STATIC (.a) or SHARED (.so/.dll)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Build mode for library: DEBUG or RELEASE\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Include raylib modules on compilation\n\n# NOTE: Some programs like tools could not require those modules\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Use external GLFW library instead of rglfw module\n\n# TODO: Review usage of examples on Linux.\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Use Wayland display server protocol on Linux desktop\n\n# by default it uses X11 windowing system\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# See below for more GRAPHICS options.\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# See below for RAYLIB_RELEASE_PATH.\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# See install target for *_INSTALL_PATH locations.\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Use cross-compiler for PLATFORM_RPI\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Determine if the file has root access (only for installing raylib)\n\n# \"whoami\" prints the name of the user that calls him (so, if it is the root\n\n# user, \"whoami\" prints \"root\").\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# By default we suppose we are working on Windows\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Determine PLATFORM_OS in case PLATFORM_DESKTOP selected\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# No uname.exe on MinGW!, but OS=Windows_NT on Windows!\n\n# ifeq ($(UNAME),Msys) -> Windows\n",
        "Line" : 105,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# RAYLIB_PATH adjustment for different platforms.\n\n# If using GNU make, we can get the full path to the top of the tree. Windows? BSD?\n\n# Required for ldconfig or other tools that do not perform path expansion.\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Default path for raylib on Raspberry Pi, if installed in different path, update it!\n\n# TODO: update install: target in src/Makefile for RPI, consider relation to LINUX.\n\n# WARNING: The following is copied from examples/Makefile and is here only for reference.\n\n# Consequences of enabling this are UNKNOWN. Please test and report.\n\n#ifeq ($(PLATFORM),PLATFORM_RPI)\n\n#    RAYLIB_PATH       ?= /home/pi/raylib\n\n#endif\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Emscripten required variables\n",
        "Line" : 156,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Android architecture: ARM64\n\n# Starting at 2019 using ARM64 is mandatory for published apps\n",
        "Line" : 167,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# Android required path variables\n\n# NOTE: Android NDK is just required to generate the standalone toolchain,\n\n# in case is not already provided\n",
        "Line" : 172,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# Android standalone toolchain path\n",
        "Line" : 177,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# Define raylib source code path\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Define output directory for compiled library, defaults to src directory\n\n# NOTE: If externally provided, make sure directory exists\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Define raylib graphics api depending on selected platform\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# By default use OpenGL 3.3 on desktop platforms\n",
        "Line" : 197,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "#GRAPHICS = GRAPHICS_API_OPENGL_11  # Uncomment to use OpenGL 1.1\n\n#GRAPHICS = GRAPHICS_API_OPENGL_21  # Uncomment to use OpenGL 2.1\n",
        "Line" : 199,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# On RPI OpenGL ES 2.0 must be used\n",
        "Line" : 203,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# On HTML5 OpenGL ES 2.0 is used, emscripten translates it to WebGL 1.0\n",
        "Line" : 207,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# By default use OpenGL ES 2.0 on Android\n",
        "Line" : 211,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "# Define default C compiler and archiver to pack library\n\n# NOTE: define g++ compiler if using C++\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# OSX default compiler\n",
        "Line" : 222,
        "CharPositionInLine" : 8
      },
      "35" : {
        "Text" : "# FreeBSD, OpenBSD, NetBSD, DragonFly default compiler\n",
        "Line" : 227,
        "CharPositionInLine" : 8
      },
      "36" : {
        "Text" : "# Define RPI cross-compiler\n\n#CC = armv6j-hardfloat-linux-gnueabi-gcc\n",
        "Line" : 233,
        "CharPositionInLine" : 8
      },
      "37" : {
        "Text" : "# HTML5 emscripten compiler\n",
        "Line" : 240,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# Android toolchain (must be provided for desired architecture and compiler)\n",
        "Line" : 244,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "# Define compiler flags:\n\n#  -O1                   defines optimization level\n\n#  -g                    enable debugging\n\n#  -s                    strip unnecessary data from build\n\n#  -Wall                 turns on most, but not all, compiler warnings\n\n#  -std=c99              defines C language mode (standard C from 1999 revision)\n\n#  -std=gnu99            defines C language mode (GNU C from 1999 revision)\n\n#  -Wno-missing-braces   ignore invalid warning (GCC bug 53119)\n\n#  -D_DEFAULT_SOURCE     use with -std=c99 on Linux and PLATFORM_WEB, required for timespec\n\n#  -Werror=pointer-arith catch unportable code that does direct arithmetic on void pointers\n\n#  -fno-strict-aliasing  jar_xm.h does shady stuff (breaks strict aliasing)\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#CC      = clang\n",
        "Line" : 271,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "# Additional flags for compiler (if desired)\n\n#  -Wextra                  enables some extra warning flags that are not enabled by -Wall\n\n#  -Wmissing-prototypes     warn if a global function is defined without a previous prototype declaration\n\n#  -Wstrict-prototypes      warn if a function is declared or defined without specifying the argument types\n\n#  -Werror=implicit-function-declaration   catch function calls without prior declaration\n",
        "Line" : 274,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# -O2                        # if used, also set --memory-init-file 0\n\n# --memory-init-file 0       # to avoid an external memory initialization code file (.mem)\n\n# -s ALLOW_MEMORY_GROWTH=1   # to allow memory resizing\n\n# -s TOTAL_MEMORY=16777216   # to specify heap memory size (default = 16MB)\n\n# -s USE_PTHREADS=1          # multithreading support\n",
        "Line" : 283,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "# Compiler flags for arquitecture\n",
        "Line" : 291,
        "CharPositionInLine" : 4
      },
      "44" : {
        "Text" : "# Compilation functions attributes options\n",
        "Line" : 298,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "# Compiler options for the linker\n\n# -Werror=format-security\n",
        "Line" : 300,
        "CharPositionInLine" : 4
      },
      "46" : {
        "Text" : "# Preprocessor macro definitions\n",
        "Line" : 303,
        "CharPositionInLine" : 4
      },
      "47" : {
        "Text" : "# Define required compilation flags for raylib SHARED lib\n",
        "Line" : 307,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# make sure code is compiled as position independent\n\n# BE CAREFUL: It seems that for gcc -fpic is not the same as -fPIC\n\n# MinGW32 just doesn't need -fPIC, it shows warnings\n",
        "Line" : 309,
        "CharPositionInLine" : 4
      },
      "49" : {
        "Text" : "# Use Wayland display on Linux desktop\n",
        "Line" : 315,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Define include paths for required headers\n\n# NOTE: Several external required libraries (stb and others)\n",
        "Line" : 324,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Check the version name. If GLFW3 was built manually, it may have produced\n\n# a static library known as libglfw3.a. In that case, the name should be -lglfw3\n",
        "Line" : 334,
        "CharPositionInLine" : 8
      },
      "52" : {
        "Text" : "# Define additional directories containing required header files\n",
        "Line" : 340,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# RPI required libraries\n",
        "Line" : 342,
        "CharPositionInLine" : 4
      },
      "54" : {
        "Text" : "# Android required libraries\n",
        "Line" : 349,
        "CharPositionInLine" : 4
      },
      "55" : {
        "Text" : "# Include android_native_app_glue.h\n",
        "Line" : 351,
        "CharPositionInLine" : 4
      },
      "56" : {
        "Text" : "#INCLUDE_PATHS += -I$(ANDROID_NDK)/sources/android/native_app_glue\n",
        "Line" : 353,
        "CharPositionInLine" : 4
      },
      "57" : {
        "Text" : "# Define linker options\n",
        "Line" : 356,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# Force linking of library module to define symbol\n",
        "Line" : 360,
        "CharPositionInLine" : 4
      },
      "59" : {
        "Text" : "# Library paths containing required libs\n",
        "Line" : 362,
        "CharPositionInLine" : 4
      },
      "60" : {
        "Text" : "# Avoid unresolved symbol pointing to external main()\n",
        "Line" : 364,
        "CharPositionInLine" : 4
      },
      "61" : {
        "Text" : "# Define all object files required with a wildcard\n\n# The wildcard takes all files that finish with \".c\",\n\n# and replaces extentions with \".o\", that are the object files\n\n# NOTE: Some objects depend on the PLATFORM to be added or not!\n\n# OBJS = $(patsubst %.c, %.o, $(wildcard *.c))\n",
        "Line" : 370,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Define object required on compilation\n",
        "Line" : 376,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# Default target entry\n",
        "Line" : 405,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# Generate standalone Android toolchain\n\n# NOTE: If the host system is Windows or Linux, generation is different\n",
        "Line" : 408,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# NOTE: python should be available in the path\n",
        "Line" : 412,
        "CharPositionInLine" : 4
      },
      "66" : {
        "Text" : "# Compile raylib library\n\n# NOTE: Release directory is created if not exist\n",
        "Line" : 429,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# Compile raylib for web.\n",
        "Line" : 433,
        "CharPositionInLine" : 4
      },
      "68" : {
        "Text" : "# Compile raylib shared library version $(RAYLIB_VERSION).\n\n# WARNING: you should type \"make clean\" before doing this target\n",
        "Line" : 444,
        "CharPositionInLine" : 16
      },
      "69" : {
        "Text" : "# WARNING: you should type \"gmake clean\" before doing this target\n",
        "Line" : 459,
        "CharPositionInLine" : 16
      },
      "70" : {
        "Text" : "# Compile raylib shared library version $(RAYLIB_VERSION).\n\n# WARNING: you should type \"make clean\" before doing this target\n",
        "Line" : 467,
        "CharPositionInLine" : 16
      },
      "71" : {
        "Text" : "# WARNING: symbolic links creation on Windows should be done using mklink command, no ln available\n",
        "Line" : 477,
        "CharPositionInLine" : 12
      },
      "72" : {
        "Text" : "# Compile raylib static library version $(RAYLIB_VERSION)\n\n# WARNING: You should type \"make clean\" before doing this target.\n",
        "Line" : 484,
        "CharPositionInLine" : 8
      },
      "73" : {
        "Text" : "# Compile all modules with their prerequisites\n",
        "Line" : 491,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# Compile core module\n",
        "Line" : 493,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# Compile rglfw module\n",
        "Line" : 497,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# Compile shapes module\n",
        "Line" : 501,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# Compile textures module\n",
        "Line" : 505,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# Compile text module\n",
        "Line" : 509,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# Compile utils module\n",
        "Line" : 513,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "# Compile models module\n",
        "Line" : 517,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# Compile audio module\n",
        "Line" : 521,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "# Compile raygui module\n\n# NOTE: raygui header should be distributed with raylib.h\n",
        "Line" : 525,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "#define RAYGUI_IMPLEMENTATION > raygui.c\n\n#include \"$(RAYLIB_MODULE_RAYGUI_PATH)/raygui.h\" > raygui.c\n",
        "Line" : 528,
        "CharPositionInLine" : 7
      },
      "84" : {
        "Text" : "# Compile physac module\n\n# NOTE: physac header should be distributed with raylib.h\n",
        "Line" : 532,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "#define PHYSAC_IMPLEMENTATION > physac.c\n\n#include \"$(RAYLIB_MODULE_PHYSAC_PATH)/physac.h\" > physac.c\n",
        "Line" : 535,
        "CharPositionInLine" : 7
      },
      "86" : {
        "Text" : "# Install generated and needed files to desired directories.\n\n# On GNU/Linux and BSDs, there are some standard directories that contain extra\n\n# libraries and header files. These directories (often /usr/local/lib and\n\n# /usr/local/include) are for libraries that are installed manually\n\n# (without a package manager). We'll use /usr/local/lib/raysan5 and /usr/local/include/raysan5\n\n# for our -L and -I specification to simplify management of the raylib source package.\n\n# Customize these locations if you like but don't forget to pass them to make\n\n# for compilation and enable runtime linking with -rpath, LD_LIBRARY_PATH, or ldconfig.\n\n# Hint: add -L$(RAYLIB_INSTALL_PATH) -I$(RAYLIB_H_INSTALL_PATH) to your own makefiles.\n\n# See below and ../examples/Makefile for more information.\n\n# TODO: Add other platforms. Remove sudo requirement, i.e. add USER mode.\n",
        "Line" : 540,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "# RAYLIB_INSTALL_PATH should be the desired full path to libraylib. No relative paths.\n",
        "Line" : 552,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "# RAYLIB_H_INSTALL_PATH locates the installed raylib header and associated source files.\n",
        "Line" : 555,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# Attention! You are root, writing files to $(RAYLIB_INSTALL_PATH)\n\n# and $(RAYLIB_H_INSTALL_PATH). Consult this Makefile for more information.\n\n# Prepare the environment as needed.\n",
        "Line" : 561,
        "CharPositionInLine" : 8
      },
      "90" : {
        "Text" : "# Installing raylib to $(RAYLIB_INSTALL_PATH).\n",
        "Line" : 567,
        "CharPositionInLine" : 12
      },
      "91" : {
        "Text" : "# Uncomment to update the runtime linker cache with RAYLIB_INSTALL_PATH.\n\n# Not necessary if later embedding RPATH in your executable. See examples/Makefile.\n",
        "Line" : 571,
        "CharPositionInLine" : 12
      },
      "92" : {
        "Text" : "# Installing raylib to $(RAYLIB_INSTALL_PATH).\n",
        "Line" : 575,
        "CharPositionInLine" : 12
      },
      "93" : {
        "Text" : "# Copying raylib development files to $(RAYLIB_H_INSTALL_PATH).\n",
        "Line" : 578,
        "CharPositionInLine" : 8
      },
      "94" : {
        "Text" : "# Remove raylib dev files installed on the system\n\n# TODO: see 'install' target.\n",
        "Line" : 591,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "# WARNING: You are root, about to delete items from $(RAYLIB_INSTALL_PATH).\n\n# and $(RAYLIB_H_INSTALL_PATH). Please confirm each item.\n",
        "Line" : 595,
        "CharPositionInLine" : 4
      },
      "96" : {
        "Text" : "# Uncomment to clean up the runtime linker cache. See install target.\n",
        "Line" : 602,
        "CharPositionInLine" : 8
      },
      "97" : {
        "Text" : "# Clean everything\n",
        "Line" : 619,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 98,
      "Errorlog" : "line 160:40 token recognition error at: '\\p'\nline 162:53 token recognition error at: '\\c'\nline 162:111 token recognition error at: '\\b'\nline 162:129 token recognition error at: '\\p'\nline 162:168 token recognition error at: '\\e'\nline 162:211 token recognition error at: '\\M'\nline 162:217 token recognition error at: '\\b'\nline 163:39 token recognition error at: '\\e'\n"
    },
    "src/external/glfw/CMake/GenerateMappings.cmake" : {
      "ObjectId" : "7a88e3d4457c21ae16a60ee6c9ab19307d7b212a",
      "LastModified" : "2019-04-08T10:50:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Usage:\n\n# cmake -P GenerateMappings.cmake <path/to/mappings.h.in> <path/to/mappings.h>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/external/glfw/CMake/amd64-mingw32msvc.cmake" : {
      "ObjectId" : "c264ff0dabdf30beb46d816f17d2e43528f5b0bc",
      "LastModified" : "2019-04-08T10:50:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the environment for cross compiling from Linux to Win64\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configure the behaviour of the find commands\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/external/glfw/CMake/i586-mingw32msvc.cmake" : {
      "ObjectId" : "c871e5be50d8c500da947b8623ec789ad891f107",
      "LastModified" : "2019-04-08T10:50:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the environment for cross compiling from Linux to Win32\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configure the behaviour of the find commands\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/external/glfw/CMake/i686-pc-mingw32.cmake" : {
      "ObjectId" : "b657d94481b6e1b77ae30ed788efe14f0ce6c27f",
      "LastModified" : "2019-04-08T10:50:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the environment for cross compiling from Linux to Win32\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Target system name\n",
        "Line" : 2,
        "CharPositionInLine" : 34
      },
      "2" : {
        "Text" : "#Configure the behaviour of the find commands\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/external/glfw/CMake/i686-w64-mingw32.cmake" : {
      "ObjectId" : "bbd9f8956e284739f972ec1f8b7bf80c435a7514",
      "LastModified" : "2019-04-08T10:50:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the environment for cross compiling from Linux to Win32\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Target system name\n",
        "Line" : 2,
        "CharPositionInLine" : 34
      },
      "2" : {
        "Text" : "# Configure the behaviour of the find commands\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/external/glfw/CMake/modules/FindEpollShim.cmake" : {
      "ObjectId" : "2facb4192cf052dac6579ce610cb854a75cc63b4",
      "LastModified" : "2019-04-08T10:50:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find EpollShim\n\n# Once done, this will define\n\n#\n\n#   EPOLLSHIM_FOUND - System has EpollShim\n\n#   EPOLLSHIM_INCLUDE_DIRS - The EpollShim include directories\n\n#   EPOLLSHIM_LIBRARIES - The libraries needed to use EpollShim\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/external/glfw/CMake/modules/FindOSMesa.cmake" : {
      "ObjectId" : "3194bd91aba752835fd7ecc4de3db403d8efc82e",
      "LastModified" : "2019-04-08T10:50:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find OSMesa on a Unix system\n\n#\n\n# This will define:\n\n#\n\n#   OSMESA_LIBRARIES   - Link these to use OSMesa\n\n#   OSMESA_INCLUDE_DIR - Include directory for OSMesa\n\n#\n\n# Copyright (c) 2014 Brandon Schaefer <brandon.schaefer@canonical.com>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/external/glfw/CMake/modules/FindVulkan.cmake" : {
      "ObjectId" : "5004356b117f125500b97fbe87124d9f18c30c66",
      "LastModified" : "2019-04-08T10:50:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find Vulkan\n\n#\n\n# VULKAN_INCLUDE_DIR\n\n# VULKAN_LIBRARY\n\n# VULKAN_FOUND\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/external/glfw/CMake/modules/FindWaylandProtocols.cmake" : {
      "ObjectId" : "8eb83f27ef88575f80a56198bd2635580452a914",
      "LastModified" : "2019-04-08T10:50:09Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/external/glfw/CMake/modules/FindXKBCommon.cmake" : {
      "ObjectId" : "0f571eeacb5cd91d4ef72a89a066142e5a6a0d0a",
      "LastModified" : "2019-04-08T10:50:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find XKBCommon\n\n# Once done, this will define\n\n#\n\n#   XKBCOMMON_FOUND - System has XKBCommon\n\n#   XKBCOMMON_INCLUDE_DIRS - The XKBCommon include directories\n\n#   XKBCOMMON_LIBRARIES - The libraries needed to use XKBCommon\n\n#   XKBCOMMON_DEFINITIONS - Compiler switches required for using XKBCommon\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/external/glfw/CMake/x86_64-w64-mingw32.cmake" : {
      "ObjectId" : "e629e4573f0173addaaa41b4bea8cd4c403569d1",
      "LastModified" : "2019-04-08T10:50:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the environment for cross compiling from Linux to Win32\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Target system name\n",
        "Line" : 2,
        "CharPositionInLine" : 34
      },
      "2" : {
        "Text" : "# Configure the behaviour of the find commands\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/external/glfw/CMakeLists.txt" : {
      "ObjectId" : "8393f4486b84be925a7a6af88cf8342e10a4219c",
      "LastModified" : "2019-04-08T10:50:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# On Unix-like systems, shared libraries can use the soname system.\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Set compiler specific flags\n\n#--------------------------------------------------------------------\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Workaround for VS 2008 not shipping with the DirectX 9 SDK\n",
        "Line" : 75,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Workaround for VS 2008 not shipping with stdint.h\n",
        "Line" : 81,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Workaround for legacy MinGW not providing XInput and DirectInput\n",
        "Line" : 104,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Enable link-time exploit mitigation features enabled by default on MSVC\n",
        "Line" : 113,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Compatibility with data execution prevention (DEP)\n",
        "Line" : 116,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Compatibility with address space layout randomization (ASLR)\n",
        "Line" : 123,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Compatibility with 64-bit address space layout randomization (ASLR)\n",
        "Line" : 130,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Detect and select backend APIs\n\n#--------------------------------------------------------------------\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Add Vulkan static library if requested\n\n#--------------------------------------------------------------------\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Find and add Unix math and time libraries\n\n#--------------------------------------------------------------------\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Use Win32 for window creation\n\n#--------------------------------------------------------------------\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Use X11 for window creation\n\n#--------------------------------------------------------------------\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Set up library and include paths\n",
        "Line" : 223,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Check for XRandR (modern resolution switching and gamma control)\n",
        "Line" : 227,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Check for Xinerama (legacy multi-monitor support)\n",
        "Line" : 232,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Check for Xkb (X keyboard extension)\n",
        "Line" : 237,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Check for Xcursor (cursor creation from RGBA images)\n",
        "Line" : 242,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Use Wayland for window creation\n\n#--------------------------------------------------------------------\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Use OSMesa for offscreen context creation\n\n#--------------------------------------------------------------------\n",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Use Cocoa for window creation and NSOpenGL for context creation\n\n#--------------------------------------------------------------------\n",
        "Line" : 294,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Export GLFW library dependencies\n\n#--------------------------------------------------------------------\n",
        "Line" : 309,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Create generated files\n\n#--------------------------------------------------------------------\n",
        "Line" : 321,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Add subdirectories\n\n#--------------------------------------------------------------------\n",
        "Line" : 341,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Install files other than the library\n\n# The library is installed by src/CMakeLists.txt\n\n#--------------------------------------------------------------------\n",
        "Line" : 358,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Only generate this target if no higher-level project already has\n",
        "Line" : 376,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 27
    },
    "src/external/glfw/src/CMakeLists.txt" : {
      "ObjectId" : "f6b4911f3759807f634f9cbbf2beebb5b76aceea",
      "LastModified" : "2019-04-08T10:50:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# For some reason, CMake doesn't know about .m\n",
        "Line" : 76,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Make GCC and Clang warn about declarations that VS 2010 and 2012 won't accept\n\n# for all source files that VS will build\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# HACK: When building on MinGW, WINVER and UNICODE need to be defined before\n\n# the inclusion of stddef.h (by glfw3.h), which is itself included before\n\n# win32_platform.h.  We define them here until a saner solution can be found\n\n# NOTE: MinGW-w64 and Visual C++ do /not/ need this hack.\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Enable a reasonable set of warnings (no, -Wextra is not reasonable)\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Remove the lib prefix on the DLL (but not the import library)\n",
        "Line" : 128,
        "CharPositionInLine" : 12
      },
      "5" : {
        "Text" : "# Add a suffix to the import library to avoid naming conflicts\n",
        "Line" : 131,
        "CharPositionInLine" : 12
      },
      "6" : {
        "Text" : "# Add a suffix to the import library to avoid naming conflicts\n",
        "Line" : 134,
        "CharPositionInLine" : 12
      },
      "7" : {
        "Text" : "# Add -fno-common to work around a bug in Apple's GCC\n",
        "Line" : 138,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# Hide symbols not explicitly tagged for export from the shared library\n",
        "Line" : 144,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 9
    },
    "templates/advance_game/Makefile" : {
      "ObjectId" : "e475f72c5052800a049adae30a5cb528f64e4778",
      "LastModified" : "2019-04-08T10:50:09Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#**************************************************************************************************\n\n#\n\n#   raylib makefile for Desktop platforms, Raspberry Pi, Android and HTML5\n\n#\n\n#   Copyright (c) 2013-2019 Ramon Santamaria (@raysan5)\n\n#\n\n#   This software is provided \"as-is\", without any express or implied warranty. In no event\n\n#   will the authors be held liable for any damages arising from the use of this software.\n\n#\n\n#   Permission is granted to anyone to use this software for any purpose, including commercial\n\n#   applications, and to alter it and redistribute it freely, subject to the following restrictions:\n\n#\n\n#     1. The origin of this software must not be misrepresented; you must not claim that you\n\n#     wrote the original software. If you use this software in a product, an acknowledgment\n\n#     in the product documentation would be appreciated but is not required.\n\n#\n\n#     2. Altered source versions must be plainly marked as such, and must not be misrepresented\n\n#     as being the original software.\n\n#\n\n#     3. This notice may not be removed or altered from any source distribution.\n\n#\n\n#**************************************************************************************************\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define required raylib variables\n\n# WARNING: To compile to HTML5, code must be redesigned to use emscripten.h and emscripten_set_main_loop()\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Default path for raylib on Raspberry Pi, if installed in different path, update it!\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Library type used for raylib: STATIC (.a) or SHARED (.so/.dll)\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Use external GLFW library instead of rglfw module\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Use Wayland display server protocol on Linux desktop\n\n# by default it uses X11 windowing system\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# NOTE: On PLATFORM_WEB OpenAL Soft backend is used by default (check raylib/src/Makefile)\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Determine PLATFORM_OS in case PLATFORM_DESKTOP selected\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# No uname.exe on MinGW!, but OS=Windows_NT on Windows!\n\n# ifeq ($(UNAME),Msys) -> Windows\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Emscripten required variables\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Define raylib release directory for compiled library\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Define default C compiler: gcc\n\n# NOTE: define g++ compiler if using C++\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# OSX default compiler\n",
        "Line" : 126,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# FreeBSD, OpenBSD, NetBSD, DragonFly default compiler\n",
        "Line" : 130,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# Define RPI cross-compiler\n\n#CC = armv6j-hardfloat-linux-gnueabi-gcc\n",
        "Line" : 136,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# HTML5 emscripten compiler\n",
        "Line" : 142,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Define default make program: Mingw32-make\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Define compiler flags:\n\n#  -O1                  defines optimization level\n\n#  -g                   enable debugging\n\n#  -s                   strip unnecessary data from build\n\n#  -Wall                turns on most, but not all, compiler warnings\n\n#  -std=c99             defines C language mode (standard C from 1999 revision)\n\n#  -std=gnu99           defines C language mode (GNU C from 1999 revision)\n\n#  -Wno-missing-braces  ignore invalid warning (GCC bug 53119)\n\n#  -D_DEFAULT_SOURCE    use with -std=c99 on Linux and PLATFORM_WEB, required for timespec\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Additional flags for compiler (if desired)\n\n#CFLAGS += -Wextra -Wmissing-prototypes -Wstrict-prototypes\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# resources file contains windows exe icon\n\n# -Wl,--subsystem,windows hides the console window\n",
        "Line" : 170,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# -O2                        # if used, also set --memory-init-file 0\n\n# --memory-init-file 0       # to avoid an external memory initialization code file (.mem)\n\n# -s ALLOW_MEMORY_GROWTH=1   # to allow memory resizing\n\n# -s TOTAL_MEMORY=16777216   # to specify heap memory size (default = 16MB)\n\n# -s USE_PTHREADS=1          # multithreading support\n\n# -s WASM=1                  # support Web Assembly (https://github.com/kripken/emscripten/wiki/WebAssembly)\n\n# --preload-file resources   # specify a resources folder for data compilation\n",
        "Line" : 182,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Define a custom shell .html and output extension\n",
        "Line" : 191,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Define include paths for required headers\n\n# NOTE: Several external required libraries (stb and others)\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Define additional directories containing required header files\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# RPI requried libraries\n",
        "Line" : 202,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# Define library paths containing required libs\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Define any libraries required on linking\n\n# if you want to link libraries (libname.so or libname.a), use the -lname\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Libraries for Windows desktop compilation\n",
        "Line" : 226,
        "CharPositionInLine" : 8
      },
      "28" : {
        "Text" : "# Required for physac examples\n\n#LDLIBS += -static -lpthread\n",
        "Line" : 229,
        "CharPositionInLine" : 8
      },
      "29" : {
        "Text" : "# Libraries for Debian GNU/Linux desktop compiling\n\n# NOTE: Required packages: libegl1-mesa-dev\n",
        "Line" : 233,
        "CharPositionInLine" : 8
      },
      "30" : {
        "Text" : "# On X11 requires also below libraries\n",
        "Line" : 237,
        "CharPositionInLine" : 8
      },
      "31" : {
        "Text" : "# NOTE: It seems additional libraries are not required any more, latest GLFW just dlopen them\n\n#LDLIBS += -lXrandr -lXinerama -lXi -lXxf86vm -lXcursor\n",
        "Line" : 239,
        "CharPositionInLine" : 8
      },
      "32" : {
        "Text" : "# On Wayland windowing system, additional libraries requires\n",
        "Line" : 242,
        "CharPositionInLine" : 8
      },
      "33" : {
        "Text" : "# Libraries for OSX 10.9 desktop compiling\n\n# NOTE: Required packages: libopenal-dev libegl1-mesa-dev\n",
        "Line" : 248,
        "CharPositionInLine" : 8
      },
      "34" : {
        "Text" : "# Libraries for FreeBSD, OpenBSD, NetBSD, DragonFly desktop compiling\n\n# NOTE: Required packages: mesa-libs\n",
        "Line" : 253,
        "CharPositionInLine" : 8
      },
      "35" : {
        "Text" : "# On XWindow requires also below libraries\n",
        "Line" : 257,
        "CharPositionInLine" : 8
      },
      "36" : {
        "Text" : "# NOTE: It could require additional packages installed: libglfw3-dev\n",
        "Line" : 261,
        "CharPositionInLine" : 8
      },
      "37" : {
        "Text" : "# Libraries for Raspberry Pi compiling\n\n# NOTE: Required packages: libasound2-dev (ALSA)\n",
        "Line" : 266,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# Libraries for web (HTML5) compiling\n",
        "Line" : 271,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "# Define all source files required\n",
        "Line" : 275,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Define all object files from source files\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# For Android platform we call a custom Makefile.Android\n",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Default target entry\n\n# NOTE: We call this Makefile target or Makefile.Android target\n",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Project target defined by PROJECT_NAME\n",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Compile source files\n\n# NOTE: This pattern will compile every module defined on $(OBJS)\n",
        "Line" : 304,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Clean everything\n",
        "Line" : 309,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 46,
      "Errorlog" : "line 90:40 token recognition error at: '\\p'\nline 92:53 token recognition error at: '\\c'\nline 92:111 token recognition error at: '\\b'\nline 92:129 token recognition error at: '\\p'\nline 92:168 token recognition error at: '\\e'\nline 92:211 token recognition error at: '\\M'\nline 92:217 token recognition error at: '\\b'\nline 93:39 token recognition error at: '\\e'\nline 192:51 token recognition error at: '\\w'\nline 192:61 token recognition error at: '\\s'\n"
    },
    "templates/simple_game/Makefile" : {
      "ObjectId" : "9f27a429ac282739644d65fdcbb0bfa40cf0b70c",
      "LastModified" : "2019-04-08T10:50:09Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#**************************************************************************************************\n\n#\n\n#   raylib makefile for Desktop platforms, Raspberry Pi, Android and HTML5\n\n#\n\n#   Copyright (c) 2013-2019 Ramon Santamaria (@raysan5)\n\n#\n\n#   This software is provided \"as-is\", without any express or implied warranty. In no event\n\n#   will the authors be held liable for any damages arising from the use of this software.\n\n#\n\n#   Permission is granted to anyone to use this software for any purpose, including commercial\n\n#   applications, and to alter it and redistribute it freely, subject to the following restrictions:\n\n#\n\n#     1. The origin of this software must not be misrepresented; you must not claim that you\n\n#     wrote the original software. If you use this software in a product, an acknowledgment\n\n#     in the product documentation would be appreciated but is not required.\n\n#\n\n#     2. Altered source versions must be plainly marked as such, and must not be misrepresented\n\n#     as being the original software.\n\n#\n\n#     3. This notice may not be removed or altered from any source distribution.\n\n#\n\n#**************************************************************************************************\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define required raylib variables\n\n# WARNING: To compile to HTML5, code must be redesigned to use emscripten.h and emscripten_set_main_loop()\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Default path for raylib on Raspberry Pi, if installed in different path, update it!\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Library type used for raylib: STATIC (.a) or SHARED (.so/.dll)\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Use external GLFW library instead of rglfw module\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Use Wayland display server protocol on Linux desktop\n\n# by default it uses X11 windowing system\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# NOTE: On PLATFORM_WEB OpenAL Soft backend is used by default (check raylib/src/Makefile)\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Determine PLATFORM_OS in case PLATFORM_DESKTOP selected\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# No uname.exe on MinGW!, but OS=Windows_NT on Windows!\n\n# ifeq ($(UNAME),Msys) -> Windows\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Emscripten required variables\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Define raylib release directory for compiled library\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Define default C compiler: gcc\n\n# NOTE: define g++ compiler if using C++\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# OSX default compiler\n",
        "Line" : 126,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# FreeBSD, OpenBSD, NetBSD, DragonFly default compiler\n",
        "Line" : 130,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# Define RPI cross-compiler\n\n#CC = armv6j-hardfloat-linux-gnueabi-gcc\n",
        "Line" : 136,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# HTML5 emscripten compiler\n",
        "Line" : 142,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Define default make program: Mingw32-make\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Define compiler flags:\n\n#  -O1                  defines optimization level\n\n#  -g                   enable debugging\n\n#  -s                   strip unnecessary data from build\n\n#  -Wall                turns on most, but not all, compiler warnings\n\n#  -std=c99             defines C language mode (standard C from 1999 revision)\n\n#  -std=gnu99           defines C language mode (GNU C from 1999 revision)\n\n#  -Wno-missing-braces  ignore invalid warning (GCC bug 53119)\n\n#  -D_DEFAULT_SOURCE    use with -std=c99 on Linux and PLATFORM_WEB, required for timespec\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Additional flags for compiler (if desired)\n\n#CFLAGS += -Wextra -Wmissing-prototypes -Wstrict-prototypes\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# resources file contains windows exe icon\n\n# -Wl,--subsystem,windows hides the console window\n",
        "Line" : 170,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# -O2                        # if used, also set --memory-init-file 0\n\n# --memory-init-file 0       # to avoid an external memory initialization code file (.mem)\n\n# -s ALLOW_MEMORY_GROWTH=1   # to allow memory resizing\n\n# -s TOTAL_MEMORY=16777216   # to specify heap memory size (default = 16MB)\n\n# -s USE_PTHREADS=1          # multithreading support\n\n# -s WASM=1                  # support Web Assembly (https://github.com/kripken/emscripten/wiki/WebAssembly)\n\n# --preload-file resources   # specify a resources folder for data compilation\n",
        "Line" : 182,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Define a custom shell .html and output extension\n",
        "Line" : 191,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Define include paths for required headers\n\n# NOTE: Several external required libraries (stb and others)\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Define additional directories containing required header files\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# RPI requried libraries\n",
        "Line" : 202,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# Define library paths containing required libs\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Define any libraries required on linking\n\n# if you want to link libraries (libname.so or libname.a), use the -lname\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Libraries for Windows desktop compilation\n",
        "Line" : 226,
        "CharPositionInLine" : 8
      },
      "28" : {
        "Text" : "# Required for physac examples\n\n#LDLIBS += -static -lpthread\n",
        "Line" : 229,
        "CharPositionInLine" : 8
      },
      "29" : {
        "Text" : "# Libraries for Debian GNU/Linux desktop compiling\n\n# NOTE: Required packages: libegl1-mesa-dev\n",
        "Line" : 233,
        "CharPositionInLine" : 8
      },
      "30" : {
        "Text" : "# On X11 requires also below libraries\n",
        "Line" : 237,
        "CharPositionInLine" : 8
      },
      "31" : {
        "Text" : "# NOTE: It seems additional libraries are not required any more, latest GLFW just dlopen them\n\n#LDLIBS += -lXrandr -lXinerama -lXi -lXxf86vm -lXcursor\n",
        "Line" : 239,
        "CharPositionInLine" : 8
      },
      "32" : {
        "Text" : "# On Wayland windowing system, additional libraries requires\n",
        "Line" : 242,
        "CharPositionInLine" : 8
      },
      "33" : {
        "Text" : "# Libraries for OSX 10.9 desktop compiling\n\n# NOTE: Required packages: libopenal-dev libegl1-mesa-dev\n",
        "Line" : 248,
        "CharPositionInLine" : 8
      },
      "34" : {
        "Text" : "# Libraries for FreeBSD, OpenBSD, NetBSD, DragonFly desktop compiling\n\n# NOTE: Required packages: mesa-libs\n",
        "Line" : 253,
        "CharPositionInLine" : 8
      },
      "35" : {
        "Text" : "# On XWindow requires also below libraries\n",
        "Line" : 257,
        "CharPositionInLine" : 8
      },
      "36" : {
        "Text" : "# NOTE: It could require additional packages installed: libglfw3-dev\n",
        "Line" : 261,
        "CharPositionInLine" : 8
      },
      "37" : {
        "Text" : "# Libraries for Raspberry Pi compiling\n\n# NOTE: Required packages: libasound2-dev (ALSA)\n",
        "Line" : 266,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# Libraries for web (HTML5) compiling\n",
        "Line" : 271,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "# Define all source files required\n",
        "Line" : 275,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Define all object files from source files\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# For Android platform we call a custom Makefile.Android\n",
        "Line" : 281,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Default target entry\n\n# NOTE: We call this Makefile target or Makefile.Android target\n",
        "Line" : 290,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Project target defined by PROJECT_NAME\n",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Compile source files\n\n# NOTE: This pattern will compile every module defined on $(OBJS)\n",
        "Line" : 299,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Clean everything\n",
        "Line" : 304,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 46,
      "Errorlog" : "line 90:40 token recognition error at: '\\p'\nline 92:53 token recognition error at: '\\c'\nline 92:111 token recognition error at: '\\b'\nline 92:129 token recognition error at: '\\p'\nline 92:168 token recognition error at: '\\e'\nline 92:211 token recognition error at: '\\M'\nline 92:217 token recognition error at: '\\b'\nline 93:39 token recognition error at: '\\e'\nline 192:51 token recognition error at: '\\w'\nline 192:61 token recognition error at: '\\s'\n"
    },
    "templates/standard_game/Makefile" : {
      "ObjectId" : "4333c8b84f5a242cdc67ac031902852cad339a5e",
      "LastModified" : "2019-04-08T10:50:09Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#**************************************************************************************************\n\n#\n\n#   raylib makefile for Desktop platforms, Raspberry Pi, Android and HTML5\n\n#\n\n#   Copyright (c) 2013-2019 Ramon Santamaria (@raysan5)\n\n#\n\n#   This software is provided \"as-is\", without any express or implied warranty. In no event\n\n#   will the authors be held liable for any damages arising from the use of this software.\n\n#\n\n#   Permission is granted to anyone to use this software for any purpose, including commercial\n\n#   applications, and to alter it and redistribute it freely, subject to the following restrictions:\n\n#\n\n#     1. The origin of this software must not be misrepresented; you must not claim that you\n\n#     wrote the original software. If you use this software in a product, an acknowledgment\n\n#     in the product documentation would be appreciated but is not required.\n\n#\n\n#     2. Altered source versions must be plainly marked as such, and must not be misrepresented\n\n#     as being the original software.\n\n#\n\n#     3. This notice may not be removed or altered from any source distribution.\n\n#\n\n#**************************************************************************************************\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define required raylib variables\n\n# WARNING: To compile to HTML5, code must be redesigned to use emscripten.h and emscripten_set_main_loop()\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Default path for raylib on Raspberry Pi, if installed in different path, update it!\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Library type used for raylib: STATIC (.a) or SHARED (.so/.dll)\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Use external GLFW library instead of rglfw module\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Use Wayland display server protocol on Linux desktop\n\n# by default it uses X11 windowing system\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# NOTE: On PLATFORM_WEB OpenAL Soft backend is used by default (check raylib/src/Makefile)\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Determine PLATFORM_OS in case PLATFORM_DESKTOP selected\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# No uname.exe on MinGW!, but OS=Windows_NT on Windows!\n\n# ifeq ($(UNAME),Msys) -> Windows\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Emscripten required variables\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Define raylib release directory for compiled library\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Define default C compiler: gcc\n\n# NOTE: define g++ compiler if using C++\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# OSX default compiler\n",
        "Line" : 126,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# FreeBSD, OpenBSD, NetBSD, DragonFly default compiler\n",
        "Line" : 130,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# Define RPI cross-compiler\n\n#CC = armv6j-hardfloat-linux-gnueabi-gcc\n",
        "Line" : 136,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# HTML5 emscripten compiler\n",
        "Line" : 142,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Define default make program: Mingw32-make\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Define compiler flags:\n\n#  -O1                  defines optimization level\n\n#  -g                   enable debugging\n\n#  -s                   strip unnecessary data from build\n\n#  -Wall                turns on most, but not all, compiler warnings\n\n#  -std=c99             defines C language mode (standard C from 1999 revision)\n\n#  -std=gnu99           defines C language mode (GNU C from 1999 revision)\n\n#  -Wno-missing-braces  ignore invalid warning (GCC bug 53119)\n\n#  -D_DEFAULT_SOURCE    use with -std=c99 on Linux and PLATFORM_WEB, required for timespec\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Additional flags for compiler (if desired)\n\n#CFLAGS += -Wextra -Wmissing-prototypes -Wstrict-prototypes\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# resources file contains windows exe icon\n\n# -Wl,--subsystem,windows hides the console window\n",
        "Line" : 170,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# -O2                        # if used, also set --memory-init-file 0\n\n# --memory-init-file 0       # to avoid an external memory initialization code file (.mem)\n\n# -s ALLOW_MEMORY_GROWTH=1   # to allow memory resizing\n\n# -s TOTAL_MEMORY=16777216   # to specify heap memory size (default = 16MB)\n\n# -s USE_PTHREADS=1          # multithreading support\n\n# -s WASM=1                  # support Web Assembly (https://github.com/kripken/emscripten/wiki/WebAssembly)\n\n# --preload-file resources   # specify a resources folder for data compilation\n",
        "Line" : 182,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Define a custom shell .html and output extension\n",
        "Line" : 191,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Define include paths for required headers\n\n# NOTE: Several external required libraries (stb and others)\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Define additional directories containing required header files\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# RPI requried libraries\n",
        "Line" : 202,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# Define library paths containing required libs\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Define any libraries required on linking\n\n# if you want to link libraries (libname.so or libname.a), use the -lname\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Libraries for Windows desktop compilation\n",
        "Line" : 226,
        "CharPositionInLine" : 8
      },
      "28" : {
        "Text" : "# Required for physac examples\n\n#LDLIBS += -static -lpthread\n",
        "Line" : 229,
        "CharPositionInLine" : 8
      },
      "29" : {
        "Text" : "# Libraries for Debian GNU/Linux desktop compiling\n\n# NOTE: Required packages: libegl1-mesa-dev\n",
        "Line" : 233,
        "CharPositionInLine" : 8
      },
      "30" : {
        "Text" : "# On X11 requires also below libraries\n",
        "Line" : 237,
        "CharPositionInLine" : 8
      },
      "31" : {
        "Text" : "# NOTE: It seems additional libraries are not required any more, latest GLFW just dlopen them\n\n#LDLIBS += -lXrandr -lXinerama -lXi -lXxf86vm -lXcursor\n",
        "Line" : 239,
        "CharPositionInLine" : 8
      },
      "32" : {
        "Text" : "# On Wayland windowing system, additional libraries requires\n",
        "Line" : 242,
        "CharPositionInLine" : 8
      },
      "33" : {
        "Text" : "# Libraries for OSX 10.9 desktop compiling\n\n# NOTE: Required packages: libopenal-dev libegl1-mesa-dev\n",
        "Line" : 248,
        "CharPositionInLine" : 8
      },
      "34" : {
        "Text" : "# Libraries for FreeBSD, OpenBSD, NetBSD, DragonFly desktop compiling\n\n# NOTE: Required packages: mesa-libs\n",
        "Line" : 253,
        "CharPositionInLine" : 8
      },
      "35" : {
        "Text" : "# On XWindow requires also below libraries\n",
        "Line" : 257,
        "CharPositionInLine" : 8
      },
      "36" : {
        "Text" : "# NOTE: It could require additional packages installed: libglfw3-dev\n",
        "Line" : 261,
        "CharPositionInLine" : 8
      },
      "37" : {
        "Text" : "# Libraries for Raspberry Pi compiling\n\n# NOTE: Required packages: libasound2-dev (ALSA)\n",
        "Line" : 266,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# Libraries for web (HTML5) compiling\n",
        "Line" : 271,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "# Define all source files required\n",
        "Line" : 275,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Define all object files from source files\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# For Android platform we call a custom Makefile.Android\n",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Default target entry\n\n# NOTE: We call this Makefile target or Makefile.Android target\n",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Project target defined by PROJECT_NAME\n",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Compile source files\n\n# NOTE: This pattern will compile every module defined on $(OBJS)\n",
        "Line" : 304,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Clean everything\n",
        "Line" : 309,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 46,
      "Errorlog" : "line 90:40 token recognition error at: '\\p'\nline 92:53 token recognition error at: '\\c'\nline 92:111 token recognition error at: '\\b'\nline 92:129 token recognition error at: '\\p'\nline 92:168 token recognition error at: '\\e'\nline 92:211 token recognition error at: '\\M'\nline 92:217 token recognition error at: '\\b'\nline 93:39 token recognition error at: '\\e'\nline 192:51 token recognition error at: '\\w'\nline 192:61 token recognition error at: '\\s'\n"
    }
  },
  "FileTypes" : {
    "CMAKE" : 33,
    "MAKEFILE" : 15
  },
  "ElapsedTime" : 2633
}