{
  "Repository" : "66554062",
  "Revision" : "HEAD",
  "ObjectId" : "a8d65bd97e7579e0df23f81ad324279d3552edad",
  "CommitTime" : "2019-04-11T15:36:32Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "27cce42e0c67c0c6c7e63d5ddb05423bb40932a7",
      "LastModified" : "2018-11-07T20:08:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set default build type\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build shared libraries by default\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set default install prefix\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Options\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Intended to install the SAME version as Drake uses internally.\n\n# However, the SHAs are currently not synced (I don't know how to\n\n# write that kind of bazel query).\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Setup external projects\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# On MacOS, Drake uses homebrew VTK compiled with Qt5 and brew Python\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# VTK version used by drake\n",
        "Line" : 102,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# To configure `director`\n",
        "Line" : 104,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# To configure `config/setup_environment.sh.in`\n",
        "Line" : 109,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# For signal-scope\n",
        "Line" : 111,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# don't build OPENNI2 driver, conflicts with openni2_launch in ROS\n",
        "Line" : 132,
        "CharPositionInLine" : 31
      },
      "12" : {
        "Text" : "# ExternalProject_Add(RemoteTreeViewer\n\n#   SOURCE_DIR ${source_dir}/src/RemoteTreeViewer\n\n#   BINARY_DIR ${build_dir}/RemoteTreeViewer\n\n#   BUILD_ALWAYS 1\n\n#   CMAKE_CACHE_ARGS\n\n#     ${CMAKE_ARGS_FOR_EXTERNALS}\n\n#   DEPENDS drake\n\n# )\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# if (WITH_REACHABILITY_ANALYZER)\n\n#   ExternalProject_Add(ReachabilityAnalyzer\n\n#   SOURCE_DIR ${source_dir}/src/ReachabilityAnalyzer\n\n#   BINARY_DIR ${build_dir}/ReachabilityAnalyzer\n\n#   BUILD_ALWAYS 1\n\n#   CMAKE_CACHE_ARGS\n\n#     ${CMAKE_ARGS_FOR_EXTERNALS}\n\n#   DEPENDS drake director RemoteTreeViewer common_utils\n\n#   )\n\n# endif()\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Different than Drake's version -- see\n\n# spartan/drake/WORKSPACE for Drake's version (2.86.1,\n\n# as of writing)\n\n# We need something recent enough to have exact python\n\n# version matching supported.\n",
        "Line" : 216,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Extra arguments lifted from bullet install helper:\n\n# https://github.com/bulletphysics/bullet3/blob/master/build_cmake_pybullet_double.sh\n\n# I'm making this depend on Drake so it's guaranteed to\n\n# install after Drake. We're installing a different\n\n# version than Drake (2.86.1 vs post-2.87), which is risky\n\n# enough already.\n",
        "Line" : 223,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Grab and copy in the v-hacd executable\n\n# (which is precompiled for ubuntu 16.04\n\n# on this branch)\n",
        "Line" : 251,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Installs our customized version of trimesh\n\n# to the project's site-packages build folder.\n\n# I use the setup.py to run the build step,\n\n# but do the module installation manually,\n\n# as it was giving me trouble...\n",
        "Line" : 273,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# if (OFF)\n\n#   ExternalProject_Add(ObjectDetection\n\n#     SOURCE_DIR ${source_dir}/src/ObjectDetection\n\n#     BINARY_DIR ${build_dir}/ObjectDetection\n\n#     BUILD_ALWAYS 1\n\n#     CMAKE_CACHE_ARGS\n\n#       ${CMAKE_ARGS_FOR_EXTERNALS}\n\n#     DEPENDS director RemoteTreeViewer\n\n#   )\n",
        "Line" : 291,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# endif()\n",
        "Line" : 301,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Combine environment prefix path (with ROS) with our own\n",
        "Line" : 317,
        "CharPositionInLine" : 6
      },
      "21" : {
        "Text" : "# Configure the environment file\n",
        "Line" : 325,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Add tests\n",
        "Line" : 328,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "cmake/modules/FindDrake.cmake" : {
      "ObjectId" : "66680b53d1b4e9110f5c9e8ec2f3157a31efb2d1",
      "LastModified" : "2017-06-14T21:06:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add any additional drake libraries as needed\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# find some extra external libraries that are usually targeted by drake\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# this isn't a library so don't put it in DRAKE_EXTERNAL_LIBRARIES\n",
        "Line" : 67,
        "CharPositionInLine" : 24
      },
      "3" : {
        "Text" : "# this is where the drake lcmtypes live\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/modules/FindEigen.cmake" : {
      "ObjectId" : "e687bf2fd283901ec377f14c40c301bc1d6b1ab3",
      "LastModified" : "2017-06-14T21:06:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# Find Eigen3\n\n#\n\n# This sets the following variables:\n\n# EIGEN_FOUND - True if Eigen was found.\n\n# EIGEN_INCLUDE_DIRS - Directories containing the Eigen include files.\n\n# EIGEN_DEFINITIONS - Compiler flags for Eigen.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindGFlags.cmake" : {
      "ObjectId" : "68473948a1124f18c9ede63b1b6f8a1fa7404b2e",
      "LastModified" : "2018-01-18T14:27:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n\n# vi: set ft=cmake :\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2018, Massachusetts Institute of Technology.\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright notice, this\n\n#   list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright notice,\n\n#   this list of conditions and the following disclaimer in the documentation\n\n#   and/or other materials provided with the distribution.\n\n#\n\n# * Neither the name of the Massachusetts Institute of Technology nor the names\n\n#   of its contributors may be used to endorse or promote products derived from\n\n#   this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE MASSACHUSETTS INSTITUTE OF TECHNOLOGY AND\n\n# CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT\n\n# NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A\n\n# PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE MASSACHUSETTS\n\n# INSTITUTE OF TECHNOLOGY OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n\n# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n\n# OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\n# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\n# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n\n# EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/set-python-args.cmake" : {
      "ObjectId" : "85ac87e5fbe588ce9fc48614e44e34b0771b7988",
      "LastModified" : "2018-01-18T14:27:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# using \"python-config --prefix\" so that cmake always uses the python that is\n\n# in the users path, this is a fix for homebrew on Mac:\n\n# https://github.com/Homebrew/homebrew/issues/25118\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "spartan_lcmtypes/CMakeLists.txt" : {
      "ObjectId" : "1291f6751702f8087e6b144516718f825fb9f18e",
      "LastModified" : "2018-01-18T14:27:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enable ELF hidden visibility\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Enable PIC\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO remove when minimum CMake >= 3.7\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "spartan_lcmtypes/cmake/UseJava.cmake" : {
      "ObjectId" : "890dba322d6f4f98d6fc9561e1ef63bab963c358",
      "LastModified" : "2018-01-18T14:27:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# UseJava\n\n# -------\n\n#\n\n# Use Module for Java\n\n#\n\n# This file provides functions for Java.  It is assumed that\n\n# FindJava.cmake has already been loaded.  See FindJava.cmake for\n\n# information on how to load Java into your CMake project.\n\n#\n\n# ::\n\n#\n\n#  add_jar(target_name\n\n#          [SOURCES] source1 [source2 ...] [resource1 ...]\n\n#          [INCLUDE_JARS jar1 [jar2 ...]]\n\n#          [ENTRY_POINT entry]\n\n#          [VERSION version]\n\n#          [OUTPUT_NAME name]\n\n#          [OUTPUT_DIR dir]\n\n#          )\n\n#\n\n# This command creates a <target_name>.jar.  It compiles the given\n\n# source files (source) and adds the given resource files (resource) to\n\n# the jar file.  Source files can be java files or listing files\n\n# (prefixed by '@').  If only resource files are given then just a jar file\n\n# is created.  The list of include jars are added to the classpath when\n\n# compiling the java sources and also to the dependencies of the target.\n\n# INCLUDE_JARS also accepts other target names created by add_jar.  For\n\n# backwards compatibility, jar files listed as sources are ignored (as\n\n# they have been since the first version of this module).\n\n#\n\n# The default OUTPUT_DIR can also be changed by setting the variable\n\n# CMAKE_JAVA_TARGET_OUTPUT_DIR.\n\n#\n\n# Additional instructions:\n\n#\n\n# ::\n\n#\n\n#    To add compile flags to the target you can set these flags with\n\n#    the following variable:\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#        set(CMAKE_JAVA_COMPILE_FLAGS -nowarn)\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#    To add a path or a jar file to the class path you can do this\n\n#    with the CMAKE_JAVA_INCLUDE_PATH variable.\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#        set(CMAKE_JAVA_INCLUDE_PATH /usr/share/java/shibboleet.jar)\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#    To use a different output name for the target you can set it with:\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#        add_jar(foobar foobar.java OUTPUT_NAME shibboleet.jar)\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#    To use a different output directory than CMAKE_CURRENT_BINARY_DIR\n\n#    you can set it with:\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#        add_jar(foobar foobar.java OUTPUT_DIR ${PROJECT_BINARY_DIR}/bin)\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#    To define an entry point in your jar you can set it with the ENTRY_POINT\n\n#    named argument:\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#        add_jar(example ENTRY_POINT com/examples/MyProject/Main)\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#    To define a custom manifest for the jar, you can set it with the manifest\n\n#    named argument:\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#        add_jar(example MANIFEST /path/to/manifest)\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#    To add a VERSION to the target output name you can set it using\n\n#    the VERSION named argument to add_jar. This will create a jar file with the\n\n#    name shibboleet-1.0.0.jar and will create a symlink shibboleet.jar\n\n#    pointing to the jar with the version information.\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#        add_jar(shibboleet shibbotleet.java VERSION 1.2.0)\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#     If the target is a JNI library, utilize the following commands to\n\n#     create a JNI symbolic link:\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#        set(CMAKE_JNI_TARGET TRUE)\n\n#        add_jar(shibboleet shibbotleet.java VERSION 1.2.0)\n\n#        install_jar(shibboleet ${LIB_INSTALL_DIR}/shibboleet)\n\n#        install_jni_symlink(shibboleet ${JAVA_LIB_INSTALL_DIR})\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#     If a single target needs to produce more than one jar from its\n\n#     java source code, to prevent the accumulation of duplicate class\n\n#     files in subsequent jars, set/reset CMAKE_JAR_CLASSES_PREFIX prior\n\n#     to calling the add_jar() function:\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#        set(CMAKE_JAR_CLASSES_PREFIX com/redhat/foo)\n\n#        add_jar(foo foo.java)\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#        set(CMAKE_JAR_CLASSES_PREFIX com/redhat/bar)\n\n#        add_jar(bar bar.java)\n\n#\n\n#\n\n#\n\n# Target Properties:\n\n#\n\n# ::\n\n#\n\n#    The add_jar() function sets some target properties. You can get these\n\n#    properties with the\n\n#       get_property(TARGET <target_name> PROPERTY <propery_name>)\n\n#    command.\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#    INSTALL_FILES      The files which should be installed. This is used by\n\n#                       install_jar().\n\n#    JNI_SYMLINK        The JNI symlink which should be installed.\n\n#                       This is used by install_jni_symlink().\n\n#    JAR_FILE           The location of the jar file so that you can include\n\n#                       it.\n\n#    CLASSDIR           The directory where the class files can be found. For\n\n#                       example to use them with javah.\n\n#\n\n# ::\n\n#\n\n#  find_jar(<VAR>\n\n#           name | NAMES name1 [name2 ...]\n\n#           [PATHS path1 [path2 ... ENV var]]\n\n#           [VERSIONS version1 [version2]]\n\n#           [DOC \"cache documentation string\"]\n\n#           )\n\n#\n\n# This command is used to find a full path to the named jar.  A cache\n\n# entry named by <VAR> is created to stor the result of this command.\n\n# If the full path to a jar is found the result is stored in the\n\n# variable and the search will not repeated unless the variable is\n\n# cleared.  If nothing is found, the result will be <VAR>-NOTFOUND, and\n\n# the search will be attempted again next time find_jar is invoked with\n\n# the same variable.  The name of the full path to a file that is\n\n# searched for is specified by the names listed after NAMES argument.\n\n# Additional search locations can be specified after the PATHS argument.\n\n# If you require special a version of a jar file you can specify it with\n\n# the VERSIONS argument.  The argument after DOC will be used for the\n\n# documentation string in the cache.\n\n#\n\n# ::\n\n#\n\n#  install_jar(target_name destination)\n\n#  install_jar(target_name DESTINATION destination [COMPONENT component])\n\n#\n\n# This command installs the TARGET_NAME files to the given DESTINATION.\n\n# It should be called in the same scope as add_jar() or it will fail.\n\n#\n\n# Target Properties:\n\n#\n\n# ::\n\n#\n\n#    The install_jar() function sets the INSTALL_DESTINATION target property\n\n#    on jars so installed. This property holds the DESTINATION as described\n\n#    above, and is used by install_jar_exports(). You can get this property\n\n#    with the\n\n#       get_property(TARGET <target_name> PROPERTY INSTALL_DESTINATION)\n\n#    command.\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#  install_jni_symlink(target_name destination)\n\n#  install_jni_symlink(target_name DESTINATION destination [COMPONENT component])\n\n#\n\n# This command installs the TARGET_NAME JNI symlinks to the given\n\n# DESTINATION.  It should be called in the same scope as add_jar() or it\n\n# will fail.\n\n#\n\n# ::\n\n#\n\n#  install_jar_exports(TARGETS jar1 [jar2 ...]\n\n#                      FILE export_filename\n\n#                      DESTINATION destination [COMPONENT component])\n\n#\n\n# This command installs a target export file export_filename for the named jar\n\n# targets to the given DESTINATION. Its function is similar to that of\n\n# install(EXPORTS).\n\n#\n\n# ::\n\n#\n\n#  export_jars(TARGETS jar1 [jar2 ...]\n\n#              FILE export_filename)\n\n#\n\n# This command writes a target export file export_filename for the named jar\n\n# targets. Its function is similar to that of export().\n\n#\n\n# ::\n\n#\n\n#  create_javadoc(<VAR>\n\n#                 PACKAGES pkg1 [pkg2 ...]\n\n#                 [SOURCEPATH <sourcepath>]\n\n#                 [CLASSPATH <classpath>]\n\n#                 [INSTALLPATH <install path>]\n\n#                 [DOCTITLE \"the documentation title\"]\n\n#                 [WINDOWTITLE \"the title of the document\"]\n\n#                 [AUTHOR TRUE|FALSE]\n\n#                 [USE TRUE|FALSE]\n\n#                 [VERSION TRUE|FALSE]\n\n#                 )\n\n#\n\n# Create java documentation based on files or packages.  For more\n\n# details please read the javadoc manpage.\n\n#\n\n# There are two main signatures for create_javadoc.  The first signature\n\n# works with package names on a path with source files:\n\n#\n\n# ::\n\n#\n\n#    Example:\n\n#    create_javadoc(my_example_doc\n\n#      PACKAGES com.exmaple.foo com.example.bar\n\n#      SOURCEPATH \"${CMAKE_CURRENT_SOURCE_DIR}\"\n\n#      CLASSPATH ${CMAKE_JAVA_INCLUDE_PATH}\n\n#      WINDOWTITLE \"My example\"\n\n#      DOCTITLE \"<h1>My example</h1>\"\n\n#      AUTHOR TRUE\n\n#      USE TRUE\n\n#      VERSION TRUE\n\n#    )\n\n#\n\n#\n\n#\n\n# The second signature for create_javadoc works on a given list of\n\n# files.\n\n#\n\n# ::\n\n#\n\n#    create_javadoc(<VAR>\n\n#                   FILES file1 [file2 ...]\n\n#                   [CLASSPATH <classpath>]\n\n#                   [INSTALLPATH <install path>]\n\n#                   [DOCTITLE \"the documentation title\"]\n\n#                   [WINDOWTITLE \"the title of the document\"]\n\n#                   [AUTHOR TRUE|FALSE]\n\n#                   [USE TRUE|FALSE]\n\n#                   [VERSION TRUE|FALSE]\n\n#                  )\n\n#\n\n#\n\n#\n\n# Example:\n\n#\n\n# ::\n\n#\n\n#    create_javadoc(my_example_doc\n\n#      FILES ${example_SRCS}\n\n#      CLASSPATH ${CMAKE_JAVA_INCLUDE_PATH}\n\n#      WINDOWTITLE \"My example\"\n\n#      DOCTITLE \"<h1>My example</h1>\"\n\n#      AUTHOR TRUE\n\n#      USE TRUE\n\n#      VERSION TRUE\n\n#    )\n\n#\n\n#\n\n#\n\n# Both signatures share most of the options.  These options are the same\n\n# as what you can find in the javadoc manpage.  Please look at the\n\n# manpage for CLASSPATH, DOCTITLE, WINDOWTITLE, AUTHOR, USE and VERSION.\n\n#\n\n# The documentation will be by default installed to\n\n#\n\n# ::\n\n#\n\n#    ${CMAKE_INSTALL_PREFIX}/share/javadoc/<VAR>\n\n#\n\n#\n\n#\n\n# if you don't set the INSTALLPATH.\n\n#\n\n# ::\n\n#\n\n#  create_javah(TARGET <target>\n\n#               GENERATED_FILES <VAR>\n\n#               CLASSES <class>...\n\n#               [CLASSPATH <classpath>...]\n\n#               [DEPENDS <depend>...]\n\n#               [OUTPUT_NAME <path>|OUTPUT_DIR <path>]\n\n#               )\n\n#\n\n# Create C header files from java classes. These files provide the connective glue\n\n# that allow your Java and C code to interact.\n\n#\n\n# There are two main signatures for create_javah.  The first signature\n\n# returns generated files through variable specified by GENERATED_FILES option:\n\n#\n\n# ::\n\n#\n\n#    Example:\n\n#    Create_javah(GENERATED_FILES files_headers\n\n#      CLASSES org.cmake.HelloWorld\n\n#      CLASSPATH hello.jar\n\n#    )\n\n#\n\n#\n\n#\n\n# The second signature for create_javah creates a target which encapsulates\n\n# header files generation.\n\n#\n\n# ::\n\n#\n\n#    Example:\n\n#    Create_javah(TARGET target_headers\n\n#      CLASSES org.cmake.HelloWorld\n\n#      CLASSPATH hello.jar\n\n#    )\n\n#\n\n#\n\n#\n\n# Both signatures share same options.\n\n#\n\n#  ``CLASSES <class>...``\n\n#    Specifies Java classes used to generate headers.\n\n#\n\n#  ``CLASSPATH <classpath>...``\n\n#    Specifies various paths to look up classes. Here .class files, jar files or targets\n\n#    created by command add_jar can be used.\n\n#\n\n#  ``DEPENDS <depend>...``\n\n#    Targets on which the javah target depends\n\n#\n\n#  ``OUTPUT_NAME <path>``\n\n#    Concatenates the resulting header files for all the classes listed by option CLASSES\n\n#    into <path>. Same behavior as option '-o' of javah tool.\n\n#\n\n#  ``OUTPUT_DIR <path>``\n\n#    Sets the directory where the header files will be generated. Same behavior as option\n\n#    '-d' of javah tool. If not specified, ${CMAKE_CURRENT_BINARY_DIR} is used as output directory.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2013 OpenGamma Ltd. <graham@opengamma.com>\n\n# Copyright 2010-2011 Andreas schneider <asn@redhat.com>\n\n# Copyright 2010-2013 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 403,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# define helper scripts\n",
        "Line" : 451,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# In CMake < 2.8.12, add_jar used variables which were set prior to calling\n\n# add_jar for customizing the behavior of add_jar. In order to be backwards\n\n# compatible, check if any of those variables are set, and use them to\n\n# initialize values of the named arguments. (Giving the corresponding named\n\n# argument will override the value set here.)\n\n#\n\n# New features should use named arguments only.\n",
        "Line" : 465,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# reset\n",
        "Line" : 480,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Ignored for backward compatibility\n",
        "Line" : 578,
        "CharPositionInLine" : 12
      },
      "6" : {
        "Text" : "# Create the list of files to compile.\n",
        "Line" : 616,
        "CharPositionInLine" : 12
      },
      "7" : {
        "Text" : "# Compile the java files and create a list of class files\n",
        "Line" : 628,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# NOTE: this command generates an artificial dependency file\n",
        "Line" : 630,
        "CharPositionInLine" : 12
      },
      "9" : {
        "Text" : "# create an empty java_class_filelist\n",
        "Line" : 652,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# create the jar file\n",
        "Line" : 658,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Add the target and make sure we have the latest resource files.\n",
        "Line" : 698,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# ckeck parameters\n",
        "Line" : 1263,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# handle javah options\n",
        "Line" : 1282,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# CLASSPATH can specify directories, jar files or targets created with add_jar command\n",
        "Line" : 1286,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "# compute output names\n",
        "Line" : 1327,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# finalize custom command arguments\n",
        "Line" : 1335,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Parse and validate arguments\n",
        "Line" : 1355,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Set content of generated exports file\n",
        "Line" : 1369,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Generate exports file\n",
        "Line" : 1378,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Parse and validate arguments\n",
        "Line" : 1387,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Determine relative path from installed export file to install prefix\n",
        "Line" : 1408,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Set up unique location for generated exports file\n",
        "Line" : 1421,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# Set content of generated exports file\n",
        "Line" : 1425,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# Generate and install exports file\n",
        "Line" : 1434,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 25
    },
    "spartan_lcmtypes/cmake/UseJavaClassFilelist.cmake" : {
      "ObjectId" : "e8e6f014cf724832faa135048fe3ec1b0aae9ec8",
      "LastModified" : "2018-01-18T14:27:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# UseJavaClassFilelist\n\n# --------------------\n\n#\n\n#\n\n#\n\n#\n\n#\n\n# This script create a list of compiled Java class files to be added to\n\n# a jar file.  This avoids including cmake files which get created in\n\n# the binary directory.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2010-2011 Andreas schneider <asn@redhat.com>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# file(GLOB_RECURSE foo RELATIVE) is broken so we need this.\n",
        "Line" : 44,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# write to file\n",
        "Line" : 50,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 4
    },
    "spartan_lcmtypes/cmake/UseJavaSymlinks.cmake" : {
      "ObjectId" : "90ffdd53575dfa8fd1742defc0b73917750f3907",
      "LastModified" : "2018-01-18T14:27:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# UseJavaSymlinks\n\n# ---------------\n\n#\n\n#\n\n#\n\n#\n\n#\n\n# Helper script for UseJava.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2010-2011 Andreas schneider <asn@redhat.com>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "spartan_lcmtypes/lcmtypes/CMakeLists.txt" : {
      "ObjectId" : "3985bdb42eb8341441e45ddb3116b195478bab61",
      "LastModified" : "2018-01-18T14:27:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Exported targets for build directory\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Exported targets for installation\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Install package configuration files\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "spartan_lcmtypes/pkgconfig/CMakeLists.txt" : {
      "ObjectId" : "8ae87b613be9dbdc4ce47a73d8d3c3b67af5a16a",
      "LastModified" : "2018-01-18T14:27:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/ContactParticleFilter/CMakeLists.txt" : {
      "ObjectId" : "037ad8f51fd7db40415e9272f169b6c6114decec",
      "LastModified" : "2018-01-18T14:27:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_subdirectory(src)\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/ContactParticleFilter/cpf_lcmtypes/CMakeLists.txt" : {
      "ObjectId" : "d0f52719b087ec968cc5341be1b2b1902af68f40",
      "LastModified" : "2018-01-18T14:27:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enable ELF hidden visibility\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Enable PIC\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO remove when minimum CMake >= 3.7\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/ContactParticleFilter/cpf_lcmtypes/cmake/UseJava.cmake" : {
      "ObjectId" : "890dba322d6f4f98d6fc9561e1ef63bab963c358",
      "LastModified" : "2018-01-18T14:27:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# UseJava\n\n# -------\n\n#\n\n# Use Module for Java\n\n#\n\n# This file provides functions for Java.  It is assumed that\n\n# FindJava.cmake has already been loaded.  See FindJava.cmake for\n\n# information on how to load Java into your CMake project.\n\n#\n\n# ::\n\n#\n\n#  add_jar(target_name\n\n#          [SOURCES] source1 [source2 ...] [resource1 ...]\n\n#          [INCLUDE_JARS jar1 [jar2 ...]]\n\n#          [ENTRY_POINT entry]\n\n#          [VERSION version]\n\n#          [OUTPUT_NAME name]\n\n#          [OUTPUT_DIR dir]\n\n#          )\n\n#\n\n# This command creates a <target_name>.jar.  It compiles the given\n\n# source files (source) and adds the given resource files (resource) to\n\n# the jar file.  Source files can be java files or listing files\n\n# (prefixed by '@').  If only resource files are given then just a jar file\n\n# is created.  The list of include jars are added to the classpath when\n\n# compiling the java sources and also to the dependencies of the target.\n\n# INCLUDE_JARS also accepts other target names created by add_jar.  For\n\n# backwards compatibility, jar files listed as sources are ignored (as\n\n# they have been since the first version of this module).\n\n#\n\n# The default OUTPUT_DIR can also be changed by setting the variable\n\n# CMAKE_JAVA_TARGET_OUTPUT_DIR.\n\n#\n\n# Additional instructions:\n\n#\n\n# ::\n\n#\n\n#    To add compile flags to the target you can set these flags with\n\n#    the following variable:\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#        set(CMAKE_JAVA_COMPILE_FLAGS -nowarn)\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#    To add a path or a jar file to the class path you can do this\n\n#    with the CMAKE_JAVA_INCLUDE_PATH variable.\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#        set(CMAKE_JAVA_INCLUDE_PATH /usr/share/java/shibboleet.jar)\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#    To use a different output name for the target you can set it with:\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#        add_jar(foobar foobar.java OUTPUT_NAME shibboleet.jar)\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#    To use a different output directory than CMAKE_CURRENT_BINARY_DIR\n\n#    you can set it with:\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#        add_jar(foobar foobar.java OUTPUT_DIR ${PROJECT_BINARY_DIR}/bin)\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#    To define an entry point in your jar you can set it with the ENTRY_POINT\n\n#    named argument:\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#        add_jar(example ENTRY_POINT com/examples/MyProject/Main)\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#    To define a custom manifest for the jar, you can set it with the manifest\n\n#    named argument:\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#        add_jar(example MANIFEST /path/to/manifest)\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#    To add a VERSION to the target output name you can set it using\n\n#    the VERSION named argument to add_jar. This will create a jar file with the\n\n#    name shibboleet-1.0.0.jar and will create a symlink shibboleet.jar\n\n#    pointing to the jar with the version information.\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#        add_jar(shibboleet shibbotleet.java VERSION 1.2.0)\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#     If the target is a JNI library, utilize the following commands to\n\n#     create a JNI symbolic link:\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#        set(CMAKE_JNI_TARGET TRUE)\n\n#        add_jar(shibboleet shibbotleet.java VERSION 1.2.0)\n\n#        install_jar(shibboleet ${LIB_INSTALL_DIR}/shibboleet)\n\n#        install_jni_symlink(shibboleet ${JAVA_LIB_INSTALL_DIR})\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#     If a single target needs to produce more than one jar from its\n\n#     java source code, to prevent the accumulation of duplicate class\n\n#     files in subsequent jars, set/reset CMAKE_JAR_CLASSES_PREFIX prior\n\n#     to calling the add_jar() function:\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#        set(CMAKE_JAR_CLASSES_PREFIX com/redhat/foo)\n\n#        add_jar(foo foo.java)\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#        set(CMAKE_JAR_CLASSES_PREFIX com/redhat/bar)\n\n#        add_jar(bar bar.java)\n\n#\n\n#\n\n#\n\n# Target Properties:\n\n#\n\n# ::\n\n#\n\n#    The add_jar() function sets some target properties. You can get these\n\n#    properties with the\n\n#       get_property(TARGET <target_name> PROPERTY <propery_name>)\n\n#    command.\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#    INSTALL_FILES      The files which should be installed. This is used by\n\n#                       install_jar().\n\n#    JNI_SYMLINK        The JNI symlink which should be installed.\n\n#                       This is used by install_jni_symlink().\n\n#    JAR_FILE           The location of the jar file so that you can include\n\n#                       it.\n\n#    CLASSDIR           The directory where the class files can be found. For\n\n#                       example to use them with javah.\n\n#\n\n# ::\n\n#\n\n#  find_jar(<VAR>\n\n#           name | NAMES name1 [name2 ...]\n\n#           [PATHS path1 [path2 ... ENV var]]\n\n#           [VERSIONS version1 [version2]]\n\n#           [DOC \"cache documentation string\"]\n\n#           )\n\n#\n\n# This command is used to find a full path to the named jar.  A cache\n\n# entry named by <VAR> is created to stor the result of this command.\n\n# If the full path to a jar is found the result is stored in the\n\n# variable and the search will not repeated unless the variable is\n\n# cleared.  If nothing is found, the result will be <VAR>-NOTFOUND, and\n\n# the search will be attempted again next time find_jar is invoked with\n\n# the same variable.  The name of the full path to a file that is\n\n# searched for is specified by the names listed after NAMES argument.\n\n# Additional search locations can be specified after the PATHS argument.\n\n# If you require special a version of a jar file you can specify it with\n\n# the VERSIONS argument.  The argument after DOC will be used for the\n\n# documentation string in the cache.\n\n#\n\n# ::\n\n#\n\n#  install_jar(target_name destination)\n\n#  install_jar(target_name DESTINATION destination [COMPONENT component])\n\n#\n\n# This command installs the TARGET_NAME files to the given DESTINATION.\n\n# It should be called in the same scope as add_jar() or it will fail.\n\n#\n\n# Target Properties:\n\n#\n\n# ::\n\n#\n\n#    The install_jar() function sets the INSTALL_DESTINATION target property\n\n#    on jars so installed. This property holds the DESTINATION as described\n\n#    above, and is used by install_jar_exports(). You can get this property\n\n#    with the\n\n#       get_property(TARGET <target_name> PROPERTY INSTALL_DESTINATION)\n\n#    command.\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#  install_jni_symlink(target_name destination)\n\n#  install_jni_symlink(target_name DESTINATION destination [COMPONENT component])\n\n#\n\n# This command installs the TARGET_NAME JNI symlinks to the given\n\n# DESTINATION.  It should be called in the same scope as add_jar() or it\n\n# will fail.\n\n#\n\n# ::\n\n#\n\n#  install_jar_exports(TARGETS jar1 [jar2 ...]\n\n#                      FILE export_filename\n\n#                      DESTINATION destination [COMPONENT component])\n\n#\n\n# This command installs a target export file export_filename for the named jar\n\n# targets to the given DESTINATION. Its function is similar to that of\n\n# install(EXPORTS).\n\n#\n\n# ::\n\n#\n\n#  export_jars(TARGETS jar1 [jar2 ...]\n\n#              FILE export_filename)\n\n#\n\n# This command writes a target export file export_filename for the named jar\n\n# targets. Its function is similar to that of export().\n\n#\n\n# ::\n\n#\n\n#  create_javadoc(<VAR>\n\n#                 PACKAGES pkg1 [pkg2 ...]\n\n#                 [SOURCEPATH <sourcepath>]\n\n#                 [CLASSPATH <classpath>]\n\n#                 [INSTALLPATH <install path>]\n\n#                 [DOCTITLE \"the documentation title\"]\n\n#                 [WINDOWTITLE \"the title of the document\"]\n\n#                 [AUTHOR TRUE|FALSE]\n\n#                 [USE TRUE|FALSE]\n\n#                 [VERSION TRUE|FALSE]\n\n#                 )\n\n#\n\n# Create java documentation based on files or packages.  For more\n\n# details please read the javadoc manpage.\n\n#\n\n# There are two main signatures for create_javadoc.  The first signature\n\n# works with package names on a path with source files:\n\n#\n\n# ::\n\n#\n\n#    Example:\n\n#    create_javadoc(my_example_doc\n\n#      PACKAGES com.exmaple.foo com.example.bar\n\n#      SOURCEPATH \"${CMAKE_CURRENT_SOURCE_DIR}\"\n\n#      CLASSPATH ${CMAKE_JAVA_INCLUDE_PATH}\n\n#      WINDOWTITLE \"My example\"\n\n#      DOCTITLE \"<h1>My example</h1>\"\n\n#      AUTHOR TRUE\n\n#      USE TRUE\n\n#      VERSION TRUE\n\n#    )\n\n#\n\n#\n\n#\n\n# The second signature for create_javadoc works on a given list of\n\n# files.\n\n#\n\n# ::\n\n#\n\n#    create_javadoc(<VAR>\n\n#                   FILES file1 [file2 ...]\n\n#                   [CLASSPATH <classpath>]\n\n#                   [INSTALLPATH <install path>]\n\n#                   [DOCTITLE \"the documentation title\"]\n\n#                   [WINDOWTITLE \"the title of the document\"]\n\n#                   [AUTHOR TRUE|FALSE]\n\n#                   [USE TRUE|FALSE]\n\n#                   [VERSION TRUE|FALSE]\n\n#                  )\n\n#\n\n#\n\n#\n\n# Example:\n\n#\n\n# ::\n\n#\n\n#    create_javadoc(my_example_doc\n\n#      FILES ${example_SRCS}\n\n#      CLASSPATH ${CMAKE_JAVA_INCLUDE_PATH}\n\n#      WINDOWTITLE \"My example\"\n\n#      DOCTITLE \"<h1>My example</h1>\"\n\n#      AUTHOR TRUE\n\n#      USE TRUE\n\n#      VERSION TRUE\n\n#    )\n\n#\n\n#\n\n#\n\n# Both signatures share most of the options.  These options are the same\n\n# as what you can find in the javadoc manpage.  Please look at the\n\n# manpage for CLASSPATH, DOCTITLE, WINDOWTITLE, AUTHOR, USE and VERSION.\n\n#\n\n# The documentation will be by default installed to\n\n#\n\n# ::\n\n#\n\n#    ${CMAKE_INSTALL_PREFIX}/share/javadoc/<VAR>\n\n#\n\n#\n\n#\n\n# if you don't set the INSTALLPATH.\n\n#\n\n# ::\n\n#\n\n#  create_javah(TARGET <target>\n\n#               GENERATED_FILES <VAR>\n\n#               CLASSES <class>...\n\n#               [CLASSPATH <classpath>...]\n\n#               [DEPENDS <depend>...]\n\n#               [OUTPUT_NAME <path>|OUTPUT_DIR <path>]\n\n#               )\n\n#\n\n# Create C header files from java classes. These files provide the connective glue\n\n# that allow your Java and C code to interact.\n\n#\n\n# There are two main signatures for create_javah.  The first signature\n\n# returns generated files through variable specified by GENERATED_FILES option:\n\n#\n\n# ::\n\n#\n\n#    Example:\n\n#    Create_javah(GENERATED_FILES files_headers\n\n#      CLASSES org.cmake.HelloWorld\n\n#      CLASSPATH hello.jar\n\n#    )\n\n#\n\n#\n\n#\n\n# The second signature for create_javah creates a target which encapsulates\n\n# header files generation.\n\n#\n\n# ::\n\n#\n\n#    Example:\n\n#    Create_javah(TARGET target_headers\n\n#      CLASSES org.cmake.HelloWorld\n\n#      CLASSPATH hello.jar\n\n#    )\n\n#\n\n#\n\n#\n\n# Both signatures share same options.\n\n#\n\n#  ``CLASSES <class>...``\n\n#    Specifies Java classes used to generate headers.\n\n#\n\n#  ``CLASSPATH <classpath>...``\n\n#    Specifies various paths to look up classes. Here .class files, jar files or targets\n\n#    created by command add_jar can be used.\n\n#\n\n#  ``DEPENDS <depend>...``\n\n#    Targets on which the javah target depends\n\n#\n\n#  ``OUTPUT_NAME <path>``\n\n#    Concatenates the resulting header files for all the classes listed by option CLASSES\n\n#    into <path>. Same behavior as option '-o' of javah tool.\n\n#\n\n#  ``OUTPUT_DIR <path>``\n\n#    Sets the directory where the header files will be generated. Same behavior as option\n\n#    '-d' of javah tool. If not specified, ${CMAKE_CURRENT_BINARY_DIR} is used as output directory.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2013 OpenGamma Ltd. <graham@opengamma.com>\n\n# Copyright 2010-2011 Andreas schneider <asn@redhat.com>\n\n# Copyright 2010-2013 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 403,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# define helper scripts\n",
        "Line" : 451,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# In CMake < 2.8.12, add_jar used variables which were set prior to calling\n\n# add_jar for customizing the behavior of add_jar. In order to be backwards\n\n# compatible, check if any of those variables are set, and use them to\n\n# initialize values of the named arguments. (Giving the corresponding named\n\n# argument will override the value set here.)\n\n#\n\n# New features should use named arguments only.\n",
        "Line" : 465,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# reset\n",
        "Line" : 480,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Ignored for backward compatibility\n",
        "Line" : 578,
        "CharPositionInLine" : 12
      },
      "6" : {
        "Text" : "# Create the list of files to compile.\n",
        "Line" : 616,
        "CharPositionInLine" : 12
      },
      "7" : {
        "Text" : "# Compile the java files and create a list of class files\n",
        "Line" : 628,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# NOTE: this command generates an artificial dependency file\n",
        "Line" : 630,
        "CharPositionInLine" : 12
      },
      "9" : {
        "Text" : "# create an empty java_class_filelist\n",
        "Line" : 652,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# create the jar file\n",
        "Line" : 658,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Add the target and make sure we have the latest resource files.\n",
        "Line" : 698,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# ckeck parameters\n",
        "Line" : 1263,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# handle javah options\n",
        "Line" : 1282,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# CLASSPATH can specify directories, jar files or targets created with add_jar command\n",
        "Line" : 1286,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "# compute output names\n",
        "Line" : 1327,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# finalize custom command arguments\n",
        "Line" : 1335,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Parse and validate arguments\n",
        "Line" : 1355,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Set content of generated exports file\n",
        "Line" : 1369,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Generate exports file\n",
        "Line" : 1378,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Parse and validate arguments\n",
        "Line" : 1387,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Determine relative path from installed export file to install prefix\n",
        "Line" : 1408,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Set up unique location for generated exports file\n",
        "Line" : 1421,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# Set content of generated exports file\n",
        "Line" : 1425,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# Generate and install exports file\n",
        "Line" : 1434,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 25
    },
    "src/ContactParticleFilter/cpf_lcmtypes/cmake/UseJavaClassFilelist.cmake" : {
      "ObjectId" : "e8e6f014cf724832faa135048fe3ec1b0aae9ec8",
      "LastModified" : "2018-01-18T14:27:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# UseJavaClassFilelist\n\n# --------------------\n\n#\n\n#\n\n#\n\n#\n\n#\n\n# This script create a list of compiled Java class files to be added to\n\n# a jar file.  This avoids including cmake files which get created in\n\n# the binary directory.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2010-2011 Andreas schneider <asn@redhat.com>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# file(GLOB_RECURSE foo RELATIVE) is broken so we need this.\n",
        "Line" : 44,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# write to file\n",
        "Line" : 50,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 4
    },
    "src/ContactParticleFilter/cpf_lcmtypes/cmake/UseJavaSymlinks.cmake" : {
      "ObjectId" : "90ffdd53575dfa8fd1742defc0b73917750f3907",
      "LastModified" : "2018-01-18T14:27:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# UseJavaSymlinks\n\n# ---------------\n\n#\n\n#\n\n#\n\n#\n\n#\n\n# Helper script for UseJava.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2010-2011 Andreas schneider <asn@redhat.com>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/ContactParticleFilter/cpf_lcmtypes/lcmtypes/CMakeLists.txt" : {
      "ObjectId" : "ec7628a4c8c6d2aa5b67d6d2d407ae671a7f4bd6",
      "LastModified" : "2018-01-18T14:27:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Exported targets for build directory\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Exported targets for installation\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Install package configuration files\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/ContactParticleFilter/cpf_lcmtypes/pkgconfig/CMakeLists.txt" : {
      "ObjectId" : "9b24dc03e059b68d777b17d1fa1d739964f2ec30",
      "LastModified" : "2018-01-18T14:27:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/ContactParticleFilter/src/CMakeLists.txt" : {
      "ObjectId" : "07489c5c8d5dd672eefbd223d732fcdb80a8261f",
      "LastModified" : "2018-01-18T14:27:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/ObjectDetection/CMakeLists.txt" : {
      "ObjectId" : "3eec83a233b74757c21eb7d001ce26e1a581d8b7",
      "LastModified" : "2018-01-18T14:27:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/ObjectDetection/src/CMakeLists.txt" : {
      "ObjectId" : "d372adafb526774c5b57621f6ebc53c074cb16b8",
      "LastModified" : "2018-01-18T14:27:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/ReachabilityAnalyzer/CMakeLists.txt" : {
      "ObjectId" : "4eafd5dc6882a825223d45e21ae090087caf2876",
      "LastModified" : "2018-01-20T01:34:03Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/RemoteTreeViewer/CMakeLists.txt" : {
      "ObjectId" : "362f3a11549e26ad178282a66b2065e3706fccc3",
      "LastModified" : "2018-02-07T19:54:23Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/catkin_projects/CMakeLists.txt" : {
      "ObjectId" : "d11c4d3a3f772bda8dbe98ec594abc72476f037e",
      "LastModified" : "2018-01-18T14:27:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# toplevel CMakeLists.txt for a catkin workspace\n\n# catkin/cmake/toplevel.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# search for catkin within the workspace\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# searching fot catkin resulted in an error\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# include catkin from workspace or via find_package()\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# include all.cmake without add_subdirectory to let it operate in same scope\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# use either CMAKE_PREFIX_PATH explicitly passed to CMake as a command line argument\n\n# or CMAKE_PREFIX_PATH from the environment\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# list of catkin workspaces\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# search for catkin in all workspaces\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "src/catkin_projects/camera_config/CMakeLists.txt" : {
      "ObjectId" : "dc52406bcd907c1c11f45437fe33dbfcf7a27a0f",
      "LastModified" : "2018-01-18T14:27:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Compile as C++11, supported in ROS Kinetic and newer\n\n# add_compile_options(-std=c++11)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Find catkin macros and libraries\n\n## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)\n\n## is used, also find other catkin packages\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## System dependencies are found with CMake's conventions\n\n# find_package(Boost REQUIRED COMPONENTS system)\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Uncomment this if the package has a setup.py. This macro ensures\n\n## modules and global scripts declared therein get installed\n\n## See http://ros.org/doc/api/catkin/html/user_guide/setup_dot_py.html\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "################################################\n\n## Declare ROS messages, services and actions ##\n\n################################################\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## To declare and build messages, services or actions from within this\n\n## package, follow these steps:\n\n## * Let MSG_DEP_SET be the set of packages whose message types you use in\n\n##   your messages/services/actions (e.g. std_msgs, actionlib_msgs, ...).\n\n## * In the file package.xml:\n\n##   * add a build_depend tag for \"message_generation\"\n\n##   * add a build_depend and a run_depend tag for each package in MSG_DEP_SET\n\n##   * If MSG_DEP_SET isn't empty the following dependency has been pulled in\n\n##     but can be declared for certainty nonetheless:\n\n##     * add a run_depend tag for \"message_runtime\"\n\n## * In this file (CMakeLists.txt):\n\n##   * add \"message_generation\" and every package in MSG_DEP_SET to\n\n##     find_package(catkin REQUIRED COMPONENTS ...)\n\n##   * add \"message_runtime\" and every package in MSG_DEP_SET to\n\n##     catkin_package(CATKIN_DEPENDS ...)\n\n##   * uncomment the add_*_files sections below as needed\n\n##     and list every .msg/.srv/.action file to be processed\n\n##   * uncomment the generate_messages entry below\n\n##   * add every package in MSG_DEP_SET to generate_messages(DEPENDENCIES ...)\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Generate messages in the 'msg' folder\n\n# add_message_files(\n\n#   FILES\n\n#   Message1.msg\n\n#   Message2.msg\n\n# )\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## Generate services in the 'srv' folder\n\n# add_service_files(\n\n#   FILES\n\n#   Service1.srv\n\n#   Service2.srv\n\n# )\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Generate actions in the 'action' folder\n\n# add_action_files(\n\n#   FILES\n\n#   Action1.action\n\n#   Action2.action\n\n# )\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## Generate added messages and services with any dependencies listed here\n\n# generate_messages(\n\n#   DEPENDENCIES\n\n#   std_msgs\n\n# )\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "################################################\n\n## Declare ROS dynamic reconfigure parameters ##\n\n################################################\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## To declare and build dynamic reconfigure parameters within this\n\n## package, follow these steps:\n\n## * In the file package.xml:\n\n##   * add a build_depend and a run_depend tag for \"dynamic_reconfigure\"\n\n## * In this file (CMakeLists.txt):\n\n##   * add \"dynamic_reconfigure\" to\n\n##     find_package(catkin REQUIRED COMPONENTS ...)\n\n##   * uncomment the \"generate_dynamic_reconfigure_options\" section below\n\n##     and list every .cfg file to be processed\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## Generate dynamic reconfigure parameters in the 'cfg' folder\n\n# generate_dynamic_reconfigure_options(\n\n#   cfg/DynReconf1.cfg\n\n#   cfg/DynReconf2.cfg\n\n# )\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n\n## The catkin_package macro generates cmake config files for your package\n\n## Declare things to be passed to dependent projects\n\n## INCLUDE_DIRS: uncomment this if your package contains header files\n\n## LIBRARIES: libraries you create in this project that dependent projects also need\n\n## CATKIN_DEPENDS: catkin_packages dependent projects also need\n\n## DEPENDS: system dependencies of this project that dependent projects also need\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#  INCLUDE_DIRS include\n\n#  LIBRARIES camera_config\n\n#  CATKIN_DEPENDS rospy std_msgs tf\n\n#  DEPENDS system_lib\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## Specify additional locations of header files\n\n## Your package locations should be listed before other locations\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# include\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "## Declare a C++ library\n\n# add_library(${PROJECT_NAME}\n\n#   src/${PROJECT_NAME}/camera_config.cpp\n\n# )\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## Add cmake target dependencies of the library\n\n## as an example, code may need to be generated before libraries\n\n## either from message generation or dynamic reconfigure\n\n# add_dependencies(${PROJECT_NAME} ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## Declare a C++ executable\n\n## With catkin_make all packages are built within a single CMake context\n\n## The recommended prefix ensures that target names across packages don't collide\n\n# add_executable(${PROJECT_NAME}_node src/camera_config_node.cpp)\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "## Rename C++ executable without prefix\n\n## The above recommended prefix causes long target names, the following renames the\n\n## target back to the shorter version for ease of user use\n\n## e.g. \"rosrun someones_pkg node\" instead of \"rosrun someones_pkg someones_pkg_node\"\n\n# set_target_properties(${PROJECT_NAME}_node PROPERTIES OUTPUT_NAME node PREFIX \"\")\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "## Add cmake target dependencies of the executable\n\n## same as for the library above\n\n# add_dependencies(${PROJECT_NAME}_node ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "## Specify libraries to link a library or executable target against\n\n# target_link_libraries(${PROJECT_NAME}_node\n\n#   ${catkin_LIBRARIES}\n\n# )\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#############\n\n## Install ##\n\n#############\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# all install targets should use catkin DESTINATION variables\n\n# See http://ros.org/doc/api/catkin/html/adv_user_guide/variables.html\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# catkin_install_python(PROGRAMS\n\n# \tscripts/test_command.py\n\n# \tscripts/test_movement_service.py\n\n# \tscripts/test_ikservice.py\n\n# \tsrc/robot_control/trajectory_server.py\n\n# \tsrc/robot_control/robotmovementservice.py\n\n# \tsrc/robot_control/ikservice.py\n\n#   DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION})\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "## Mark executable scripts (Python etc.) for installation\n\n## in contrast to setup.py, you can choose the destination\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "## Mark executables and/or libraries for installation\n\n# install(TARGETS ${PROJECT_NAME} ${PROJECT_NAME}_node\n\n#   ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n\n#   LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n\n#   RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n# )\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "## Mark cpp header files for installation\n\n# install(DIRECTORY include/${PROJECT_NAME}/\n\n#   DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}\n\n#   FILES_MATCHING PATTERN \"*.h\"\n\n#   PATTERN \".svn\" EXCLUDE\n\n# )\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "## Mark other files for installation (e.g. launch and bag files, etc.)\n\n# install(FILES\n\n#   # myfile1\n\n#   # myfile2\n\n#   DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}\n\n# )\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#############\n\n## Testing ##\n\n#############\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "## Add gtest based cpp test target and link libraries\n\n# catkin_add_gtest(${PROJECT_NAME}-test test/test_camera_config.cpp)\n\n# if(TARGET ${PROJECT_NAME}-test)\n\n#   target_link_libraries(${PROJECT_NAME}-test ${PROJECT_NAME})\n\n# endif()\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "## Add folders to be run by python nosetests\n\n# catkin_add_nosetests(test)\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 34
    },
    "src/catkin_projects/carrot_msgs/CMakeLists.txt" : {
      "ObjectId" : "c202dfc49c5de0e77abe1522095ef0fa0efb80cc",
      "LastModified" : "2019-01-30T20:31:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Find catkin macros and libraries\n\n## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)\n\n## is used, also find other catkin packages\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## System dependencies are found with CMake's conventions\n\n# find_package(Boost REQUIRED COMPONENTS system)\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Uncomment this if the package has a setup.py. This macro ensures\n\n## modules and global scripts declared therein get installed\n\n## See http://ros.org/doc/api/catkin/html/user_guide/setup_dot_py.html\n\n#catkin_python_setup()\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "################################################\n\n## Declare ROS messages, services and actions ##\n\n################################################\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## To declare and build messages, services or actions from within this\n\n## package, follow these steps:\n\n## * Let MSG_DEP_SET be the set of packages whose message types you use in\n\n##   your messages/services/actions (e.g. std_msgs, actionlib_msgs, ...).\n\n## * In the file package.xml:\n\n##   * add a build_depend tag for \"message_generation\"\n\n##   * add a build_depend and a run_depend tag for each package in MSG_DEP_SET\n\n##   * If MSG_DEP_SET isn't empty the following dependency has been pulled in\n\n##     but can be declared for certainty nonetheless:\n\n##     * add a run_depend tag for \"message_runtime\"\n\n## * In this file (CMakeLists.txt):\n\n##   * add \"message_generation\" and every package in MSG_DEP_SET to\n\n##     find_package(catkin REQUIRED COMPONENTS ...)\n\n##   * add \"message_runtime\" and every package in MSG_DEP_SET to\n\n##     catkin_package(CATKIN_DEPENDS ...)\n\n##   * uncomment the add_*_files sections below as needed\n\n##     and list every .msg/.srv/.action file to be processed\n\n##   * uncomment the generate_messages entry below\n\n##   * add every package in MSG_DEP_SET to generate_messages(DEPENDENCIES ...)\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Generate messages in the 'msg' folder\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Generate services in the 'srv' folder\n\n#add_service_files(\n\n#  FILES\n\n#)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## Generate actions in the 'action' folder\n\n#add_action_files(\n\n#  FILES\n\n#)\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Generate added messages and services with any dependencies listed here\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Or other packages containing msgs\n",
        "Line" : 69,
        "CharPositionInLine" : 12
      },
      "10" : {
        "Text" : "################################################\n\n## Declare ROS dynamic reconfigure parameters ##\n\n################################################\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## To declare and build dynamic reconfigure parameters within this\n\n## package, follow these steps:\n\n## * In the file package.xml:\n\n##   * add a build_depend and a run_depend tag for \"dynamic_reconfigure\"\n\n## * In this file (CMakeLists.txt):\n\n##   * add \"dynamic_reconfigure\" to\n\n##     find_package(catkin REQUIRED COMPONENTS ...)\n\n##   * uncomment the \"generate_dynamic_reconfigure_options\" section below\n\n##     and list every .cfg file to be processed\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## Generate dynamic reconfigure parameters in the 'cfg' folder\n\n# generate_dynamic_reconfigure_options(\n\n#   cfg/DynReconf1.cfg\n\n#   cfg/DynReconf2.cfg\n\n# )\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n\n## The catkin_package macro generates cmake config files for your package\n\n## Declare things to be passed to dependent projects\n\n## INCLUDE_DIRS: uncomment this if you package contains header files\n\n## LIBRARIES: libraries you create in this project that dependent projects also need\n\n## CATKIN_DEPENDS: catkin_packages dependent projects also need\n\n## DEPENDS: system dependencies of this project that dependent projects also need\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# INCLUDE_DIRS\n\n# CATKIN_DEPENDS message_runtime\n\n#  LIBRARIES perception_msgs\n\n#  CATKIN_DEPENDS other_catkin_pkg\n\n#  DEPENDS system_lib\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## Specify additional locations of header files\n\n## Your package locations should be listed before other locations\n\n# include_directories(include)\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "## Declare a C++ library\n\n# add_library(robot_control\n\n#   src/${PROJECT_NAME}/robot_control.cpp\n\n# )\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "## Add cmake target dependencies of the library\n\n## as an example, code may need to be generated before libraries\n\n## either from message generation or dynamic reconfigure\n\n# add_dependencies(robot_control ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## Declare a C++ executable\n\n# add_executable(robot_control_node src/robot_control_node.cpp)\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## Add cmake target dependencies of the executable\n\n## same as for the library above\n\n# add_dependencies(robot_control_node ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "## Specify libraries to link a library or executable target against\n\n# target_link_libraries(robot_control_node\n\n#   ${catkin_LIBRARIES}\n\n# )\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#############\n\n## Install ##\n\n#############\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# all install targets should use catkin DESTINATION variables\n\n# See http://ros.org/doc/api/catkin/html/adv_user_guide/variables.html\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "## Mark executable scripts (Python etc.) for installation\n\n## in contrast to setup.py, you can choose the destination\n\n# install(PROGRAMS\n\n#   scripts/my_python_script\n\n#   DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n# )\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "## Mark executables and/or libraries for installation\n\n# install(TARGETS robot_control robot_control_node\n\n#   ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n\n#   LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n\n#   RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n# )\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "## Mark cpp header files for installation\n\n# install(DIRECTORY include/${PROJECT_NAME}/\n\n#   DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}\n\n#   FILES_MATCHING PATTERN \"*.h\"\n\n#   PATTERN \".svn\" EXCLUDE\n\n# )\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "## Mark other files for installation (e.g. launch and bag files, etc.)\n\n# install(FILES\n\n#   # myfile1\n\n#   # myfile2\n\n#   DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}\n\n# )\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#############\n\n## Testing ##\n\n#############\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "## Add gtest based cpp test target and link libraries\n\n# catkin_add_gtest(${PROJECT_NAME}-test test/test_robot_control.cpp)\n\n# if(TARGET ${PROJECT_NAME}-test)\n\n#   target_link_libraries(${PROJECT_NAME}-test ${PROJECT_NAME})\n\n# endif()\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "## Add folders to be run by python nosetests\n\n# catkin_add_nosetests(test)\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 31
    },
    "src/catkin_projects/drake_iiwa_sim/CMakeLists.txt" : {
      "ObjectId" : "657d298cd7c69b2dba16edc25cd69c1d396d72c6",
      "LastModified" : "2019-01-30T20:31:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Compile as C++11, supported in ROS Kinetic and newer\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# this needs to happen before the find_package(catkin . . . )\n\n# so that we end up using the Eigen version supplied by drake, rather\n\n# than the one that comes in as part of tf2_eigen\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Find catkin macros and libraries\n\n## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)\n\n## is used, also find other catkin packages\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## System dependencies are found with CMake's conventions\n\n# find_package(Boost REQUIRED COMPONENTS system)\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Uncomment this if the package has a setup.py. This macro ensures\n\n## modules and global scripts declared therein get installed\n\n## See http://ros.org/doc/api/catkin/html/user_guide/setup_dot_py.html\n\n# catkin_python_setup()\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "################################################\n\n## Declare ROS messages, services and actions ##\n\n################################################\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## To declare and build messages, services or actions from within this\n\n## package, follow these steps:\n\n## * Let MSG_DEP_SET be the set of packages whose message types you use in\n\n##   your messages/services/actions (e.g. std_msgs, actionlib_msgs, ...).\n\n## * In the file package.xml:\n\n##   * add a build_depend tag for \"message_generation\"\n\n##   * add a build_depend and a exec_depend tag for each package in MSG_DEP_SET\n\n##   * If MSG_DEP_SET isn't empty the following dependency has been pulled in\n\n##     but can be declared for certainty nonetheless:\n\n##     * add a exec_depend tag for \"message_runtime\"\n\n## * In this file (CMakeLists.txt):\n\n##   * add \"message_generation\" and every package in MSG_DEP_SET to\n\n##     find_package(catkin REQUIRED COMPONENTS ...)\n\n##   * add \"message_runtime\" and every package in MSG_DEP_SET to\n\n##     catkin_package(CATKIN_DEPENDS ...)\n\n##   * uncomment the add_*_files sections below as needed\n\n##     and list every .msg/.srv/.action file to be processed\n\n##   * uncomment the generate_messages entry below\n\n##   * add every package in MSG_DEP_SET to generate_messages(DEPENDENCIES ...)\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## Generate messages in the 'msg' folder\n\n# add_message_files(\n\n#   FILES\n\n#   Message1.msg\n\n#   Message2.msg\n\n# )\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Generate services in the 'srv' folder\n\n# add_service_files(\n\n#   FILES\n\n#   Service1.srv\n\n#   Service2.srv\n\n# )\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## Generate actions in the 'action' folder\n\n# add_action_files(\n\n#   FILES\n\n#   Action1.action\n\n#   Action2.action\n\n# )\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## Generate added messages and services with any dependencies listed here\n\n# generate_messages(\n\n#   DEPENDENCIES\n\n#   sensor_msgs#   std_msgs\n\n# )\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "################################################\n\n## Declare ROS dynamic reconfigure parameters ##\n\n################################################\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## To declare and build dynamic reconfigure parameters within this\n\n## package, follow these steps:\n\n## * In the file package.xml:\n\n##   * add a build_depend and a exec_depend tag for \"dynamic_reconfigure\"\n\n## * In this file (CMakeLists.txt):\n\n##   * add \"dynamic_reconfigure\" to\n\n##     find_package(catkin REQUIRED COMPONENTS ...)\n\n##   * uncomment the \"generate_dynamic_reconfigure_options\" section below\n\n##     and list every .cfg file to be processed\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## Generate dynamic reconfigure parameters in the 'cfg' folder\n\n# generate_dynamic_reconfigure_options(\n\n#   cfg/DynReconf1.cfg\n\n#   cfg/DynReconf2.cfg\n\n# )\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n\n## The catkin_package macro generates cmake config files for your package\n\n## Declare things to be passed to dependent projects\n\n## INCLUDE_DIRS: uncomment this if your package contains header files\n\n## LIBRARIES: libraries you create in this project that dependent projects also need\n\n## CATKIN_DEPENDS: catkin_packages dependent projects also need\n\n## DEPENDS: system dependencies of this project that dependent projects also need\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# INCLUDE_DIRS include\n\n# LIBRARIES drake_iiwa_sim\n\n# CATKIN_DEPENDS roscpp rospy sensor_msgs std_msgs\n\n# DEPENDS system_lib\n",
        "Line" : 119,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "## Specify additional locations of header files\n\n## Your package locations should be listed before other locations\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "## Declare a C++ library\n\n# add_library(${PROJECT_NAME}\n\n#   src/${PROJECT_NAME}/drake_iiwa_sim.cpp\n\n# )\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## Add cmake target dependencies of the library\n\n## as an example, code may need to be generated before libraries\n\n## either from message generation or dynamic reconfigure\n\n# add_dependencies(${PROJECT_NAME} ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## Declare a C++ executable\n\n## With catkin_make all packages are built within a single CMake context\n\n## The recommended prefix ensures that target names across packages don't collide\n\n# add_executable(${PROJECT_NAME}_node src/drake_iiwa_sim_node.cpp)\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "## Rename C++ executable without prefix\n\n## The above recommended prefix causes long target names, the following renames the\n\n## target back to the shorter version for ease of user use\n\n## e.g. \"rosrun someones_pkg node\" instead of \"rosrun someones_pkg someones_pkg_node\"\n\n# set_target_properties(${PROJECT_NAME}_node PROPERTIES OUTPUT_NAME node PREFIX \"\")\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "## Add cmake target dependencies of the executable\n\n## same as for the library above\n\n# add_dependencies(${PROJECT_NAME}_node ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "## Specify libraries to link a library or executable target against\n\n# target_link_libraries(${PROJECT_NAME}_node\n\n#   ${catkin_LIBRARIES}\n\n# )\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#############\n\n## Install ##\n\n#############\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# all install targets should use catkin DESTINATION variables\n\n# See http://ros.org/doc/api/catkin/html/adv_user_guide/variables.html\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "## Mark executable scripts (Python etc.) for installation\n\n## in contrast to setup.py, you can choose the destination\n\n# install(PROGRAMS\n\n#   scripts/my_python_script\n\n#   DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n# )\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "## Mark executables and/or libraries for installation\n\n# install(TARGETS ${PROJECT_NAME} ${PROJECT_NAME}_node\n\n#   ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n\n#   LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n\n#   RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n# )\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "## Mark cpp header files for installation\n\n# install(DIRECTORY include/${PROJECT_NAME}/\n\n#   DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}\n\n#   FILES_MATCHING PATTERN \"*.h\"\n\n#   PATTERN \".svn\" EXCLUDE\n\n# )\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "## Mark other files for installation (e.g. launch and bag files, etc.)\n\n# install(FILES\n\n#   # myfile1\n\n#   # myfile2\n\n#   DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}\n\n# )\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#############\n\n## Testing ##\n\n#############\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "## Add gtest based cpp test target and link libraries\n\n# catkin_add_gtest(${PROJECT_NAME}-test test/test_drake_iiwa_sim.cpp)\n\n# if(TARGET ${PROJECT_NAME}-test)\n\n#   target_link_libraries(${PROJECT_NAME}-test ${PROJECT_NAME})\n\n# endif()\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "## Add folders to be run by python nosetests\n\n# catkin_add_nosetests(test)\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 33
    },
    "src/catkin_projects/drake_iiwa_sim/src/CMakeLists.txt" : {
      "ObjectId" : "92b373122a5d3cdc2a012664fc8e5dc103f4fa82",
      "LastModified" : "2019-01-30T20:31:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n\n# vi: set ft=cmake :\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2017, Massachusetts Institute of Technology.\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright notice, this\n\n#   list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright notice,\n\n#   this list of conditions and the following disclaimer in the documentation\n\n#   and/or other materials provided with the distribution.\n\n#\n\n# * Neither the name of the copyright holder nor the names of its contributors\n\n#   may be used to endorse or promote products derived from this software\n\n#   without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# install library\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# install executable\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/catkin_projects/drake_robot_control/CMakeLists.txt" : {
      "ObjectId" : "505962bdecfc9becf3f1f3aba2f1f03ed039fc74",
      "LastModified" : "2019-01-30T20:31:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Compile as C++11, supported in ROS Kinetic and newer\n\n# add_compile_options(-std=c++11)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# this needs to happen before the find_package(catkin . . . )\n\n# so that we end up using the Eigen version supplied by drake, rather\n\n# than the one that comes in as part of tf2_eigen\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Find catkin macros and libraries\n\n## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)\n\n## is used, also find other catkin packages\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# tf2_eigen\n",
        "Line" : 24,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "## System dependencies are found with CMake's conventions\n\n# find_package(Boost REQUIRED COMPONENTS system)\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Uncomment this if the package has a setup.py. This macro ensures\n\n## modules and global scripts declared therein get installed\n\n## See http://ros.org/doc/api/catkin/html/user_guide/setup_dot_py.html\n\n# catkin_python_setup()\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "################################################\n\n## Declare ROS messages, services and actions ##\n\n################################################\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## To declare and build messages, services or actions from within this\n\n## package, follow these steps:\n\n## * Let MSG_DEP_SET be the set of packages whose message types you use in\n\n##   your messages/services/actions (e.g. std_msgs, actionlib_msgs, ...).\n\n## * In the file package.xml:\n\n##   * add a build_depend tag for \"message_generation\"\n\n##   * add a build_depend and a exec_depend tag for each package in MSG_DEP_SET\n\n##   * If MSG_DEP_SET isn't empty the following dependency has been pulled in\n\n##     but can be declared for certainty nonetheless:\n\n##     * add a exec_depend tag for \"message_runtime\"\n\n## * In this file (CMakeLists.txt):\n\n##   * add \"message_generation\" and every package in MSG_DEP_SET to\n\n##     find_package(catkin REQUIRED COMPONENTS ...)\n\n##   * add \"message_runtime\" and every package in MSG_DEP_SET to\n\n##     catkin_package(CATKIN_DEPENDS ...)\n\n##   * uncomment the add_*_files sections below as needed\n\n##     and list every .msg/.srv/.action file to be processed\n\n##   * uncomment the generate_messages entry below\n\n##   * add every package in MSG_DEP_SET to generate_messages(DEPENDENCIES ...)\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Generate messages in the 'msg' folder\n\n# add_message_files(\n\n#   FILES\n\n#   Message1.msg\n\n#   Message2.msg\n\n# )\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## Generate services in the 'srv' folder\n\n# add_service_files(\n\n#   FILES\n\n#   Service1.srv\n\n#   Service2.srv\n\n# )\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## Generate actions in the 'action' folder\n\n# add_action_files(\n\n#   FILES\n\n#   Action1.action\n\n#   Action2.action\n\n# )\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## Generate added messages and services with any dependencies listed here\n\n# generate_messages(\n\n#   DEPENDENCIES\n\n#   std_msgs\n\n# )\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "################################################\n\n## Declare ROS dynamic reconfigure parameters ##\n\n################################################\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## To declare and build dynamic reconfigure parameters within this\n\n## package, follow these steps:\n\n## * In the file package.xml:\n\n##   * add a build_depend and a exec_depend tag for \"dynamic_reconfigure\"\n\n## * In this file (CMakeLists.txt):\n\n##   * add \"dynamic_reconfigure\" to\n\n##     find_package(catkin REQUIRED COMPONENTS ...)\n\n##   * uncomment the \"generate_dynamic_reconfigure_options\" section below\n\n##     and list every .cfg file to be processed\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "## Generate dynamic reconfigure parameters in the 'cfg' folder\n\n# generate_dynamic_reconfigure_options(\n\n#   cfg/DynReconf1.cfg\n\n#   cfg/DynReconf2.cfg\n\n# )\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n\n## The catkin_package macro generates cmake config files for your package\n\n## Declare things to be passed to dependent projects\n\n## INCLUDE_DIRS: uncomment this if your package contains header files\n\n## LIBRARIES: libraries you create in this project that dependent projects also need\n\n## CATKIN_DEPENDS: catkin_packages dependent projects also need\n\n## DEPENDS: system dependencies of this project that dependent projects also need\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#  INCLUDE_DIRS include\n\n#  LIBRARIES drake_robot_control\n\n#  CATKIN_DEPENDS roscpp rospy std_msgs\n\n#  DEPENDS system_lib\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "## Specify additional locations of header files\n\n## Your package locations should be listed before other locations\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## Declare a C++ library\n\n# add_library(${PROJECT_NAME}\n\n#   src/${PROJECT_NAME}/drake_robot_control.cpp\n\n# )\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## Add cmake target dependencies of the library\n\n## as an example, code may need to be generated before libraries\n\n## either from message generation or dynamic reconfigure\n\n# add_dependencies(${PROJECT_NAME} ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "## Declare a C++ executable\n\n## With catkin_make all packages are built within a single CMake context\n\n## The recommended prefix ensures that target names across packages don't collide\n\n# add_executable(${PROJECT_NAME}_node src/drake_robot_control_node.cpp)\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "## Rename C++ executable without prefix\n\n## The above recommended prefix causes long target names, the following renames the\n\n## target back to the shorter version for ease of user use\n\n## e.g. \"rosrun someones_pkg node\" instead of \"rosrun someones_pkg someones_pkg_node\"\n\n# set_target_properties(${PROJECT_NAME}_node PROPERTIES OUTPUT_NAME node PREFIX \"\")\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "## Add cmake target dependencies of the executable\n\n## same as for the library above\n\n# add_dependencies(${PROJECT_NAME}_node ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "## Specify libraries to link a library or executable target against\n\n# target_link_libraries(${PROJECT_NAME}_node\n\n#   ${catkin_LIBRARIES}\n\n# )\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#############\n\n## Install ##\n\n#############\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# all install targets should use catkin DESTINATION variables\n\n# See http://ros.org/doc/api/catkin/html/adv_user_guide/variables.html\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "## Mark executable scripts (Python etc.) for installation\n\n## in contrast to setup.py, you can choose the destination\n\n# install(PROGRAMS\n\n#   scripts/my_python_script\n\n#   DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n# )\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "## Mark executables and/or libraries for installation\n\n# install(TARGETS ${PROJECT_NAME} ${PROJECT_NAME}_node\n\n#   ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n\n#   LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n\n#   RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n# )\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "## Mark cpp header files for installation\n\n# install(DIRECTORY include/${PROJECT_NAME}/\n\n#   DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}\n\n#   FILES_MATCHING PATTERN \"*.h\"\n\n#   PATTERN \".svn\" EXCLUDE\n\n# )\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "## Mark other files for installation (e.g. launch and bag files, etc.)\n\n# install(FILES\n\n#   # myfile1\n\n#   # myfile2\n\n#   DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}\n\n# )\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#############\n\n## Testing ##\n\n#############\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "## Add gtest based cpp test target and link libraries\n\n# catkin_add_gtest(${PROJECT_NAME}-test test/test_drake_robot_control.cpp)\n\n# if(TARGET ${PROJECT_NAME}-test)\n\n#   target_link_libraries(${PROJECT_NAME}-test ${PROJECT_NAME})\n\n# endif()\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "## Add folders to be run by python nosetests\n\n# catkin_add_nosetests(test)\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 34
    },
    "src/catkin_projects/drake_robot_control/src/CMakeLists.txt" : {
      "ObjectId" : "23b6701b46d20fbbd1522e34dbc5c2e7dda38202",
      "LastModified" : "2019-01-30T20:31:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n\n# vi: set ft=cmake :\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2017, Massachusetts Institute of Technology.\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright notice, this\n\n#   list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright notice,\n\n#   this list of conditions and the following disclaimer in the documentation\n\n#   and/or other materials provided with the distribution.\n\n#\n\n# * Neither the name of the copyright holder nor the names of its contributors\n\n#   may be used to endorse or promote products derived from this software\n\n#   without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# following http://docs.ros.org/jade/api/catkin/html/howto/format2/cpp_msg_dependencies.html\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#add_executable(test_plan_types\n\n#        test_plan_types.cc)\n\n#target_link_libraries(test_plan_types\n\n#        plan_types\n\n#        drake::drake)\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#add_executable(test_plan_runner\n\n#        test_plan_runner.cc)\n\n#target_link_libraries(test_plan_runner\n\n#        plan_runner\n\n#        drake::drake)\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# install library\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# install executable\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "src/catkin_projects/fusion_server/CMakeLists.txt" : {
      "ObjectId" : "3c88c4dfffddd00fd89d7890662078792baf12eb",
      "LastModified" : "2019-01-30T20:31:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Compile as C++11, supported in ROS Kinetic and newer\n\n# add_compile_options(-std=c++11)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Find catkin macros and libraries\n\n## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)\n\n## is used, also find other catkin packages\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## System dependencies are found with CMake's conventions\n\n# find_package(Boost REQUIRED COMPONENTS system)\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Uncomment this if the package has a setup.py. This macro ensures\n\n## modules and global scripts declared therein get installed\n\n## See http://ros.org/doc/api/catkin/html/user_guide/setup_dot_py.html\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "################################################\n\n## Declare ROS messages, services and actions ##\n\n################################################\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## To declare and build messages, services or actions from within this\n\n## package, follow these steps:\n\n## * Let MSG_DEP_SET be the set of packages whose message types you use in\n\n##   your messages/services/actions (e.g. std_msgs, actionlib_msgs, ...).\n\n## * In the file package.xml:\n\n##   * add a build_depend tag for \"message_generation\"\n\n##   * add a build_depend and a run_depend tag for each package in MSG_DEP_SET\n\n##   * If MSG_DEP_SET isn't empty the following dependency has been pulled in\n\n##     but can be declared for certainty nonetheless:\n\n##     * add a run_depend tag for \"message_runtime\"\n\n## * In this file (CMakeLists.txt):\n\n##   * add \"message_generation\" and every package in MSG_DEP_SET to\n\n##     find_package(catkin REQUIRED COMPONENTS ...)\n\n##   * add \"message_runtime\" and every package in MSG_DEP_SET to\n\n##     catkin_package(CATKIN_DEPENDS ...)\n\n##   * uncomment the add_*_files sections below as needed\n\n##     and list every .msg/.srv/.action file to be processed\n\n##   * uncomment the generate_messages entry below\n\n##   * add every package in MSG_DEP_SET to generate_messages(DEPENDENCIES ...)\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Generate messages in the 'msg' folder\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## Generate services in the 'srv' folder\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Generate actions in the 'action' folder\n\n# add_action_files(\n\n#   FILES\n\n#   Action1.action\n\n#   Action2.action\n\n# )\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## Generate added messages and services with any dependencies listed here\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "################################################\n\n## Declare ROS dynamic reconfigure parameters ##\n\n################################################\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## To declare and build dynamic reconfigure parameters within this\n\n## package, follow these steps:\n\n## * In the file package.xml:\n\n##   * add a build_depend and a run_depend tag for \"dynamic_reconfigure\"\n\n## * In this file (CMakeLists.txt):\n\n##   * add \"dynamic_reconfigure\" to\n\n##     find_package(catkin REQUIRED COMPONENTS ...)\n\n##   * uncomment the \"generate_dynamic_reconfigure_options\" section below\n\n##     and list every .cfg file to be processed\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## Generate dynamic reconfigure parameters in the 'cfg' folder\n\n# generate_dynamic_reconfigure_options(\n\n#   cfg/DynReconf1.cfg\n\n#   cfg/DynReconf2.cfg\n\n# )\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n\n## The catkin_package macro generates cmake config files for your package\n\n## Declare things to be passed to dependent projects\n\n## INCLUDE_DIRS: uncomment this if your package contains header files\n\n## LIBRARIES: libraries you create in this project that dependent projects also need\n\n## CATKIN_DEPENDS: catkin_packages dependent projects also need\n\n## DEPENDS: system dependencies of this project that dependent projects also need\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#  INCLUDE_DIRS include\n\n#  LIBRARIES beginner_tutorials\n\n#  CATKIN_DEPENDS roscpp rospy std_msgs\n\n#  DEPENDS system_lib\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## Specify additional locations of header files\n\n## Your package locations should be listed before other locations\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# include\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "## Declare a C++ library\n\n# add_library(${PROJECT_NAME}\n\n#   src/${PROJECT_NAME}/beginner_tutorials.cpp\n\n# )\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## Add cmake target dependencies of the library\n\n## as an example, code may need to be generated before libraries\n\n## either from message generation or dynamic reconfigure\n\n# add_dependencies(${PROJECT_NAME} ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## Declare a C++ executable\n\n## With catkin_make all packages are built within a single CMake context\n\n## The recommended prefix ensures that target names across packages don't collide\n\n# add_executable(${PROJECT_NAME}_node src/beginner_tutorials_node.cpp)\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "## Rename C++ executable without prefix\n\n## The above recommended prefix causes long target names, the following renames the\n\n## target back to the shorter version for ease of user use\n\n## e.g. \"rosrun someones_pkg node\" instead of \"rosrun someones_pkg someones_pkg_node\"\n\n# set_target_properties(${PROJECT_NAME}_node PROPERTIES OUTPUT_NAME node PREFIX \"\")\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "## Add cmake target dependencies of the executable\n\n## same as for the library above\n\n# add_dependencies(${PROJECT_NAME}_node ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "## Specify libraries to link a library or executable target against\n\n# target_link_libraries(${PROJECT_NAME}_node\n\n#   ${catkin_LIBRARIES}\n\n# )\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#############\n\n## Install ##\n\n#############\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# all install targets should use catkin DESTINATION variables\n\n# See http://ros.org/doc/api/catkin/html/adv_user_guide/variables.html\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "## Mark executable scripts (Python etc.) for installation\n\n## in contrast to setup.py, you can choose the destination\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "## Mark executables and/or libraries for installation\n\n# install(TARGETS ${PROJECT_NAME} ${PROJECT_NAME}_node\n\n#   ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n\n#   LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n\n#   RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n# )\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "## Mark cpp header files for installation\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "## Mark other files for installation (e.g. launch and bag files, etc.)\n\n# install(FILES\n\n#   # myfile1\n\n#   # myfile2\n\n#   DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}\n\n# )\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#############\n\n## Testing ##\n\n#############\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "## Add gtest based cpp test target and link libraries\n\n# catkin_add_gtest(${PROJECT_NAME}-test test/test_beginner_tutorials.cpp)\n\n# if(TARGET ${PROJECT_NAME}-test)\n\n#   target_link_libraries(${PROJECT_NAME}-test ${PROJECT_NAME})\n\n# endif()\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "## Add folders to be run by python nosetests\n\n# catkin_add_nosetests(test)\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 33
    },
    "src/catkin_projects/perception_sandbox/CMakeLists.txt" : {
      "ObjectId" : "286da0ab876d1108bd34fa9f597c9bda98638db6",
      "LastModified" : "2019-01-30T20:31:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# INCLUDE_DIRS\n\n# CATKIN_DEPENDS message_runtime\n\n#  LIBRARIES perception_msgs\n\n#  CATKIN_DEPENDS other_catkin_pkg\n\n#  DEPENDS system_lib\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# There must be a better way... gotta figure out\n\n# how to make find_package work for common utils\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# While this library relies on PCL and OpenCV, they are brought in\n\n# by catkin_LIBRARIES. I think this finds the ROS-supplied (system installed)\n\n# OpenCV and PCL. In the current configuration, these are close enough that\n\n# this doesn't pose an issue. If you want to involve Drake in a node\n\n# like this down the road, see\n\n# https://github.com/RobotLocomotion/drake-shambhala/issues/38\n\n# for some ideas of how to resolve the Eigen compatibility issues you'll have.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#############\n\n## Install ##\n\n#############\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#catkin_install_python(PROGRAMS\n\n#   scripts/rgbd_frame_grabber.py\n\n#  DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION})\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Mark executables and/or libraries for installation\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Mark other files for installation (e.g. launch and bag files, etc.)\n\n#install(FILES\n\n#   launch/realsense_camera_view.launch\n\n#   DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}\n\n#)",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "src/catkin_projects/rlg_simulation/CMakeLists.txt" : {
      "ObjectId" : "ac0a0c6e7e7a4a5e5c39bc2057fd9594d0d251fb",
      "LastModified" : "2019-01-30T20:31:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Drake's up-to-date Eigen\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Find catkin macros and libraries\n\n## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)\n\n## is used, also find other catkin packages\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# INCLUDE_DIRS\n\n# CATKIN_DEPENDS message_runtime\n\n#  LIBRARIES perception_msgs\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#  DEPENDS system_lib\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Build choice: build entire IIWA Drake sim?\n\n# Not used by anyone actively right now, so defaults to no.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Specify additional locations of header files\n\n## Your package locations should be listed before other locations\n\n# include_directories(include)\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# # This is wrong, but drake_ros_systems_INCLUDE_DIRS is build/install/include,\n\n# # which doesn't get populated till the install step.\n\n# # include_directories(${drake_ros_systems_SOURCE_DIR}/include)\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# # There must be a better way... gotta figure out\n\n# # how to make find_package work for common utils\n\n# include_directories(${CMAKE_INSTALL_PREFIX}/include)\n\n# link_directories(${CMAKE_INSTALL_PREFIX}/lib)\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# add_executable(drake_passive_simulation_from_config src/drake_passive_simulation_from_config.cc)\n\n# target_link_libraries(drake_passive_simulation_from_config\n\n#     ${catkin_LIBRARIES}\n\n#     ${drake_LIBRARIES}\n\n#     gflags_shared\n\n#     yaml-cpp\n\n#     ${EIGEN3_LIBRARIES}\n\n# )\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# if (WITH_DRAKE_IIWA_SIM)\n\n#     add_library(rgbd_to_ros_pointcloud2_driver\n\n#         src/iiwa_rlg_simulation/image_driver/rgbd_to_ros_pointcloud2_driver.cc\n\n#         src/iiwa_rlg_simulation/image_driver/rgbd_to_ros_pointcloud2_driver.h)\n\n#     target_link_libraries(rgbd_to_ros_pointcloud2_driver\n\n#         ${catkin_LIBRARIES}\n\n#         ${drake_LIBRARIES})\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#     add_library(image_to_images_t\n\n#         src/iiwa_rlg_simulation/image_driver/image_to_images_t.cc\n\n#         src/iiwa_rlg_simulation/image_driver/image_to_images_t.h)\n\n#     target_link_libraries(image_to_images_t\n\n#         ${catkin_LIBRARIES}\n\n#         ${drake_LIBRARIES})\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#     add_library(schunk_wsg_ros\n\n#         src/iiwa_rlg_simulation/schunk_wsg_ros/schunk_wsg_ros.cc\n\n#         src/iiwa_rlg_simulation/schunk_wsg_ros/schunk_wsg_ros.h)\n\n#     add_dependencies(schunk_wsg_ros ${catkin_EXPORTED_TARGETS})\n\n#     target_link_libraries(schunk_wsg_ros\n\n#         ${catkin_LIBRARIES}\n\n#         ${drake_LIBRARIES})\n\n#     add_library(schunk_wsg_ros_controller\n\n#         src/iiwa_rlg_simulation/schunk_wsg_ros/schunk_wsg_ros_controller.cc\n\n#         src/iiwa_rlg_simulation/schunk_wsg_ros/schunk_wsg_ros_controller.h)\n\n#     add_dependencies(schunk_wsg_ros_controller ${catkin_EXPORTED_TARGETS})\n\n#     target_link_libraries(schunk_wsg_ros_controller\n\n#         ${catkin_LIBRARIES}\n\n#         ${drake_LIBRARIES})\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#     add_library(iiwa_common\n\n#         src/iiwa_rlg_simulation/iiwa_common.cc \n\n#         src/iiwa_rlg_simulation/iiwa_common.h)\n\n#     target_link_libraries(iiwa_common\n\n#         ${drake_LIBRARIES})\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#     add_library(iiwa_lcm\n\n#         src/iiwa_rlg_simulation/iiwa_lcm.cc \n\n#         src/iiwa_rlg_simulation/iiwa_lcm.h)\n\n#     target_link_libraries(iiwa_lcm\n\n#         ${drake_LIBRARIES})\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#     add_library(iiwa_oracular_state_estimator\n\n#         src/iiwa_rlg_simulation/oracular_state_estimator.cc \n\n#         src/iiwa_rlg_simulation/oracular_state_estimator.h)\n\n#     target_link_libraries(iiwa_oracular_state_estimator\n\n#         ${drake_LIBRARIES})\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#     add_library(iiwa_wsg_diagram_factory\n\n#         src/iiwa_rlg_simulation/iiwa_world/iiwa_wsg_diagram_factory.cc \n\n#         src/iiwa_rlg_simulation/iiwa_world/iiwa_wsg_diagram_factory.h)\n\n#     target_link_libraries(iiwa_wsg_diagram_factory\n\n#         iiwa_common\n\n#         iiwa_oracular_state_estimator\n\n#         ${drake_LIBRARIES})\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#     add_executable(iiwa_rlg_simulation \n\n#         src/iiwa_rlg_simulation/iiwa_rlg_simulation.cc)\n\n#     add_dependencies(iiwa_rlg_simulation ${catkin_EXPORTED_TARGETS})\n\n#     target_link_libraries(iiwa_rlg_simulation\n\n#         ${catkin_LIBRARIES}\n\n#         ${bot2-core-lcmtypes_LIBRARIES}\n\n#         yaml-cpp\n\n#         image_to_images_t\n\n#         rgbd_to_ros_pointcloud2_driver\n\n#         iiwa_common\n\n#         iiwa_lcm\n\n#         iiwa_wsg_diagram_factory\n\n#         iiwa_oracular_state_estimator\n\n#         schunk_wsg_ros\n\n#         schunk_wsg_ros_controller\n\n#         gflags_shared\n\n#         ${drake_LIBRARIES}\n\n#         RemoteTreeViewerWrapper)\n\n# endif()\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#############\n\n## Install ##\n\n#############\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# install(TARGETS drake_passive_simulation_from_config\n\n#    ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n\n#    LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n\n#    RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n# )\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# if (WITH_DRAKE_IIWA_SIM)\n\n#     install(TARGETS iiwa_rlg_simulation\n\n#        image_to_images_t\n\n#        rgbd_to_ros_pointcloud2_driver\n\n#        iiwa_common\n\n#        iiwa_lcm\n\n#        iiwa_wsg_diagram_factory\n\n#        iiwa_oracular_state_estimator\n\n#        schunk_wsg_ros\n\n#        schunk_wsg_ros_controller\n\n#        ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n\n#        LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n\n#        RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n#     )\n\n# endif()",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "src/catkin_projects/robot_control/CMakeLists.txt" : {
      "ObjectId" : "cb60a2390c51523b0473f1ee47a390747f7ee8bd",
      "LastModified" : "2019-01-30T20:31:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Find catkin macros and libraries\n\n## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)\n\n## is used, also find other catkin packages\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## System dependencies are found with CMake's conventions\n\n# find_package(Boost REQUIRED COMPONENTS system)\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Uncomment this if the package has a setup.py. This macro ensures\n\n## modules and global scripts declared therein get installed\n\n## See http://ros.org/doc/api/catkin/html/user_guide/setup_dot_py.html\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "################################################\n\n## Declare ROS messages, services and actions ##\n\n################################################\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## To declare and build messages, services or actions from within this\n\n## package, follow these steps:\n\n## * Let MSG_DEP_SET be the set of packages whose message types you use in\n\n##   your messages/services/actions (e.g. std_msgs, actionlib_msgs, ...).\n\n## * In the file package.xml:\n\n##   * add a build_depend tag for \"message_generation\"\n\n##   * add a build_depend and a run_depend tag for each package in MSG_DEP_SET\n\n##   * If MSG_DEP_SET isn't empty the following dependency has been pulled in\n\n##     but can be declared for certainty nonetheless:\n\n##     * add a run_depend tag for \"message_runtime\"\n\n## * In this file (CMakeLists.txt):\n\n##   * add \"message_generation\" and every package in MSG_DEP_SET to\n\n##     find_package(catkin REQUIRED COMPONENTS ...)\n\n##   * add \"message_runtime\" and every package in MSG_DEP_SET to\n\n##     catkin_package(CATKIN_DEPENDS ...)\n\n##   * uncomment the add_*_files sections below as needed\n\n##     and list every .msg/.srv/.action file to be processed\n\n##   * uncomment the generate_messages entry below\n\n##   * add every package in MSG_DEP_SET to generate_messages(DEPENDENCIES ...)\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Generate messages in the 'msg' folder\n\n# add_message_files(\n\n#   FILES\n\n#   Message1.msg\n\n#   Message2.msg\n\n# )\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Generate services in the 'srv' folder\n\n#add_service_files(\n\n#  FILES\n\n#  GoToConf.srv\n\n#  SendJointTrajectory.srv\n\n#)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## Generate actions in the 'action' folder\n\n# add_action_files(\n\n#   FILES\n\n#   Action1.action\n\n#   Action2.action\n\n# )\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Generate added messages and services with any dependencies listed here\n\n#generate_messages(\n\n#  DEPENDENCIES\n\n#  std_msgs  # Or other packages containing msgs\n\n#  sensor_msgs\n\n#  geometry_msgs\n\n#  tf2_msgs\n\n#  trajectory_msgs\n\n#)\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "################################################\n\n## Declare ROS dynamic reconfigure parameters ##\n\n################################################\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## To declare and build dynamic reconfigure parameters within this\n\n## package, follow these steps:\n\n## * In the file package.xml:\n\n##   * add a build_depend and a run_depend tag for \"dynamic_reconfigure\"\n\n## * In this file (CMakeLists.txt):\n\n##   * add \"dynamic_reconfigure\" to\n\n##     find_package(catkin REQUIRED COMPONENTS ...)\n\n##   * uncomment the \"generate_dynamic_reconfigure_options\" section below\n\n##     and list every .cfg file to be processed\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## Generate dynamic reconfigure parameters in the 'cfg' folder\n\n# generate_dynamic_reconfigure_options(\n\n#   cfg/DynReconf1.cfg\n\n#   cfg/DynReconf2.cfg\n\n# )\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n\n## The catkin_package macro generates cmake config files for your package\n\n## Declare things to be passed to dependent projects\n\n## INCLUDE_DIRS: uncomment this if you package contains header files\n\n## LIBRARIES: libraries you create in this project that dependent projects also need\n\n## CATKIN_DEPENDS: catkin_packages dependent projects also need\n\n## DEPENDS: system dependencies of this project that dependent projects also need\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# INCLUDE_DIRS\n\n# CATKIN_DEPENDS message_runtime\n\n#  LIBRARIES perception_msgs\n\n#  CATKIN_DEPENDS other_catkin_pkg\n\n#  DEPENDS system_lib\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "## Specify additional locations of header files\n\n## Your package locations should be listed before other locations\n\n# include_directories(include)\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## Declare a C++ library\n\n# add_library(robot_control\n\n#   src/${PROJECT_NAME}/robot_control.cpp\n\n# )\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "## Add cmake target dependencies of the library\n\n## as an example, code may need to be generated before libraries\n\n## either from message generation or dynamic reconfigure\n\n# add_dependencies(robot_control ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "## Declare a C++ executable\n\n# add_executable(robot_control_node src/robot_control_node.cpp)\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## Add cmake target dependencies of the executable\n\n## same as for the library above\n\n# add_dependencies(robot_control_node ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## Specify libraries to link a library or executable target against\n\n# target_link_libraries(robot_control_node\n\n#   ${catkin_LIBRARIES}\n\n# )\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#############\n\n## Install ##\n\n#############\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# all install targets should use catkin DESTINATION variables\n\n# See http://ros.org/doc/api/catkin/html/adv_user_guide/variables.html\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "## Mark executable scripts (Python etc.) for installation\n\n## in contrast to setup.py, you can choose the destination\n\n#install(PROGRAMS\n\n#\tsrc/robot_control/\n\n#    scripts/my_python_script\n\n#    DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n#)\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "## Mark executables and/or libraries for installation\n\n# install(TARGETS robot_control robot_control_node\n\n#   ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n\n#   LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n\n#   RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n# )\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "## Mark cpp header files for installation\n\n# install(DIRECTORY include/${PROJECT_NAME}/\n\n#   DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}\n\n#   FILES_MATCHING PATTERN \"*.h\"\n\n#   PATTERN \".svn\" EXCLUDE\n\n# )\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Mark other files for installation (e.g. launch and bag files, etc.)\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#############\n\n## Testing ##\n\n#############\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "## Add gtest based cpp test target and link libraries\n\n# catkin_add_gtest(${PROJECT_NAME}-test test/test_robot_control.cpp)\n\n# if(TARGET ${PROJECT_NAME}-test)\n\n#   target_link_libraries(${PROJECT_NAME}-test ${PROJECT_NAME})\n\n# endif()\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "## Add folders to be run by python nosetests\n\n# catkin_add_nosetests(test)",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 30
    },
    "src/catkin_projects/robot_msgs/CMakeLists.txt" : {
      "ObjectId" : "588a4ff681ddee11b9b8677ec44b9e5e293660fd",
      "LastModified" : "2019-01-30T20:31:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Find catkin macros and libraries\n\n## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)\n\n## is used, also find other catkin packages\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## System dependencies are found with CMake's conventions\n\n# find_package(Boost REQUIRED COMPONENTS system)\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Uncomment this if the package has a setup.py. This macro ensures\n\n## modules and global scripts declared therein get installed\n\n## See http://ros.org/doc/api/catkin/html/user_guide/setup_dot_py.html\n\n#catkin_python_setup()\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "################################################\n\n## Declare ROS messages, services and actions ##\n\n################################################\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## To declare and build messages, services or actions from within this\n\n## package, follow these steps:\n\n## * Let MSG_DEP_SET be the set of packages whose message types you use in\n\n##   your messages/services/actions (e.g. std_msgs, actionlib_msgs, ...).\n\n## * In the file package.xml:\n\n##   * add a build_depend tag for \"message_generation\"\n\n##   * add a build_depend and a run_depend tag for each package in MSG_DEP_SET\n\n##   * If MSG_DEP_SET isn't empty the following dependency has been pulled in\n\n##     but can be declared for certainty nonetheless:\n\n##     * add a run_depend tag for \"message_runtime\"\n\n## * In this file (CMakeLists.txt):\n\n##   * add \"message_generation\" and every package in MSG_DEP_SET to\n\n##     find_package(catkin REQUIRED COMPONENTS ...)\n\n##   * add \"message_runtime\" and every package in MSG_DEP_SET to\n\n##     catkin_package(CATKIN_DEPENDS ...)\n\n##   * uncomment the add_*_files sections below as needed\n\n##     and list every .msg/.srv/.action file to be processed\n\n##   * uncomment the generate_messages entry below\n\n##   * add every package in MSG_DEP_SET to generate_messages(DEPENDENCIES ...)\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Generate messages in the 'msg' folder\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Generate services in the 'srv' folder\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## Generate actions in the 'action' folder\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Generate added messages and services with any dependencies listed here\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Or other packages containing msgs\n",
        "Line" : 81,
        "CharPositionInLine" : 12
      },
      "10" : {
        "Text" : "################################################\n\n## Declare ROS dynamic reconfigure parameters ##\n\n################################################\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## To declare and build dynamic reconfigure parameters within this\n\n## package, follow these steps:\n\n## * In the file package.xml:\n\n##   * add a build_depend and a run_depend tag for \"dynamic_reconfigure\"\n\n## * In this file (CMakeLists.txt):\n\n##   * add \"dynamic_reconfigure\" to\n\n##     find_package(catkin REQUIRED COMPONENTS ...)\n\n##   * uncomment the \"generate_dynamic_reconfigure_options\" section below\n\n##     and list every .cfg file to be processed\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## Generate dynamic reconfigure parameters in the 'cfg' folder\n\n# generate_dynamic_reconfigure_options(\n\n#   cfg/DynReconf1.cfg\n\n#   cfg/DynReconf2.cfg\n\n# )\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n\n## The catkin_package macro generates cmake config files for your package\n\n## Declare things to be passed to dependent projects\n\n## INCLUDE_DIRS: uncomment this if you package contains header files\n\n## LIBRARIES: libraries you create in this project that dependent projects also need\n\n## CATKIN_DEPENDS: catkin_packages dependent projects also need\n\n## DEPENDS: system dependencies of this project that dependent projects also need\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# INCLUDE_DIRS\n\n# CATKIN_DEPENDS message_runtime\n\n#  LIBRARIES perception_msgs\n\n#  CATKIN_DEPENDS other_catkin_pkg\n\n#  DEPENDS system_lib\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## Specify additional locations of header files\n\n## Your package locations should be listed before other locations\n\n# include_directories(include)\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "## Declare a C++ library\n\n# add_library(robot_control\n\n#   src/${PROJECT_NAME}/robot_control.cpp\n\n# )\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "## Add cmake target dependencies of the library\n\n## as an example, code may need to be generated before libraries\n\n## either from message generation or dynamic reconfigure\n\n# add_dependencies(robot_control ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## Declare a C++ executable\n\n# add_executable(robot_control_node src/robot_control_node.cpp)\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## Add cmake target dependencies of the executable\n\n## same as for the library above\n\n# add_dependencies(robot_control_node ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "## Specify libraries to link a library or executable target against\n\n# target_link_libraries(robot_control_node\n\n#   ${catkin_LIBRARIES}\n\n# )\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#############\n\n## Install ##\n\n#############\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# all install targets should use catkin DESTINATION variables\n\n# See http://ros.org/doc/api/catkin/html/adv_user_guide/variables.html\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "## Mark executable scripts (Python etc.) for installation\n\n## in contrast to setup.py, you can choose the destination\n\n# install(PROGRAMS\n\n#   scripts/my_python_script\n\n#   DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n# )\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "## Mark executables and/or libraries for installation\n\n# install(TARGETS robot_control robot_control_node\n\n#   ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n\n#   LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n\n#   RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n# )\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "## Mark cpp header files for installation\n\n# install(DIRECTORY include/${PROJECT_NAME}/\n\n#   DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}\n\n#   FILES_MATCHING PATTERN \"*.h\"\n\n#   PATTERN \".svn\" EXCLUDE\n\n# )\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "## Mark other files for installation (e.g. launch and bag files, etc.)\n\n# install(FILES\n\n#   # myfile1\n\n#   # myfile2\n\n#   DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}\n\n# )\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#############\n\n## Testing ##\n\n#############\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "## Add gtest based cpp test target and link libraries\n\n# catkin_add_gtest(${PROJECT_NAME}-test test/test_robot_control.cpp)\n\n# if(TARGET ${PROJECT_NAME}-test)\n\n#   target_link_libraries(${PROJECT_NAME}-test ${PROJECT_NAME})\n\n# endif()\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "## Add folders to be run by python nosetests\n\n# catkin_add_nosetests(test)\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 31
    },
    "src/catkin_projects/robot_server/CMakeLists.txt" : {
      "ObjectId" : "068f102e7a23017196ec5d0d1734c24411d12086",
      "LastModified" : "2019-01-30T20:31:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Find catkin macros and libraries\n\n## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)\n\n## is used, also find other catkin packages\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## System dependencies are found with CMake's conventions\n\n# find_package(Boost REQUIRED COMPONENTS system)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Uncomment this if the package has a setup.py. This macro ensures\n\n## modules and global scripts declared therein get installed\n\n## See http://ros.org/doc/api/catkin/html/user_guide/setup_dot_py.html\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "################################################\n\n## Declare ROS messages, services and actions ##\n\n################################################\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## To declare and build messages, services or actions from within this\n\n## package, follow these steps:\n\n## * Let MSG_DEP_SET be the set of packages whose message types you use in\n\n##   your messages/services/actions (e.g. std_msgs, actionlib_msgs, ...).\n\n## * In the file package.xml:\n\n##   * add a build_depend tag for \"message_generation\"\n\n##   * add a build_depend and a run_depend tag for each package in MSG_DEP_SET\n\n##   * If MSG_DEP_SET isn't empty the following dependency has been pulled in\n\n##     but can be declared for certainty nonetheless:\n\n##     * add a run_depend tag for \"message_runtime\"\n\n## * In this file (CMakeLists.txt):\n\n##   * add \"message_generation\" and every package in MSG_DEP_SET to\n\n##     find_package(catkin REQUIRED COMPONENTS ...)\n\n##   * add \"message_runtime\" and every package in MSG_DEP_SET to\n\n##     catkin_package(CATKIN_DEPENDS ...)\n\n##   * uncomment the add_*_files sections below as needed\n\n##     and list every .msg/.srv/.action file to be processed\n\n##   * uncomment the generate_messages entry below\n\n##   * add every package in MSG_DEP_SET to generate_messages(DEPENDENCIES ...)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Generate messages in the 'msg' folder\n\n# add_message_files(\n\n#   FILES\n\n#   Message1.msg\n\n#   Message2.msg\n\n# )\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Generate services in the 'srv' folder\n\n# add_service_files(\n\n#   FILES\n\n#   Service1.srv\n\n#   Service2.srv\n\n# )\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## Generate actions in the 'action' folder\n\n# add_action_files(\n\n#   FILES\n\n#   Action1.action\n\n#   Action2.action\n\n# )\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Generate added messages and services with any dependencies listed here\n\n# generate_messages(\n\n#   DEPENDENCIES\n\n#   std_msgs  # Or other packages containing msgs\n\n# )\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "################################################\n\n## Declare ROS dynamic reconfigure parameters ##\n\n################################################\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## To declare and build dynamic reconfigure parameters within this\n\n## package, follow these steps:\n\n## * In the file package.xml:\n\n##   * add a build_depend and a run_depend tag for \"dynamic_reconfigure\"\n\n## * In this file (CMakeLists.txt):\n\n##   * add \"dynamic_reconfigure\" to\n\n##     find_package(catkin REQUIRED COMPONENTS ...)\n\n##   * uncomment the \"generate_dynamic_reconfigure_options\" section below\n\n##     and list every .cfg file to be processed\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## Generate dynamic reconfigure parameters in the 'cfg' folder\n\n# generate_dynamic_reconfigure_options(\n\n#   cfg/DynReconf1.cfg\n\n#   cfg/DynReconf2.cfg\n\n# )\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n\n## The catkin_package macro generates cmake config files for your package\n\n## Declare things to be passed to dependent projects\n\n## INCLUDE_DIRS: uncomment this if you package contains header files\n\n## LIBRARIES: libraries you create in this project that dependent projects also need\n\n## CATKIN_DEPENDS: catkin_packages dependent projects also need\n\n## DEPENDS: system dependencies of this project that dependent projects also need\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#  INCLUDE_DIRS include\n\n#  LIBRARIES robot_server\n\n#  CATKIN_DEPENDS other_catkin_pkg\n\n#  DEPENDS system_lib\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "## Specify additional locations of header files\n\n## Your package locations should be listed before other locations\n\n# include_directories(include)\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## Declare a C++ library\n\n# add_library(robot_server\n\n#   src/${PROJECT_NAME}/robot_server.cpp\n\n# )\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "## Add cmake target dependencies of the library\n\n## as an example, code may need to be generated before libraries\n\n## either from message generation or dynamic reconfigure\n\n# add_dependencies(robot_server ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "## Declare a C++ executable\n\n# add_executable(robot_server_node src/robot_server_node.cpp)\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## Add cmake target dependencies of the executable\n\n## same as for the library above\n\n# add_dependencies(robot_server_node ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## Specify libraries to link a library or executable target against\n\n# target_link_libraries(robot_server_node\n\n#   ${catkin_LIBRARIES}\n\n# )\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#############\n\n## Install ##\n\n#############\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# all install targets should use catkin DESTINATION variables\n\n# See http://ros.org/doc/api/catkin/html/adv_user_guide/variables.html\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "## Mark executable scripts (Python etc.) for installation\n\n## in contrast to setup.py, you can choose the destination\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "## Mark executables and/or libraries for installation\n\n# install(TARGETS robot_server robot_server_node\n\n#   ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n\n#   LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n\n#   RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n# )\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "## Mark cpp header files for installation\n\n# install(DIRECTORY include/${PROJECT_NAME}/\n\n#   DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}\n\n#   FILES_MATCHING PATTERN \"*.h\"\n\n#   PATTERN \".svn\" EXCLUDE\n\n# )\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "## Mark other files for installation (e.g. launch and bag files, etc.)\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#############\n\n## Testing ##\n\n#############\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "## Add gtest based cpp test target and link libraries\n\n# catkin_add_gtest(${PROJECT_NAME}-test test/test_robot_server.cpp)\n\n# if(TARGET ${PROJECT_NAME}-test)\n\n#   target_link_libraries(${PROJECT_NAME}-test ${PROJECT_NAME})\n\n# endif()\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "## Add folders to be run by python nosetests\n\n# catkin_add_nosetests(test)\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 30
    },
    "src/catkin_projects/station_config/CMakeLists.txt" : {
      "ObjectId" : "a94b5be971fb6e64c5d3b8c6caf5a6f143f9ca9a",
      "LastModified" : "2019-02-06T20:34:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Compile as C++11, supported in ROS Kinetic and newer\n\n# add_compile_options(-std=c++11)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Find catkin macros and libraries\n\n## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)\n\n## is used, also find other catkin packages\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## System dependencies are found with CMake's conventions\n\n# find_package(Boost REQUIRED COMPONENTS system)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Uncomment this if the package has a setup.py. This macro ensures\n\n## modules and global scripts declared therein get installed\n\n## See http://ros.org/doc/api/catkin/html/user_guide/setup_dot_py.html\n\n# catkin_python_setup()\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "################################################\n\n## Declare ROS messages, services and actions ##\n\n################################################\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## To declare and build messages, services or actions from within this\n\n## package, follow these steps:\n\n## * Let MSG_DEP_SET be the set of packages whose message types you use in\n\n##   your messages/services/actions (e.g. std_msgs, actionlib_msgs, ...).\n\n## * In the file package.xml:\n\n##   * add a build_depend tag for \"message_generation\"\n\n##   * add a build_depend and a run_depend tag for each package in MSG_DEP_SET\n\n##   * If MSG_DEP_SET isn't empty the following dependency has been pulled in\n\n##     but can be declared for certainty nonetheless:\n\n##     * add a run_depend tag for \"message_runtime\"\n\n## * In this file (CMakeLists.txt):\n\n##   * add \"message_generation\" and every package in MSG_DEP_SET to\n\n##     find_package(catkin REQUIRED COMPONENTS ...)\n\n##   * add \"message_runtime\" and every package in MSG_DEP_SET to\n\n##     catkin_package(CATKIN_DEPENDS ...)\n\n##   * uncomment the add_*_files sections below as needed\n\n##     and list every .msg/.srv/.action file to be processed\n\n##   * uncomment the generate_messages entry below\n\n##   * add every package in MSG_DEP_SET to generate_messages(DEPENDENCIES ...)\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Generate messages in the 'msg' folder\n\n# add_message_files(\n\n#   FILES\n\n#   Message1.msg\n\n#   Message2.msg\n\n# )\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## Generate services in the 'srv' folder\n\n# add_service_files(\n\n#   FILES\n\n#   Service1.srv\n\n#   Service2.srv\n\n# )\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Generate actions in the 'action' folder\n\n# add_action_files(\n\n#   FILES\n\n#   Action1.action\n\n#   Action2.action\n\n# )\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## Generate added messages and services with any dependencies listed here\n\n# generate_messages(\n\n#   DEPENDENCIES\n\n#   std_msgs  # Or other packages containing msgs\n\n# )\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "################################################\n\n## Declare ROS dynamic reconfigure parameters ##\n\n################################################\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## To declare and build dynamic reconfigure parameters within this\n\n## package, follow these steps:\n\n## * In the file package.xml:\n\n##   * add a build_depend and a run_depend tag for \"dynamic_reconfigure\"\n\n## * In this file (CMakeLists.txt):\n\n##   * add \"dynamic_reconfigure\" to\n\n##     find_package(catkin REQUIRED COMPONENTS ...)\n\n##   * uncomment the \"generate_dynamic_reconfigure_options\" section below\n\n##     and list every .cfg file to be processed\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## Generate dynamic reconfigure parameters in the 'cfg' folder\n\n# generate_dynamic_reconfigure_options(\n\n#   cfg/DynReconf1.cfg\n\n#   cfg/DynReconf2.cfg\n\n# )\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n\n## The catkin_package macro generates cmake config files for your package\n\n## Declare things to be passed to dependent projects\n\n## INCLUDE_DIRS: uncomment this if your package contains header files\n\n## LIBRARIES: libraries you create in this project that dependent projects also need\n\n## CATKIN_DEPENDS: catkin_packages dependent projects also need\n\n## DEPENDS: system dependencies of this project that dependent projects also need\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#  INCLUDE_DIRS include\n\n#  LIBRARIES station_config\n\n#  CATKIN_DEPENDS other_catkin_pkg\n\n#  DEPENDS system_lib\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## Specify additional locations of header files\n\n## Your package locations should be listed before other locations\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# include\n\n# ${catkin_INCLUDE_DIRS}\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "## Declare a C++ library\n\n# add_library(${PROJECT_NAME}\n\n#   src/${PROJECT_NAME}/station_config.cpp\n\n# )\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## Add cmake target dependencies of the library\n\n## as an example, code may need to be generated before libraries\n\n## either from message generation or dynamic reconfigure\n\n# add_dependencies(${PROJECT_NAME} ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## Declare a C++ executable\n\n## With catkin_make all packages are built within a single CMake context\n\n## The recommended prefix ensures that target names across packages don't collide\n\n# add_executable(${PROJECT_NAME}_node src/station_config_node.cpp)\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "## Rename C++ executable without prefix\n\n## The above recommended prefix causes long target names, the following renames the\n\n## target back to the shorter version for ease of user use\n\n## e.g. \"rosrun someones_pkg node\" instead of \"rosrun someones_pkg someones_pkg_node\"\n\n# set_target_properties(${PROJECT_NAME}_node PROPERTIES OUTPUT_NAME node PREFIX \"\")\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "## Add cmake target dependencies of the executable\n\n## same as for the library above\n\n# add_dependencies(${PROJECT_NAME}_node ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "## Specify libraries to link a library or executable target against\n\n# target_link_libraries(${PROJECT_NAME}_node\n\n#   ${catkin_LIBRARIES}\n\n# )\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#############\n\n## Install ##\n\n#############\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# all install targets should use catkin DESTINATION variables\n\n# See http://ros.org/doc/api/catkin/html/adv_user_guide/variables.html\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "## Mark executable scripts (Python etc.) for installation\n\n## in contrast to setup.py, you can choose the destination\n\n# install(PROGRAMS\n\n#   scripts/my_python_script\n\n#   DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n# )\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "## Mark executables and/or libraries for installation\n\n# install(TARGETS ${PROJECT_NAME} ${PROJECT_NAME}_node\n\n#   ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n\n#   LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n\n#   RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n# )\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "## Mark cpp header files for installation\n\n# install(DIRECTORY include/${PROJECT_NAME}/\n\n#   DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}\n\n#   FILES_MATCHING PATTERN \"*.h\"\n\n#   PATTERN \".svn\" EXCLUDE\n\n# )\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "## Mark other files for installation (e.g. launch and bag files, etc.)\n\n# install(FILES\n\n#   # myfile1\n\n#   # myfile2\n\n#   DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}\n\n# )\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#############\n\n## Testing ##\n\n#############\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "## Add gtest based cpp test target and link libraries\n\n# catkin_add_gtest(${PROJECT_NAME}-test test/test_station_config.cpp)\n\n# if(TARGET ${PROJECT_NAME}-test)\n\n#   target_link_libraries(${PROJECT_NAME}-test ${PROJECT_NAME})\n\n# endif()\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "## Add folders to be run by python nosetests\n\n# catkin_add_nosetests(test)\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 33
    },
    "src/common_utils/CMakeLists.txt" : {
      "ObjectId" : "0988680810ad8aadc5fc29d5853931f5b90c5edb",
      "LastModified" : "2019-01-30T20:31:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "65d8f66950f6bd7af0d89e1f45476c4f0d15beb6",
      "LastModified" : "2019-01-30T20:31:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 39
  },
  "ElapsedTime" : 1766
}