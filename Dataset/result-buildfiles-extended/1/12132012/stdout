{
  "Repository" : "12132012",
  "Revision" : "HEAD",
  "ObjectId" : "1330cf836dac2567f1b9e99f59ac28ff3582aa0c",
  "CommitTime" : "2019-01-25T22:34:42Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "dcb62b56cf0a36de7563567f78b15743f982e7b7",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set on to prefer .a files over .so files for linking\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We use additional modules that cmake needs to know about\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Include all of the globally shared link libraries\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Include specific compiler options\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Hide some cmake variables that will never be used\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Our banner file for placing at the top of the roles\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Include the NUClear roles system\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Enable sending binaries to robots\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cmake/Modules/Compiler.cmake" : {
      "ObjectId" : "e6775c4326182c13721f762eb895142a5fe1f81c",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We need noncall exceptions so we can throw exceptions from signal handlers\n\n# This allows us to catch null pointer exceptions\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# -Werror\n\n# Because Eigen\n",
        "Line" : 6,
        "CharPositionInLine" : 20
      },
      "2" : {
        "Text" : "# GNU Compiler\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Enable colours on g++ 4.9 or greater\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Disable armadillo bounds checking in release and min size release builds\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/Modules/FindAravis.cmake" : {
      "ObjectId" : "38818032f3e0897c8ce05c6db264e9a4216b9de3",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Modules/FindCATCH.cmake" : {
      "ObjectId" : "59b0473554f53a481d57d1f6c9c174213dd8af19",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Modules/FindFFTW3.cmake" : {
      "ObjectId" : "111ed560864f36dbde2969de8248eec420f2ad89",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Modules/FindFSWatch.cmake" : {
      "ObjectId" : "dc3a7e689378d9f6b9f6165faeaf82acad47003b",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2013-2016 Trent Houliston <trent@houliston.me>\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n\n# documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the\n\n# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\n\n# permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all copies or substantial portions of the\n\n# Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE\n\n# WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n\n# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\n# OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindLibGFortran.cmake" : {
      "ObjectId" : "220a0f3c100a1e5c9e26fb79cdaceef0175d269b",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find libGFortran\n\n# Once done this will define\n\n#\n\n#  LIBGFORTRAN_FOUND - system has libGFortran\n\n#  LIBGFORTRAN_LIBRARIES - Link these to use libGFortran\n\n#\n\n#  Copyright (c) 2013 Trent Houliston <trent@houliston.me>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Try to use gfortran to output its path to search\n\n# Query gfortran to get the libgfortran.so path\n",
        "Line" : 19,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# show the LIBGFORTRAN_LIBRARIES variables only in the advanced view\n",
        "Line" : 66,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "cmake/Modules/FindNUClear.cmake" : {
      "ObjectId" : "c442231d1a93690aa7b52a5ff15665300b67b01f",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Modules/FindOpenBLAS.cmake" : {
      "ObjectId" : "3f2bdd42908285132f00864d7f6d10bb0dc323ee",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO also find LAPACK if needed\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindPortAudio.cmake" : {
      "ObjectId" : "d4f19301991fa0c228813914882f74271b841277",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Modules/FindQuex.cmake" : {
      "ObjectId" : "1d9148d59af8c98095b4ca0f3536d160606ea90b",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Modules/FindRtAudio.cmake" : {
      "ObjectId" : "a0cd2e50a0bb1b305b86db17aa15f5f10a8adca9",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#define RTAUDIO_VERSION \"4.1.1\"\n",
        "Line" : 6,
        "CharPositionInLine" : 37
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindSndFile.cmake" : {
      "ObjectId" : "57552baaa3903d673cd9edaa763cf10a1cda7e68",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Modules/FindTCMalloc.cmake" : {
      "ObjectId" : "53e358a23dfb5cd48eb833e8cd5964e8b9e9c7f8",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#define TC_VERSION_MAJOR  2\n\n#define TC_VERSION_MINOR  4\n\n#define TC_VERSION_PATCH  \"\"\n\n#define TC_VERSION_STRING \"gperftools 2.4\"\n",
        "Line" : 6,
        "CharPositionInLine" : 37
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindYAML-CPP.cmake" : {
      "ObjectId" : "7bfbaef97ac8345335a64497baa897293fa52220",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Modules/Finddc1394.cmake" : {
      "ObjectId" : "f33e681f021803d77f128772a9a6c31e6f2764bb",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Modules/FindeSpeak.cmake" : {
      "ObjectId" : "5fff47350c8f16614772431ef04178eaf23f4f32",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find ALSA for eSpeak\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find PortAudio for eSpeak\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#BINARY espeak\n\n#VERSION_BINARY_ARGUMENTS \"--version\"\n\n#VERSION_REGEX \"eSpeak text-to-speech: (([0-9]+\\\\.?)+)\"\n",
        "Line" : 11,
        "CharPositionInLine" : 23
      },
      "CommentCount" : 3
    },
    "cmake/Modules/Findfmt.cmake" : {
      "ObjectId" : "539cbb7830f83d42f16be6783d11be469f466c6a",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Modules/Findglib2.cmake" : {
      "ObjectId" : "71608a488b0a7993c75dadc2f360812bec741083",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Modules/RobotSend.cmake" : {
      "ObjectId" : "24bf924c343bc604d6e8b8fd014c882dcddac477",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We need python!\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Script output is like\n\n# d1;darwin1\n\n# d2;darwin2\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Convert script output to a list of pairs.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Ninja code!\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Get each element of the pair.\n\n# host  = d1\n\n# alias = darwin1\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Make our installer\n\n# The install script expects an IP address to install to and a hostname to determine config files to install.\n\n# IP address is represented by the short-form hostname (e.g. d1)\n\n# Hostname is represented by the long-form hostname (e.g. darwin1)\n",
        "Line" : 29,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Move our installer to an IDE group\n",
        "Line" : 47,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 7
    },
    "cmake/Modules/SharedLibraries.cmake" : {
      "ObjectId" : "a3a466fa4c48f6002c19138378e3c080693311b4",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find our globally shared libraries:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Resolve problems when OpenBLAS isn't found:\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Some definitions for armadillo\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set include directories and libraries:\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#INCLUDE_DIRECTORIES(SYSTEM ${OPENRAVE_INCLUDE_DIRS})\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/Modules/ToolchainLibraryFinder.cmake" : {
      "ObjectId" : "a61e806d8492115167060328abce42993d745257",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Extract the arguments from our function call\n",
        "Line" : 4,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Clear our required_vars variable\n",
        "Line" : 10,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Find our include path from our named headers\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Find our include path\n",
        "Line" : 16,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Setup and export our variables\n",
        "Line" : 23,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Find our library from the named library files\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Setup and export our variables\n",
        "Line" : 38,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Find our binary from the named binary files\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Setup and export our variables\n",
        "Line" : 53,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Find our version if we can\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Read our package version file into a variable\n",
        "Line" : 64,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# Execute our binary to get a version string\n",
        "Line" : 69,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# Build up our version string\n",
        "Line" : 76,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "#VERSION_VAR \"${MAJOR}.${MINOR}.${PATCH}\")\n",
        "Line" : 91,
        "CharPositionInLine" : 38
      },
      "14" : {
        "Text" : "# Export our found variable to parent scope\n",
        "Line" : 94,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 15
    },
    "module/behaviour/Controller/CMakeLists.txt" : {
      "ObjectId" : "1c0ceb19b9a4650d69dd5b67193dac22a9c70ce1",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/behaviour/planning/BezierWalkPathPlanner/CMakeLists.txt" : {
      "ObjectId" : "eb7bb93522f860b02dd288e1d4282a759beef7c7",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/behaviour/planning/DivePlanner/CMakeLists.txt" : {
      "ObjectId" : "1c0ceb19b9a4650d69dd5b67193dac22a9c70ce1",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/behaviour/planning/FixedWalk/CMakeLists.txt" : {
      "ObjectId" : "1c0ceb19b9a4650d69dd5b67193dac22a9c70ce1",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/behaviour/planning/KickPlanner/CMakeLists.txt" : {
      "ObjectId" : "1c0ceb19b9a4650d69dd5b67193dac22a9c70ce1",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/behaviour/planning/SimpleWalkPathPlanner/CMakeLists.txt" : {
      "ObjectId" : "1c0ceb19b9a4650d69dd5b67193dac22a9c70ce1",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/behaviour/skills/ArmVisionAvoidance/CMakeLists.txt" : {
      "ObjectId" : "eb7bb93522f860b02dd288e1d4282a759beef7c7",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/behaviour/skills/DirectWalkController/CMakeLists.txt" : {
      "ObjectId" : "eb7bb93522f860b02dd288e1d4282a759beef7c7",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/behaviour/skills/FallingRelax/CMakeLists.txt" : {
      "ObjectId" : "1c0ceb19b9a4650d69dd5b67193dac22a9c70ce1",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/behaviour/skills/Getup/CMakeLists.txt" : {
      "ObjectId" : "1c0ceb19b9a4650d69dd5b67193dac22a9c70ce1",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/behaviour/skills/GoalSaver/CMakeLists.txt" : {
      "ObjectId" : "1c0ceb19b9a4650d69dd5b67193dac22a9c70ce1",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/behaviour/skills/HeadBehaviourSoccer/CMakeLists.txt" : {
      "ObjectId" : "1c0ceb19b9a4650d69dd5b67193dac22a9c70ce1",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/behaviour/skills/KickScript/CMakeLists.txt" : {
      "ObjectId" : "1c0ceb19b9a4650d69dd5b67193dac22a9c70ce1",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/behaviour/skills/Nod/CMakeLists.txt" : {
      "ObjectId" : "eb7bb93522f860b02dd288e1d4282a759beef7c7",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/behaviour/skills/Stand/CMakeLists.txt" : {
      "ObjectId" : "1c0ceb19b9a4650d69dd5b67193dac22a9c70ce1",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/behaviour/skills/WalkEngineStand/CMakeLists.txt" : {
      "ObjectId" : "eb7bb93522f860b02dd288e1d4282a759beef7c7",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/behaviour/skills/WalkPathFollower/CMakeLists.txt" : {
      "ObjectId" : "eb7bb93522f860b02dd288e1d4282a759beef7c7",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/behaviour/strategy/KeyboardWalk/CMakeLists.txt" : {
      "ObjectId" : "7fc593b54b80cf69174b4a3fe8f94cb294310c65",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find Curses (we need ncurses)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "module/behaviour/strategy/KickAtGoal/CMakeLists.txt" : {
      "ObjectId" : "1c0ceb19b9a4650d69dd5b67193dac22a9c70ce1",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/behaviour/strategy/PS3Walk/CMakeLists.txt" : {
      "ObjectId" : "1c0ceb19b9a4650d69dd5b67193dac22a9c70ce1",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/behaviour/strategy/SoccerStrategy/CMakeLists.txt" : {
      "ObjectId" : "1c0ceb19b9a4650d69dd5b67193dac22a9c70ce1",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/behaviour/strategy/WalkTest/CMakeLists.txt" : {
      "ObjectId" : "1c0ceb19b9a4650d69dd5b67193dac22a9c70ce1",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/behaviour/tools/KickCommander/CMakeLists.txt" : {
      "ObjectId" : "eb7bb93522f860b02dd288e1d4282a759beef7c7",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/behaviour/tools/NUPresenceServer/CMakeLists.txt" : {
      "ObjectId" : "eb7bb93522f860b02dd288e1d4282a759beef7c7",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/behaviour/tools/ScriptRunner/CMakeLists.txt" : {
      "ObjectId" : "1c0ceb19b9a4650d69dd5b67193dac22a9c70ce1",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/behaviour/tools/ScriptTuner/CMakeLists.txt" : {
      "ObjectId" : "0155a83ecc047d8725bee6e56a7b27274c66f928",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find Curses (we need ncurses)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "module/behaviour/tools/ServoTest/CMakeLists.txt" : {
      "ObjectId" : "eb7bb93522f860b02dd288e1d4282a759beef7c7",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/behaviour/tools/SpeakTest/CMakeLists.txt" : {
      "ObjectId" : "1c0ceb19b9a4650d69dd5b67193dac22a9c70ce1",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/debug/KinematicsDebug/CMakeLists.txt" : {
      "ObjectId" : "000cf5ebc6dba201c5d8e94de77fb36f7d0f6a66",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find libjpeg library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "module/debug/NUsight/CMakeLists.txt" : {
      "ObjectId" : "000cf5ebc6dba201c5d8e94de77fb36f7d0f6a66",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find libjpeg library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "module/debug/ServoHealth/CMakeLists.txt" : {
      "ObjectId" : "eb7bb93522f860b02dd288e1d4282a759beef7c7",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/debug/optimisation/TestDOpE/CMakeLists.txt" : {
      "ObjectId" : "eb7bb93522f860b02dd288e1d4282a759beef7c7",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/extension/FileWatcher/CMakeLists.txt" : {
      "ObjectId" : "c35dc07528cec15d701d2e0144ffaee80da98528",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2013-2016 Trent Houliston <trent@houliston.me>\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n\n# documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the\n\n# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\n\n# permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all copies or substantial portions of the\n\n# Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE\n\n# WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n\n# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\n# OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use libfswatch to abstract between platforms\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "module/input/Camera/CMakeLists.txt" : {
      "ObjectId" : "dd8326f05e35f544188a734abaa955fa6076dbce",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find libjpeg library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "module/input/GameController/CMakeLists.txt" : {
      "ObjectId" : "1c0ceb19b9a4650d69dd5b67193dac22a9c70ce1",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/input/NatNet/CMakeLists.txt" : {
      "ObjectId" : "eb7bb93522f860b02dd288e1d4282a759beef7c7",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/input/PostureRecogniser/CMakeLists.txt" : {
      "ObjectId" : "eb7bb93522f860b02dd288e1d4282a759beef7c7",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/localisation/BallLocalisation/CMakeLists.txt" : {
      "ObjectId" : "eb7bb93522f860b02dd288e1d4282a759beef7c7",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/localisation/NUcapLocalisation/CMakeLists.txt" : {
      "ObjectId" : "000cf5ebc6dba201c5d8e94de77fb36f7d0f6a66",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find libjpeg library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "module/localisation/OdometryLocalisation/CMakeLists.txt" : {
      "ObjectId" : "eb7bb93522f860b02dd288e1d4282a759beef7c7",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/localisation/RobotParticleLocalisation/CMakeLists.txt" : {
      "ObjectId" : "eb7bb93522f860b02dd288e1d4282a759beef7c7",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/motion/HeadController/CMakeLists.txt" : {
      "ObjectId" : "1c0ceb19b9a4650d69dd5b67193dac22a9c70ce1",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/motion/IKKick/CMakeLists.txt" : {
      "ObjectId" : "1c0ceb19b9a4650d69dd5b67193dac22a9c70ce1",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/motion/KinematicsConfiguration/CMakeLists.txt" : {
      "ObjectId" : "eb7bb93522f860b02dd288e1d4282a759beef7c7",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/motion/NUPresenceInput/CMakeLists.txt" : {
      "ObjectId" : "eb7bb93522f860b02dd288e1d4282a759beef7c7",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/motion/OldWalkEngine/CMakeLists.txt" : {
      "ObjectId" : "1c0ceb19b9a4650d69dd5b67193dac22a9c70ce1",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/motion/ScriptEngine/CMakeLists.txt" : {
      "ObjectId" : "1c0ceb19b9a4650d69dd5b67193dac22a9c70ce1",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/motion/walk/FootStep/CMakeLists.txt" : {
      "ObjectId" : "eb7bb93522f860b02dd288e1d4282a759beef7c7",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/output/eSpeak/CMakeLists.txt" : {
      "ObjectId" : "c3edbcd013d2c24a7f1e1ef7a69912d129ae18e7",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the eSpeak Library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "module/platform/darwin/HardwareIO/CMakeLists.txt" : {
      "ObjectId" : "eb7bb93522f860b02dd288e1d4282a759beef7c7",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/platform/darwin/HardwareSimulator/CMakeLists.txt" : {
      "ObjectId" : "eb7bb93522f860b02dd288e1d4282a759beef7c7",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/platform/darwin/SensorFilter/CMakeLists.txt" : {
      "ObjectId" : "1c0ceb19b9a4650d69dd5b67193dac22a9c70ce1",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/research/AutoClassifierProvider/CMakeLists.txt" : {
      "ObjectId" : "1c0ceb19b9a4650d69dd5b67193dac22a9c70ce1",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/research/LayerAutoClassifier/CMakeLists.txt" : {
      "ObjectId" : "1c0ceb19b9a4650d69dd5b67193dac22a9c70ce1",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/research/PressureAutoClassifier/CMakeLists.txt" : {
      "ObjectId" : "1c0ceb19b9a4650d69dd5b67193dac22a9c70ce1",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/research/ScriptOptimizer/CMakeLists.txt" : {
      "ObjectId" : "1c0ceb19b9a4650d69dd5b67193dac22a9c70ce1",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/support/DisplayTest/CMakeLists.txt" : {
      "ObjectId" : "000cf5ebc6dba201c5d8e94de77fb36f7d0f6a66",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find libjpeg library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "module/support/NUsight/CMakeLists.txt" : {
      "ObjectId" : "000cf5ebc6dba201c5d8e94de77fb36f7d0f6a66",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find libjpeg library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "module/support/ReactionTimer/CMakeLists.txt" : {
      "ObjectId" : "eb7bb93522f860b02dd288e1d4282a759beef7c7",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/support/SignalCatcher/CMakeLists.txt" : {
      "ObjectId" : "eb7bb93522f860b02dd288e1d4282a759beef7c7",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/support/SoccerSimulator/CMakeLists.txt" : {
      "ObjectId" : "1c0ceb19b9a4650d69dd5b67193dac22a9c70ce1",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/support/VirtualCamera/CMakeLists.txt" : {
      "ObjectId" : "eb7bb93522f860b02dd288e1d4282a759beef7c7",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/support/configuration/GlobalConfig/CMakeLists.txt" : {
      "ObjectId" : "1c0ceb19b9a4650d69dd5b67193dac22a9c70ce1",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/support/configuration/NetworkConfiguration/CMakeLists.txt" : {
      "ObjectId" : "eb7bb93522f860b02dd288e1d4282a759beef7c7",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/support/configuration/SoccerConfig/CMakeLists.txt" : {
      "ObjectId" : "1c0ceb19b9a4650d69dd5b67193dac22a9c70ce1",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/support/logging/ConsoleLogHandler/CMakeLists.txt" : {
      "ObjectId" : "eb7bb93522f860b02dd288e1d4282a759beef7c7",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/support/logging/DataLogging/CMakeLists.txt" : {
      "ObjectId" : "03ac75849f2b0031c22d8e017c6c62f1fef98bf7",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Generate our data logging module to handle all the message types\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copy across the files\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "module/support/logging/DataPlayback/CMakeLists.txt" : {
      "ObjectId" : "077ce5d41d394be310675eafa7b7569fe788d260",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Generate our data logging module to handle all the message types\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copy across the files\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "module/support/logging/FileLogHandler/CMakeLists.txt" : {
      "ObjectId" : "eb7bb93522f860b02dd288e1d4282a759beef7c7",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/support/logging/LegLoadsLogger/CMakeLists.txt" : {
      "ObjectId" : "eb7bb93522f860b02dd288e1d4282a759beef7c7",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/support/optimisation/DOpE/CMakeLists.txt" : {
      "ObjectId" : "eb7bb93522f860b02dd288e1d4282a759beef7c7",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/support/optimisation/WalkOptimiser/CMakeLists.txt" : {
      "ObjectId" : "000cf5ebc6dba201c5d8e94de77fb36f7d0f6a66",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find libjpeg library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "module/tools/FirmwareInstaller/CMakeLists.txt" : {
      "ObjectId" : "e9219a1d62486eccf695a637040b226658d0d791",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# CM730 Firmware builds for both Darwin and Igus models\n\n###############################################################################\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#CMAKE_ARGS -D -DCMAKE_TOOLCHAIN_FILE:STRING=\"${firmware_source}/CM730.cmake\"\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# We have a custom installation step below.\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# We dont need to do any testing.\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "module/vision/BallDetector/CMakeLists.txt" : {
      "ObjectId" : "1c0ceb19b9a4650d69dd5b67193dac22a9c70ce1",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/vision/GoalDetector/CMakeLists.txt" : {
      "ObjectId" : "1c0ceb19b9a4650d69dd5b67193dac22a9c70ce1",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/vision/IgusVisionTests/CMakeLists.txt" : {
      "ObjectId" : "eb7bb93522f860b02dd288e1d4282a759beef7c7",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/vision/LUTClassifier/CMakeLists.txt" : {
      "ObjectId" : "eb7bb93522f860b02dd288e1d4282a759beef7c7",
      "LastModified" : "2018-05-07T04:20:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "module/vision/VisualMesh/CMakeLists.txt" : {
      "ObjectId" : "4f1b1607c1845fa8d1c1225c4374f14f8320b941",
      "LastModified" : "2018-06-18T02:46:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Convert our opencl files into header files with their contents\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build our NUClear module\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "nuclear/CMakeLists.txt" : {
      "ObjectId" : "e6b8a6d0fc30fae2f298914daca319ecce854c5a",
      "LastModified" : "2018-06-18T02:46:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We use additional modules for the NUClear roles system\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We need NUClear\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set to off to ignore building tests\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set to on to build as shared libraries\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Our banner file for placing at the top of the roles\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Our location of our nuclear roles directory\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Our variables that are used to locate the shared, module, and message folders\n\n# They are given relative to the current project directory\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# You generally shouldn't have to change these\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Make our shared directory to output files too\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Settings for the compiler to make NUClear work\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Add the subdirectory for our messages\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Add the subdirectory for our utilities\n\n# Is after messages as it can use messages\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Add the subdirectory for our extensions\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Add the subdirectory for our roles\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Add the subdirectory for module\n\n# This must be after roles as roles determines which modules to build\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "nuclear/cmake/Modules/FindEigen3.cmake" : {
      "ObjectId" : "422b7d0fb36fbb0a5fb77581e48224ecaf8a2fe7",
      "LastModified" : "2018-06-18T02:46:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2013-2016 Trent Houliston <trent@houliston.me>\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n\n# documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the\n\n# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\n\n# permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all copies or substantial portions of the\n\n# Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE\n\n# WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n\n# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\n# OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "nuclear/cmake/Modules/FindNUClear.cmake" : {
      "ObjectId" : "c442231d1a93690aa7b52a5ff15665300b67b01f",
      "LastModified" : "2018-06-18T02:46:50Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "nuclear/cmake/Modules/FindPythonLibsNew.cmake" : {
      "ObjectId" : "894f5301784846a63b9a0c84efcbf83795590ca9",
      "LastModified" : "2018-06-18T02:46:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find python libraries\n\n# This module finds the libraries corresponding to the Python interpeter\n\n# FindPythonInterp provides.\n\n# This code sets the following variables:\n\n#\n\n#  PYTHONLIBS_FOUND           - have the Python libs been found\n\n#  PYTHON_PREFIX              - path to the Python installation\n\n#  PYTHON_LIBRARIES           - path to the python library\n\n#  PYTHON_INCLUDE_DIRS        - path to where Python.h is found\n\n#  PYTHON_MODULE_EXTENSION    - lib extension, e.g. '.so' or '.pyd'\n\n#  PYTHON_MODULE_PREFIX       - lib name prefix: usually an empty string\n\n#  PYTHON_SITE_PACKAGES       - path to installation site-packages\n\n#  PYTHON_IS_DEBUG            - whether the Python interpreter is a debug build\n\n#\n\n# Thanks to talljimbo for the patch adding the 'LDVERSION' config\n\n# variable usage.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2001-2009 Kitware, Inc.\n\n# Copyright 2012 Continuum Analytics, Inc.\n\n#\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright\n\n# notice, this list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright\n\n# notice, this list of conditions and the following disclaimer in the\n\n# documentation and/or other materials provided with the distribution.\n\n#\n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n# nor the names of their contributors may be used to endorse or promote\n\n# products derived from this software without specific prior written\n\n# permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# # A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use the Python interpreter to find the libs.\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# According to http://stackoverflow.com/questions/646518/python-how-to-detect-debug-interpreter\n\n# testing whether sys has the gettotalrefcount function is a reliable, cross-platform\n\n# way to detect a CPython debug interpreter.\n\n#\n\n# The library suffix is from the config var LDVERSION sometimes, otherwise\n\n# VERSION. VERSION will typically be like \"2.7\" on unix, and \"27\" on windows.\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Convert the process output into a list\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Make sure the Python has the same pointer-size as the chosen compiler\n\n# Skip if CMAKE_SIZEOF_VOID_P is not defined\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The built-in FindPython didn't always give the version numbers\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Make sure all directory separators are '/'\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# TODO: All the nuances of CPython debug builds have not been dealt with/tested.\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# when run in a venv, PYTHON_PREFIX points to it. But the libraries remain in the\n\n# original python installation. They may be found relative to PYTHON_INCLUDE_DIR.\n",
        "Line" : 146,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# raise an error if the python libs are still not found.\n",
        "Line" : 154,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "#message(STATUS \"Searching for Python libs in ${_PYTHON_LIBS_SEARCH}\")\n\n# Probably this needs to be more involved. It would be nice if the config\n\n# information the python interpreter itself gave us were more complete.\n",
        "Line" : 168,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# If all else fails, just set the name/version and let the linker figure out the path.\n",
        "Line" : 176,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# We use PYTHON_INCLUDE_DIR, PYTHON_LIBRARY and PYTHON_DEBUG_LIBRARY for the\n\n# cache entries because they are meant to specify the location of a single\n\n# library. We now set the variables listed by the documentation for this\n\n# module.\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "nuclear/cmake/Modules/Findpybind11.cmake" : {
      "ObjectId" : "30cdd603beb439832a6da070ebbfdf2941439329",
      "LastModified" : "2018-06-18T02:46:50Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "nuclear/cmake/Modules/HeaderLibrary.cmake" : {
      "ObjectId" : "d3af8c4d6dc518b056737d5bd37d3932a30715a3",
      "LastModified" : "2018-06-18T02:46:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Extract the arguments from our function call\n",
        "Line" : 3,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Clear our required_vars variable\n",
        "Line" : 9,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Find our include path\n",
        "Line" : 12,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# File doesn't exist in standard search paths, download it\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Create the output folder if it doesn't already exist\n",
        "Line" : 23,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Download file.\n",
        "Line" : 28,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Parse download status\n",
        "Line" : 33,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Setup and export our variables\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Find the package\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 9
    },
    "nuclear/cmake/Modules/NUClearCompilerSettings.cmake" : {
      "ObjectId" : "eeb769f800ded2ef7544039a4edaef56c3d930e4",
      "LastModified" : "2018-06-18T02:46:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Default to do a debug build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# RPath variables\n\n# use, i.e. don't skip the full RPATH for the build tree\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Build the RPATH into the binary before install\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make OSX use the same RPATH as everyone else\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add some useful places to the RPATH\n\n# These will allow the binary to run from the build folder\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Compilation must be done with c++14 for NUClear to work\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "nuclear/cmake/Modules/ToolchainLibraryFinder.cmake" : {
      "ObjectId" : "a61e806d8492115167060328abce42993d745257",
      "LastModified" : "2018-06-18T02:46:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Extract the arguments from our function call\n",
        "Line" : 4,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Clear our required_vars variable\n",
        "Line" : 10,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Find our include path from our named headers\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Find our include path\n",
        "Line" : 16,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Setup and export our variables\n",
        "Line" : 23,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Find our library from the named library files\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Setup and export our variables\n",
        "Line" : 38,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Find our binary from the named binary files\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Setup and export our variables\n",
        "Line" : 53,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Find our version if we can\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Read our package version file into a variable\n",
        "Line" : 64,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# Execute our binary to get a version string\n",
        "Line" : 69,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# Build up our version string\n",
        "Line" : 76,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "#VERSION_VAR \"${MAJOR}.${MINOR}.${PATCH}\")\n",
        "Line" : 91,
        "CharPositionInLine" : 38
      },
      "14" : {
        "Text" : "# Export our found variable to parent scope\n",
        "Line" : 94,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 15
    },
    "nuclear/extension/CMakeLists.txt" : {
      "ObjectId" : "94ff58ff93fe1af4a7223103e467d13fc63cb4af",
      "LastModified" : "2018-06-18T02:46:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If the user has provided their own CMakeLists.txt file in the extension dir use that\n\n# otherwise we default to just building everything in there\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "nuclear/extension/NUClearExtension.cmake" : {
      "ObjectId" : "d46070619d06b35b8259c709c459157aa75bd5fe",
      "LastModified" : "2018-06-18T02:46:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Get the relative path to our extension directory\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Get our two include directories for extension\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Make our extension include directories variable\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Include both our include directory message and utility (since we can use them)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Get the relative path to our extension directory\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Clear our list of NUClear extension libraries\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# If the user has a CMakeLists in the extension directory use that\n\n# This CMakeLists must set the cache variable NUCLEAR_EXTENSION_LIBRARIES itself\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Otherwise we assume we build them ourself\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Using all extensions\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# If we had source files build them into a library\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Build a library from these files\n",
        "Line" : 47,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# Link our additional shared libraries\n",
        "Line" : 50,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# Add to our list of NUClear extension libraries\n",
        "Line" : 53,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# Put it in an IDE group for shared\n",
        "Line" : 56,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 14
    },
    "nuclear/message/CMakeLists.txt" : {
      "ObjectId" : "8945af30dbb3669227a9229cafb6f09d910e68f8",
      "LastModified" : "2018-06-18T02:46:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If the user has provided their own CMakeLists.txt file in the messages dir use that\n\n# otherwise we default to using the Neutron messaging system\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "nuclear/message/Neutron.cmake" : {
      "ObjectId" : "b6f7827b992f696229974d0771229128b990181b",
      "LastModified" : "2018-06-18T02:46:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Get the relative path to our message directory\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Get our two include directories for message\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Make our message include directories variable\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Include our message directories\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Get our source and binary directories for message\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# We need protobuf and python to generate the neutron messages\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# If we have the package pybind11 we can use to go generate python bindings\n\n#FIND_PACKAGE(pybind11)\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# We need Eigen3\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# We need Eigen3\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# If we found pybind11 include its directories\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Build our builtin protobuf classes\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Get the file without the extension\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Run the protocol buffer compiler on the builtin protocol buffers\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Prevent Effective C++ and unused parameter error checks being performed on generated files.\n",
        "Line" : 73,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Get our dependency files for our message class generator\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Build all of our normal messages\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Get the file without the extension\n",
        "Line" : 94,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Calculate the Output Directory\n",
        "Line" : 97,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Create the output directory\n",
        "Line" : 102,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Get the dependencies on this protobuf so we can recompile on changes\n\n# If they change you will need to re cmake\n",
        "Line" : 105,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Clean our dependency list\n",
        "Line" : 121,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Absolute dependencies\n",
        "Line" : 126,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# Relative dependencies\n",
        "Line" : 130,
        "CharPositionInLine" : 8
      },
      "23" : {
        "Text" : "# Extract the protocol buffer information so we can generate code off it\n",
        "Line" : 137,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# Gather the dependencies for each message.\n",
        "Line" : 150,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# Repackage our protocol buffers so they don't collide with the actual classes\n\n# when we make our c++ protobuf classes by adding protobuf to the package\n",
        "Line" : 153,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# Run the protocol buffer compiler on these new protobufs\n",
        "Line" : 163,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# Build our c++ class from the extracted information\n",
        "Line" : 177,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# The protobuf descriptions are generated\n",
        "Line" : 191,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# Prevent Effective C++ and unused parameter error checks being performed on generated files.\n",
        "Line" : 200,
        "CharPositionInLine" : 32
      },
      "30" : {
        "Text" : "# Add the generated files to our list\n",
        "Line" : 203,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# If we have pybind11 also add the python bindings\n",
        "Line" : 210,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# If we have pybind11 we need to generate our final binding class\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Build our outer python binding wrapper class\n",
        "Line" : 219,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# Build a library from these files\n",
        "Line" : 235,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# The library uses protocol buffers\n",
        "Line" : 239,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# If we have pybind11 we need to make this a python library too\n",
        "Line" : 243,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "# Work out what python expects the name of the library to be\n",
        "Line" : 247,
        "CharPositionInLine" : 8
      },
      "38" : {
        "Text" : "# Make our NUClear python directory for including\n",
        "Line" : 250,
        "CharPositionInLine" : 8
      },
      "39" : {
        "Text" : "# Create symlinks to the files\n",
        "Line" : 253,
        "CharPositionInLine" : 8
      },
      "40" : {
        "Text" : "# Add to our list of NUClear message libraries\n",
        "Line" : 267,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "# Put it in an IDE group for shared\n",
        "Line" : 270,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 42
    },
    "nuclear/module/CMakeLists.txt" : {
      "ObjectId" : "e951ba77d966f52d9cce9ccff6bfdfff61355331",
      "LastModified" : "2018-06-18T02:46:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We use NUClearModule\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Remove any duplicate modules (used in more then one role)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Clear our list of data files\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Build each of our modules and their corresponding tests\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add the subdirectories\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "nuclear/module/NUClearModule.cmake" : {
      "ObjectId" : "fa3f6534bafdafa052d4f0dcf9a660630fbafb88",
      "LastModified" : "2018-06-18T02:46:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Get our relative module path\n",
        "Line" : 7,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Fix windows paths\n",
        "Line" : 10,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Keep our modules path for grouping later\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Stip out slashes to make it a valid target name\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Parse our input arguments\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Include our own source and binary directories\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Include our messages extensions and utility folders\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Include any directories passed into the function\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Include any directories used in messages utilities and extensions\n",
        "Line" : 37,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#########################\n\n# Find or generate code #\n\n#########################\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# CPP Code\n",
        "Line" : 46,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# A CPP module just use sources in this directory\n",
        "Line" : 49,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# Python Code\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Now copy all our python files across to the python directory of output\n",
        "Line" : 66,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# Copy the python files into the build directory\n",
        "Line" : 69,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# Calculate the output Directory\n",
        "Line" : 72,
        "CharPositionInLine" : 12
      },
      "16" : {
        "Text" : "# Add the file we will generate to our output\n",
        "Line" : 76,
        "CharPositionInLine" : 12
      },
      "17" : {
        "Text" : "# Create the required folder\n",
        "Line" : 79,
        "CharPositionInLine" : 12
      },
      "18" : {
        "Text" : "# Copy across our file\n",
        "Line" : 83,
        "CharPositionInLine" : 12
      },
      "19" : {
        "Text" : "##############\n\n# Data files #\n\n##############\n",
        "Line" : 113,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Get our data files\n",
        "Line" : 117,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Process the data files\n",
        "Line" : 120,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Calculate the Output Directory\n",
        "Line" : 123,
        "CharPositionInLine" : 8
      },
      "23" : {
        "Text" : "# Add the file we will generate to our output\n",
        "Line" : 127,
        "CharPositionInLine" : 8
      },
      "24" : {
        "Text" : "# Create the required folder\n",
        "Line" : 130,
        "CharPositionInLine" : 8
      },
      "25" : {
        "Text" : "# Copy across the files\n",
        "Line" : 134,
        "CharPositionInLine" : 8
      },
      "26" : {
        "Text" : "# Get data file name\n",
        "Line" : 148,
        "CharPositionInLine" : 8
      },
      "27" : {
        "Text" : "# Determine output file\n",
        "Line" : 152,
        "CharPositionInLine" : 8
      },
      "28" : {
        "Text" : "# Add the file we will generate to our output\n",
        "Line" : 163,
        "CharPositionInLine" : 8
      },
      "29" : {
        "Text" : "# Copy across the files\n",
        "Line" : 166,
        "CharPositionInLine" : 8
      },
      "30" : {
        "Text" : "######################\n\n# Build into library #\n\n######################\n",
        "Line" : 177,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# Add all our code to a library and if we are doing a shared build make it a shared library\n",
        "Line" : 181,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# Put it in an IDE group for shared\n",
        "Line" : 193,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "###########\n\n# Testing #\n\n###########\n",
        "Line" : 196,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# If we are doing tests then build the tests for this\n",
        "Line" : 200,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# Set a different name for our test module\n",
        "Line" : 202,
        "CharPositionInLine" : 8
      },
      "36" : {
        "Text" : "# Rebuild our sources using the test module\n",
        "Line" : 205,
        "CharPositionInLine" : 8
      },
      "37" : {
        "Text" : "# Add the test\n",
        "Line" : 213,
        "CharPositionInLine" : 10
      },
      "CommentCount" : 38
    },
    "nuclear/roles/CMakeLists.txt" : {
      "ObjectId" : "0507664cc5c74c99f3aa9ab6e8cce87c89d2538b",
      "LastModified" : "2018-06-18T02:46:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Get our role directories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This gets all of our source files\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Backup the state of all the role variables before we re read them\n\n# This is needed so we can delete roles that no longer exist\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find all of our role files\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Check it is a .role file\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Get role name and add it to our list of roles\n",
        "Line" : 25,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# If we had a backup as to if this role is enabled use it.\n\n# Otherwise default to true.\n",
        "Line" : 28,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Set our NUClear roles based on the ROLES cache variables that are set to true\n\n# This makes it so that only the roles that are enabled will be built\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# We need the NUClear role function here so it can be used in the role files\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Clear our NUClear modules variable so we can repopulate it\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Note that the loop value of this for loop sets the local role variable that is used in the included role file\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "nuclear/roles/NUClearRole.cmake" : {
      "ObjectId" : "e96e9fa5bb2d4746e2a86dedda6da4c7fd23977a",
      "LastModified" : "2018-06-18T02:46:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We need python!\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Store our role_modules in a sane variable\n",
        "Line" : 6,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Include our messages extensions and utilty folders\n",
        "Line" : 9,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Include our module directory\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Custom command that specifies how to generate ${role}.cpp\n",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# The role cpp files are generated\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Remove the :: from each module to make a valid target name for the module\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Build our executable from the generated role\n",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Link to the roles module libraries and the shared utility and extension libraries\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Set our output directory to be bin\n",
        "Line" : 46,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# IDE folder\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Store the used NUClear modules on the target as a property\n\n# This can be used later in scripts to work out what modules are used in the role\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# We add to the global cache variable here that contains all of the module we are using\n\n# Elsewhere, this is used to include the directories for these in order to build them\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 13
    },
    "nuclear/utility/CMakeLists.txt" : {
      "ObjectId" : "8775af2c3bf95caee03f92c541bc7dc01881d232",
      "LastModified" : "2018-06-18T02:46:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If the user has provided their own CMakeLists.txt file in the utility dir use that\n\n# otherwise we default to just building everything in there\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "nuclear/utility/NUClearUtility.cmake" : {
      "ObjectId" : "48f924788124e007897c7a88b5f850a1c146a82e",
      "LastModified" : "2018-06-18T02:46:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Get the relative path to our utility directory\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Get our two include directories for utility\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Make our utility include directories variable\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Include both our include directory and messages (since we can use them)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Get the relative path to our utility directory\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Clear our list of NUClear utility libraries\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Using all utilities\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# If we had source files build them into a library\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Build a library from these files\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Link our additional shared libraries\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Add to our list of NUClear utility libraries\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Put it in an IDE group for shared\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 12
    },
    "puppet/modules/files/files/FindBoost.cmake" : {
      "ObjectId" : "cfdff94e7c9df5147e17e36b989698203680295b",
      "LastModified" : "2018-06-18T02:46:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindBoost\n\n# ---------\n\n#\n\n# Find Boost include dirs and libraries\n\n#\n\n# Use this module by invoking find_package with the form::\n\n#\n\n#   find_package(Boost\n\n#     [version] [EXACT]      # Minimum or EXACT version e.g. 1.36.0\n\n#     [REQUIRED]             # Fail with error if Boost is not found\n\n#     [COMPONENTS <libs>...] # Boost libraries by their canonical name\n\n#     )                      # e.g. \"date_time\" for \"libboost_date_time\"\n\n#\n\n# This module finds headers and requested component libraries OR a CMake\n\n# package configuration file provided by a \"Boost CMake\" build.  For the\n\n# latter case skip to the \"Boost CMake\" section below.  For the former\n\n# case results are reported in variables::\n\n#\n\n#   Boost_FOUND            - True if headers and requested libraries were found\n\n#   Boost_INCLUDE_DIRS     - Boost include directories\n\n#   Boost_LIBRARY_DIRS     - Link directories for Boost libraries\n\n#   Boost_LIBRARIES        - Boost component libraries to be linked\n\n#   Boost_<C>_FOUND        - True if component <C> was found (<C> is upper-case)\n\n#   Boost_<C>_LIBRARY      - Libraries to link for component <C> (may include\n\n#                            target_link_libraries debug/optimized keywords)\n\n#   Boost_VERSION          - BOOST_VERSION value from boost/version.hpp\n\n#   Boost_LIB_VERSION      - Version string appended to library filenames\n\n#   Boost_MAJOR_VERSION    - Boost major version number (X in X.y.z)\n\n#   Boost_MINOR_VERSION    - Boost minor version number (Y in x.Y.z)\n\n#   Boost_SUBMINOR_VERSION - Boost subminor version number (Z in x.y.Z)\n\n#   Boost_LIB_DIAGNOSTIC_DEFINITIONS (Windows)\n\n#                          - Pass to add_definitions() to have diagnostic\n\n#                            information about Boost's automatic linking\n\n#                            displayed during compilation\n\n#\n\n# This module reads hints about search locations from variables::\n\n#\n\n#   BOOST_ROOT             - Preferred installation prefix\n\n#    (or BOOSTROOT)\n\n#   BOOST_INCLUDEDIR       - Preferred include directory e.g. <prefix>/include\n\n#   BOOST_LIBRARYDIR       - Preferred library directory e.g. <prefix>/lib\n\n#   Boost_NO_SYSTEM_PATHS  - Set to ON to disable searching in locations not\n\n#                            specified by these hint variables. Default is OFF.\n\n#   Boost_ADDITIONAL_VERSIONS\n\n#                          - List of Boost versions not known to this module\n\n#                            (Boost install locations may contain the version)\n\n#\n\n# and saves search results persistently in CMake cache entries::\n\n#\n\n#   Boost_INCLUDE_DIR         - Directory containing Boost headers\n\n#   Boost_LIBRARY_DIR_RELEASE - Directory containing release Boost libraries\n\n#   Boost_LIBRARY_DIR_DEBUG   - Directory containing debug Boost libraries\n\n#   Boost_<C>_LIBRARY_DEBUG   - Component <C> library debug variant\n\n#   Boost_<C>_LIBRARY_RELEASE - Component <C> library release variant\n\n#\n\n# The following :prop_tgt:`IMPORTED` targets are also defined::\n\n#\n\n#   Boost::boost                  - Target for header-only dependencies\n\n#                                   (Boost include directory)\n\n#   Boost::<C>                    - Target for specific component dependency\n\n#                                   (shared or static library); <C> is lower-\n\n#                                   case\n\n#   Boost::diagnostic_definitions - interface target to enable diagnostic\n\n#                                   information about Boost's automatic linking\n\n#                                   during compilation (adds BOOST_LIB_DIAGNOSTIC)\n\n#   Boost::disable_autolinking    - interface target to disable automatic\n\n#                                   linking with MSVC (adds BOOST_ALL_NO_LIB)\n\n#   Boost::dynamic_linking        - interface target to enable dynamic linking\n\n#                                   linking with MSVC (adds BOOST_ALL_DYN_LINK)\n\n#\n\n# Implicit dependencies such as Boost::filesystem requiring\n\n# Boost::system will be automatically detected and satisfied, even\n\n# if system is not specified when using find_package and if\n\n# Boost::system is not added to target_link_libraries.  If using\n\n# Boost::thread, then Threads::Threads will also be added automatically.\n\n#\n\n# It is important to note that the imported targets behave differently\n\n# than variables created by this module: multiple calls to\n\n# find_package(Boost) in the same directory or sub-directories with\n\n# different options (e.g. static or shared) will not override the\n\n# values of the targets created by the first call.\n\n#\n\n# Users may set these hints or results as cache entries.  Projects\n\n# should not read these entries directly but instead use the above\n\n# result variables.  Note that some hint names start in upper-case\n\n# \"BOOST\".  One may specify these as environment variables if they are\n\n# not specified as CMake variables or cache entries.\n\n#\n\n# This module first searches for the Boost header files using the above\n\n# hint variables (excluding BOOST_LIBRARYDIR) and saves the result in\n\n# Boost_INCLUDE_DIR.  Then it searches for requested component libraries\n\n# using the above hints (excluding BOOST_INCLUDEDIR and\n\n# Boost_ADDITIONAL_VERSIONS), \"lib\" directories near Boost_INCLUDE_DIR,\n\n# and the library name configuration settings below.  It saves the\n\n# library directories in Boost_LIBRARY_DIR_DEBUG and\n\n# Boost_LIBRARY_DIR_RELEASE and individual library\n\n# locations in Boost_<C>_LIBRARY_DEBUG and Boost_<C>_LIBRARY_RELEASE.\n\n# When one changes settings used by previous searches in the same build\n\n# tree (excluding environment variables) this module discards previous\n\n# search results affected by the changes and searches again.\n\n#\n\n# Boost libraries come in many variants encoded in their file name.\n\n# Users or projects may tell this module which variant to find by\n\n# setting variables::\n\n#\n\n#   Boost_USE_DEBUG_LIBS     - Set to ON or OFF to specify whether to search\n\n#                              and use the debug libraries.  Default is ON.\n\n#   Boost_USE_RELEASE_LIBS   - Set to ON or OFF to specify whether to search\n\n#                              and use the release libraries.  Default is ON.\n\n#   Boost_USE_MULTITHREADED  - Set to OFF to use the non-multithreaded\n\n#                              libraries ('mt' tag).  Default is ON.\n\n#   Boost_USE_STATIC_LIBS    - Set to ON to force the use of the static\n\n#                              libraries.  Default is OFF.\n\n#   Boost_USE_STATIC_RUNTIME - Set to ON or OFF to specify whether to use\n\n#                              libraries linked statically to the C++ runtime\n\n#                              ('s' tag).  Default is platform dependent.\n\n#   Boost_USE_DEBUG_RUNTIME  - Set to ON or OFF to specify whether to use\n\n#                              libraries linked to the MS debug C++ runtime\n\n#                              ('g' tag).  Default is ON.\n\n#   Boost_USE_DEBUG_PYTHON   - Set to ON to use libraries compiled with a\n\n#                              debug Python build ('y' tag). Default is OFF.\n\n#   Boost_USE_STLPORT        - Set to ON to use libraries compiled with\n\n#                              STLPort ('p' tag).  Default is OFF.\n\n#   Boost_USE_STLPORT_DEPRECATED_NATIVE_IOSTREAMS\n\n#                            - Set to ON to use libraries compiled with\n\n#                              STLPort deprecated \"native iostreams\"\n\n#                              ('n' tag).  Default is OFF.\n\n#   Boost_COMPILER           - Set to the compiler-specific library suffix\n\n#                              (e.g. \"-gcc43\").  Default is auto-computed\n\n#                              for the C++ compiler in use.  A list may be\n\n#                              used if multiple compatible suffixes should\n\n#                              be tested for, in decreasing order of\n\n#                              preference.\n\n#   Boost_THREADAPI          - Suffix for \"thread\" component library name,\n\n#                              such as \"pthread\" or \"win32\".  Names with\n\n#                              and without this suffix will both be tried.\n\n#   Boost_NAMESPACE          - Alternate namespace used to build boost with\n\n#                              e.g. if set to \"myboost\", will search for\n\n#                              myboost_thread instead of boost_thread.\n\n#\n\n# Other variables one may set to control this module are::\n\n#\n\n#   Boost_DEBUG              - Set to ON to enable debug output from FindBoost.\n\n#                              Please enable this before filing any bug report.\n\n#   Boost_DETAILED_FAILURE_MSG\n\n#                            - Set to ON to add detailed information to the\n\n#                              failure message even when the REQUIRED option\n\n#                              is not given to the find_package call.\n\n#   Boost_REALPATH           - Set to ON to resolve symlinks for discovered\n\n#                              libraries to assist with packaging.  For example,\n\n#                              the \"system\" component library may be resolved to\n\n#                              \"/usr/lib/libboost_system.so.1.42.0\" instead of\n\n#                              \"/usr/lib/libboost_system.so\".  This does not\n\n#                              affect linking and should not be enabled unless\n\n#                              the user needs this information.\n\n#   Boost_LIBRARY_DIR        - Default value for Boost_LIBRARY_DIR_RELEASE and\n\n#                              Boost_LIBRARY_DIR_DEBUG.\n\n#\n\n# On Visual Studio and Borland compilers Boost headers request automatic\n\n# linking to corresponding libraries.  This requires matching libraries\n\n# to be linked explicitly or available in the link library search path.\n\n# In this case setting Boost_USE_STATIC_LIBS to OFF may not achieve\n\n# dynamic linking.  Boost automatic linking typically requests static\n\n# libraries with a few exceptions (such as Boost.Python).  Use::\n\n#\n\n#   add_definitions(${Boost_LIB_DIAGNOSTIC_DEFINITIONS})\n\n#\n\n# to ask Boost to report information about automatic linking requests.\n\n#\n\n# Example to find Boost headers only::\n\n#\n\n#   find_package(Boost 1.36.0)\n\n#   if(Boost_FOUND)\n\n#     include_directories(${Boost_INCLUDE_DIRS})\n\n#     add_executable(foo foo.cc)\n\n#   endif()\n\n#\n\n# Example to find Boost libraries and use imported targets::\n\n#\n\n#   find_package(Boost 1.56 REQUIRED COMPONENTS\n\n#                date_time filesystem iostreams)\n\n#   add_executable(foo foo.cc)\n\n#   target_link_libraries(foo Boost::date_time Boost::filesystem\n\n#                             Boost::iostreams)\n\n#\n\n# Example to find Boost headers and some *static* (release only) libraries::\n\n#\n\n#   set(Boost_USE_STATIC_LIBS        ON)  # only find static libs\n\n#   set(Boost_USE_DEBUG_LIBS         OFF) # ignore debug libs and\n\n#   set(Boost_USE_RELEASE_LIBS       ON)  # only find release libs\n\n#   set(Boost_USE_MULTITHREADED      ON)\n\n#   set(Boost_USE_STATIC_RUNTIME    OFF)\n\n#   find_package(Boost 1.36.0 COMPONENTS date_time filesystem system ...)\n\n#   if(Boost_FOUND)\n\n#     include_directories(${Boost_INCLUDE_DIRS})\n\n#     add_executable(foo foo.cc)\n\n#     target_link_libraries(foo ${Boost_LIBRARIES})\n\n#   endif()\n\n#\n\n# Boost CMake\n\n# ^^^^^^^^^^^\n\n#\n\n# If Boost was built using the boost-cmake project it provides a package\n\n# configuration file for use with find_package's Config mode.  This\n\n# module looks for the package configuration file called\n\n# BoostConfig.cmake or boost-config.cmake and stores the result in cache\n\n# entry \"Boost_DIR\".  If found, the package configuration file is loaded\n\n# and this module returns with no further action.  See documentation of\n\n# the Boost CMake package configuration for details on what it provides.\n\n#\n\n# Set Boost_NO_BOOST_CMAKE to ON to disable the search for boost-cmake.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Save project's policies\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# if IN_LIST\n",
        "Line" : 219,
        "CharPositionInLine" : 30
      },
      "4" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n# Before we go searching, check whether boost-cmake is available, unless the\n\n# user specifically asked NOT to search for boost-cmake.\n\n#\n\n# If Boost_DIR is set, this behaves as any find_package call would. If not,\n\n# it looks at BOOST_ROOT and BOOSTROOT to find Boost.\n\n#\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If Boost_DIR is not set, look for BOOSTROOT and BOOST_ROOT as alternatives,\n\n# since these are more conventional for Boost.\n",
        "Line" : 229,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Do the same find_package call but look specifically for the CMake version.\n\n# Note that args are passed in the Boost_FIND_xxxxx variables, so there is no\n\n# need to delegate them to this find_package call.\n",
        "Line" : 239,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# If we found boost-cmake, then we're done.  Print out what we found.\n\n# Otherwise let the rest of the module try to find it.\n",
        "Line" : 245,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Restore project's policies\n",
        "Line" : 252,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#  FindBoost functions & macros\n\n#\n",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "############################################\n\n#\n\n# Check the existence of the libraries.\n\n#\n\n############################################\n\n# This macro was taken directly from the FindQt4.cmake file that is included\n\n# with the CMake distribution. This is NOT my work. All work was done by the\n\n# original authors of the FindQt4.cmake file. Only minor modifications were\n\n# made to remove references to Qt and make this file more generally applicable\n\n# And ELSE/ENDIF pairs were removed for readability.\n\n#########################################################################\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# if the generator supports configuration types then set\n\n# optimized and debug libraries, or if the CMAKE_BUILD_TYPE has a value\n",
        "Line" : 278,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# if there are no configuration types and CMAKE_BUILD_TYPE has no value\n\n# then just use the release libraries\n",
        "Line" : 283,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# FIXME: This probably should be set for both cases\n",
        "Line" : 287,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# if only the release version was found, set the debug variable also to the release version\n",
        "Line" : 291,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# if only the debug version was found, set the release variable also to the debug version\n",
        "Line" : 298,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# If the debug & release library ends up being the same, omit the keywords\n",
        "Line" : 305,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Make variables changeable to the advanced user\n",
        "Line" : 320,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Detect changes in used variables.\n\n# Compares the current variable value with the last one.\n\n# In short form:\n\n# v != v_LAST                      -> CHANGED = 1\n\n# v is defined, v_LAST not         -> CHANGED = 1\n\n# v is not defined, but v_LAST is  -> CHANGED = 1\n\n# otherwise                        -> CHANGED = 0\n\n# CHANGED is returned in variable named ${changed_var}\n",
        "Line" : 327,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#\n\n# Find the given library (var).\n\n# Use 'build_type' to support different lib paths for RELEASE or DEBUG builds\n\n#\n",
        "Line" : 357,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# If this is the first library found then save Boost_LIBRARY_DIR_[RELEASE,DEBUG].\n",
        "Line" : 366,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Try component-specific hints but do not save Boost_LIBRARY_DIR_[RELEASE,DEBUG].\n",
        "Line" : 372,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# If Boost_LIBRARY_DIR_[RELEASE,DEBUG] is known then search only there.\n",
        "Line" : 376,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 387,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\n\n# Runs compiler with \"-dumpversion\" and parses major/minor\n\n# version with a regex.\n\n#\n",
        "Line" : 389,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#\n\n# Take a list of libraries with \"thread\" in it\n\n# and prepend duplicates with \"thread_${Boost_THREADAPI}\"\n\n# at the front of the list\n\n#\n",
        "Line" : 400,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#\n\n# If a library is found, replace its cache entry with its REALPATH\n\n#\n",
        "Line" : 411,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Guesses Boost's compiler prefix used in built library names\n\n# Returns the guess by setting the variable pointed to by _ret\n",
        "Line" : 429,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Good luck!\n",
        "Line" : 459,
        "CharPositionInLine" : 59
      },
      "29" : {
        "Text" : "# yes, this is correct\n",
        "Line" : 460,
        "CharPositionInLine" : 34
      },
      "30" : {
        "Text" : "# VS 6.0 Good luck!\n",
        "Line" : 461,
        "CharPositionInLine" : 11
      },
      "31" : {
        "Text" : "# yes, this is correct\n",
        "Line" : 462,
        "CharPositionInLine" : 34
      },
      "32" : {
        "Text" : "# no GCC version encoding prior to 1.34\n",
        "Line" : 472,
        "CharPositionInLine" : 36
      },
      "33" : {
        "Text" : "# no GCC version encoding prior to 1.34\n",
        "Line" : 480,
        "CharPositionInLine" : 36
      },
      "34" : {
        "Text" : "# Determine which version of GCC we have.\n",
        "Line" : 483,
        "CharPositionInLine" : 8
      },
      "35" : {
        "Text" : "# In Boost 1.36.0 and newer, the mangled compiler name used\n\n# on Mac OS X/Darwin is \"xgcc\".\n",
        "Line" : 487,
        "CharPositionInLine" : 14
      },
      "36" : {
        "Text" : "# In Boost <= 1.35.0, there is no mangled compiler name for\n\n# the Mac OS X/Darwin version of GCC.\n",
        "Line" : 491,
        "CharPositionInLine" : 14
      },
      "37" : {
        "Text" : "# We don't know the Boost version, so assume it's\n\n# pre-1.36.0.\n",
        "Line" : 496,
        "CharPositionInLine" : 12
      },
      "38" : {
        "Text" : "# TODO at least Boost_DEBUG here?\n",
        "Line" : 506,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "#\n\n# Get component dependencies.  Requires the dependencies to have been\n\n# defined for the Boost release version.\n\n#\n\n# component - the component to check\n\n# _ret - list of library dependencies\n\n#\n",
        "Line" : 512,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Note: to add a new Boost release, run\n\n#\n\n#   % cmake -DBOOST_DIR=/path/to/boost/source -P Utilities/Scripts/BoostScanDeps.cmake\n\n#\n\n# The output may be added in a new block below.  If it's the same as\n\n# the previous release, simply update the version range of the block\n\n# for the previous release.  Also check if any new components have\n\n# been added, and add any new components to\n\n# _Boost_COMPONENT_HEADERS.\n\n#\n\n# This information was originally generated by running\n\n# BoostScanDeps.cmake against every boost release to date supported\n\n# by FindBoost:\n\n#\n\n#   % for version in /path/to/boost/sources/*\n\n#     do\n\n#       cmake -DBOOST_DIR=$version -P Utilities/Scripts/BoostScanDeps.cmake\n\n#     done\n\n#\n\n# The output was then updated by search and replace with these regexes:\n\n#\n\n# - Strip message(STATUS) prefix dashes\n\n#   s;^-- ;;\n\n# - Indent\n\n#   s;^set(;    set(;;\n\n# - Add conditionals\n\n#   s;Scanning /path/to/boost/sources/boost_\\(.*\\)_\\(.*\\)_\\(.*);  elseif(NOT Boost_VERSION VERSION_LESS \\10\\20\\3 AND Boost_VERSION VERSION_LESS xxxx);\n\n#\n\n# This results in the logic seen below, but will require the xxxx\n\n# replacing with the following Boost release version (or the next\n\n# minor version to be released, e.g. 1.59 was the latest at the time\n\n# of writing, making 1.60 the next, so 106000 is the needed version\n\n# number).  Identical consecutive releases were then merged together\n\n# by updating the end range of the first block and removing the\n\n# following redundant blocks.\n\n#\n\n# Running the script against all historical releases should be\n\n# required only if the BoostScanDeps.cmake script logic is changed.\n\n# The addition of a new release should only require it to be run\n\n# against the new release.\n",
        "Line" : 520,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# message(STATUS \"Dependencies for Boost::${component}: ${_boost_DEPS_STRING}\")\n",
        "Line" : 809,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "#\n\n# Get component headers.  This is the primary header (or headers) for\n\n# a given component, and is used to check that the headers are present\n\n# as well as the library itself as an extra sanity check of the build\n\n# environment.\n\n#\n\n# component - the component to check\n\n# _hdrs\n\n#\n",
        "Line" : 812,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Note: new boost components will require adding here.  The header\n\n# must be present in all versions of Boost providing a library.\n",
        "Line" : 822,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# message(STATUS \"Headers for Boost::${component}: ${_boost_HDRS_STRING}\")\n",
        "Line" : 877,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "#\n\n# Determine if any missing dependencies require adding to the component list.\n\n#\n\n# Sets _Boost_${COMPONENT}_DEPENDENCIES for each required component,\n\n# plus _Boost_IMPORTED_TARGETS (TRUE if imported targets should be\n\n# defined; FALSE if dependency information is unavailable).\n\n#\n\n# componentvar - the component list variable name\n\n# extravar - the indirect dependency list variable name\n\n#\n\n#\n",
        "Line" : 880,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# _boost_unprocessed_components - list of components requiring processing\n\n# _boost_processed_components - components already processed (or currently being processed)\n\n# _boost_new_components - new components discovered for future processing\n\n#\n",
        "Line" : 892,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "#\n\n# Some boost libraries may require particular set of compler features.\n\n# The very first one was `boost::fiber` introduced in Boost 1.62.\n\n# One can check required compiler features of it in\n\n# `${Boost_ROOT}/libs/fiber/build/Jamfile.v2`.\n\n#\n",
        "Line" : 923,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# Boost >= 1.62 and < 1.65\n",
        "Line" : 930,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "#\n\n# Update library search directory hint variable with paths used by prebuilt boost binaries.\n\n#\n\n# Prebuilt windows binaries (https://sourceforge.net/projects/boost/files/boost-binaries/)\n\n# have library directories named using MSVC compiler version and architecture.\n\n# This function would append corresponding directories if MSVC is a current compiler,\n\n# so having `BOOST_ROOT` would be enough to specify to find everything.\n\n#\n",
        "Line" : 950,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "#\n\n# End functions/macros\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 985,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n# main.\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 990,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# If the user sets Boost_LIBRARY_DIR, use it as the default for both\n\n# configurations.\n",
        "Line" : 995,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# Check the version of Boost against the requested version.\n",
        "Line" : 1017,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# The version may appear in a directory with or without the patch\n\n# level, even when the patch level is non-zero.\n",
        "Line" : 1023,
        "CharPositionInLine" : 2
      },
      "55" : {
        "Text" : "# The user has not requested an exact version.  Among known\n\n# versions, find those that are acceptable to the user request.\n\n#\n\n# Note: When adding a new Boost release, also update the dependency\n\n# information in _Boost_COMPONENT_DEPENDENCIES and\n\n# _Boost_COMPONENT_HEADERS.  See the instructions at the top of\n\n# _Boost_COMPONENT_DEPENDENCIES.\n",
        "Line" : 1029,
        "CharPositionInLine" : 2
      },
      "56" : {
        "Text" : "# Select acceptable versions.\n",
        "Line" : 1050,
        "CharPositionInLine" : 4
      },
      "57" : {
        "Text" : "# This version is high enough.\n",
        "Line" : 1053,
        "CharPositionInLine" : 8
      },
      "58" : {
        "Text" : "# This version is a short-form for the requested version with\n\n# the patch level dropped.\n",
        "Line" : 1056,
        "CharPositionInLine" : 8
      },
      "59" : {
        "Text" : "# Any version is acceptable.\n",
        "Line" : 1062,
        "CharPositionInLine" : 4
      },
      "60" : {
        "Text" : "# The reason that we failed to find Boost. This will be set to a\n\n# user-friendly message when we fail to find some necessary piece of\n\n# Boost.\n",
        "Line" : 1067,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# Output some of their choices\n",
        "Line" : 1073,
        "CharPositionInLine" : 2
      },
      "62" : {
        "Text" : "# Supply Boost_LIB_DIAGNOSTIC_DEFINITIONS as a convenience target. It\n\n# will only contain any interface definitions on WIN32, but is created\n\n# on all platforms to keep end user code free from platform dependent\n\n# code.  Also provide convenience targets to disable autolinking and\n\n# enable dynamic linking.\n",
        "Line" : 1088,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# In windows, automatic linking is performed, so you do not have\n\n# to specify the libraries.  If you are linking to a dynamic\n\n# runtime, then you can choose to link to either a static or a\n\n# dynamic Boost library, the default is to do a static link.  You\n\n# can alter this for a specific library \"whatever\" by defining\n\n# BOOST_WHATEVER_DYN_LINK to force Boost library \"whatever\" to be\n\n# linked dynamically.  Alternatively you can force all Boost\n\n# libraries to dynamic link by defining BOOST_ALL_DYN_LINK.\n",
        "Line" : 1099,
        "CharPositionInLine" : 2
      },
      "64" : {
        "Text" : "# This feature can be disabled for Boost library \"whatever\" by\n\n# defining BOOST_WHATEVER_NO_LIB, or for all of Boost by defining\n\n# BOOST_ALL_NO_LIB.\n",
        "Line" : 1108,
        "CharPositionInLine" : 2
      },
      "65" : {
        "Text" : "# If you want to observe which libraries are being linked against\n\n# then defining BOOST_LIB_DIAGNOSTIC will cause the auto-linking\n\n# code to emit a #pragma message each time a library is selected\n\n# for linking.\n",
        "Line" : 1112,
        "CharPositionInLine" : 2
      },
      "66" : {
        "Text" : "# Collect environment variable inputs as hints.  Do not consider changes.\n",
        "Line" : 1129,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# Collect inputs and cached results.  Detect changes since the last run.\n",
        "Line" : 1142,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Search for Boost include DIR\n\n# ------------------------------------------------------------------------\n",
        "Line" : 1164,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# Clear Boost_INCLUDE_DIR if it did not change but other input affecting the\n\n# location did.  We will find a new one based on the new inputs.\n",
        "Line" : 1170,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# Try to find Boost by stepping backwards through the Boost versions\n\n# we know about.\n\n# Build a list of path suffixes for each version.\n",
        "Line" : 1206,
        "CharPositionInLine" : 2
      },
      "71" : {
        "Text" : "# Add in a path suffix, based on the required version, ideally\n\n# we could read this from version.hpp, but for that to work we'd\n\n# need to know the include dir already\n",
        "Line" : 1211,
        "CharPositionInLine" : 4
      },
      "72" : {
        "Text" : "# Transform 1.35 => 1_35 and 1.36.0 => 1_36_0\n",
        "Line" : 1216,
        "CharPositionInLine" : 4
      },
      "73" : {
        "Text" : "# Look for a standard boost header file.\n",
        "Line" : 1243,
        "CharPositionInLine" : 2
      },
      "74" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Extract version information from version.hpp\n\n# ------------------------------------------------------------------------\n",
        "Line" : 1251,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# Set Boost_FOUND based only on header location and version.\n\n# It will be updated below for component libraries.\n",
        "Line" : 1255,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# Extract Boost_VERSION and Boost_LIB_VERSION from version.hpp\n",
        "Line" : 1263,
        "CharPositionInLine" : 2
      },
      "77" : {
        "Text" : "# Set Boost_FOUND based on requested version.\n",
        "Line" : 1289,
        "CharPositionInLine" : 4
      },
      "78" : {
        "Text" : "# State that we found a version of Boost that is too new or too old.\n",
        "Line" : 1302,
        "CharPositionInLine" : 6
      },
      "79" : {
        "Text" : "# Caller will accept any Boost version.\n",
        "Line" : 1315,
        "CharPositionInLine" : 4
      },
      "80" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Prefix initialization\n\n# ------------------------------------------------------------------------\n",
        "Line" : 1324,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Suffix initialization and compiler suffix detection.\n\n# ------------------------------------------------------------------------\n",
        "Line" : 1338,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "# Setting some more suffixes for the library\n",
        "Line" : 1355,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# Attempt to guess the compiler suffix\n\n# NOTE: this is not perfect yet, if you experience any issues\n\n# please report them and use the Boost_COMPILER variable\n\n# to work around the problems.\n",
        "Line" : 1363,
        "CharPositionInLine" : 2
      },
      "84" : {
        "Text" : "#======================\n\n# Systematically build up the Boost ABI tag\n\n# http://boost.org/doc/libs/1_41_0/more/getting_started/windows.html#library-naming\n",
        "Line" : 1383,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# Key       Use this library when:\n\n#  s        linking statically to the C++ standard library and\n\n#           compiler runtime support libraries.\n",
        "Line" : 1388,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "#  g        using debug versions of the standard and runtime\n\n#           support libraries\n",
        "Line" : 1395,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "#  y        using special debug build of python\n",
        "Line" : 1404,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "#  d        using a debug version of your code\n",
        "Line" : 1408,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "#  p        using the STLport standard library rather than the\n\n#           default one supplied with your compiler\n",
        "Line" : 1410,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "#  n        using the STLport deprecated \"native iostreams\" feature\n",
        "Line" : 1416,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Begin finding boost libraries\n\n# ------------------------------------------------------------------------\n",
        "Line" : 1429,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "# Clear Boost_LIBRARY_DIR_${c} if it did not change but other input affecting the\n\n# location did.  We will find a new one based on the new inputs.\n",
        "Line" : 1438,
        "CharPositionInLine" : 2
      },
      "93" : {
        "Text" : "# If Boost_LIBRARY_DIR_[RELEASE,DEBUG] is set, prefer its value.\n",
        "Line" : 1444,
        "CharPositionInLine" : 2
      },
      "94" : {
        "Text" : "# Support preference of static libs by adjusting CMAKE_FIND_LIBRARY_SUFFIXES\n",
        "Line" : 1492,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "# We want to use the tag inline below without risking double dashes\n",
        "Line" : 1502,
        "CharPositionInLine" : 0
      },
      "96" : {
        "Text" : "# The previous behavior of FindBoost when Boost_USE_STATIC_LIBS was enabled\n\n# on WIN32 was to:\n\n#  1. Search for static libs compiled against a SHARED C++ standard runtime library (use if found)\n\n#  2. Search for static libs compiled against a STATIC C++ standard runtime library (use if found)\n\n# We maintain this behavior since changing it could break people's builds.\n\n# To disable the ambiguous behavior, the user need only\n\n# set Boost_USE_STATIC_RUNTIME either ON or OFF.\n",
        "Line" : 1514,
        "CharPositionInLine" : 0
      },
      "97" : {
        "Text" : "# On versions < 1.35, remove the System library from the considered list\n\n# since it wasn't added until 1.35.\n",
        "Line" : 1528,
        "CharPositionInLine" : 0
      },
      "98" : {
        "Text" : "# Additional components may be required via component dependencies.\n\n# Add any missing components to the list.\n",
        "Line" : 1536,
        "CharPositionInLine" : 0
      },
      "99" : {
        "Text" : "# If thread is required, get the thread libs as a dependency\n",
        "Line" : 1540,
        "CharPositionInLine" : 0
      },
      "100" : {
        "Text" : "# If the user changed any of our control inputs flush previous results.\n",
        "Line" : 1551,
        "CharPositionInLine" : 0
      },
      "101" : {
        "Text" : "# Compute component-specific hints.\n",
        "Line" : 1570,
        "CharPositionInLine" : 2
      },
      "102" : {
        "Text" : "# Consolidate and report component-specific hints.\n",
        "Line" : 1583,
        "CharPositionInLine" : 2
      },
      "103" : {
        "Text" : "#\n\n# Find headers\n\n#\n",
        "Line" : 1593,
        "CharPositionInLine" : 2
      },
      "104" : {
        "Text" : "# Look for a standard boost header file.\n",
        "Line" : 1597,
        "CharPositionInLine" : 2
      },
      "105" : {
        "Text" : "#\n\n# Find RELEASE libraries\n\n#\n",
        "Line" : 1609,
        "CharPositionInLine" : 2
      },
      "106" : {
        "Text" : "# if Boost_LIBRARY_DIR_RELEASE is not defined,\n\n# but Boost_LIBRARY_DIR_DEBUG is, look there first for RELEASE libs\n",
        "Line" : 1641,
        "CharPositionInLine" : 2
      },
      "107" : {
        "Text" : "# Avoid passing backslashes to _Boost_FIND_LIBRARY due to macro re-parsing.\n",
        "Line" : 1647,
        "CharPositionInLine" : 2
      },
      "108" : {
        "Text" : "#\n\n# Find DEBUG libraries\n\n#\n",
        "Line" : 1659,
        "CharPositionInLine" : 2
      },
      "109" : {
        "Text" : "# if Boost_LIBRARY_DIR_DEBUG is not defined,\n\n# but Boost_LIBRARY_DIR_RELEASE is, look there first for DEBUG libs\n",
        "Line" : 1692,
        "CharPositionInLine" : 2
      },
      "110" : {
        "Text" : "# Avoid passing backslashes to _Boost_FIND_LIBRARY due to macro re-parsing.\n",
        "Line" : 1698,
        "CharPositionInLine" : 2
      },
      "111" : {
        "Text" : "# Check if component requires some compiler features\n",
        "Line" : 1717,
        "CharPositionInLine" : 2
      },
      "112" : {
        "Text" : "# Restore the original find library ordering\n",
        "Line" : 1722,
        "CharPositionInLine" : 0
      },
      "113" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  End finding boost libraries\n\n# ------------------------------------------------------------------------\n",
        "Line" : 1727,
        "CharPositionInLine" : 0
      },
      "114" : {
        "Text" : "# The above setting of Boost_FOUND was based only on the header files.\n\n# Update it for the requested component libraries.\n",
        "Line" : 1743,
        "CharPositionInLine" : 0
      },
      "115" : {
        "Text" : "# The headers were found.  Check for requested component libs.\n",
        "Line" : 1746,
        "CharPositionInLine" : 2
      },
      "116" : {
        "Text" : "# Optional indirect dependencies are not counted as missing.\n",
        "Line" : 1758,
        "CharPositionInLine" : 4
      },
      "117" : {
        "Text" : "# We were unable to find some libraries, so generate a sensible\n\n# error message that lists the libraries we were unable to find.\n",
        "Line" : 1768,
        "CharPositionInLine" : 4
      },
      "118" : {
        "Text" : "# Compatibility Code for backwards compatibility with CMake\n\n# 2.4's FindBoost module.\n",
        "Line" : 1795,
        "CharPositionInLine" : 4
      },
      "119" : {
        "Text" : "# Look for the boost library path.\n\n# Note that the user may not have installed any libraries\n\n# so it is quite possible the Boost_LIBRARY_DIRS may not exist.\n",
        "Line" : 1798,
        "CharPositionInLine" : 4
      },
      "120" : {
        "Text" : "# Strip off the trailing \"/include\" in the path.\n",
        "Line" : 1808,
        "CharPositionInLine" : 6
      },
      "121" : {
        "Text" : "# Boost headers were not found so no components were found.\n",
        "Line" : 1826,
        "CharPositionInLine" : 2
      },
      "122" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Add imported targets\n\n# ------------------------------------------------------------------------\n",
        "Line" : 1833,
        "CharPositionInLine" : 0
      },
      "123" : {
        "Text" : "# For header-only libraries\n",
        "Line" : 1838,
        "CharPositionInLine" : 2
      },
      "124" : {
        "Text" : "# Even if Boost_USE_STATIC_LIBS is OFF, we might have static\n\n# libraries as a result.\n",
        "Line" : 1854,
        "CharPositionInLine" : 10
      },
      "125" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Notification to end user about what was found\n\n# ------------------------------------------------------------------------\n",
        "Line" : 1901,
        "CharPositionInLine" : 0
      },
      "126" : {
        "Text" : "# we opt not to automatically output Boost_ERROR_REASON here as\n\n# it could be quite lengthy and somewhat imposing in its requests\n\n# Since Boost is not always a required dependency we'll leave this\n\n# up to the end-user.\n",
        "Line" : 1927,
        "CharPositionInLine" : 6
      },
      "127" : {
        "Text" : "# Configure display of cache entries in GUI.\n",
        "Line" : 1940,
        "CharPositionInLine" : 0
      },
      "128" : {
        "Text" : "# Record last used values of input variables so we can\n\n# detect on the next run if the user changed them.\n",
        "Line" : 1955,
        "CharPositionInLine" : 0
      },
      "129" : {
        "Text" : "# Maintain a persistent list of components requested anywhere since\n\n# the last flush.\n",
        "Line" : 1968,
        "CharPositionInLine" : 0
      },
      "130" : {
        "Text" : "# Restore project's policies\n",
        "Line" : 1977,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 131
    },
    "report/CMakeLists.txt" : {
      "ObjectId" : "287dad6c3a0ea2609aa53c91f47123758d1ab05f",
      "LastModified" : "2018-06-18T02:46:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We need python!\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We need latex!\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We need bibtool!\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Build the graphs!\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Make our arguments for our module files\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Get all our standalone report files\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add those onto the report_files\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Get their relative paths for the standalone files\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add the new relative paths to the list\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Build our main tex file that includes the others\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Build our main tex file that includes the others\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Build our first latex run\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Build our bibliographies\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Build our indicies\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Do our final latex run\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Make our installer\n",
        "Line" : 129,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "# Get all the .tex files\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Find out what section they should be in\n\n#\te.g. behaviour/Controller\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# For every section there should be a label ref so that other modules can link to it\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Generate the master tex file\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Merge the bibliography sections\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Call all of the things\n\n# latex\n\n# bibtex\n\n# makeglosseries\n\n# make index\n\n# latex\n\n# latex\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# DEPENDENCIES\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# The generateReport",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24
    },
    "report/graph/CMakeLists.txt" : {
      "ObjectId" : "c83a2039ebe5beb27ddddf83c80d369f60302e96",
      "LastModified" : "2018-06-18T02:46:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We need python!\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# An option for what format of graph we want\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We need a demangler that doesn't suck (compiled with the same code as us)\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# For all the modules run our information extraction script\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Get our targets name\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Add our command to build our json output for the information from the file\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# For all the roles run our graph generation script\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Get the modules used by this role\n",
        "Line" : 38,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Make a list of all the JSON files used for this module\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Build our .dot files from the json files\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Build .pdf files from our .dot files\n",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Build .pdf files from our .dot files\n",
        "Line" : 74,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 12
    },
    "shared/utility/CMakeLists.txt" : {
      "ObjectId" : "bd4363f201256fc041953c3cb11b56d728a65734",
      "LastModified" : "2018-06-18T02:46:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This directory contains our message types and other shared types\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We need Eigen3\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Required for vision utility\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Set project name found variable\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Include tools\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#Note where we are\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#Find all subdirectories\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#initialise variables which will contain our collected files and libs\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#Add each subdirectory with selection for loaded libraries\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#Compile the nutilities library\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Link in our messaging library to ensure they are built first\n\n# Also link to our shared libraries\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# SET(NUCLEAR_UTILITY_LIBRARIES ${NUCLEAR_UTILITY_LIBRARIES} ${NUTILITIES_LIBRARIES} CACHE INTERNAL \"Library for NUClear utilities\" FORCE)\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "shared/utility/ConfigureUtilities.cmake" : {
      "ObjectId" : "e65324af93ac16bf9659d06d1394593a22cbd737",
      "LastModified" : "2018-06-18T02:46:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#List subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Collect CXX files\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Collect CXX files recursively\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Check if the dependencies of the folder have been found\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Add library if we have the dependencies\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#Get missing dependencies\n",
        "Line" : 46,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "#Generate library name based on path\n",
        "Line" : 50,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "#Get file list: if we have no cxx files we dont need to link\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# ADD_LIBRARY(${current_library} ${file_list})\n\n# SET(NUTILITIES_LIBRARIES ${NUTILITIES_LIBRARIES} ${current_library} CACHE INTERNAL \"Libraries for NUtilities\" FORCE)\n",
        "Line" : 59,
        "CharPositionInLine" : 3
      },
      "9" : {
        "Text" : "# MESSAGE(\"\")\n",
        "Line" : 63,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 10
    },
    "shared/utility/GetNUtilities.cmake" : {
      "ObjectId" : "c3f3e2df4bf3d59bba074aa5bd49198dc81162ff",
      "LastModified" : "2018-06-18T02:46:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#GetNUtilities.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Get source files based on configuration of libraries and project\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "shared/utility/autocal/CMakeLists.txt" : {
      "ObjectId" : "3ec249810f55c1622894cb73cdc238b12f677f37",
      "LastModified" : "2018-06-18T02:46:50Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "shared/utility/behaviour/CMakeLists.txt" : {
      "ObjectId" : "bf3bfa85825ef4b90f5337ef8aa5ad5cd9e4dca2",
      "LastModified" : "2018-06-18T02:46:50Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "shared/utility/file/CMakeLists.txt" : {
      "ObjectId" : "fe39375e52c7b4058c63aa56acdb74ec0596417d",
      "LastModified" : "2018-06-18T02:46:50Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "shared/utility/input/CMakeLists.txt" : {
      "ObjectId" : "1c8e082d492f93036db21082655f1c6fd36375e7",
      "LastModified" : "2018-06-18T02:46:50Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "shared/utility/io/CMakeLists.txt" : {
      "ObjectId" : "bf3bfa85825ef4b90f5337ef8aa5ad5cd9e4dca2",
      "LastModified" : "2018-06-18T02:46:50Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "shared/utility/kdtree/CMakeLists.txt" : {
      "ObjectId" : "a90c29fab1ead3a182c23ceb67f43ab75b8af361",
      "LastModified" : "2018-06-18T02:46:50Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "shared/utility/learning/CMakeLists.txt" : {
      "ObjectId" : "afedf3a2d3b63fbb34c5c3837e72c53b3520cdd8",
      "LastModified" : "2018-06-18T02:46:50Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "shared/utility/localisation/CMakeLists.txt" : {
      "ObjectId" : "e33025b75637e2a1300e04ac62df20e5006b7bfc",
      "LastModified" : "2018-06-18T02:46:50Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "shared/utility/math/CMakeLists.txt" : {
      "ObjectId" : "69de27ad45fc511703baa9018c4009022af38639",
      "LastModified" : "2018-06-18T02:46:50Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "shared/utility/motion/CMakeLists.txt" : {
      "ObjectId" : "40ed8768645d39950979cffa522fa4f8458fdb36",
      "LastModified" : "2018-06-18T02:46:50Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "shared/utility/nusight/CMakeLists.txt" : {
      "ObjectId" : "a90c29fab1ead3a182c23ceb67f43ab75b8af361",
      "LastModified" : "2018-06-18T02:46:50Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "shared/utility/platform/CMakeLists.txt" : {
      "ObjectId" : "a4fd89d6b5f96021822df0c79ecf1ec03e441960",
      "LastModified" : "2018-06-18T02:46:50Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "shared/utility/strutil/CMakeLists.txt" : {
      "ObjectId" : "bf3bfa85825ef4b90f5337ef8aa5ad5cd9e4dca2",
      "LastModified" : "2018-06-18T02:46:50Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "shared/utility/support/CMakeLists.txt" : {
      "ObjectId" : "97878cfcac3f98ab3254d62717d9a61baa2d6943",
      "LastModified" : "2018-06-18T02:46:50Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "shared/utility/time/CMakeLists.txt" : {
      "ObjectId" : "a90c29fab1ead3a182c23ceb67f43ab75b8af361",
      "LastModified" : "2018-06-18T02:46:50Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "shared/utility/vision/CMakeLists.txt" : {
      "ObjectId" : "929c2007b093af5c6a8a9161d93c5c26a05e00ba",
      "LastModified" : "2018-06-18T02:46:50Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/shared/utility/CMakeLists.txt" : {
      "ObjectId" : "52912ef323e765d1e39272ab37c75b654dcf3855",
      "LastModified" : "2018-06-18T02:46:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This directory contains our message types and other shared types\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This gets all of our source files\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "CMAKE" : 141
  },
  "ElapsedTime" : 5540
}