{
  "Repository" : "31254725",
  "Revision" : "HEAD",
  "ObjectId" : "a55b40bde4b764e3652758f6cdf72aef5f473370",
  "CommitTime" : "2018-12-05T23:34:41Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "5e9fc32f0b877cf54d27ce2e64764cefe02b57b5",
      "LastModified" : "2018-07-24T01:05:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO: https://help.github.com/articles/creating-project-pages-manually/\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO: Handle Windows Shared libs: https://cmake.org/Wiki/BuildingWinDLL\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Not officially supported if changed from default\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Options to control integration builds\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Used to configure the version info file\n",
        "Line" : 116,
        "CharPositionInLine" : 61
      },
      "5" : {
        "Text" : "#https://stackoverflow.com/questions/12302836/renaming-cpack-automatic-target\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Version\n",
        "Line" : 186,
        "CharPositionInLine" : 26
      },
      "CommentCount" : 7
    },
    "cmake/CheckSWIGVersion.cmake" : {
      "ObjectId" : "3b708b2ee345ca633bac62b04ca39b85e6f48363",
      "LastModified" : "2016-02-02T23:19:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Get SWIG major version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/ConfigureFile.cmake" : {
      "ObjectId" : "abb44e39f7573db60dffb68166097b9d1e58bb42",
      "LastModified" : "2016-02-09T23:24:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Configure a file as a build step\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/CopyListOfFiles.cmake" : {
      "ObjectId" : "d529f77598abdb786bf73d4f5ef7073ac95eeedd",
      "LastModified" : "2016-07-16T17:01:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Used by the UseCSharp.cmake to copy a list of files to a destination directory\n\n#\n\n# This is called by add_custom_command as follows:\n\n#   COMMAND ${CMAKE_COMMAND} -DFILES_TO_COPY=\"${sources}\" -DDESTINATION_DIR=${CMAKE_BINARY_DIR} -P ${CMAKE_SOURCE_DIR}/cmake/CopyListOfFiles.cmake\n\n#\n\n# It takes two input variables:\n\n#   - FILES_TO_COPY - list of files to copy (may have regular expressions supported by glob)\n\n#   - DESTINATION_DIR - the destination directory path\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/DependencyManager.cmake" : {
      "ObjectId" : "61f5fcbcad1b5250629907342afef2b9fb8fe6cd",
      "LastModified" : "2017-10-10T20:46:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Download\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/InternalUtils.cmake" : {
      "ObjectId" : "d69a21c15e399c2d694efc2bd4f9911d6f302f40",
      "LastModified" : "2018-07-24T01:05:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file contains a function, which configures the compiler and linker to values appropriate for this project\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Adopted from Google Test\n\n# https://code.google.com/p/googletest/source/browse/trunk/cmake/internal_utils.cmake?r=677\n\n#\n\n# Tweaks CMake's default compiler/linker settings to suit Google Test's needs.\n\n#\n\n# This must be a macro(), as inside a function string() can only\n\n# update variables in the function scope.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For MSVC, CMake sets certain flags to defaults we want to override.\n\n# This replacement code is taken from sample in the CMake Wiki at\n\n# http://www.cmake.org/Wiki/CMake_FAQ#Dynamic_Replace.\n",
        "Line" : 32,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# When Google Test is built as a shared library, it should also use\n\n# shared runtime libraries.  Otherwise, it may end up with multiple\n\n# copies of runtime library data in different modules, resulting in\n\n# hard-to-find crashes. When it is built as a static library, it is\n\n# preferable to use CRT as static libraries, as we don't have to rely\n\n# on CRT DLLs being available. CMake always defaults to using shared\n\n# CRT libraries, so we override that default here.\n",
        "Line" : 39,
        "CharPositionInLine" : 16
      },
      "4" : {
        "Text" : "# We prefer more strict warning checking for building Google Test.\n\n# Replaces /W3 with /W4 in defaults.\n",
        "Line" : 49,
        "CharPositionInLine" : 12
      },
      "5" : {
        "Text" : "# Configure the compiler and linker with more appropirate default values\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#set(CXX0x_FLAG_ \"-std=gnu++0x\")\n",
        "Line" : 106,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "#set(CXX0x_FLAG_ \"-std=c++0x\")\n",
        "Line" : 109,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "#-ansi (does not work on CLang 3.4)\n",
        "Line" : 124,
        "CharPositionInLine" : 67
      },
      "9" : {
        "Text" : "# This breaks GTest with GCC 4.4.x\n\n#check_cxx_compiler_flag(\"${CXX0x_FLAG_}\" COMPILER_SUPPORTS_CXX0X)\n",
        "Line" : 127,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "#elseif(COMPILER_SUPPORTS_CXX0X)\n",
        "Line" : 131,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "#set(CXX_CX11_FLAG \"${CXX0x_FLAG_}\")\n",
        "Line" : 132,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# Visual Studio Complains about not being able to create an assignment operator and copy constructor\n\n# -wd4511 and -wd4512 disable these pointless warnings\n\n# -wd4127: conditional expression is constant\n",
        "Line" : 177,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# TODO: remove all C4127 in headers\n",
        "Line" : 181,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 14
    },
    "cmake/Modules/CheckIsNaN.cmake" : {
      "ObjectId" : "5dc917f8229f865bb0b970cf3d74fc3861019fe8",
      "LastModified" : "2018-07-22T21:33:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Ensure best isnan function is available\n\n# Adpoted from: https://github.com/soonhokong/fp-test/blob/master/src/cmake_modules/CheckIsNaN.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/CheckStdInt.cmake" : {
      "ObjectId" : "6c94bf95d8495c237aa0bb8d348425d4c2d9a55c",
      "LastModified" : "2016-02-09T23:24:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Functions to test implementation of stdint.h\n\n#\n\n# Functions:\n\n#   1. check_int64_long - test whether stdint.h int64_t is long type\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindCSBuild.cmake" : {
      "ObjectId" : "12c371603aefa61e7480819786ab54ae3cb7f09d",
      "LastModified" : "2018-07-24T01:05:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find a C# Project builder\n\n# - Mono: xbuild\n\n# - .NET: msbuild\n\n# - .NET CoreCLR: dotnet\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindGMock.cmake" : {
      "ObjectId" : "dcfd84e36d9ddbfb98e4aba31fbecc3ae1b91fa1",
      "LastModified" : "2018-07-22T21:33:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# A CMake Module for finding and using the Google Mock Library\n\n#\n\n# The following variables may be used to set the path of the Google Mock library:\n\n#   - GMOCK_ROOT: a cmake variable\n\n#   - GMOCK_DIR: an environment variable\n\n#\n\n#\n\n# If GMock is not found, an attempt will be made to auto-download and make avaialble.\n\n#\n\n# The following variables are set:\n\n#   - GMOCK_INCLUDE_DIR - include path for Google Mock library\n\n#   - GMOCK_LIBRARY - library path for Google Mock library\n\n#   - GMOCK_USE_FILE - path to GMock Use File\n\n#   - GMOCK_FOUND - set to ON if GMock is found\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindGTest.cmake" : {
      "ObjectId" : "b3c955ad34d29b14f0189465d9a0391059d86beb",
      "LastModified" : "2018-07-22T21:33:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# A CMake Module for finding and using the Google Test Library\n\n#\n\n# The following variables may be used to set the path of the Google Test library:\n\n#   - GTEST_ROOT: a cmake variable\n\n#   - GTEST_DIR: an environment variable\n\n#\n\n#\n\n# If GTest is not found, an attempt will be made to auto-download and make avaialble.\n\n#\n\n# The following variables are set:\n\n#   - GTEST_INCLUDE_DIR - include path for Google Test library\n\n#   - GTEST_LIBRARY - library path for Google Test library\n\n#   - GTEST_USE_FILE - path to GTest Use File\n\n#   - GTEST_FOUND - set to ON if GTest is found\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#SOURCE_DIR ${GTEST_PREFIX}/src/gtest\n",
        "Line" : 111,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 2
    },
    "cmake/Modules/FindNUnit.cmake" : {
      "ObjectId" : "d72a45ed356572aff8cf7a324dbec5bac2b5e0d3",
      "LastModified" : "2018-07-22T21:33:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find NUnit C# Unit Test Framework\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# A CMake Module for finding the NUnit C# Unit Test Framework\n\n#\n\n# The following variables may be used to set the path of the NUnit C# Unit Test Framework:\n\n#   - NUNIT_ROOT: a cmake variable\n\n#   - NUNIT_DIR: an environment variable\n\n#\n\n# If NUnit is not found, an attempt will be made to auto-download and make avaialble.\n\n#\n\n# The following variables are set:\n\n#   - NUNIT_COMMAND - test runner command for the NUnit C# Unit Test Framework\n\n#   - NUNIT_LIBRARY - library path for the NUnit C# Unit Test Framework\n\n#   - NUNIT_FOUND - set to ON if NUnit is found\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Modules/FindNumPy.cmake" : {
      "ObjectId" : "4ccefeadb79a1ae9f91bc3d34d600a3d9daf48ad",
      "LastModified" : "2016-02-09T23:24:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find the NumPy libraries\n\n# This module finds if NumPy is installed, and sets the following variables\n\n# indicating where it is.\n\n#\n\n#\n\n#  NUMPY_FOUND               - was NumPy found\n\n#  NUMPY_VERSION             - the version of NumPy found as a string\n\n#  NUMPY_VERSION_MAJOR       - the major version number of NumPy\n\n#  NUMPY_VERSION_MINOR       - the minor version number of NumPy\n\n#  NUMPY_VERSION_PATCH       - the patch version number of NumPy\n\n#  NUMPY_VERSION_DECIMAL     - e.g. version 1.6.1 is 10601\n\n#  NUMPY_INCLUDE_DIRS        - path to the NumPy include files\n\n#\n\n# This file was adopted from:\n\n#   https://code.google.com/p/numexpr/source/browse/FindNumPy.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#============================================================================\n\n# Copyright 2012 Continuum Analytics, Inc.\n\n#\n\n# MIT License\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining\n\n# a copy of this software and associated documentation files\n\n# (the \"Software\"), to deal in the Software without restriction, including\n\n# without limitation the rights to use, copy, modify, merge, publish,\n\n# distribute, sublicense, and/or sell copies of the Software, and to permit\n\n# persons to whom the Software is furnished to do so, subject to\n\n# the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included\n\n# in all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\n# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n\n# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR\n\n# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n\n# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\n# OTHER DEALINGS IN THE SOFTWARE.\n\n#\n\n#============================================================================\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Finding NumPy involves calling the Python interpreter\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Convert the process output into a list\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Just in case there is unexpected output from the Python command.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The output from Python was unexpected. Raise an error always\n\n# here, because we found NumPy, but it appears to be corrupted somehow.\n",
        "Line" : 80,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Make sure all directory separators are '/'\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Get the major and minor version numbers\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cmake/Modules/UseGMock.cmake" : {
      "ObjectId" : "0b15a92881dfb4b9a12b8ddbaebb37f91665605f",
      "LastModified" : "2016-07-16T17:01:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# A CMake Module for using Google Mock\n\n#\n\n# This file adds the following static library targets:\n\n#   - gmock\n\n#   - gest_main\n\n#\n\n# This file adds the Google Mock headers to the include path\n\n#\n\n# This enables or disables (depending on the platform) a built-in version of tr1/tuple using a definition of a\n\n# preprocessor macro.\n\n#\n\n# This file setups the target to, optionally, auto-download Google Mock.\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/UseGTest.cmake" : {
      "ObjectId" : "fab3ffd610f4b71b6d7309c80d754048833515f7",
      "LastModified" : "2016-07-16T17:01:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# A CMake Module for using Google Test\n\n#\n\n# This file adds the following static library targets:\n\n#   - gtest\n\n#   - gest_main\n\n#\n\n# This file adds the Google Test headers to the include path\n\n#\n\n# This enables or disables (depending on the platform) a built-in version of tr1/tuple using a definition of a\n\n# preprocessor macro.\n\n#\n\n# This file setups the target to, optionally, auto-download Google Test.\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/UseGitVersion.cmake" : {
      "ObjectId" : "68018962b809dd0e793a933f842583098f59b2fb",
      "LastModified" : "2018-07-22T21:33:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Provides a function that determines the version from tags in the Git repository. A target is added, which\n\n# generates a version header file. This version header file defines a single macro.\n\n#\n\n# Input to the function\n\n#   - _target - name of the target\n\n#   - _version_file - name of the version header file\n\n#   - _macro_name - name of the macro in the header file\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/UseSWIG.cmake" : {
      "ObjectId" : "82344bb98e19799cb91185b4fd5af3641b404ab8",
      "LastModified" : "2018-07-22T21:33:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# UseSWIG\n\n# -------\n\n#\n\n# Defines the following macros for use with SWIG:\n\n#\n\n# ::\n\n#\n\n#    SWIG_ADD_MODULE(name language [ files ])\n\n#      - Define swig module with given name and specified language\n\n#    SWIG_LINK_LIBRARIES(name [ libraries ])\n\n#      - Link libraries to swig module\n\n#\n\n# Source files properties on module files can be set before the invocation\n\n# of the SWIG_ADD_MODULE macro to specify special behavior of SWIG.\n\n#\n\n# The source file property CPLUSPLUS calls SWIG in c++ mode, e.g.::\n\n#\n\n#    set_property(SOURCE mymod.i PROPERTY CPLUSPLUS ON)\n\n#    swig_add_module(mymod python mymod.i)\n\n#\n\n# The source file property SWIG_FLAGS adds custom flags to the SWIG executable.\n\n#\n\n# The source-file property SWIG_MODULE_NAME have to be provided to specify the actual\n\n# import name of the module in the target language if it cannot be scanned automatically\n\n# from source or different from the module file basename.::\n\n#\n\n#    set_property(SOURCE mymod.i PROPERTY SWIG_MODULE_NAME mymod_realname)\n\n#\n\n# To get the name of the swig module target library, use: ${SWIG_MODULE_${name}_REAL_NAME}.\n\n#\n\n# Also some variables can be set to specify special behavior of SWIG.\n\n#\n\n# CMAKE_SWIG_FLAGS can be used to add special flags to all swig calls.\n\n#\n\n# Another special variable is CMAKE_SWIG_OUTDIR, it allows one to specify\n\n# where to write all the swig generated module (swig -outdir option)\n\n#\n\n# The name-specific variable SWIG_MODULE_<name>_EXTRA_DEPS may be used to specify extra\n\n# dependencies for the generated modules.\n\n#\n\n# If the source file generated by swig need some special flag you can use::\n\n#\n\n#    set_source_files_properties( ${swig_generated_file_fullname}\n\n#                                 PROPERTIES COMPILE_FLAGS \"-bla\")\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# For given swig module initialize variables associated with it\n\n#\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# swig will produce a module.py containing an 'import _modulename' statement,\n\n# which implies having a corresponding _modulename.so (*NIX), _modulename.pyd (Win32),\n\n# unless the -noproxy flag is used\n",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#\n\n# For a given language, input file, and output file, determine extra files that\n\n# will be generated. This is internal swig macro.\n\n#\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# try to get module name from \"%module foo\" syntax\n",
        "Line" : 91,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# try to get module name from \"%module (options=...) foo\" syntax\n",
        "Line" : 100,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# fallback to file basename\n",
        "Line" : 109,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "#\n\n# Take swig (*.i) file and add proper custom commands for it\n\n#\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# If CMAKE_SWIG_OUTDIR was specified then pass it to -outdir\n",
        "Line" : 135,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# add the language into the name of the file (i.e. TCL_wrap)\n\n# this allows for the same .i file to be wrapped into different languages\n",
        "Line" : 149,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "#message(\"Full path to source file: ${swig_source_file_fullname}\")\n\n#message(\"Full path to the output file: ${swig_generated_file_fullname}\")\n",
        "Line" : 162,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# default is c, so add c++ flag if it is c++\n",
        "Line" : 171,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# dllimport is already there, don't add it again!\n",
        "Line" : 176,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# This makes sure that the name used in the generated DllImport\n\n# matches the library name created by CMake\n",
        "Line" : 178,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "# Let's create the ${swig_outdir} at execution time, in case dir contains $(OutDir)\n",
        "Line" : 189,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "#\n\n# Create Swig module\n\n#\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# In java you want:\n\n#      System.loadLibrary(\"LIBRARY\");\n\n# then JNI will look for a library whose name is platform dependent, namely\n\n#   MacOS  : libLIBRARY.jnilib\n\n#   Windows: LIBRARY.dll\n\n#   Linux  : libLIBRARY.so\n",
        "Line" : 245,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# this is only needed for the python case where a _modulename.so is generated\n",
        "Line" : 256,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Python extension modules on Windows must have the extension \".pyd\"\n\n# instead of \".dll\" as of Python 2.5.  Older python versions do support\n\n# this suffix.\n\n# http://docs.python.org/whatsnew/ports.html#SECTION0001510000000000000000\n\n# <quote>\n\n# Windows: .dll is no longer supported as a filename extension for extension modules.\n\n# .pyd is now the only filename extension that will be searched for.\n\n# </quote>\n",
        "Line" : 258,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# In ruby you want:\n\n#      require 'LIBRARY'\n\n# then ruby will look for a library whose name is platform dependent, namely\n\n#   MacOS  : LIBRARY.bundle\n\n#   Windows: LIBRARY.dll\n\n#   Linux  : LIBRARY.so\n",
        "Line" : 272,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "#\n\n# Like TARGET_LINK_LIBRARIES but for swig modules\n\n#\n",
        "Line" : 285,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 22
    },
    "cmake/Modules/csharp/FindDotNet.cmake" : {
      "ObjectId" : "48c312c25d897629a3aef9278cf7e430c7b0dc4b",
      "LastModified" : "2018-07-22T21:33:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the msbuild tool\n\n#\n\n# DOTNET_FOUND             System has msbuild\n\n# DOTNET_EXECUTABLE        Where to find csc\n\n# MSBUILD_EXECUTABLE      Where to find 'msbuild'\n\n# DOTNET_EXECUTABLE_VERSION           The version number of the DotNet framework\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/csharp/FindDotNetCore.cmake" : {
      "ObjectId" : "7073aa8f20083f71987b0e360d6a989418ffa44e",
      "LastModified" : "2018-07-22T21:33:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the msbuild tool\n\n#\n\n# DOTNET_CORE_FOUND             System has msbuild\n\n# DOTNET_CORE_EXECUTABLE        Where to find csc\n\n# DOTNET_CORE_VERSION           The version number of the DotNet framework\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/csharp/FindMono.cmake" : {
      "ObjectId" : "eabcb96025bb441b61ade9c08afaa025437f9048",
      "LastModified" : "2018-07-22T21:33:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the xbuild tool and mono interpreter\n\n#\n\n# MONO_FOUND             System has Mono dev files, as well as mono, mcs, gmcs and gacutil if not MONO_ONLY_LIBRARIES_REQUIRED\n\n# MONO_EXECUTABLE        Where to find 'mono'\n\n# XBUILD_EXECUTABLE      Where to find 'xbuild'\n\n# MONO_VERSION           The version number of the Mono interpreter\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/csharp/UseCSharpProjectBuilder.cmake" : {
      "ObjectId" : "04e0e1ec2f0ee7272bdb286ef7dfc6e0a9e8c6d4",
      "LastModified" : "2018-07-22T21:33:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add a target to build a C# library or executable\n\n#\n\n# csharp_add_library( name references [files] ) - Define C# library with the given name\n\n#\n\n# Examples:\n\n#   csharp_add_library( MyLibrary \"\" \"File1.cs\" )\n\n#   csharp_add_library( MyLibrary \"ref1.dll ref2.dll\" \"File1.cs\" )\n\n#\n\n# Note, the while you can reference a NuGet package, this code is untested if the package has multiple framework Dlls.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO: <RuntimeIdentifier>osx.10.11-x64</RuntimeIdentifier>\n",
        "Line" : 112,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Note that for .NET Core 2.1.4 or before, the local repo must follow public repo\n",
        "Line" : 125,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 3
    },
    "docs/CMakeLists.txt" : {
      "ObjectId" : "8d5e2d8a319a4074e1fa7d587391978821dbc6bd",
      "LastModified" : "2018-11-15T14:35:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "18266084e3c488340223ab4e75bb7604f6d8d017",
      "LastModified" : "2018-07-22T21:33:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/apps/CMakeLists.txt" : {
      "ObjectId" : "b4ee0edc955bf1ae21262454b93e5f03a450b34e",
      "LastModified" : "2018-07-22T21:33:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Used to configure the version info file\n",
        "Line" : 6,
        "CharPositionInLine" : 35
      },
      "1" : {
        "Text" : "# Requires: LIB_NAME, VERSION_LIST and VERSION\n",
        "Line" : 7,
        "CharPositionInLine" : 91
      },
      "CommentCount" : 2
    },
    "src/examples/CMakeLists.txt" : {
      "ObjectId" : "05f8a7a4528f3a3215c0e76d8cf2711324883728",
      "LastModified" : "2018-07-22T21:33:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/examples/csharp/CMakeLists.txt" : {
      "ObjectId" : "4af69dadd68fa8c520864b68c92f29b83999f802",
      "LastModified" : "2018-07-22T21:33:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Adds the following targets:\n\n#   1. csharp_unittest - Shared library for Unit Testing\n\n#\n\n# Post build of csharp_unittest the unit tests are run\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/ext/CMakeLists.txt" : {
      "ObjectId" : "c2bfe164250ddd8071392c809eae30dc00d8b62a",
      "LastModified" : "2018-07-22T21:33:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Support earlier and later versions of CMake\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "############################################################\n\n# Need to enable SWIGWORDSIZE64 in SWIG when long is 64-bit\n\n# This is so stdint.i works properly\n\n############################################################\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#TODO: Check CMake Version (use bug fixed!)\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#${SWIG_USE_FILE})\n",
        "Line" : 38,
        "CharPositionInLine" : 57
      },
      "4" : {
        "Text" : "#set_source_files_properties(${SRC} PROPERTIES CPLUSPLUS ON)\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Collect all the *.i files\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Collect all the *.h files in interop (these can change, but the library will not change)\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Language options\n\n# https://github.com/SimpleITK/SimpleITK/blob/master/CMake/sitkLanguageOptions.cmake\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Pass compiler definitions to SWIG\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "src/ext/csharp/CMakeLists.txt" : {
      "ObjectId" : "8849c56fc48aa3d3b441a551eaa9e6a64615c001",
      "LastModified" : "2018-11-15T14:35:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build a C# Shared library using SWIG\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The preview of .NET Core requires explicit shared library name\n\n# This workaround does not work with UseSWIG.cmake (2017-06-01), had to modify it UseSWIG2.cmake\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Used to configure the version info file\n",
        "Line" : 44,
        "CharPositionInLine" : 34
      },
      "3" : {
        "Text" : "# Requires: LIB_NAME, VERSION_LIST and VERSION\n",
        "Line" : 45,
        "CharPositionInLine" : 91
      },
      "4" : {
        "Text" : "########################################################################################################################\n\n# Create NuGet nuspec package file\n\n########################################################################################################################\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# This creates the nuspec file in the proper directory\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/ext/python/CMakeLists.txt" : {
      "ObjectId" : "97a718d4b642b597c0be52029c245f66271921eb",
      "LastModified" : "2018-11-15T14:35:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Workaround for fun little MinGw/Python \"feature\" for 64-bit systems\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Has a memory leak prior to swig 3.1 in https://github.com/swig/swig/blob/87f14a96b5eb4b7c2e23b212ef38e20b9601d0b2/Lib/python/std_pair.i (Line: 68)\n\n#set_source_files_properties(${SRC} PROPERTIES SWIG_FLAGS \"-modern;-fastunpack;-module;${MODULE}${SWIG_WORDSIZE_FLAG}\")\n\n# Coverity reports a null pointer deference, but this is a false positive\n",
        "Line" : 66,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Used to configure the version info file\n",
        "Line" : 74,
        "CharPositionInLine" : 34
      },
      "3" : {
        "Text" : "# Requires: LIB_NAME, VERSION_LIST and VERSION\n",
        "Line" : 75,
        "CharPositionInLine" : 91
      },
      "4" : {
        "Text" : "#set_target_properties(${SWIG_MODULE} PROPERTIES LIBRARY_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR})\n",
        "Line" : 100,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "src/interop/CMakeLists.txt" : {
      "ObjectId" : "94f6ce4b5abeef71a057e3b83ad7a72c0127d79a",
      "LastModified" : "2018-07-22T21:33:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Shared libraries on windows are currently not supported, but we may in the future.\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Used to configure the version info file\n",
        "Line" : 205,
        "CharPositionInLine" : 45
      },
      "2" : {
        "Text" : "# Requires: LIB_NAME, VERSION_LIST and VERSION\n",
        "Line" : 206,
        "CharPositionInLine" : 87
      },
      "CommentCount" : 3
    },
    "src/tests/CMakeLists.txt" : {
      "ObjectId" : "8490947b7721501cefc62b5f04456b19d0ace7ad",
      "LastModified" : "2018-07-22T21:33:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tests/csharp/CMakeLists.txt" : {
      "ObjectId" : "75498b22cdfe6b658d8e10bbff845fb967cb931d",
      "LastModified" : "2018-07-22T21:33:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Adds the following targets:\n\n#   1. csharp_unittest - Shared library for Unit Testing\n\n#\n\n# Post build of csharp_unittest the unit tests are run\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Test the NuGet Package\n",
        "Line" : 63,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Test the Library\n",
        "Line" : 68,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Clear old packages\n\n# dotnet nuget locals all --clear\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#COMMAND ${CMAKE_COMMAND} -E copy ${NUNIT_LIBRARIES} $<TARGET_FILE_DIR:${INTEROP_LIB}>\n",
        "Line" : 100,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 5
    },
    "src/tests/interop/CMakeLists.txt" : {
      "ObjectId" : "aba151add1371442cb3b9c55c9d5ae9c154d6d95",
      "LastModified" : "2018-07-22T21:33:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tests/python/CMakeLists.txt" : {
      "ObjectId" : "5f9accbad9b45f48ef3573f51fa4cbe79a577a91",
      "LastModified" : "2018-11-15T14:35:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 34
  },
  "ElapsedTime" : 1236
}