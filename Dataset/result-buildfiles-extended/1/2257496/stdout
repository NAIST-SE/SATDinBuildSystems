{
  "Repository" : "2257496",
  "Revision" : "HEAD",
  "ObjectId" : "54da27424f1130658ebbdab347298576a1a12306",
  "CommitTime" : "2019-04-14T04:18:23Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "7ad5519669758d276a916a595c9a1edf08fdb03a",
      "LastModified" : "2018-12-30T20:49:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#EQEmu CMake\n\n#Variables used:\n\n#EQEMU_DISABLE_CRT_SECURE_WARNINGS\n\n#EQEMU_FAST_FLOATINGPOINT\n\n#EQEMU_ENABLE_CRASH_LOGGING\n\n#EQEMU_DISABLE_SAFESEH\n\n#EQEMU_BUILD_MSVC_MP\n\n#EQEMU_DEBUG_LEVEL\n\n#EQEMU_LOG_LEVEL_STATUS\n\n#EQEMU_LOG_LEVEL_NORMAL\n\n#EQEMU_LOG_LEVEL_ERROR\n\n#EQEMU_LOG_LEVEL_DEBUG\n\n#EQEMU_LOG_LEVEL_QUEST\n\n#EQEMU_LOG_LEVEL_COMMANDS\n\n#EQEMU_LOG_LEVEL_CRASH\n\n#EQEMU_DEPOP_INVALIDATES_CACHE\n\n#EQEMU_ENABLE_BOTS\n\n#EQEMU_DISABLE_LOGSYS\n\n#EQEMU_COMMANDS_LOGGING\n\n#EQEMU_BUILD_SERVER\n\n#EQEMU_BUILD_LOGIN\n\n#EQEMU_BUILD_TESTS\n\n#EQEMU_BUILD_PERL\n\n#EQEMU_BUILD_LUA\n\n#EQEMU_SANITIZE_LUA_LIBS\n\n#EQEMU_BUILD_CLIENT_FILES\n\n#EQEMU_USE_MAP_MMFS\n\n#EQEMU_MAP_DIR\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#FindMySQL is located here so lets make it so CMake can find it\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Our project name is EQEmu\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Default build type is set to RelWithDebInfo for generators that honor that like makefiles\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Add our various windows definitions\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#disable CRT warnings on windows cause they're annoying as shit and we use C functions everywhere\n",
        "Line" : 87,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "#fast FP if you'd like it\n",
        "Line" : 93,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "#crash logging currently only works on windows x86/x64\n",
        "Line" : 99,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "#We want to compile /MT not /MD so we change that\n",
        "Line" : 110,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "#Normally set by perl but we don't use the perl flags anymore so we set it.\n",
        "Line" : 119,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "#FreeBSD support\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#debug level, 5 is default. Most people wont ever change this but it's there if you want to\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#NPC Types Cache Behavior\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#Bots are a compile time option so on/off\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#Disable entire _mlog system (excludes trade/command logs)\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#Enable GM Command log system\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#What to build\n",
        "Line" : 243,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#C++11 stuff\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#Various definitions\n",
        "Line" : 260,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#Disabled until reevaluation performed\n\n#OPTION(EQEMU_USE_MAP_MMFS \"Create and use Zone Map MMF files.\" OFF)\n\n#IF(EQEMU_USE_MAP_MMFS)\n\n#\tADD_DEFINITIONS(-DUSE_MAP_MMFS)\n\n#ENDIF(EQEMU_USE_MAP_MMFS)\n",
        "Line" : 269,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#Find everything we need\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "client_files/CMakeLists.txt" : {
      "ObjectId" : "93d748dc6788f4528e91f0866a0295560423cef9",
      "LastModified" : "2013-10-19T04:23:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "client_files/export/CMakeLists.txt" : {
      "ObjectId" : "c24a0186554132f8d24751e8f7a6538b8e30d6e0",
      "LastModified" : "2016-10-24T00:55:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "client_files/import/CMakeLists.txt" : {
      "ObjectId" : "0f779497c7930032afc91fa2d86a183d42bfc134",
      "LastModified" : "2016-10-24T00:55:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/FindEQLua51.cmake" : {
      "ObjectId" : "9f6663d564f6fe5011e8b4cc3e7e2422784b454c",
      "LastModified" : "2013-10-19T04:23:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#CMake - Cross Platform Makefile Generator\n\n#Copyright 2000-2011 Kitware, Inc., Insight Software Consortium\n\n#All rights reserved.\n\n#\n\n#Redistribution and use in source and binary forms, with or without\n\n#modification, are permitted provided that the following conditions\n\n#are met:\n\n#\n\n#* Redistributions of source code must retain the above copyright\n\n#  notice, this list of conditions and the following disclaimer.\n\n#\n\n#* Redistributions in binary form must reproduce the above copyright\n\n#  notice, this list of conditions and the following disclaimer in the\n\n#  documentation and/or other materials provided with the distribution.\n\n#\n\n#* Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#  nor the names of their contributors may be used to endorse or promote\n\n#  products derived from this software without specific prior written\n\n#  permission.\n\n#\n\n#THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n#\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n#LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n#A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n#HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n#SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n#LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n#DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n#THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n#(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n#OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module defines\n\n#  LUA51_FOUND, if false, do not try to link to Lua\n\n#  LUA_LIBRARIES\n\n#  LUA_INCLUDE_DIR, where to find lua.h\n\n#  LUA_VERSION_STRING, the version of Lua found (since CMake 2.8.8)\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# include the math library for Unix\n",
        "Line" : 100,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# For Windows and Mac, don't need to explicitly include the math library\n",
        "Line" : 104,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 4
    },
    "cmake/FindMySQL.cmake" : {
      "ObjectId" : "5a79275529005709646cb2168c7746195c5c6b92",
      "LastModified" : "2015-11-11T21:52:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find mysqlclient\n\n#\n\n# -*- cmake -*-\n\n#\n\n# Find the native MySQL includes and library\n\n#\n\n#\tMySQL_INCLUDE_DIR\t- where to find mysql.h, etc.\n\n#\tMySQL_LIBRARIES\t\t- List of libraries when using MySQL.\n\n#\tMySQL_FOUND\t\t\t- True if MySQL found.\n\n#\tThe following can be used as a hint as to where to search:\n\n#\tMYSQL_ROOT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 14,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Include dir\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Library\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set MySQL_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/FindSodium.cmake" : {
      "ObjectId" : "3c5ae34670827cc37cc6cebaa354c479d7c902ba",
      "LastModified" : "2016-10-24T00:55:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# some libraries install the headers is a subdirectory of the include dir\n\n# returned by pkg-config, so use a wildcard match to improve chances of finding\n\n# headers and libraries.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "common/CMakeLists.txt" : {
      "ObjectId" : "3b4fbd8705a7766b849a7dd104d16bf57bada9f8",
      "LastModified" : "2019-02-17T09:25:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "common/glm/CMakeLists.txt" : {
      "ObjectId" : "756673a398b77b35ed02f5dd22cf1bbdd49661a8",
      "LastModified" : "2018-12-21T08:39:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# VC doesn't support SSE4.2\n",
        "Line" : 145,
        "CharPositionInLine" : 34
      },
      "1" : {
        "Text" : "# VC doesn't support SSE4.1\n",
        "Line" : 155,
        "CharPositionInLine" : 34
      },
      "2" : {
        "Text" : "# VC doesn't support SSSE3\n",
        "Line" : 165,
        "CharPositionInLine" : 34
      },
      "3" : {
        "Text" : "# VC doesn't support SSE3\n",
        "Line" : 175,
        "CharPositionInLine" : 34
      },
      "4" : {
        "Text" : "# Compiler and default options\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# build tree package config\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# install tree package config\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# build pkg-config file\n",
        "Line" : 260,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# install pkg-config file\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "common/glm/glm/CMakeLists.txt" : {
      "ObjectId" : "01c594f47fe35dd90974758637d42bcf60c2bde7",
      "LastModified" : "2018-12-21T08:39:28Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "common/glm/test/CMakeLists.txt" : {
      "ObjectId" : "988d9d9ee02e9923123d9fb24a1cf5cb632918fb",
      "LastModified" : "2018-12-21T08:39:28Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "common/glm/test/bug/CMakeLists.txt" : {
      "ObjectId" : "26e8569429f190180afc3744d48d9023f67c469e",
      "LastModified" : "2018-12-21T08:39:28Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "common/glm/test/core/CMakeLists.txt" : {
      "ObjectId" : "a1f1d0ff89063e854ca9c769120e8e3901eea79e",
      "LastModified" : "2018-12-21T08:39:28Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "common/glm/test/ext/CMakeLists.txt" : {
      "ObjectId" : "f4152e70200fff274305e49d7abd980169320ef3",
      "LastModified" : "2018-12-21T08:39:28Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "common/glm/test/gtc/CMakeLists.txt" : {
      "ObjectId" : "4aef24a897f91343f784176ced2064a26d9c0d1d",
      "LastModified" : "2018-12-21T08:39:28Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "common/glm/test/gtx/CMakeLists.txt" : {
      "ObjectId" : "5c8095ccbb500cb6d3ed5ad8b3cfd27d4187d80c",
      "LastModified" : "2018-12-21T08:39:28Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "common/glm/test/perf/CMakeLists.txt" : {
      "ObjectId" : "19c70508ce9fa497a2fcc4a45ceaaf886da40ab8",
      "LastModified" : "2018-12-21T08:39:28Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "eqlaunch/CMakeLists.txt" : {
      "ObjectId" : "260a2b5bc7dbb860d13dfa02631701e3bce4e499",
      "LastModified" : "2018-12-21T08:39:28Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hc/CMakeLists.txt" : {
      "ObjectId" : "1aa5805d53f1c04b587e60fa72e68bb3d2525dac",
      "LastModified" : "2018-12-21T08:39:28Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/CMakeLists.txt" : {
      "ObjectId" : "801f5fdd9b11c6eb0929f8c7be34c5dcc1fce09e",
      "LastModified" : "2018-12-21T08:39:28Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/format/CMakeLists.txt" : {
      "ObjectId" : "b08f9cbe9752ff9410d9c0792061021b26f065bc",
      "LastModified" : "2018-12-21T08:39:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Determine if fmt is built as a subproject (using add_subdirectory)\n\n# or if it is the master project.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Joins arguments and places the results in ${result_var}.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the default CMAKE_BUILD_TYPE to Release.\n\n# This should be done before the project command since the latter can set\n\n# CMAKE_BUILD_TYPE itself (it does so for nmake).\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Options that control generation of various targets.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Starting with cmake 3.0 VERSION is part of the project command.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Use math to skip leading zeros if any.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# If Microsoft SDK is installed create script run-msbuild.bat that\n\n# calls SetEnv.cmd to set up build environment and runs msbuild.\n\n# It is useful when building Visual Studio projects with the SDK\n\n# toolchain rather than Visual Studio.\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Set FrameworkPathOverride to get rid of MSB3644 warnings.\n",
        "Line" : 75,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Get the list of ignored files from .gitignore.\n",
        "Line" : 102,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 9
    },
    "libs/format/doc/CMakeLists.txt" : {
      "ObjectId" : "df3e9b1e9dcff9a606860ef9967861ec8b47f555",
      "LastModified" : "2018-12-21T08:39:28Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/format/fmt/CMakeLists.txt" : {
      "ObjectId" : "90eaf575f08760ce523587f880ebb567da5b2382",
      "LastModified" : "2018-12-21T08:39:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the fmt library, its includes and the needed defines.\n\n# *.cc are added to FMT_HEADERS for the header-only configuration.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Starting with cmake 3.1 the CXX_STANDARD property can be used instead.\n\n# Note: Don't make -std=c++11 public or interface, since it breaks projects\n\n# that use C++14.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fix rpmlint warning:\n\n# unused-direct-shlib-dependency /usr/lib/libformat.so.1.1.0 /lib/libm.so.6.\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# additionally define a header only library when cmake is new enough\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Install targets.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Generate the version, config and target files into the build directory.\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Install version, config and target files.\n",
        "Line" : 79,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Install the library and headers.\n",
        "Line" : 86,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "libs/format/support/cmake/FindSetEnv.cmake" : {
      "ObjectId" : "4e2da5408ac3c54975ff9acc7091ffdbb6c83b0d",
      "LastModified" : "2018-12-21T08:39:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# A CMake script to find SetEnv.cmd.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "libs/format/support/cmake/cxx11.cmake" : {
      "ObjectId" : "21d1254335ebc21db60b442b9c4f664b3293e39a",
      "LastModified" : "2018-12-21T08:39:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# C++11 feature support detection\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check if including cmath works with -std=c++11 and -O3.\n\n# It may not in MinGW due to bug http://ehc.ac/p/mingw/bugs/2250/.\n",
        "Line" : 12,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Check if including <unistd.h> works with -std=c++11.\n\n# It may not in MinGW due to bug http://sourceforge.net/p/mingw/bugs/2024/.\n",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Check if snprintf works with -std=c++11. It may not in MinGW.\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Don't use -std compiler flag if CMAKE_CXX_STANDARD is specified.\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Check if variadic templates are working and not affected by GCC bug 39653:\n\n# https://gcc.gnu.org/bugzilla/show_bug.cgi?id=39653\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Check if initializer lists are supported.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Check if enum bases are available\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Check if type traits are available\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Check if user-defined literals are available\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "libs/format/test/CMakeLists.txt" : {
      "ObjectId" : "31a418de7092880b3ac6a096ba1511676406f49e",
      "LastModified" : "2018-12-21T08:39:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Build the google test library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We compile Google Test ourselves instead of using pre-compiled libraries.\n\n# See the Google Test FAQ \"Why is it not recommended to install a\n\n# pre-compiled copy of Google Test (for example, into /usr/local)?\"\n\n# at http://code.google.com/p/googletest/wiki/FAQ for more details.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Workaround a bug in implementation of variadic templates in MSVC11.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# GTest doesn't detect <tuple> with clang.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Build the actual library tests\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Workaround GTest bug https://github.com/google/googletest/issues/705.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Use less strict pedantic flags for the tests because GMock doesn't compile\n\n# cleanly with -pedantic and -std=c++98.\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Adds a test.\n\n# Usage: add_fmt_test(name srcs...)\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# define if certain c++ features can be used\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Enable stricter options for one test to make sure that the header is free of\n\n# warnings.\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Test that the library can be compiled with exceptions disabled.\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Test that the library compiles without windows.h.\n",
        "Line" : 130,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# test if the targets are findable from the build directory\n",
        "Line" : 148,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# test if the targets are findable when add_subdirectory is used\n",
        "Line" : 161,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 14
    },
    "libs/format/test/add-subdirectory-test/CMakeLists.txt" : {
      "ObjectId" : "d1edd8a52796f1cb2bb4f84f0e93af78a7ca0c61",
      "LastModified" : "2018-12-21T08:39:28Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/format/test/compile-test/CMakeLists.txt" : {
      "ObjectId" : "b7126248b3a78d7d764272621f676bc86dbf349b",
      "LastModified" : "2018-12-21T08:39:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test if compile errors are produced where necessary.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Unset the CMake cache variable compiles. Otherwise the compile test will\n\n# just use cached information next time it runs.\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Unset the CMake cache variable compiles. Otherwise the compile test will\n\n# just use cached information next time it runs.\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# check if the source file skeleton compiles\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# MakeArg doesn't accept [const] volatile char *.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# MakeArg<char> doesn't accept wchar_t.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Writing a wide character to a character stream Writer is forbidden.\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Formatting a wide character with a narrow format string is forbidden.\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Make sure that compiler features detected in the header\n\n# match the features detected in CMake.\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "libs/format/test/find-package-test/CMakeLists.txt" : {
      "ObjectId" : "40c0756096028d66b0a6f8737c4015ca777094c4",
      "LastModified" : "2018-12-21T08:39:28Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/libuv/CMakeLists.txt" : {
      "ObjectId" : "149cd80f4bea075d0fd67de726d8d42c1625d611",
      "LastModified" : "2018-12-21T08:39:28Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/libuv/Makefile.am" : {
      "ObjectId" : "036464e71ecc48ca120c0d86ac7672cc6fbe39cc",
      "LastModified" : "2018-12-21T08:39:28Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2013, Ben Noordhuis <info@bnoordhuis.nl>\n\n#\n\n# Permission to use, copy, modify, and/or distribute this software for any\n\n# purpose with or without fee is hereby granted, provided that the above\n\n# copyright notice and this permission notice appear in all copies.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n\n# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n\n# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\n\n# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n\n# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n\n# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\n\n# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Can't be turned into a CC_CHECK_CFLAGS in configure.ac, it makes compilers\n\n# on other platforms complain that the argument is unused during compilation.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# WINNT\n",
        "Line" : 82,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# WINNT\n",
        "Line" : 108,
        "CharPositionInLine" : 7
      },
      "4" : {
        "Text" : "# Can't be turned into a CC_CHECK_CFLAGS in configure.ac, it makes compilers\n\n# on other platforms complain that the argument is unused during compilation.\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "libs/luabind/CMakeLists.txt" : {
      "ObjectId" : "de3b60c61f5ac13f6962388b386cadbce09d0997",
      "LastModified" : "2018-12-21T08:39:28Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/recast/CMakeLists.txt" : {
      "ObjectId" : "7f91efb38a73e80a6548b66fd0976c03927fe912",
      "LastModified" : "2018-12-21T08:39:28Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "loginserver/CMakeLists.txt" : {
      "ObjectId" : "df06e7572a4d07af5024aab720f03c541b81f992",
      "LastModified" : "2018-12-21T08:39:28Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "queryserv/CMakeLists.txt" : {
      "ObjectId" : "393747a916d0b3e87881be7db4831f37a16e0d8d",
      "LastModified" : "2018-12-21T08:39:28Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "shared_memory/CMakeLists.txt" : {
      "ObjectId" : "1844df758f8f73434cdb7c3aeb4c03288ef6e57d",
      "LastModified" : "2018-12-21T08:39:28Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "b404bab993a4ca72a6aa65b26ec459ba5913f72d",
      "LastModified" : "2018-12-21T08:39:28Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/cppunit/CMakeLists.txt" : {
      "ObjectId" : "e60e2134febdb0f31811b92bd6f4d5d2ceb7429b",
      "LastModified" : "2018-12-21T08:39:28Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ucs/CMakeLists.txt" : {
      "ObjectId" : "e09e12781b1d5611a8afd8f5519ae10b3c81b247",
      "LastModified" : "2018-12-21T08:39:28Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "utils/deprecated/pfs_list/CMakeLists.txt" : {
      "ObjectId" : "2bac1ac69cea6cbabcdb7190422d8512e83c68e0",
      "LastModified" : "2018-12-21T08:39:28Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "utils/deprecated/pfs_list/Common/CMakeLists.txt" : {
      "ObjectId" : "250862e495c7cffc9266bfac51d5f47fa73502e3",
      "LastModified" : "2018-12-21T08:39:28Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "utils/deprecated/pfs_list/PFSList/CMakeLists.txt" : {
      "ObjectId" : "9a36798f27021e5d67c8e54f706562186c1ad6b0",
      "LastModified" : "2018-12-21T08:39:28Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "world/CMakeLists.txt" : {
      "ObjectId" : "e8b999107e4316e3648ede4c368125699e31c65e",
      "LastModified" : "2018-12-21T08:39:28Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "zone/CMakeLists.txt" : {
      "ObjectId" : "c92102a2dcdd1b99d057a44486edd336e603ca98",
      "LastModified" : "2019-01-04T02:33:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 43,
    "AUTOMAKE" : 1
  },
  "ElapsedTime" : 5586
}