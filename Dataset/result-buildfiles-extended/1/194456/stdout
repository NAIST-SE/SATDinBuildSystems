{
  "Repository" : "194456",
  "Revision" : "HEAD",
  "ObjectId" : "f13a5f9e79a0918ab87d839c968fb1e5f7826dfa",
  "CommitTime" : "2019-02-09T12:29:36Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "b55ddcddbc434650ba8ef1b70b7920faf668620b",
      "LastModified" : "2019-02-09T01:12:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#--------------------------------------------------------------\n\n# default build-type (release)\n\n# (the next lines must be called bevore project(opengm2))\n\n#--------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#--------------------------------------------------------------\n\n# OpenGM\n\n#--------------------------------------------------------------\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#--------------------------------------------------------------\n\n# global headers\n\n#--------------------------------------------------------------\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#--------------------------------------------------------------\n\n# debug info\n\n#--------------------------------------------------------------\n\n#add_definitions(-DTRWS_DEBUG_OUTPUT)\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#--------------------------------------------------------------\n\n# warning level\n\n#-------------------------------------------------------------- \n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# no warnings\n",
        "Line" : 37,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "# with warning\n",
        "Line" : 43,
        "CharPositionInLine" : 3
      },
      "7" : {
        "Text" : "# PEDANTIC -> a lot of warnings\n",
        "Line" : 47,
        "CharPositionInLine" : 3
      },
      "8" : {
        "Text" : "# VERY PEDANTIC -> very lot of warnings\n",
        "Line" : 51,
        "CharPositionInLine" : 3
      },
      "9" : {
        "Text" : "# SADISTIC -> all warnings become errors\n",
        "Line" : 55,
        "CharPositionInLine" : 3
      },
      "10" : {
        "Text" : "#--------------------------------------------------------------\n\n# options\n\n#--------------------------------------------------------------\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "###Grante needs C++11. Since we have not tested OpenGM under this standard yet, using Grante is realy experimental!!!\n\n###OPTION(WITH_GRANTE \"Include wrapper for grante\" OFF)\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#--------------------------------------------------------------\n\n# MEMINFO\n\n#--------------------------------------------------------------\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#--------------------------------------------------------------\n\n# Cplex\n\n#--------------------------------------------------------------\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# add_definitions(-DILOUSESTL) redundant according to http://www-01.ibm.com/support/docview.wss?uid=swg21399983\n",
        "Line" : 120,
        "CharPositionInLine" : 3
      },
      "15" : {
        "Text" : "#--------------------------------------------------------------\n\n# AD3\n\n#--------------------------------------------------------------\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#message(STATUS \"build with AD3 interface\")\n\n#find_package(AD3 REQUIRED)\n\n#add_definitions(-DWITH_AD3)\n\n#include_directories(${AD3_INCLUDE_DIR})\n",
        "Line" : 131,
        "CharPositionInLine" : 3
      },
      "17" : {
        "Text" : "#--------------------------------------------------------------\n\n# Gurobi\n\n#--------------------------------------------------------------\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#--------------------------------------------------------------\n\n# Boost\n\n#--------------------------------------------------------------\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#--------------------------------------------------------------\n\n# HDF5\n\n#--------------------------------------------------------------\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# FindHDF5 is broken on Windows\n\n# it wrongly discovers the dlls instead of the lib files\n\n# see: www.cmake.org/Bug/bug_relationship_graph.php?bug_id=14111\n\n# therefore we set the variable manually\n",
        "Line" : 181,
        "CharPositionInLine" : 5
      },
      "21" : {
        "Text" : "#--------------------------------------------------------------\n\n# MATLAB\n\n#--------------------------------------------------------------\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#include_directories(${MATLAB_INCLUDE_DIR})\n\n#add_definitions(-DWITH_MATLAB)\n",
        "Line" : 212,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "#--------------------------------------------------------------\n\n# TRWS\n\n#--------------------------------------------------------------\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#--------------------------------------------------------------\n\n# GCO\n\n#--------------------------------------------------------------\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#--------------------------------------------------------------\n\n# MRF\n\n#--------------------------------------------------------------\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#TODO add 64 bit check here!\n\n#if(64Bit???)\n",
        "Line" : 269,
        "CharPositionInLine" : 3
      },
      "27" : {
        "Text" : "#add_definitions(-DUSE_64_BIT_PTR_CAST)\n",
        "Line" : 271,
        "CharPositionInLine" : 5
      },
      "28" : {
        "Text" : "#endif(64Bit???)      \n",
        "Line" : 272,
        "CharPositionInLine" : 3
      },
      "29" : {
        "Text" : "#--------------------------------------------------------------\n\n# QPBO\n\n#--------------------------------------------------------------\n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#--------------------------------------------------------------\n\n# FastPD\n\n#--------------------------------------------------------------\n",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#--------------------------------------------------------------\n\n# MaxFlow-IBFS\n\n#--------------------------------------------------------------\n",
        "Line" : 306,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#--------------------------------------------------------------\n\n# MaxFlow\n\n#--------------------------------------------------------------\n",
        "Line" : 318,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#--------------------------------------------------------------\n\n# VIGRA\n\n#--------------------------------------------------------------\n",
        "Line" : 330,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#-------------------------------------------------------------\n\n# ConicBundle Library\n\n#-------------------------------------------------------------\n",
        "Line" : 349,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#-------------------------------------------------------------\n\n# grante Library\n\n#-------------------------------------------------------------\n",
        "Line" : 367,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#-------------------------------------------------------------\n\n# OpenMP\n\n#-------------------------------------------------------------\n",
        "Line" : 386,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#SET(OPENMP_INCLUDE_DIR \"\" CACHE STRING \"OpenMP include dir\")\n\n#include_directories(${OPENMP_INCLUDE_DIR})\n",
        "Line" : 392,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "#--------------------------------------------------------------\n\n# LIB DAI\n\n#--------------------------------------------------------------\n",
        "Line" : 399,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Add defines for libdai/include/dai/util.h\n",
        "Line" : 411,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "#--------------------------------------------------------------\n\n# DAOOPT\n\n#--------------------------------------------------------------\n",
        "Line" : 424,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# To select the two master modes\n",
        "Line" : 438,
        "CharPositionInLine" : 6
      },
      "42" : {
        "Text" : "# To enable static linking of the final daoopt binary\n",
        "Line" : 443,
        "CharPositionInLine" : 6
      },
      "43" : {
        "Text" : "# Add defines for DAOOPT\n",
        "Line" : 446,
        "CharPositionInLine" : 6
      },
      "44" : {
        "Text" : "# Optional forced version: static over dynamic master, worker over both\n",
        "Line" : 457,
        "CharPositionInLine" : 6
      },
      "45" : {
        "Text" : "# includes pthread\n",
        "Line" : 466,
        "CharPositionInLine" : 35
      },
      "46" : {
        "Text" : "#--------------------------------------------------------------\n\n# MPLP\n\n#--------------------------------------------------------------\n",
        "Line" : 479,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#--------------------------------------------------------------\n\n# SRMP\n\n#--------------------------------------------------------------\n",
        "Line" : 491,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "#--------------------------------------------------------------\n\n# PLANARITY\n\n#--------------------------------------------------------------\n",
        "Line" : 503,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "#--------------------------------------------------------------\n\n# BLOSSOM5\n\n#--------------------------------------------------------------\n",
        "Line" : 515,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "#--------------------------------------------------------------\n\n# thread lib\n\n#--------------------------------------------------------------\n",
        "Line" : 529,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "#--------------------------------------------------------------\n\n# rt lib\n\n#--------------------------------------------------------------\n",
        "Line" : 534,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "#--------------------------------------------------------------\n\n# source directory\n\n#--------------------------------------------------------------\n",
        "Line" : 546,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "#--------------------------------------------------------------\n\n# testing with CTest\n\n#--------------------------------------------------------------\n",
        "Line" : 551,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "#--------------------------------------------------------------\n\n# WordLength\n\n#--------------------------------------------------------------\n",
        "Line" : 560,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "#--------------------------------------------------------------\n\n# TypeChecking\n\n#--------------------------------------------------------------\n",
        "Line" : 572,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "#MESSAGE (STATUS \"Size of ${aType} is ${${sizeVar}}\")\n",
        "Line" : 618,
        "CharPositionInLine" : 6
      },
      "57" : {
        "Text" : "#message(STATUS \"Check Type : ${valTypes}\")\n",
        "Line" : 628,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "#--------------------------------------------------------------\n\n# doxygen documentation\n\n#--------------------------------------------------------------\n",
        "Line" : 632,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "#--------------------------------------------------------------\n\n# install\n\n#--------------------------------------------------------------\n",
        "Line" : 653,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "#--------------------------------------------------------------\n\n# test and install opengm python\n\n#--------------------------------------------------------------\n",
        "Line" : 670,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "#find python\n",
        "Line" : 674,
        "CharPositionInLine" : 3
      },
      "62" : {
        "Text" : "#find nose\n",
        "Line" : 676,
        "CharPositionInLine" : 3
      },
      "63" : {
        "Text" : "# find numpy\n",
        "Line" : 678,
        "CharPositionInLine" : 3
      },
      "64" : {
        "Text" : "#add python unit test\n",
        "Line" : 680,
        "CharPositionInLine" : 3
      },
      "65" : {
        "Text" : "#add_custom_target( test-python-wrapper ALL nosetests \n",
        "Line" : 684,
        "CharPositionInLine" : 6
      },
      "66" : {
        "Text" : "#--------------------------------------------------------------\n\n# package with cpack\n\n# - this is just a starting point\n\n#   \n\n#--------------------------------------------------------------\n",
        "Line" : 710,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "#SET(CPACK_GENERATOR \"DEB\")\n\n#SET(CPACK_DEBIAN_PACKAGE_MAINTAINER \"Thorsten Beier\") #required\n",
        "Line" : 716,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "#set(CPACK_PACKAGE_VERSION_MAJOR \"${OPENGM_VERSION_MAJOR}\")\n\n#set(CPACK_PACKAGE_VERSION_MINOR \"${OPENGM_VERSION_MINOR}\")\n\n#set(CPACK_PACKAGE_VERSION_PATCH \"${OPENGM_VERSION_PATCH}\")\n",
        "Line" : 722,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "#INCLUDE(CPack)\n",
        "Line" : 726,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 70
    },
    "cmake/modules/FindAD3.cmake" : {
      "ObjectId" : "7519b9750bfd05e4d980ed251e339c01c79250e3",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set AD3_FOUND to TRUE if \n\n# all listed variables are TRUE\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindCONICBUNDLE.cmake" : {
      "ObjectId" : "c2029a5b7d5354b94e908b4ef80df6c8527e6446",
      "LastModified" : "2012-06-01T11:44:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#TODO check lib name for windows\n",
        "Line" : 8,
        "CharPositionInLine" : 16
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindCPLEX.cmake" : {
      "ObjectId" : "ba3c27fba47916affae5e59f3e67d9ea69f0b8ee",
      "LastModified" : "2018-04-05T09:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This module finds cplex.\n\n#\n\n# User can give CPLEX_ROOT_DIR as a hint stored in the cmake cache.\n\n#\n\n# It sets the following variables:\n\n#  CPLEX_FOUND              - Set to false, or undefined, if cplex isn't found.\n\n#  CPLEX_INCLUDE_DIRS       - include directory\n\n#  CPLEX_LIBRARIES          - library files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# now, generate platform string\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#windows\n",
        "Line" : 88,
        "CharPositionInLine" : 58
      },
      "3" : {
        "Text" : "#unix\n",
        "Line" : 89,
        "CharPositionInLine" : 68
      },
      "4" : {
        "Text" : "#unix \n",
        "Line" : 90,
        "CharPositionInLine" : 65
      },
      "5" : {
        "Text" : "#unix\n",
        "Line" : 91,
        "CharPositionInLine" : 60
      },
      "6" : {
        "Text" : "#osx \n",
        "Line" : 92,
        "CharPositionInLine" : 58
      },
      "7" : {
        "Text" : "#unix\n",
        "Line" : 93,
        "CharPositionInLine" : 25
      },
      "8" : {
        "Text" : "#unix\n",
        "Line" : 94,
        "CharPositionInLine" : 28
      },
      "9" : {
        "Text" : "#windows \n",
        "Line" : 100,
        "CharPositionInLine" : 58
      },
      "10" : {
        "Text" : "#unix \n",
        "Line" : 101,
        "CharPositionInLine" : 68
      },
      "11" : {
        "Text" : "#unix \n",
        "Line" : 102,
        "CharPositionInLine" : 65
      },
      "12" : {
        "Text" : "#unix\n",
        "Line" : 103,
        "CharPositionInLine" : 60
      },
      "13" : {
        "Text" : "#osx \n",
        "Line" : 104,
        "CharPositionInLine" : 58
      },
      "14" : {
        "Text" : "#windows \n",
        "Line" : 112,
        "CharPositionInLine" : 60
      },
      "15" : {
        "Text" : "#unix \n",
        "Line" : 113,
        "CharPositionInLine" : 70
      },
      "16" : {
        "Text" : "#unix \n",
        "Line" : 114,
        "CharPositionInLine" : 67
      },
      "17" : {
        "Text" : "#unix\n",
        "Line" : 115,
        "CharPositionInLine" : 62
      },
      "18" : {
        "Text" : "#osx \n",
        "Line" : 116,
        "CharPositionInLine" : 60
      },
      "19" : {
        "Text" : "#windows\n",
        "Line" : 125,
        "CharPositionInLine" : 66
      },
      "20" : {
        "Text" : "#unix \n",
        "Line" : 130,
        "CharPositionInLine" : 62
      },
      "21" : {
        "Text" : "#unix \n",
        "Line" : 131,
        "CharPositionInLine" : 65
      },
      "22" : {
        "Text" : "#unix\n",
        "Line" : 132,
        "CharPositionInLine" : 57
      },
      "23" : {
        "Text" : "#osx \n",
        "Line" : 133,
        "CharPositionInLine" : 55
      },
      "CommentCount" : 24
    },
    "cmake/modules/FindFASTINF.cmake" : {
      "ObjectId" : "9b407fcd207ef6fc7b42ea80490befed3ec6877f",
      "LastModified" : "2012-06-01T11:44:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set FASTINF_FOUND to TRUE if \n\n# all listed variables are TRUE\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindGMP.cmake" : {
      "ObjectId" : "8055f833a099a1b540d5a0c9eea75dca31eb741f",
      "LastModified" : "2012-06-01T11:44:23Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/modules/FindGMPXX.cmake" : {
      "ObjectId" : "4fb6cf6df515e17b61042444d1c1bc2dc0c104ff",
      "LastModified" : "2012-06-01T11:44:23Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/modules/FindGSL.cmake" : {
      "ObjectId" : "d840482f573adf5dfdae9a97a1d195e38bb4f762",
      "LastModified" : "2012-06-01T11:44:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find gnu scientific library GSL\n\n# See\n\n# http://www.gnu.org/software/gsl/  and\n\n# http://gnuwin32.sourceforge.net/packages/gsl.htm\n\n#\n\n# Based on a script of Felix Woelk and Jan Woetzel\n\n# (www.mip.informatik.uni-kiel.de)\n\n#\n\n# It defines the following variables:\n\n#  GSL_FOUND - system has GSL lib\n\n#  GSL_INCLUDE_DIRS - where to find headers\n\n#  GSL_LIBRARIES - full path to the libraries\n\n#  GSL_LIBRARY_DIRS, the directory where the PLplot library is found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#  CMAKE_GSL_CXX_FLAGS  = Unix compiler flags for GSL, essentially \"`gsl-config --cxxflags`\"\n\n#  GSL_LINK_DIRECTORIES = link directories, useful for rpath on Unix\n\n#  GSL_EXE_LINKER_FLAGS = rpath on Unix\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Windows, but not for Cygwin and MSys where gsl-config is available\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# look for headers\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# look for gsl library\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# look for gsl cblas library\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# run the gsl-config program to get cxxflags\n",
        "Line" : 65,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# parse definitions from cflags; drop -D* from CFLAGS\n",
        "Line" : 76,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# parse include dirs from cflags; drop -I prefix\n",
        "Line" : 82,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# run the gsl-config program to get the libs\n",
        "Line" : 97,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# extract linkdirs (-L) for rpath (i.e., LINK_DIRECTORIES)\n",
        "Line" : 108,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 11
    },
    "cmake/modules/FindGUROBI.cmake" : {
      "ObjectId" : "b4de7036933bfa89f2679a037ec0f0e3094f48a5",
      "LastModified" : "2018-04-05T09:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### Taken from http://www.openflipper.org/svnrepo/CoMISo/trunk/CoMISo/cmake/FindGUROBI.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Try to find GUROBI\n\n# Once done this will define\n\n# GUROBI_FOUND - System has Gurobi\n\n# GUROBI_INCLUDE_DIRS - The Gurobi include directories\n\n# GUROBI_LIBRARIES - The libraries needed to use Gurobi\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# use c++ headers as default\n\n# set(GUROBI_COMPILER_FLAGS \"-DIL_STD\" CACHE STRING \"Gurobi Compiler Flags\")\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LIBCPLEX_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/modules/FindHDF5.cmake" : {
      "ObjectId" : "4bc92db35189d7ed220118f0f56edfc4bd2ec289",
      "LastModified" : "2018-04-05T09:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find HDF5, a library for reading and writing self describing array data.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Only configure HDF5 if a suitable version of the library was found\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# FIXME: as of version 1.8.9 and 1.8.10-patch1 (but NOT 1.8.10), these flags are\n\n#        already set correctly => remove or set conditionally according to version\n",
        "Line" : 39,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set HDF5_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# undo unsuccessful configuration\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "cmake/modules/FindLIBDAI.cmake" : {
      "ObjectId" : "fb2d190cc07955a0c3f83db951c9d4b0e272f6b7",
      "LastModified" : "2012-06-01T11:44:23Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/modules/FindMATLAB.cmake" : {
      "ObjectId" : "1a1ba5f70679f2a30d39e0bff50665d248a1853f",
      "LastModified" : "2018-04-05T09:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - this module looks for Matlab\n\n# Defines:\n\n# MATLAB_ROOT_DIR: path to Matlab's root directory\n\n# MATLAB_INCLUDE_DIR: include path for mex.h, engine.h\n\n# MATLAB_LIBRARY_DIR : map path for mexFunction.map, ....\n\n# MATLAB_LIBRARIES: required libraries: libmex, etc\n\n# MATLAB_MEX_LIBRARY: path to libmex.lib\n\n# MATLAB_MX_LIBRARY: path to libmx.lib\n\n# MATLAB_ENG_LIBRARY: path to libeng.lib\n\n#\n\n## config\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#TODO\n",
        "Line" : 17,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "## LINUX 64 BIT\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#unix\n",
        "Line" : 39,
        "CharPositionInLine" : 27
      },
      "4" : {
        "Text" : "#unix\n",
        "Line" : 40,
        "CharPositionInLine" : 30
      },
      "5" : {
        "Text" : "#unix\n",
        "Line" : 45,
        "CharPositionInLine" : 27
      },
      "6" : {
        "Text" : "#unix\n",
        "Line" : 46,
        "CharPositionInLine" : 30
      },
      "7" : {
        "Text" : "#unix\n",
        "Line" : 51,
        "CharPositionInLine" : 27
      },
      "8" : {
        "Text" : "#unix\n",
        "Line" : 52,
        "CharPositionInLine" : 30
      },
      "CommentCount" : 9
    },
    "cmake/modules/FindNUMPY.cmake" : {
      "ObjectId" : "b97b40e95979c7e162b7ff59e50e5b97d6070a16",
      "LastModified" : "2018-04-05T09:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the Python NumPy package\n\n# PYTHON_NUMPY_INCLUDE_DIR\n\n# NUMPY_FOUND\n\n# will be set by this script\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# write a python script that finds the numpy path\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# execute the find script\n",
        "Line" : 19,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#include(FindPackageHandleStandardArgs)\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/modules/FindSPHINX.cmake" : {
      "ObjectId" : "5053a4bef9c209fafd4fea266354af38bdade033",
      "LastModified" : "2018-04-05T09:21:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/modules/FindVIGRA.cmake" : {
      "ObjectId" : "d27ccf8f0b4f6a785c29d290c19216c9f49b80c1",
      "LastModified" : "2018-04-05T09:21:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/modules/UseLATEX.cmake" : {
      "ObjectId" : "328dce3e74878021f396dc2f86c8f6ad48b8ab58",
      "LastModified" : "2018-04-05T09:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# File: UseLATEX.cmake\n\n# CMAKE commands to actually use the LaTeX compiler\n\n# Version: 1.8.1\n\n# Author: Kenneth Moreland (kmorel at sandia dot gov)\n\n#\n\n# Copyright 2004 Sandia Corporation.\n\n# Under the terms of Contract DE-AC04-94AL85000, there is a non-exclusive\n\n# license for use of this work by or on behalf of the\n\n# U.S. Government. Redistribution and use in source and binary forms, with\n\n# or without modification, are permitted provided that this Notice and any\n\n# statement of authorship are reproduced on all copies.\n\n#\n\n# The following MACROS are defined:\n\n#\n\n# ADD_LATEX_DOCUMENT(<tex_file>\n\n#                       [BIBFILES <bib_files>]\n\n#                       [INPUTS <input_tex_files>]\n\n#                       [IMAGE_DIRS] <image_directories>\n\n#                       [IMAGES] <image_files>\n\n#                       [CONFIGURE] <tex_files>\n\n#                       [DEPENDS] <tex_files>\n\n#                       [USE_INDEX] [USE_GLOSSARY] [USE_NOMENCL]\n\n#                       [DEFAULT_PDF] [DEFAULT_SAFEPDF]\n\n#                       [MANGLE_TARGET_NAMES])\n\n#       Adds targets that compile <tex_file>.  The latex output is placed\n\n#       in LATEX_OUTPUT_PATH or CMAKE_CURRENT_BINARY_DIR if the former is\n\n#       not set.  The latex program is picky about where files are located,\n\n#       so all input files are copied from the source directory to the\n\n#       output directory.  This includes the target tex file, any tex file\n\n#       listed with the INPUTS option, the bibliography files listed with\n\n#       the BIBFILES option, and any .cls, .bst, and .clo files found in\n\n#       the current source directory.  Images found in the IMAGE_DIRS\n\n#       directories or listed by IMAGES are also copied to the output\n\n#       directory and coverted to an appropriate format if necessary.  Any\n\n#       tex files also listed with the CONFIGURE option are also processed\n\n#       with the CMake CONFIGURE_FILE command (with the @ONLY flag.  Any\n\n#       file listed in CONFIGURE but not the target tex file or listed with\n\n#       INPUTS has no effect. DEPENDS can be used to specify generated files\n\n#       that are needed to compile the latex target.\n\n#\n\n#       The following targets are made:\n\n#               dvi: Makes <name>.dvi\n\n#               pdf: Makes <name>.pdf using pdflatex.\n\n#               safepdf: Makes <name>.pdf using ps2pdf.  If using the default\n\n#                       program arguments, this will ensure all fonts are\n\n#                       embedded and no lossy compression has been performed\n\n#                       on images.\n\n#               ps: Makes <name>.ps\n\n#               html: Makes <name>.html\n\n#               auxclean: Deletes <name>.aux and other auxiliary files.\n\n#                       This is sometimes necessary if a LaTeX error occurs\n\n#                       and writes a bad aux file.  Unlike the regular clean\n\n#                       target, it does not delete other input files, such as\n\n#                       converted images, to save time on the rebuild.\n\n#\n\n#       The dvi target is added to the ALL.  That is, it will be the target\n\n#       built by default.  If the DEFAULT_PDF argument is given, then the\n\n#       pdf target will be the default instead of dvi.\n\n#\n\n#       If the argument MANGLE_TARGET_NAMES is given, then each of the\n\n#       target names above will be mangled with the <tex_file> name.  This\n\n#       is to make the targets unique if ADD_LATEX_DOCUMENT is called for\n\n#       multiple documents.  If the argument USE_INDEX is given, then\n\n#       commands to build an index are made.  If the argument USE_GLOSSARY\n\n#       is given, then commands to build a glossary are made.\n\n#\n\n# History:\n\n#\n\n# 1.8.1 Fix problem where ps2pdf was not getting the appropriate arguments.\n\n#\n\n# 1.8.0 Add support for synctex.\n\n#\n\n# 1.7.7 Support calling xindy when making glossaries.\n\n#\n\n#       Improved make clean support.\n\n#\n\n# 1.7.6 Add support for the nomencl package (thanks to Myles English).\n\n#\n\n# 1.7.5 Fix issue with bibfiles being copied two different ways, which causes\n\n#       Problems with dependencies (thanks to Edwin van Leeuwen).\n\n#\n\n# 1.7.4 Added the DEFAULT_SAFEPDF option (thanks to Raymond Wan).\n\n#\n\n#       Added warnings when image directories are not found (and were\n\n#       probably not given relative to the source directory).\n\n#\n\n# 1.7.3 Fix some issues with interactions between makeglossaries and bibtex\n\n#       (thanks to Mark de Wever).\n\n#\n\n# 1.7.2 Use ps2pdf to convert eps to pdf to get around the problem with\n\n#       ImageMagick dropping the bounding box (thanks to Lukasz Lis).\n\n#\n\n# 1.7.1 Fixed some dependency issues.\n\n#\n\n# 1.7.0 Added DEPENDS options (thanks to Theodore Papadopoulo).\n\n#\n\n# 1.6.1 Ported the makeglossaries command to CMake and embedded the port\n\n#       into UseLATEX.cmake.\n\n#\n\n# 1.6.0 Allow the use of the makeglossaries command.  Thanks to Oystein\n\n#       S. Haaland for the patch.\n\n#\n\n# 1.5.0 Allow any type of file in the INPUTS lists, not just tex file\n\n#       (suggested by Eric Noulard).  As a consequence, the ability to\n\n#       specify tex files without the .tex extension is removed.  The removed\n\n#       function is of dubious value anyway.\n\n#\n\n#       When copying input files, skip over any file that exists in the\n\n#       binary directory but does not exist in the source directory with the\n\n#       assumption that these files were added by some other mechanism.  I\n\n#       find this useful when creating large documents with multiple\n\n#       chapters that I want to build separately (for speed) as I work on\n\n#       them.  I use the same boilerplate as the starting point for all\n\n#       and just copy it with different configurations.  This was what the\n\n#       separate ADD_LATEX_DOCUMENT method was supposed to originally be for.\n\n#       Since its external use is pretty much deprecated, I removed that\n\n#       documentation.\n\n#\n\n# 1.4.1 Copy .sty files along with the other class and package files.\n\n#\n\n# 1.4.0 Added a MANGLE_TARGET_NAMES option that will mangle the target names.\n\n#\n\n#       Fixed problem with copying bib files that became apparent with\n\n#       CMake 2.4.\n\n#\n\n# 1.3.0 Added a LATEX_OUTPUT_PATH variable that allows you or the user to\n\n#       specify where the built latex documents to go.  This is especially\n\n#       handy if you want to do in-source builds.\n\n#\n\n#       Removed the ADD_LATEX_IMAGES macro and absorbed the functionality\n\n#       into ADD_LATEX_DOCUMENT.  The old interface was always kind of\n\n#       clunky anyway since you had to specify the image directory in both\n\n#       places.  It also made supporting LATEX_OUTPUT_PATH problematic.\n\n#\n\n#       Added support for jpeg files.\n\n#\n\n# 1.2.0 Changed the configuration options yet again.  Removed the NO_CONFIGURE\n\n#       Replaced it with a CONFIGURE option that lists input files for which\n\n#       configure should be run.\n\n#\n\n#       The pdf target no longer depends on the dvi target.  This allows you\n\n#       to build latex documents that require pdflatex.  Also added an option\n\n#       to make the pdf target the default one.\n\n#\n\n# 1.1.1 Added the NO_CONFIGURE option.  The @ character can be used when\n\n#       specifying table column separators.  If two or more are used, then\n\n#       will incorrectly substitute them.\n\n#\n\n# 1.1.0 Added ability include multiple bib files.  Added ability to do copy\n\n#       sub-tex files for multipart tex files.\n\n#\n\n# 1.0.0 If both ps and pdf type images exist, just copy the one that\n\n#       matches the current render mode.  Replaced a bunch of STRING\n\n#       commands with GET_FILENAME_COMPONENT commands that were made to do\n\n#       the desired function.\n\n#\n\n# 0.4.0 First version posted to CMake Wiki.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#############################################################################\n\n# Find the location of myself while originally executing.  If you do this\n\n# inside of a macro, it will recode where the macro was invoked.\n\n#############################################################################\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#############################################################################\n\n# Generic helper macros\n\n#############################################################################\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Helpful list macros.\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Parse macro arguments.\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Match the contents of a file to a regular expression.\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The FILE STRINGS command would be a bit better, but it's not supported on\n\n# older versions of CMake.\n",
        "Line" : 221,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#############################################################################\n\n# Macros that perform processing during a LaTeX build.\n\n#############################################################################\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# This is really a bare bones port of the makeglossaries perl script into\n\n# CMake scripting.\n",
        "Line" : 236,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# What crazy person makes a LaTeX index generater that uses different\n\n# identifiers for language than babel (or at least does not support\n\n# the old ones)?\n",
        "Line" : 304,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# Ideally, we would check that the language is compatible with the\n\n# default codepage, but I'm hoping that distributions will be smart\n\n# enough to specify their own codepage.  I know, it's asking a lot.\n",
        "Line" : 347,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# So, it is possible (perhaps common?) for aux files to specify a\n\n# language and codepage that are incompatible with each other.  Check\n\n# for that condition, and if it happens run again with the default\n\n# codepage.\n",
        "Line" : 368,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "#ENDIF (\"${xindy_output}\" MATCHES \"Cannot locate xindy module for language (.+) in codepage (.+)\\\\.\")\n",
        "Line" : 384,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "#############################################################################\n\n# Helper macros for establishing LaTeX build.\n\n#############################################################################\n",
        "Line" : 472,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Just holds extensions for known image types.  They should all be lower case.\n",
        "Line" : 587,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# ImageMagick has broken eps to pdf conversion\n\n# use ps2pdf instead\n",
        "Line" : 621,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Makes custom commands to convert a file to a particular type.\n",
        "Line" : 641,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# As a shortcut, we can just copy the file.\n",
        "Line" : 660,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "# Check to see if there is another input file of the appropriate type.\n",
        "Line" : 670,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# If we still need to convert, do it.\n",
        "Line" : 680,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Adds custom commands to process the given files for dvi and pdf builds.\n\n# Adds the output files to the given variables (does not replace).\n",
        "Line" : 690,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Check to see if we need to downsample the image.\n",
        "Line" : 699,
        "CharPositionInLine" : 6
      },
      "22" : {
        "Text" : "# Make sure the output directory exists.\n",
        "Line" : 709,
        "CharPositionInLine" : 6
      },
      "23" : {
        "Text" : "# Do conversions for dvi.\n",
        "Line" : 713,
        "CharPositionInLine" : 6
      },
      "24" : {
        "Text" : "# Do conversions for pdf.\n",
        "Line" : 717,
        "CharPositionInLine" : 6
      },
      "25" : {
        "Text" : "# Special case: output exists but input does not.  Assume that it was\n\n# created elsewhere and skip the input file copy.\n",
        "Line" : 770,
        "CharPositionInLine" : 6
      },
      "26" : {
        "Text" : "#############################################################################\n\n# Commands provided by the UseLATEX.cmake \"package\"\n\n#############################################################################\n",
        "Line" : 778,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Parses arguments to ADD_LATEX_DOCUMENT and ADD_LATEX_TARGETS and sets the\n\n# variables LATEX_TARGET, LATEX_IMAGE_DIR, LATEX_BIBFILES, LATEX_DEPENDS, and\n\n# LATEX_INPUTS.\n",
        "Line" : 788,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# The first argument is the target latex file.\n",
        "Line" : 799,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# Backward compatibility between 1.6.0 and 1.6.1.\n",
        "Line" : 812,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# The commands to run LaTeX.  They are repeated multiple times.\n",
        "Line" : 828,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# Set up target names.\n",
        "Line" : 836,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# Probably not all of these will be generated, but they could be.\n\n# Note that the aux file is added later.\n",
        "Line" : 853,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# For each directory in LATEX_IMAGE_DIRS, glob all the image files and\n\n# place them in LATEX_IMAGES.\n",
        "Line" : 878,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# Repeat these commands twice.\n",
        "Line" : 920,
        "CharPositionInLine" : 25
      },
      "35" : {
        "Text" : "# Repeat these commands twice.\n",
        "Line" : 949,
        "CharPositionInLine" : 25
      },
      "36" : {
        "Text" : "# Add commands and targets for building dvi outputs.\n",
        "Line" : 1036,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# Add commands and targets for building pdf outputs (with pdflatex).\n",
        "Line" : 1049,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "# Since both the pdf and safepdf targets have the same output, we\n\n# cannot properly do the dependencies for both.  When selecting safepdf,\n\n# simply force a recompile every time.\n",
        "Line" : 1072,
        "CharPositionInLine" : 6
      },
      "39" : {
        "Text" : "#############################################################################\n\n# Actually do stuff\n\n#############################################################################\n",
        "Line" : 1133,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Must be part of the actual configure (included from CMakeLists.txt).\n",
        "Line" : 1160,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 41
    },
    "include/opengm/config.hxx.cmake" : {
      "ObjectId" : "3050e8bb6c239a9526ce144a04b6272ed3471b66",
      "LastModified" : "2018-04-05T09:21:14Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/// \\file config.cxx configuration file for OpenGM\n/// \n/// this header should be generated by cmake (from config.hxx.cmake)\n/// \\warning if cmake is not used to configure opengm config.hxx can be wrong.\n/// Since this header is used to get the size of fundamental types from cmake one\n/// may has to corret the OPENGM_SIZE_OF_UNSIGNED_* definitions by hand or call cmake\n/// to configure this header.",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "// \\def OPENGM_ASSERT\n/// opengm assertion\n/// if NDEBUG is not set OPENGM_ASSERT will check the\n/// assertion, if NDEBUG is not set OPENGM_ASSERT will do nothing",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "// meta-assert\n/// opengm compile time assertion",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "// has no typedef ? (TODO make this a option in cmake  list or\n// find out in cmake if this define should be active or not",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "// assume all types have been detected",
        "Line" : 42,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "// has cmake detected a type?",
        "Line" : 44,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "//",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "// size of types detected by cmake",
        "Line" : 81,
        "CharPositionInLine" : 3
      },
      "8" : {
        "Text" : "/// major version number of opengm",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "/// minor version number of opengm",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "/// patch version number of opengm",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "/// major version number of opengm",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "/// minor version number of opengm",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "/// patch version number of opengm",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "/// usual factor order\n///\n/// this size indicates how many values (usualy the variables indices\n/// of a factor ) can be stored on the stack. This value is only used\n/// in opengm::FastSequence (as second template parameter )",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "/// \\var NO_DEBUG true if NDEBUG is true",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "/// \\cond HIDDEN_SYMBOLS",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "// structs to identify if am system\n// does not have a certain type   ",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "// typedefs to types to identify if am system\n// does not have a certain type",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "// typelists of the basic c++ types\n// Floats:",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "// UInt:",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "// Int:",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "// typelists of the sizes of the basic c++ types\n// Float sizes:",
        "Line" : 254,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "// UInt sizes:",
        "Line" : 260,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "// Int sizes:",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "// platform independent\n// UInt :",
        "Line" : 272,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "//Int :",
        "Line" : 282,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "// Float :",
        "Line" : 291,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "// opengm::meta-\"switch-cases\" typelists to find out the\n// biggest and smallest uint, int and float type",
        "Line" : 298,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "// biggest type",
        "Line" : 334,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "// smallest types",
        "Line" : 341,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "// end namespace detail_types",
        "Line" : 348,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "/// \\endcond\n// UInt Types:\n/// uint8",
        "Line" : 349,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "/// uint16",
        "Line" : 353,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "/// uint32",
        "Line" : 355,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "/// uint64",
        "Line" : 357,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "// Int Types:",
        "Line" : 359,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "/// int8",
        "Line" : 361,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "/// int16",
        "Line" : 363,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "/// int32",
        "Line" : 365,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "// Float Types:\n/// float32",
        "Line" : 367,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "/// float64",
        "Line" : 370,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "/// biggest / longest uint",
        "Line" : 372,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "/// biggest / longest int",
        "Line" : 374,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "// smallest Types:\n/// smallest / shortest int",
        "Line" : 377,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "// default Types:\n/// default uint (biggest / longest uint)",
        "Line" : 382,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "/// default uint (biggest / longest int)",
        "Line" : 385,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "/// default uint (biggest / longest float)",
        "Line" : 387,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "// end namespace opengm",
        "Line" : 389,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 49
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "a89b622a76f505f093793be92b72190b8a163054",
      "LastModified" : "2018-04-05T09:21:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/converter/CMakeLists.txt" : {
      "ObjectId" : "e319a1c4f61616ea40e2d7726b12be833dee04db",
      "LastModified" : "2018-04-05T09:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  if(WITH_HDF5 AND WITH_BOOST)\n\n#      find_package(Boost 1.47 REQUIRED COMPONENTS program_options)\n\n#      message(STATUS \"adding FORMAT CONVERTER\")\n\n#      add_executable(opengm1TOopengm2 opengm1TOopengm2.cxx ${headers})\n\n#      target_link_libraries(opengm1TOopengm2 ${HDF5_CORE_LIBRARY} ${Boost_PROGRAM_OPTIONS_LIBRARY})\n\n#      if(UNIX)\n\n#          find_library(RT rt)\n\n#          target_link_libraries(opengm1TOopengm2 rt)\n\n#      endif(UNIX)\n\n#      INSTALL_TARGETS(/bin/converter opengm1TOopengm2)\n\n#  else()\n\n#      message(STATUS \"Not building format converter **\")\n\n#  endif()\n",
        "Line" : 2,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "src/examples/CMakeLists.txt" : {
      "ObjectId" : "c11d02327cb36334396924cd7d282977baa12d9e",
      "LastModified" : "2018-04-05T09:21:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/examples/constrained-graphical-models-examples/CMakeLists.txt" : {
      "ObjectId" : "0dd5aa14e69488cd831e30d94a3a461514962323",
      "LastModified" : "2018-04-05T09:21:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/examples/image-processing-examples/CMakeLists.txt" : {
      "ObjectId" : "6515e7fd090c4b61b1478d776302b87fe12c7d0c",
      "LastModified" : "2018-04-05T09:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_executable(example-recognition recognition.cxx ${headers})\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#target_link_libraries(example-recognition rt)\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "src/examples/io-examples/CMakeLists.txt" : {
      "ObjectId" : "453dad1821a791d5ee97f9d3d255e9a64cf5e3ec",
      "LastModified" : "2018-04-05T09:21:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/examples/unsorted-examples/CMakeLists.txt" : {
      "ObjectId" : "b6986704bec2a8741624e8599b93b10a413796eb",
      "LastModified" : "2018-04-05T09:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_executable(example-gibbs gibbs.cxx ${headers})\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#add_executable(example-swendsenwang swendsenwang.cxx ${headers})\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/external/CMakeLists.txt" : {
      "ObjectId" : "28761cdd24f238f0ab95308e7a6859d1b0fd303b",
      "LastModified" : "2018-04-05T09:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# source files\n",
        "Line" : 282,
        "CharPositionInLine" : 3
      },
      "1" : {
        "Text" : "# zlib source files\n",
        "Line" : 311,
        "CharPositionInLine" : 3
      },
      "2" : {
        "Text" : "#${DAOOPT_SRCDIR}/lib/zlib/gzio.c\n",
        "Line" : 318,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# GzStream source files\n",
        "Line" : 331,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# SLS4MPE source files\n",
        "Line" : 336,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "# Main daoopt source files\n",
        "Line" : 351,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 6
    },
    "src/external/patches/CMakeLists.txt" : {
      "ObjectId" : "fbbb7b19dfbdc9fb5f82acb9031c7fe2409597ff",
      "LastModified" : "2018-04-05T09:21:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/interfaces/CMakeLists.txt" : {
      "ObjectId" : "118ccfcabab235e806af48fe524fd7441352f693",
      "LastModified" : "2018-04-05T09:21:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/interfaces/commandline/CMakeLists.txt" : {
      "ObjectId" : "68b13f0493bb380c5135f6373d9f5d72eb071fc3",
      "LastModified" : "2018-04-05T09:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# if(WITH_HDF5)\n\n#    add_executable(opengm opengm.cxx ${headers})\n\n#    target_link_libraries(opengm ${HDF5_LIBRARIES} hdf5_cpp)\n\n#    if(UNIX)\n\n#        find_library(RT rt)\n\n#        target_link_libraries(opengm rt)\n\n#    endif(UNIX)\n\n#    INSTALL_TARGETS(/bin opengm)\n\n# endif(WITH_HDF5)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add_subdirectory(float)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/interfaces/commandline/double/CMakeLists.txt" : {
      "ObjectId" : "7406b3630720c753d37e4658641a8fa75c03ebb5",
      "LastModified" : "2018-04-05T09:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_definitions(-DTRWS_DEBUG_OUTPUT)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#target_link_libraries(test-planar-maxcut ${HDF5_LIBRARIES})\n",
        "Line" : 101,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 2
    },
    "src/interfaces/matlab/CMakeLists.txt" : {
      "ObjectId" : "641df249a47bfa723ca772328dc11c1a54e2082b",
      "LastModified" : "2018-04-05T09:21:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/interfaces/matlab/opengm/CMakeLists.txt" : {
      "ObjectId" : "5cc1d7b043b047e1a0f4a4e30c573133277d35fc",
      "LastModified" : "2018-04-05T09:21:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/interfaces/matlab/opengm/matlab-examples/CMakeLists.txt" : {
      "ObjectId" : "2b9f8691479981348472c267f51ea077e774558a",
      "LastModified" : "2018-04-05T09:21:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/interfaces/matlab/opengm/mex-src/CMakeLists.txt" : {
      "ObjectId" : "8e6e2a5a83d026ea33ead41d7e6b7889a622d4a2",
      "LastModified" : "2018-04-05T09:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# MatLab links it's own version of hdf5 libraries and thus overides the dynamic \n\n# linked versions provided by the build system. This leads to a segfault in \n\n# MatLab if both hdf5 versions are different from each other.\n\n# Solution: Static link HDF5 Library into the mexfiles\n\n# (found at http://stackoverflow.com/questions/2188658/shared-library-locations-for-matlab-mex-files)\n\n# TODO: Let cmake set correspondig CXX_FLAGS for static linking of the found hdf5 libraries.\n\n# \"-Wl,-Bdynamic -lstdc++\" is required as libstdc++ does not support static linking into a dynamic library\n\n#message(\"hdf5 libs: ${HDF5_LIBRARIES}\") \n\n#hdf5 libs: /usr/lib/libhdf5.so;/usr/lib/libhdf5_hl.so;/usr/lib/libz.so\n\n#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} /usr/lib/libhdf5.a /usr/lib/libhdf5_hl.a /usr/lib/libz.a\")\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(CMAKE_MODULE_LINKER_FLAGS \"${CMAKE_MODULE_LINKER_FLAGS} -t /usr/lib/libhdf5.a /usr/lib/libhdf5_hl.a /usr/lib/libz.a\") \n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# others...\n",
        "Line" : 73,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "## INSTALL\n",
        "Line" : 176,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "src/interfaces/python/CMakeLists.txt" : {
      "ObjectId" : "66e6031cf61551f61949b57204692bdc7b91a37a",
      "LastModified" : "2018-04-05T09:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_definitions(-DNPY_NO_DEPRECATED_API)\n\n#add_definitions(-DNPY_1_7_API_VERSION)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# configured documentation tools and intermediate build results\n",
        "Line" : 25,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# Sphinx cache with pickled ReST documents\n",
        "Line" : 27,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# HTML output directory\n",
        "Line" : 29,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 4
    },
    "src/interfaces/python/opengm/CMakeLists.txt" : {
      "ObjectId" : "4c1803438072c8d3d15cdc3617a5766b9f215b9e",
      "LastModified" : "2018-04-05T09:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# a lot of warnings\n",
        "Line" : 2,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# how to stripe wihtn msvc\n\n#add_definitions(-Ds) ????\n",
        "Line" : 5,
        "CharPositionInLine" : 3
      },
      "2" : {
        "Text" : "#--------------------------------------------------------------\n\n# Find packages\n\n#--------------------------------------------------------------\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#--------------------------------------------------------------\n\n# Include Directories\n\n#--------------------------------------------------------------\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#--------------------------------------------------------------\n\n# Copy from src to build\n\n#--------------------------------------------------------------\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/interfaces/python/opengm/benchmark/CMakeLists.txt" : {
      "ObjectId" : "7efb4ed36d99ec821408839493af93ab1bd6522c",
      "LastModified" : "2018-04-05T09:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#--------------------------------------------------------------\n\n# Copy from src to build\n\n#--------------------------------------------------------------\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/benchmark.py DESTINATION ${CMAKE_CURRENT_BINARY_DIR} )\n",
        "Line" : 11,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 2
    },
    "src/interfaces/python/opengm/hdf5/CMakeLists.txt" : {
      "ObjectId" : "f726d0c563feb6732585d72910e4ecab72ae1192",
      "LastModified" : "2018-04-05T09:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#--------------------------------------------------------------\n\n# Find packages\n\n#--------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#find_package(HDF5 REQUIRED)\n",
        "Line" : 8,
        "CharPositionInLine" : 3
      },
      "2" : {
        "Text" : "#--------------------------------------------------------------\n\n# Include Directories\n\n#--------------------------------------------------------------\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#--------------------------------------------------------------\n\n# Add opengmcore library\n\n#--------------------------------------------------------------\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#--------------------------------------------------------------\n\n# Link libraries\n\n#--------------------------------------------------------------\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#--------------------------------------------------------------\n\n# Copy from src to build\n\n#--------------------------------------------------------------\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/interfaces/python/opengm/inference/CMakeLists.txt" : {
      "ObjectId" : "e0524280c69acca55b138a9e9f313dcbc6f6c59e",
      "LastModified" : "2018-04-05T09:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#--------------------------------------------------------------\n\n# Include Directories\n\n#--------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#pyPbp.cxx\n\n#pyCgc.cxx\n",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#pyDualDecompositionBundle.cxx\n\n#pyDualDecompositionMerit.cxx\n\n#pyGibbs.cxx\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#pyLpInference.cxx\n",
        "Line" : 38,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#pySelfFusion.cxx\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#pyIntersectionBased.cxx\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#--------------------------------------------------------------\n\n# Add opengmcore library\n\n#--------------------------------------------------------------\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#--------------------------------------------------------------\n\n# Definitions\n\n#--------------------------------------------------------------\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#--------------------------------------------------------------\n\n# Link libraries\n\n#--------------------------------------------------------------\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#target_link_libraries(_inference ${CONICBUNDLE_LIBRARY})\n",
        "Line" : 124,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#${GUOBI_CXX_LIBRARY}\n\n#${GUROBI_LIBRARY}\n",
        "Line" : 143,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "#${GUROBI_LIBRARIES}\n\n#\n",
        "Line" : 146,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "#target_link_libraries(test-planar-maxcut ${HDF5_LIBRARIES})\n",
        "Line" : 155,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "#--------------------------------------------------------------\n\n# Copy from src to build\n\n#--------------------------------------------------------------\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "src/interfaces/python/opengm/opengmcore/CMakeLists.txt" : {
      "ObjectId" : "a14adc4d53205bc503203e8e143d0b40773690e0",
      "LastModified" : "2018-04-05T09:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#--------------------------------------------------------------\n\n# Find packages\n\n#--------------------------------------------------------------\n\n#find_package(Boost COMPONENTS python REQUIRED)\n\n#find_package (PythonLibs REQUIRED)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#   message(STATUS \"build opengm python with HDF5 support\")\n\n#   find_package(HDF5 REQUIRED)\n\n#   include_directories(${HDF5_INCLUDE_DIR})\n\n#   add_definitions(${HDF5_CPPFLAGS})\n\n#   add_definitions(-DWITH_HDF5)\n\n#else()\n\n#   message(STATUS \"build opengm python without HDF5\")\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#--------------------------------------------------------------\n\n# Include Directories\n\n#--------------------------------------------------------------\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#--------------------------------------------------------------\n\n# Add opengmcore library\n\n#--------------------------------------------------------------\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#--------------------------------------------------------------\n\n# Link libraries\n\n#--------------------------------------------------------------\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#target_link_libraries(_opengmcore  external-library-maxflow)\n",
        "Line" : 88,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "#--------------------------------------------------------------\n\n# Copy from src to build\n\n#--------------------------------------------------------------\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "src/tutorials/CMakeLists.txt" : {
      "ObjectId" : "d93e9ea2a3993342d09bccf3e11bc3460496d8d6",
      "LastModified" : "2018-04-05T09:21:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tutorials/c++/CMakeLists.txt" : {
      "ObjectId" : "4405837447ef6cdcb6ebebb780b4c93d10da8f65",
      "LastModified" : "2018-04-05T09:21:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tutorials/c++/applications/CMakeLists.txt" : {
      "ObjectId" : "5620261212b6f0478bf03c429b2f0cd402311790",
      "LastModified" : "2018-04-05T09:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#file(GLOB_RECURSE mrfheaders utility/*.hxx)\n\n#include_directories(utility)\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#add_executable(photomontage photomontage.cxx ${headers} ${mrfheaders} ${VIGRA_INCLUDE_DIR}) \n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "src/tutorials/c++/basics/CMakeLists.txt" : {
      "ObjectId" : "e7a5f0a6e19113b293627b52e3eba3015641f42c",
      "LastModified" : "2018-04-05T09:21:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/unittest/CMakeLists.txt" : {
      "ObjectId" : "1bb2387b8a23fdecb6b744c290648f161b304d70",
      "LastModified" : "2018-04-05T09:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_executable(test-sparsemarray test_sparsemarray.cxx ${headers})\n",
        "Line" : 26,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 1
    },
    "src/unittest/inference/CMakeLists.txt" : {
      "ObjectId" : "1a80a091a55a51839ff9d726f4a32d9f07c43685",
      "LastModified" : "2018-04-05T09:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set_target_properties(test-adsal PROPERTIES COMPILE_DEFINITIONS \"OPENGM_TESTFILE\") \n\n#target_link_libraries(test-adsal ${HDF5_LIBRARIES})\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set_target_properties(test-nesterov PROPERTIES COMPILE_DEFINITIONS \"OPENGM_TESTFILE\") \n\n#target_link_libraries(test-nesterov ${HDF5_LIBRARIES})\n",
        "Line" : 11,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "#  if(WITH_HDF5)\n\n#      add_executable(test-nesterov test_nesterov.cxx ${headers})\n\n#      target_link_libraries(test-nesterov ${HDF5_LIBRARIES})\n\n#      add_test(test-nesterov ${CMAKE_CURRENT_BINARY_DIR}/test-nesterov)\n\n#   endif()\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#set_target_properties(test-trwsi PROPERTIES COMPILE_DEFINITIONS \"OPENGM_TESTFILE\") \n\n#target_link_libraries(test-trwsi ${HDF5_LIBRARIES})\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#add_executable(test-gibbs test_gibbs.cxx ${headers})\n\n#add_test(test-gibbs ${CMAKE_CURRENT_BINARY_DIR}/test-gibbs)\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#add_executable(test-swendsenwang test_swendsenwang.cxx ${headers})\n\n#add_test(test-swendsenwang ${CMAKE_CURRENT_BINARY_DIR}/test-swendsenwang)\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#add_executable(test-pbp test_pbp.cxx ${headers})\n\n#add_test(test-pbp ${CMAKE_CURRENT_BINARY_DIR}/test-pbp)\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "##########################\n\n# self fusion and fusion based\n\n#########################\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#target_link_libraries(test-self-fusion      pthread)\n\n#target_link_libraries(test-fusion-based-inf pthread)\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#${GUOBI_CXX_LIBRARY}  \n\n#${GUROBI_LIBRARY}\n",
        "Line" : 199,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "#${GUROBI_LIBRARIES}\n\n#\n",
        "Line" : 202,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "#${GUOBI_CXX_LIBRARY}  \n\n#${GUROBI_LIBRARY}\n",
        "Line" : 207,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "#${GUROBI_LIBRARIES}\n\n#\n",
        "Line" : 210,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "#target_link_libraries(test-planar-maxcut ${HDF5_LIBRARIES})\n",
        "Line" : 343,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "#target_link_libraries(test-planar-maxcut ${HDF5_LIBRARIES})\n",
        "Line" : 353,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 15
    }
  },
  "FileTypes" : {
    "CMAKE" : 44,
    "CMAKESOURCE" : 1
  },
  "ElapsedTime" : 1659
}