{
  "Repository" : "3164203",
  "Revision" : "HEAD",
  "ObjectId" : "2b720772259ed77eff6acdc5692876d4c020a6e1",
  "CommitTime" : "2019-04-12T14:12:22Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "741146cc3d60ad5ceae44349c7ac6194c3e4d67c",
      "LastModified" : "2019-03-13T13:10:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Where to look first for CMake modules, before \"${CMAKE_ROOT}/Modules\" is checked\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Project version\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Enable C++14 features \n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Modules\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Search for dependencies\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Wrapper arround CMake \"Threads\" module\n",
        "Line" : 29,
        "CharPositionInLine" : 36
      },
      "6" : {
        "Text" : "# todo: Use equivalent vars from googletest cmake files. Currently they are somehow not working.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Projects\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Show configuration summary\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "cmake/FindMongoDB.cmake" : {
      "ObjectId" : "c87cc6ec80334538970ac21bc9bce51b9eae216a",
      "LastModified" : "2018-12-19T10:18:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Find the MongoDB libraries\n\n#\n\n# This module defines the following variables:\n\n#      MongoDB_FOUND\n\n#      MongoDB_LIBS\n\n#      MongoDB_INCLUDE_DIRS\n\n#      MongoDB_DEFINITIONS\n\n#\n\n# Imported target \"mongodb\" is created\n\n#\n\n# We assume, that at least \"mongo\" target was build by the following command:\n\n#    $ scons mongo\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Try to find MongoDB directory (uses CMAKE_PREFIX_PATH locations)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find relative path to build directory\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set absolute path to build directory\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set commong compiler definitons\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set common compiler include directories\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Read list of object files\n\n# See \"mongodb/README.md\" file (relative to the current folder) for more information.\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Convert string to list\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Convert to absolute path\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Get MongoDB repository recent tag\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set ALSA_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# When using CMake 3.0 MONGODB_FOUND variable will be created.\n\n# Make it explicit that variable name is MongoDB_FOUND.\n",
        "Line" : 114,
        "CharPositionInLine" : 32
      },
      "12" : {
        "Text" : "# Original MongoDB link command has the following in the end: m rt dl\n",
        "Line" : 123,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Linux: -Wl,--whole-archive\n\n# Linux: -Wl,--start-group\n",
        "Line" : 125,
        "CharPositionInLine" : 38
      },
      "14" : {
        "Text" : "# Linux: -Wl,--end-group\n\n# Linux: -Wl,--no-whole-archive\n\n# Linux: dl\n",
        "Line" : 128,
        "CharPositionInLine" : 38
      },
      "15" : {
        "Text" : "# Add imported target\n",
        "Line" : 133,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Specify INTERFACE properties for this target\n",
        "Line" : 136,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Cleanup\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "cmake/FindOpenSSL.cmake" : {
      "ObjectId" : "a7bf2b87bf6c3a6f7f48a59a068757ee2bb2fcc1",
      "LastModified" : "2017-04-28T17:25:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##################################################\n\n# Find and Add OpenSSL shared (dynamic) library \n\n# \n\n# - This module defines the following variables:\n\n#   OpenSSL_DIR\n\n#   OPENSSL_VERSION\n\n#\n\n# - Imported shared(dynamic) libraries \"ssl\" and \"crypto\" are created.\n\n#\n\n# - It is assumed that OpenSSL has been built and path to OpenSSL build directory is \n\n#   added into system(environment) variable ROBOMONGO_CMAKE_PREFIX_PATH.\n\n#\n\n##################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Try to find OpenSSL directory (uses CMAKE_PREFIX_PATH locations)\n\n#-------------------------------------------\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find OpenSSL version\n\n#-------------------------------------------\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The version number is encoded as 0xMNNFFPPS: major minor fix patch status\n\n# The status gives if this is a developer or prerelease and is ignored here.\n\n# Major, minor, and fix directly translate into the version numbers shown in\n\n# the string. The patch field translates to the single character suffix that\n\n# indicates the bug fix state, which 00 -> nothing, 01 -> a, 02 -> b and so\n\n# on.\n",
        "Line" : 75,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# 96 is the ASCII code of 'a' minus 1\n",
        "Line" : 93,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Once anyone knows how OpenSSL would call the patch versions beyond 'z'\n\n# this should be updated to handle that, too. This has not happened yet\n\n# so it is simply ignored here for now.\n",
        "Line" : 96,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# Add imported ssl and crypto libraries\n\n#-------------------------------------------\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add imported target ssl (ssleay32)\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add imported target for crypto (libeay32)\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# End of file",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "cmake/FindThreading.cmake" : {
      "ObjectId" : "a79363cdbac567a90e4df3eb174a0be1cb0c6d17",
      "LastModified" : "2016-03-06T12:50:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This wrapper is created in order to support CMake 3.0\n\n# Only starting from CMake 3.1 \"Threads\" module exports\n\n# \"Threads::Threads\" target.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Support for CMake 3.0\n\n# Export \"Threads::Threads\" imported target if it wasn't exported.\n\n# This lines are taken from the \"FindThreads.cmake\" of CMake 3.1:\n\n# https://github.com/Kitware/CMake/blob/v3.1.0/Modules/FindThreads.cmake\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/RobomongoCMakeDefaults.cmake" : {
      "ObjectId" : "329a712c5daa00083fdf34a18bad90f5d29a9f0d",
      "LastModified" : "2016-04-05T13:24:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Put the include dirs which are in the source or build tree\n\n# before all other include dirs, so the headers in the sources\n\n# are prefered over the already installed ones\n\n# Since cmake 2.4.1\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use colored output\n\n# Since cmake 2.4.0\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# MongoDB compiled with this option\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This variable is used by CMake \"FindThreads\" module\n\n# From documentation to FindThreads module:\n\n#   > Please note that the compiler flag can only be\n\n#   > used with the imported target. Use of both the imported\n\n#   > target as well as this switch is highly recommended for new code.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set the default build type to release with debug info\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Do not use Qt moc, uic and rcc by default\n\n# Since CMake 2.8.6\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/RobomongoCommon.cmake" : {
      "ObjectId" : "0a7b5a2597c728e7129093debb806b42b6f7600f",
      "LastModified" : "2017-05-19T12:22:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/RobomongoConfigurationSummary.cmake" : {
      "ObjectId" : "943ff650b161d03208a6cc6944548b53b2bf95e6",
      "LastModified" : "2019-03-13T13:10:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Show configuration summary and build tip\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/RobomongoDefaults.cmake" : {
      "ObjectId" : "d3fb9f6aafe51d85c8e19993e7f05ed0e9c70c71",
      "LastModified" : "2016-04-06T16:09:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This files defines:\n\n#\n\n# 1) Platform checks\n\n#\n\n#    SYSTEM_MACOSX\n\n#    SYSTEM_WINDOWS\n\n#    SYSTEM_LINUX\n\n#    SYSTEM_FREEBSD\n\n#    SYSTEM_OPENBSD\n\n#    SYSTEM_NETBSD\n\n#\n\n# 2) Build types checks\n\n#\n\n#    BUILD_DEBUG\n\n#    BUILD_RELEASE\n\n#    BUILD_RELWITHDEBINFO\n\n#    BUILD_MINSIZEREL\n\n#\n\n# 3) Link \"lib groups\" and \"whole-archive\" options\n\n#\n\n#    LINK_LIBGROUP_START\n\n#    LINK_LIBGROUP_END\n\n#    LINK_WHOLE_ARCHIVE_START\n\n#    LINK_WHOLE_ARCHIVE_END\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Platform checks\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Build types\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Compiler checks\n\n# We check Clang using MATCH instead of strict equality, because as of CMake 3.0.0 the\n\n# CMAKE_<LANG>_COMPILER_ID value for Apple-provided Clang is AppleClang. To test\n\n# for both the Apple-provided Clang and the regular Clang we use MATCH.\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Link \"groups\" and \"whole-archive\" options\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/RobomongoInstall.cmake" : {
      "ObjectId" : "ecce298b22b1cd77c39927765daef375a2f80ed7",
      "LastModified" : "2017-05-19T12:22:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Note for maintainers\n\n# --------------------\n\n#\n\n# Do not use absolute paths in DESTINATION arguments for install() command.\n\n# Because the same install code will be executed again by CPack. And CPack will\n\n# change internally CMAKE_INSTALL_PREFIX to point to some temporary folder\n\n# for package content.\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Temporary change\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Generate qt.conf file\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Install qt.conf file\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Install OpenSSL dynamic lib files\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Install binary\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Install license, copyright and changelogs files\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Install common dependencies\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Install newer versions of libstdc++ to support C++11\n",
        "Line" : 107,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Install icon\n",
        "Line" : 120,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Install runtime libraries:\n\n# msvcp120.dll\n\n# msvcr120.dll\n",
        "Line" : 130,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 11
    },
    "cmake/RobomongoInstallQt.cmake" : {
      "ObjectId" : "18e370d3b01a32517207c23f948ba11bd06cd835",
      "LastModified" : "2016-03-06T12:50:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Get full path to some known Qt library (i.e. /path/to/lib/libQt5Widgets.so.5.5.1)\n",
        "Line" : 6,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "# Get folder path of library (i.e. /path/to/lib)\n",
        "Line" : 9,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# Not very good solution, but we simply take all files with *Qt5<module>* in names (including symlinks)\n",
        "Line" : 13,
        "CharPositionInLine" : 12
      },
      "3" : {
        "Text" : "# Install to \"lib\" folder\n",
        "Line" : 16,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : "# On Mac OS we are still located in .framework folder,\n\n# and we need to go one level up\n",
        "Line" : 24,
        "CharPositionInLine" : 12
      },
      "5" : {
        "Text" : "# Exclude debug libraries\n\n# Exclude Headers folders\n",
        "Line" : 31,
        "CharPositionInLine" : 47
      },
      "6" : {
        "Text" : "# Install single DLL to lib directory\n",
        "Line" : 36,
        "CharPositionInLine" : 12
      },
      "7" : {
        "Text" : "# We are trying to get 'lib' folder of Qt installation.\n\n# For this we take some known target (Qt5::Core in this case)\n\n# and taking path to this library.\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Get full path to known library (i.e. /path/to/lib/libQt5Core.so.5.5.1)\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Get absolute path to 'lib' folder (which is a parent folder of 'known' library)\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Not very good solution, but we simply take all files with *icu* in names (including symlinks)\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Install to \"lib\" folder\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Installs Qt5 plugins. Uses value of global variable \"qt_plugins_dir\" as\n\n# absolute path to where install plugins.\n\n#\n\n# You can find list of plugin names by examing this variable: Qt5<Module>_PLUGINS\n\n# For example, Qt5Gui_PLUGINS.\n\n#\n\n# Debug plugins, running application in this way:\n\n# QT_DEBUG_PLUGINS=1 ./yourapp\n\n#\n\n# Some examples of plugin names:\n\n# QGifPlugin, QGtk2ThemePlugin, QIbusPlatformInputContextPlugin\n\n#\n\n# Sample:\n\n#    install_qt_plugins(QGifPlugin QGtk2ThemePlugin QIbusPlatformInputContextPlugin)\n\n#\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# We are trying to get 'plugins' folder of Qt installation.\n",
        "Line" : 82,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# Get full path to plugin library (i.e. /path/to/plugins/imageformats/libqgif.so)\n",
        "Line" : 84,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# Get absolute path to parent folder (i.e. /path/to/plugins/imageformats for Qt5::QGifPlugin)\n",
        "Line" : 87,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# Get plugin parent directory (i.e. \"imageformats\" for Qt5::QGifPlugin)\n",
        "Line" : 90,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# Get plugin file name (i.e. \"libqgif.so\" for Qt5::QGifPlugin)\n",
        "Line" : 93,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# Get absolute path to plugins folder (i.e. /path/to/plugins)\n",
        "Line" : 96,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# Install to \"lib\" folder\n",
        "Line" : 99,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 20
    },
    "cmake/RobomongoPackage.cmake" : {
      "ObjectId" : "eb973f619600be0a3aa38c4817ecfdf3ddd3ee19",
      "LastModified" : "2017-05-20T10:50:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Notes for maintainers.\n\n#\n\n# 1. Make sure that we use only lowercase letters in file name of outputed\n\n#    package for all platforms and package types.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Get last commit hash\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Timestamp (not used for now)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Package name (as it should appear in UI)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Version of the package\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Where to put generated package\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Disables the component-based install process for installers\n\n# that support it (NSIS, for instance)\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Strip debug information on platforms that support it\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Additional information\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Use lowercase for system name and package file name\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# We use function from TargetArch.cmake module\n\n# Returns string with target architecture value\n\n# Output for common architectures is: i386 or x86_64\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Package file name\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# License file will be shown in the installation wizard\n",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Default installation directory (not full path), just the path after\n\n# default \"c:\\Program Files\"\n",
        "Line" : 73,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# A path to the executable inside installed package that contains icon\n\n# This icon is used in Windows \"Add or remove programs\" control panel\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Create shortcuts on desktop and start-up menu\n",
        "Line" : 81,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Cleanup during uninstallation. This cleanup is required because shortcuts\n\n# will not be deleted automatically.\n\n# Without line '!insertmacro...' shortcut in start menu will not be removed\n\n# (i.e. it doesn't work when we referece '$STARTMENU_FOLDER' that is used\n\n# when creating shortcuts). This solution was found somewhere in internet.\n",
        "Line" : 87,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# The title displayed at the top of the installer\n",
        "Line" : 98,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Installer images (for sidebar and topbar)\n",
        "Line" : 101,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# URL to a web site providing more information about application\n\n# This url was noticed at least in \"Add or remove programs\" control\n\n# panel.\n",
        "Line" : 105,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Specify an executable to add an option to run on the finish\n\n# page of the NSIS installer. Without \"..\\\\\\\\\" it dowsn't work for NSIS 2.5\n",
        "Line" : 110,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Trying to set for installer and uninstaller, but this is\n\n# doesn't work and default icons are still used...\n",
        "Line" : 114,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 22
    },
    "cmake/RobomongoPrintUtils.cmake" : {
      "ObjectId" : "69f30fddf834cfcde123000cb80224929abfb5f2",
      "LastModified" : "2016-04-05T13:24:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###\n\n# Prints CMake variables.\n\n#\n\n# Print all variables in the current scope:\n\n#\n\n# print_vars()\n\n# print_vars(\"\")           # the same result, as previous line\n\n#\n\n# Print all variables with names, matching regex, case insensitive:\n\n#\n\n# print_vars(\"SOMEVAR\")\n\n# print_vars(\"someVar\")    # the same result, as previous line\n\n# print_vars(\"^CMAKE\")       # print all variables, that starts from \"CMAKE\"\n\n# print_vars(\"VAR$\")       # ends by \"VAR\"\n\n# print_vars(\"^VAR$\")      # exact match\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Make lowercase variants for case-insensitive comparing\n",
        "Line" : 23,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "###\n\n# Print content of variable.\n\n#\n\n# print_var(PROJECT_NAME)\n\n# print_var(\"PROJECT_NAME\")   # the same result as previous line\n\n#\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Show nice output for not defined or empty variables\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "###\n\n# Prints included directories\n\n#\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "###\n\n# Prints link directories\n\n#\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "###\n\n# Prints compile definitions\n\n#\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "###\n\n# Prints target include directories\n\n#\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "###\n\n# Prints target compile definitions\n\n#\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "###\n\n# Prints target link libraries\n\n#\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "###\n\n# Prints Qt5 module plugins\n\n#\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "cmake/RobomongoTargetArch.cmake" : {
      "ObjectId" : "d12883ea4bfb9b62ff948442a2ddf0a714384ec1",
      "LastModified" : "2016-03-06T12:50:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2012 Petroules Corporation. All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without modification, are permitted provided that the\n\n# following conditions are met:\n\n#\n\n# Redistributions of source code must retain the above copyright notice, this list of conditions and the following\n\n# disclaimer.\n\n#\n\n# Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following\n\n# disclaimer in the documentation and/or other materials provided with the distribution.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED\n\n# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A\n\n# PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\n# TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n\n# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\n# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Based on the Qt 5 processor detection code, so should be very accurate\n\n# https://qt.gitorious.org/qt/qtbase/blobs/master/src/corelib/global/qprocessordetection.h\n\n# Currently handles arm (v5, v6, v7), x86 (32/64), ia64, and ppc (32/64)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Regarding POWER/PowerPC, just as is noted in the Qt source,\n\n# \"There are many more known variants/revisions that we do not handle/detect.\"\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set ppc_support to TRUE before including this file or ppc and ppc64\n\n# will be treated as invalid architectures since they are no longer supported by Apple\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# On OS X we use CMAKE_OSX_ARCHITECTURES *if* it was set\n\n# First let's normalize the order of the values\n",
        "Line" : 75,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Note that it's not possible to compile PowerPC applications if you are using\n\n# the OS X SDK version 10.6 or later - you'll need 10.4/10.5 for that, so we\n\n# disable it by default\n\n# See this page for more information:\n\n# http://stackoverflow.com/questions/5333490/how-can-we-restore-ppc-ppc64-as-well-as-full-10-4-10-5-sdk-support-to-xcode-4\n",
        "Line" : 78,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Architecture defaults to i386 or ppc on OS X 10.5 and earlier, depending on the CPU type detected at runtime.\n\n# On OS X 10.6+ the default is x86_64 if the CPU supports it, i386 otherwise.\n",
        "Line" : 84,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Now add all the architectures in our normalized order\n",
        "Line" : 101,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# Detect the architecture in a rather creative way...\n\n# This compiles a small C program which is a series of ifdefs that selects a\n\n# particular #error preprocessor directive whose message string contains the\n\n# target architecture. The program will always fail to compile (both because\n\n# file is not a valid C program, and obviously because of the presence of the\n\n# #error preprocessor directives... but by exploiting the preprocessor in this\n\n# way, we can detect the correct target architecture even when cross-compiling,\n\n# since the program itself never needs to be run (only the compiler/preprocessor)\n",
        "Line" : 122,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Parse the architecture name from the compiler output\n",
        "Line" : 139,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# Get rid of the value marker leaving just the architecture name\n",
        "Line" : 142,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# If we are compiling with an unknown architecture this variable should\n\n# already be set to \"unknown\" but in the case that it's empty (i.e. due\n\n# to a typo in the code), then set it to unknown\n",
        "Line" : 145,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 12
    },
    "cmake/RobomongoTrashSymbols.cmake" : {
      "ObjectId" : "37d6c55cc89d67337e68f457caa3dfaa0e78e6f3",
      "LastModified" : "2017-05-19T12:22:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Do not show some warnings. We turned off the same warnings as MongoDB do\n",
        "Line" : 7,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# The /MP option can reduce the total time to compile the source files. This option\n\n# causes the compiler to create one or more copies of itself, each in a separate process.\n",
        "Line" : 10,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "src/robomongo-unit-tests/CMakeLists.txt" : {
      "ObjectId" : "b5ef10980fc537eaaa59d96d430de0c88c0ff17d",
      "LastModified" : "2019-03-13T13:10:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###\n\n### Unit Testing with Google Test \n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## !! Important Note: Currently unit testing is disabled for Linux due to MongoDB linking problem\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## New test & source file pairs MUST have the following format: \n\n#  Test file:   /path/Foo_test.cpp\n\n#  Source file: /path/Foo.cpp or /path/Foo.h\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "############# Windows \n",
        "Line" : 32,
        "CharPositionInLine" : 19
      },
      "4" : {
        "Text" : "############# MacOS\n",
        "Line" : 42,
        "CharPositionInLine" : 22
      },
      "5" : {
        "Text" : "# elseif(SYSTEM_LINUX) ############# LINUX  \n\n#     set(OBJ_DIR ${CMAKE_BINARY_DIR}/src/robomongo/CMakeFiles/robomongo.dir/)\n\n#     message(\"--- OBJ_DIR: \" ${OBJ_DIR})\n\n#     set(ROBO_OBJ_FILES \"${ROBO_OBJ_FILES}${OBJ_DIR}/robomongo_automoc.cpp.o;\")\n\n#     set(ROBO_OBJ_FILES \"${ROBO_OBJ_FILES}${OBJ_DIR}/robomongo_automoc.dir/gui/resources/qrc_gui.cpp.o;\")\n\n#     set(ROBO_OBJ_FILES \"${ROBO_OBJ_FILES}${OBJ_DIR}/robomongo_automoc.dir/resources/qrc_robo.cpp.o;\")    \n\n#     foreach(SRC_FILE ${ROBO_SOURCES})\n\n#         string(REPLACE \".cpp\" \".cpp.o\" OBJ_FILE ${SRC_FILE})\n\n#         set(ROBO_OBJ_FILES \"${ROBO_OBJ_FILES}${OBJ_DIR}${OBJ_FILE};\")        \n\n#     endforeach()\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# For Windows we need to install Qt DLLs\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "src/robomongo/CMakeLists.txt" : {
      "ObjectId" : "c73fdce7ed3014638bdad3f640397d0731d44f74",
      "LastModified" : "2019-03-13T13:10:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Automatically generate code for Qt moc, uic and rcc files\n\n# Since CMake 2.8.6\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(sanitize \"-fsanitize=address\")\n\n#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} ${sanitize}\")\n\n#set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} ${sanitize}\")\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Isolated Scope #1\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Isolated Scope #2\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Isolated Scope #3\n",
        "Line" : 61,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Isolated scope #4\n",
        "Line" : 78,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Isolated scope #5\n",
        "Line" : 85,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Isolated scope #6\n",
        "Line" : 92,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Isolated scope #7\n",
        "Line" : 104,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Isolated scope #8\n",
        "Line" : 115,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Final scope\n",
        "Line" : 129,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Robomongo target\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Target from FindThreads CMake module\n",
        "Line" : 156,
        "CharPositionInLine" : 28
      },
      "13" : {
        "Text" : "# Create Windows Resource file\n",
        "Line" : 190,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Add additional source file to \"robomongo\" target\n",
        "Line" : 197,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Rename output name for Windows\n",
        "Line" : 202,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Seems that we do not need to do this with recent versions of Qt\n",
        "Line" : 206,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Install\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#\n\n# Tests targets (code below should be moved to separate file)\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Target that creates original MongoDB shell\n\n# Used to test compilation and linking\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Target from FindThreads CMake module\n",
        "Line" : 247,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 21
    },
    "src/robomongo/ssh/CMakeLists.txt" : {
      "ObjectId" : "03520b2dc3afad2cc26c9bc67d1f4238128a15a1",
      "LastModified" : "2016-04-05T13:24:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Platform checks\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Direct-tcpip sample\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Server\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Tests\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/third-party/googletest-1.8.1/CMakeLists.txt" : {
      "ObjectId" : "d77321165aeb414b616a71769c77f45882fc56d4",
      "LastModified" : "2019-01-04T06:44:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Note that googlemock target already builds googletest\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/third-party/googletest-1.8.1/Makefile.am" : {
      "ObjectId" : "433eefeb08026fa46e702db9e853e8a4efdfc989",
      "LastModified" : "2019-01-04T06:44:05Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build . before src so that our all-local and clean-local hooks kicks in at\n\n# the right time.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/third-party/googletest-1.8.1/googlemock/CMakeLists.txt" : {
      "ObjectId" : "8a8de1f64119035b472393fa11f38d606ff42003",
      "LastModified" : "2019-01-04T06:44:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# CMake build script for Google Mock.\n\n#\n\n# To run the tests for Google Mock itself on Linux, use 'make test' or\n\n# ctest.  You can select which tests to run using 'ctest -R regex'.\n\n# For more options, run 'ctest --help'.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# A directory to find Google Test sources.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Defines pre_project_set_up_hermetic_build() and set_up_hermetic_build().\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Google Test also calls hermetic setup functions from add_subdirectory,\n\n# although its changes will not affect things at the current scope.\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "########################################################################\n\n#\n\n# Project-wide settings\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Name of the project.\n\n#\n\n# CMake files in this project can refer to the root source directory\n\n# as ${gmock_SOURCE_DIR} and to the root binary directory as\n\n# ${gmock_BINARY_DIR}.\n\n# Language \"C\" is required for find_package(Threads).\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Instructs CMake to process Google Test's CMakeLists.txt and add its\n\n# targets to the current scope.  We are placing Google Test's binary\n\n# directory in a subdirectory of our own as VC compilation may break\n\n# if they are the same (the default).\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# These commands only run if this is the main project\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# BUILD_SHARED_LIBS is a standard CMake variable, but we declare it here to\n\n# make it prominent in the GUI.\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Although Google Test's CMakeLists.txt calls this function, the\n\n# changes there don't affect the current scope.  Therefore we have to\n\n# call it again here.\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# from ${gtest_dir}/cmake/internal_utils.cmake\n",
        "Line" : 67,
        "CharPositionInLine" : 30
      },
      "11" : {
        "Text" : "# Adds Google Mock's and Google Test's header directories to the search path.\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# This directory is needed to build directly from Google Test sources.\n",
        "Line" : 74,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Summary of tuple support for Microsoft Visual Studio:\n\n# Compiler    version(MS)  version(cmake)  Support\n\n# ----------  -----------  --------------  -----------------------------\n\n# <= VS 2010  <= 10        <= 1600         Use Google Tests's own tuple.\n\n# VS 2012     11           1700            std::tr1::tuple + _VARIADIC_MAX=10\n\n# VS 2013     12           1800            std::tr1::tuple\n\n# VS 2015     14           1900            std::tuple\n\n# VS 2017     15           >= 1910         std::tuple\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "########################################################################\n\n#\n\n# Defines the gmock & gmock_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Google Mock libraries.  We build them using more strict warnings than what\n\n# are used for other targets, to ensure that Google Mock can be compiled by\n\n# a user aggressive about warnings.\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# If the CMake version supports it, attach header directory information\n\n# to the targets for when we are part of a parent build (ie being pulled\n\n# in via add_subdirectory() rather than being a standalone build).\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "########################################################################\n\n#\n\n# Install rules\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "########################################################################\n\n#\n\n# Google Mock's own tests.\n\n#\n\n# You can skip this section if you aren't interested in testing\n\n# Google Mock itself.\n\n#\n\n# The tests are not built by default.  To build them, set the\n\n# gmock_build_tests option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgmock_build_tests=ON flag when running cmake.\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# This must be set in the root directory for the tests to be run by\n\n# 'make test' or ctest.\n",
        "Line" : 144,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "############################################################\n\n# C++ tests built with standard compiler flags.\n",
        "Line" : 148,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# gmock_all_test is commented to save time building and running tests.\n\n# Uncomment if necessary.\n\n# cxx_test(gmock_all_test gmock_main)\n",
        "Line" : 171,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "############################################################\n\n# C++ tests built with non-standard compiler flags.\n",
        "Line" : 175,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# 1600 is Visual Studio 2010.\n",
        "Line" : 185,
        "CharPositionInLine" : 33
      },
      "24" : {
        "Text" : "# Visual Studio 2010, 2012, and 2013 define symbols in std::tr1 that\n\n# conflict with our own definitions. Therefore using our own tuple does not\n\n# work on those compilers.\n",
        "Line" : 186,
        "CharPositionInLine" : 6
      },
      "25" : {
        "Text" : "# Tests that a binary can be built with Google Mock as a shared library.  On\n\n# some system configurations, it may not possible to run the binary without\n\n# knowing more details about the system configurations. We do not try to run\n\n# this binary. To get a more robust shared library coverage, configure with\n\n# -DBUILD_SHARED_LIBS=ON.\n",
        "Line" : 214,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "############################################################\n\n# Python tests.\n",
        "Line" : 225,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 27
    },
    "src/third-party/googletest-1.8.1/googlemock/Makefile.am" : {
      "ObjectId" : "9adbc5163dd7191a14a887a384fb5d6d2956b44d",
      "LastModified" : "2019-01-04T06:44:05Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Automake file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Nonstandard package files for distribution.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We may need to build our internally packaged gtest. If so, it will be\n\n# included in the 'subdirs' variable.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This is generated by the configure script, so clean it for distribution.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# We define the global AM_CPPFLAGS as everything we compile includes from these\n\n# directories.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Modifies compiler and linker flags for pthreads compatibility.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build rules for libraries.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Build rules for tests. Automake's naming for some of these variables isn't\n\n# terribly obvious, so this is a brief reference:\n\n#\n\n# TESTS -- Programs run automatically by \"make check\"\n\n# check_PROGRAMS -- Programs built by \"make check\" but not necessarily run\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# This exercises all major components of Google Mock.  It also\n\n# verifies that libgmock works.\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# This tests using Google Mock in multiple translation units.  It also\n\n# verifies that libgmock_main and libgmock work.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Tests that fused gmock files compile and work.\n",
        "Line" : 81,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Google Mock source files that we don't compile directly.\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# C++ tests that we don't compile using autotools.\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Python tests, which we don't run using autotools.\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Nonstandard package files for distribution.\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Pump scripts for generating Google Mock headers.\n\n# TODO(chandlerc@google.com): automate the generation of *.h from *.h.pump.\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Script for fusing Google Mock and Google Test source files.\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# The Google Mock Generator tool from the cppclean project.\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Script for diagnosing compiler errors in programs that use Google\n\n# Mock.\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# CMake scripts.\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Microsoft Visual Studio 2005 projects.\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Microsoft Visual Studio 2010 projects.\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# gmock_test.cc does not really depend on files generated by the\n\n# fused-gmock-internal rule.  However, gmock_test.o does, and it is\n\n# important to include test/gmock_test.cc as part of this rule in order to\n\n# prevent compiling gmock_test.o until all dependent files have been\n\n# generated.\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# TODO(vladl@google.com): Find a way to add Google Tests's sources here.\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Death tests may produce core dumps in the build directory. In case\n\n# this happens, clean them to keep distcleancheck happy.\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Disables 'make install' as installing a compiled version of Google\n\n# Mock can lead to undefined behavior due to violation of the\n\n# One-Definition Rule.\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 26
    },
    "src/third-party/googletest-1.8.1/googletest/CMakeLists.txt" : {
      "ObjectId" : "45c027d4fe7030c69f24fb12ed33618e02ff53bd",
      "LastModified" : "2019-02-09T21:56:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# CMake build script for Google Test.\n\n#\n\n# To run the tests for Google Test itself on Linux, use 'make test' or\n\n# ctest.  You can select which tests to run using 'ctest -R regex'.\n\n# For more options, run 'ctest --help'.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# When other libraries are using a shared version of runtime libraries,\n\n# Google Test also has to use one.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Defines pre_project_set_up_hermetic_build() and set_up_hermetic_build().\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "########################################################################\n\n#\n\n# Project-wide settings\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Name of the project.\n\n#\n\n# CMake files in this project can refer to the root source directory\n\n# as ${gtest_SOURCE_DIR} and to the root binary directory as\n\n# ${gtest_BINARY_DIR}.\n\n# Language \"C\" is required for find_package(Threads).\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Visibility\n",
        "Line" : 51,
        "CharPositionInLine" : 20
      },
      "6" : {
        "Text" : "# These commands only run if this is the main project\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# BUILD_SHARED_LIBS is a standard CMake variable, but we declare it here to\n\n# make it prominent in the GUI.\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Define helper functions and macros used by Google Test.\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Defined in internal_utils.cmake.\n",
        "Line" : 86,
        "CharPositionInLine" : 30
      },
      "10" : {
        "Text" : "# Create the CMake package file descriptors.\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Where Google Test's .h files can be found.\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Summary of tuple support for Microsoft Visual Studio:\n\n# Compiler    version(MS)  version(cmake)  Support\n\n# ----------  -----------  --------------  -----------------------------\n\n# <= VS 2010  <= 10        <= 1600         Use Google Tests's own tuple.\n\n# VS 2012     11           1700            std::tr1::tuple + _VARIADIC_MAX=10\n\n# VS 2013     12           1800            std::tr1::tuple\n\n# VS 2015     14           1900            std::tuple\n\n# VS 2017     15           >= 1910         std::tuple\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "########################################################################\n\n#\n\n# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Google Test libraries.  We build them using more strict warnings than what\n\n# are used for other targets, to ensure that gtest can be compiled by a user\n\n# aggressive about warnings.\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# If the CMake version supports it, attach header directory information\n\n# to the targets for when we are part of a parent build (ie being pulled\n\n# in via add_subdirectory() rather than being a standalone build).\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "########################################################################\n\n#\n\n# Install rules\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "########################################################################\n\n#\n\n# Samples on how to link user tests with gtest or gtest_main.\n\n#\n\n# They are not built by default.  To build them, set the\n\n# gtest_build_samples option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_samples=ON flag when running cmake.\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "########################################################################\n\n#\n\n# Google Test's own tests.\n\n#\n\n# You can skip this section if you aren't interested in testing\n\n# Google Test itself.\n\n#\n\n# The tests are not built by default.  To build them, set the\n\n# gtest_build_tests option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_tests=ON flag when running cmake.\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# This must be set in the root directory for the tests to be run by\n\n# 'make test' or ctest.\n",
        "Line" : 186,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "############################################################\n\n# C++ tests built with standard compiler flags.\n",
        "Line" : 190,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "############################################################\n\n# C++ tests built with non-standard compiler flags.\n",
        "Line" : 221,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 224,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# 1600 is Visual Studio 2010.\n",
        "Line" : 253,
        "CharPositionInLine" : 43
      },
      "24" : {
        "Text" : "# Visual Studio 2010, 2012, and 2013 define symbols in std::tr1 that\n\n# conflict with our own definitions. Therefore using our own tuple does not\n\n# work on those compilers.\n",
        "Line" : 254,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "############################################################\n\n# Python tests.\n",
        "Line" : 268,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Visual Studio .NET 2003 does not support STL with exceptions disabled.\n",
        "Line" : 274,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# 1310 is Visual Studio .NET 2003\n",
        "Line" : 275,
        "CharPositionInLine" : 46
      },
      "28" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 311,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 29
    },
    "src/third-party/googletest-1.8.1/googletest/Makefile.am" : {
      "ObjectId" : "b44c8416ba080c2f016f166b18b42c0f73ece7be",
      "LastModified" : "2019-01-04T06:44:05Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Automake file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Nonstandard package files for distribution\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# gtest source files that we don't compile directly.  They are\n\n# #included by gtest-all.cc.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Sample files that we don't compile.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# C++ test files that we don't compile directly.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Python tests that we don't run.\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# CMake script\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# MSVC project files\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# xcode project files\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# xcode sample files\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# C++Builder project files\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Distribute and install M4 macro\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# We define the global AM_CPPFLAGS as everything we compile includes from these\n\n# directories.\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Modifies compiler and linker flags for pthreads compatibility.\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Build rules for libraries.\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Build rules for samples and tests. Automake's naming for some of\n\n# these variables isn't terribly obvious, so this is a brief\n\n# reference:\n\n#\n\n# TESTS -- Programs run automatically by \"make check\"\n\n# check_PROGRAMS -- Programs built by \"make check\" but not necessarily run\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# A simple sample on using gtest.\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Also verify that libgtest works by itself.\n",
        "Line" : 279,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# This tests most constructs of gtest and verifies that libgtest_main\n\n# and libgtest work.\n",
        "Line" : 285,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Tests that fused gtest files compile and work.\n",
        "Line" : 293,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Build rules for putting fused Google Test files into the distribution\n\n# package. The user can also create those files by manually running\n\n# scripts/fuse_gtest_files.py.\n",
        "Line" : 306,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Death tests may produce core dumps in the build directory. In case\n\n# this happens, clean them to keep distcleancheck happy.\n",
        "Line" : 325,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Disables 'make install' as installing a compiled version of Google\n\n# Test can lead to undefined behavior due to violation of the\n\n# One-Definition Rule.\n",
        "Line" : 329,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "src/third-party/googletest-1.8.1/googletest/cmake/internal_utils.cmake" : {
      "ObjectId" : "8c1f9ba99cf50574f669dd7deba324dce40595f3",
      "LastModified" : "2019-01-04T06:44:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Defines functions and macros useful for building Google Test and\n\n# Google Mock.\n\n#\n\n# Note:\n\n#\n\n# - This file will be run twice when building Google Mock (once via\n\n#   Google Test's CMakeLists.txt, and once via Google Mock's).\n\n#   Therefore it shouldn't have any side effects other than defining\n\n#   the functions and macros.\n\n#\n\n# - The functions/macros defined in this file may depend on Google\n\n#   Test and Google Mock's option() definitions, and thus must be\n\n#   called *after* the options have been defined.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Tweaks CMake's default compiler/linker settings to suit Google Test's needs.\n\n#\n\n# This must be a macro(), as inside a function string() can only\n\n# update variables in the function scope.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For MSVC, CMake sets certain flags to defaults we want to override.\n\n# This replacement code is taken from sample in the CMake Wiki at\n\n# https://gitlab.kitware.com/cmake/community/wikis/FAQ#dynamic-replace.\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# When Google Test is built as a shared library, it should also use\n\n# shared runtime libraries.  Otherwise, it may end up with multiple\n\n# copies of runtime library data in different modules, resulting in\n\n# hard-to-find crashes. When it is built as a static library, it is\n\n# preferable to use CRT as static libraries, as we don't have to rely\n\n# on CRT DLLs being available. CMake always defaults to using shared\n\n# CRT libraries, so we override that default here.\n",
        "Line" : 28,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# We prefer more strict warning checking for building Google Test.\n\n# Replaces /W3 with /W4 in defaults.\n",
        "Line" : 38,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Prevent D9025 warning for targets that have exception handling\n\n# turned off (/EHs-c- flag). Where required, exceptions are explicitly\n\n# re-enabled using the cxx_exception_flags variable.\n",
        "Line" : 42,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# Defines the compiler/linker flags used to build Google Test and\n\n# Google Mock.  You can tweak these definitions to suit your need.  A\n\n# variable's value is empty before it's explicitly assigned to.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Note: pthreads on MinGW is not supported, even if available\n\n# instead, we use windows threading primitives\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Defines CMAKE_USE_PTHREADS_INIT and CMAKE_THREAD_LIBS_INIT.\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Newlines inside flags variables break CMake's NMake generator.\n\n# TODO(vladl@google.com): Add -RTCs and -RTCu to debug builds.\n",
        "Line" : 68,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# 1400 is Visual Studio 2005\n",
        "Line" : 71,
        "CharPositionInLine" : 33
      },
      "11" : {
        "Text" : "# Suppress spurious warnings MSVC 7.1 sometimes issues.\n\n# Forcing value to bool.\n",
        "Line" : 72,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# Copy constructor and assignment operator could not be generated.\n",
        "Line" : 75,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# Compatibility warnings not applicable to Google Test.\n\n# Resolved overload was found by argument-dependent lookup.\n",
        "Line" : 77,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# 1500 is Visual Studio 2008\n",
        "Line" : 81,
        "CharPositionInLine" : 33
      },
      "15" : {
        "Text" : "# Conditional expression is constant.\n\n# When compiling with /W4, we get several instances of C4127\n\n# (Conditional expression is constant). In our code, we disable that\n\n# warning on a case-by-case basis. However, on Visual Studio 2005,\n\n# the warning fires on std::list. Therefore on that compiler and earlier,\n\n# we disable the warning project-wide.\n",
        "Line" : 82,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# 1700 is Visual Studio 2012.\n",
        "Line" : 90,
        "CharPositionInLine" : 39
      },
      "17" : {
        "Text" : "# Suppress \"unreachable code\" warning on VS 2012 and later.\n\n# http://stackoverflow.com/questions/3232669 explains the issue.\n",
        "Line" : 91,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "# Until version 4.3.2, GCC doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 108,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Sun Pro doesn't provide macros to indicate whether exceptions and\n\n# RTTI are enabled, so we define GTEST_HAS_* explicitly.\n",
        "Line" : 116,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# CMake 2.8 changes Visual Age's compiler ID to \"XL\".\n",
        "Line" : 122,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Until version 9.0, Visual Age doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 125,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# RTTI can not be disabled in HP aCC compiler.\n",
        "Line" : 133,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# The pthreads library is available and allowed?\n",
        "Line" : 137,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# For building gtest's own tests and samples.\n",
        "Line" : 145,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# For building the gtest libraries.\n",
        "Line" : 153,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# type can be either STATIC or SHARED to denote a static or shared library.\n\n# ARGN refers to additional arguments after 'cxx_flags'.\n",
        "Line" : 160,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# Generate debug library name with a postfix.\n",
        "Line" : 166,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "########################################################################\n\n#\n\n# Helper functions for creating build targets.\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# cxx_executable_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ executable that depends on the given libraries and\n\n# is built from the given source files with the given compiler flags.\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# 1700 is Visual Studio 2012.\n",
        "Line" : 207,
        "CharPositionInLine" : 48
      },
      "32" : {
        "Text" : "# BigObj required for tests.\n",
        "Line" : 208,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "# To support mixing linking in static and dynamic libraries, link each\n\n# library in with an extra call to target_link_libraries.\n",
        "Line" : 221,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# cxx_executable(name dir lib srcs...)\n\n#\n\n# creates a named target that depends on the given libs and is built\n\n# from the given source files.  dir/name.cc is implicitly included in\n\n# the source file list.\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Sets PYTHONINTERP_FOUND and PYTHON_EXECUTABLE.\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# cxx_test_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ test that depends on the given libs and is built\n\n# from the given source files with the given compiler flags.\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# cxx_test(name libs srcs...)\n\n#\n\n# creates a named test target that depends on the given libs and is\n\n# built from the given source files.  Unlike cxx_test_with_flags,\n\n# test/name.cc is already implicitly included in the source file list.\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# py_test(name)\n\n#\n\n# creates a Python test with the given name whose main module is in\n\n# test/name.py.  It does nothing if Python is not installed.\n",
        "Line" : 260,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Multi-configuration build generators as for Visual Studio save\n\n# output in a subdirectory of CMAKE_CURRENT_BINARY_DIR (Debug,\n\n# Release etc.), so we have to provide it here.\n",
        "Line" : 268,
        "CharPositionInLine" : 1
      },
      "40" : {
        "Text" : "# Single-configuration build generators like Makefile generators\n\n# don't have subdirs below CMAKE_CURRENT_BINARY_DIR.\n",
        "Line" : 276,
        "CharPositionInLine" : 1
      },
      "41" : {
        "Text" : "# ${CMAKE_CURRENT_BINARY_DIR} is known at configuration time, so we can\n\n# directly bind it from cmake. ${CTEST_CONFIGURATION_TYPE} is known\n\n# only at ctest runtime (by calling ctest -c <Configuration>), so\n\n# we have to escape $ to delay variable substitution here.\n",
        "Line" : 284,
        "CharPositionInLine" : 6
      },
      "42" : {
        "Text" : "# install_project(targets...)\n\n#\n\n# Installs the specified targets and configures the associated pkgconfig files.\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Install the project targets.\n",
        "Line" : 303,
        "CharPositionInLine" : 4
      },
      "44" : {
        "Text" : "# Configure and install pkgconfig files.\n",
        "Line" : 309,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 45
    },
    "src/third-party/libssh2/CMakeLists.txt" : {
      "ObjectId" : "04cf646c043294a5654baac83639368d160dcf65",
      "LastModified" : "2019-01-04T06:44:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2014 Alexander Lamaison <alexander.lamaison@gmail.com>\n\n#\n\n# Redistribution and use in source and binary forms,\n\n# with or without modification, are permitted provided\n\n# that the following conditions are met:\n\n#\n\n#   Redistributions of source code must retain the above\n\n#   copyright notice, this list of conditions and the\n\n#   following disclaimer.\n\n#\n\n#   Redistributions in binary form must reproduce the above\n\n#   copyright notice, this list of conditions and the following\n\n#   disclaimer in the documentation and/or other materials\n\n#   provided with the distribution.\n\n#\n\n#   Neither the name of the copyright holder nor the names\n\n#   of any other contributors may be used to endorse or\n\n#   promote products derived from this software without\n\n#   specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND\n\n# CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n\n# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n\n# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n\n# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n\n# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n\n# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\n# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\n\n# USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY\n\n# OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Library definition\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# we want it to be called libssh2 on all platforms\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Options\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable debugging logging by default if the user configured a debug build\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Platform checks\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Try _strtoi64 if strtoll isn't available\n",
        "Line" : 172,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# poll() does not work on these platforms\n\n#\n\n# Interix: \"does provide poll(), but the implementing developer must\n\n# have been in a bad mood, because poll() only works on the /proc\n\n# filesystem here\"\n\n#\n\n# Mac OS X's poll has funny behaviors, like:\n\n# not being able to do poll on no fildescriptors (10.3?)\n\n# not being able to poll on some files (like anything in /dev)\n\n# not having reliable timeout support\n\n# inconsistent return of POLLHUP where other implementations give POLLIN\n",
        "Line" : 179,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Non-blocking socket support tests.  Must be after after library tests to\n\n# link correctly\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# to find generated header\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Check for the OS.\n\n# Daniel's note: this should not be necessary and we need to work to\n\n# get this removed.\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Fall back to over-linking dependencies\n",
        "Line" : 220,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Ignore single compiler warning for this third-party project\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "src/third-party/libssh2/sources/CMakeLists.txt" : {
      "ObjectId" : "dc585cd4d5c37a04113fe809a2c7e48e0c8a65ce",
      "LastModified" : "2019-01-04T06:44:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2014, 2015  Alexander Lamaison <alexander.lamaison@gmail.com>\n\n#\n\n# Redistribution and use in source and binary forms,\n\n# with or without modification, are permitted provided\n\n# that the following conditions are met:\n\n#\n\n#   Redistributions of source code must retain the above\n\n#   copyright notice, this list of conditions and the\n\n#   following disclaimer.\n\n#\n\n#   Redistributions in binary form must reproduce the above\n\n#   copyright notice, this list of conditions and the following\n\n#   disclaimer in the documentation and/or other materials\n\n#   provided with the distribution.\n\n#\n\n#   Neither the name of the copyright holder nor the names\n\n#   of any other contributors may be used to endorse or\n\n#   promote products derived from this software without\n\n#   specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND\n\n# CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n\n# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n\n# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n\n# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n\n# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n\n# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\n# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\n\n# USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY\n\n# OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Parse version\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/third-party/libssh2/sources/Makefile.am" : {
      "ObjectId" : "761733e734123480bb36c84f1acff32021004573",
      "LastModified" : "2019-01-04T06:44:05Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Code Coverage\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# DSP/VCPROJ generation adapted from libcurl\n\n# only OpenSSL and WinCNG are supported with this build system\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Makefile.inc provides the CSOURCES and HHEADERS defines\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3,
      "Errorlog" : "line 140:32 token recognition error at: '\\s'\nline 146:32 token recognition error at: '\\s'\n"
    },
    "src/third-party/libssh2/sources/cmake/CheckFunctionExistsMayNeedLibrary.cmake" : {
      "ObjectId" : "8ac61abe5ee76dfdf499a374489de6e18a9f4c15",
      "LastModified" : "2019-01-04T06:44:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2014 Alexander Lamaison <alexander.lamaison@gmail.com>\n\n#\n\n# Redistribution and use in source and binary forms,\n\n# with or without modification, are permitted provided\n\n# that the following conditions are met:\n\n#\n\n#   Redistributions of source code must retain the above\n\n#   copyright notice, this list of conditions and the\n\n#   following disclaimer.\n\n#\n\n#   Redistributions in binary form must reproduce the above\n\n#   copyright notice, this list of conditions and the following\n\n#   disclaimer in the documentation and/or other materials\n\n#   provided with the distribution.\n\n#\n\n#   Neither the name of the copyright holder nor the names\n\n#   of any other contributors may be used to endorse or\n\n#   promote products derived from this software without\n\n#   specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND\n\n# CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n\n# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n\n# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n\n# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n\n# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n\n# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\n# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\n\n# USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY\n\n# OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - check_function_exists_maybe_need_library(<function> <var> [lib1 ... libn])\n\n#\n\n# Check if function is available for linking, first without extra libraries, and\n\n# then, if not found that way, linking in each optional library as well.  This\n\n# function is similar to autotools AC_SEARCH_LIBS.\n\n#\n\n# If the function if found, this will define <var>.\n\n#\n\n# If the function was only found by linking in an additional library, this\n\n# will define NEED_LIB_LIBX, where LIBX is the one of lib1 to libn that\n\n# makes the function available, in uppercase.\n\n#\n\n# The following variables may be set before calling this macro to\n\n# modify the way the check is run:\n\n#\n\n#  CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n#  CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n#  CMAKE_REQUIRED_INCLUDES = list of include directories\n\n#  CMAKE_REQUIRED_LIBRARIES = list of libraries to link\n\n#\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use new variable to prevent cache from previous step shortcircuiting\n\n# new test\n",
        "Line" : 68,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 3
    },
    "src/third-party/libssh2/sources/cmake/CheckNonblockingSocketSupport.cmake" : {
      "ObjectId" : "74f4776a689f1be329aa6e94380961636e665288",
      "LastModified" : "2019-01-04T06:44:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - check_nonblocking_socket_support()\n\n#\n\n# Check for how to set a socket to non-blocking state. There seems to exist\n\n# four known different ways, with the one used almost everywhere being POSIX\n\n# and XPG3, while the other different ways for different systems (old BSD,\n\n# Windows and Amiga).\n\n#\n\n# One of the following variables will be set indicating the supported\n\n# method (if any):\n\n#   HAVE_O_NONBLOCK\n\n#   HAVE_FIONBIO\n\n#   HAVE_IOCTLSOCKET\n\n#   HAVE_IOCTLSOCKET_CASE\n\n#   HAVE_SO_NONBLOCK\n\n#   HAVE_DISABLED_NONBLOCKING\n\n#\n\n# The following variables may be set before calling this macro to\n\n# modify the way the check is run:\n\n#\n\n#  CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n#  CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n#  CMAKE_REQUIRED_INCLUDES = list of include directories\n\n#  CMAKE_REQUIRED_LIBRARIES = list of libraries to link\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# There are two known platforms (AIX 3.x and SunOS 4.1.x) where the\n\n# O_NONBLOCK define is found but does not work.\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# No non-blocking socket method found\n",
        "Line" : 112,
        "CharPositionInLine" : 5
      },
      "CommentCount" : 3
    },
    "src/third-party/libssh2/sources/cmake/CopyRuntimeDependencies.cmake" : {
      "ObjectId" : "083f762686b29c2a425acb123d095741ee6ba1a9",
      "LastModified" : "2019-01-04T06:44:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2014 Alexander Lamaison <alexander.lamaison@gmail.com>\n\n#\n\n# Redistribution and use in source and binary forms,\n\n# with or without modification, are permitted provided\n\n# that the following conditions are met:\n\n#\n\n#   Redistributions of source code must retain the above\n\n#   copyright notice, this list of conditions and the\n\n#   following disclaimer.\n\n#\n\n#   Redistributions in binary form must reproduce the above\n\n#   copyright notice, this list of conditions and the following\n\n#   disclaimer in the documentation and/or other materials\n\n#   provided with the distribution.\n\n#\n\n#   Neither the name of the copyright holder nor the names\n\n#   of any other contributors may be used to endorse or\n\n#   promote products derived from this software without\n\n#   specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND\n\n# CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n\n# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n\n# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n\n# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n\n# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n\n# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\n# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\n\n# USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY\n\n# OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Using a custom target to drive custom commands stops multiple\n\n# parallel builds trying to kick off the commands at the same time\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Make directory first otherwise file is copied in place of\n\n# directory instead of into it\n",
        "Line" : 62,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 3
    },
    "src/third-party/libssh2/sources/cmake/FindLibgcrypt.cmake" : {
      "ObjectId" : "44a79873d654441d70f9e5df8abb5cd2beb4da57",
      "LastModified" : "2019-01-04T06:44:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2014 Alexander Lamaison <alexander.lamaison@gmail.com>\n\n#\n\n# Redistribution and use in source and binary forms,\n\n# with or without modification, are permitted provided\n\n# that the following conditions are met:\n\n#\n\n#   Redistributions of source code must retain the above\n\n#   copyright notice, this list of conditions and the\n\n#   following disclaimer.\n\n#\n\n#   Redistributions in binary form must reproduce the above\n\n#   copyright notice, this list of conditions and the following\n\n#   disclaimer in the documentation and/or other materials\n\n#   provided with the distribution.\n\n#\n\n#   Neither the name of the copyright holder nor the names\n\n#   of any other contributors may be used to endorse or\n\n#   promote products derived from this software without\n\n#   specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND\n\n# CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n\n# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n\n# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n\n# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n\n# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n\n# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\n# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\n\n# USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY\n\n# OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Try to find Libgcrypt\n\n# This will define all or none of:\n\n#  LIBGCRYPT_FOUND - if Libgcrypt headers and library was found\n\n#  LIBGCRYPT_INCLUDE_DIRS - The Libgcrypt include directories\n\n#  LIBGCRYPT_LIBRARIES - The libraries needed to use Libgcrypt\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/third-party/libssh2/sources/cmake/SocketLibraries.cmake" : {
      "ObjectId" : "bfbbd711e34316600d6e2a8e80c7a61dde8ef9af",
      "LastModified" : "2019-01-04T06:44:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2014 Alexander Lamaison <alexander.lamaison@gmail.com>\n\n#\n\n# Redistribution and use in source and binary forms,\n\n# with or without modification, are permitted provided\n\n# that the following conditions are met:\n\n#\n\n#   Redistributions of source code must retain the above\n\n#   copyright notice, this list of conditions and the\n\n#   following disclaimer.\n\n#\n\n#   Redistributions in binary form must reproduce the above\n\n#   copyright notice, this list of conditions and the following\n\n#   disclaimer in the documentation and/or other materials\n\n#   provided with the distribution.\n\n#\n\n#   Neither the name of the copyright holder nor the names\n\n#   of any other contributors may be used to endorse or\n\n#   promote products derived from this software without\n\n#   specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND\n\n# CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n\n# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n\n# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n\n# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n\n# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n\n# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\n# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\n\n# USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY\n\n# OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Some systems have their socket functions in a library.\n\n# (Solaris -lsocket/-lnsl, Windows -lws2_32).  This macro appends those\n\n# libraries to the given list\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# x86 Windows uses STDCALL for these functions, so their names are mangled,\n\n# meaning the platform checks don't work. Hardcoding these until we get\n\n# a better solution.\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "src/third-party/libssh2/sources/cmake/Toolchain-Linux-32.cmake" : {
      "ObjectId" : "6aad9b1e2d6f190446fcdb48145b9a2cf666ae1d",
      "LastModified" : "2019-01-04T06:44:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2014 Alexander Lamaison <alexander.lamaison@gmail.com>\n\n#\n\n# Redistribution and use in source and binary forms,\n\n# with or without modification, are permitted provided\n\n# that the following conditions are met:\n\n#\n\n#   Redistributions of source code must retain the above\n\n#   copyright notice, this list of conditions and the\n\n#   following disclaimer.\n\n#\n\n#   Redistributions in binary form must reproduce the above\n\n#   copyright notice, this list of conditions and the following\n\n#   disclaimer in the documentation and/or other materials\n\n#   provided with the distribution.\n\n#\n\n#   Neither the name of the copyright holder nor the names\n\n#   of any other contributors may be used to endorse or\n\n#   promote products derived from this software without\n\n#   specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND\n\n# CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n\n# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n\n# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n\n# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n\n# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n\n# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\n# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\n\n# USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY\n\n# OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Cross-compile 32-bit binary on 64-bit linux host\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/third-party/libssh2/sources/cmake/max_warnings.cmake" : {
      "ObjectId" : "b176d302d3a66909fd45893be9a38f917365db74",
      "LastModified" : "2019-01-04T06:44:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use the highest warning level for visual studio.\n",
        "Line" : 2,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Disable broken warnings\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "src/third-party/libssh2/sources/docs/CMakeLists.txt" : {
      "ObjectId" : "3e9d165ef84a232a944130f6e654901029bfea36",
      "LastModified" : "2019-01-04T06:44:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2014 Alexander Lamaison <alexander.lamaison@gmail.com>\n\n#\n\n# Redistribution and use in source and binary forms,\n\n# with or without modification, are permitted provided\n\n# that the following conditions are met:\n\n#\n\n#   Redistributions of source code must retain the above\n\n#   copyright notice, this list of conditions and the\n\n#   following disclaimer.\n\n#\n\n#   Redistributions in binary form must reproduce the above\n\n#   copyright notice, this list of conditions and the following\n\n#   disclaimer in the documentation and/or other materials\n\n#   provided with the distribution.\n\n#\n\n#   Neither the name of the copyright holder nor the names\n\n#   of any other contributors may be used to endorse or\n\n#   promote products derived from this software without\n\n#   specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND\n\n# CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n\n# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n\n# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n\n# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n\n# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n\n# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\n# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\n\n# USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY\n\n# OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/third-party/libssh2/sources/docs/Makefile.am" : {
      "ObjectId" : "56f0926fcbaa7b275bec17690ed91c4cb9cb71ab",
      "LastModified" : "2019-01-04T06:44:05Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# $Id: Makefile.am,v 1.37 2009/03/26 15:41:15 bagder Exp $\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/third-party/libssh2/sources/example/CMakeLists.txt" : {
      "ObjectId" : "f77033f75c9b5b8888102975e4a7dc484c0d4903",
      "LastModified" : "2019-01-04T06:44:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2014, 2015 Alexander Lamaison <alexander.lamaison@gmail.com>\n\n#\n\n# Redistribution and use in source and binary forms,\n\n# with or without modification, are permitted provided\n\n# that the following conditions are met:\n\n#\n\n#   Redistributions of source code must retain the above\n\n#   copyright notice, this list of conditions and the\n\n#   following disclaimer.\n\n#\n\n#   Redistributions in binary form must reproduce the above\n\n#   copyright notice, this list of conditions and the following\n\n#   disclaimer in the documentation and/or other materials\n\n#   provided with the distribution.\n\n#\n\n#   Neither the name of the copyright holder nor the names\n\n#   of any other contributors may be used to endorse or\n\n#   promote products derived from this software without\n\n#   specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND\n\n# CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n\n# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n\n# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n\n# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n\n# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n\n# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\n# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\n\n# USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY\n\n# OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# to find generated header\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "## Platform checks\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/third-party/libssh2/sources/example/Makefile.am" : {
      "ObjectId" : "5cf5f0714f8fbcbefdc0420ff14c24040c88a8ae",
      "LastModified" : "2019-01-04T06:44:05Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# samples\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/third-party/libssh2/sources/src/CMakeLists.txt" : {
      "ObjectId" : "c29a2d86173ce0f9faefe3680d6e1724ece3e280",
      "LastModified" : "2019-01-04T06:44:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2014 Alexander Lamaison <alexander.lamaison@gmail.com>\n\n#\n\n# Redistribution and use in source and binary forms,\n\n# with or without modification, are permitted provided\n\n# that the following conditions are met:\n\n#\n\n#   Redistributions of source code must retain the above\n\n#   copyright notice, this list of conditions and the\n\n#   following disclaimer.\n\n#\n\n#   Redistributions in binary form must reproduce the above\n\n#   copyright notice, this list of conditions and the following\n\n#   disclaimer in the documentation and/or other materials\n\n#   provided with the distribution.\n\n#\n\n#   Neither the name of the copyright holder nor the names\n\n#   of any other contributors may be used to endorse or\n\n#   promote products derived from this software without\n\n#   specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND\n\n# CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n\n# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n\n# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n\n# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n\n# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n\n# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\n# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\n\n# USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY\n\n# OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Cryptography backend choice\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If the crypto backend was given, rather than searching for the first\n\n# we are able to find, the find_package commands must abort configuration\n\n# and report to the user.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Statically linking to OpenSSL requires crypt32 for some Windows APIs.\n\n# This should really be handled by FindOpenSSL.cmake.\n",
        "Line" : 74,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# Not all OpenSSL have AES-CTR functions.\n",
        "Line" : 102,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# The check actually compiles the header.  This requires windows.h.\n",
        "Line" : 126,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Reading keys from files is optional and depends on Wincrypt\n",
        "Line" : 141,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "## Library definition\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# we want it to be called libssh2 on all platforms\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## Options\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable debugging logging by default if the user configured a debug build\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## Platform checks\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Try _strtoi64 if strtoll isn't available\n",
        "Line" : 291,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# poll() does not work on these platforms\n\n#\n\n# Interix: \"does provide poll(), but the implementing developer must\n\n# have been in a bad mood, because poll() only works on the /proc\n\n# filesystem here\"\n\n#\n\n# Mac OS X's poll has funny behaviors, like:\n\n# not being able to do poll on no fildescriptors (10.3?)\n\n# not being able to poll on some files (like anything in /dev)\n\n# not having reliable timeout support\n\n# inconsistent return of POLLHUP where other implementations give POLLIN\n",
        "Line" : 298,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Non-blocking socket support tests.  Must be after after library tests to\n\n# link correctly\n",
        "Line" : 316,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# to find generated header\n",
        "Line" : 326,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Check for the OS.\n\n# Daniel's note: this should not be necessary and we need to work to\n\n# get this removed.\n",
        "Line" : 329,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Fall back to over-linking dependencies\n",
        "Line" : 339,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "## Installation\n",
        "Line" : 345,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Package config\n",
        "Line" : 366,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## During package installation, install Libssh2Config.cmake\n",
        "Line" : 368,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "## During build, register directly from build tree\n\n# create Libssh2Config.cmake\n",
        "Line" : 373,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# register it\n",
        "Line" : 376,
        "CharPositionInLine" : 24
      },
      "23" : {
        "Text" : "## Export a .pc file for client projects not using CMaek\n",
        "Line" : 378,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "## Versioning\n",
        "Line" : 390,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "src/third-party/libssh2/sources/src/Makefile.am" : {
      "ObjectId" : "1334c5528f2250820d778757a890dce46a1cbeab",
      "LastModified" : "2019-01-04T06:44:05Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# $Id: Makefile.am,v 1.21 2009/05/07 17:21:56 bagder Exp $\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Get the CRYPTO_CSOURCES and CRYPTO_HHEADERS defines\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Makefile.inc provides the CSOURCES and HHEADERS defines\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# srcdir/include for the shipped headers\n\n# builddir/src for the generated config header when building out of the source\n\n# tree\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This flag accepts an argument of the form current[:revision[:age]]. So,\n\n# passing -version-info 3:12:1 sets current to 3, revision to 12, and age to\n\n# 1.\n\n#\n\n# If either revision or age are omitted, they default to 0. Also note that age\n\n# must be less than or equal to the current interface number.\n\n#\n\n# Here are a set of rules to help you update your library version information:\n\n#\n\n# 1.Start with version information of 0:0:0 for each libtool library.\n\n#\n\n# 2.Update the version information only immediately before a public release of\n\n# your software. More frequent updates are unnecessary, and only guarantee\n\n# that the current interface number gets larger faster.\n\n#\n\n# 3.If the library source code has changed at all since the last update, then\n\n# increment revision (c:r+1:a)\n\n#\n\n# 4.If any interfaces have been added, removed, or changed since the last\n\n# update, increment current, and set revision to 0. (c+1:r=0:a)\n\n#\n\n# 5.If any interfaces have been added since the last public release, then\n\n# increment age. (c:r:a+1)\n\n#\n\n# 6.If any interfaces have been removed since the last public release, then\n\n# set age to 0. (c:r:a=0)\n\n#\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/third-party/libssh2/sources/tests/CMakeLists.txt" : {
      "ObjectId" : "90733eaf33a58dd234b53cba4a1b3f9859a38d96",
      "LastModified" : "2019-01-04T06:44:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2014, 2015 Alexander Lamaison <alexander.lamaison@gmail.com>\n\n#\n\n# Redistribution and use in source and binary forms,\n\n# with or without modification, are permitted provided\n\n# that the following conditions are met:\n\n#\n\n#   Redistributions of source code must retain the above\n\n#   copyright notice, this list of conditions and the\n\n#   following disclaimer.\n\n#\n\n#   Redistributions in binary form must reproduce the above\n\n#   copyright notice, this list of conditions and the following\n\n#   disclaimer in the documentation and/or other materials\n\n#   provided with the distribution.\n\n#\n\n#   Neither the name of the copyright holder nor the names\n\n#   of any other contributors may be used to endorse or\n\n#   promote products derived from this software without\n\n#   specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND\n\n# CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n\n# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n\n# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n\n# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n\n# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n\n# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\n# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\n\n# USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY\n\n# OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Platform checks\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO convert mansyntax.sh into CMake script.\n\n# XXX Just because we can find all three programs, doesn't mean sh can\n\n# find man and grep\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/third-party/libssh2/sources/tests/Makefile.am" : {
      "ObjectId" : "67854ccc05d7e85d018a0c003f9f9a3387d7bc71",
      "LastModified" : "2019-01-04T06:44:05Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/third-party/qjson/CMakeLists.txt" : {
      "ObjectId" : "6eda68f9f065e7e30d772c07385edac64e5b2586",
      "LastModified" : "2019-01-04T06:44:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Automatically generate code for Qt moc, uic and rcc files\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Project uses autogenerated code that have \"register\" variables\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "src/third-party/qjson/sources/CMakeLists.txt" : {
      "ObjectId" : "64e6ee0b1147e276e1b824549947be40ca95db01",
      "LastModified" : "2019-01-04T06:44:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Force cmake 2.8.8 in order to have a decent support of Qt5\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Do not link against qtmain on Windows\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Ability to disable verbose debug output\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# On Windows debug library should have 'd' postfix.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# BUILD_SHARED_LIBS is cmake variable. Need to change default value.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Don't use absolute path in qjson-targets-*.cmake\n\n# (This will have no effect with CMake < 2.8)\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Tell CMake to run moc when necessary:\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# As moc files are generated in the binary dir, tell CMake\n\n# to always look for includes there:\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Find Qt4\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Include the cmake file needed to use qt4\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#add extra search paths for libraries and includes\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# pkg-config\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Subdirs\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# figure out the relative path from the installed Config.cmake file to the install prefix (which may be at\n\n# runtime different from the chosen CMAKE_INSTALL_PREFIX if under Windows the package was installed anywhere)\n\n# This relative path will be configured into the QJSONConfig.cmake\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# cmake-modules\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "src/third-party/qjson/sources/src/CMakeLists.txt" : {
      "ObjectId" : "0ae7c406412b241c410bbb578cc82fcbad5e3971",
      "LastModified" : "2019-01-04T06:44:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add_custom_command (OUTPUT ${qjson_SOURCE_DIR}/lib/json_parser.cc\n\n#                    PRE_BUILD\n\n#                    COMMAND bison -t -o json_parser.cc -d json_parser.yy\n\n#                    DEPENDS json_parser.yy\n\n#                    WORKING_DIRECTORY ${qjson_SOURCE_DIR}/lib/\n\n#                    )\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# To regenerate json_scanner.cc use:\n\n# flex json_scanner.yy\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Required to use the intree copy of FlexLexer.h\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Special hack to fix scanner test compilation on Windows\n\n# JsonScanner class is not for export. So need to make static\n\n# lib what can be compiled against scanner test.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/third-party/qjson/sources/tests/CMakeLists.txt" : {
      "ObjectId" : "dab0cdca83471dbf6cf5e100f7038fe0a5a38d20",
      "LastModified" : "2019-01-04T06:44:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/third-party/qjson/sources/tests/benchmarks/CMakeLists.txt" : {
      "ObjectId" : "9132309b2ea9f77abc060741fdaa516caac4c3cd",
      "LastModified" : "2019-01-04T06:44:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##### Probably don't want to edit below this line #####\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Include the library include directories, and the current build directory (moc)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Build the tests\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# produce XML output\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "src/third-party/qjson/sources/tests/cmdline_tester/CMakeLists.txt" : {
      "ObjectId" : "12c72cfd3d400cc810a51ea037579775e53bc787",
      "LastModified" : "2019-01-04T06:44:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##### Probably don't want to edit below this line #####\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use it\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Include the library include directories, and the current build directory (moc)\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/third-party/qjson/sources/tests/parser/CMakeLists.txt" : {
      "ObjectId" : "b280a3830b939ecc7483f3f8273cb5b3b7d7686e",
      "LastModified" : "2019-01-04T06:44:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##### Probably don't want to edit below this line #####\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use it\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Include the library include directories, and the current build directory (moc)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Build the tests\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# produce XML output\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "src/third-party/qjson/sources/tests/qobjecthelper/CMakeLists.txt" : {
      "ObjectId" : "e474ffdca5c62f255b895002b3390251df941669",
      "LastModified" : "2019-01-04T06:44:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##### Probably don't want to edit below this line #####\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use it\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Include the library include directories, and the current build directory (moc)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Build the tests\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# produce XML output\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "src/third-party/qjson/sources/tests/scanner/CMakeLists.txt" : {
      "ObjectId" : "e26357751ac83de0305368f5eb5bae2d3eaa5f77",
      "LastModified" : "2019-01-04T06:44:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##### Probably don't want to edit below this line #####\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use it\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Include the library include directories, and the current build directory (moc)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Build the tests\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# produce XML output\n",
        "Line" : 47,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "src/third-party/qjson/sources/tests/serializer/CMakeLists.txt" : {
      "ObjectId" : "7222fc7fad7e64d9f81cf32587ece46c0a6532af",
      "LastModified" : "2019-01-04T06:44:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##### Probably don't want to edit below this line #####\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use it\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Include the library include directories, and the current build directory (moc)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Build the tests\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# produce XML output\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "src/third-party/qscintilla/CMakeLists.txt" : {
      "ObjectId" : "38326736f87800e4be84fa6510efb9227c5cef41",
      "LastModified" : "2019-03-13T13:10:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake script is written according to provided qmake file:\n\n# sources/Qt4Qt4/qscintilla.pro\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Automatically generate code for Qt moc, uic and rcc files\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For some reasons AUTOMOC doesn't work here...\n\n# Doing this manually.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Robo 1.3: To silence CMake warning: \n\n#           \"Policy CMP0071 is not set: Let AUTOMOC and AUTOUIC process GENERATED files.\"\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# We do not need these lexers\n",
        "Line" : 53,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#    sources/Qt4Qt5/qscilexerpov.cpp\n\n#    sources/Qt4Qt5/qscilexercss.cpp\n\n#    sources/Qt4Qt5/qscilexerd.cpp\n\n#    sources/Qt4Qt5/qscilexerspice.cpp\n\n#    sources/Qt4Qt5/qscilexerbash.cpp\n\n#    sources/Qt4Qt5/qscilexerdiff.cpp\n\n#    sources/Qt4Qt5/qscilexerruby.cpp\n\n#    sources/Qt4Qt5/qscilexerpostscript.cpp\n\n#    sources/Qt4Qt5/qscilexerpascal.cpp\n\n#    sources/Qt4Qt5/qscilexerbatch.cpp\n\n#    sources/Qt4Qt5/qscilexerfortran.cpp\n\n#    sources/Qt4Qt5/qscilexercoffeescript.cpp\n\n#    sources/Qt4Qt5/qscilexertcl.cpp\n\n#    sources/Qt4Qt5/qscilexerjava.cpp\n\n#    sources/Qt4Qt5/qscilexercustom.cpp\n\n#    sources/Qt4Qt5/qscilexercsharp.cpp\n\n#    sources/Qt4Qt5/qscilexertex.cpp\n\n#    sources/Qt4Qt5/qscilexerproperties.cpp\n\n#    sources/Qt4Qt5/qscilexeravs.cpp\n\n#    sources/Qt4Qt5/qscilexerpo.cpp\n\n#    sources/Qt4Qt5/qscilexerfortran77.cpp\n\n#    sources/Qt4Qt5/qscilexersql.cpp\n\n#    sources/Qt4Qt5/qscilexerhtml.cpp\n\n#    sources/Qt4Qt5/qscilexerperl.cpp\n\n#    sources/Qt4Qt5/qscilexermatlab.cpp\n\n#    sources/Qt4Qt5/qscilexervhdl.cpp\n\n#    sources/Qt4Qt5/qscilexerpython.cpp\n\n#    sources/Qt4Qt5/qscilexerxml.cpp\n\n#    sources/Qt4Qt5/qscilexeroctave.cpp\n\n#    sources/Qt4Qt5/qscilexerlua.cpp\n\n#    sources/Qt4Qt5/qscilexeridl.cpp\n\n#    sources/Qt4Qt5/qscilexercmake.cpp\n\n#    sources/Qt4Qt5/qscilexerverilog.cpp\n\n#    sources/Qt4Qt5/qscilexeryaml.cpp\n\n#    sources/Qt4Qt5/qscilexermakefile.cpp\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# We do not need these lexers\n",
        "Line" : 111,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#    sources/lexers/LexFlagship.cpp\n\n#    sources/lexers/LexMetapost.cpp\n\n#    sources/lexers/LexOthers.cpp\n\n#    sources/lexers/LexBasic.cpp\n\n#    sources/lexers/LexTxt2tags.cpp\n\n#    sources/lexers/LexDMAP.cpp\n\n#    sources/lexers/LexPB.cpp\n\n#    sources/lexers/LexNsis.cpp\n\n#    sources/lexers/LexLaTeX.cpp\n\n#    sources/lexers/LexProgress.cpp\n\n#    sources/lexers/LexSQL.cpp\n\n#    sources/lexers/LexTADS3.cpp\n\n#    sources/lexers/LexTAL.cpp\n\n#    sources/lexers/LexECL.cpp\n\n#    sources/lexers/LexConf.cpp\n\n#    sources/lexers/LexCSS.cpp\n\n#    sources/lexers/LexHex.cpp\n\n#    sources/lexers/LexPython.cpp\n\n#    sources/lexers/LexRebol.cpp\n\n#    sources/lexers/LexAda.cpp\n\n#    sources/lexers/LexAVS.cpp\n\n#    sources/lexers/LexHaskell.cpp\n\n#    sources/lexers/LexAsm.cpp\n\n#    sources/lexers/LexScriptol.cpp\n\n#    sources/lexers/LexTCMD.cpp\n\n#    sources/lexers/LexR.cpp\n\n#    sources/lexers/LexSML.cpp\n\n#    sources/lexers/LexPLM.cpp\n\n#    sources/lexers/LexBash.cpp\n\n#    sources/lexers/LexTeX.cpp\n\n#    sources/lexers/LexPO.cpp\n\n#    sources/lexers/LexKVIrc.cpp\n\n#    sources/lexers/LexA68k.cpp\n\n#    sources/lexers/LexOScript.cpp\n\n#    sources/lexers/LexGui4Cli.cpp\n\n#    sources/lexers/LexPascal.cpp\n\n#    sources/lexers/LexTACL.cpp\n\n#    sources/lexers/LexMagik.cpp\n\n#    sources/lexers/LexPowerShell.cpp\n\n#    sources/lexers/LexRuby.cpp\n\n#    sources/lexers/LexInno.cpp\n\n#    sources/lexers/LexBibTeX.cpp\n\n#    sources/lexers/LexBaan.cpp\n\n#    sources/lexers/LexCoffeeScript.cpp\n\n#    sources/lexers/LexDMIS.cpp\n\n#    sources/lexers/LexMatlab.cpp\n\n#    sources/lexers/LexLisp.cpp\n\n#    sources/lexers/LexSmalltalk.cpp\n\n#    sources/lexers/LexSpecman.cpp\n\n#    sources/lexers/LexCOBOL.cpp\n\n#    sources/lexers/LexMarkdown.cpp\n\n#    sources/lexers/LexMySQL.cpp\n\n#    sources/lexers/LexVerilog.cpp\n\n#    sources/lexers/LexASY.cpp\n\n#    sources/lexers/LexMPT.cpp\n\n#    sources/lexers/LexCLW.cpp\n\n#    sources/lexers/LexKix.cpp\n\n#    sources/lexers/LexAVE.cpp\n\n#    sources/lexers/LexVB.cpp\n\n#    sources/lexers/LexPowerPro.cpp\n\n#    sources/lexers/LexAU3.cpp\n\n#    sources/lexers/LexBullant.cpp\n\n#    sources/lexers/LexTCL.cpp\n\n#    sources/lexers/LexCsound.cpp\n\n#    sources/lexers/LexNimrod.cpp\n\n#    sources/lexers/LexHTML.cpp\n\n#    sources/lexers/LexPOV.cpp\n\n#    sources/lexers/LexOpal.cpp\n\n#    sources/lexers/LexSpice.cpp\n\n#    sources/lexers/LexModula.cpp\n\n#    sources/lexers/LexRegistry.cpp\n\n#    sources/lexers/LexFortran.cpp\n\n#    sources/lexers/LexErlang.cpp\n\n#    sources/lexers/LexCrontab.cpp\n\n#    sources/lexers/LexMSSQL.cpp\n\n#    sources/lexers/LexPerl.cpp\n\n#    sources/lexers/LexLua.cpp\n\n#    sources/lexers/LexYAML.cpp\n\n#    sources/lexers/LexEiffel.cpp\n\n#    sources/lexers/LexAbaqus.cpp\n\n#    sources/lexers/LexAPDL.cpp\n\n#    sources/lexers/LexSTTXT.cpp\n\n#    sources/lexers/LexLout.cpp\n\n#    sources/lexers/LexForth.cpp\n\n#    sources/lexers/LexCmake.cpp\n\n#    sources/lexers/LexRust.cpp\n\n#    sources/lexers/LexCaml.cpp\n\n#    sources/lexers/LexVisualProlog.cpp\n\n#    sources/lexers/LexVHDL.cpp\n\n#    sources/lexers/LexEScript.cpp\n\n#    sources/lexers/LexAsn1.cpp\n\n#    sources/lexers/LexSorcus.cpp\n\n#    sources/lexers/LexGAP.cpp\n\n#    sources/lexers/LexMMIXAL.cpp\n\n#    sources/lexers/LexD.cpp\n\n#    sources/lexers/LexPS.cpp\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Project produces three types of warnings that are all not critical.\n\n# We are turning them off to remove noise\n",
        "Line" : 257,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Suppress the following warning: MacPasteboardMime.obj : warning LNK4221: This object\n\n# file does not define any previously undefined public symbols, so it will not be used\n\n# by any link operation that consumes this library\n",
        "Line" : 264,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 10
    },
    "src/third-party/qscintilla/sources/Qt3/qscintilla.pro" : {
      "ObjectId" : "0ec61268b99cc4ee3ca1fb6666940023217e8a0e",
      "LastModified" : "2019-01-04T06:44:05Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# The project file for the QScintilla library.\n\n#\n\n# Copyright (c) 2014 Riverbank Computing Limited <info@riverbankcomputing.com>\n\n# \n\n# This file is part of QScintilla.\n\n# \n\n# This file may be used under the terms of the GNU General Public\n\n# License versions 2.0 or 3.0 as published by the Free Software\n\n# Foundation and appearing in the files LICENSE.GPL2 and LICENSE.GPL3\n\n# included in the packaging of this file.  Alternatively you may (at\n\n# your option) use any later version of the GNU General Public\n\n# License if such license has been publicly approved by Riverbank\n\n# Computing Limited (or its successors, if any) and the KDE Free Qt\n\n# Foundation. In addition, as a special exception, Riverbank gives you\n\n# certain additional rights. These rights are described in the Riverbank\n\n# GPL Exception version 1.1, which can be found in the file\n\n# GPL_EXCEPTION.txt in this package.\n\n# \n\n# If you are unsure which license is appropriate for your use, please\n\n# contact the sales department at sales@riverbankcomputing.com.\n\n# \n\n# This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE\n\n# WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This must be kept in sync with Python/configure.py, Python/configure-old.py,\n\n# example-Qt4Qt5/application.pro and designer-Qt4Qt5/designer.pro.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Work around QTBUG-39300.\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Comment this in if you want the internal Scintilla classes to be placed in a\n\n# Scintilla namespace rather than pollute the global namespace.\n\n#DEFINES += SCI_NAMESPACE\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Handle both Qt v4 and v3.\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/third-party/qscintilla/sources/Qt4Qt5/qscintilla.pro" : {
      "ObjectId" : "0ec61268b99cc4ee3ca1fb6666940023217e8a0e",
      "LastModified" : "2019-01-04T06:44:05Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# The project file for the QScintilla library.\n\n#\n\n# Copyright (c) 2014 Riverbank Computing Limited <info@riverbankcomputing.com>\n\n# \n\n# This file is part of QScintilla.\n\n# \n\n# This file may be used under the terms of the GNU General Public\n\n# License versions 2.0 or 3.0 as published by the Free Software\n\n# Foundation and appearing in the files LICENSE.GPL2 and LICENSE.GPL3\n\n# included in the packaging of this file.  Alternatively you may (at\n\n# your option) use any later version of the GNU General Public\n\n# License if such license has been publicly approved by Riverbank\n\n# Computing Limited (or its successors, if any) and the KDE Free Qt\n\n# Foundation. In addition, as a special exception, Riverbank gives you\n\n# certain additional rights. These rights are described in the Riverbank\n\n# GPL Exception version 1.1, which can be found in the file\n\n# GPL_EXCEPTION.txt in this package.\n\n# \n\n# If you are unsure which license is appropriate for your use, please\n\n# contact the sales department at sales@riverbankcomputing.com.\n\n# \n\n# This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE\n\n# WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This must be kept in sync with Python/configure.py, Python/configure-old.py,\n\n# example-Qt4Qt5/application.pro and designer-Qt4Qt5/designer.pro.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Work around QTBUG-39300.\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Comment this in if you want the internal Scintilla classes to be placed in a\n\n# Scintilla namespace rather than pollute the global namespace.\n\n#DEFINES += SCI_NAMESPACE\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Handle both Qt v4 and v3.\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/third-party/qscintilla/sources/designer-Qt3/designer.pro" : {
      "ObjectId" : "afca51807f2afb196b791ed19742b9a4f0bcfa4e",
      "LastModified" : "2019-01-04T06:44:05Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# This is the qmake file for the QScintilla plugin for Qt Designer.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/third-party/qscintilla/sources/designer-Qt4Qt5/designer.pro" : {
      "ObjectId" : "e3432ff461513791824874792d96226e1a956aaf",
      "LastModified" : "2019-01-04T06:44:05Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# This is the qmake file for the QScintilla plugin for Qt Designer.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Work around QTBUG-39300.\n",
        "Line" : 12,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "src/third-party/qscintilla/sources/example-Qt3/application.pro" : {
      "ObjectId" : "4437361528a9712da3603cfc92599becfd1e4bf4",
      "LastModified" : "2019-01-04T06:44:05Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "src/third-party/qscintilla/sources/example-Qt4Qt5/application.pro" : {
      "ObjectId" : "0d38c13b5b02b3a4bfdf0cceb7fecf2d21fe6898",
      "LastModified" : "2019-01-04T06:44:05Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "trash/CMakeLists.txt" : {
      "ObjectId" : "7f54501388fdb35d6ceb4e5e9d335c5a88b18a4f",
      "LastModified" : "2019-01-04T06:44:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###\n\n# Settings\n\n#\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Configure project\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Options\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search libraries\n\n# use Qt\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##################### Libraries search ###################\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#for libqxcb\n",
        "Line" : 105,
        "CharPositionInLine" : 66
      },
      "6" : {
        "Text" : "##########################################################\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#amd64\n",
        "Line" : 133,
        "CharPositionInLine" : 33
      },
      "8" : {
        "Text" : "#-DCMAKE_OSX_ARCHITECTURES= ;i386\n",
        "Line" : 149,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "##################################DEFAULT VALUES##########################################\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "############################################################################\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# project sources\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#CPACK_DEBIAN_PACKAGE_DESCRIPTION CPACK_RPM_PACKAGE_SUMMARY\n",
        "Line" : 190,
        "CharPositionInLine" : 120
      },
      "13" : {
        "Text" : "#CPACK_RPM_PACKAGE_DESCRIPTION\n",
        "Line" : 191,
        "CharPositionInLine" : 56
      },
      "14" : {
        "Text" : "#CPACK_RPM_PACKAGE_VENDOR\n",
        "Line" : 196,
        "CharPositionInLine" : 52
      },
      "15" : {
        "Text" : "#CPACK_DEBIAN_PACKAGE_MAINTAINER\n",
        "Line" : 197,
        "CharPositionInLine" : 45
      },
      "16" : {
        "Text" : "#CPACK_DEBIAN_PACKAGE_VERSION CPACK_RPM_PACKAGE_VERSION\n",
        "Line" : 206,
        "CharPositionInLine" : 61
      },
      "17" : {
        "Text" : "#CPACK_DEBIAN_PACKAGE_NAME CPACK_RPM_PACKAGE_NAME\n",
        "Line" : 207,
        "CharPositionInLine" : 43
      },
      "18" : {
        "Text" : "#out package name\n",
        "Line" : 208,
        "CharPositionInLine" : 102
      },
      "19" : {
        "Text" : "# There is a bug in NSI that does not handle full unix paths properly. Make\n\n# sure there is at least one set of four (4) backlasshes.\n\n#SET(CPACK_NSIS_MODIFY_PATH ON)\n",
        "Line" : 220,
        "CharPositionInLine" : 12
      },
      "20" : {
        "Text" : "#SET(CPACK_OSX_PACKAGE_VERSION \"10.5\")\n",
        "Line" : 241,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "#SET(UBUNTU_LP_BUG 300472)\n\n#SET(CPACK_STRIP_FILES \"bin/${PROJECT_NAME}\")\n\n#SET(CPACK_SOURCE_STRIP_FILES \"\")\n",
        "Line" : 244,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "#CPACK_RPM_PACKAGE_ARCHITECTURE CPACK_RPM_PACKAGE_LICENSE CPACK_RPM_PACKAGE_DESCRIPTION CPACK_RPM_SPEC_INSTALL_POST\n\n#SET(CPACK_PACKAGE_RELEASE 1)\n",
        "Line" : 260,
        "CharPositionInLine" : 12
      },
      "23" : {
        "Text" : "#SET(CPACK_RPM_PACKAGE_AUTOREQPROV \"yes\")\n",
        "Line" : 263,
        "CharPositionInLine" : 12
      },
      "24" : {
        "Text" : "#CPACK_DEBIAN_PACKAGE_HOMEPAGE The URL of the web site for this package\n",
        "Line" : 277,
        "CharPositionInLine" : 12
      },
      "25" : {
        "Text" : "#input our section\n",
        "Line" : 280,
        "CharPositionInLine" : 56
      },
      "26" : {
        "Text" : "#i386\n",
        "Line" : 283,
        "CharPositionInLine" : 71
      },
      "CommentCount" : 27
    },
    "trash/cmake/FindOpenSSL.cmake" : {
      "ObjectId" : "6e4e53cf9aada7f1e28d0bbbbc2fc101b9abfe6b",
      "LastModified" : "2019-01-04T06:44:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the OpenSSL encryption library\n\n# Once done this will define\n\n#\n\n#  OPENSSL_ROOT_DIR - Set this variable to the root installation of OpenSSL\n\n#\n\n# Read-Only variables:\n\n#  OPENSSL_FOUND - system has the OpenSSL library\n\n#  OPENSSL_INCLUDE_DIR - the OpenSSL include directory\n\n#  OPENSSL_LIBRARIES - The libraries needed to use OpenSSL\n\n#  OPENSSL_VERSION - This is set to $major.$minor.$revision$path (eg. 0.9.8s)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2006-2009 Kitware, Inc.\n\n# Copyright 2006 Alexander Neundorf <neundorf@kde.org>\n\n# Copyright 2009-2011 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# http://www.slproweb.com/products/Win32OpenSSL.html\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# /MD and /MDd are the standard values - if someone wants to use\n\n# others, the libnames have to change here too\n\n# use also ssl and ssleay32 in debug as fallback for openssl < 0.9.8b\n\n# TODO: handle /MT and static lib\n\n# In Visual C++ naming convention each of these four kinds of Windows libraries has it's standard suffix:\n\n#   * MD for dynamic-release\n\n#   * MDd for dynamic-debug\n\n#   * MT for static-release\n\n#   * MTd for static-debug\n",
        "Line" : 73,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Implementation details:\n\n# We are using the libraries located in the VC subdir instead of the parent directory eventhough :\n\n# libeay32MD.lib is identical to ../libeay32.lib, and\n\n# ssleay32MD.lib is identical to ../ssleay32.lib\n",
        "Line" : 83,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# same player, for MinGW\n",
        "Line" : 143,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Not sure what to pick for -say- intel, let's use the toplevel ones and hope someone report issues:\n",
        "Line" : 173,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#zlib \n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Normal search.\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Try each search configuration.\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# compat defines\n",
        "Line" : 267,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# The version number is encoded as 0xMNNFFPPS: major minor fix patch status\n\n# The status gives if this is a developer or prerelease and is ignored here.\n\n# Major, minor, and fix directly translate into the version numbers shown in\n\n# the string. The patch field translates to the single character suffix that\n\n# indicates the bug fix state, which 00 -> nothing, 01 -> a, 02 -> b and so\n\n# on.\n",
        "Line" : 312,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# 96 is the ASCII code of 'a' minus 1\n",
        "Line" : 330,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# Once anyone knows how OpenSSL would call the patch versions beyond 'z'\n\n# this should be updated to handle that, too. This has not happened yet\n\n# so it is simply ignored here for now.\n",
        "Line" : 333,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 14
    },
    "trash/cmake/config.cmake" : {
      "ObjectId" : "e8047eed88c31ef0eb5945a756ba26a4ddb6d08e",
      "LastModified" : "2019-01-04T06:44:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#SET(OPENSSL_LIBS optimized ${LIB_EAY_RELEASE} debug ${LIB_EAY_DEBUG} optimized ${SSL_EAY_RELEASE} debug ${SSL_EAY_DEBUG})\n",
        "Line" : 31,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 1
    },
    "trash/cmake/integrate-boost.cmake" : {
      "ObjectId" : "6ee2b24aa0766702fc35239c6995d0f74d343ddd",
      "LastModified" : "2019-01-04T06:44:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Save the BOOST_ROOT in the cache\n",
        "Line" : 12,
        "CharPositionInLine" : 12
      },
      "1" : {
        "Text" : "# if(NOT BOOST_ROOT )\n\n#    MESSAGE( WARNING \"Please set the BOOST_ROOT environment variable.\" )\n\n# endif(NOT BOOST_ROOT )\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "trash/cmake/integrate-qt.cmake" : {
      "ObjectId" : "6b4ee362a03aa437740ed6fd35ea9c235027e474",
      "LastModified" : "2019-01-04T06:44:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#trying to search lib with suffix 5\n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# try to find debug version of library \n",
        "Line" : 28,
        "CharPositionInLine" : 33
      },
      "2" : {
        "Text" : "#SET(LIBS_TO_FIXUP ${LIB_DIST}/${dir} ${LIBS_TO_FIXUP})\n\n#STRING(REPLACE \"${QT_IMAGEFORMATS_PLUGINS_DIR}\" \"${CMAKE_INSTALL_PREFIX}/${PROJECT_NAME}.app/Contents/MacOS/imageformats\" \n\n#    QT_IMAGEFORMATS_PLUGIN_LOCAL ${QT_${PLUGIN}_PLUGIN_DEBUG}\n\n#    )\n\n#LIST(APPEND BUNDLE_LIBRARIES_MOVE ${QT_IMAGEFORMATS_PLUGIN_LOCAL})\n",
        "Line" : 46,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "#STRING(REGEX REPLACE \"Qt5\" \"\" COMPONENT_SHORT_NAME ${qtComponent})\n\n#set(QT_MODULES_TO_USE ${QT_MODULES_TO_USE} ${COMPONENT_SHORT_NAME})\n",
        "Line" : 149,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# repeat this for every debug/optional package\n",
        "Line" : 168,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#checking is Qt dynamic or statis version will be used\n",
        "Line" : 185,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# message(\"searching ${QTCORE_DLL_NAME_WE}.${DLL_EXT} in \" ${QT_LIB_PATH} ${QT_LIB_PATH}/../bin)\n",
        "Line" : 191,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# use jscore\n",
        "Line" : 209,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# end of use jscore\n",
        "Line" : 223,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "##############################################################################\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# TODO: check this code @ MAC and *ux\n",
        "Line" : 266,
        "CharPositionInLine" : 16
      },
      "11" : {
        "Text" : "# Qt5\n",
        "Line" : 275,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# Visual studio install\n",
        "Line" : 296,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Make install\n",
        "Line" : 306,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "#eliminate symlinks\n",
        "Line" : 316,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# from lib to bin\n",
        "Line" : 329,
        "CharPositionInLine" : 52
      },
      "CommentCount" : 16
    },
    "trash/cmake/projecthelper.cmake" : {
      "ObjectId" : "4f052273d83e83add6d00f14455ad7106e154688",
      "LastModified" : "2019-01-04T06:44:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set default target to build (under win32 its allows console debug)\n",
        "Line" : 2,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# do not define min() and max()\n",
        "Line" : 18,
        "CharPositionInLine" : 19
      },
      "2" : {
        "Text" : "#-D__STDC_CONSTANT_MACROS\n\n#-DWIN32_LEAN_AND_MEAN # remove obsolete things from windows headers\n",
        "Line" : 22,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "#/Gr # fastcall\n",
        "Line" : 52,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : "# function level linking\n\n# string pooling\n\n# whole program optimization\n",
        "Line" : 53,
        "CharPositionInLine" : 16
      },
      "5" : {
        "Text" : "#/FR # disable browserable info\n",
        "Line" : 56,
        "CharPositionInLine" : 12
      },
      "6" : {
        "Text" : "# intrinsic functions\n\n# fast code\n",
        "Line" : 57,
        "CharPositionInLine" : 16
      },
      "7" : {
        "Text" : "# inline expansion\n\n# full optimization\n",
        "Line" : 59,
        "CharPositionInLine" : 17
      },
      "8" : {
        "Text" : "#/arch:SSE2\n",
        "Line" : 61,
        "CharPositionInLine" : 12
      },
      "9" : {
        "Text" : "#/Gd  # cdecl\n",
        "Line" : 66,
        "CharPositionInLine" : 12
      },
      "10" : {
        "Text" : "# small code\n\n# Turn on loop, common subexpression and register optimizations\n\n# do not inline\n\n# maximize speed\n",
        "Line" : 67,
        "CharPositionInLine" : 17
      },
      "11" : {
        "Text" : "#set(LIBCXX_DIR ${CMAKE_CURRENT_SOURCE_DIR}/imports/libc++10.7)\n\n#set(CMAKE_OSX_ARCHITECTURES i386)\n\n#set(CMAKE_OSX_ARCHITECTURES_DEBUG i368)\n\n#set(CMAKE_CXX_FLAGS \"-arch i386\")\n\n#set(LINK_FLAGS \"-arch i386\")\n\n#set(CMAKE_XCODE_ATTRIBUTE_GCC_VERSION \"com.apple.compilers.llvm.clang.1_0\")\n\n#set(CMAKE_XCODE_ATTRIBUTE_CLANG_CXX_LANGUAGE_STANDARD \"c++11\")\n\n#set(CMAKE_XCODE_ATTRIBUTE_CLANG_CXX_LIBRARY \"libc++\")\n\n#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++11 -stdlib=libc++ -nostdinc++ -I${LIBCXX_DIR}/include -g -Wall\")\n\n#set(LINK_FLAGS \"${LINK_FLAGS} -L${LIBCXX_DIR}/lib -arch i386\")\n",
        "Line" : 156,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# Detection target arch automaticly\n\n#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -g -Wall\")\n\n#set(CMAKE_XCODE_ATTRIBUTE_GCC_VERSION \"com.apple.compilers.llvm.clang.1_0\")\n\n#set(CMAKE_XCODE_ATTRIBUTE_CLANG_CXX_LANGUAGE_STANDARD \"c++11\")\n\n#set(CMAKE_XCODE_ATTRIBUTE_CLANG_CXX_LIBRARY \"libc++\")\n",
        "Line" : 167,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++11 -Wall\")\n",
        "Line" : 173,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# Install CRT\n",
        "Line" : 179,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# TODO: add code for other platforms here\n",
        "Line" : 184,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "#install pbd files\n",
        "Line" : 201,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# TODO: add code for other platforms here\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Stub for file\n",
        "Line" : 225,
        "CharPositionInLine" : 71
      },
      "19" : {
        "Text" : "# override fix_bundle config\n",
        "Line" : 238,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 20
    },
    "trash/cmake/testing.cmake" : {
      "ObjectId" : "3837f9e314187ca196f279abcf5276c295902e0e",
      "LastModified" : "2019-01-04T06:44:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "trash/cmake/utils.cmake" : {
      "ObjectId" : "c00469835cc40bb8e6637243782369f474186e2f",
      "LastModified" : "2019-01-04T06:44:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###\n\n# Prints all CMake variables.\n\n# Usefull only for debug needs.\n\n#\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "trash/src/CMakeLists.txt" : {
      "ObjectId" : "8e22356db2aaa79579f2e659f6057258ac7eee88",
      "LastModified" : "2019-01-04T06:44:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#robomongo/shell/util/version.cpp\n",
        "Line" : 128,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "#SET(CMAKE_INSTALL_RPATH \"${CMAKE_INSTALL_PREFIX}/lib\")\n",
        "Line" : 254,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Remove trailing comma\n",
        "Line" : 296,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Remove spaces\n",
        "Line" : 299,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Creating lib without main.cpp\n",
        "Line" : 362,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Creating executable\n",
        "Line" : 366,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Creating lib without main.cpp\n",
        "Line" : 397,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Creating executable\n",
        "Line" : 402,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#SET_SOURCE_FILES_PROPERTIES(${CMAKE_SOURCE_DIR}/install/qt.conf PROPERTIES MACOSX_PACKAGE_LOCATION Resources)\n",
        "Line" : 419,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Start to install\n",
        "Line" : 435,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#IF(WIN32)\n\n#   SET(CMAKE_EXE_LINKER_FLAGS \"/VERSION:\\\"${MAJOR}.${MINOR}\\\"\" CACHE STRING \"Resetting the default linker options.\" FORCE)\n\n#   STRING(REPLACE \".\" \",\" FILEVERSION ${PROJECT_VERSION})\n\n#   SET(VERSION_STR ${PROJECT_VERSION})\n\n#ENDIF()\n",
        "Line" : 437,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "########## PREPARE GTEST LIBRARY ##########\n",
        "Line" : 481,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "########## PREPARE GTEST LIBRARY ##########\n",
        "Line" : 488,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "trash/src/third-party/mongodb/src/third_party/boost/CMakeLists.txt" : {
      "ObjectId" : "7218a2fe36ab36407ad5e954fcbf64805ff6ece2",
      "LastModified" : "2019-01-04T06:44:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "trash/src/third-party/mongodb/src/third_party/js-1.7/CMakeLists.txt" : {
      "ObjectId" : "2e91e53c971ed7b4d46fed694dddd8fc95a87dd6",
      "LastModified" : "2019-01-04T06:44:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#include_directories(mongodb/src/third_party/js-1.7 ../../include/js)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "trash/src/third-party/mongodb/src/third_party/libssh2/CMakeLists.txt" : {
      "ObjectId" : "518c24d386f1702eaa682d8f677df5b770de429b",
      "LastModified" : "2019-01-04T06:44:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#SET(OPENSSL_LIBS optimized ${LIB_EAY_RELEASE} debug ${LIB_EAY_DEBUG} optimized ${SSL_EAY_RELEASE} debug ${SSL_EAY_DEBUG})\n",
        "Line" : 6,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "trash/src/third-party/mongodb/src/third_party/pcre-8.30/CMakeLists.txt" : {
      "ObjectId" : "8f0f76927e4ccba3112a9e63656ea13928430610",
      "LastModified" : "2019-01-04T06:44:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n#\n\n# This file allows building PCRE with the CMake configuration and build\n\n# tool. Download CMake in source or binary form from http://www.cmake.org/\n\n#\n\n# Original listfile by Christian Ehrlicher <Ch.Ehrlicher@gmx.de>\n\n# Refined and expanded by Daniel Richard G. <skunk@iSKUNK.ORG>\n\n# 2007-09-14 mod by Sheri so 7.4 supported configuration options can be entered\n\n# 2007-09-19 Adjusted by PH to retain previous default settings\n\n# 2007-12-26 (a) On UNIX, use names libpcre instead of just pcre\n\n#            (b) Ensure pcretest and pcregrep link with the local library,\n\n#                not a previously-installed one.\n\n#            (c) Add PCRE_SUPPORT_LIBREADLINE, PCRE_SUPPORT_LIBZ, and\n\n#                PCRE_SUPPORT_LIBBZ2.\n\n# 2008-01-20 Brought up to date to include several new features by Christian\n\n#            Ehrlicher.\n\n# 2008-01-22 Sheri added options for backward compatibility of library names\n\n#            when building with minGW:\n\n#            if \"ON\", NON_STANDARD_LIB_PREFIX causes shared libraries to\n\n#            be built without \"lib\" as prefix. (The libraries will be named\n\n#            pcre.dll, pcreposix.dll and pcrecpp.dll).\n\n#            if \"ON\", NON_STANDARD_LIB_SUFFIX causes shared libraries to\n\n#            be built with suffix of \"-0.dll\". (The libraries will be named\n\n#            libpcre-0.dll, libpcreposix-0.dll and libpcrecpp-0.dll - same names\n\n#            built by default with Configure and Make.\n\n# 2008-01-23 PH removed the automatic build of pcredemo.\n\n# 2008-04-22 PH modified READLINE support so it finds NCURSES when needed.\n\n# 2008-07-03 PH updated for revised UCP property support (change of files)\n\n# 2009-03-23 PH applied Steven Van Ingelgem's patch to change the name\n\n#            CMAKE_BINARY_DIR to PROJECT_BINARY_DIR so that it works when PCRE\n\n#            is included within another project.\n\n# 2009-03-23 PH applied a modified version of Steven Van Ingelgem's patches to\n\n#            add options to stop the building of pcregrep and the tests, and\n\n#            to disable the final configuration report.\n\n# 2009-04-11 PH applied Christian Ehrlicher's patch to show compiler flags that\n\n#            are set by specifying a release type.\n\n# 2010-01-02 PH added test for stdint.h\n\n# 2010-03-02 PH added test for inttypes.h\n\n# 2011-08-01 PH added PCREGREP_BUFSIZE\n\n# 2011-08-22 PH added PCRE_SUPPORT_JIT\n\n# 2011-09-06 PH modified WIN32 ADD_TEST line as suggested by Sergey Cherepanov\n\n# 2011-09-06 PH added PCRE_SUPPORT_PCREGREP_JIT\n\n# 2011-10-04 Sheri added support for including coff data in windows shared libraries\n\n#            compiled with MINGW if pcre.rc and/or pcreposix.rc are placed in\n\n#            the source dir by the user prior to building\n\n# 2011-10-04 Sheri changed various add_test's to use exes' location built instead\n\n#            of DEBUG location only (likely only matters in MSVC)\n\n# 2011-10-04 Sheri added scripts to provide needed variables to RunTest and\n\n#            RunGrepTest (used for UNIX and Msys)\n\n# 2011-10-04 Sheri added scripts to provide needed variables and to execute\n\n#            RunTest.bat in Win32 (for effortless testing with \"make test\")\n\n# 2011-10-04 Sheri Increased minimum required cmake version\n\n# 2012-01-06 PH removed pcre_info.c and added pcre_string_utils.c\n\n# 2012-01-10 Zoltan Herczeg added libpcre16 support\n\n# 2012-01-13 Stephen Kelly added out of source build support\n\n# 2012-01-17 PH applied Stephen Kelly's patch to parse the version data out\n\n#            of the configure.ac file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Increased minimum to 2.8.0 to support newer add_test features\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# for FindReadline.cmake\n",
        "Line" : 66,
        "CharPositionInLine" : 51
      },
      "3" : {
        "Text" : "# external packages\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Configuration checks\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# User-configurable options\n\n#\n\n# (Note: CMakeSetup displays these in alphabetical order, regardless of\n\n# the order we use here)\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# bzip2 lib\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# zlib\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# readline lib\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Prepare build configuration\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# This next one used to contain\n\n#       SET(PCRETEST_LIBS ${READLINE_LIBRARY})\n\n# but I was advised to add the NCURSES test as well, along with\n\n# some modifications to cmake/FindReadline.cmake which should\n\n# make it possible to override the default if necessary. PH\n",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Output files\n",
        "Line" : 316,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Parse version numbers and date out of configure.ac\n",
        "Line" : 321,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Read only the first 50 lines of the file\n",
        "Line" : 325,
        "CharPositionInLine" : 17
      },
      "14" : {
        "Text" : "# What about pcre-config and libpcre.pc?\n",
        "Line" : 345,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Character table generation\n",
        "Line" : 357,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Source code\n",
        "Line" : 378,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Build setup\n",
        "Line" : 476,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# needed to make sure to not link debug libs\n\n# against release libs and vice versa\n",
        "Line" : 485,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Libraries\n\n# pcre\n",
        "Line" : 493,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# pcrecpp\n",
        "Line" : 538,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Executables\n",
        "Line" : 560,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Removed by PH (2008-01-23) because pcredemo shouldn't really be built\n\n# automatically, and it gave trouble in some environments anyway.\n\n# ADD_EXECUTABLE(pcredemo pcredemo.c)\n\n# TARGET_LINK_LIBRARIES(pcredemo pcreposix)\n\n# IF(NOT BUILD_SHARED_LIBS)\n\n#     # make sure to not use declspec(dllimport) in static mode on windows\n\n#         SET_TARGET_PROPERTIES(pcredemo PROPERTIES COMPILE_FLAGS \"-DPCRE_STATIC\")\n\n# ENDIF(NOT BUILD_SHARED_LIBS)\n",
        "Line" : 562,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Testing\n",
        "Line" : 577,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# exes in Debug location tested by the RunTest shell script\n\n# via \"make test\"\n",
        "Line" : 631,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# =================================================\n",
        "Line" : 639,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Write out a CTest configuration file\n\n#\n",
        "Line" : 640,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# Provide environment for executing the bat file version of RunTest\n",
        "Line" : 681,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# Both the sh and bat file versions of RunTest are run if make test is used\n\n# in msys\n",
        "Line" : 717,
        "CharPositionInLine" : 6
      },
      "29" : {
        "Text" : "# Changed to accommodate testing whichever location was just built\n",
        "Line" : 727,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# Installation\n",
        "Line" : 742,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Remove pcrecpp.3\n",
        "Line" : 759,
        "CharPositionInLine" : 8
      },
      "32" : {
        "Text" : "# help, only for nice output\n",
        "Line" : 774,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# end CMakeLists.txt\n",
        "Line" : 843,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 34
    },
    "trash/src/third-party/qscintilla/Qt4Qt5/CMakeLists.txt" : {
      "ObjectId" : "3b493a10e4557da98ece1ada09797b2c4117fa03",
      "LastModified" : "2019-01-04T06:44:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#QTX_ADD_TRANSLATION(QM_FILES ${TS_FILES})\n\n#source_group(\"translations\" FILES ${TS_FILES})\n\n#source_group(\"qm-files\" FILES ${QM_FILES})\n",
        "Line" : 310,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ${QM_FILES}\n",
        "Line" : 318,
        "CharPositionInLine" : 7
      },
      "CommentCount" : 2
    },
    "trash/tests/gtest-1.7.0/CMakeLists.txt" : {
      "ObjectId" : "57470c84f3af0772c411bbb8bbbb41b515747ecd",
      "LastModified" : "2019-01-04T06:44:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# CMake build script for Google Test.\n\n#\n\n# To run the tests for Google Test itself on Linux, use 'make test' or\n\n# ctest.  You can select which tests to run using 'ctest -R regex'.\n\n# For more options, run 'ctest --help'.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BUILD_SHARED_LIBS is a standard CMake variable, but we declare it here to\n\n# make it prominent in the GUI.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# When other libraries are using a shared version of runtime libraries,\n\n# Google Test also has to use one.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Defines pre_project_set_up_hermetic_build() and set_up_hermetic_build().\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "########################################################################\n\n#\n\n# Project-wide settings\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Name of the project.\n\n#\n\n# CMake files in this project can refer to the root source directory\n\n# as ${gtest_SOURCE_DIR} and to the root binary directory as\n\n# ${gtest_BINARY_DIR}.\n\n# Language \"C\" is required for find_package(Threads).\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define helper functions and macros used by Google Test.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Defined in internal_utils.cmake.\n",
        "Line" : 52,
        "CharPositionInLine" : 30
      },
      "8" : {
        "Text" : "# Where Google Test's .h files can be found.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Where Google Test's libraries can be found.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "########################################################################\n\n#\n\n# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Google Test libraries.  We build them using more strict warnings than what\n\n# are used for other targets, to ensure that gtest can be compiled by a user\n\n# aggressive about warnings.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "########################################################################\n\n#\n\n# Samples on how to link user tests with gtest or gtest_main.\n\n#\n\n# They are not built by default.  To build them, set the\n\n# gtest_build_samples option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_samples=ON flag when running cmake.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "########################################################################\n\n#\n\n# Google Test's own tests.\n\n#\n\n# You can skip this section if you aren't interested in testing\n\n# Google Test itself.\n\n#\n\n# The tests are not built by default.  To build them, set the\n\n# gtest_build_tests option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_tests=ON flag when running cmake.\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# This must be set in the root directory for the tests to be run by\n\n# 'make test' or ctest.\n",
        "Line" : 107,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "############################################################\n\n# C++ tests built with standard compiler flags.\n",
        "Line" : 111,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "############################################################\n\n# C++ tests built with non-standard compiler flags.\n",
        "Line" : 142,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 145,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# The C++ Standard specifies tuple_element<int, class>.\n\n# Yet MSVC 10's <utility> declares tuple_element<size_t, class>.\n\n# That declaration conflicts with our own standard-conforming\n\n# tuple implementation.  Therefore using our own tuple with\n\n# MSVC 10 doesn't compile.\n",
        "Line" : 175,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "############################################################\n\n# Python tests.\n",
        "Line" : 191,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 197,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 234,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 22
    },
    "trash/tests/gtest-1.7.0/cmake/internal_utils.cmake" : {
      "ObjectId" : "8cb21894cebacd5bdfb598c8663a5be50325d70f",
      "LastModified" : "2019-01-04T06:44:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Defines functions and macros useful for building Google Test and\n\n# Google Mock.\n\n#\n\n# Note:\n\n#\n\n# - This file will be run twice when building Google Mock (once via\n\n#   Google Test's CMakeLists.txt, and once via Google Mock's).\n\n#   Therefore it shouldn't have any side effects other than defining\n\n#   the functions and macros.\n\n#\n\n# - The functions/macros defined in this file may depend on Google\n\n#   Test and Google Mock's option() definitions, and thus must be\n\n#   called *after* the options have been defined.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Tweaks CMake's default compiler/linker settings to suit Google Test's needs.\n\n#\n\n# This must be a macro(), as inside a function string() can only\n\n# update variables in the function scope.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For MSVC, CMake sets certain flags to defaults we want to override.\n\n# This replacement code is taken from sample in the CMake Wiki at\n\n# http://www.cmake.org/Wiki/CMake_FAQ#Dynamic_Replace.\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# When Google Test is built as a shared library, it should also use\n\n# shared runtime libraries.  Otherwise, it may end up with multiple\n\n# copies of runtime library data in different modules, resulting in\n\n# hard-to-find crashes. When it is built as a static library, it is\n\n# preferable to use CRT as static libraries, as we don't have to rely\n\n# on CRT DLLs being available. CMake always defaults to using shared\n\n# CRT libraries, so we override that default here.\n",
        "Line" : 28,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# We prefer more strict warning checking for building Google Test.\n\n# Replaces /W3 with /W4 in defaults.\n",
        "Line" : 38,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Defines the compiler/linker flags used to build Google Test and\n\n# Google Mock.  You can tweak these definitions to suit your need.  A\n\n# variable's value is empty before it's explicitly assigned to.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Defines CMAKE_USE_PTHREADS_INIT and CMAKE_THREAD_LIBS_INIT.\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Newlines inside flags variables break CMake's NMake generator.\n\n# TODO(vladl@google.com): Add -RTCs and -RTCu to debug builds.\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Suppress spurious warnings MSVC 7.1 sometimes issues.\n\n# Forcing value to bool.\n",
        "Line" : 60,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# Copy constructor and assignment operator could not be generated.\n",
        "Line" : 63,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# Compatibility warnings not applicable to Google Test.\n\n# Resolved overload was found by argument-dependent lookup.\n",
        "Line" : 65,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# Until version 4.3.2, GCC doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 78,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Sun Pro doesn't provide macros to indicate whether exceptions and\n\n# RTTI are enabled, so we define GTEST_HAS_* explicitly.\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# CMake 2.8 changes Visual Age's compiler ID to \"XL\".\n",
        "Line" : 92,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Until version 9.0, Visual Age doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# RTTI can not be disabled in HP aCC compiler.\n",
        "Line" : 103,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# The pthreads library is available and allowed.\n",
        "Line" : 107,
        "CharPositionInLine" : 32
      },
      "17" : {
        "Text" : "# For building gtest's own tests and samples.\n",
        "Line" : 113,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# For building the gtest libraries.\n",
        "Line" : 121,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# type can be either STATIC or SHARED to denote a static or shared library.\n\n# ARGN refers to additional arguments after 'cxx_flags'.\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "########################################################################\n\n#\n\n# Helper functions for creating build targets.\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# cxx_executable_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ executable that depends on the given libraries and\n\n# is built from the given source files with the given compiler flags.\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# To support mixing linking in static and dynamic libraries, link each\n\n# library in with an extra call to target_link_libraries.\n",
        "Line" : 172,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# cxx_executable(name dir lib srcs...)\n\n#\n\n# creates a named target that depends on the given libs and is built\n\n# from the given source files.  dir/name.cc is implicitly included in\n\n# the source file list.\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Sets PYTHONINTERP_FOUND and PYTHON_EXECUTABLE.\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# cxx_test_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ test that depends on the given libs and is built\n\n# from the given source files with the given compiler flags.\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# cxx_test(name libs srcs...)\n\n#\n\n# creates a named test target that depends on the given libs and is\n\n# built from the given source files.  Unlike cxx_test_with_flags,\n\n# test/name.cc is already implicitly included in the source file list.\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# py_test(name)\n\n#\n\n# creates a Python test with the given name whose main module is in\n\n# test/name.py.  It does nothing if Python is not installed.\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# We are not supporting Python tests on Linux yet as they consider\n\n# all Linux environments to be google3 and try to use google3 features.\n",
        "Line" : 216,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# ${CMAKE_BINARY_DIR} is known at configuration time, so we can\n\n# directly bind it from cmake. ${CTEST_CONFIGURATION_TYPE} is known\n\n# only at ctest runtime (by calling ctest -c <Configuration>), so\n\n# we have to escape $ to delay variable substitution here.\n",
        "Line" : 219,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 31
    }
  },
  "FileTypes" : {
    "CMAKE" : 61,
    "QMAKE" : 6,
    "AUTOMAKE" : 8
  },
  "ElapsedTime" : 2967
}