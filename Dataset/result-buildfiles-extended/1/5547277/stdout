{
  "Repository" : "5547277",
  "Revision" : "HEAD",
  "ObjectId" : "2071414f81bb77a53fe5c80665538f2f9cc0e3b8",
  "CommitTime" : "2019-04-05T10:21:22Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "29690d86378d2480cf0c7d208fee502c3c0f31b0",
      "LastModified" : "2019-03-28T21:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# main cmake configuration file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check if conda package is created\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# new since gcc.8 maybe need to be checked\n",
        "Line" : 41,
        "CharPositionInLine" : 87
      },
      "3" : {
        "Text" : "# from boost since gcc.8 maybe need to be checked\n",
        "Line" : 42,
        "CharPositionInLine" : 83
      },
      "4" : {
        "Text" : "# from gcc-8.2 + boost\n",
        "Line" : 43,
        "CharPositionInLine" : 82
      },
      "5" : {
        "Text" : "#     if (NOT WIN32)\n\n#         add_definitions(-std=c++0x)\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# add_definitions(-std=gnu++0x)\n\n# -Wl,--no-undefined\n\n# set(CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS \"-Os -static-libgcc -Wl,-O2 -Wl,--as-needed -Wl,--sort-common\")\n\n# set(CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS \"-Os -static-libgcc\")\n\n# set(CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS \"-Os -Wl,--no-undefined -static-libgcc -Wl,-O2 -Wl,--as-needed -Wl,--sort-common\")\n\n# set(CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS \"${CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS} -lbfd\")\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# If it's libc++ and you're on <= 10.8, you need to compile with clang++ -stdlib=libc++. If it's libstdc++ and you're on 10.9 or later, you need to compile with clang++ -stdlib=libstdc++.\n\n# add_compile_options(-stdlib=libstdc++)\n\n# add_compile_options(-stdlib=libc++)\n",
        "Line" : 67,
        "CharPositionInLine" : 12
      },
      "8" : {
        "Text" : "# if gcc\n",
        "Line" : 71,
        "CharPositionInLine" : 11
      },
      "9" : {
        "Text" : "# MSVC complain a lot of possible unsecure std function\n",
        "Line" : 76,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "################################################################################\n\n# Check for libs and other packages we might use.\n\n################################################################################\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# if (PYVERSION)\n\n#     set(Python_ADDITIONAL_VERSIONS ${PYVERSION})\n\n# endif()\n\n# find_package(PythonInterp) # find version belongs to the active python command\n\n#\n\n# if(WIN32)\n\n#     find_package(PythonLibs)\n\n# endif(WIN32)\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# we should think about cmake superbuild with ExternalProject_Add as the replacement for find_or_build_package (next generation)\n",
        "Line" : 200,
        "CharPositionInLine" : 12
      },
      "13" : {
        "Text" : "#exit()\n",
        "Line" : 207,
        "CharPositionInLine" : 12
      },
      "14" : {
        "Text" : "# Find packages that CHOLMOD depends on\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# dummy to avoid error msg\n",
        "Line" : 235,
        "CharPositionInLine" : 7
      },
      "16" : {
        "Text" : "#find_package(openblas)\n",
        "Line" : 254,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "################################################################################\n\n# Check for python stuff\n\n################################################################################\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#if (NOT PYTHON_LIBRARY)\n\n#   get_filename_component(PYTHONPATH \"${PYTHON_EXECUTABLE}\" PATH )\n\n#    if (${ADDRESSMODEL} EQUAL 32 OR ${PYTHON_VERSION_MAJOR}${PYTHON_VERSION_MINOR} GREATER 34) # works at least for WinPython3.5\n\n#        set (PYTHON_LIBRARY ${PYTHONPATH}/libs/libpython${PYTHON_VERSION_MAJOR}${PYTHON_VERSION_MINOR}.a)\n\n#    else()\n\n#        set (PYTHON_LIBRARY ${PYTHONPATH}/libs/libpython${PYTHON_VERSION_MAJOR}${PYTHON_VERSION_MINOR}.dll.a)\n\n#    endif()\n\n# endif()\n",
        "Line" : 277,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "#set (Boost_PYTHON_LIBRARY ${Boost_PYTHON_LIBRARY})\n",
        "Line" : 294,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# the name for py3 boost-python library lacks probably py3 suffix, which is different for different OS\n",
        "Line" : 308,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "#debian /usr/lib/x86_64-linux-gnu/libboost_python-py34.so\n",
        "Line" : 310,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# arch style /usr/lib/libboost_python3.so.1.64.0\n",
        "Line" : 319,
        "CharPositionInLine" : 8
      },
      "23" : {
        "Text" : "# gentoo: /usr/lib/libboost_python-3.4.so\n\n# should find the right one\n",
        "Line" : 329,
        "CharPositionInLine" : 8
      },
      "24" : {
        "Text" : "# gentoo: /usr/lib/libboost_python-3.4.so\n",
        "Line" : 335,
        "CharPositionInLine" : 8
      },
      "25" : {
        "Text" : "# should find the right one\n",
        "Line" : 337,
        "CharPositionInLine" : 8
      },
      "26" : {
        "Text" : "#foreach(file ${DOCFILES})\n",
        "Line" : 424,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "#message(${file})\n",
        "Line" : 425,
        "CharPositionInLine" : 8
      },
      "28" : {
        "Text" : "#endforeach()\n",
        "Line" : 426,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "#linkcheck\n",
        "Line" : 492,
        "CharPositionInLine" : 6
      },
      "30" : {
        "Text" : "#add_dependencies(doc removedoc)\n",
        "Line" : 494,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Add if pytest found?\n",
        "Line" : 496,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "################################################################################\n\n# Define the configurable options\n\n################################################################################\n",
        "Line" : 503,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# cmake_dependent_option(GIMLI_BUILD_PYTHON_MODULES \"Specifies whether to build the Python extension module(s)\" \"PYTHONINTERP_FOUND;PYTHONLIBS_FOUND;Boost_PYTHON_FOUND\")\n",
        "Line" : 512,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "################################################################################\n\n#\n\n################################################################################\n",
        "Line" : 514,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# set up install sub-directories\n",
        "Line" : 541,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# TODO: put into /samples subdir!\n",
        "Line" : 556,
        "CharPositionInLine" : 62
      },
      "37" : {
        "Text" : "#set( GIMLI_PYTHON_INSTALL_DIR ${CMAKE_INSTALL_PREFIX}/python/pygimli)\n",
        "Line" : 558,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "################################################################################\n\n# Add main header locations (for everything we build)\n\n################################################################################\n",
        "Line" : 560,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "################################################################################\n\n# descend into subdirs\n\n################################################################################\n",
        "Line" : 566,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#     set( PYGIMLI_SOURCE_DIR ${CMAKE_SOURCE_DIR}/python/pygimli )\n\n#     set( PYGIMLI_BUILD_DIR ${CMAKE_BINARY_DIR}/package/pygimli )\n\n#\n\n#     file(GLOB_RECURSE PYFILES RELATIVE \"${PYGIMLI_SOURCE_DIR}\" \"python/pygimli/*.py\")\n\n#     set(PYGIMLI_FILES ${PYFILES} CACHE INTERNAL \"pygimli source files that we need to copy\")\n",
        "Line" : 579,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "#CR what is this good for?\n\n# export(TARGETS gimli\n\n#        FILE \"${PROJECT_BINARY_DIR}/Gimli.cmake\")\n",
        "Line" : 588,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 42
    },
    "apps/CMakeLists.txt" : {
      "ObjectId" : "c8254bf2419536c39a0ad28ecf8ae7a623a4d1ec",
      "LastModified" : "2015-09-15T16:50:23Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "apps/Makefile.am" : {
      "ObjectId" : "ddf78e40e9576f8347bdd71ff05c54f25fec35c7",
      "LastModified" : "2012-01-31T14:02:20Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "apps/em1d/CMakeLists.txt" : {
      "ObjectId" : "85ca88120f050158a46b8020547a43d228babee0",
      "LastModified" : "2015-09-15T16:50:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#link_directories (${libgimli_BINARY_DIR}/src) \r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#target_link_libraries(polyfit ${libgimli_TARGET_NAME} gimli)\r\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "apps/em1d/Makefile.am" : {
      "ObjectId" : "397d176e7b42d941fca1d600869ff300a1087d71",
      "LastModified" : "2012-01-31T14:02:20Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# \tdc1dlong\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#dc1dlong_SOURCES = dc1dlong.cpp\n\n#dc1dlong_LDADD = ../../src/.libs/libgimli.la\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "apps/fit/CMakeLists.txt" : {
      "ObjectId" : "0d7b9b5e153d27a1db6f39831f47164dd6648874",
      "LastModified" : "2015-09-15T16:50:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#link_directories (${libgimli_BINARY_DIR}/src) \r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "apps/fit/Makefile.am" : {
      "ObjectId" : "a5603824dc8783ca2843af42790c1d7f6ebbc132",
      "LastModified" : "2012-01-31T14:02:20Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "apps/misc/CMakeLists.txt" : {
      "ObjectId" : "a3891b625c6221cbd19b6343d3f4ddfe035290b4",
      "LastModified" : "2015-09-15T16:50:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#link_directories (${libgimli_BINARY_DIR}/src) \r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "apps/misc/Makefile.am" : {
      "ObjectId" : "9a28f0eb62db2be171e0033d5e32844acfc173c9",
      "LastModified" : "2015-09-15T16:50:23Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "apps/traveltime/CMakeLists.txt" : {
      "ObjectId" : "37d127aacfb5d77b272a1ff9f0a3fedd0e4f5fcc",
      "LastModified" : "2015-09-15T16:50:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#link_directories (${libgimli_BINARY_DIR}/src) \r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#ttresolution\r\n\n#ttinvoffset \r\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#target_link_libraries(polyfit ${libgimli_TARGET_NAME} gimli)\r\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "apps/traveltime/Makefile.am" : {
      "ObjectId" : "2824325a0bcf053c70566087b3a4a444c0fdc759",
      "LastModified" : "2015-09-15T16:50:23Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "cmake/FindCHOLMOD.cmake" : {
      "ObjectId" : "5adaef5cc7259adb11b88a914b7a6577ccefc4f6",
      "LastModified" : "2018-08-23T06:03:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find CHOLMOD\n\n# Once done this will define\n\n#\n\n#  CHOLMOD_FOUND        - system has CHOLMOD\n\n#  CHOLMOD_INCLUDE_DIRS - include directories for CHOLMOD\n\n#  CHOLMOD_LIBRARIES    - libraries for CHOLMOD\n\n#  HAVE_LIBCHOLMOD      - system has CHOLMOD\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright (C) 2010-2011 Garth N. Wells, Anders Logg and Johannes Ring\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# 1. Redistributions of source code must retain the above copyright\n\n#    notice, this list of conditions and the following disclaimer.\n\n# 2. Redistributions in binary form must reproduce the above copyright\n\n#    notice, this list of conditions and the following disclaimer in\n\n#    the documentation and/or other materials provided with the\n\n#    distribution.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\n\n# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n\n# COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n\n# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n\n# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n\n# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\n\n# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n\n#\n\n# Modified 2013 for libgimli by Carsten\n\n#\n\n#\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find packages that CHOLMOD depends on\n\n# set(CMAKE_LIBRARY_PATH ${BLAS_DIR}/lib $ENV{BLAS_DIR}/lib ${CMAKE_LIBRARY_PATH})\n\n# set(CMAKE_LIBRARY_PATH ${LAPACK_DIR}/lib $ENV{LAPACK_DIR}/lib ${CMAKE_LIBRARY_PATH})\n\n# set(CMAKE_LIBRARY_PATH ${EXTERNAL_DIR}/lib $ENV{EXTERNAL_DIR}/lib ${CMAKE_LIBRARY_PATH})\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# FIXME: Should we have separate FindXX modules for CAMD, COLAMD, and CCOLAMD?\n\n# FIXME: find_package(CAMD)\n\n# FIXME: find_package(COLAMD)\n\n# FIXME: find_package(CCOLAMD)\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# FIXME: It may be necessary to link to LAPACK and BLAS (or the vecLib\n\n# FIXME: framework on Darwin).\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Check for header file\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Check for CHOLMOD library\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Check for CAMD library\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Check for COLAMD library\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Check for CCOLAMD library\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Check for SUITESPARSECONFIG library\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Collect libraries (order is important)\n",
        "Line" : 113,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Don't link against system-wide blas when making conda package\n",
        "Line" : 133,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# On unix system, debug and release have the same name\n",
        "Line" : 170,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Standard package handling\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "cmake/FindCppUnit.cmake" : {
      "ObjectId" : "4a7ee0eede702967cf05b3352f9d3cc8dfce7aab",
      "LastModified" : "2015-09-15T16:50:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Find the CppUnit includes and library\n\n#\n\n# This module defines\n\n# CPPUNIT_INCLUDE_DIR, where to find tiff.h, etc.\n\n# CPPUNIT_LIBRARIES, the libraries to link against to use CppUnit.\n\n# CPPUNIT_FOUND, If false, do not try to use CppUnit.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# also defined, but not for general use are\n\n# CPPUNIT_LIBRARY, where to find the CppUnit library.\n\n# CPPUNIT_DEBUG_LIBRARY, where to find the CppUnit library in debug\n\n# mode.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#IF(WIN32)\n\n#    set(CppUnit_DIR C:/MinGW/msys/1.0/local/include)\n\n#endif(WIN32)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# With Win32, important to have both\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# On unix system, debug and release have the same name\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "cmake/FindSphinx.cmake" : {
      "ObjectId" : "7e1bd98ab118752ed5962cb464d0c570b7a3cf10",
      "LastModified" : "2015-09-15T16:50:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake find_package() Module for Sphinx documentation generator\n\n# http://sphinx-doc.org/\n\n#\n\n# Example usage:\n\n#\n\n# find_package(Sphinx)\n\n#\n\n# If successful the following variables will be defined\n\n# SPHINX_FOUND\n\n# SPHINX_EXECUTABLE\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Handle REQUIRED and QUIET arguments\n\n# this will also set SPHINX_FOUND to true if SPHINX_EXECUTABLE exists\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Provide options for controlling different types of output\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/FindTriangle.cmake" : {
      "ObjectId" : "1f61e583777c4189c6c5a6541a5ba2b3271ac8b9",
      "LastModified" : "2018-08-23T06:03:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Find Jonathan Shewchuk's Triangle include directory and library, and set these variables:\n\n#\n\n# TRIANGLE_FOUND\n\n# Triangle_INCLUDE_DIRS\n\n# Triangle_LIBRARIES\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Optional user supplied search path.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find include directory.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Standard package handling\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/FindUMFPACK.cmake" : {
      "ObjectId" : "ae24d6d5219939716d2293f61c02b4f88c187a7a",
      "LastModified" : "2015-09-15T16:50:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Umfpack lib usually requires linking to a blas library.\n\n# It is up to the user of this module to find a BLAS and link to it.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# if (NOT UMFPACK_LIBRARIES)\n\n#     if(EXISTS ${EXTERNAL_DIR}/lib/libumfpack.a)\n\n#         set(UMFPACK_LIBRARIES ${EXTERNAL_DIR}/lib/libumfpack.a)\n\n#     endif()\n\n# endif()\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Findcastxml.cmake" : {
      "ObjectId" : "cfcebcc19f5c83581ba670f4c988df8244cda72e",
      "LastModified" : "2015-09-15T16:50:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Find the gccxml executable\n\n#\n\n# This module defines\n\n# GCCXML_EXECUTABLE, If false, do not try to use gccxml\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Findgccxml.cmake" : {
      "ObjectId" : "52307357454b47a11a9fec291bcd4f5c2bd4b8df",
      "LastModified" : "2015-09-15T16:50:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Find the gccxml executable\n\n#\n\n# This module defines\n\n# GCCXML_EXECUTABLE, If false, do not try to use gccxml\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Findpygccxml.cmake" : {
      "ObjectId" : "b6b3dad37b7ec09ccd8451829fc38ef87c03870a",
      "LastModified" : "2018-08-23T06:03:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Find the pygccxml python installation\n\n#\n\n# This module defines\n\n# PYGCCXML_FOUND, If false, do not try to use pygccxml\n\n# PYPLUSPLUS_FOUND, If false, do not try to use pyplusplus\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Findpyplusplus.cmake" : {
      "ObjectId" : "96cc0b9c65cc4624a8802020e12156f3138ba204",
      "LastModified" : "2018-08-23T06:03:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Find the pygccxml python installation\n\n#\n\n# This module defines\n\n# PYGCCXML_FOUND, If false, do not try to use pygccxml\n\n# PYPLUSPLUS_FOUND, If false, do not try to use pyplusplus\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Findreadproc.cmake" : {
      "ObjectId" : "f9cafcda0efa8afced49e883f5b52b112bccfced",
      "LastModified" : "2015-09-15T16:50:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Find the readroc includes and library\n\n#\n\n# This module defines\n\n# READPROC_INCLUDE_DIR, where to find tiff.h, etc.\n\n# READPROC_LIBRARIES, the libraries to link against to use readproc.\n\n# READPROC_FOUND, If false, do not try to use readproc.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# On unix system, debug and release have the same name\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Standard package handling\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/GIMLImacros.cmake" : {
      "ObjectId" : "8dfa739fa82c673da5309e1ce1657dbb0777df6f",
      "LastModified" : "2018-11-30T16:02:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n# Macro definitions used by GIMLI's cmake build\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#if (NOT APPLE AND BERT_INSTALL_WITH_RPATH)\n\n#    set_target_properties(${PYTHON_TARGET_NAME} PROPERTIES\n\n#        INSTALL_RPATH \"${CMAKE_INSTALL_PREFIX}/${BERT_LIB_INSTALL_DIR}\"\n\n#    )\n\n#endif()\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#     if (OUTDIR)\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#     endif(OUTDIR)\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#     using regular Clang or AppleClang\n",
        "Line" : 59,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "#--copy pattern files to build folder--\n",
        "Line" : 63,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#message (\"${PYTHON_IN_PATH}/${file} ${PYTHON_OUT_PATH}/${file}\")\n",
        "Line" : 77,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "#----install-----------------------\n\n#     foreach(file ${PYTHON_FILES})\n\n#         get_filename_component( path_name \"${file}\" PATH )\n\n#         #file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/pygimli/${file} DESTINATION ${path_name})\n\n#         install( FILES \"${file}\" DESTINATION ${path_name} )\n\n#     endforeach(file)\n\n#\n\n#     install(TARGETS ${PYTHON_TARGET_NAME} LIBRARY DESTINATION \"${PYTHON_MODULE_NAME}/\")\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# A module's location is usually a directory, but for binary modules\n\n# it's a .so file.\n",
        "Line" : 109,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "#unzip try cmake -E tar\n\n#find_package(Tar REQUIRED)  ${CMAKE_COMMAND} -E tar \"cfvz\"\n",
        "Line" : 145,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Did we get any optional args?\n",
        "Line" : 159,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 11
    },
    "doc/CMakeLists.txt" : {
      "ObjectId" : "6a4ce36f4d830d08ce22710074963cb9d1b61af3",
      "LastModified" : "2019-03-28T21:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# perform doxygen once or if DOXYFILE_IN or libgimli has been changed\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# configured documentation tools and intermediate build results\n",
        "Line" : 30,
        "CharPositionInLine" : 48
      },
      "2" : {
        "Text" : "# HERE we export our rst. either copied or the original\n",
        "Line" : 31,
        "CharPositionInLine" : 63
      },
      "3" : {
        "Text" : "# Sphinx cache with pickled ReST documents\n",
        "Line" : 32,
        "CharPositionInLine" : 48
      },
      "4" : {
        "Text" : "# HTML output directory\n",
        "Line" : 33,
        "CharPositionInLine" : 66
      },
      "5" : {
        "Text" : "# PDF output directory\n",
        "Line" : 34,
        "CharPositionInLine" : 61
      },
      "6" : {
        "Text" : "# this will ONLY cover files in the CMAKE_CURRENT_SOURCE_DIR .. maybe a cmake bug check with cmake 3\n\n# we collect the RSTFILES in main path\n\n# file(GLOB_RECURSE RSTFILES RELATIVE ${CMAKE_SOURCE_DIR} \"*.rst\")\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Copy build scripts for API doc generation\n",
        "Line" : 76,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 8
    },
    "doc/Makefile" : {
      "ObjectId" : "b0ad71e89a8c41fb3d6c8436fe5c061460a79616",
      "LastModified" : "2018-08-23T06:03:41Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# User-friendly check for sphinx-build\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Internal variables.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "doc/tutorial/code/Makefile" : {
      "ObjectId" : "d7f829e28fd895f4479c16f35f070b669e840d7b",
      "LastModified" : "2015-09-15T16:50:23Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "doc/tutorial/code/dc1d/Makefile" : {
      "ObjectId" : "04ab887d6264ebb4569ed93e14419a04cbb7200b",
      "LastModified" : "2015-09-15T16:50:23Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "doc/tutorial/code/enhanced/Makefile" : {
      "ObjectId" : "c12038dbe2cc5120c94f17211ab62f95e65ed73b",
      "LastModified" : "2015-09-15T16:50:23Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#GIMLILIB=-L$(HOME)/lib -lgimli\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "doc/tutorial/code/joint/Makefile" : {
      "ObjectId" : "f05d7d62b36ba177160e9778def314b3eecd26f7",
      "LastModified" : "2015-09-15T16:50:23Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "doc/tutorial/code/polyfit/Makefile" : {
      "ObjectId" : "6fb5604c51214b8a1b02c15fbe1e49243b556def",
      "LastModified" : "2015-09-15T16:50:23Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "python/CMakeLists.txt" : {
      "ObjectId" : "d6474e46a55b85fb37aca56bcbd5235546c8597f",
      "LastModified" : "2019-03-28T21:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#${CMAKE_COMMAND} -E env \"PYTHONPATH=$ENV{PYTHONPATH}${PYGCCXML_PATH}\" ${PYTHON_EXECUTABLE} will work on cmake3.1\n",
        "Line" : 6,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "#python\n",
        "Line" : 8,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "#set(ENV{PYTHONPATH} $ENV{PYTHONPATH}${PYGCCXML_PATH})\n\n#${CMAKE_CURRENT_SOURCE_DIR}/generate_pygimli_code.py\n\n#${CMAKE_CURRENT_SOURCE_DIR}/pygimli.h\n\n#ENV PYTHONPATH $ENV{PYTHONPATH}${PYGCCXML_PATH} APPEND\n",
        "Line" : 16,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "#HACK!! but we need this to force cmake looking for our generated binding files\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#test -z $J && ${CMAKE_MAKE_PROGRAM} -j 1 -C ${CMAKE_BINARY_DIR} pg  || echo \"no 1\"\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# for calling the build only\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#ADD_CUSTOM_TARGET(pgrebuild ALL)\n\n#add_dependencies(pgrebuild pggen _pygimli_)\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#ADD_CUSTOM_TARGET(pygimli_check_sources ALL)\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# foreach(file ${PYGIMLI_FILES})\n\n#     add_custom_command(\n\n#             COMMAND\n\n#                 #echo ${PYGIMLI_SOURCE_DIR}/${file} ${PYGIMLI_BUILD_DIR}/${file}\n\n#                 cmake -E copy_if_different ${PYGIMLI_SOURCE_DIR}/${file} ${PYGIMLI_BUILD_DIR}/${file}\n\n#             TARGET\n\n#                 pygimli_check_sources\n\n#             VERBATIM\n\n#             COMMENT\n\n#                 \"Updating python file: ${file}\"\n\n#     )\n\n# endforeach()\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## prepare installation\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#file(COPY ${Boost_THREAD_LIBRARIES} DESTINATION ${CMAKE_BINARY_DIR}/bin)\n",
        "Line" : 130,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "#file(COPY ${Boost_SYSTEM_LIBRARIES} DESTINATION ${CMAKE_BINARY_DIR}/bin)\n",
        "Line" : 131,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 12
    },
    "rpm/Makefile.am" : {
      "ObjectId" : "35ce50a0116cf6ead97863197fc3f29fad2b496c",
      "LastModified" : "2015-09-15T16:50:23Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# To get a spec file w/ the version in it, we copy 'specfile' to the final name\n\n# This is also our chance to substitute in an RPM release number and a date.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#RPM_DATE = $(shell date +\"%a %b %d %Y\")\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Unless told otherwise, try to build for current CPU\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ensure we start fresh, specfile will be rebuilt by dist-gzip\n",
        "Line" : 33,
        "CharPositionInLine" : 39
      },
      "CommentCount" : 4
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "bb08f03876f318db300b87835a3c1d21343e9376",
      "LastModified" : "2019-03-28T21:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################################\r\n\n#                       SHARED LIBRARY SET UP\r\n\n###########################################################################\r\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#if (USE_BOOST_THREAD)\r\n",
        "Line" : 68,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#endif(USE_BOOST_THREAD)\r\n",
        "Line" : 74,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# install(DIRECTORY include/${PROJECT_NAME}/\r\n\n#         DESTINATION include\r\n\n#         PATTERN \".cpp\" EXCLUDE)\r\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "e04841ea8925286b6f0a9486daf4ab286ca55885",
      "LastModified" : "2015-09-15T16:50:23Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/Makefile.am" : {
      "ObjectId" : "42cc44081e4985612487a5c07263a8c2bb1534c5",
      "LastModified" : "2015-09-15T16:50:23Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "tests/unittest/CMakeLists.txt" : {
      "ObjectId" : "879da859f383d97796a2582a2be9c75809690264",
      "LastModified" : "2018-08-23T06:03:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#PURIFYCOMMAND:FILEPATH=c:/Progra~1/Rational/common/purify.exe\n\n#MEMORYCHECK_COMMAND:FILEPATH=/home/kitware/local/bin/valgrind\n\n#set(WITH_MEMCHECK TRUE)\n\n#set(WITH_COVERAGE TRUE)\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#cmake \"--build . --target gtest\"\n",
        "Line" : 43,
        "CharPositionInLine" : 12
      },
      "2" : {
        "Text" : "#file(COPY ${CMAKE_CURRENT_BINARY_DIR}/../../bin/gimliUnitTest DESTINATION ${CMAKE_CURRENT_BINARY_DIR})\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    }
  },
  "FileTypes" : {
    "CMAKE" : 22,
    "MAKEFILE" : 6,
    "AUTOMAKE" : 7
  },
  "ElapsedTime" : 2273
}