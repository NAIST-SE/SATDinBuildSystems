{
  "Repository" : "27284",
  "Revision" : "HEAD",
  "ObjectId" : "b00b17c5583c385a5518dcba412efab4765da888",
  "CommitTime" : "2019-04-17T17:28:06Z",
  "Files" : {
    "3rdparty/CMakeLists.txt" : {
      "ObjectId" : "e056c2c5e3822106de63cf8a41ffe6a530a9d8ab",
      "LastModified" : "2019-04-03T17:12:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# SHA2-library\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rdparty/Makefile.am" : {
      "ObjectId" : "6088eb0ac6905e6cf709168444a125d6e758d959",
      "LastModified" : "2018-10-30T20:10:13Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# for 3rdparty projects that don't support automake, provide support here\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# sha2\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# utf8proc\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# miniupnpc\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "3rdparty/fonts/CMakeLists.txt" : {
      "ObjectId" : "38dbaf16bdd765d9813215abe61d8ecd20683a7b",
      "LastModified" : "2018-08-12T00:04:23Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/micro-ecc/CMakeLists.txt" : {
      "ObjectId" : "5c5781f30282754574f957aaea6a9470bf6a22ec",
      "LastModified" : "2017-08-26T13:56:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/micro-ecc/Makefile.am" : {
      "ObjectId" : "9acf3b9b601639fb5c8a92f78a38614e75016bf3",
      "LastModified" : "2018-01-14T01:41:00Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "CMakeLists.txt" : {
      "ObjectId" : "642905c81eec7b36569a0102dc9ebf0bb1470d58",
      "LastModified" : "2019-04-09T22:34:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Handle options\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Disallow in-source builds\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CXX Standard\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Support folders (for nicer IDE organization)\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Fix: Linking issues with static libraries when using certain generated project files (ex. Xcode in \"Archive\" build mode)\n\n# See: https://stackoverflow.com/questions/30318941/, https://stackoverflow.com/questions/33020245/\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Handle install paths\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# On Windows, set the default DATAROOTDIR to \".\"\n\n# - No need to put everything in a nested \"share\" folder, as the expectation is that\n\n#   WZ will be installed in its own directory (ex. a subdirectory of Program Files)\n",
        "Line" : 46,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# Set the default DOCDIR to \"DATAROOTDIR/doc\"\n",
        "Line" : 52,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# Set default WZ_DATADIR based on target platform\n",
        "Line" : 59,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# not used on macOS (macOS always creates an app bundle)\n",
        "Line" : 63,
        "CharPositionInLine" : 61
      },
      "10" : {
        "Text" : "# Windows builds expect a non-empty BINDIR\n\n# Windows NSIS installer scripts expect a BINDIR that is \"bin\"\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Since the main executable install location is used to determine the install prefix,\n\n# an absolute bindir requires an absolute CMAKE_INSTALL_LOCALEDIR + WZ_DATADIR (or locales + data won't be found)\n",
        "Line" : 77,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# Disable compiler-specific extensions for macOS builds\n",
        "Line" : 92,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# Enable macOS-specific find scripts\n",
        "Line" : 95,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# Enable detection of Homebrew-installed Gettext\n",
        "Line" : 100,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "# Workaround: Qt5's Cocoa platform integration plugin requires Qt5::PrintSupport\n",
        "Line" : 106,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "# Use \"-fPIC\" / \"-fPIE\" for all targets by default, including static libs\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# CMake doesn't add \"-pie\" by default for executables (CMake issue #14983)\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Ensure all builds always have debug info built (MSVC)\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Treat source files as UTF-8 (unless they have a BOM) (MSVC)\n\n# NOTE: For MSVC, this also sets the executable character set.\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Set Windows-specific defines (ex. _WIN32_WINNT)\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Windows 10+\n",
        "Line" : 144,
        "CharPositionInLine" : 41
      },
      "22" : {
        "Text" : "# Windows XP+\n",
        "Line" : 146,
        "CharPositionInLine" : 41
      },
      "23" : {
        "Text" : "# Enable stack protection, if supported by the compiler\n\n# Prefer -fstack-protector-strong if supported, fall-back to -fstack-protector\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Set below to any additional properties that should be added to Warzone targets (src/, lib/*/)\n",
        "Line" : 176,
        "CharPositionInLine" : 37
      },
      "25" : {
        "Text" : "# Configure compiler warnings for WZ\n\n# NOTE: This should be called after the 3rdparty/ libs are added, so it only affects WZ code & frameworks\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# MSVC\n",
        "Line" : 182,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# Enable /W4\n\n# NOTE: Do not use /Wall, as it enables *many* warnings that are off by default. MS recommends /W4 (max)\n",
        "Line" : 184,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# Enable some additional MSVC warnings (if compiling at warning level 3+)\n\n# C4204: nonstandard extension used : non-constant aggregate initializer\n",
        "Line" : 188,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# C4512: 'class' : assignment operator could not be generated\n",
        "Line" : 191,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# Enable some additional MSVC warnings (that are off by default)\n\n# C4005: 'identifier' : macro redefinition\n",
        "Line" : 194,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# C4191: unsafe conversion from 'type of expression' to 'type required'\n",
        "Line" : 197,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# C4263: 'function': member function does not override any base class virtual member function\n",
        "Line" : 199,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# C4264: 'virtual_function': no override available for virtual member function from base 'class'; function is hidden\n",
        "Line" : 201,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# C4265: 'class': class has virtual functions, but destructor is not virtual\n",
        "Line" : 203,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# C4266: 'function' : no override available for virtual member function from base 'type'; function is hidden\n",
        "Line" : 205,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# C4905: wide string literal cast to 'LPSTR'\n",
        "Line" : 207,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# C4906: string literal cast to 'LPWSTR'\n",
        "Line" : 209,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "# C4928: illegal copy-initialization; more than one user-defined conversion has been implicitly applied\n",
        "Line" : 211,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "# C4289: nonstandard extension used : 'var' : loop control variable declared in the for-loop is used outside the for-loop scope\n",
        "Line" : 214,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# C4836: nonstandard extension used : 'type' : local types or unnamed types cannot be used as template arguments\n",
        "Line" : 216,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "#\t\t# NOTE: The following cannot currently be enabled because of Qt headers (at least Qt 5.6.x)\n\n#\t\t# C4946: reinterpret_cast used between related classes: 'class1' and 'class2'\n\n#\t\tset(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} /w14946\")\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Enable /WX\n",
        "Line" : 224,
        "CharPositionInLine" : 3
      },
      "43" : {
        "Text" : "# Disable some warnings for WZ (permanently)\n\n# C4800: 'type' : forcing value to bool 'true' or 'false' (performance warning)\n\n# This warning is no longer generated in Visual Studio 2017+\n",
        "Line" : 230,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# Disable some warnings for WZ (FIXME)\n\n# C4100: unreferenced formal parameter\n",
        "Line" : 235,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "# C4244: 'conversion' conversion from 'type1' to 'type2', possible loss of data // FIXME!!\n",
        "Line" : 238,
        "CharPositionInLine" : 2
      },
      "46" : {
        "Text" : "# C4456: declaration of 'identifier' hides previous local declaration\n",
        "Line" : 240,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "# C4459: declaration of 'identifier' hides global declaration\n",
        "Line" : 242,
        "CharPositionInLine" : 2
      },
      "48" : {
        "Text" : "# C4702: unreachable code\n",
        "Line" : 244,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "# C4245: 'conversion' : conversion from 'type1' to 'type2', signed/unsigned mismatch\n",
        "Line" : 246,
        "CharPositionInLine" : 2
      },
      "50" : {
        "Text" : "# C4701: Potentially uninitialized local variable 'name' used\n",
        "Line" : 248,
        "CharPositionInLine" : 2
      },
      "51" : {
        "Text" : "# C4706: assignment within conditional expression\n",
        "Line" : 250,
        "CharPositionInLine" : 2
      },
      "52" : {
        "Text" : "# Qt headers (at least 5.6.x) necessitate disabling some warnings\n\n# C4127: conditional expression is constant\n",
        "Line" : 253,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "# Set Xcode generator project-level configuration + warning flags\n",
        "Line" : 258,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "# Enable Objective-C ARC\n",
        "Line" : 260,
        "CharPositionInLine" : 2
      },
      "55" : {
        "Text" : "# Debugging Symbols\n",
        "Line" : 263,
        "CharPositionInLine" : 2
      },
      "56" : {
        "Text" : "# WORKAROUND: Ensure debugging symbols are always generated for Release builds\n\n#\n\n# Required because the CMake Xcode generator (at least, as of CMake 3.11.x) automatically\n\n# sets \"Generate Debugging Symbols\" to NO for Release builds, and cannot be overridden by\n\n# setting CMAKE_XCODE_ATTRIBUTE_GCC_GENERATE_DEBUGGING_SYMBOLS.\n",
        "Line" : 266,
        "CharPositionInLine" : 2
      },
      "57" : {
        "Text" : "# Make sure the CLANG_CXX_LANGUAGE_STANDARD Xcode attribute matches the CMAKE_CXX_STANDARD\n",
        "Line" : 274,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# Additional mapping required for CMAKE_CXX_STANDARD => Xcode's CLANG_CXX_LANGUAGE_STANDARD attribute (above)\n\n# Also may need to bump the minimum supported version of Xcode for compilation\n",
        "Line" : 282,
        "CharPositionInLine" : 3
      },
      "59" : {
        "Text" : "# -stdlib=libc++\n",
        "Line" : 287,
        "CharPositionInLine" : 2
      },
      "60" : {
        "Text" : "# Linking\n",
        "Line" : 290,
        "CharPositionInLine" : 2
      },
      "61" : {
        "Text" : "# Apple LLVM - Code Generation\n",
        "Line" : 293,
        "CharPositionInLine" : 2
      },
      "62" : {
        "Text" : "# -fno-common\n",
        "Line" : 294,
        "CharPositionInLine" : 60
      },
      "63" : {
        "Text" : "# Apple Clang - Custom Compiler Flags\n\n# Custom Warning Flags (for which an Xcode attribute is not available)\n",
        "Line" : 296,
        "CharPositionInLine" : 2
      },
      "64" : {
        "Text" : "# Custom Disabling Warning Flags (which are required because of warning flags specified above\n\n# and by CMake's Xcode project generator)\n",
        "Line" : 300,
        "CharPositionInLine" : 2
      },
      "65" : {
        "Text" : "# Custom Warning Flags - No Error Tweaks\n",
        "Line" : 305,
        "CharPositionInLine" : 2
      },
      "66" : {
        "Text" : "# Apple Clang - Preprocessing\n",
        "Line" : 308,
        "CharPositionInLine" : 2
      },
      "67" : {
        "Text" : "# Apple Clang - Warning Policies\n",
        "Line" : 311,
        "CharPositionInLine" : 2
      },
      "68" : {
        "Text" : "#\t\tset(CMAKE_XCODE_ATTRIBUTE_GCC_WARN_PEDANTIC YES)\t# Cannot currently enable in Xcode because of Qt headers\n",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# Enable GCC_TREAT_WARNINGS_AS_ERRORS for WZ targets only\n",
        "Line" : 314,
        "CharPositionInLine" : 3
      },
      "70" : {
        "Text" : "# Apple Clang - Warnings - All languages\n",
        "Line" : 320,
        "CharPositionInLine" : 2
      },
      "71" : {
        "Text" : "# -Wblock-capture-autoreleasing\n",
        "Line" : 321,
        "CharPositionInLine" : 73
      },
      "72" : {
        "Text" : "# -Wswitch\n",
        "Line" : 322,
        "CharPositionInLine" : 69
      },
      "73" : {
        "Text" : "# -Wdeprecated-declarations\n",
        "Line" : 323,
        "CharPositionInLine" : 71
      },
      "74" : {
        "Text" : "# -Wdocumentation\t\t[DISABLED]\n",
        "Line" : 324,
        "CharPositionInLine" : 69
      },
      "75" : {
        "Text" : "# -Wempty-body\n",
        "Line" : 325,
        "CharPositionInLine" : 60
      },
      "76" : {
        "Text" : "# -Wfour-char-constants\n",
        "Line" : 326,
        "CharPositionInLine" : 69
      },
      "77" : {
        "Text" : "# -Wshadow\t\t\t\t[DISABLED] - FIXME\n",
        "Line" : 327,
        "CharPositionInLine" : 55
      },
      "78" : {
        "Text" : "# -Wbool-conversion\n",
        "Line" : 328,
        "CharPositionInLine" : 64
      },
      "79" : {
        "Text" : "# -Wconstant-conversion\n",
        "Line" : 329,
        "CharPositionInLine" : 67
      },
      "80" : {
        "Text" : "# -Wshorten-64-to-32\t[DISABLED] - FIXME\n",
        "Line" : 330,
        "CharPositionInLine" : 68
      },
      "81" : {
        "Text" : "# -Wenum-conversion\n\n# -Wfloat-conversion\t[DISABLED] - FIXME\n",
        "Line" : 331,
        "CharPositionInLine" : 64
      },
      "82" : {
        "Text" : "# -Wint-conversion\n",
        "Line" : 333,
        "CharPositionInLine" : 63
      },
      "83" : {
        "Text" : "# -Wnon-literal-null-conversion\n",
        "Line" : 334,
        "CharPositionInLine" : 73
      },
      "84" : {
        "Text" : "# -Wsign-conversion\t\t[DISABLED] - FIXME\n",
        "Line" : 335,
        "CharPositionInLine" : 70
      },
      "85" : {
        "Text" : "# -Winfinite-recursion\n",
        "Line" : 336,
        "CharPositionInLine" : 66
      },
      "86" : {
        "Text" : "# -Wmissing-braces\n",
        "Line" : 337,
        "CharPositionInLine" : 75
      },
      "87" : {
        "Text" : "# -Wreturn-type\n",
        "Line" : 338,
        "CharPositionInLine" : 64
      },
      "88" : {
        "Text" : "# -Wparentheses\n",
        "Line" : 339,
        "CharPositionInLine" : 66
      },
      "89" : {
        "Text" : "# -Wmissing-field-initializers\n",
        "Line" : 340,
        "CharPositionInLine" : 75
      },
      "90" : {
        "Text" : "# -Wmissing-prototypes\t[DISABLED]\n",
        "Line" : 341,
        "CharPositionInLine" : 69
      },
      "91" : {
        "Text" : "# -Wnewline-eof\n",
        "Line" : 342,
        "CharPositionInLine" : 67
      },
      "92" : {
        "Text" : "# -Wassign-enum (TODO: ADD BELOW TO CLANG?)\n",
        "Line" : 343,
        "CharPositionInLine" : 61
      },
      "93" : {
        "Text" : "# -Wpointer-sign\n",
        "Line" : 344,
        "CharPositionInLine" : 69
      },
      "94" : {
        "Text" : "# -Wsemicolon-before-method-body\n",
        "Line" : 345,
        "CharPositionInLine" : 74
      },
      "95" : {
        "Text" : "# -Wsign-compare\t\t[DISABLED]\n",
        "Line" : 346,
        "CharPositionInLine" : 60
      },
      "96" : {
        "Text" : "# -Wstrict-prototypes\t[DISABLED]\n",
        "Line" : 347,
        "CharPositionInLine" : 65
      },
      "97" : {
        "Text" : "# -Wcomma\n",
        "Line" : 348,
        "CharPositionInLine" : 57
      },
      "98" : {
        "Text" : "## [DISABLED] - FIXME\n",
        "Line" : 349,
        "CharPositionInLine" : 75
      },
      "99" : {
        "Text" : "# -Wformat\n",
        "Line" : 352,
        "CharPositionInLine" : 70
      },
      "100" : {
        "Text" : "# -Wunguarded-availability\n",
        "Line" : 353,
        "CharPositionInLine" : 78
      },
      "101" : {
        "Text" : "# -Wuninitialized\n",
        "Line" : 354,
        "CharPositionInLine" : 74
      },
      "102" : {
        "Text" : "# -Wunknown-pragmas\n",
        "Line" : 355,
        "CharPositionInLine" : 63
      },
      "103" : {
        "Text" : "# -Wunreachable-code\t[DISABLED] - FIXME\n",
        "Line" : 356,
        "CharPositionInLine" : 64
      },
      "104" : {
        "Text" : "# -Wunused-function\n",
        "Line" : 357,
        "CharPositionInLine" : 63
      },
      "105" : {
        "Text" : "# -Wunused-label\n",
        "Line" : 358,
        "CharPositionInLine" : 60
      },
      "106" : {
        "Text" : "# -Wunused-parameter\t[DISABLED] - FIXME?\n",
        "Line" : 359,
        "CharPositionInLine" : 63
      },
      "107" : {
        "Text" : "# -Wunused-value\n",
        "Line" : 360,
        "CharPositionInLine" : 60
      },
      "108" : {
        "Text" : "# -Wunused-variable\n",
        "Line" : 361,
        "CharPositionInLine" : 63
      },
      "109" : {
        "Text" : "# Apple Clang - Warnings - C++\n",
        "Line" : 363,
        "CharPositionInLine" : 2
      },
      "110" : {
        "Text" : "# -Wexit-time-destructors\t[DISABLED]\n",
        "Line" : 364,
        "CharPositionInLine" : 69
      },
      "111" : {
        "Text" : "# -Wnon-virtual-dtor\n",
        "Line" : 365,
        "CharPositionInLine" : 68
      },
      "112" : {
        "Text" : "# -Woverloaded-virtual\n",
        "Line" : 366,
        "CharPositionInLine" : 69
      },
      "113" : {
        "Text" : "# -Wrange-loop-analysis\n",
        "Line" : 367,
        "CharPositionInLine" : 67
      },
      "114" : {
        "Text" : "# -Wmove\n",
        "Line" : 368,
        "CharPositionInLine" : 64
      },
      "115" : {
        "Text" : "# -Winvalid-offsetof\n",
        "Line" : 369,
        "CharPositionInLine" : 72
      },
      "116" : {
        "Text" : "# -Wc++11-extensions\n",
        "Line" : 370,
        "CharPositionInLine" : 65
      },
      "117" : {
        "Text" : "# Apple Clang - Warnings - Objective-C\n",
        "Line" : 372,
        "CharPositionInLine" : 2
      },
      "118" : {
        "Text" : "# -Wdeprecated-objc-isa-usage\n",
        "Line" : 373,
        "CharPositionInLine" : 73
      },
      "119" : {
        "Text" : "# -Wduplicate-method-match\n",
        "Line" : 374,
        "CharPositionInLine" : 70
      },
      "120" : {
        "Text" : "# -Wmplicit-atomic-properties\n",
        "Line" : 375,
        "CharPositionInLine" : 76
      },
      "121" : {
        "Text" : "# -Wobjc-literal-conversion\n\n# -Wprotocol\n",
        "Line" : 376,
        "CharPositionInLine" : 70
      },
      "122" : {
        "Text" : "# -Wobjc-interface-ivars\n",
        "Line" : 378,
        "CharPositionInLine" : 68
      },
      "123" : {
        "Text" : "# -Wdeprecated-implementations\n",
        "Line" : 379,
        "CharPositionInLine" : 76
      },
      "124" : {
        "Text" : "# -Wstrict-selector-match\n",
        "Line" : 380,
        "CharPositionInLine" : 67
      },
      "125" : {
        "Text" : "# -Wundeclared-selector\n",
        "Line" : 381,
        "CharPositionInLine" : 66
      },
      "126" : {
        "Text" : "# -Wobjc-root-class\n",
        "Line" : 382,
        "CharPositionInLine" : 69
      },
      "127" : {
        "Text" : "# Apple LLVM - Warnings - Objective-C and ARC\n",
        "Line" : 384,
        "CharPositionInLine" : 2
      },
      "128" : {
        "Text" : "# -Wexplicit-ownership-type\n",
        "Line" : 385,
        "CharPositionInLine" : 74
      },
      "129" : {
        "Text" : "# -Wimplicit-retain-self\n\n# -Warc-repeated-use-of-weak\n",
        "Line" : 386,
        "CharPositionInLine" : 72
      },
      "130" : {
        "Text" : "# -Warc-bridge-casts-disallowed-in-nonarc\n",
        "Line" : 388,
        "CharPositionInLine" : 70
      },
      "131" : {
        "Text" : "# GCC, Clang, etc\n\n# Comments are provided next to each warning option detailing expected compiler support (from GCC 3.4+, Clang 3.2+ - earlier versions may / may not support these options)\n",
        "Line" : 391,
        "CharPositionInLine" : 2
      },
      "132" : {
        "Text" : "# Enable -Wpedantic (if supported)\n",
        "Line" : 397,
        "CharPositionInLine" : 2
      },
      "133" : {
        "Text" : "# Enable -Wall (if supported)\n",
        "Line" : 401,
        "CharPositionInLine" : 2
      },
      "134" : {
        "Text" : "# Enable -Wextra (if supported)\n",
        "Line" : 405,
        "CharPositionInLine" : 2
      },
      "135" : {
        "Text" : "# Enable -fno-common (if supported)\n",
        "Line" : 409,
        "CharPositionInLine" : 2
      },
      "136" : {
        "Text" : "# -Wcast-align\t\t\t\t(GCC 3.4+, Clang 3.2+)\n",
        "Line" : 413,
        "CharPositionInLine" : 2
      },
      "137" : {
        "Text" : "# -Wcast-qual\t\t\t\t(GCC 3.4+, Clang 3.2+ (no-op until 3.6+))\n",
        "Line" : 417,
        "CharPositionInLine" : 2
      },
      "138" : {
        "Text" : "# -Wctor-dtor-privacy\t\t(GCC 3.4+, Clang 3.2+ (no-op through at least 6.0)) [C++-only]\n",
        "Line" : 421,
        "CharPositionInLine" : 2
      },
      "139" : {
        "Text" : "# -Winit-self\t\t\t\t(GCC 3.4+, Clang 3.2+ (no-op through at least 6.0))\n",
        "Line" : 424,
        "CharPositionInLine" : 2
      },
      "140" : {
        "Text" : "#\t\t# NOTE: Currently disabled\n\n#\t\t# -Wmissing-declarations\t(GCC 3.4+, Clang 3.2+)\n\n#\t\tcheck_compiler_flags_output(\"-Werror -Wmissing-declarations -Wno-error=cpp\" COMPILER_TYPE C   OUTPUT_FLAGS \"-Wmissing-declarations\" OUTPUT_VARIABLE _supported_c_compiler_flags APPEND)\n\n#\t\tcheck_compiler_flags_output(\"-Werror -Wmissing-declarations -Wno-error=cpp\" COMPILER_TYPE CXX OUTPUT_FLAGS \"-Wmissing-declarations\" OUTPUT_VARIABLE _supported_cxx_compiler_flags APPEND)\n",
        "Line" : 428,
        "CharPositionInLine" : 0
      },
      "141" : {
        "Text" : "#\t\t# NOTE: Currently disabled because of miniupnpc (pending fix)\n\n#\t\t# -Wmissing-include-dirs\t(GCC 4.0+, Clang 3.2+ (no-op through at least 6.0))\n\n#\t\tcheck_compiler_flags_output(\"-Werror -Wmissing-include-dirs -Wno-error=cpp\" COMPILER_TYPE C   OUTPUT_FLAGS \"-Wmissing-include-dirs\" OUTPUT_VARIABLE _supported_c_compiler_flags APPEND)\n\n#\t\tcheck_compiler_flags_output(\"-Werror -Wmissing-include-dirs -Wno-error=cpp\" COMPILER_TYPE CXX OUTPUT_FLAGS \"-Wmissing-include-dirs\" OUTPUT_VARIABLE _supported_cxx_compiler_flags APPEND)\n",
        "Line" : 433,
        "CharPositionInLine" : 0
      },
      "142" : {
        "Text" : "#\t\t# NOTE: Currently disabled because of GLM\n\n#\t\t# -Wnoexcept\t\t\t\t(GCC 4.6+) [C++-only]\n\n#\t\tcheck_compiler_flags_output(\"-Werror -Wnoexcept -Wno-error=cpp\" COMPILER_TYPE CXX OUTPUT_FLAGS \"-Wnoexcept\" OUTPUT_VARIABLE _supported_cxx_compiler_flags APPEND)\n",
        "Line" : 438,
        "CharPositionInLine" : 0
      },
      "143" : {
        "Text" : "# -Woverloaded-virtual\t\t(GCC 3.4+, Clang 3.2+) [C++-only]\n",
        "Line" : 442,
        "CharPositionInLine" : 2
      },
      "144" : {
        "Text" : "# -Wstrict-null-sentinel\t(GCC 4.0+) [C++-only]\n",
        "Line" : 445,
        "CharPositionInLine" : 2
      },
      "145" : {
        "Text" : "# -Wwrite-strings\t\t\t(GCC 3.4+, Clang 3.2+)\n",
        "Line" : 448,
        "CharPositionInLine" : 2
      },
      "146" : {
        "Text" : "# -Wpointer-arith\t\t\t(GCC 3.4+, Clang 3.2+)\n",
        "Line" : 452,
        "CharPositionInLine" : 2
      },
      "147" : {
        "Text" : "# -Wstrict-prototypes\t\t(GCC 3.4+, Clang 3.2+ (no-op through at least 6.0)) [C-only]\n",
        "Line" : 456,
        "CharPositionInLine" : 2
      },
      "148" : {
        "Text" : "#\t\t# TODO: Enable this, and verify all code functions as expected\n\n#\t\t# -Wfloat-equal\t\t\t\t(GCC 3.4+)\n\n#\t\tcheck_compiler_flags_output(\"-Werror -Wfloat-equal -Wno-error=cpp\" COMPILER_TYPE C   OUTPUT_FLAGS \"-Wfloat-equal\" OUTPUT_VARIABLE _supported_c_compiler_flags APPEND)\n\n#\t\tcheck_compiler_flags_output(\"-Werror -Wfloat-equal -Wno-error=cpp\" COMPILER_TYPE CXX OUTPUT_FLAGS \"-Wfloat-equal\" OUTPUT_VARIABLE _supported_cxx_compiler_flags APPEND)\n",
        "Line" : 459,
        "CharPositionInLine" : 0
      },
      "149" : {
        "Text" : "# -Wmissing-noreturn\t\t(GCC 3.4+, Clang 3.3+)\n",
        "Line" : 464,
        "CharPositionInLine" : 2
      },
      "150" : {
        "Text" : "#\t\t# -Wundef\t\t\t\t\t(GCC 3.4+, Clang (supported, but min version unclear))\n\n#\t\tcheck_compiler_flags_output(\"-Werror -Wundef -Wno-error=cpp\" COMPILER_TYPE C   OUTPUT_FLAGS \"-Wundef\" OUTPUT_VARIABLE _supported_c_compiler_flags APPEND)\n\n#\t\tcheck_compiler_flags_output(\"-Werror -Wundef -Wno-error=cpp\" COMPILER_TYPE CXX OUTPUT_FLAGS \"-Wundef\" OUTPUT_VARIABLE _supported_cxx_compiler_flags APPEND)\n",
        "Line" : 468,
        "CharPositionInLine" : 0
      },
      "151" : {
        "Text" : "# -Wnon-virtual-dtor\t\t(GCC 3.4+, Clang 3.2+) [C++ only]\n",
        "Line" : 472,
        "CharPositionInLine" : 2
      },
      "152" : {
        "Text" : "#\t\t# FUTURE-TODO: Enable -Wshadow (lots of warnings to fix, some due to 3rdparty dependencies?)\n\n#\t\t# -Wshadow\t\t\t\t\t(GCC 3.4+, Clang 3.2+)\n\n#\t\tcheck_compiler_flags_output(\"-Werror -Wshadow -Wno-error=cpp\" COMPILER_TYPE C   OUTPUT_FLAGS \"-Wshadow\" OUTPUT_VARIABLE _supported_c_compiler_flags APPEND)\n\n#\t\tcheck_compiler_flags_output(\"-Werror -Wshadow -Wno-error=cpp\" COMPILER_TYPE CXX OUTPUT_FLAGS \"-Wshadow\" OUTPUT_VARIABLE _supported_cxx_compiler_flags APPEND)\n",
        "Line" : 475,
        "CharPositionInLine" : 0
      },
      "153" : {
        "Text" : "#\t\t# FUTURE-TODO: Enable -Wuseless-cast (large number of warnings to fix)\n\n#\t\t# -Wuseless-cast\t\t\t(GCC 4.8+)\n\n#\t\tcheck_compiler_flags_output(\"-Werror -Wuseless-cast -Wno-error=cpp\" COMPILER_TYPE C   OUTPUT_FLAGS \"-Wuseless-cast\" OUTPUT_VARIABLE _supported_c_compiler_flags APPEND)\n\n#\t\tcheck_compiler_flags_output(\"-Werror -Wuseless-cast -Wno-error=cpp\" COMPILER_TYPE CXX OUTPUT_FLAGS \"-Wuseless-cast\" OUTPUT_VARIABLE _supported_cxx_compiler_flags APPEND)\n",
        "Line" : 480,
        "CharPositionInLine" : 0
      },
      "154" : {
        "Text" : "# -Wnull-dereference\t\t(GCC 6.0+, Clang 3.2+)\n",
        "Line" : 485,
        "CharPositionInLine" : 2
      },
      "155" : {
        "Text" : "# -Wduplicated-cond\t\t\t(GCC 6.0+)\n",
        "Line" : 489,
        "CharPositionInLine" : 2
      },
      "156" : {
        "Text" : "# -Walloc-zero\t\t\t\t(GCC 7.0+)\n",
        "Line" : 493,
        "CharPositionInLine" : 2
      },
      "157" : {
        "Text" : "# -Walloca-larger-than=1024\t(GCC 7.0+)\n",
        "Line" : 497,
        "CharPositionInLine" : 2
      },
      "158" : {
        "Text" : "# -Wrestrict\t\t\t\t(GCC 7.0+)\n",
        "Line" : 501,
        "CharPositionInLine" : 2
      },
      "159" : {
        "Text" : "# -Wnewline-eof\t\t\t\t(Clang 3.4+)\n",
        "Line" : 505,
        "CharPositionInLine" : 2
      },
      "160" : {
        "Text" : "# -Wrange-loop-analysis\t\t(Clang 3.7+)\n",
        "Line" : 509,
        "CharPositionInLine" : 2
      },
      "161" : {
        "Text" : "# -Wcomma\t\t\t\t\t(Clang 3.9+)\n",
        "Line" : 512,
        "CharPositionInLine" : 2
      },
      "162" : {
        "Text" : "# -Wfloat-conversion\t\t(GCC 4.9+, Clang 3.5+)\n",
        "Line" : 516,
        "CharPositionInLine" : 2
      },
      "163" : {
        "Text" : "# -Wformat-security\n",
        "Line" : 520,
        "CharPositionInLine" : 2
      },
      "164" : {
        "Text" : "# -Wstringop-truncation (GCC 8.0+)\n",
        "Line" : 524,
        "CharPositionInLine" : 2
      },
      "165" : {
        "Text" : "# Enable -Werror (if supported)\n",
        "Line" : 529,
        "CharPositionInLine" : 3
      },
      "166" : {
        "Text" : "# Enable -Wlogical-op (if supported) (warning-only for now)\n",
        "Line" : 536,
        "CharPositionInLine" : 2
      },
      "167" : {
        "Text" : "# Handle -Wfloat-conversion\t(warning-only for now)\n",
        "Line" : 540,
        "CharPositionInLine" : 2
      },
      "168" : {
        "Text" : "# Handle \"sign-compare\" (warning-only for now)\n",
        "Line" : 544,
        "CharPositionInLine" : 2
      },
      "169" : {
        "Text" : "# Disable -Wunused-parameter (FIXME)\n",
        "Line" : 548,
        "CharPositionInLine" : 2
      },
      "170" : {
        "Text" : "# Disable -Wformat-truncation (FIXME?) (Test with GCC 8.0+)\n",
        "Line" : 552,
        "CharPositionInLine" : 2
      },
      "171" : {
        "Text" : "# CMAKE_CURRENT_BINARY_DIR should come before the current source directory\n\n# so that any build products are preferentially included over in-source build\n\n# products that might have been generated by a different compilation method / run\n",
        "Line" : 567,
        "CharPositionInLine" : 0
      },
      "172" : {
        "Text" : "# Solaris / SunOS\n",
        "Line" : 587,
        "CharPositionInLine" : 38
      },
      "173" : {
        "Text" : "# Do not set _XOPEN_SOURCE on FreeBSD (etc)\n",
        "Line" : 594,
        "CharPositionInLine" : 40
      },
      "174" : {
        "Text" : "# Enable POSIX extensions if present\n",
        "Line" : 595,
        "CharPositionInLine" : 24
      },
      "175" : {
        "Text" : "# Attempt to find Miniupnpc (minimum supported API version = 9)\n\n# NOTE: This is not available on every platform / distro\n",
        "Line" : 652,
        "CharPositionInLine" : 0
      },
      "176" : {
        "Text" : "# Install base text / info files\n",
        "Line" : 681,
        "CharPositionInLine" : 0
      },
      "177" : {
        "Text" : "# Target system is Windows\n\n# Must convert the wz2100_ROOT_FILES to Windows line endings, and rename with \".txt\" at the end\n",
        "Line" : 683,
        "CharPositionInLine" : 1
      },
      "178" : {
        "Text" : "# Read in the file\n",
        "Line" : 688,
        "CharPositionInLine" : 2
      },
      "179" : {
        "Text" : "# Strip all CRs\n",
        "Line" : 690,
        "CharPositionInLine" : 2
      },
      "180" : {
        "Text" : "# Convert all LFs to CRLFs\n",
        "Line" : 692,
        "CharPositionInLine" : 2
      },
      "181" : {
        "Text" : "# Write out the converted file\n",
        "Line" : 694,
        "CharPositionInLine" : 2
      },
      "182" : {
        "Text" : "# Just copy the files to the build directory\n",
        "Line" : 701,
        "CharPositionInLine" : 1
      },
      "183" : {
        "Text" : "# Add \"dist\" target alias (using CPack package_source)\n",
        "Line" : 714,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 184
    },
    "Makefile.am" : {
      "ObjectId" : "03fa5c8463d8896eaba4bbff2ed097b1be6bc4f9",
      "LastModified" : "2019-04-03T17:12:30Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# ignore the autorevision.cache file on make distcheck\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "build_tools/autorevision.cmake" : {
      "ObjectId" : "a8b64a3620b7ef5c456c8b2cf882911f3501b810",
      "LastModified" : "2019-04-03T17:12:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# [Autorevision.cmake]\n\n#\n\n# CMake version of `autorevision` bash script:\n\n# Copyright (c) 2012 - 2013 dak180 and contributors. See\n\n# http://opensource.org/licenses/mit-license.php or the included\n\n# COPYING.md for licence terms.\n\n#\n\n# autorevision.CMake:\n\n# Copyright © 2018 pastdue ( https://github.com/past-due/ ) and contributors\n\n# License: MIT License ( https://opensource.org/licenses/MIT )\n\n#\n\n#\n\n# To call, define the following variables as appropriate:\n\n# OUTPUT_TYPE <h | sh>\n\n# OUTPUT_FILE <file>\n\n# CACHEFILE <file>\n\n# CACHEFORCE\n\n# SKIPUPDATECACHE\n\n# VAROUT (output all variable names and values to stdout; quiets other output)\n\n#\n\n# To ensure that this is run at *build* time, this script should be run in a custom command / target\n\n#\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\tmessage( STATUS \"Autorevision.cmake\" )\n\n#\tmessage( STATUS \"OUTPUT_TYPE=${OUTPUT_TYPE}\" )\n\n#\tmessage( STATUS \"OUTPUT_FILE=${OUTPUT_FILE}\" )\n\n#\tmessage( STATUS \"CACHEFILE=${CACHEFILE}\" )\n\n#\tmessage( STATUS \"CACHEFORCE=${CACHEFORCE}\" )\n\n#\tmessage( STATUS \"SKIPUPDATECACHE=${SKIPUPDATECACHE}\" )\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Files are different - copied input to output!\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# message( STATUS \"set(${CMAKE_MATCH_1} \\\"${CMAKE_MATCH_2}\\\")\" )\n",
        "Line" : 144,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# message( STATUS \"set(${CMAKE_MATCH_1} \\\"\\\")\" )\n",
        "Line" : 147,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Remove \"v/\" or \"v\" prefix (as in \"v3.2.2\"), if present\n",
        "Line" : 157,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# Remove _beta* or _rc* suffix, if present\n",
        "Line" : 161,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# Extract up to a 3-component version # from the beginning of the tag (i.e. 3.2.2)\n",
        "Line" : 165,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# VCS_BASENAME=\"$(basename \"${PWD}\")\")\n",
        "Line" : 187,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# Check if working copy is clean, however, we will ignore any and all po files\n\n# when we determine if modifications were done.\n\n# git update-index --assume-unchanged po/*.po\n",
        "Line" : 190,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# test -z \"$(git status --untracked-files=no --porcelain)\"\n",
        "Line" : 195,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# now, reset index back to normal\n\n# git update-index --no-assume-unchanged po/*.po\n",
        "Line" : 207,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# The full revision hash\n\n# VCS_FULL_HASH=\"$(git rev-parse HEAD)\"\n",
        "Line" : 212,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# The short hash\n\n# VCS_SHORT_HASH=\"$(echo \"${VCS_FULL_HASH}\" | cut -b 1-7)\"\n",
        "Line" : 219,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# Current branch (if we are on a branch...)\n\n# VCS_BRANCH=\"$(git symbolic-ref --short -q HEAD)\"\n",
        "Line" : 223,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "# Check if we are on a tag\n\n# VCS_TAG=\"$(git describe --exact-match 2> /dev/null)\"\n",
        "Line" : 230,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "# get some extra data in case we are not on a branch or a tag...\n\n# VCS_EXTRA=\"$(git describe 2> /dev/null)\"\n",
        "Line" : 237,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "# get the # of commits in the current history\n\n# IMPORTANT: This value is incorrect if operating from a shallow clone\n\n# VCS_COMMIT_COUNT=\"$(git rev-list --count HEAD 2> /dev/null)\"\n",
        "Line" : 244,
        "CharPositionInLine" : 1
      },
      "18" : {
        "Text" : "# revision=\"$(git rev-list --tags --skip=${tag_skip} --max-count=1 2> /dev/null)\"\n",
        "Line" : 254,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# current_tag=\"$(git describe --abbrev=0 --tags \"${revision}\" 2> /dev/null)\"\n",
        "Line" : 263,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Found a tag that looks like a version number\n",
        "Line" : 274,
        "CharPositionInLine" : 3
      },
      "21" : {
        "Text" : "# VCS_COMMIT_COUNT_SINCE_MOST_RECENT_TAGGED_VERSION=\"$(git rev-list --count ${VCS_MOST_RECENT_TAGGED_VERSION}.. 2> /dev/null)\"\n",
        "Line" : 287,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# get the commit count on this branch *since* the branch from master\n\n# VCS_BRANCH_COMMIT_COUNT=\"$(git rev-list --count master.. 2> /dev/null)\"\n",
        "Line" : 294,
        "CharPositionInLine" : 1
      },
      "23" : {
        "Text" : "# get the commit count on master until the branch\n\n# first_new_commit_on_branch_since_master=\"$(git rev-list master.. | tail -n 1)\"\n",
        "Line" : 301,
        "CharPositionInLine" : 1
      },
      "24" : {
        "Text" : "# The call succeeded, but git returned nothing\n\n# The number of commits since master is 0, so set VCS_COMMIT_COUNT_ON_MASTER_UNTIL_BRANCH\n\n# to be equal to VCS_COMMIT_COUNT\n",
        "Line" : 316,
        "CharPositionInLine" : 3
      },
      "25" : {
        "Text" : "# VCS_COMMIT_COUNT_ON_MASTER_UNTIL_BRANCH=\"$(git rev-list --count ${first_new_commit_on_branch_since_master}^ 2> /dev/null)\"\n",
        "Line" : 321,
        "CharPositionInLine" : 3
      },
      "26" : {
        "Text" : "# get the most recent commit date\n\n# VCS_MOST_RECENT_COMMIT_DATE=\"$(git log -1 --format=%cI)\"\n",
        "Line" : 329,
        "CharPositionInLine" : 1
      },
      "27" : {
        "Text" : "# VCS_MOST_RECENT_COMMIT_YEAR=\"$(git log -1 --format=%cI | cut -d \"-\" -f1)\"\n",
        "Line" : 335,
        "CharPositionInLine" : 1
      },
      "28" : {
        "Text" : "# cleanup\n",
        "Line" : 338,
        "CharPositionInLine" : 1
      },
      "29" : {
        "Text" : "# Information must be extracted from a combination of Travis-set environment\n\n# variables and other sources\n",
        "Line" : 346,
        "CharPositionInLine" : 1
      },
      "30" : {
        "Text" : "# Start by calling gitRepo, since certain values should be obtained directly from git\n\n# IMPORTANT: Since Travis uses a shallow clone by default, unshallow must be performed before\n\n#            this script is run so that the correct values can be obtained by gitRepo().\n",
        "Line" : 349,
        "CharPositionInLine" : 1
      },
      "31" : {
        "Text" : "# The full revision hash\n",
        "Line" : 354,
        "CharPositionInLine" : 1
      },
      "32" : {
        "Text" : "# The short hash\n",
        "Line" : 357,
        "CharPositionInLine" : 1
      },
      "33" : {
        "Text" : "# Current branch\n",
        "Line" : 360,
        "CharPositionInLine" : 1
      },
      "34" : {
        "Text" : "# When triggered by a pull request, TRAVIS_BRANCH is set to the *target* branch name\n\n# But we want the source branch name, so use TRAVIS_PULL_REQUEST_BRANCH\n",
        "Line" : 363,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# Check if we are on a tag\n",
        "Line" : 368,
        "CharPositionInLine" : 1
      },
      "36" : {
        "Text" : "# When on a tag, clear VCS_BRANCH\n",
        "Line" : 373,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# Extract most symbols from the Git repo first\n",
        "Line" : 382,
        "CharPositionInLine" : 1
      },
      "38" : {
        "Text" : "# Get remaining symbols from the AppVeyor environment variables\n\n# See: https://www.appveyor.com/docs/environment-variables/\n",
        "Line" : 385,
        "CharPositionInLine" : 1
      },
      "39" : {
        "Text" : "# Determine VCS_BRANCH\n",
        "Line" : 388,
        "CharPositionInLine" : 1
      },
      "40" : {
        "Text" : "# On a PR build, APPVEYOR_REPO_BRANCH is set to the *base* branch that's being merged into\n\n# Use APPVEYOR_PULL_REQUEST_HEAD_REPO_BRANCH to get the source branch\n",
        "Line" : 390,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# In the normal case, use APPVEYOR_REPO_BRANCH\n",
        "Line" : 394,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "# Determine VCS_TAG\n",
        "Line" : 404,
        "CharPositionInLine" : 1
      },
      "43" : {
        "Text" : "# Detect and collect repo data.\n",
        "Line" : 432,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# When requested only read from the cache to populate our symbols.\n",
        "Line" : 435,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "# On AppVeyor\n",
        "Line" : 445,
        "CharPositionInLine" : 2
      },
      "46" : {
        "Text" : "# On Travis-CI\n",
        "Line" : 451,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "# We are not in a repo; try to use a previously generated cache to populate our symbols.\n",
        "Line" : 463,
        "CharPositionInLine" : 1
      },
      "48" : {
        "Text" : "# Do not overwrite the cache if we know we are not going to write anything new.\n",
        "Line" : 465,
        "CharPositionInLine" : 1
      },
      "49" : {
        "Text" : "# VAROUT output is handled here\n",
        "Line" : 474,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Detect requested output type and use it.\n",
        "Line" : 493,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# If requested, make a cache file.\n",
        "Line" : 504,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 52
    },
    "build_tools/autorevision_helpers.cmake" : {
      "ObjectId" : "ed9bb961f5ebb6263f0a79005aa0b2e70f47d507",
      "LastModified" : "2018-03-22T02:38:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Provides functions for:\n\n#\t- importing the autorevision data into the CMake local environment\n\n#\t- extracting version information from the autorevision data\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Import the autorevision values into the current scope as CMake variables\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Remove \"v/\" or \"v\" prefix (as in \"v3.2.2\"), if present\n",
        "Line" : 26,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# Remove _beta* or _rc* suffix, if present\n",
        "Line" : 30,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# Extract up to a 3-component version # from the beginning of the tag (i.e. 3.2.2)\n",
        "Line" : 34,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# remove the first \".\" character\n",
        "Line" : 50,
        "CharPositionInLine" : 60
      },
      "6" : {
        "Text" : "# remove the first \".\" character\n",
        "Line" : 54,
        "CharPositionInLine" : 60
      },
      "7" : {
        "Text" : "# Use the Tag\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Use the branch\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Use VCS_EXTRA\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 10
    },
    "build_tools/ci/travis/prepare_git_repo.cmake" : {
      "ObjectId" : "1542080fa8fa7fc3c4234427aa7d12eb216c224a",
      "LastModified" : "2019-04-03T17:12:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# [preparegitrepo.cmake]\n\n#\n\n# Copyright © 2018 pastdue ( https://github.com/past-due/ ) and contributors\n\n# License: MIT License ( https://opensource.org/licenses/MIT )\n\n#\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Travis-CI: Repo prep\n\n# (Travis limits Git clone depth, but we need the full history *and* the master branch for autorevision)\n\n# See: https://stackoverflow.com/a/44036486\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Keep track of where Travis put us.\n\n# We are on a detached head, and we need to be able to go back to it.\n",
        "Line" : 15,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# Fetch all the remote branches. Travis clones with `--depth`, which\n\n# implies `--single-branch`, so we need to overwrite remote.origin.fetch to\n\n# do that.\n\n# \"git config --replace-all remote.origin.fetch +refs/heads/*:refs/remotes/origin/*\"\n",
        "Line" : 21,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# echo \"travis_fold:start:git.fetch.unshallow\"\n",
        "Line" : 28,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# \"git fetch --unshallow\"\n",
        "Line" : 30,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# echo \"travis_fold:end:git.fetch.unshallow\"\n",
        "Line" : 32,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# also fetch the tags\n\n# echo \"travis_fold:start:git.fetch.tags\"\n",
        "Line" : 35,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# \"git fetch --tags\"\n",
        "Line" : 38,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# echo \"travis_fold:end:git.fetch.tags\"\n",
        "Line" : 40,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# checkout master to ensure that a local master branch exists\n\n# \"git checkout -qf master\"\n",
        "Line" : 43,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# finally, go back to where we were at the beginning\n\n# \"git checkout -qf ${build_head}\"\n",
        "Line" : 47,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 12
    },
    "cmake/AddTargetLinkFlagsIfSupported.cmake" : {
      "ObjectId" : "bb78f9a6bb62274ab411842f88610de4ae94c075",
      "LastModified" : "2018-03-22T02:38:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright © 2018 pastdue ( https://github.com/past-due/ ) and contributors\n\n# License: MIT License ( https://opensource.org/licenses/MIT )\n\n#\n\n# Script Version: 2018-02-19a\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ADD_TARGET_LINK_FLAGS_IF_SUPPORTED( TARGET <target>\n\n#\t\t\t\t\t\t\t\t\t  [COMPILER_TYPE <C | CXX> = CXX]\n\n#\t\t\t\t\t\t\t\t\t  LINK_FLAGS <link_flags>\n\n#\t\t\t\t\t\t\t\t\t  [CACHED_RESULT_NAME <cached_result_name>]\n\n#\t\t\t\t\t\t\t\t\t  [QUIET <ALL | FAILURES | OFF> = FAILURES] )\n\n#\n\n# ADD_TARGET_LINK_FLAGS_IF_SUPPORTED adds the specified link flags to the target if\n\n# the link flags seem to be supported by the current (specified) compiler + linker.\n\n#\n\n# If COMPILER_TYPE C is specified, this checks if the configured C compiler + linker\n\n# seems to support the link flags. If COMPILER_TYPE CXX is specified, this checks\n\n# if the configured CXX compiler + linker seems to support the link flags. The\n\n# default COMPILER_TYPE is CXX.\n\n#\n\n# If CACHED_RESULT_NAME is specified, the result of the link-flag check will be stored\n\n# in a CACHE variable with the name ${CACHED_RESULT_NAME}. Every subsequent CMake run\n\n# will re-use this cached value rather than performing the check again, even if the\n\n# ``code`` changes. If you wish to perform the check anew on every CMake run, omit\n\n# the CACHED_RESULT_NAME parameter. (In most cases, using a CACHED_RESULT_NAME is\n\n# recommended.)\n\n#\n\n# QUIET can be specified to control message output with one of the following settings:\n\n#\t\"ALL\" - do NOT output any messages\n\n#\t\"FAILIRES\" - do NOT output messages on any failures\n\n#\t\"OFF\" - all output is enabled\n\n#\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Generate a temporary variable name that isn't in the cache\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Unset the temporary cached variable that CHECK_CXX_LINKER_FLAG populated\n",
        "Line" : 98,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# CHECK_C_LINKER_FLAGS( <_FLAGS> <_RESULT>\n\n#\t\t\t\t\t\t[QUIET] )\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# CHECK_CXX_LINKER_FLAGS( <_FLAGS> <_RESULT>\n\n#\t\t\t\t\t\t  [QUIET] )\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/CheckCompilerFlagsOutput.cmake" : {
      "ObjectId" : "4d6a7ed1fc49201049bf60fe56859d1092a60376",
      "LastModified" : "2019-04-03T17:12:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright © 2018 pastdue ( https://github.com/past-due/ ) and contributors\n\n# License: MIT License ( https://opensource.org/licenses/MIT )\n\n#\n\n# Script Version: 2018-07-08a\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CHECK_COMPILER_FLAGS_OUTPUT(\t<compiler_flags>\n\n#\t\t\t\t\t\t\t\tCOMPILER_TYPE <C | CXX>\n\n#\t\t\t\t\t\t\t\t[OUTPUT_FLAGS <output_compiler_flags> = compiler_flags]\n\n#\t\t\t\t\t\t\t\tOUTPUT_VARIABLE <output_variable>\n\n#\t\t\t\t\t\t\t\t[APPEND]\n\n#\t\t\t\t\t\t\t\t[FORCE]\n\n#\t\t\t\t\t\t\t\t[QUIET <ALL | FAILURES | OFF> = FAILURES] )\n\n#\n\n# CHECK_COMPILER_FLAGS_OUTPUT sets the OUTPUT_VARIABLE to the output flags if the current\n\n# compiler seems to support the specified compiler flags.\n\n#\n\n# If COMPILER_TYPE C is specified, this checks if the configured C compiler seems\n\n# to support the specified compiler flags. If COMPILER_TYPE CXX is specified, this\n\n# checks if the configured CXX compiler seems to support the compiler flags.\n\n#\n\n# If OUTPUT_FLAGS is specified, and the compiler supports the input compiler_flags, the\n\n# value of OUTPUT_FLAGS will be used to set / append to the OUTPUT_VARIABLE (instead\n\n# of the input compiler_flags).\n\n#\n\n# If APPEND is specified, the output flags will be appended to the current contents of\n\n# the OUTPUT_VARIABLE.\n\n#\n\n# If FORCE is specified, the value of this check will not be cached (and any\n\n# previously-cached value will be ignored).\n\n#\n\n# QUIET can be specified to control message output with one of the following settings:\n\n#\t\"ALL\" - do NOT output any messages\n\n#\t\"FAILIRES\" - do NOT output messages on any failures\n\n#\t\"OFF\" - all output is enabled\n\n#\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Create a sanitized version of the input compiler flags string that can be used in a variable name\n",
        "Line" : 131,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# Generate a temporary variable name that isn't in the cache\n",
        "Line" : 141,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Unset the temporary cached variable that CHECK_<LANG>_COMPILER_FLAG populated\n",
        "Line" : 172,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "cmake/CopyFileHelper.cmake" : {
      "ObjectId" : "7e49782fb0fd5e85196271017e5a700fd8c2bec4",
      "LastModified" : "2019-04-03T17:12:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Required input defines:\n\n# - INPUT_FILE: the path to the input file\n\n# - OUTPUT_FILE: the full filename + path for the output file\n\n#\n\n# Optional input defines:\n\n# - SKIP_IF_OUTPUT_EXISTS: ON or OFF (default)\n\n# - SKIP_IF_INPUT_MISSING: ON or OFF (default)\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copy source file to destination path\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/DisallowInSourceBuilds.cmake" : {
      "ObjectId" : "e0b177ff5badc7205afcbe077a7fd1a338223863",
      "LastModified" : "2019-04-03T17:12:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/FindA2X.cmake" : {
      "ObjectId" : "5502aa531dcdbfa7d359b1ac4d9ad2eb93aa27da",
      "LastModified" : "2019-04-03T17:12:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Original Source: https://github.com/KiCad/kicad-doc/blob/master/CMakeModules/FindA2X.cmake\n\n# License: https://github.com/KiCad/kicad-doc/blob/master/LICENSE.adoc\n\n# -----------------\n\n# The KiCad documentation is dual licensed. You may distribute it and/or modify it under the terms of either the GNU General Public License (http://www.gnu.org/licenses/gpl.html), version 3 or later, or the Creative Commons Attribution License (http://creativecommons.org/licenses/by/3.0/), version 3.0 or later.\n\n# -----------------\n\n#\n\n# (c)2015 KiCad Developers\n\n# (c)2015 Brian Sidebotham <brian.sidebotham@gmail.com>\n\n#\n\n# CMake module to find a2x (part of the asciidoc toolchain).\n\n#\n\n# Variables generated:\n\n#\n\n# A2X_FOUND     true when A2X_COMMAND is valid\n\n# A2X_COMMAND   The command to run a2x (may be a list including an interpreter)\n\n# A2X_VERSION   The a2x version that has been found\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Have a go at finding a a2x executable\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Found something, attempt to try and use it...\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If it worked, set the A2X_COMMAND\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# If nothing could be found, test to see if we can just find the script file,\n\n# that we'll then run with the python interpreter\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Find the python interpreter quietly\n",
        "Line" : 43,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Python's not available so can't find a2x...\n",
        "Line" : 49,
        "CharPositionInLine" : 12
      },
      "7" : {
        "Text" : "# Build the python based command\n",
        "Line" : 52,
        "CharPositionInLine" : 12
      },
      "8" : {
        "Text" : "# If it still can't be run, then give up\n",
        "Line" : 62,
        "CharPositionInLine" : 12
      },
      "9" : {
        "Text" : "# If we've found a command that works, check the version\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Generate the *_FOUND as necessary, etc.\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "cmake/FindAsciidoctor.cmake" : {
      "ObjectId" : "50a89e5000ace1028a51e7525849d989d8beab08",
      "LastModified" : "2019-04-03T17:12:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# License: MIT License ( https://opensource.org/licenses/MIT )\n\n#\n\n# CMake module to find Asciidoctor\n\n#\n\n# Variables generated:\n\n#\n\n# Asciidoctor_FOUND     true when Asciidoctor_COMMAND is valid\n\n# Asciidoctor_COMMAND   The command to run Asciidoctor\n\n# Asciidoctor_VERSION   The Asciidoctor version that has been found\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Try to find an Asciidoctor executable\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If success, set the ASCIIDOCTOR_COMMAND\n",
        "Line" : 25,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# Else, check if running the ASCIIDOCTOR_BAT succeeds (on Windows)\n",
        "Line" : 29,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# If a command was found, check the version\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/FindHarfbuzz.cmake" : {
      "ObjectId" : "810828e3e178da7597946c6285f61314d4b7dcb9",
      "LastModified" : "2019-04-03T17:12:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to locate Harfbuzz\n\n# This module defines:\n\n#\n\n#  HARFBUZZ_INCLUDE_DIRS\n\n#  HARFBUZZ_LIBRARIES\n\n#  HARFBUZZ_FOUND\n\n#  HARFBUZZ_VERSION_STRING, human-readable string containing the version of Harfbuzz\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If PkgConfig is available, attempt to find Harfbuzz using PkgConfig\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Found Harfbuzz with PkgConfig\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Attempt to find Harfbuzz manually\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/FindIntl.cmake" : {
      "ObjectId" : "6a2605044224cc3820a67822adb5f8122e20d5a3",
      "LastModified" : "2019-04-03T17:12:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Modified 2018-05-30: (Warzone) Fix find_library on Windows+vcpkg (needs NAME \"libintl\" in addition to \"intl\")\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#.rst:\n\n# FindIntl\n\n# --------\n\n#\n\n# Find the Gettext libintl headers and libraries.\n\n#\n\n# This module reports information about the Gettext libintl\n\n# installation in several variables.  General variables::\n\n#\n\n#   Intl_FOUND - true if the libintl headers and libraries were found\n\n#   Intl_INCLUDE_DIRS - the directory containing the libintl headers\n\n#   Intl_LIBRARIES - libintl libraries to be linked\n\n#\n\n# The following cache variables may also be set::\n\n#\n\n#   Intl_INCLUDE_DIR - the directory containing the libintl headers\n\n#   Intl_LIBRARY - the libintl library (if any)\n\n#\n\n# .. note::\n\n#   On some platforms, such as Linux with GNU libc, the gettext\n\n#   functions are present in the C standard library and libintl\n\n#   is not required.  ``Intl_LIBRARIES`` will be empty in this\n\n#   case.\n\n#\n\n# .. note::\n\n#   If you wish to use the Gettext tools (``msgmerge``,\n\n#   ``msgfmt``, etc.), use :module:`FindGettext`.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Written by Roger Leigh <rleigh@codelibre.net>\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Find include directory\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Find all Intl libraries\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/FindMiniupnpc.cmake" : {
      "ObjectId" : "87689ceee9c88a990c71621b6020c1d449aaf091",
      "LastModified" : "2019-04-03T17:12:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Locate Miniupnpc\n\n#\n\n# This module defines:\n\n#\n\n#  MINIUPNPC_INCLUDE_DIR\n\n#  MINIUPNPC_LIBRARY\n\n#  MINIUPNPC_FOUND\n\n#  MINIUPNPC_API_VERSION_STRING, human-readable string containing the MINIUPNPC_API_VERSION\n\n#\n\n# If Miniupnpc is successfully detected, it also adds an IMPORTED library target: imported-miniupnpc\n\n#\n\n# To find Miniupnpc, specify:\n\n#   find_package(Miniupnpc [MINIUPNPC_API_VERSION] [REQUIRED])\n\n#\n\n# NOTES:\n\n# - If a \"version\" is specified in the find_package command, it will be compared against the MINIUPNPC_API_VERSION,\n\n#   *NOT* the MINIUPNPC_VERSION.\n\n# - MINIUPNPC_API_VERSION was added in MINIUPNPC_VERSION 1.7. Version detection for earlier Miniupnpc releases that\n\n#   lack the MINIUPNPC_API_VERSION define is not currently supported.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Extract MINIUPNPC_API_VERSION from miniupnpc.h\n",
        "Line" : 31,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    },
    "cmake/FindOggVorbis.cmake" : {
      "ObjectId" : "dff861a5eacc1856360a17bd3076ffdfab913c36",
      "LastModified" : "2019-04-03T17:12:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the OggVorbis libraries\n\n# Once done this will define\n\n#\n\n#  OGGVORBIS_FOUND - system has OggVorbis\n\n#  OGGVORBIS_VERSION - set either to 1 or 2\n\n#  OGGVORBIS_INCLUDE_DIR - the OggVorbis include directory\n\n#  OGGVORBIS_LIBRARIES - The libraries needed to use OggVorbis\n\n#  OGG_LIBRARY         - The Ogg library\n\n#  VORBIS_LIBRARY      - The Vorbis library\n\n#  VORBISFILE_LIBRARY  - The VorbisFile library\n\n#  VORBISENC_LIBRARY   - The VorbisEnc library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, Richard Laerkaeng, <richard@goteborg.utfors.se>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n\n# COPYING-CMAKE-SCRIPTS:\n\n# ----------------------\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# 1. Redistributions of source code must retain the copyright\n\n#    notice, this list of conditions and the following disclaimer.\n\n# 2. Redistributions in binary form must reproduce the copyright\n\n#    notice, this list of conditions and the following disclaimer in the\n\n#    documentation and/or other materials provided with the distribution.\n\n# 3. The name of the author may not be used to endorse or promote products \n\n#    derived from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n\n# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n\n# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n\n# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\n\n# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n\n# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n\n# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n# ----------------------\n\n#\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#find_library(VORBISENC_LIBRARY NAMES vorbisenc) # Remove Enc - WZ\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#mark_as_advanced(VORBIS_INCLUDE_DIR OGG_INCLUDE_DIR\n\n#                 OGG_LIBRARY VORBIS_LIBRARY VORBISFILE_LIBRARY VORBISENC_LIBRARY)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Remove Enc - WZ\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#if (VORBIS_INCLUDE_DIR AND VORBIS_LIBRARY AND VORBISFILE_LIBRARY AND VORBISENC_LIBRARY) # Remove Enc - WZ\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#  set(OGGVORBIS_LIBRARIES ${OGG_LIBRARY} ${VORBIS_LIBRARY} ${VORBISFILE_LIBRARY} ${VORBISENC_LIBRARY}) # Remove Enc - WZ\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#else (VORBIS_INCLUDE_DIR AND VORBIS_LIBRARY AND VORBISFILE_LIBRARY AND VORBISENC_LIBRARY) # Remove Enc - WZ\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#endif (VORBIS_INCLUDE_DIR AND VORBIS_LIBRARY AND VORBISFILE_LIBRARY AND VORBISENC_LIBRARY) # Remove Enc - WZ\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Add FindPackageHandleStdArgs - WZ\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#check_include_files(vorbis/vorbisfile.h HAVE_VORBISFILE_H)\n\n#check_library_exists(ogg ogg_page_version \"\" HAVE_LIBOGG)\n\n#check_library_exists(vorbis vorbis_info_init \"\" HAVE_LIBVORBIS)\n\n#check_library_exists(vorbisfile ov_open \"\" HAVE_LIBVORBISFILE)\n\n#check_library_exists(vorbisenc vorbis_info_clear \"\" HAVE_LIBVORBISENC)\n\n#check_library_exists(vorbis vorbis_bitrate_addblock \"\" HAVE_LIBVORBISENC2)\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#if (HAVE_LIBOGG AND HAVE_VORBISFILE_H AND HAVE_LIBVORBIS AND HAVE_LIBVORBISFILE AND HAVE_LIBVORBISENC)\n\n#    message(STATUS \"Ogg/Vorbis found\")\n\n#    set (VORBIS_LIBS \"-lvorbis -logg\")\n\n#    set (VORBISFILE_LIBS \"-lvorbisfile\")\n\n#    set (VORBISENC_LIBS \"-lvorbisenc\")\n\n#    set (OGGVORBIS_FOUND TRUE)\n\n#    if (HAVE_LIBVORBISENC2)\n\n#        set (HAVE_VORBIS 2)\n\n#    else (HAVE_LIBVORBISENC2)\n\n#        set (HAVE_VORBIS 1)\n\n#    endif (HAVE_LIBVORBISENC2)\n\n#else (HAVE_LIBOGG AND HAVE_VORBISFILE_H AND HAVE_LIBVORBIS AND HAVE_LIBVORBISFILE AND HAVE_LIBVORBISENC)\n\n#    message(STATUS \"Ogg/Vorbis not found\")\n\n#endif (HAVE_LIBOGG AND HAVE_VORBISFILE_H AND HAVE_LIBVORBIS AND HAVE_LIBVORBISFILE AND HAVE_LIBVORBISENC)\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "cmake/FindSDL2.cmake" : {
      "ObjectId" : "27585ff2454ea0fe50bbdab474a930700cb9ea9f",
      "LastModified" : "2019-04-03T17:12:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to locate SDL2\n\n# This module defines:\n\n#\n\n#  SDL2_INCLUDE_DIR\n\n#  SDL2_LIBRARY\n\n#  SDL2_FOUND\n\n#  SDL2_VERSION_STRING, human-readable string containing the version of SDL\n\n#\n\n# Portions derived from FindSDL.cmake, distributed under the OSI-approved BSD 3-Clause License (https://cmake.org/licensing)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set by select_library_configurations(), but we want the one from\n\n# find_package_handle_standard_args() below.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindTheora.cmake" : {
      "ObjectId" : "2a122b2227dd2536f655a1b1685c3915246ce5db",
      "LastModified" : "2019-04-03T17:12:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Source: https://github.com/Kitware/VTK/blob/0593d416f56ee2919c3ca0a2b7da1e00be3cad45/CMake/FindTHEORA.cmake\n\n#\n\n# License: https://github.com/Kitware/VTK/blob/master/Copyright.txt\n\n#\n\n# /*=========================================================================\n\n#\n\n# Program:   Visualization Toolkit\n\n# Module:    Copyright.txt\n\n#\n\n# Copyright (c) 1993-2015 Ken Martin, Will Schroeder, Bill Lorensen\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright notice,\n\n# this list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright notice,\n\n# this list of conditions and the following disclaimer in the documentation\n\n# and/or other materials provided with the distribution.\n\n#\n\n# * Neither name of Ken Martin, Will Schroeder, or Bill Lorensen nor the names\n\n# of any contributors may be used to endorse or promote products derived\n\n# from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ``AS IS''\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE LIABLE FOR\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n\n# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n# =========================================================================*/\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindZIP.cmake" : {
      "ObjectId" : "46aca84787215e1d66fabc70265aed884f62962f",
      "LastModified" : "2019-04-03T17:12:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find a supported ZIP compression executable\n\n# Once done this will define\n\n#\n\n#  ZIP_FOUND - system has a zip executable\n\n#  ZIP_EXECUTABLE - the zip executable\n\n#\n\n# This script supports detection of the following programs:\n\n#\t7-Zip (`7z`, `7za`)\n\n#\t`zip` (installed locally or through Cygwin)\n\n#\n\n# It also provides a function COMPRESS_ZIP that can be used to compress a list of files / folders,\n\n# specifying various options. COMPRESS_ZIP supports all of the above detected ZIP_EXECUTABLE possibilities.\n\n#\n\n#\n\n# Copyright © 2018 pastdue ( https://github.com/past-due/ ) and contributors\n\n# License: MIT License ( https://opensource.org/licenses/MIT )\n\n#\n\n# Script Version: 2019-01-11a\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Search for a supported executable to use for ZIP compression\n\n#\n\n# The search is a modified version of the search code in: https://github.com/Kitware/CMake/blob/master/Modules/CPackZIP.cmake\n\n# Which is distributed under the OSI-approved BSD 3-Clause License (https://cmake.org/licensing)\n\n#\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search for 7-Zip\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Test whether 7-Zip supports the \"-bb0\" option to disable log output\n",
        "Line" : 34,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# Search for \"zip\"\n",
        "Line" : 52,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# Support find_package(ZIP [REQUIRED])\n\n#\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# COMPRESS_ZIP(outputFile\n\n#\t\t\t   [COMPRESSION_LEVEL <0 | 1 | 3 | 5 | 7 | 9>]\n\n#\t\t\t   [WORKING_DIRECTORY dir]\n\n#\t\t\t   PATHS file1 ...  fileN\n\n#\t\t\t   [QUIET])\n\n#\n\n# Compress a list of files / folders into a ZIP file, named <outputFile>.\n\n# Any directories specified will cause the directory's contents to be recursively included.\n\n#\n\n# If COMPRESSION_LEVEL is specified, the ZIP compression level setting will be passed\n\n# through to the ZIP_EXECUTABLE. A compression level of \"0\" means no compression.\n\n#\n\n# If WORKING_DIRECTORY is specified, the WORKING_DIRECTORY will be set for the execution of\n\n# the ZIP_EXECUTABLE.\n\n#\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Check compression level\n\n# Limited to certain compression levels because 7-zip only supports those\n",
        "Line" : 92,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# Build depends paths\n",
        "Line" : 104,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# 7z command-line option for compression level (when in ZIP mode) is: \"-mx=#\"\n\n# only supports compression levels: 0, 1, 3, 5, 7, 9\n",
        "Line" : 114,
        "CharPositionInLine" : 3
      },
      "10" : {
        "Text" : "# zip command-line option for compression level is \"-#\" (ex. \"-0\")\n",
        "Line" : 134,
        "CharPositionInLine" : 3
      },
      "11" : {
        "Text" : "# COMPRESS_ZIP does not (yet) have support for the detected zip executable\n",
        "Line" : 149,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 12
    },
    "cmake/TargetArch.cmake" : {
      "ObjectId" : "d6b2496f28bdcac9ed1a491cc23e7beeaacee7c8",
      "LastModified" : "2019-04-03T17:12:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Original Source: https://github.com/axr/solar-cmake/blob/master/TargetArch.cmake\n\n#\n\n# Original License:\n\n# ----------------\n\n#\n\n# Copyright (c) 2012 Petroules Corporation. All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# 1. Redistributions of source code must retain the above copyright notice, this\n\n# list of conditions and the following disclaimer.\n\n# 2. Redistributions in binary form must reproduce the above copyright notice,\n\n# this list of conditions and the following disclaimer in the documentation\n\n# and/or other materials provided with the distribution.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n\n# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\n# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\n# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\n# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n\n# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\n# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n# ----------------\n\n#\n\n# WZ Modifications:\n\n# - Clean-up arch.c after use\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Based on the Qt 5 processor detection code, so should be very accurate\n\n# https://qt.gitorious.org/qt/qtbase/blobs/master/src/corelib/global/qprocessordetection.h\n\n# Currently handles arm (v5, v6, v7), x86 (32/64), ia64, and ppc (32/64)\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Regarding POWER/PowerPC, just as is noted in the Qt source,\n\n# \"There are many more known variants/revisions that we do not handle/detect.\"\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set ppc_support to TRUE before including this file or ppc and ppc64\n\n# will be treated as invalid architectures since they are no longer supported by Apple\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# On OS X we use CMAKE_OSX_ARCHITECTURES *if* it was set\n\n# First let's normalize the order of the values\n",
        "Line" : 88,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Note that it's not possible to compile PowerPC applications if you are using\n\n# the OS X SDK version 10.6 or later - you'll need 10.4/10.5 for that, so we\n\n# disable it by default\n\n# See this page for more information:\n\n# http://stackoverflow.com/questions/5333490/how-can-we-restore-ppc-ppc64-as-well-as-full-10-4-10-5-sdk-support-to-xcode-4\n",
        "Line" : 91,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Architecture defaults to i386 or ppc on OS X 10.5 and earlier, depending on the CPU type detected at runtime.\n\n# On OS X 10.6+ the default is x86_64 if the CPU supports it, i386 otherwise.\n",
        "Line" : 97,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Now add all the architectures in our normalized order\n",
        "Line" : 114,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# Detect the architecture in a rather creative way...\n\n# This compiles a small C program which is a series of ifdefs that selects a\n\n# particular #error preprocessor directive whose message string contains the\n\n# target architecture. The program will always fail to compile (both because\n\n# file is not a valid C program, and obviously because of the presence of the\n\n# #error preprocessor directives... but by exploiting the preprocessor in this\n\n# way, we can detect the correct target architecture even when cross-compiling,\n\n# since the program itself never needs to be run (only the compiler/preprocessor)\n",
        "Line" : 135,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Parse the architecture name from the compiler output\n",
        "Line" : 152,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# Get rid of the value marker leaving just the architecture name\n",
        "Line" : 155,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# If we are compiling with an unknown architecture this variable should\n\n# already be set to \"unknown\" but in the case that it's empty (i.e. due\n\n# to a typo in the code), then set it to unknown\n",
        "Line" : 158,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# Clean-up arch.c\n",
        "Line" : 165,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 13
    },
    "data/CMakeLists.txt" : {
      "ObjectId" : "398d50e5ea7b497a4dac5d2982db429ed0eceabb",
      "LastModified" : "2019-04-03T17:12:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "data/Makefile.am" : {
      "ObjectId" : "0cc29fe9f4a1b9649c9673e2aa541ca871185de5",
      "LastModified" : "2019-04-03T17:12:30Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# zip returns 12 on \"nothing to do\"\n",
        "Line" : 7,
        "CharPositionInLine" : 225
      },
      "CommentCount" : 1
    },
    "data/music/Makefile.am" : {
      "ObjectId" : "9e7eb653556b17dd2c01bf69b15ee88b2fd61206",
      "LastModified" : "2019-04-03T17:12:30Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "doc/CMakeLists.txt" : {
      "ObjectId" : "a2913f0f43fad87d5d33e1a06cac9247aa8c913f",
      "LastModified" : "2019-04-03T17:12:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#######################\n\n# Scripting docs\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#######################\n\n# Main documentation\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# 1.5.3 adds built-in manpage backend; 1.5.1 adds \"-S flag in cli recognizes safe mode name as lowercase string\"\n",
        "Line" : 35,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "# Prefer Asciidoctor if it's available\n",
        "Line" : 93,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# Asciidoctor 1.5.7+ supports the \"--failure-level\" CLI option\n",
        "Line" : 97,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Quickstart Guide - HTML format\n",
        "Line" : 103,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# warzone2100.6 - HTML format\n",
        "Line" : 119,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# warzone2100.6 - man-page format\n",
        "Line" : 132,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# Custom handling for Homebrew-installed A2X on macOS\n",
        "Line" : 153,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# HOMEBREW WORKAROUND:\n\n# Workaround an issue where a2x fails while trying to xmllint by explicitly\n\n# exporting the expected catalog file path.\n",
        "Line" : 164,
        "CharPositionInLine" : 3
      },
      "10" : {
        "Text" : "# Quickstart Guide - HTML format\n",
        "Line" : 178,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# warzone2100.6 - HTML format\n",
        "Line" : 186,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# warzone2100.6 - man-page format\n",
        "Line" : 192,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# Man-page gzip and installation\n",
        "Line" : 234,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 14
    },
    "doc/Makefile.am" : {
      "ObjectId" : "be836b294933482d8832fa1061585990c6fe2bc6",
      "LastModified" : "2019-04-03T17:12:30Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "doc/build_tools/GenerateJSDocs.cmake" : {
      "ObjectId" : "33e54c47523ceda58e16748ade6cba5f86e5c35d",
      "LastModified" : "2019-04-03T17:12:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# A cross-platform script to support JS doc generation\n\n#\n\n# Requires:\n\n#\t- grep (both BSD and GNU grep have been tested)\n\n#\tor\n\n#\t- findstr (available on all modern Windows versions)\n\n#\n\n# To call this script, ensure that the working directory is set to the warzone source root,\n\n# and define: OUTPUT_DIR\n\n#\n\n# Copyright © 2018 pastdue ( https://github.com/past-due/ ) and contributors\n\n# License: MIT License ( https://opensource.org/licenses/MIT )\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# PROCESS_LINES(<inputfile>\n\n#\t\t\t\t[MATCHING_LINE_REGEX <regex>]\n\n#\t\t\t\t[STRIP_LINE_PREFIX_REGEX <regex>]\n\n#\t\t\t\tOUTPUT_FILE <file>\n\n#\t\t\t\t[APPEND])\n\n#\n\n# IMPORTANT: Because MATCHING_LINE_REGEX may be passed to either grep or findstr (on Windows),\n\n#\t\t\t the syntax used should be compatible with *all* of:\n\n#\t\t\t\t- BSD grep -e\n\n#\t\t\t\t- GNU grep -e\n\n#\t\t\t\t- findstr /r /c: (Windows)\n\n#\n\n#\t\t\t STRIP_LINE_PREFIX_REGEX is passed to CMake's string(REGEX REPLACE) and should be limited to\n\n#\t\t\t what is supported by CMake's regex engine. Any text on a line after the STRIP_LINE_PREFIX_REGEX\n\n#\t\t\t expression is preserved; any prior text on the line (and the match for STRIP_LINE_PREFIX_REGEX\n\n#\t\t\t itself) is removed.\n\n#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Since the input path is being passed to native command-line tools, convert it to native path format\n",
        "Line" : 54,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# CMake's handling of semicolons makes attempting to read in the file and do per-line processing\n\n# (while retaining semicolons) troublesome. Instead, use grep (or findstr on Windows) to do the\n\n# initial heavy-lifting.\n",
        "Line" : 57,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# Use grep\n",
        "Line" : 64,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "# Windows likely doesn't have grep, but it *does* have \"findstr\" which should work for our purposes\n",
        "Line" : 69,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "# Use findstr\n",
        "Line" : 72,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# No other fallback currently available\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Just read in the file with file(READ)\n",
        "Line" : 82,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 9
    },
    "icons/CMakeLists.txt" : {
      "ObjectId" : "4974f8b36baf3233e969b4e3b67eba7906199c44",
      "LastModified" : "2019-04-03T17:12:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "icons/Makefile.am" : {
      "ObjectId" : "d9a95f2fdad4b5d64e8702482e0b5817857b8032",
      "LastModified" : "2019-04-03T17:12:30Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "lib/CMakeLists.txt" : {
      "ObjectId" : "f84c15c47e2aa40f778791475b83556e2ea67748",
      "LastModified" : "2019-04-03T17:12:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/exceptionhandler/CMakeLists.txt" : {
      "ObjectId" : "4f4d9148fc529751198269c6c8ab195f56726480",
      "LastModified" : "2019-04-03T17:12:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Cross-compiling for Windows with MINGW\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Compiling with MSVC (etc) on Windows\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "lib/exceptionhandler/Makefile.am" : {
      "ObjectId" : "7faeaab777482f2067e5107b1ac0bd0917e71e00",
      "LastModified" : "2019-04-03T17:12:30Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "lib/framework/CMakeLists.txt" : {
      "ObjectId" : "515603d5b1d79a3bcb1d49138534e96872c78d83",
      "LastModified" : "2019-04-03T17:12:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/framework/Makefile.am" : {
      "ObjectId" : "11116005affb04f2b1445966f222bb7c84caf2a2",
      "LastModified" : "2019-04-03T17:12:30Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "lib/gamelib/CMakeLists.txt" : {
      "ObjectId" : "058ccc21be671062d70b2ca23965246efcd9f06d",
      "LastModified" : "2019-04-03T17:12:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/gamelib/Makefile.am" : {
      "ObjectId" : "84f4854f8520c396d8dca55415efcb7adb4f8329",
      "LastModified" : "2019-04-03T17:12:30Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "lib/ivis_opengl/CMakeLists.txt" : {
      "ObjectId" : "af5e81b1bdaac296f491670400bb48a691da91ce",
      "LastModified" : "2019-04-03T17:12:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/ivis_opengl/Makefile.am" : {
      "ObjectId" : "c7a0fbbf5f9a32e658dbdc96cbb420a45e80a89b",
      "LastModified" : "2019-04-03T17:12:30Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "lib/netplay/CMakeLists.txt" : {
      "ObjectId" : "c24107065dc303dd44a571401001a6c112674444",
      "LastModified" : "2019-04-03T17:12:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Link with in-tree miniupnpc\n",
        "Line" : 17,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "lib/netplay/Makefile.am" : {
      "ObjectId" : "af022ee95e02236ef02b7d1a878972023c8c8049",
      "LastModified" : "2019-04-03T17:12:30Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "lib/script/CMakeLists.txt" : {
      "ObjectId" : "541bdaa3c2430286da2b03cd69405ea0d7b85a7d",
      "LastModified" : "2019-04-03T17:12:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/script/Makefile.am" : {
      "ObjectId" : "9663a728be8c90d4ce05006b036f451aa01d0df2",
      "LastModified" : "2019-04-03T17:12:30Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "lib/sdl/CMakeLists.txt" : {
      "ObjectId" : "06d37baa255c637ad7d72738a3884cc62d8ba31d",
      "LastModified" : "2019-04-03T17:12:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Prefer finding SDL2 using CMake Config, to properly include any dependencies / linked libraries (with complete, imported targets)\n\n# - This should work for vcpkg-installed SDL2, as well as other installs that generate a full (proper) CMake Config,\n\n# - and is required to properly link with a static SDL2 library (at least on Windows and macOS)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Fall-back to FindSDL2 module (below)\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# WORKAROUND\n",
        "Line" : 36,
        "CharPositionInLine" : 60
      },
      "3" : {
        "Text" : "# Fall-back to using the FindSDL2 module\n",
        "Line" : 41,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 4
    },
    "lib/sdl/Makefile.am" : {
      "ObjectId" : "4781f672c77a00c00188e566c886032960ecfa16",
      "LastModified" : "2019-04-03T17:12:30Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Here, we need to set \"plugins\" for Qt5 to be static\n\n# FIXME: At a future date, we should check if they want static builds, but, since we only support those for now...\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/sequence/CMakeLists.txt" : {
      "ObjectId" : "0fc9bac572245a8836655fce8188ec5d5f8dc88b",
      "LastModified" : "2019-04-03T17:12:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/sequence/Makefile.am" : {
      "ObjectId" : "465f486ad68437ebad13c122f306aa410488fb41",
      "LastModified" : "2019-04-03T17:12:30Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "lib/sound/CMakeLists.txt" : {
      "ObjectId" : "d606d42159789e10c465ae3c667095866ec29b66",
      "LastModified" : "2019-04-03T17:12:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/sound/Makefile.am" : {
      "ObjectId" : "51c0d498d132fa2845ae64be8e87de7912d87281",
      "LastModified" : "2019-04-03T17:12:30Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "lib/widget/CMakeLists.txt" : {
      "ObjectId" : "d0d202855aafdfc3394231123029c73212f196d0",
      "LastModified" : "2019-04-03T17:12:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/widget/Makefile.am" : {
      "ObjectId" : "e4fe6e9f797c85ee8c473b32f29645caf9beb581",
      "LastModified" : "2019-04-03T17:12:30Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "macosx/cmake/FindQt5.cmake" : {
      "ObjectId" : "98ee9a5a6bfc912f8790405dcf9996c80dde4db0",
      "LastModified" : "2019-04-03T17:12:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FindQt5 for macOS builds\n\n# Using minimal bundle of required frameworks for WZ\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Download the Qt5 minimal bundle for macOS to the build dir\n",
        "Line" : 10,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Determine if Qt${component}.framework exists\n",
        "Line" : 37,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Special-case handling of required plugins\n",
        "Line" : 44,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# Add QCocoaIntegrationPlugin\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Add QCocoaPrinterSupportPlugin\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Specified a Qt5 component that does not exist in the current minimal bundle\n\n# A new minimal macOS bundle will have to be generated for WZ, containing this additional component (and any dependencies)\n",
        "Line" : 67,
        "CharPositionInLine" : 3
      },
      "7" : {
        "Text" : "# Define custom qt5_wrap_cpp implementation\n\n# (NOTE: This custom implementation expects to be called with an output variable\n\n# and a list of files to moc. No other options are supported.)\n",
        "Line" : 84,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# take the input file name (without extension), and append \".moc.cpp\"\n",
        "Line" : 100,
        "CharPositionInLine" : 3
      },
      "9" : {
        "Text" : "# Failed to find Qt5 moc in minimal bundle\n",
        "Line" : 119,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 10
    },
    "macosx/cmake/autorevision_infoplist.cmake" : {
      "ObjectId" : "02fad84d2bbc4a8865001863cbfc82c6c1cf0e8b",
      "LastModified" : "2019-04-03T17:12:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Automatically update the VERSION_INFO in the Warzone Info.plist file\n\n#\n\n# Required input defines:\n\n# - CACHEFILE: the path to the autorevision.cache file generated for the build\n\n# - PROJECT_ROOT: the path the project root (${PROJECT_SOURCE_DIR})\n\n# - TEMPLATE_FILE: the full filename + path for the input Warzone-Info.plist.in template file\n\n# - OUTPUT_FILE: the full filename + path for the output Info.plist file\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#################################\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Attempt to get version information from the current build's autorevision cache. Fail if cache is not present.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Import the autorevision values into the current scope\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##################################\n\n# Extract a version number from the most recent version-like tag (to be used as the CFBundleShortVersionString)\n\n# MAC_VERSION_NUMBER\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# We're on an exact tag\n\n# Try to extract version info from the tag\n",
        "Line" : 60,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# Extract version info from the most recent tagged version\n",
        "Line" : 66,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "##################################\n\n# Construct a build number (for the CFBundleVersion)\n\n# MAC_BUILD_NUMBER\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Format: \"1.\" (commits-on-master[-until-branch \".\" commits-on-branch])\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# \"1.{commits-on-master}.0\"\n",
        "Line" : 89,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# \"1.{commits-on-master-until-branch}.{commits-on-branch}\"\n",
        "Line" : 93,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "##################################\n\n# Determine the other Info.plist settings\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##################################\n\n# Debug output\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "##################################\n\n# Output configured file based on the template\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "macosx/cmake/check_env.cmake" : {
      "ObjectId" : "a4b99b3927c8696d8b5aed12761308dae793963c",
      "LastModified" : "2019-04-03T17:12:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Verify an environment variable\n\n#\n\n# Required input defines:\n\n# - NAME: the environment variable name\n\n# - EXPECTED_VALUE: the environment variable expected value\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#################################\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "pkg/CMakeLists.txt" : {
      "ObjectId" : "97ae0a9e628713daf99f0cebaf5f3cf607f5d79a",
      "LastModified" : "2019-04-03T17:12:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#########################\n\n# Default components that are added to package\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#########################\n\n# Default component info\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#########################\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Default of \"warzone2100\"\n",
        "Line" : 69,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# Default of \"warzone2100\"\n",
        "Line" : 74,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# When targeting Windows, build the NSIS installer\n",
        "Line" : 79,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# Retrieve the warzone2100 executable file output_name\n\n# (This is set by src/CMakeLists.txt)\n",
        "Line" : 86,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# For the portable build, install `launch_warzone.bat` in the base folder\n",
        "Line" : 97,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# NSIS expects backslashes\n",
        "Line" : 116,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Localize component names & descriptions\n",
        "Line" : 122,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# Note: NSIS.definitions.in also uses WZ_PORTABLE directly\n",
        "Line" : 134,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# Copy Installer Language files\n",
        "Line" : 140,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# IMPORTANT: To generate the NSIS script, CPack must use `nsis/NSIS.template.in`\n",
        "Line" : 146,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# NSIS installer should always have component installation enabled\n",
        "Line" : 149,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# Additional information\n",
        "Line" : 152,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "# macOS builds\n",
        "Line" : 157,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "# Only install the \"Core\" component (the application), as the macOS app bundle contains all of the data & supporting files & languages\n",
        "Line" : 159,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "# Default package generators on macOS\n",
        "Line" : 164,
        "CharPositionInLine" : 1
      },
      "18" : {
        "Text" : "# Support Archive generator\n",
        "Line" : 167,
        "CharPositionInLine" : 1
      },
      "19" : {
        "Text" : "# Support DragNDrop generator\n",
        "Line" : 170,
        "CharPositionInLine" : 1
      },
      "20" : {
        "Text" : "#####################\n\n# RPM Settings\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#####################\n\n# DEB Settings\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#####################\n\n# Package Source\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Ignore version control\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Ignore development / runtime created files\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# The build directory (if user configured to build in the core repo folder)\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Ignore sequences.wz if it's in the data directory\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Ignore any autorevision.cache file in the src directory\n\n# (the install script below handles generating a fresh one)\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# The macosx build directories\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Ignore in-source vcpkg directory\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "######################\n\n# Configure Installer Version-info at Package Build-Time\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "######################\n\n# Handling Autorevision for Package Source\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 32
    },
    "pkg/dpkg/videos/Makefile" : {
      "ObjectId" : "77ebc8ffa0f9d86d33cf35e2f0f0f92d61da4569",
      "LastModified" : "2019-04-03T17:12:30Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "pkg/nsis/Makefile.am" : {
      "ObjectId" : "662acb768357e692419a3ac5b35870c9ed9c940d",
      "LastModified" : "2019-04-03T17:12:30Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "po/CMakeLists.txt" : {
      "ObjectId" : "a1a223a2e461f47022ec293582bed224c54ca329",
      "LastModified" : "2019-04-09T22:34:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Because of a Windows-related bugfix in FindGettext.cmake in CMake 3.10,\n\n# CMake 3.10+ may be required (if compiling *on* Windows) to properly\n\n# detect Gettext.\n\n#\n\n# However, Visual Studio 2017 currently bundles CMake < 3.10, so requiring\n\n# CMake 3.10+ at the top of this file leads to an inability to compile via\n\n# Visual Studio itself.\n\n#\n\n# Instead of using cmake_minimum_required(VERSION 3.10), detect the\n\n# CMake version and emit a warning if it's below 3.10.\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# GETTEXT_CREATE_TRANSLATIONS_WZ(potFile [ALL]\n\n#\t\t\t\t\t\t\t\t [INSTALL_DESTINATION <destdir>]\n\n#\t\t\t\t\t\t\t\t [INSTALL_COMPONENT component]\n\n#\t\t\t\t\t\t\t\t [MSGMERGE_OPTIONS <mergeoptions>]\n\n#\t\t\t\t\t\t\t\t [TARGET_FOLDER <folder>]\n\n#\t\t\t\t\t\t\t\t POFILES file1 ...  fileN)\n\n#\n\n# Starting point: https://github.com/Kitware/CMake/blob/fb3a608f1ab4a8fda04d5c2fb5ad99e396ebd1e6/Modules/FindGettext.cmake\n\n# Distributed under the OSI-approved BSD 3-Clause License. See https://cmake.org/licensing for details.\n\n#\n\n# Customized for WZ to:\n\n#\t- Specify options to msgmerge\n\n#\t- Specify an install destination\n\n#\t- Specify an install component\n\n#\t- Specify a target folder (for any created targets)\n\n#\t- Specify a list of po files as POFILES\n\n#\t- Specify a distinct output file location for updated .po files in the build directory\n\n#\t  (instead of updating in-place, which modifies the source folder)\n\n#\t- Use the updated .po files in the build directory for the msgfmt command\n\n#\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Must be set to warzone2100.pot, as the filename (without its extension) is used later\n\n# to form the install .gmo file name (warzone2100.gmo) in each locale directory\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Read in `POTFILES.in` to build a list of dependency paths in the same order.\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Generate the warzone2100.pot file in the build directory\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# On CMake configure, clear the build dir \"locale\" folder (to ensure re-generation)\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build the *.gmo files from the *.po files (using the .pot file)\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "po/WZ_build_po_template.cmake" : {
      "ObjectId" : "9944b4374540d62b087df081746e7b481a2d98b5",
      "LastModified" : "2019-04-09T22:34:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build the warzone2100.pot default language file\n\n# from the files listed in POTFILES.in\n\n#\n\n# Required input defines:\n\n# - POTFILES_IN: the path to POTFILES.in\n\n# - OUTPUT_FILE: the path where the output file (ex. warzone2100.pot) should be written\n\n#\n\n# Optional input defines:\n\n# - XGETTEXT_CMD: the command used to execute xgettext\n\n# - TEMP_DIR: a directory in which temporary files should be written (if not the same directory as the OUTPUT_FILE)\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#################################\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Generate a temporary output file suffix that ought to be unique\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Configure the xgettext options\n\n# NOTE: This matches what Makevars \"XGETTEXT_OPTIONS\" (and other values) provides\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Build the .pot file\n\n# Note: This uses the `--files-from=` parameter instead of passing in a giant command-line of files\n\n#\t\tbecause the latter option likes to break when building on Windows.\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Only copy the temporary output file over the OUTPUT_FILE if the new (temporary) output actually has different content\n\n# NOTE: This ignores certain header lines that update every time xgettext is run\n",
        "Line" : 92,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# Contents changed - copy the new (temporary) output file to the desired output file location\n",
        "Line" : 111,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Since the OUTPUT_FILE doesn't exist, just rename the temporary output file\n",
        "Line" : 116,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 8
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "efc97b7df66a562430514f097721fb7718402eb6",
      "LastModified" : "2019-04-09T22:34:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################\n\n# Versioning (autorevision)\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Autorevision target that will run *every* build\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Autorevision command that will run *every* build\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# fake - ensure we run\n",
        "Line" : 21,
        "CharPositionInLine" : 52
      },
      "4" : {
        "Text" : "# Copy autorevision.cache from the src directory (if present)\n\n# This supports proper versioning from distribution source archives\n",
        "Line" : 24,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# Autorevision.cmake\n\n# this command must generate: ${CMAKE_CURRENT_BINARY_DIR}/autorevision.h\n",
        "Line" : 27,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# On Windows, configure warzone2100.rc and the .manifest with updated version info\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# warzone2100.manifest\n",
        "Line" : 36,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# warzone2100.rc\n",
        "Line" : 47,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# On macOS, generate the Info.plist file with updated version info at *build-time*\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Ensure ordering and non-concurrency\n",
        "Line" : 77,
        "CharPositionInLine" : 55
      },
      "11" : {
        "Text" : "############################\n\n# Main Executable\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Build warzone exe as a Windows app (not a console app)\n",
        "Line" : 109,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# Add the \"/MANIFEST:NO\" linker flag (if supported) because a manifest is already included by warzone2100.rc\n\n# (This is required for MSVC builds)\n",
        "Line" : 112,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "############################\n\n# Main App install location\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# To change the install destination at configure-time, please change the value of CMAKE_INSTALL_BINDIR\n\n# (WZ_APP_INSTALL_DEST is for the platform / generator-specific overrides *in* this file)\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#######################\n\n# macOS Build Config\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Notes:\n\n# - Resources / Data files are included in the app bundle itself\n\n# - To better replicate a normal Xcode project, the full app bundle is created at build-time\n\n#   (instead of waiting to bundle libraries / frameworks as part of the CMake install stage)\n\n#   - This also enables support for Xcode's built-in code-signing workflow\n\n# - The appropriate XCODE_LAST_KNOWN_FILE_TYPE is set on non-source files to fix \"endless Xcode indexing\" issues\n\n# - A *build-time*-generated Info.plist is used, instead of CMake's default configure-time-generated Info.plist setup\n\n#   (ensuring that the Info.plist reflects the latest autorevision info)\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Workaround: Empty \"Archive\" build of warzone2100 target\n\n# See: https://cmake.org/pipermail/cmake/2012-December/053017.html; https://gitlab.kitware.com/cmake/cmake/issues/15183\n",
        "Line" : 169,
        "CharPositionInLine" : 1
      },
      "19" : {
        "Text" : "# Unset some target properties (these seem to be for Windows only?)\n",
        "Line" : 174,
        "CharPositionInLine" : 1
      },
      "20" : {
        "Text" : "# Auto-generate an Info.plist (based on autorevision info)\n",
        "Line" : 180,
        "CharPositionInLine" : 1
      },
      "21" : {
        "Text" : "# Set the target INFOPLIST_FILE attribute to the Info.plist generated at *build-time* by autorevision_infoplist\n\n# (This overrides the Xcode generator's use of MACOSX_BUNDLE_INFO_PLIST, which sets a plist generated by CMake at configure-time.)\n",
        "Line" : 183,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# Add a pre-build command that verifies that ENV{INFOPLIST_FILE} is set to precisely what is expected by Xcode\n\n# (To verify that the CMake Xcode generator does not stomp on the above attempt to manually set the INFOPLIST_FILE)\n",
        "Line" : 187,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# Other generators need special-handling to properly use the Info.plist generated at *build-time* by the autorevision_infoplist target.\n",
        "Line" : 195,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Add the .entitlements file\n",
        "Line" : 199,
        "CharPositionInLine" : 1
      },
      "25" : {
        "Text" : "# To properly bundle the resources, they must be built before the app\n",
        "Line" : 208,
        "CharPositionInLine" : 1
      },
      "26" : {
        "Text" : "# Bundle the Data resources\n",
        "Line" : 211,
        "CharPositionInLine" : 1
      },
      "27" : {
        "Text" : "# Add the icon\n",
        "Line" : 225,
        "CharPositionInLine" : 1
      },
      "28" : {
        "Text" : "# Bundle the fonts\n",
        "Line" : 235,
        "CharPositionInLine" : 1
      },
      "29" : {
        "Text" : "# Bundle the translations\n",
        "Line" : 246,
        "CharPositionInLine" : 1
      },
      "30" : {
        "Text" : "# See xcodeproj \"i18n\" stage\n\n# Uses the wzlocal lproj files + config/LangDis to determine what to copy - should we replicate?\n",
        "Line" : 255,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# Bundle the docs\n",
        "Line" : 258,
        "CharPositionInLine" : 1
      },
      "32" : {
        "Text" : "# Bundle the wz2100_ROOT_FILES (COPYING, README, etc)\n",
        "Line" : 270,
        "CharPositionInLine" : 1
      },
      "33" : {
        "Text" : "# Set Apple link flags\n",
        "Line" : 286,
        "CharPositionInLine" : 1
      },
      "34" : {
        "Text" : "# Embed the dSYM file in the app bundle\n",
        "Line" : 289,
        "CharPositionInLine" : 1
      },
      "35" : {
        "Text" : "# Strip symbols from the final executable (Release builds)\n",
        "Line" : 295,
        "CharPositionInLine" : 1
      },
      "36" : {
        "Text" : "# Frameworks\n",
        "Line" : 301,
        "CharPositionInLine" : 1
      },
      "37" : {
        "Text" : "# Copy framework to bundle *now* (don't wait for CMake install)\n",
        "Line" : 312,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# Other generators will need a custom-command equivalent of setting the \"Code Sign on Copy\" Xcode attribute to ON\n",
        "Line" : 320,
        "CharPositionInLine" : 5
      },
      "39" : {
        "Text" : "# Qt5\n",
        "Line" : 332,
        "CharPositionInLine" : 1
      },
      "40" : {
        "Text" : "# required by QCocoaIntegrationPlugin\n",
        "Line" : 335,
        "CharPositionInLine" : 44
      },
      "41" : {
        "Text" : "# Qt5 plugins\n\n# based on code from CMake's QtDialog/CMakeLists.txt\n",
        "Line" : 339,
        "CharPositionInLine" : 1
      },
      "42" : {
        "Text" : "# Copy plugin to bundle *now* (don't wait for CMake install)\n",
        "Line" : 348,
        "CharPositionInLine" : 3
      },
      "43" : {
        "Text" : "# Other generators will need a custom-command equivalent of setting the \"Code Sign on Copy\" Xcode attribute to ON\n",
        "Line" : 356,
        "CharPositionInLine" : 4
      },
      "44" : {
        "Text" : "# Set install RPATH for WZ app bundle\n",
        "Line" : 368,
        "CharPositionInLine" : 1
      },
      "45" : {
        "Text" : "# Since the dependencies are bundled as part of the build stages (and not at install-time), build with the install rpath\n",
        "Line" : 371,
        "CharPositionInLine" : 1
      },
      "46" : {
        "Text" : "# Install the app bundle directly in the destination root\n",
        "Line" : 374,
        "CharPositionInLine" : 1
      },
      "47" : {
        "Text" : "#######################\n\n# Hardening / Security\n",
        "Line" : 379,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# Enable Data Execution Prevention and Address Space Layout Randomization\n",
        "Line" : 385,
        "CharPositionInLine" : 4
      },
      "49" : {
        "Text" : "# Enable RELRO (if supported)\n",
        "Line" : 394,
        "CharPositionInLine" : 1
      },
      "50" : {
        "Text" : "#######################\n\n# Supporting google-breakpad tools for processing minidumps\n",
        "Line" : 399,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Find dump_syms.exe\n",
        "Line" : 403,
        "CharPositionInLine" : 1
      },
      "52" : {
        "Text" : "# Generate the .sym file from the .pdb\n",
        "Line" : 406,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "# Install the .sym file (to ensure it's always with the .exe)\n",
        "Line" : 413,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "#######################\n\n# Install\n",
        "Line" : 420,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "#####################\n\n# Installing Required Runtime Dependencies\n",
        "Line" : 428,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# Install any required runtime dependencies / DLLs (ex. from vcpkg when dynamically linking)\n",
        "Line" : 435,
        "CharPositionInLine" : 3
      },
      "57" : {
        "Text" : "# Ignore system (CRT) runtimes in fixup_bundle\n\n# - Get a list of all of the required system libraries\n",
        "Line" : 439,
        "CharPositionInLine" : 4
      },
      "58" : {
        "Text" : "# - CMAKE_INSTALL_SYSTEM_RUNTIME_LIBS should now contain the runtime files (full paths)\n\n# - Extract just the filenames\n",
        "Line" : 446,
        "CharPositionInLine" : 4
      },
      "59" : {
        "Text" : "# Run windeployqt to pick up all Qt dependencies\n",
        "Line" : 486,
        "CharPositionInLine" : 3
      },
      "60" : {
        "Text" : "# Must install the PDB file or crash dumps won't be as useful\n",
        "Line" : 502,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 61
    },
    "src/Makefile.am" : {
      "ObjectId" : "3382cf3e333b0fa6ecb772fb37bdd2d8a24e5f67",
      "LastModified" : "2019-04-09T22:34:04Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Here, we need to set \"plugins\" for Qt5 to be static\n\n# FIXME: At a future date, we should check if they want static builds, but, since we only support those for now...\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# lib/framework (and dependencies)\n",
        "Line" : 306,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Here, we need to bring in the \"plugins\" for Qt5 and they MUST come before the other QT libs.\n\n# FIXME: At a future date, we should check if they want static builds, but, since we only support those for now...\n",
        "Line" : 321,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tests/Makefile.am" : {
      "ObjectId" : "a81ef36df87ead6bbc95d9061954a9b3fbc54f1b",
      "LastModified" : "2019-04-09T22:34:04Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#if !MINGW32\n\n#bin_PROGRAMS = qslint\n\n#qslint_SOURCES = qslint.cpp lint.cpp\n\n#qslint_LDADD = $(PHYSFS_LIBS) $(QT5_LIBS)\n\n#endif\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#qtscripttest\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#qtscripttest_SOURCES = qtscripttest.cpp lint.cpp\n\n#qtscripttest_LDADD = $(PHYSFS_LIBS) $(QT5_LIBS)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# qtscripttest commented out for 3.1\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "tools/3ds2pie/3ds2pie_gui.pro" : {
      "ObjectId" : "720efb62e1a4dbc07ed9bae0ce8bcf5dc96e3b3c",
      "LastModified" : "2019-04-09T22:34:04Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "tools/map/CMakeLists.txt" : {
      "ObjectId" : "8599650ce4928397bac81d4981152e4469e759bb",
      "LastModified" : "2019-04-09T22:34:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Options\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Required warzone components\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Uncomment when we actually need to link to the framework lib\n\n#if (NOT WZ_FRAMEWORK_LIBRARY)\n\n#    find_library(WZ_FRAMEWORK_LIBRARY name framework)\n\n#endif ()\n\n#set (WZ_FRAMEWORK_LIBRARY \"${WZ_FRAMEWORK_LIBRARY}\" CACHE FILEPATH \"Path to Warzone's framework library\")\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#if (NOT WZ_FRAMEWORK_LIBRARY)\n\n#    message (SEND_ERROR \"Warzone's framework library not found\")\n\n#endif ()\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# We need to use pkgconfig to get the linker flags for static qt\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# set CMAKE_BUILD_TYPE to default\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set our own default flags at first run.\n",
        "Line" : 74,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# map2lnd\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# map2png\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# map2preview\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# mapconv\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# mapinfo\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## Other stuff\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# vim: ts=4:sw=4:expandtab\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "tools/map/Makefile.am" : {
      "ObjectId" : "50b562f609eaaccef5fe3869143dc12f44cdb378",
      "LastModified" : "2019-04-09T22:34:04Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "tools/qwzm/qwzm.pro" : {
      "ObjectId" : "c585049f21ecd9de0e382ebfdd93f1ca2a478906",
      "LastModified" : "2019-04-09T22:34:04Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# If your system uses different paths for QGLViewer, create a file named\n\n# \"config\" and override the two variables below (with \"=\").\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#include(\"config\")\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tools/rpl2avi/Makefile" : {
      "ObjectId" : "ceea657fc63114fc9a66109333b84277aefb3c8b",
      "LastModified" : "2019-04-09T22:34:04Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tools/statsedit/statsedit.pro" : {
      "ObjectId" : "708721e9dd60d3359ac2fe30d958b1c2dce370c8",
      "LastModified" : "2019-04-09T22:34:04Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2012-07-28T17:35:12\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "win32/Makefile.am" : {
      "ObjectId" : "51d9786d62baccfb18696910794564fa68ac5158",
      "LastModified" : "2019-04-09T22:34:04Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "win32/autorevision_rc.cmake" : {
      "ObjectId" : "6a523db305381b47a7147fa20397ac0d3151cd76",
      "LastModified" : "2019-04-09T22:34:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Automatically update the VERSION_INFO in the warzone2100.rc and the .manifest file\n\n#\n\n# Required input defines:\n\n# - CACHEFILE: the path to the autorevision.cache file generated for the build\n\n# - PROJECT_ROOT: the path the project root (${PROJECT_SOURCE_DIR})\n\n# - TEMPLATE_FILE: the full filename + path for the input rc.in or manifest.in template file\n\n# - OUTPUT_FILE: the full filename + path for the output .rc or .manifest file\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#################################\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Attempt to get version information from the current build's autorevision cache. Fail if cache is not present.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Import the autorevision values into the current scope\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##################################\n\n# Determine the ProductVersion\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# We're on an exact tag\n\n# See if the tag contains a version number\n",
        "Line" : 52,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# Able to extract a version number from the tag - use it for the PRODUCTVERSION\n",
        "Line" : 56,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Use the full tag for the StringFileInfo ProductVersion\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Extract version info from the most recent tagged version\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Determine the build-number component of the version info\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Each component of the ProductVersion on Windows is a 16-bit integer.\n\n# If the build number is greater than supported, pin it to 65534 and emit a warning\n\n# (That's a *lot* of commits since the last tagged version...)\n",
        "Line" : 79,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# Set the PRODUCT_VERSION to: <MOST_RECENT_TAGGED_VERSION>.<COMMITS_SINCE_MOST_RECENT_TAGGED_VERSION>\n",
        "Line" : 87,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# Set the StringFileInfo ProductVersion to: <VCS_BRANCH> <VCS_SHORTHASH>\n",
        "Line" : 92,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "##################################\n\n# Determine the FileVersion\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Format: \"1.\" (commits-on-master[-until-branch \".\" commits-on-branch])\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# \"1.{commits-on-master}\"\n",
        "Line" : 101,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "# \"1.{commits-on-master-until-branch}.{commits-on-branch}\"\n",
        "Line" : 104,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "# The FILEVERSION number is a bit complicated:\n\n# Each of the 4 components is a 16-bit integer, so we have to spread the data across the final 3\n\n# For this, we simply use \"1,<VCS_COMMIT_COUNT>\", with the COMMIT_COUNT potentially wrapping across all 3 final 16-bit integers in a human-readable way\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Reward yourself - we've hit the future\n\n# Better change / review the MATH code below, because CMake (at least, 32-bit builds?) will overflow on the MATH operations that follow\n",
        "Line" : 114,
        "CharPositionInLine" : 1
      },
      "19" : {
        "Text" : "# for now, pin to Int32.max\n",
        "Line" : 117,
        "CharPositionInLine" : 39
      },
      "20" : {
        "Text" : "##################################\n\n# Determine the other .rc settings\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "##################################\n\n# Debug output\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "##################################\n\n# Output configured file based on the template\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    }
  },
  "FileTypes" : {
    "CMAKE" : 45,
    "QMAKE" : 3,
    "MAKEFILE" : 2,
    "AUTOMAKE" : 22
  },
  "ElapsedTime" : 8091
}