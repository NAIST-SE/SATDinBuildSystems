{
  "Repository" : "26718",
  "Revision" : "HEAD",
  "ObjectId" : "83026a3ad5220ec3404f6c44f3589ddc4e1bd186",
  "CommitTime" : "2019-04-04T15:27:16Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "70cb2ed5b4423ee2af36ae6b17523d4f197c02ac",
      "LastModified" : "2018-11-03T16:17:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Version setup\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set compiler flags\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Meta data\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#The default FindBullet.cmake macro doesn't look in pkg-config first, so we'll do that ourselves.\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#We'll for now only copy \".mesh\" files.\n",
        "Line" : 133,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "##TODO: check for binreloc?\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#We'll use xmllint for validating schemas of some of our xml files.\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add a \"check\" target, which builds and runs the tests.\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add a \"benchmark\" target, which builds and runs the benchmarks.\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#Only build tests if the \"check\" target is used.\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## Doxygen support, exports a \"docs\" target.\n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#add_custom_command(\n\n#        OUTPUT ChangeLog\n\n#        COMMAND ${CMAKE_SOURCE_DIR}/scripts/generate-ChangeLog.sh ${CMAKE_SOURCE_DIR} ${CMAKE_SOURCE_DIR} f12012e7616c191a8926432faf866c8e43854062\n\n#)\n\n#add_custom_target(changelog DEPENDS ChangeLog)\n",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Packaging\n",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#set(CPACK_INSTALL_SCRIPT \"sh ${CMAKE_SOURCE_DIR}/support/generate-ChangeLog.sh ${CMAKE_SOURCE_DIR} ${CPACK_PACKAGE_INSTALL_DIRECTORY} 8bd480b053190ffde2afe33af66f484953036f5a\")\n",
        "Line" : 274,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# no hidden files\n",
        "Line" : 281,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 15
    },
    "aiclient/CMakeLists.txt" : {
      "ObjectId" : "8431a063e542ed69bce3c999c3fb1b75f0afbb88",
      "LastModified" : "2018-12-16T19:40:48Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "client/CMakeLists.txt" : {
      "ObjectId" : "091fd2597fe46e58110b9bfbc260499694f6d95f",
      "LastModified" : "2018-11-03T16:17:50Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/FindAvahi.cmake" : {
      "ObjectId" : "8697c89fb2bbe796da54589f703611452646cf36",
      "LastModified" : "2016-12-22T13:39:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the avahi service discovery library\n\n# Once done this will define\n\n#\n\n#  AVAHI_FOUND - System has Avahi\n\n#  AVAHI_INCLUDE_DIR - The Avahi include directory\n\n#  AVAHI_LIBRARIES - The libraries needed to use Avahi\n\n#  AVAHI_DEFINITIONS - Definitions to be added to the compiler options\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2010 Matthieu Volat. All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# 1. Redistributions of source code must retain the above copyright\n\n#    notice, this list of conditions and the following disclaimer.\n\n# 2. Redistributions in binary form must reproduce the above copyright\n\n#    notice, this list of conditions and the following disclaimer in the\n\n#    documentation and/or other materials provided with the distribution.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND\n\n# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE\n\n# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\n\n# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n\n# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n\n# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n\n# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n\n# SUCH DAMAGE.\n\n#\n\n# The views and conclusions contained in the software and documentation are\n\n# those of the authors and should not be interpreted as representing\n\n# official policies, either expressed or implied, of Matthieu Volat.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindGCrypt.cmake" : {
      "ObjectId" : "df3586bed9559fc7b2780debb2af0a2fc18a0bd0",
      "LastModified" : "2016-12-22T13:39:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find GCrypt\n\n# Once done this will define\n\n#\n\n#  GCRYPT_FOUND - system has GCrypt\n\n#  GCRYPT_INCLUDE_DIRS - the GCrypt include directory\n\n#  GCRYPT_LIBRARIES - Link these to use GCrypt\n\n#  GCRYPT_DEFINITIONS - Compiler switches required for using GCrypt\n\n#\n\n#=============================================================================\n\n#  Copyright (c) 2009-2011 Andreas Schneider <asn@cryptomilk.org>\n\n#\n\n#  Distributed under the OSI-approved BSD License (the \"License\");\n\n#  see accompanying file Copyright.txt for details.\n\n#\n\n#  This software is distributed WITHOUT ANY WARRANTY; without even the\n\n#  implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n#  See the License for more information.\n\n#=============================================================================\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n\n# set(GCRYPT_FOUND TRUE)\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# show the GCRYPT_INCLUDE_DIRS and GCRYPT_LIBRARIES variables only in the advanced view\n",
        "Line" : 67,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "cmake/FindReadline.cmake" : {
      "ObjectId" : "1d4cc55843136c7802eb4892b0b6fcffb13e95e3",
      "LastModified" : "2016-12-22T13:39:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# from http://websvn.kde.org/trunk/KDE/kdeedu/cmake/modules/FindReadline.cmake\n\n# http://websvn.kde.org/trunk/KDE/kdeedu/cmake/modules/COPYING-CMAKE-SCRIPTS\n\n# --> BSD licensed\n\n#\n\n# GNU Readline library finder\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# 2008-04-22 The next clause used to read like this:\n\n#\n\n#  FIND_LIBRARY(READLINE_LIBRARY NAMES readline)\n\n#        FIND_LIBRARY(NCURSES_LIBRARY NAMES ncurses )\n\n#        include(FindPackageHandleStandardArgs)\n\n#        FIND_PACKAGE_HANDLE_STANDARD_ARGS(Readline DEFAULT_MSG NCURSES_LIBRARY READLINE_INCLUDE_DIR READLINE_LIBRARY )\n\n#\n\n# I was advised to modify it such that it will find an ncurses library if\n\n# required, but not if one was explicitly given, that is, it allows the\n\n# default to be overridden. PH \n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindSQLite3.cmake" : {
      "ObjectId" : "780e9c5a3ce9ef2e649d778d5c1231562c1e7299",
      "LastModified" : "2018-05-19T19:47:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2007-2009 LuaDist.\n\n# Created by Peter Kapec <kapecp@gmail.com>\n\n# Redistribution and use of this file is allowed according to the terms of the MIT license.\n\n# For details see the COPYRIGHT file distributed with LuaDist.\n\n#\tNote:\n\n#\t\tSearching headers and libraries is very simple and is NOT as powerful as scripts\n\n#\t\tdistributed with CMake, because LuaDist defines directories to search for.\n\n#\t\tEveryone is encouraged to contact the author with improvements. Maybe this file\n\n#\t\tbecomes part of CMake distribution sometimes.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Find sqlite3\n\n# Find the native SQLITE3 headers and libraries.\n\n#\n\n# SQLITE3_INCLUDE_DIRS\t- where to find sqlite3.h, etc.\n\n# SQLITE3_LIBRARIES\t- List of libraries when using sqlite.\n\n# SQLITE3_FOUND\t- True if sqlite found.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look for the header file.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Look for the library.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set SQLITE3_FOUND to TRUE if all listed variables are TRUE.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Copy the results to the output variables.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/GetGitRevisionDescription.cmake" : {
      "ObjectId" : "85eae1562fe2011e9800787819b21f30a8898eb4",
      "LastModified" : "2018-05-19T19:47:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Returns a version string from Git\n\n#\n\n# These functions force a re-configure on each git commit so that you can\n\n# trust the values of the variables in your build system.\n\n#\n\n#  get_git_head_revision(<refspecvar> <hashvar> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the refspec and sha hash of the current head revision\n\n#\n\n#  git_describe(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe on the source tree, and adjusting\n\n# the output so that it tests false if an error occurs.\n\n#\n\n#  git_get_exact_tag(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe --exact-match on the source tree,\n\n# and adjusting the output so that it tests false if there was no exact\n\n# matching tag.\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We must run the following at \"include\" time, not at function call time,\n\n# to find the path to this module rather than the path to a calling list file\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# .git dir not found, search parent directories\n",
        "Line" : 45,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "# We have reached the root directory, we are not in git\n",
        "Line" : 49,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# check if this is a submodule\n",
        "Line" : 56,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# TODO sanitize\n\n#if((${ARGN}\" MATCHES \"&&\") OR\n\n#\t(ARGN MATCHES \"||\") OR\n\n#\t(ARGN MATCHES \"\\\\;\"))\n\n#\tmessage(\"Please report the following error to the project!\")\n\n#\tmessage(FATAL_ERROR \"Looks like someone's doing something nefarious with git_describe! Passed arguments ${ARGN}\")\n\n#endif()\n",
        "Line" : 97,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "#message(STATUS \"Arguments to execute_process: ${ARGN}\")\n",
        "Line" : 105,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 7
    },
    "common/CMakeLists.txt" : {
      "ObjectId" : "5454472903a2f7a8747aca2cae0e51fbfead2adc",
      "LastModified" : "2018-10-30T19:12:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "data/CMakeLists.txt" : {
      "ObjectId" : "0104f420a2c302dae78a64f896c94c7a97a401e6",
      "LastModified" : "2018-05-19T19:47:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external/CMakeLists.txt" : {
      "ObjectId" : "be8aa71e9f27c63e8d46b0d655108b2407fae80e",
      "LastModified" : "2018-07-21T11:58:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "man/CMakeLists.txt" : {
      "ObjectId" : "7033d4940e129fa12c18eea07c48d0a6ab5fe485",
      "LastModified" : "2018-05-20T17:22:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "metaserverapi/CMakeLists.txt" : {
      "ObjectId" : "30a1b95fc0d101e73a354be6806457efe6dde597",
      "LastModified" : "2018-05-19T19:47:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "modules/CMakeLists.txt" : {
      "ObjectId" : "0c63015e3099f97efb8f2832f58fcd6745f159d8",
      "LastModified" : "2018-09-18T20:11:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navigation/CMakeLists.txt" : {
      "ObjectId" : "d184b4a5b3fdeeb3c1ef474c75e6c495a0f1d6ff",
      "LastModified" : "2018-05-19T19:47:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navigation/external/RecastDetour/Detour/CMakeLists.txt" : {
      "ObjectId" : "ace4a1834837f24ab0d0b66c0e6cafee3c491d0c",
      "LastModified" : "2018-05-19T19:47:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navigation/external/RecastDetour/DetourTileCache/CMakeLists.txt" : {
      "ObjectId" : "a3fedcd648dfbd4aa67b34f54225e2f350d68440",
      "LastModified" : "2018-05-19T19:47:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "navigation/external/RecastDetour/Recast/CMakeLists.txt" : {
      "ObjectId" : "25bb90a59f2e1991e4183564989714cd07566411",
      "LastModified" : "2018-05-19T19:47:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "physics/CMakeLists.txt" : {
      "ObjectId" : "bc7ec9e7ac187fe247017b3719605c4953aa85ed",
      "LastModified" : "2018-05-19T19:47:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "rules/CMakeLists.txt" : {
      "ObjectId" : "0ab6da0e604307f572a95f2a7d2aca3f8e99a8b9",
      "LastModified" : "2018-12-16T19:40:48Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "rules/ai/CMakeLists.txt" : {
      "ObjectId" : "e018405e8256bf57d4b20b30f9f9eba4269978a5",
      "LastModified" : "2018-11-03T16:17:50Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "rules/ai/python/CMakeLists.txt" : {
      "ObjectId" : "e80c153746a9cc922abbb644db8e8a2d96b605f5",
      "LastModified" : "2018-11-03T16:17:50Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "rules/entityfilter/CMakeLists.txt" : {
      "ObjectId" : "ef0f3e7616d54bfa482dd6224c0dc2c9e97dfda1",
      "LastModified" : "2018-10-31T20:38:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "rules/entityfilter/python/CMakeLists.txt" : {
      "ObjectId" : "1b65e5c15b98ef2523ef7c86927aad72fb7b7216",
      "LastModified" : "2018-10-31T20:38:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "rules/python/CMakeLists.txt" : {
      "ObjectId" : "016c465ae0f58727019e1cdfb2d184e7adf82ced",
      "LastModified" : "2018-12-22T20:21:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "rules/simulation/CMakeLists.txt" : {
      "ObjectId" : "5f5e56bd2bbd2af8b9d911c8b1b9688936963725",
      "LastModified" : "2019-01-11T20:57:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "rules/simulation/python/CMakeLists.txt" : {
      "ObjectId" : "7c0aa5c7bf80b4ac14b7ae0cb5273271cd41f1c6",
      "LastModified" : "2018-11-03T16:17:50Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "rulesets/CMakeLists.txt" : {
      "ObjectId" : "7faf20e114c40b096e6fa0d8c2a7ecd04880854e",
      "LastModified" : "2019-01-11T20:57:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "server/CMakeLists.txt" : {
      "ObjectId" : "f1de03f78c39c5125a9d0d55fd7d9b9a9ffaa544",
      "LastModified" : "2019-01-11T20:57:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#For some reason it seems we need to also link to avahi-common\n",
        "Line" : 12,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "#add_executable(cyslave\n\n#        Account.cpp\n\n#        Player.cpp\n\n#        Admin.cpp\n\n#        Persistence.cpp\n\n#        EntityFactory.cpp\n\n#        ServerRouting.cpp\n\n#        WorldRouter.cpp\n\n#        TaskFactory.cpp\n\n#        CorePropertyManager.cpp\n\n#        EntityBuilder.cpp\n\n#        Lobby.cpp\n\n#        Connection.cpp\n\n#        TrustedConnection.cpp\n\n#        SlaveClientConnection.cpp\n\n#        Peer.cpp\n\n#        Master.cpp\n\n#        HttpCache.cpp\n\n#        CommPeer.cpp\n\n#        CommHttpClient.cpp\n\n#        CommMaster.cpp\n\n#        TeleportState.cpp\n\n#        slave.cpp)\n\n#\n\n#target_link_libraries(cyslave\n\n#        scriptpython\n\n#        navigation\n\n#        DetourTileCache\n\n#        Detour\n\n#        Recast\n\n#        rulesetmind\n\n#        rulessimulation\n\n#        entityfilter\n\n#        rulesbase\n\n#        modules\n\n#        common\n\n#        physics\n\n#        metaserverapi\n\n#        comm)\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "aa7b4d43e001a4272ad695751ad7971b6aeedc5a",
      "LastModified" : "2019-01-11T20:57:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#On platforms which supports it, link the \"libSegFault\" library which provides nice stack traces\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Macro for adding a test\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#### Common tests #####\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# PHYSICS_TESTS\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# MODULE_TESTS\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# RULESETS_TESTS\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#Python ruleset tests\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#wf_add_test(Py_TerrainModPropertyTest.cpp python_testers.cpp)\n\n#target_link_libraries(Py_TerrainModPropertyTest ${PYTHON_TESTS_LIBS})\n",
        "Line" : 291,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#wf_add_test(Py_ShapeTest.cpp python_testers.cpp)\n\n#target_link_libraries(Py_ShapeTest ${PYTHON_TESTS_LIBS})\n",
        "Line" : 294,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#Entity filter tests\n",
        "Line" : 303,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# RULESETS_INTEGRATION\n",
        "Line" : 341,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# CLIENT_TESTS\n",
        "Line" : 419,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# CLIENT_INTEGRATION_TESTS\n",
        "Line" : 436,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# SERVER_TESTS\n",
        "Line" : 440,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# SERVER_COMM_TESTS\n",
        "Line" : 474,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# SERVER_INTEGRATION_TESTS\n",
        "Line" : 491,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#Rulesetintegration_LDFLAGS = $(PYTHON_LINKER_FLAGS)\n",
        "Line" : 516,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Other TESTS\n\n#wf_add_test(MasterTest.cpp ${PROJECT_SOURCE_DIR}/server/Master.cpp)\n\n#target_link_libraries(MasterTest common)\n",
        "Line" : 558,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# TOOLS_TESTS\n",
        "Line" : 563,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# PYTHON_TESTS\n\n#wf_add_test(python_class.cpp)\n\n#target_link_libraries(python_class scriptpython rulessimulation rulesetmind rulesbase modules physics common)\n",
        "Line" : 571,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "tools/CMakeLists.txt" : {
      "ObjectId" : "372521a287ec9610ea25597deaf07ef8832315c0",
      "LastModified" : "2018-10-31T20:38:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 31
  },
  "ElapsedTime" : 3845
}