{
  "Repository" : "25843659",
  "Revision" : "HEAD",
  "ObjectId" : "69af15ef61555c074f4ce7a93398fd502360eec2",
  "CommitTime" : "2019-04-11T22:29:13Z",
  "Files" : {
    "BUILD" : {
      "ObjectId" : "3fadac2de5e53750d4f7c2cd6d4356967e111333",
      "LastModified" : "2018-06-29T11:56:54Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# -*- python -*-",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright 2018 Josh Pieper, jjp@pobox.com.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "base/BUILD" : {
      "ObjectId" : "234a73d2d39bc0713b4b54ba82592bdc22b95808",
      "LastModified" : "2019-04-11T19:07:14Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# -*- python -*-",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright 2018-2019 Josh Pieper, jjp@pobox.com.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "base/module_main.bzl" : {
      "ObjectId" : "3ac1dc55237d3c474e1c06fd3beb05adb4173173",
      "LastModified" : "2018-06-29T11:56:54Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# -*- python -*-",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright 2014-2018 Josh Pieper, jjp@pobox.com.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "\"\"\"cat > $(location {name}_main.cc) << EOF\n#include \"{prefix}/{name}.h\"\n\n#include \"base/module_main.h\"\n\nextern \"C\" {{\nint main(int argc, char**argv) {{\n        return mjmech::base::main<{cname}>(argc, argv);\n}}\n}}\nEOF\n        \"\"\"",
        "Line" : 21,
        "CharPositionInLine" : 14
      },
      "CommentCount" : 3
    },
    "configs/BUILD" : {
      "ObjectId" : "6c0f00346ac16316125297036111c6988c273d16",
      "LastModified" : "2018-08-20T02:17:05Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# -*- python -*-",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright 2018 Josh Pieper, jjp@pobox.com.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "hw/gimbal/firmware/Drivers/CMSIS/Makefile" : {
      "ObjectId" : "eab0a1530b79ffa8ecdcc6c0e2304b0c1db6f513",
      "LastModified" : "2018-08-20T02:17:05Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "hw/gimbal/firmware/Drivers/Makefile" : {
      "ObjectId" : "171cdaf7bdeb2095a84fe674f8f4fc5bcb6586e1",
      "LastModified" : "2018-08-20T02:17:05Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Make all libraries\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "hw/gimbal/firmware/Drivers/STM32F4xx_HAL_Driver/Makefile" : {
      "ObjectId" : "bd39b560bd212c59903fcb85d8300dfe8916e9da",
      "LastModified" : "2018-08-20T02:17:05Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Compile the STM32F10x Standard Peripheral Library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "hw/gimbal/firmware/Makefile" : {
      "ObjectId" : "eb476bf5d57fcaced3791e98e77a06bef856593e",
      "LastModified" : "2018-08-20T02:17:05Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#LDSCRIPT = \"Projects/TrueSTUDIO/e407-test1 Configuration/STM32F407ZG_FLASH.ld\"\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#LIBINC := $(shell find $(INCDIR) -name *.h -printf \"-I%h/\\n\"|sort|uniq)\r\n\n#LIBINC += $(shell find $(LIBDIR) -name *.h -printf \"-I%h/\\n\"|sort|uniq)\r\n\n#LIBINC += $(shell find $(MDLDIR) -name *.h -printf \"-I%h/\\n\"|sort|uniq|sed -e 's/lwip\\///'|sed -e 's/arch\\///')\r\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# INCLUDES = -I$(SRCDIR) $(LIBINC)\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#$(GDB) main.out <reset.gdb\r\n",
        "Line" : 90,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 4
    },
    "hw/gimbal/firmware/Middlewares/Makefile" : {
      "ObjectId" : "f01459aee8c25d1c6bded60892e6d76508597d32",
      "LastModified" : "2018-08-20T02:17:05Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Make all libraries\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "hw/gimbal/firmware/Middlewares/ST/Makefile" : {
      "ObjectId" : "171cdaf7bdeb2095a84fe674f8f4fc5bcb6586e1",
      "LastModified" : "2018-08-20T02:17:05Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Make all libraries\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "hw/gimbal/firmware/Middlewares/ST/STM32_USB_Device_Library/Makefile" : {
      "ObjectId" : "ba89cec628cf5ae029780865245f754d8d37853a",
      "LastModified" : "2018-08-20T02:17:05Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Compile the STM32F10x Standard Peripheral Library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "hw/odroid_shield_v2/firmware/Makefile" : {
      "ObjectId" : "b92bc1e40c9986dbf7936874f4df66f8b001712e",
      "LastModified" : "2018-08-20T02:17:05Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n#   MUTABLE STUFF\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# MCU TYPE\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#AD_PORT=/dev/ttyACM99\n\n#AD_BAUD=115200\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# library files used\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Pull from mlib2 master if it exists\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "hw/odroid_shield_v2/firmware/odroid-i2c-test/Makefile" : {
      "ObjectId" : "6b28d3cdf19e3e8710c8d8563d38b23a0721de4e",
      "LastModified" : "2018-08-20T02:17:05Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#SRC=linux-i2c-test.c\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "hw/panel_qual/firmware/Makefile" : {
      "ObjectId" : "696f544c0d3449a95e082e5460c3f6d470bc0d8a",
      "LastModified" : "2018-08-20T02:17:05Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Hey Emacs, this is a -*- makefile -*-\n\n#----------------------------------------------------------------------------\n\n# WinAVR Makefile Template written by Eric B. Weddington, Jï¿½rg Wunsch, et al.\n\n#\n\n# Released to the Public Domain\n\n#\n\n# Additional material for this makefile was written by:\n\n# Peter Fleury\n\n# Tim Henigan\n\n# Colin O'Flynn\n\n# Reiner Patommel\n\n# Markus Pfaff\n\n# Sander Pool\n\n# Frederik Rouleau\n\n# Carlos Lamas\n\n#\n\n#----------------------------------------------------------------------------\n\n# On command line:\n\n#\n\n# make all = Make software.\n\n#\n\n# make clean = Clean out built project files.\n\n#\n\n# make coff = Convert ELF to AVR COFF.\n\n#\n\n# make extcoff = Convert ELF to AVR Extended COFF.\n\n#\n\n# make program = Download the hex file to the device, using avrdude.\n\n#                Please customize the avrdude settings below first!\n\n#\n\n# make debug = Start either simulavr or avarice as specified for debugging,\n\n#              with avr-gdb or avr-insight as the front end for debugging.\n\n#\n\n# make filename.s = Just compile filename.c into the assembler code only.\n\n#\n\n# make filename.i = Create a preprocessed source file for use in submitting\n\n#                   bug reports to the GCC project.\n\n#\n\n# To rebuild project do \"make clean\" then \"make all\".\n\n#----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Target file name (without extension).\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-dbg\n",
        "Line" : 47,
        "CharPositionInLine" : 11
      },
      "3" : {
        "Text" : "# Set this for the ATMEL DFU USB Bootloader.  Omit it for the Teensy.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# List C source files here. (C dependencies are automatically generated.)\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# MCU name, you MUST set this to match the board you are using\n\n# type \"make clean\" after changing this, so all files will be rebuilt\n\n#\n\n#MCU = at90usb162       # Teensy 1.0\n\n#MCU = atmega32u4        # Teensy 2.0\n\n#MCU = at90usb646       # Teensy++ 1.0\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Teensy++ 2.0\n",
        "Line" : 62,
        "CharPositionInLine" : 23
      },
      "7" : {
        "Text" : "# Processor frequency.\n\n#     This will define a symbol, F_CPU, in all source code files equal to the\n\n#     processor frequency. You can then use this symbol in your source code to\n\n#     calculate timings. Do NOT tack on a 'UL' at the end, this will be done\n\n#     automatically to create a 32-bit value in your source code.\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Output format. (can be srec, ihex, binary)\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Object files directory\n\n#     To put object files in current directory, use a dot (.), do NOT make\n\n#     this an empty or blank macro!\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# List C++ source files here. (C dependencies are automatically generated.)\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# List Assembler source files here.\n\n#     Make them always end in a capital .S.  Files ending in a lowercase .s\n\n#     will not be considered source files but generated files (assembler\n\n#     output from the compiler), and will be deleted upon \"make clean\"!\n\n#     Even though the DOS/Win* filesystem matches both .s and .S the same,\n\n#     it will preserve the spelling of the filenames, and gcc itself does\n\n#     care about how the name is spelled on its command-line.\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Optimization level, can be [0, 1, 2, 3, s].\n\n#     0 = turn off optimization. s = optimize for size.\n\n#     (Note: 3 is not always the best optimization level. See avr-libc FAQ.)\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Debugging format.\n\n#     Native formats for AVR-GCC's -g are dwarf-2 [default] or stabs.\n\n#     AVR Studio 4.10 requires dwarf-2.\n\n#     AVR [Extended] COFF format requires stabs, plus an avr-objcopy run.\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# List any extra directories to look for include files here.\n\n#     Each directory must be seperated by a space.\n\n#     Use forward slashes for directory separators.\n\n#     For a directory that has spaces, enclose it in quotes.\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Compiler flag to set the C Standard level.\n\n#     c89   = \"ANSI\" C\n\n#     gnu89 = c89 plus GCC extensions\n\n#     c99   = ISO C99 standard (not yet fully implemented)\n\n#     gnu99 = c99 plus GCC extensions\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Place -D or -U options here for C sources\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Place -D or -U options here for ASM sources\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Place -D or -U options here for C++ sources\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#CPPDEFS += -D__STDC_LIMIT_MACROS\n\n#CPPDEFS += -D__STDC_CONSTANT_MACROS\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#---------------- Compiler Options C ----------------\n\n#  -g*:          generate debugging information\n\n#  -O*:          optimization level\n\n#  -f...:        tuning, see GCC manual and avr-libc documentation\n\n#  -Wall...:     warning level\n\n#  -Wa,...:      tell GCC to pass this to the assembler.\n\n#    -adhlns...: create assembler listing\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#CFLAGS += -mshort-calls\n\n#CFLAGS += -fno-unit-at-a-time\n\n#CFLAGS += -Wundef\n\n#CFLAGS += -Wunreachable-code\n\n#CFLAGS += -Wsign-compare\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#---------------- Compiler Options C++ ----------------\n\n#  -g*:          generate debugging information\n\n#  -O*:          optimization level\n\n#  -f...:        tuning, see GCC manual and avr-libc documentation\n\n#  -Wall...:     warning level\n\n#  -Wa,...:      tell GCC to pass this to the assembler.\n\n#    -adhlns...: create assembler listing\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#CPPFLAGS += -mshort-calls\n\n#CPPFLAGS += -fno-unit-at-a-time\n\n#CPPFLAGS += -Wstrict-prototypes\n\n#CPPFLAGS += -Wunreachable-code\n\n#CPPFLAGS += -Wsign-compare\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#CPPFLAGS += $(CSTANDARD)\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#---------------- Assembler Options ----------------\n\n#  -Wa,...:   tell GCC to pass this to the assembler.\n\n#  -adhlns:   create listing\n\n#  -gstabs:   have the assembler create line number information; note that\n\n#             for use in COFF files, additional information about filenames\n\n#             and function names needs to be present in the assembler source\n\n#             files -- see avr-libc docs [FIXME: not yet described there]\n\n#  -listing-cont-lines: Sets the maximum number of continuation lines of hex\n\n#       dump that will be displayed for a given single line of source input.\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#---------------- Library Options ----------------\n\n# Minimalistic printf version\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Floating point printf version (requires MATH_LIB = -lm below)\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# If this is left blank, then it will use the Standard printf version.\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#PRINTF_LIB = $(PRINTF_LIB_MIN)\n\n#PRINTF_LIB = $(PRINTF_LIB_FLOAT)\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Minimalistic scanf version\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Floating point + %[ scanf version (requires MATH_LIB = -lm below)\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# If this is left blank, then it will use the Standard scanf version.\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#SCANF_LIB = $(SCANF_LIB_MIN)\n\n#SCANF_LIB = $(SCANF_LIB_FLOAT)\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List any extra directories to look for libraries here.\n\n#     Each directory must be seperated by a space.\n\n#     Use forward slashes for directory separators.\n\n#     For a directory that has spaces, enclose it in quotes.\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#---------------- External Memory Options ----------------\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# 64 KB of external RAM, starting after internal RAM (ATmega128!),\n\n# used for variables (.data/.bss) and heap (malloc()).\n\n#EXTMEMOPTS = -Wl,-Tdata=0x801100,--defsym=__heap_end=0x80ffff\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# 64 KB of external RAM, starting after internal RAM (ATmega128!),\n\n# only used for heap (malloc()).\n\n#EXTMEMOPTS = -Wl,--section-start,.data=0x801100,--defsym=__heap_end=0x80ffff\n",
        "Line" : 251,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#---------------- Linker Options ----------------\n\n#  -Wl,...:     tell GCC to pass this to linker.\n\n#    -Map:      create map file\n\n#    --cref:    add cross reference to  map file\n",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#LDFLAGS += -T linker_script.x\n",
        "Line" : 269,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#---------------- Programming Options (avrdude) ----------------\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Programming hardware\n\n# Type: avrdude -c ?\n\n# to get a full listing.\n\n#\n",
        "Line" : 275,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# com1 = serial port. Use lpt1 to connect to parallel port.\n",
        "Line" : 281,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# programmer connected to serial device\n",
        "Line" : 282,
        "CharPositionInLine" : 23
      },
      "44" : {
        "Text" : "#AVRDUDE_WRITE_EEPROM = -U eeprom:w:$(TARGET).eep\n",
        "Line" : 285,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Uncomment the following if you want avrdude's erase cycle counter.\n\n# Note that this counter needs to be initialized first using -Yn,\n\n# see avrdude manual.\n\n#AVRDUDE_ERASE_COUNTER = -y\n",
        "Line" : 288,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Uncomment the following if you do /not/ wish a verification to be\n\n# performed after programming the device.\n\n#AVRDUDE_NO_VERIFY = -V\n",
        "Line" : 293,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Increase verbosity level.  Please use this when submitting bug\n\n# reports about avrdude. See <http://savannah.nongnu.org/projects/avrdude>\n\n# to submit bug reports.\n\n#AVRDUDE_VERBOSE = -v -v\n",
        "Line" : 297,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "#---------------- Debugging Options ----------------\n",
        "Line" : 309,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# For simulavr only - target MCU frequency.\n",
        "Line" : 311,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Set the DEBUG_UI to either gdb or insight.\n\n# DEBUG_UI = gdb\n",
        "Line" : 314,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Set the debugging back-end to either avarice, simulavr.\n",
        "Line" : 318,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "#DEBUG_BACKEND = simulavr\n",
        "Line" : 320,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# GDB Init Filename.\n",
        "Line" : 322,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# When using avarice settings for the JTAG\n",
        "Line" : 325,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# Debugging port used to communicate between GDB / avarice / simulavr.\n",
        "Line" : 328,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# Debugging host used to communicate between GDB / avarice / simulavr, normally\n\n#     just set to localhost unless doing some sort of crazy debugging when\n\n#     avarice is running on a different computer.\n",
        "Line" : 331,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "#============================================================================\n",
        "Line" : 338,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# Define programs and commands.\n",
        "Line" : 341,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# Define Messages\n\n# English\n",
        "Line" : 356,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# Define all object files.\n",
        "Line" : 379,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# Define all listing files.\n",
        "Line" : 382,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Compiler flags to generate dependency files.\n",
        "Line" : 386,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# Combine all necessary flags and optional flags.\n\n# Add target processor to flags.\n",
        "Line" : 390,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# Default target.\n",
        "Line" : 400,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# Change the build target to build a HEX file or a library.\n",
        "Line" : 403,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "#build: lib\n",
        "Line" : 405,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# Eye candy.\n\n# AVR Studio 3.x does not check make's exit code but relies on\n\n# the following magic strings to be generated by the compile job.\n",
        "Line" : 418,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# Display size of file.\n",
        "Line" : 430,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "#ELFSIZE = $(SIZE) --mcu=$(MCU) --format=avr $(TARGET).elf\n",
        "Line" : 432,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# Display compiler version information.\n",
        "Line" : 445,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# Program the device.\n",
        "Line" : 451,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "#$(AVRDUDE) $(AVRDUDE_FLAGS) $(AVRDUDE_WRITE_FLASH) $(AVRDUDE_WRITE_EEPROM)\n",
        "Line" : 453,
        "CharPositionInLine" : 2
      },
      "73" : {
        "Text" : "# Generate avr-gdb config/init file which does the following:\n\n#     define the reset signal, load the target file, connect to target, and set\n\n#     a breakpoint at main().\n",
        "Line" : 463,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# Convert ELF to COFF for use in debugging / simulating in AVR Studio or VMLAB.\n",
        "Line" : 494,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# Create final output files (.hex, .eep) from ELF output file.\n",
        "Line" : 516,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# Create extended listing file from ELF output file.\n",
        "Line" : 528,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# Create a symbol table from ELF output file.\n",
        "Line" : 534,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# Create library from object files.\n",
        "Line" : 542,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# Link: create ELF output file from object files.\n",
        "Line" : 551,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "# Compile: create object files from C source files.\n",
        "Line" : 560,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# Compile: create object files from C++ source files.\n",
        "Line" : 567,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "# Compile: create assembler files from C source files.\n",
        "Line" : 574,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# Compile: create assembler files from C++ source files.\n",
        "Line" : 579,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# Assemble: create object files from assembler source files.\n",
        "Line" : 584,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# Create preprocessed source for use in sending a bug report.\n",
        "Line" : 591,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# Target: clean project.\n",
        "Line" : 596,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "# Create object files directory\n",
        "Line" : 617,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "# Include the dependency files.\n",
        "Line" : 621,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# Listing of phony targets.\n",
        "Line" : 625,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 90
    },
    "hw/pressure_foot/firmware/Makefile" : {
      "ObjectId" : "cabecc61ddda5ee08015949fd30b8177dc0a66ce",
      "LastModified" : "2018-08-20T02:17:05Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#-dbg\n",
        "Line" : 5,
        "CharPositionInLine" : 16
      },
      "1" : {
        "Text" : "# DO NOT DELETE\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "hw/pressure_foot/pcb/v1/pressure_foot.pro" : {
      "ObjectId" : "09c30d08d9c2c17014eed40c18683644852cf812",
      "LastModified" : "2018-08-20T02:17:05Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "hw/pressure_foot/pcb/v2/pressure_foot.pro" : {
      "ObjectId" : "4ca6bcfa07cb1801f18d62139bbec4462ccd2f4d",
      "LastModified" : "2018-08-20T02:17:05Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "hw/turret/encoder/pcb/encoder.pro" : {
      "ObjectId" : "1c0157e1305819663c869a75c295853a09789b3a",
      "LastModified" : "2018-08-20T02:17:05Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "mech/BUILD" : {
      "ObjectId" : "c80115f847aa50a7724638eddb7046d3c0c3ddb5",
      "LastModified" : "2019-04-11T20:32:44Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# -*- python -*-",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright 2018-2019 Josh Pieper, jjp@pobox.com.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "python/BUILD" : {
      "ObjectId" : "3381bd7ad9e8478966488e1d73534a19cccb29f3",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# -*- python -*-",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright 2018 Josh Pieper, jjp@pobox.com.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tools/workspace/BUILD" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2018-08-20T02:17:05Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "tools/workspace/bazel_deps/BUILD" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2018-08-20T02:17:05Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "tools/workspace/bazel_deps/repository.bzl" : {
      "ObjectId" : "5bbc3cd1765671eee60a4331641fc45933772f08",
      "LastModified" : "2019-04-11T19:07:14Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# -*- python -*-",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright 2018-2019 Josh Pieper, jjp@pobox.com.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tools/workspace/default.bzl" : {
      "ObjectId" : "553d0089a0215ff69532a593cb9b20c6c6ed8e4c",
      "LastModified" : "2019-04-11T19:07:14Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# -*- python -*-",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright 2018-2019 Josh Pieper, jjp@pobox.com.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tools/workspace/github_archive.bzl" : {
      "ObjectId" : "163d16959f17a53de3666730f22053cd28f2cd07",
      "LastModified" : "2018-08-20T02:17:05Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# -*- python -*-",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright 2018 Josh Pieper, jjp@pobox.com.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "\"\"\"Like 'http_archive', but for github repositories.\n\n    If 'local_override' is set, then reference a local repository at\n    the given path instead of github.com.\n    \"\"\"",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "tools/workspace/gst-rpicamsrc/BUILD" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2018-08-20T02:17:05Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "tools/workspace/gst-rpicamsrc/repository.bzl" : {
      "ObjectId" : "fd78d5aa298054f8489bfa63fc329a7c3f202667",
      "LastModified" : "2018-08-20T02:17:05Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# -*- python -*-",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright 2018 Josh Pieper, jjp@pobox.com.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tools/workspace/i2c-tools/BUILD" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2018-08-20T02:17:05Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "tools/workspace/i2c-tools/repository.bzl" : {
      "ObjectId" : "473cc428c6fe5ab94845380d867eff7a1f0ef416",
      "LastModified" : "2018-08-20T02:17:05Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# -*- python -*-",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright 2018 Josh Pieper, jjp@pobox.com.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tools/workspace/moteus/BUILD" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2019-04-11T19:07:14Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "tools/workspace/moteus/repository.bzl" : {
      "ObjectId" : "4bf9703c3ac9c7f576990eb4d9b9c470b12914b4",
      "LastModified" : "2019-04-11T19:07:14Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# -*- python -*-",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright 2018-2019 Josh Pieper, jjp@pobox.com.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tools/workspace/raspberrypi-firmware/BUILD" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2019-04-11T19:07:14Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "tools/workspace/raspberrypi-firmware/repository.bzl" : {
      "ObjectId" : "1a04ef4f87181a7495f9dc5242a3cab7d710e97e",
      "LastModified" : "2019-04-11T19:07:14Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# -*- python -*-",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright 2018 Josh Pieper, jjp@pobox.com.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tools/workspace/rpi_bazel/BUILD" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2019-04-11T19:07:14Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "tools/workspace/rpi_bazel/repository.bzl" : {
      "ObjectId" : "20500e033255d80657de69f6fee7e3ae41dea8a1",
      "LastModified" : "2019-04-11T22:29:13Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# -*- python -*-",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright 2018-2019 Josh Pieper, jjp@pobox.com.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "utils/BUILD" : {
      "ObjectId" : "f9ba796ea53410e00e4553e016fac72be8a3ed4b",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# -*- python -*-",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright 2018 Josh Pieper, jjp@pobox.com.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "QMAKE" : 3,
    "MAKEFILE" : 11,
    "BAZEL" : 22
  },
  "ElapsedTime" : 2025
}