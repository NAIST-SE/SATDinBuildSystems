{
  "Repository" : "10437746",
  "Revision" : "HEAD",
  "ObjectId" : "c3da3135ca5e89e8593aafedf568b14ad701ba67",
  "CommitTime" : "2018-09-13T09:25:42Z",
  "Files" : {
    "c-blosc/CMakeLists.txt" : {
      "ObjectId" : "8be39d1d21499392f4f31de30a004c13ad62f28a",
      "LastModified" : "2018-03-23T17:22:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake build system for Blosc\n\n# ============================\n\n#\n\n# Available options:\n\n#\n\n#   BUILD_STATIC: default ON\n\n#       build the static version of the Blosc library\n\n#   BUILD_SHARED: default ON\n\n#       build the shared library version of the Blosc library\n\n#   BUILD_TESTS: default ON\n\n#       build test programs and generates the \"test\" target\n\n#   BUILD_BENCHMARKS: default ON\n\n#       build the benchmark program\n\n#   DEACTIVATE_AVX2: default OFF\n\n#       do not attempt to build with AVX2 instructions\n\n#   DEACTIVATE_LZ4: default OFF\n\n#       do not include support for the LZ4 library\n\n#   DEACTIVATE_SNAPPY: default OFF\n\n#       do not include support for the Snappy library\n\n#   DEACTIVATE_ZLIB: default OFF\n\n#       do not include support for the Zlib library\n\n#   DEACTIVATE_ZSTD: default OFF\n\n#       do not include support for the Zstd library\n\n#   PREFER_EXTERNAL_LZ4: default OFF\n\n#       when found, use the installed LZ4 libs instead of included\n\n#       sources\n\n#   PREFER_EXTERNAL_SNAPPY: default OFF\n\n#       when found, use the installed Snappy libs instead of included\n\n#       sources\n\n#   PREFER_EXTERNAL_ZLIB: default OFF\n\n#       when found, use the installed zlib libs instead of included\n\n#       sources\n\n#   PREFER_EXTERNAL_ZSTD: default OFF\n\n#       when found, use the installed zstd libs instead of included\n\n#       sources\n\n#   TEST_INCLUDE_BENCH_SHUFFLE_1: default ON\n\n#       add a test that runs the benchmark program passing \"shuffle\" with 1\n\n#       thread as second parameter\n\n#   TEST_INCLUDE_BENCH_SHUFFLE_N: default ON\n\n#       add a test that runs the benchmark program passing \"shuffle\" with all\n\n#       threads as second parameter\n\n#   TEST_INCLUDE_BENCH_BITSHUFFLE_1: default ON\n\n#       add a test that runs the benchmark program passing \"bitshuffle\" with 1\n\n#       thread as second parameter\n\n#   TEST_INCLUDE_BENCH_BITSHUFFLE_N: default ON\n\n#       add a test that runs the benchmark program passing \"bitshuffle\" with\n\n#       all threads as second parameter\n\n#   TEST_INCLUDE_BENCH_SUITE: default OFF\n\n#       add a test that runs the benchmark program passing \"suite\"\n\n#       as first parameter\n\n#   TEST_INCLUDE_BENCH_SUITE_PARALLEL: default OFF\n\n#       add a test that runs the benchmark program passing \"parallel\"\n\n#       as first parameter\n\n#   TEST_INCLUDE_BENCH_HARDSUITE: default OFF\n\n#       add a test that runs the benchmark program passing \"hardsuite\"\n\n#       as first parameter\n\n#   TEST_INCLUDE_BENCH_EXTREMESUITE: default OFF\n\n#       add a test that runs the benchmark program passing \"extremesuite\"\n\n#       as first parameter\n\n#   TEST_INCLUDE_BENCH_DEBUGSUITE: default OFF\n\n#       add a test that runs the benchmark program passing \"debugsuite\"\n\n#       as first parameter\n\n#\n\n# Components:\n\n#\n\n#    LIB: includes blosc.so\n\n#    DEV: static includes blosc.a and blosc.h\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# parse the full version numbers from blosc.h\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# options\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# HAVE_LZ4 will be set to true because even if the library is\n\n# not found, we will use the included sources for it\n",
        "Line" : 126,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# HAVE_SNAPPY will be set to true because even if the library is not found,\n\n# we will use the included sources for it\n",
        "Line" : 137,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# import the ZLIB_ROOT environment variable to help finding the zlib library\n",
        "Line" : 143,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# HAVE_ZLIB will be set to true because even if the library is not found,\n\n# we will use the included sources for it\n",
        "Line" : 153,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# HAVE_ZSTD will be set to true because even if the library is\n\n# not found, we will use the included sources for it\n",
        "Line" : 164,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# create the config.h file\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# now make sure that you set the build directory on your \"Include\" path when compiling\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# If the build type is not set, default to Release.\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Set the possible values of build type for cmake-gui\n",
        "Line" : 182,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# enable @rpath in the install name for any shared library being built.  See #175.\n",
        "Line" : 188,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Based on the target system's processor and the compiler being used,\n\n# set build variables indicating which hardware features can be targeted\n\n# by the compiler. Note we DO NOT check which hardware features are supported\n\n# by this (the host) system, because we want to be able to support compiling\n\n# for newer hardware on older machines as well as cross-compilation.\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# We need C99 (GNU99 more exactly)\n",
        "Line" : 204,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# icc (ICC) 15.0.3 does not work compiling AVX2 code\n\n# (perhaps my machine does not have AVX2 and the compiler\n\n# cannot generate code for that?)\n",
        "Line" : 222,
        "CharPositionInLine" : 5
      },
      "16" : {
        "Text" : "# Unrecognized compiler. Emit a warning message to let the user know hardware-acceleration won't be available.\n",
        "Line" : 239,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# If the target system processor isn't recognized, emit a warning message to alert the user\n\n# that hardware-acceleration support won't be available but allow configuration to proceed.\n",
        "Line" : 243,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# disable AVX2 if specified\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# flags\n\n# Set -Wall and other useful warning flags.\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# @NOTE: -O3 is enabled in Release mode (CMAKE_BUILD_TYPE=\"Release\")\n",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Set the \"-msse2\" build flag if supported.\n",
        "Line" : 261,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Turn off misguided \"secure CRT\" warnings in MSVC.\n\n# Microsoft wants people to use the MS-specific <function>_s\n\n# versions of certain C functions but this is difficult to do\n\n# in platform-independent code.\n",
        "Line" : 273,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# For some supporting headers\n",
        "Line" : 281,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# Haiku have posix_memalign, required by test_common.h\n",
        "Line" : 286,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# subdirectories\n",
        "Line" : 308,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# uninstall target\n",
        "Line" : 322,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# packaging\n",
        "Line" : 339,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 28
    },
    "c-blosc/bench/CMakeLists.txt" : {
      "ObjectId" : "1aad1f6fdef8f5977cce1a01d26e62002cba628b",
      "LastModified" : "2018-03-23T17:22:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# sources\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# targets\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# cmake is complaining about LINK_PRIVATE in original PR\n\n# and removing it does not seem to hurt, so be it.\n\n# target_link_libraries(bench LINK_PRIVATE rt)\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# have to copy blosc dlls on Windows\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# tests\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The commented tests below take too much time to complete\n",
        "Line" : 37,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# add_test(test_lz4hc_shuffle_1 bench lz4hc ${SHUFFLE_1_OPTS})\n",
        "Line" : 44,
        "CharPositionInLine" : 12
      },
      "7" : {
        "Text" : "# add_test(test_zlib_shuffle_1 bench zlib ${SHUFFLE_1_OPTS})\n",
        "Line" : 50,
        "CharPositionInLine" : 12
      },
      "8" : {
        "Text" : "# add_test(test_zstd_shuffle_1 bench zstd ${SHUFFLE_1_OPTS})\n",
        "Line" : 53,
        "CharPositionInLine" : 12
      },
      "9" : {
        "Text" : "# add_test(test_lz4hc_bitshuffle_1 bench lz4hc ${BITSHUFFLE_1_OPTS})\n",
        "Line" : 82,
        "CharPositionInLine" : 12
      },
      "10" : {
        "Text" : "# add_test(test_zlib_bitshuffle_1 bench zlib ${BITSHUFFLE_1_OPTS})\n",
        "Line" : 88,
        "CharPositionInLine" : 12
      },
      "11" : {
        "Text" : "# add_test(test_zstd_bitshuffle_1 bench zstd ${BITSHUFFLE_1_OPTS})\n",
        "Line" : 91,
        "CharPositionInLine" : 12
      },
      "12" : {
        "Text" : "# add_test(test_lz4hc_bitshuffle_n bench lz4hc ${BITSHUFFLE_N_OPTS})\n",
        "Line" : 101,
        "CharPositionInLine" : 12
      },
      "13" : {
        "Text" : "# add_test(test_zlib_bitshuffle_n bench zlib ${BITSHUFFLE_N_OPTS})\n",
        "Line" : 107,
        "CharPositionInLine" : 12
      },
      "14" : {
        "Text" : "# add_test(test_zstd_bitshuffle_n bench zstd ${BITSHUFFLE_N_OPTS})\n",
        "Line" : 110,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 15
    },
    "c-blosc/bench/Makefile" : {
      "ObjectId" : "bb9ad0d77271a92427163ca87c5b056d2d1f96c5",
      "LastModified" : "2016-03-31T14:35:01Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# clang++, g++ or just gcc if not compiling Snappy (C++ code)\n",
        "Line" : 1,
        "CharPositionInLine" : 10
      },
      "1" : {
        "Text" : "# for UNIX or for Windows with pthread installed\n",
        "Line" : 3,
        "CharPositionInLine" : 21
      },
      "2" : {
        "Text" : "#LDFLAGS = -static  # for mingw\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Support for internal LZ4 and LZ4HC\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Support for external LZ4 and LZ4HC\n\n#LDFLAGS += -DHAVE_LZ4 -llz4\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Support for internal Snappy\n\n#SNAPPY_DIR = ../internal-complibs/snappy-1.1.1\n\n#CFLAGS += -DHAVE_SNAPPY -I$(SNAPPY_DIR)\n\n#SOURCES += $(wildcard $(SNAPPY_DIR)/*.cc)\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Support for external Snappy\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Support for external Zlib\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Support for internal Zlib\n\n#ZLIB_DIR = ../internal-complibs/zlib-1.2.8\n\n#CFLAGS += -DHAVE_ZLIB -I$(ZLIB_DIR)\n\n#SOURCES += $(wildcard $(ZLIB_DIR)/*.c)\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "c-blosc/blosc/CMakeLists.txt" : {
      "ObjectId" : "1affe102902284af7180b9cabbffcbb903b7d363",
      "LastModified" : "2018-04-12T11:32:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# a simple way to detect that we are using CMAKE\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Hide symbols by default unless they're specifically exported.\n\n# This makes it easier to keep the set of exported symbols the\n\n# same across all compilers/platforms.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# includes\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# library sources\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# library install directory\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# try to use the system library\n",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# targets\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Change this when an ABI change happens\n",
        "Line" : 129,
        "CharPositionInLine" : 25
      },
      "8" : {
        "Text" : "# Based on the target architecture and hardware features supported\n\n# by the C compiler, set hardware architecture optimization flags\n\n# for specific shuffle implementations.\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# MSVC targets SSE2 by default on 64-bit configurations, but not 32-bit configurations.\n",
        "Line" : 141,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# Define a symbol for the shuffle-dispatch implementation\n\n# so it knows SSE2 is supported even though that file is\n\n# compiled without SSE2 support (for portability).\n",
        "Line" : 149,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Define a symbol for the shuffle-dispatch implementation\n\n# so it knows AVX2 is supported even though that file is\n\n# compiled without AVX2 support (for portability).\n",
        "Line" : 163,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# When the option has been selected to compile the test suite,\n\n# compile an additional version of blosc_shared which exports\n\n# some normally-hidden symbols (to facilitate unit testing).\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# TEMP : CMake doesn't automatically add -lpthread here like it does\n\n# for the blosc_shared target. Force it for now.\n",
        "Line" : 183,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# install\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "c-blosc/cmake/FindLZ4.cmake" : {
      "ObjectId" : "e581a809f578be87c642657a02bc8143034c78d0",
      "LastModified" : "2017-02-01T09:59:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "c-blosc/cmake/FindSnappy.cmake" : {
      "ObjectId" : "688d4d565e05fc021cb5a4e41317c6306379a82c",
      "LastModified" : "2014-07-08T12:23:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "c-blosc/cmake/FindZstd.cmake" : {
      "ObjectId" : "7db4bb9b694ee5759fa1f73e0116eab55145248e",
      "LastModified" : "2017-02-01T09:59:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "c-blosc/compat/CMakeLists.txt" : {
      "ObjectId" : "6db3e881fa28ff88cb759a7cb103bc81dd1f0ddd",
      "LastModified" : "2018-03-23T17:22:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# build the filegen utility\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# have to copy blosc dlls on Windows\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# tests\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "c-blosc/internal-complibs/zstd-1.3.4/Makefile" : {
      "ObjectId" : "cdfdc5cdfd461391b9757bd5ed3ef0bedf1b624f",
      "LastModified" : "2018-04-12T11:32:20Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# ################################################################\n\n# Copyright (c) 2015-present, Yann Collet, Facebook, Inc.\n\n# All rights reserved.\n\n#\n\n# This source code is licensed under both the BSD-style license (found in the\n\n# LICENSE file in the root directory of this source tree) and the GPLv2 (found\n\n# in the COPYING file in the root directory of this source tree).\n\n# ################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Version numbers\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# OS X linker doesn't support -soname, and use different extension\n\n# see : https://developer.apple.com/library/mac/documentation/DeveloperTools/Conceptual/DynamicLibraries/100-Articles/DynamicLibraryDesignGuidelines.html\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Special case : building library in single-thread mode _and_ without zstdmt_compress.c\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Mac OS-X specific\n",
        "Line" : 114,
        "CharPositionInLine" : 20
      },
      "5" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# make install is validated only for Linux, OSX, BSD, Hurd and Solaris targets\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# directory variables : GNU conventions prefer lowercase\n\n# see https://www.gnu.org/prep/standards/html_node/Makefile-Conventions.html\n\n# support both lower and uppercase (BSD), use uppercase in script\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# prototypes generate deprecation warnings\n",
        "Line" : 173,
        "CharPositionInLine" : 65
      },
      "8" : {
        "Text" : "# Deprecated streaming functions\n",
        "Line" : 185,
        "CharPositionInLine" : 42
      },
      "CommentCount" : 9,
      "Errorlog" : "line 11:90 token recognition error at: '\\1'\nline 12:90 token recognition error at: '\\1'\nline 13:92 token recognition error at: '\\1'\nline 81:54 token recognition error at: '\\l'\nline 82:15 token recognition error at: '\\l'\nline 82:34 token recognition error at: '\\l'\nline 82:53 token recognition error at: '\\l'\n"
    },
    "c-blosc/internal-complibs/zstd-1.3.4/dll/example/Makefile" : {
      "ObjectId" : "45d0db3cd543371048234affc555f74ba2b6a971",
      "LastModified" : "2018-04-12T11:32:20Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# ################################################################\n\n# Copyright (c) 2016-present, Yann Collet, Facebook, Inc.\n\n# All rights reserved.\n\n#\n\n# This source code is licensed under both the BSD-style license (found in the\n\n# LICENSE file in the root directory of this source tree) and the GPLv2 (found\n\n# in the COPYING file in the root directory of this source tree).\n\n# ################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# can select custom flags. For example : CFLAGS=\"-O2 -g\" make\n",
        "Line" : 15,
        "CharPositionInLine" : 17
      },
      "2" : {
        "Text" : "# Define *.exe as extension for Windows systems\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "c-blosc/test_package/CMakeLists.txt" : {
      "ObjectId" : "fc0de5c3f94cf99d68761b3550dcf1dd21e550b1",
      "LastModified" : "2018-04-12T11:32:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "c-blosc/tests/CMakeLists.txt" : {
      "ObjectId" : "3c51b8ca6a876487d79011f05fe3841e23370c6d",
      "LastModified" : "2018-04-12T11:32:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# sources\n\n#aux_source_directory(. SOURCES)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# flags\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# targets and tests\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# test_nolock and test_noinit will be enabled only for Unix\n",
        "Line" : 12,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# test_compressor will be enabled only when LZ4 support is in\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Enable support for testing accelerated shuffles\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Define a symbol so tests for SSE2 shuffle/unshuffle will be compiled in.\n",
        "Line" : 30,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "#    if(COMPILER_SUPPORT_AVX2)\n\n#        # Define a symbol so tests for AVX2 shuffle/unshuffle will be compiled in.\n\n#        set_property(\n\n#            SOURCE ${source}\n\n#            APPEND PROPERTY COMPILE_DEFINITIONS SHUFFLE_AVX2_ENABLED)\n\n#    endif(COMPILER_SUPPORT_AVX2)\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Define the BLOSC_TESTING symbol so normally-hidden functions\n\n# aren't hidden from the view of the test programs.\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# have to copy dlls for Visual Studio\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# This is an attempt to make VS2008 work, but no luck...\n\n# https://cmake.org/pipermail/cmake/2014-October/058777.html\n",
        "Line" : 53,
        "CharPositionInLine" : 12
      },
      "11" : {
        "Text" : "# If there's a CSV file present for this test, read it to get the list\n\n# of test parameters then add a test for each parameter set.\n\n# Otherwise, this is a simple test so just add it once.\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Read the file contents into a CMake list\n",
        "Line" : 84,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# How many parameter sets for this test?\n\n# If there's not at least one (accounting for the CSV header line),\n\n# that's probably not correct so emit an error and stop configuring.\n",
        "Line" : 92,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# Remove the header line.\n",
        "Line" : 100,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# Add a test for each parameter set in the file.\n",
        "Line" : 103,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# Create the test name.\n\n# NOTE: The documentation for add_test says the test name \"may not contain\n\n# spaces, quotes, or other characters special in CMake syntax.\"\n",
        "Line" : 107,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 17
    },
    "c-blosc/tests/Makefile" : {
      "ObjectId" : "3a454bebb0d6844d75a8510c8c79b4f67bbf4ac3",
      "LastModified" : "2018-04-12T11:32:20Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# The list of executables\n\n# Generated PNG (intermediate) files\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Support for internal LZ4 and LZ4HC\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Support for external LZ4 and LZ4HC\n\n#LDFLAGS += -DHAVE_LZ4 -llz4\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Support for internal Snappy\n\n#SNAPPY_DIR = ../internal-complibs/snappy-1.1.1\n\n#CFLAGS += -DHAVE_SNAPPY -I$(SNAPPY_DIR)\n\n#BLOSC_LIB += $(wildcard $(SNAPPY_DIR)/*.cc)\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Support for external Snappy\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Support for external Zlib\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Support for internal Zlib\n\n#ZLIB_DIR = ../internal-complibs/zlib-1.2.8\n\n#CFLAGS += -DHAVE_ZLIB -I$(ZLIB_DIR)\n\n#BLOSC_LIB += $(wildcard $(ZLIB_DIR)/*.c)\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Support for internal Zstd\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "docs/Makefile" : {
      "ObjectId" : "b022c67934367f2a1148e045627c7a6200768878",
      "LastModified" : "2018-04-12T11:32:20Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Internal variables.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    }
  },
  "FileTypes" : {
    "CMAKE" : 9,
    "MAKEFILE" : 5
  },
  "ElapsedTime" : 1227
}