{
  "Repository" : "8333101",
  "Revision" : "HEAD",
  "ObjectId" : "826563e41b5ce9890b75506f672017de8d76d52d",
  "CommitTime" : "2019-04-11T06:35:34Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "cc23e62cbc0f1b470ad8aec0a8be4f158a33e646",
      "LastModified" : "2019-01-10T10:01:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set the default install path to /usr\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Avoid annoying warnings from Visual Studio\n",
        "Line" : 51,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Get the GIT hash of the latest commit\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Link with librt if present\n",
        "Line" : 143,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# Since libxml2-2.9.2, libxml2 provides its own LibXml2-config.cmake, with all\n\n# variables correctly set.\n\n# So, try first to find the CMake module provided by libxml2 package, then fallback\n\n# on the CMake's FindLibXml2.cmake module (which can lack some definition, especially\n\n# in static build case).\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#set(SETUP_PY ${CMAKE_CURRENT_SOURCE_DIR}/bindings/python/setup.py)\n\n#configure_file(python/setup.py.in ${SETUP_PY} @ONLY)\n",
        "Line" : 310,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# It is not an error when 'dot' is not found, just switching off the Doxygen's HAVE_DOT option\n",
        "Line" : 359,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# Create an installer if compiling for OSX\n",
        "Line" : 390,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Support creating some basic binpkgs via `make package`.\n\n# Disabled if OSX_PACKAGE is enabled, as tarballs would end up empty otherwise.\n",
        "Line" : 453,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 9
    },
    "bindings/CMakeLists.txt" : {
      "ObjectId" : "e2afcf09efb2f45f20da53de0fe1f5d48048d62b",
      "LastModified" : "2016-10-06T23:53:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "bindings/csharp/CMakeLists.txt" : {
      "ObjectId" : "7e9d19b295defc08889f706528147439c8e6ab61",
      "LastModified" : "2017-02-13T16:21:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "bindings/matlab/CMakeLists.txt" : {
      "ObjectId" : "4eea7d5b56a29d7ebdf32d5a9424a90dfc985e9b",
      "LastModified" : "2017-02-13T16:21:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "bindings/python/CMakeLists.txt" : {
      "ObjectId" : "4ba6aca9d48e205e4d4c7f927cb93859341f01a4",
      "LastModified" : "2016-11-16T11:45:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/CheckCaseSensitiveFileSystem.cmake" : {
      "ObjectId" : "8bbf81c4949b723271ba93d696844d58432746f8",
      "LastModified" : "2018-11-16T13:31:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Check if the file system is case sensitive or not\n\n# Inspired by Andreas Lauser's cmake at:\n\n# https://github.com/OPM/opm-parser/blob/master/cmake/Modules/CheckCaseSensitiveFileSystem.cmake\n\n# Included in libiio (LGPL2) with permission.\n\n#\n\n# Sets the following variable:\n\n# HAVE_CASE_SENSITIVE_FILESYSTEM   True if the file system honors the case of files\n\n#\n\n# I dislike that we have to emit a file from CMake, but I can't think of a better way.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# create a uppercase file\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# test if lowercase file can be opened\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# remove the file\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# check the contents\n\n# If it is empty, the file system is case sensitive.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/DarwinPackaging.cmake" : {
      "ObjectId" : "23490e46c127ca174e0b1e09c626c84355dca3d3",
      "LastModified" : "2018-11-16T13:31:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# support creating some basic binpkgs via `make package`\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/LinuxPackaging.cmake" : {
      "ObjectId" : "72f1c1804a3bef567e0ce7f7e131bcbdf96de8d7",
      "LastModified" : "2019-01-10T10:01:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# support creating some basic binpkgs via `make package`\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add these for CentOS 7\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# debian specific package settings\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# if we are going to be looking for things, make sure we have the utilities\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# if we want to, and have the capabilities find what is needed,\n\n# based on what backends are turned on and what libraries are installed\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# don't add a package dependancy if it is not installed locally\n\n# these should be the debian package names\n",
        "Line" : 48,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# find the version of the installed package, which is hard to do in\n\n# cmake first, turn the list into an list (seperated by semicolons)\n",
        "Line" : 66,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# then iterate over each\n",
        "Line" : 69,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# List packages matching given pattern ${package},\n\n# key is the glob (*) at the end of the ${package} name,\n\n# so we don't need to be so specific\n",
        "Line" : 71,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# returns a string, in a format:\n\n# ii  libxml2:amd64  2.9.4+dfsg1- amd64 GNOME XML library\n\n# 'ii' means installed - which is what we are looking for\n",
        "Line" : 76,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# get rid of the 'ii', and split things up, so we can look\n\n# at the name\n",
        "Line" : 81,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# ignore packages marked as dev, debug,\n\n# documentations, or utils\n",
        "Line" : 86,
        "CharPositionInLine" : 3
      },
      "12" : {
        "Text" : "# find the actual version, executes:\n\n# dpkg-query --showformat='\\${Version}'\n",
        "Line" : 91,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "#\t--show libusb-1.0-0\n",
        "Line" : 93,
        "CharPositionInLine" : 11
      },
      "14" : {
        "Text" : "# debian standard is package_ver-debian_ver,\n",
        "Line" : 98,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "#\t\"'2.9.4+dfsg1-2.1'\"\n",
        "Line" : 99,
        "CharPositionInLine" : 11
      },
      "16" : {
        "Text" : "# ignore patches and debian suffix version, and\n",
        "Line" : 100,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "#\tremove single quote\n",
        "Line" : 101,
        "CharPositionInLine" : 11
      },
      "18" : {
        "Text" : "# build the string for the Debian dependancy\n",
        "Line" : 106,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# remove the dangling end comma\n",
        "Line" : 113,
        "CharPositionInLine" : 1
      },
      "20" : {
        "Text" : "# assume everything is turned on, and running on a modern OS\n",
        "Line" : 117,
        "CharPositionInLine" : 1
      },
      "21" : {
        "Text" : "# old versions of cmake dont include this, but the same vintage of dpkg requires it\n",
        "Line" : 128,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 22
    },
    "examples/Makefile" : {
      "ObjectId" : "896835a851d2777e84f3071c74a850f2307f65fc",
      "LastModified" : "2018-11-16T13:31:39Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# libiio - Library for interfacing industrial I/O (IIO) devices\n\n#\n\n# Copyright (C) 2014 Analog Devices, Inc.\n\n# Author: Paul Cercueil <paul.cercueil@analog.com>\n\n#\n\n# This library is free software; you can redistribute it and/or\n\n# modify it under the terms of the GNU Lesser General Public\n\n# License as published by the Free Software Foundation; either\n\n# version 2.1 of the License, or (at your option) any later version.\n\n#\n\n# This library is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n\n# Lesser General Public License for more details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "iiod/CMakeLists.txt" : {
      "ObjectId" : "ab3060549a214593cc2b597a49876a6e8ae0198e",
      "LastModified" : "2018-11-16T13:31:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "e734e1d3ca66948e8f62f81be44fa492d6791bda",
      "LastModified" : "2018-11-16T13:31:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Make the test targets available to the main CMakeLists.txt\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 10,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 1312
}