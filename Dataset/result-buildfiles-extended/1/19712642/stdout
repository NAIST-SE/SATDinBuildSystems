{
  "Repository" : "19712642",
  "Revision" : "HEAD",
  "ObjectId" : "3a713e4043d76c302113a4facff583162990d6f0",
  "CommitTime" : "2019-04-16T17:17:38Z",
  "Files" : {
    "Makefile" : {
      "ObjectId" : "d987a9f67221336d9a3e993fb711d389c9a8ffbd",
      "LastModified" : "2019-04-15T21:35:17Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# connect to the celery dashboard by visiting http://localhost:5555\n",
        "Line" : 15,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# launch all studio's dependent services using docker-compose, and then run the tests\n",
        "Line" : 25,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# generate frontend messages\n",
        "Line" : 40,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# generate backend messages\n",
        "Line" : 42,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# workaround for Django 1.11 makemessages spitting out an invalid English translation file\n",
        "Line" : 44,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# we need to depend on makemessages, since CrowdIn requires the en folder to be populated\n\n# in order for it to properly extract strings\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# When using apidocs, this should clean out all modules\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Adapt to apidocs\n\n# sphinx-apidoc -d 10 -H \"Python Reference\" -o docs/py_modules/ kolibri kolibri/test kolibri/deployment/ kolibri/dist/\n",
        "Line" : 63,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# bild all studio docker image and all dependent services using docker-compose\n",
        "Line" : 71,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# run make deverver in foreground with all dependent services using docker-compose\n",
        "Line" : 75,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# run make deverver in foreground with all dependent services using docker-compose\n",
        "Line" : 79,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# stop all containers and delete volumes\n",
        "Line" : 83,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# bash shell inside studio-app container\n",
        "Line" : 88,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# launch all studio's dependent services using docker-compose, and then run the tests\n",
        "Line" : 92,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 14
    },
    "deploy/chaos/loadtest/Makefile" : {
      "ObjectId" : "748a0c0e65515c97fcb9b6b5aa4d4d7b9dfe93c2",
      "LastModified" : "2018-09-25T19:20:32Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "k8s/Makefile" : {
      "ObjectId" : "c81ba867d9a82a616ac77456253a4290fe4538fb",
      "LastModified" : "2018-10-02T21:20:22Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "k8s/images/app/Makefile" : {
      "ObjectId" : "d958cc266a959f5c2e2dd124a9e9c5773334baec",
      "LastModified" : "2018-03-23T04:26:25Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "k8s/images/nginx/Makefile" : {
      "ObjectId" : "9c2d01dc60a69fd5b68e6a8f2b671c86c623342c",
      "LastModified" : "2018-10-02T21:20:22Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 5
  },
  "ElapsedTime" : 3206
}