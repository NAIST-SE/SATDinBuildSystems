{
  "Repository" : "81791316",
  "Revision" : "HEAD",
  "ObjectId" : "c57b02248afac42b3b001901d33f5dfe0bf4ad2a",
  "CommitTime" : "2019-02-22T10:29:57Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "127aa2e6cb2c197ab7a9755a133d43fcd41bf46b",
      "LastModified" : "2018-03-09T06:12:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# C++ version\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# compiler settings\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# External packages.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Include directories.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# core library\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# tests\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/FindCLBlast.cmake" : {
      "ObjectId" : "d9b5ee9ae2891932f8564034affe5618c969faee",
      "LastModified" : "2018-03-03T08:51:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake script to find CLBlast.\n\n#\n\n# Once done, this script will define:\n\n#\n\n#   CLBLAST_FOUND - Whether or not the system has the CLBlast library.\n\n#   CLBLAST_INCLUDE_DIR - CLBlast include directory.\n\n#   CLBLAST_LIBRARIES - CLBlast library files.\n\n#\n\n#   CLBLAST_VERSION - Header version of the installed library.\n\n#   CLBLAST_VERSION_OK - `ON` if the installed header satisfies version\n\n#                        requirement, `OFF` otherwise.\n\n#\n\n# This script reads hints about search locations from the following\n\n# environment variables:\n\n#\n\n#   CLBLAST_ROOT\n\n#   CLBLAST_ROOT_DIR\n\n#\n\n# Author: Yusuke Oda (odashi) <yus.takara@gmail.com>\n\n#         Koichi Akabe (vbkaisetsu) <vbkaisetsu@gmail.com>\n\n# Created: 2017/03/03\n\n# Updated: 2017/03/03\n\n#\n\n# This script is provided as a part of the primitiv core library.\n\n# Redistributing and using this script is allowed according to\n\n# the Apache License Version 2.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Finds CLBlast\n\n#\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#message(\"-- CLBlast include dir: \" ${CLBLAST_INCLUDE_DIR})\n\n#message(\"-- CLBlast libraries: \" ${CLBLAST_LIBRARIES})\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#\n\n# Checks version\n\n#\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#message(\"CLBlast version requested: ${CLBlast_FIND_VERSION}\")\n\n#message(\"CLBlast version found: ${CLBLAST_VERSION}\")\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/FindCLHPP.cmake" : {
      "ObjectId" : "8bc09ab686cf1fd3959f020b1dd7ed119394eb2e",
      "LastModified" : "2017-11-16T20:13:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake script to find OpenCL C++ headers.\n\n#\n\n# Once done, this script will define:\n\n#\n\n#   CLHPP_FOUND - Whether or not the system has the OpenCL C++ headers.\n\n#   CLHPP_INCLUDE_DIR - The include directory which the script found.\n\n#\n\n# This script reads hints about search locations from the following\n\n# environment variables:\n\n#\n\n#   CLHPP_ROOT\n\n#   CLHPP_ROOT_DIR\n\n#\n\n# Author: Yusuke Oda (odashi) <yus.takara@gmail.com>\n\n# Created: 2017/11/16\n\n#\n\n# This script is provided as a part of the primitiv library.\n\n# Redistributing and using this script is allowed according to\n\n# the Apache License Version 2.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindCuDNN.cmake" : {
      "ObjectId" : "ac130f60a96f5b89d859a64a3dfbdfd339ef5bf3",
      "LastModified" : "2018-03-03T08:51:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake script to find cuDNN library.\n\n#\n\n# Once done, this script will define:\n\n#\n\n#   CUDNN_FOUND - Whether or not the system has the cuDNN library.\n\n#   CUDNN_INCLUDE_DIR - cuDNN include directory.\n\n#   CUDNN_LIBRARIES - cuDNN library files.\n\n#\n\n#   CUDNN_VERSION - Header version of the installed library.\n\n#   CUDNN_VERSION_OK - `ON` if the installed header satisfies version\n\n#                         requirement, `OFF` otherwise.\n\n#\n\n# This script reads hints about search locations from the following\n\n# environment variables:\n\n#\n\n#   CUDNN_ROOT\n\n#   CUDNN_ROOT_DIR\n\n#\n\n# Author: Yusuke Oda (odashi) <yus.takara@gmail.com>\n\n# Created: 2018/01/10\n\n# Updated: 2018/01/10\n\n#\n\n# This script is provided as a part of the \"primitiv\" core library.\n\n# Redistributing and using this script is allowed under\n\n# the Apache License Version 2.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Finds cuDNN core library\n\n#\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#message(\"-- cuDNN include dir: \" ${CUDNN_INCLUDE_DIR})\n\n#message(\"-- cuDNN libraries: \" ${CUDNN_LIBRARIES})\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#\n\n# Checks version\n\n#\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#message(\"cuDNN version requested: ${CuDNN_FIND_VERSION}\")\n\n#message(\"cuDNN version found: ${CUDNN_VERSION}\")\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/FindEigen3.cmake" : {
      "ObjectId" : "fcca37225d2e6c724b10b6c9dbbb9ef3b33212d5",
      "LastModified" : "2018-03-03T08:51:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Eigen3 lib\n\n#\n\n# This module supports requiring a minimum version, e.g. you can do\n\n#   find_package(Eigen3 3.1.2)\n\n# to require version 3.1.2 or newer of Eigen3.\n\n#\n\n# Once done this will define\n\n#\n\n#  EIGEN3_FOUND - system has eigen lib with correct version\n\n#  EIGEN3_INCLUDE_DIR - the eigen include directory\n\n#  EIGEN3_VERSION - eigen version\n\n#\n\n# This module reads hints about search locations from\n\n# the following enviroment variables:\n\n#\n\n# EIGEN3_ROOT\n\n# EIGEN3_ROOT_DIR\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>\n\n# Copyright (c) 2009 Benoit Jacob <jacob.benoit.1@gmail.com>\n\n# Redistribution and use is allowed according to the terms of the 2-clause BSD license.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# search first if an Eigen3Config.cmake is available in the system,\n\n# if successful this would set EIGEN3_INCLUDE_DIR and the rest of\n\n# the script will work as usual\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "cmake/FindPrimitiv.cmake" : {
      "ObjectId" : "826ec81ea4618d06922461ce699e96764543ddbb",
      "LastModified" : "2018-03-03T08:51:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake script to find primitiv library.\n\n#\n\n# Once done, this script will define:\n\n#\n\n#   PRIMITIV_FOUND - Whether or not the system has the primitiv library.\n\n#   PRIMITIV_INCLUDE_DIR - primitiv include directory.\n\n#   PRIMITIV_LIBRARIES - primitiv library files.\n\n#\n\n#   PRIMITIV_C_FOUND - Whether or not the system has the primitiv C API.\n\n#   PRIMITIV_C_INCLUDE_DIR - primitiv C API include directory.\n\n#   PRIMITIV_C_LIBRARIES - primitiv C API library files.\n\n#\n\n#   PRIMITIV_VERSION - Header version of the installed library.\n\n#   PRIMITIV_VERSION_OK - `ON` if the installed header satisfies version\n\n#                         requirement, `OFF` otherwise.\n\n#\n\n# This script reads hints about search locations from the following\n\n# environment variables:\n\n#\n\n#   PRIMITIV_ROOT\n\n#   PRIMITIV_ROOT_DIR\n\n#\n\n# Author: Yusuke Oda (odashi) <yus.takara@gmail.com>\n\n# Created: 2017/08/13\n\n# Updated: 2017/12/16\n\n#\n\n# This script is provided as a part of the \"primitiv\" core library.\n\n# Redistributing and using this script is allowed under\n\n# the Apache License Version 2.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Finds primitiv core library\n\n#\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#message(\"-- primitiv include dir: \" ${PRIMITIV_INCLUDE_DIR})\n\n#message(\"-- primitiv libraries: \" ${PRIMITIV_LIBRARIES})\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#\n\n# Finds primitiv C API\n\n#\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#message(\"-- primitiv C API include dir: \" ${PRIMITIV_C_INCLUDE_DIR})\n\n#message(\"-- primitiv C API libraries: \" ${PRIMITIV_C_LIBRARIES})\n",
        "Line" : 85,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#\n\n# Checks version\n\n#\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#message(\"primitiv version requested: ${Primitiv_FIND_VERSION}\")\n\n#message(\"primitiv version found: ${PRIMITIV_VERSION}\")\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cmake/generate_char_array.cmake" : {
      "ObjectId" : "f51b379674aa93e96c27acf50788b5d7943f3328",
      "LastModified" : "2018-12-14T01:12:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This script generates HEX formatted char array from input file.\n\n#\n\n# Usage:\n\n#   cmake -P generate_char_array.cmake <output file> <input file 1> <input file 2> ...\n\n#\n\n# Example of input file:\n\n#   This is a test\\n\n\n#\n\n# Example of output file:\n\n#   0x54, 0x68, 0x69, 0x73, 0x20, 0x69, 0x73, 0x20, 0x61, 0x20, 0x74, 0x65, 0x73, 0x74, 0x0a,\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "docs/Makefile" : {
      "ObjectId" : "e6600a43fe973d92dc3a372fe353daba430e524f",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Minimal makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Put it first so that \"make\" without argument is like \"make help\".\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Catch-all target: route all unknown targets to Sphinx using the new\n\n# \"make mode\" option.  $(O) is meant as a shortcut for $(SPHINXOPTS).\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "primitiv/CMakeLists.txt" : {
      "ObjectId" : "383eefab917a0fbc49f8e7883ce95fed7d16bf89",
      "LastModified" : "2018-12-14T01:12:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build rules of the primitiv core library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Global configuration header\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Version header.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Combined header (won't be used by the library itself)\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Files on ./core\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Files on ./core/mixins\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Files on ./contrib\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Files on ./msgpack\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Files on ./devices/naive\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Minimal library: all of above.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Builds the minimal library.\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Build rules of the Eigen backend.\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# NOTE(odashi):\n\n# Explicitly disabling `-Wint-in-bool-context` to avoid warnings caused by\n\n# Eigen v3.3.4 or earlier.\n",
        "Line" : 94,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Build rules of the CUDA backend.\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Common files\n",
        "Line" : 127,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# devices::CUDA\n",
        "Line" : 130,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# devices::CUDA16\n",
        "Line" : 137,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Workaround for some systems.\n\n#list(APPEND CUDA_NVCC_FLAGS \"-D_FORCE_INLINES\")\n\n#list(APPEND CUDA_NVCC_FLAGS \"-D_MWAITXINTRIN_H_INCLUDED\")\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Supported architectures.\n",
        "Line" : 151,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Build rules of the OpenCL backend.\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Common files\n",
        "Line" : 191,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# devices::OpenCL\n",
        "Line" : 193,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# Generates an embedded byte array of OpenCL kernels.\n",
        "Line" : 200,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# Builds the integrated binary.\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Builds C API\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "e7984b31801eea3a4d43902d6a1dd94e1639b294",
      "LastModified" : "2018-12-13T20:46:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# test definitions\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# compiler settings\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# NOTE(vbkaisetsu):\n\n# x87 machines keep excess precision of floating-point variables\n\n# in registers. -ffloat-store option prevents this behavior and\n\n# suppresses errors between test cases and actual results.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    }
  },
  "FileTypes" : {
    "CMAKE" : 9,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 1649
}