{
  "Repository" : "14456353",
  "Revision" : "HEAD",
  "ObjectId" : "48bbdd48e71af98c467caf31cbf93e8339e2ae7e",
  "CommitTime" : "2018-12-18T22:40:20Z",
  "Files" : {
    "Makefile.am" : {
      "ObjectId" : "a5ab6c2af1d43b1169df803d0c054bfa8280700c",
      "LastModified" : "2018-06-09T23:09:56Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#not installed\n",
        "Line" : 25,
        "CharPositionInLine" : 44
      },
      "CommentCount" : 1
    },
    "contrib/bitcoin-qt.pro" : {
      "ObjectId" : "3a72d10f4732b80e50d943d9d600e8d38b9957b9",
      "LastModified" : "2014-01-18T15:57:02Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "depends/Makefile" : {
      "ObjectId" : "dedb0674cf14974702cefc520b4ad0da309a940b",
      "LastModified" : "2016-09-19T20:55:39Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "share/qt/protobuf.pri" : {
      "ObjectId" : "865fe865550ae21f2eec4bb7c8f8c1817bdf1bce",
      "LastModified" : "2013-08-22T06:18:25Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Based on: http://code.google.com/p/ostinato/source/browse/protobuf.pri\n\n#\n\n# Qt qmake integration with Google Protocol Buffers compiler protoc\n\n#\n\n# To compile protocol buffers with qt qmake, specify PROTOS variable and\n\n# include this file\n\n#\n\n# Example:\n\n# PROTOS = a.proto b.proto\n\n# include(protobuf.pri)\n\n#\n\n# Set PROTO_PATH if you need to set the protoc --proto_path search path\n\n# Set PROTOC to the path to the protoc compiler if it is not in your $PATH\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/Makefile.am" : {
      "ObjectId" : "3c0c0d46aeb5322ae8d24b9f79164a438b28e970",
      "LastModified" : "2018-11-30T12:42:03Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# NOTE: This dependency is not strictly necessary, but without it make may try to build both in parallel, which breaks the LevelDB build system in a race\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Make is not made aware of per-object dependencies to avoid limiting building parallelization\n\n# But to build the less dependent modules first, we manually select their order here:\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# bitcoin core #\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# server: shared between bitcoind and bitcoin-qt\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# wallet: shared between bitcoind and bitcoin-qt, but only linked\n\n# when wallet enabled\n",
        "Line" : 294,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# crypto primitives library\n",
        "Line" : 308,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# consensus: shared between all executables that validate any consensus rules.\n",
        "Line" : 326,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# common: shared between bitcoind, and bitcoin-qt and non-server tools\n",
        "Line" : 363,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# util: shared between all executables.\n\n# This library *must* be included to make sure that the glibc\n\n# backward-compatibility objects and their sanity checks are linked.\n",
        "Line" : 390,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# cli: shared between bitcoin-cli and bitcoin-qt\n",
        "Line" : 423,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\n",
        "Line" : 431,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# bitcoind binary #\n",
        "Line" : 433,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#\n",
        "Line" : 459,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# bitcoin-cli binary #\n",
        "Line" : 461,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#\n",
        "Line" : 478,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# bitcoin-tx binary #\n",
        "Line" : 480,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#\n",
        "Line" : 499,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# bitcoinconsensus library #\n",
        "Line" : 501,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#\n",
        "Line" : 516,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "src/leveldb/Makefile" : {
      "ObjectId" : "2bd2cadcddeb9ba912c241fed604f5d4d2136886",
      "LastModified" : "2014-10-25T09:39:56Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n\n# Use of this source code is governed by a BSD-style license that can be\n\n# found in the LICENSE file. See the AUTHORS file for names of contributors.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------\n\n# Uncomment exactly one of the lines labelled (A), (B), and (C) below\n\n# to switch between compilation modes.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# (A) Production use (optimized mode)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# (B) Debug mode, w/ full line-level debugging symbols\n\n# OPT ?= -g2\n\n# (C) Profiling mode: opt, but w/debugging symbols\n\n# OPT ?= -O2 -g2 -DNDEBUG\n\n#-----------------------------------------------\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# detect what platform we're building on\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# this file is generated by the previous line to set build flags and sources\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Note: iOS should probably be using libtool, not ar.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Should we build shared libraries?\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Update db.h if you change these.\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# PLATFORM_SHARED_EXT\n",
        "Line" : 98,
        "CharPositionInLine" : 7
      },
      "10" : {
        "Text" : "# For iOS, create universal object files to be used on both the simulator and\n\n# a device.\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "src/qt/Makefile" : {
      "ObjectId" : "b9dcf0c5992216013d27464202cc86d2e8c31c93",
      "LastModified" : "2014-10-25T09:39:56Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/qt/test/Makefile" : {
      "ObjectId" : "a02f86b62ac9b38ec85b266c6205b0485557e3a5",
      "LastModified" : "2014-10-25T09:39:56Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/secp256k1/Makefile.am" : {
      "ObjectId" : "c6503cd00e6c15198e606f3f2749c6980366487b",
      "LastModified" : "2018-06-09T23:09:56Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/test/Makefile" : {
      "ObjectId" : "87bf73fec98d99ed7421093bfde8528d3ced4ddb",
      "LastModified" : "2014-10-25T09:39:56Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/univalue/Makefile.am" : {
      "ObjectId" : "e283fc890e232dc5ce447678a294912ee222a93b",
      "LastModified" : "2018-06-09T23:09:56Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "QMAKE" : 2,
    "MAKEFILE" : 5,
    "AUTOMAKE" : 4
  },
  "ElapsedTime" : 8098
}