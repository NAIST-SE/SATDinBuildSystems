{
  "Repository" : "666435",
  "Revision" : "HEAD",
  "ObjectId" : "4a02aa3881a91e29fa90cadb16260371da726fba",
  "CommitTime" : "2015-03-13T20:20:04Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "551073155cfe3bd3674e049ac0421bc7e807a46f",
      "LastModified" : "2015-03-13T20:20:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add a target to generate API documentation with Doxygen\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#INSTALL_DIR ${${depname}_INSTALL_DIR}\n\n#CMAKE_ARGS ${${depname}_CMAKE_ARGS}\n",
        "Line" : 54,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 2
    },
    "cmake/android-toolchain.cmake" : {
      "ObjectId" : "838f9a2ee4d2f4f9fdd2d65888361bb1f7812f75",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2010-2011, Ethan Rublee\n\n# Copyright (c) 2011-2014, Andrey Kamaev\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# 1.  Redistributions of source code must retain the above copyright notice,\n\n#     this list of conditions and the following disclaimer.\n\n#\n\n# 2.  Redistributions in binary form must reproduce the above copyright notice,\n\n#     this list of conditions and the following disclaimer in the documentation\n\n#     and/or other materials provided with the distribution.\n\n#\n\n# 3.  Neither the name of the copyright holder nor the names of its\n\n#     contributors may be used to endorse or promote products derived from this\n\n#     software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ------------------------------------------------------------------------------\n\n#  Android CMake toolchain file, for use with the Android NDK r5-r9\n\n#  Requires cmake 2.6.3 or newer (2.8.5 or newer is recommended).\n\n#  See home page: https://github.com/taka-no-me/android-cmake\n\n#\n\n#  The file is mantained by the OpenCV project. The latest version can be get at\n\n#  http://code.opencv.org/projects/opencv/repository/revisions/master/changes/android/android.toolchain.cmake\n\n#\n\n#  Usage Linux:\n\n#   $ export ANDROID_NDK=/absolute/path/to/the/android-ndk\n\n#   $ mkdir build && cd build\n\n#   $ cmake -DCMAKE_TOOLCHAIN_FILE=path/to/the/android.toolchain.cmake ..\n\n#   $ make -j8\n\n#\n\n#  Usage Linux (using standalone toolchain):\n\n#   $ export ANDROID_STANDALONE_TOOLCHAIN=/absolute/path/to/android-toolchain\n\n#   $ mkdir build && cd build\n\n#   $ cmake -DCMAKE_TOOLCHAIN_FILE=path/to/the/android.toolchain.cmake ..\n\n#   $ make -j8\n\n#\n\n#  Usage Windows:\n\n#     You need native port of make to build your project.\n\n#     Android NDK r7 (or newer) already has make.exe on board.\n\n#     For older NDK you have to install it separately.\n\n#     For example, this one: http://gnuwin32.sourceforge.net/packages/make.htm\n\n#\n\n#   $ SET ANDROID_NDK=C:\\absolute\\path\\to\\the\\android-ndk\n\n#   $ mkdir build && cd build\n\n#   $ cmake.exe -G\"MinGW Makefiles\"\n\n#       -DCMAKE_TOOLCHAIN_FILE=path\\to\\the\\android.toolchain.cmake\n\n#       -DCMAKE_MAKE_PROGRAM=\"%ANDROID_NDK%\\prebuilt\\windows\\bin\\make.exe\" ..\n\n#   $ cmake.exe --build .\n\n#\n\n#\n\n#  Options (can be set as cmake parameters: -D<option_name>=<value>):\n\n#    ANDROID_NDK=/opt/android-ndk - path to the NDK root.\n\n#      Can be set as environment variable. Can be set only at first cmake run.\n\n#\n\n#    ANDROID_STANDALONE_TOOLCHAIN=/opt/android-toolchain - path to the\n\n#      standalone toolchain. This option is not used if full NDK is found\n\n#      (ignored if ANDROID_NDK is set).\n\n#      Can be set as environment variable. Can be set only at first cmake run.\n\n#\n\n#    ANDROID_ABI=armeabi-v7a - specifies the target Application Binary\n\n#      Interface (ABI). This option nearly matches to the APP_ABI variable\n\n#      used by ndk-build tool from Android NDK.\n\n#\n\n#      Possible targets are:\n\n#        \"armeabi\" - matches to the NDK ABI with the same name.\n\n#           See ${ANDROID_NDK}/docs/CPU-ARCH-ABIS.html for the documentation.\n\n#        \"armeabi-v7a\" - matches to the NDK ABI with the same name.\n\n#           See ${ANDROID_NDK}/docs/CPU-ARCH-ABIS.html for the documentation.\n\n#        \"armeabi-v7a with NEON\" - same as armeabi-v7a, but\n\n#            sets NEON as floating-point unit\n\n#        \"armeabi-v7a with VFPV3\" - same as armeabi-v7a, but\n\n#            sets VFPV3 as floating-point unit (has 32 registers instead of 16).\n\n#        \"armeabi-v6 with VFP\" - tuned for ARMv6 processors having VFP.\n\n#        \"x86\" - matches to the NDK ABI with the same name.\n\n#            See ${ANDROID_NDK}/docs/CPU-ARCH-ABIS.html for the documentation.\n\n#        \"mips\" - matches to the NDK ABI with the same name.\n\n#            See ${ANDROID_NDK}/docs/CPU-ARCH-ABIS.html for the documentation.\n\n#\n\n#    ANDROID_NATIVE_API_LEVEL=android-8 - level of Android API compile for.\n\n#      Option is read-only when standalone toolchain is used.\n\n#\n\n#    ANDROID_TOOLCHAIN_NAME=arm-linux-androideabi-4.6 - the name of compiler\n\n#      toolchain to be used. The list of possible values depends on the NDK\n\n#      version. For NDK r8c the possible values are:\n\n#\n\n#        * arm-linux-androideabi-4.4.3\n\n#        * arm-linux-androideabi-4.6\n\n#        * arm-linux-androideabi-clang3.1\n\n#        * mipsel-linux-android-4.4.3\n\n#        * mipsel-linux-android-4.6\n\n#        * mipsel-linux-android-clang3.1\n\n#        * x86-4.4.3\n\n#        * x86-4.6\n\n#        * x86-clang3.1\n\n#\n\n#    ANDROID_FORCE_ARM_BUILD=OFF - set ON to generate 32-bit ARM instructions\n\n#      instead of Thumb. Is not available for \"x86\" (inapplicable) and\n\n#      \"armeabi-v6 with VFP\" (is forced to be ON) ABIs.\n\n#\n\n#    ANDROID_NO_UNDEFINED=ON - set ON to show all undefined symbols as linker\n\n#      errors even if they are not used.\n\n#\n\n#    ANDROID_SO_UNDEFINED=OFF - set ON to allow undefined symbols in shared\n\n#      libraries. Automatically turned for NDK r5x and r6x due to GLESv2\n\n#      problems.\n\n#\n\n#    LIBRARY_OUTPUT_PATH_ROOT=${CMAKE_SOURCE_DIR} - where to output binary\n\n#      files. See additional details below.\n\n#\n\n#    ANDROID_SET_OBSOLETE_VARIABLES=ON - if set, then toolchain defines some\n\n#      obsolete variables which were used by previous versions of this file for\n\n#      backward compatibility.\n\n#\n\n#    ANDROID_STL=gnustl_static - specify the runtime to use.\n\n#\n\n#      Possible values are:\n\n#        none           -> Do not configure the runtime.\n\n#        system         -> Use the default minimal system C++ runtime library.\n\n#                          Implies -fno-rtti -fno-exceptions.\n\n#                          Is not available for standalone toolchain.\n\n#        system_re      -> Use the default minimal system C++ runtime library.\n\n#                          Implies -frtti -fexceptions.\n\n#                          Is not available for standalone toolchain.\n\n#        gabi++_static  -> Use the GAbi++ runtime as a static library.\n\n#                          Implies -frtti -fno-exceptions.\n\n#                          Available for NDK r7 and newer.\n\n#                          Is not available for standalone toolchain.\n\n#        gabi++_shared  -> Use the GAbi++ runtime as a shared library.\n\n#                          Implies -frtti -fno-exceptions.\n\n#                          Available for NDK r7 and newer.\n\n#                          Is not available for standalone toolchain.\n\n#        stlport_static -> Use the STLport runtime as a static library.\n\n#                          Implies -fno-rtti -fno-exceptions for NDK before r7.\n\n#                          Implies -frtti -fno-exceptions for NDK r7 and newer.\n\n#                          Is not available for standalone toolchain.\n\n#        stlport_shared -> Use the STLport runtime as a shared library.\n\n#                          Implies -fno-rtti -fno-exceptions for NDK before r7.\n\n#                          Implies -frtti -fno-exceptions for NDK r7 and newer.\n\n#                          Is not available for standalone toolchain.\n\n#        gnustl_static  -> Use the GNU STL as a static library.\n\n#                          Implies -frtti -fexceptions.\n\n#        gnustl_shared  -> Use the GNU STL as a shared library.\n\n#                          Implies -frtti -fno-exceptions.\n\n#                          Available for NDK r7b and newer.\n\n#                          Silently degrades to gnustl_static if not available.\n\n#\n\n#    ANDROID_STL_FORCE_FEATURES=ON - turn rtti and exceptions support based on\n\n#      chosen runtime. If disabled, then the user is responsible for settings\n\n#      these options.\n\n#\n\n#  What?:\n\n#    android-cmake toolchain searches for NDK/toolchain in the following order:\n\n#      ANDROID_NDK - cmake parameter\n\n#      ANDROID_NDK - environment variable\n\n#      ANDROID_STANDALONE_TOOLCHAIN - cmake parameter\n\n#      ANDROID_STANDALONE_TOOLCHAIN - environment variable\n\n#      ANDROID_NDK - default locations\n\n#      ANDROID_STANDALONE_TOOLCHAIN - default locations\n\n#\n\n#    Make sure to do the following in your scripts:\n\n#      SET( CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} ${my_cxx_flags}\" )\n\n#      SET( CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} ${my_cxx_flags}\" )\n\n#    The flags will be prepopulated with critical flags, so don't loose them.\n\n#    Also be aware that toolchain also sets configuration-specific compiler\n\n#    flags and linker flags.\n\n#\n\n#    ANDROID and BUILD_ANDROID will be set to true, you may test any of these\n\n#    variables to make necessary Android-specific configuration changes.\n\n#\n\n#    Also ARMEABI or ARMEABI_V7A or X86 or MIPS will be set true, mutually\n\n#    exclusive. NEON option will be set true if VFP is set to NEON.\n\n#\n\n#    LIBRARY_OUTPUT_PATH_ROOT should be set in cache to determine where Android\n\n#    libraries will be installed.\n\n#    Default is ${CMAKE_SOURCE_DIR}, and the android libs will always be\n\n#    under the ${LIBRARY_OUTPUT_PATH_ROOT}/libs/${ANDROID_NDK_ABI_NAME}\n\n#    (depending on the target ABI). This is convenient for Android packaging.\n\n#\n\n#  Change Log:\n\n#   - initial version December 2010\n\n#   - April 2011\n\n#     [+] added possibility to build with NDK (without standalone toolchain)\n\n#     [+] support cross-compilation on Windows (native, no cygwin support)\n\n#     [+] added compiler option to force \"char\" type to be signed\n\n#     [+] added toolchain option to compile to 32-bit ARM instructions\n\n#     [+] added toolchain option to disable SWIG search\n\n#     [+] added platform \"armeabi-v7a with VFPV3\"\n\n#     [~] ARM_TARGETS renamed to ARM_TARGET\n\n#     [+] EXECUTABLE_OUTPUT_PATH is set by toolchain (required on Windows)\n\n#     [~] Fixed bug with ANDROID_API_LEVEL variable\n\n#     [~] turn off SWIG search if it is not found first time\n\n#   - May 2011\n\n#     [~] ANDROID_LEVEL is renamed to ANDROID_API_LEVEL\n\n#     [+] ANDROID_API_LEVEL is detected by toolchain if not specified\n\n#     [~] added guard to prevent changing of output directories on the first\n\n#         cmake pass\n\n#     [~] toolchain exits with error if ARM_TARGET is not recognized\n\n#   - June 2011\n\n#     [~] default NDK path is updated for version r5c\n\n#     [+] variable CMAKE_SYSTEM_PROCESSOR is set based on ARM_TARGET\n\n#     [~] toolchain install directory is added to linker paths\n\n#     [-] removed SWIG-related stuff from toolchain\n\n#     [+] added macro find_host_package, find_host_program to search\n\n#         packages/programs on the host system\n\n#     [~] fixed path to STL library\n\n#   - July 2011\n\n#     [~] fixed options caching\n\n#     [~] search for all supported NDK versions\n\n#     [~] allowed spaces in NDK path\n\n#   - September 2011\n\n#     [~] updated for NDK r6b\n\n#   - November 2011\n\n#     [*] rewritten for NDK r7\n\n#     [+] x86 toolchain support (experimental)\n\n#     [+] added \"armeabi-v6 with VFP\" ABI for ARMv6 processors.\n\n#     [~] improved compiler and linker flags management\n\n#     [+] support different build flags for Release and Debug configurations\n\n#     [~] by default compiler flags the same as used by ndk-build (but only\n\n#         where reasonable)\n\n#     [~] ANDROID_NDK_TOOLCHAIN_ROOT is splitted to ANDROID_STANDALONE_TOOLCHAIN\n\n#         and ANDROID_TOOLCHAIN_ROOT\n\n#     [~] ARM_TARGET is renamed to ANDROID_ABI\n\n#     [~] ARMEABI_NDK_NAME is renamed to ANDROID_NDK_ABI_NAME\n\n#     [~] ANDROID_API_LEVEL is renamed to ANDROID_NATIVE_API_LEVEL\n\n#   - January 2012\n\n#     [+] added stlport_static support (experimental)\n\n#     [+] added special check for cygwin\n\n#     [+] filtered out hidden files (starting with .) while globbing inside NDK\n\n#     [+] automatically applied GLESv2 linkage fix for NDK revisions 5-6\n\n#     [+] added ANDROID_GET_ABI_RAWNAME to get NDK ABI names by CMake flags\n\n#   - February 2012\n\n#     [+] updated for NDK r7b\n\n#     [~] fixed cmake try_compile() command\n\n#     [~] Fix for missing install_name_tool on OS X\n\n#   - March 2012\n\n#     [~] fixed incorrect C compiler flags\n\n#     [~] fixed CMAKE_SYSTEM_PROCESSOR change on ANDROID_ABI change\n\n#     [+] improved toolchain loading speed\n\n#     [+] added assembler language support (.S)\n\n#     [+] allowed preset search paths and extra search suffixes\n\n#   - April 2012\n\n#     [+] updated for NDK r7c\n\n#     [~] fixed most of problems with compiler/linker flags and caching\n\n#     [+] added option ANDROID_FUNCTION_LEVEL_LINKING\n\n#   - May 2012\n\n#     [+] updated for NDK r8\n\n#     [+] added mips architecture support\n\n#   - August 2012\n\n#     [+] updated for NDK r8b\n\n#     [~] all intermediate files generated by toolchain are moved to CMakeFiles\n\n#     [~] libstdc++ and libsupc are removed from explicit link libraries\n\n#     [+] added CCache support (via NDK_CCACHE environment or cmake variable)\n\n#     [+] added gold linker support for NDK r8b\n\n#     [~] fixed mips linker flags for NDK r8b\n\n#   - September 2012\n\n#     [+] added NDK release name detection (see ANDROID_NDK_RELEASE)\n\n#     [+] added support for all C++ runtimes from NDK\n\n#         (system, gabi++, stlport, gnustl)\n\n#     [+] improved warnings on known issues of NDKs\n\n#     [~] use gold linker as default if available (NDK r8b)\n\n#     [~] globally turned off rpath\n\n#     [~] compiler options are aligned with NDK r8b\n\n#   - October 2012\n\n#     [~] fixed C++ linking: explicitly link with math library (OpenCV #2426)\n\n#   - November 2012\n\n#     [+] updated for NDK r8c\n\n#     [+] added support for clang compiler\n\n#   - December 2012\n\n#     [+] suppress warning about unused CMAKE_TOOLCHAIN_FILE variable\n\n#     [+] adjust API level to closest compatible as NDK does\n\n#     [~] fixed ccache full path search\n\n#     [+] updated for NDK r8d\n\n#     [~] compiler options are aligned with NDK r8d\n\n#   - March 2013\n\n#     [+] updated for NDK r8e (x86 version)\n\n#     [+] support x86_64 version of NDK\n\n#   - April 2013\n\n#     [+] support non-release NDK layouts (from Linaro git and Android git)\n\n#     [~] automatically detect if explicit link to crtbegin_*.o is needed\n\n#   - June 2013\n\n#     [~] fixed stl include path for standalone toolchain made by NDK >= r8c\n\n#   - July 2013\n\n#     [+] updated for NDK r9\n\n#   - November 2013\n\n#     [+] updated for NDK r9b\n\n#   - December 2013\n\n#     [+] updated for NDK r9c\n\n#   - January 2014\n\n#     [~] fix copying of shared STL\n\n#   - April 2014\n\n#     [+] updated for NDK r9d\n\n# ------------------------------------------------------------------------------\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# subsequent toolchain loading is not really needed\n",
        "Line" : 311,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# touch toolchain variable only to suppress \"unused variable\" warning\n",
        "Line" : 316,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# this one is important\n",
        "Line" : 324,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# this one not so much\n",
        "Line" : 326,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# rpath makes low sence for Android\n",
        "Line" : 329,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# fight against cygwin\n",
        "Line" : 460,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# remove cygwin from PATH\n",
        "Line" : 469,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# detect current host platform\n",
        "Line" : 478,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# see if we have path to Android NDK\n",
        "Line" : 503,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# see if we have path to Android standalone toolchain\n",
        "Line" : 507,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "#try to find Android NDK in one of the the default locations\n",
        "Line" : 511,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "#try to find Android standalone toolchain in one of the the default locations\n",
        "Line" : 525,
        "CharPositionInLine" : 3
      },
      "14" : {
        "Text" : "# remember found paths\n",
        "Line" : 536,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# try to detect change\n",
        "Line" : 550,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "# android NDK layout\n",
        "Line" : 574,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# try to automatically detect the layout\n",
        "Line" : 577,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# only 32-bit at the moment\n",
        "Line" : 589,
        "CharPositionInLine" : 71
      },
      "19" : {
        "Text" : "# only 32-bit at the moment\n",
        "Line" : 594,
        "CharPositionInLine" : 71
      },
      "20" : {
        "Text" : "# ANDROID_NDK_LAYOUT STREQUAL \"RELEASE\"\n",
        "Line" : 598,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "# try to detect change of NDK\n",
        "Line" : 605,
        "CharPositionInLine" : 1
      },
      "22" : {
        "Text" : "# get all the details about standalone toolchain\n",
        "Line" : 619,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# get all the details about NDK\n",
        "Line" : 672,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# do not go through all toolchains if we know the name\n",
        "Line" : 681,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# we need clang to go after gcc\n",
        "Line" : 694,
        "CharPositionInLine" : 39
      },
      "26" : {
        "Text" : "# build list of available ABIs\n",
        "Line" : 712,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# choose target ABI\n",
        "Line" : 725,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# verify that target ABI is supported\n",
        "Line" : 727,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# set target ABI options\n",
        "Line" : 737,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# need always fallback to older platform\n",
        "Line" : 766,
        "CharPositionInLine" : 1
      },
      "31" : {
        "Text" : "# really dirty hack\n\n# it is not possible to change CMAKE_SYSTEM_PROCESSOR after the first run...\n",
        "Line" : 797,
        "CharPositionInLine" : 1
      },
      "32" : {
        "Text" : "# choose toolchain\n",
        "Line" : 810,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# choose native API level\n",
        "Line" : 859,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# adjust API level\n",
        "Line" : 862,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# validate\n",
        "Line" : 874,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# remember target ABI\n",
        "Line" : 895,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# runtime choice (STL, rtti, exceptions)\n",
        "Line" : 903,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# honor legacy ANDROID_USE_STLPORT\n",
        "Line" : 905,
        "CharPositionInLine" : 1
      },
      "39" : {
        "Text" : "# setup paths and STL for standalone toolchain\n",
        "Line" : 980,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# old location ( pre r8c )\n",
        "Line" : 989,
        "CharPositionInLine" : 3
      },
      "41" : {
        "Text" : "# always search static GNU STL to get the location of libsupc++.a\n",
        "Line" : 999,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "# clang\n",
        "Line" : 1034,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# setup paths and STL for NDK\n",
        "Line" : 1058,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# do nothing\n",
        "Line" : 1064,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "# gnustl binary for 4.7 compiler is buggy :(\n\n# TODO: look for right fix\n",
        "Line" : 1099,
        "CharPositionInLine" : 4
      },
      "46" : {
        "Text" : "# find libsupc++.a - rtti & exceptions\n",
        "Line" : 1117,
        "CharPositionInLine" : 1
      },
      "47" : {
        "Text" : "# r8b or newer\n",
        "Line" : 1119,
        "CharPositionInLine" : 137
      },
      "48" : {
        "Text" : "# r7-r8\n",
        "Line" : 1121,
        "CharPositionInLine" : 110
      },
      "49" : {
        "Text" : "# before r7\n",
        "Line" : 1123,
        "CharPositionInLine" : 36
      },
      "50" : {
        "Text" : "# case of shared STL linkage\n",
        "Line" : 1143,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# TODO: check if .so file exists before the renaming\n",
        "Line" : 1146,
        "CharPositionInLine" : 1
      },
      "52" : {
        "Text" : "# ccache support\n",
        "Line" : 1150,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# setup the cross-compiler\n",
        "Line" : 1163,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# Force set compilers because standard identification works badly for us\n",
        "Line" : 1206,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# force ASM compiler (required for CMake < 2.8.5)\n",
        "Line" : 1225,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# flags and definitions\n",
        "Line" : 1233,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# try to convert path to 8.3 form\n",
        "Line" : 1239,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# quotes can break try_compile and compiler identification\n",
        "Line" : 1254,
        "CharPositionInLine" : 2
      },
      "59" : {
        "Text" : "# NDK flags\n",
        "Line" : 1261,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# always compile ARMEABI_V6 in arm mode; otherwise there is no difference from ARMEABI\n",
        "Line" : 1271,
        "CharPositionInLine" : 2
      },
      "61" : {
        "Text" : "# good/necessary when porting desktop libraries\n",
        "Line" : 1300,
        "CharPositionInLine" : 62
      },
      "62" : {
        "Text" : "# see https://android-review.googlesource.com/#/c/47564/\n",
        "Line" : 1307,
        "CharPositionInLine" : 72
      },
      "63" : {
        "Text" : "# ABI-specific flags\n",
        "Line" : 1310,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# vfp == vfpv2\n",
        "Line" : 1321,
        "CharPositionInLine" : 91
      },
      "65" : {
        "Text" : "# STL\n",
        "Line" : 1336,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# C objects:\n",
        "Line" : 1347,
        "CharPositionInLine" : 2
      },
      "67" : {
        "Text" : "# variables controlling optional build flags\n",
        "Line" : 1365,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# libGLESv2.so in NDK's prior to r7 refers to missing external symbols.\n\n# So this flag option is required for all projects using OpenGL from native.\n",
        "Line" : 1367,
        "CharPositionInLine" : 1
      },
      "69" : {
        "Text" : "# linker flags\n",
        "Line" : 1387,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# this is *required* to use the following linker flags that routes around\n\n# a CPU bug in some Cortex-A8 implementations:\n",
        "Line" : 1391,
        "CharPositionInLine" : 1
      },
      "71" : {
        "Text" : "# there is some sysroot-related problem in mips linker...\n",
        "Line" : 1398,
        "CharPositionInLine" : 2
      },
      "72" : {
        "Text" : "# version 4.6\n",
        "Line" : 1427,
        "CharPositionInLine" : 8
      },
      "73" : {
        "Text" : "# cache flags\n",
        "Line" : 1455,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# put flags to cache (for debug purpose only)\n",
        "Line" : 1466,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# finish flags\n",
        "Line" : 1472,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# configure rtti\n",
        "Line" : 1489,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# configure exceptios\n",
        "Line" : 1498,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# global includes and link directories\n",
        "Line" : 1509,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# avoid CMP0015 policy warning\n",
        "Line" : 1512,
        "CharPositionInLine" : 111
      },
      "80" : {
        "Text" : "# detect if need link crtbegin_so.o explicitly\n",
        "Line" : 1515,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# setup output directories\n",
        "Line" : 1552,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "# copy shaed stl library to build directory\n",
        "Line" : 1565,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# set these global flags for cmake client scripts to change behavior\n",
        "Line" : 1577,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# where is the target environment\n",
        "Line" : 1581,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# only search for libraries and includes in the ndk toolchain\n",
        "Line" : 1584,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# macro to find packages on the host OS\n",
        "Line" : 1590,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "# macro to find programs on the host OS\n",
        "Line" : 1612,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "# export toolchain settings for the try_compile() command\n",
        "Line" : 1649,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# force cmake to produce / instead of \\ in build commands for Ninja generator\n",
        "Line" : 1685,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "# it is a bad hack after all\n\n# CMake generates Ninja makefiles with UNIX paths only if it thinks that we are going to build with MinGW\n",
        "Line" : 1687,
        "CharPositionInLine" : 1
      },
      "91" : {
        "Text" : "# tell CMake that we are MinGW\n\n# stop recursion\n",
        "Line" : 1689,
        "CharPositionInLine" : 37
      },
      "92" : {
        "Text" : "# unset( CMAKE_COMPILER_IS_MINGW ) # can't unset because CMake does not convert back-slashes in response files without it\n",
        "Line" : 1693,
        "CharPositionInLine" : 1
      },
      "93" : {
        "Text" : "# set some obsolete variables for backward compatibility\n",
        "Line" : 1698,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "# Variables controlling behavior or set by cmake toolchain:\n\n#   ANDROID_ABI : \"armeabi-v7a\" (default), \"armeabi\", \"armeabi-v7a with NEON\", \"armeabi-v7a with VFPV3\", \"armeabi-v6 with VFP\", \"x86\", \"mips\"\n\n#   ANDROID_NATIVE_API_LEVEL : 3,4,5,8,9,14 (depends on NDK version)\n\n#   ANDROID_STL : gnustl_static/gnustl_shared/stlport_static/stlport_shared/gabi++_static/gabi++_shared/system_re/system/none\n\n#   ANDROID_FORBID_SYGWIN : ON/OFF\n\n#   ANDROID_NO_UNDEFINED : ON/OFF\n\n#   ANDROID_SO_UNDEFINED : OFF/ON  (default depends on NDK version)\n\n#   ANDROID_FUNCTION_LEVEL_LINKING : ON/OFF\n\n#   ANDROID_GOLD_LINKER : ON/OFF\n\n#   ANDROID_NOEXECSTACK : ON/OFF\n\n#   ANDROID_RELRO : ON/OFF\n\n#   ANDROID_FORCE_ARM_BUILD : ON/OFF\n\n#   ANDROID_STL_FORCE_FEATURES : ON/OFF\n\n#   ANDROID_SET_OBSOLETE_VARIABLES : ON/OFF\n\n# Can be set only at the first run:\n\n#   ANDROID_NDK\n\n#   ANDROID_STANDALONE_TOOLCHAIN\n\n#   ANDROID_TOOLCHAIN_NAME : the NDK name of compiler toolchain\n\n#   ANDROID_NDK_HOST_X64 : try to use x86_64 toolchain (default for x64 host systems)\n\n#   ANDROID_NDK_LAYOUT : the inner NDK structure (RELEASE, LINARO, ANDROID)\n\n#   LIBRARY_OUTPUT_PATH_ROOT : <any valid path>\n\n#   NDK_CCACHE : <path to your ccache executable>\n\n# Obsolete:\n\n#   ANDROID_API_LEVEL : superseded by ANDROID_NATIVE_API_LEVEL\n\n#   ARM_TARGET : superseded by ANDROID_ABI\n\n#   ARM_TARGETS : superseded by ANDROID_ABI (can be set only)\n\n#   ANDROID_NDK_TOOLCHAIN_ROOT : superseded by ANDROID_STANDALONE_TOOLCHAIN (can be set only)\n\n#   ANDROID_USE_STLPORT : superseded by ANDROID_STL=stlport_static\n\n#   ANDROID_LEVEL : superseded by ANDROID_NATIVE_API_LEVEL (completely removed)\n\n#\n\n# Primary read-only variables:\n\n#   ANDROID : always TRUE\n\n#   ARMEABI : TRUE for arm v6 and older devices\n\n#   ARMEABI_V6 : TRUE for arm v6\n\n#   ARMEABI_V7A : TRUE for arm v7a\n\n#   NEON : TRUE if NEON unit is enabled\n\n#   VFPV3 : TRUE if VFP version 3 is enabled\n\n#   X86 : TRUE if configured for x86\n\n#   MIPS : TRUE if configured for mips\n\n#   BUILD_ANDROID : always TRUE\n\n#   BUILD_WITH_ANDROID_NDK : TRUE if NDK is used\n\n#   BUILD_WITH_STANDALONE_TOOLCHAIN : TRUE if standalone toolchain is used\n\n#   ANDROID_NDK_HOST_SYSTEM_NAME : \"windows\", \"linux-x86\" or \"darwin-x86\" depending on host platform\n\n#   ANDROID_NDK_ABI_NAME : \"armeabi\", \"armeabi-v7a\", \"x86\" or \"mips\" depending on ANDROID_ABI\n\n#   ANDROID_NDK_RELEASE : one of r5, r5b, r5c, r6, r6b, r7, r7b, r7c, r8, r8b, r8c, r8d, r8e, r9, r9b, r9c, r9d; set only for NDK\n\n#   ANDROID_ARCH_NAME : \"arm\" or \"x86\" or \"mips\" depending on ANDROID_ABI\n\n#   ANDROID_SYSROOT : path to the compiler sysroot\n\n#   TOOL_OS_SUFFIX : \"\" or \".exe\" depending on host platform\n\n#   ANDROID_COMPILER_IS_CLANG : TRUE if clang compiler is used\n\n# Obsolete:\n\n#   ARMEABI_NDK_NAME : superseded by ANDROID_NDK_ABI_NAME\n\n#\n\n# Secondary (less stable) read-only variables:\n\n#   ANDROID_COMPILER_VERSION : GCC version used\n\n#   ANDROID_CXX_FLAGS : C/C++ compiler flags required by Android platform\n\n#   ANDROID_SUPPORTED_ABIS : list of currently allowed values for ANDROID_ABI\n\n#   ANDROID_TOOLCHAIN_MACHINE_NAME : \"arm-linux-androideabi\", \"arm-eabi\" or \"i686-android-linux\"\n\n#   ANDROID_TOOLCHAIN_ROOT : path to the top level of toolchain (standalone or placed inside NDK)\n\n#   ANDROID_CLANG_TOOLCHAIN_ROOT : path to clang tools\n\n#   ANDROID_SUPPORTED_NATIVE_API_LEVELS : list of native API levels found inside NDK\n\n#   ANDROID_STL_INCLUDE_DIRS : stl include paths\n\n#   ANDROID_RTTI : if rtti is enabled by the runtime\n\n#   ANDROID_EXCEPTIONS : if exceptions are enabled by the runtime\n\n#   ANDROID_GCC_TOOLCHAIN_NAME : read-only, differs from ANDROID_TOOLCHAIN_NAME only if clang is used\n\n#   ANDROID_CLANG_VERSION : version of clang compiler if clang is used\n\n#   ANDROID_LIBM_PATH : path to libm.so (set to something like $(TOP)/out/target/product/<product_name>/obj/lib/libm.so) to workaround unresolved `sincos`\n\n#\n\n# Defaults:\n\n#   ANDROID_DEFAULT_NDK_API_LEVEL\n\n#   ANDROID_DEFAULT_NDK_API_LEVEL_${ARCH}\n\n#   ANDROID_NDK_SEARCH_PATHS\n\n#   ANDROID_STANDALONE_TOOLCHAIN_SEARCH_PATH\n\n#   ANDROID_SUPPORTED_ABIS_${ARCH}\n\n#   ANDROID_SUPPORTED_NDK_VERSIONS\n",
        "Line" : 1708,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 95
    },
    "cmake/kinevox.cmake" : {
      "ObjectId" : "aed735c8673656790c419421f95ca93acbc60a75",
      "LastModified" : "2015-02-17T15:44:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n#recurse to find  .cmake files\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#message(${projName} ${DEP_LIBS})\n",
        "Line" : 25,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "#message(\"Adding: \" ${d})\n",
        "Line" : 43,
        "CharPositionInLine" : 5
      },
      "4" : {
        "Text" : "#SET(DEP_LIBS ${DEP_LIBS} ${${dep}_LIBS})\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# create custom target that depends on the real target so it gets executed afterwards\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# 1. generate essential Android Makefiles\n",
        "Line" : 66,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# 2. generate gdb.setup\n",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# 3. copy gdbserver executable\n",
        "Line" : 78,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# 4. copy lib to obj\n",
        "Line" : 81,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# 5. strip symbols\n",
        "Line" : 85,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "#SET(ANDROID_PLATFORM android-$(ANDROID_NATIVE_API_LEVEL))\n",
        "Line" : 101,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "#\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "cmake/kinevoxconf.cmake" : {
      "ObjectId" : "42e61d3ca618e799ea652d85601c5f2a8d1e086f",
      "LastModified" : "2015-03-13T20:20:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#conversion double to float\n\n#conversion double to float\n",
        "Line" : 82,
        "CharPositionInLine" : 57
      },
      "1" : {
        "Text" : "#disable warning about constant condition for asserts\n",
        "Line" : 85,
        "CharPositionInLine" : 54
      },
      "2" : {
        "Text" : "#unreachable code for template in vertex buffer\n",
        "Line" : 86,
        "CharPositionInLine" : 53
      },
      "3" : {
        "Text" : "#http://clang.llvm.org/docs/AddressSanitizer.html\n",
        "Line" : 101,
        "CharPositionInLine" : 7
      },
      "4" : {
        "Text" : "#SET(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS}  -fsanitize=thread\")\n\n#SET(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS}  -fsanitize=memory\")\n",
        "Line" : 107,
        "CharPositionInLine" : 7
      },
      "5" : {
        "Text" : "#SET(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS}  -fsanitize=dataflow\")\n",
        "Line" : 111,
        "CharPositionInLine" : 7
      },
      "CommentCount" : 6
    },
    "cmake/pipeline/Archetype.cmake" : {
      "ObjectId" : "282e821192579815d3be29186bcbb16924f56e7c",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/pipeline/Conf.cmake" : {
      "ObjectId" : "4e2f2ed80499b80a2a6a98e7226bb87218f7729d",
      "LastModified" : "2013-04-13T02:19:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/pipeline/DLL.cmake" : {
      "ObjectId" : "9a3b1402d284ed031a1a007efcfd3d15272111f5",
      "LastModified" : "2013-04-28T02:04:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/pipeline/Font.cmake" : {
      "ObjectId" : "14b6c36f8cd510eb9447372c3c772eea8ad474a1",
      "LastModified" : "2013-04-28T02:04:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/pipeline/GLSL.cmake" : {
      "ObjectId" : "7254669aeb1fe66f8bcec516a907772e542fbb95",
      "LastModified" : "2013-07-14T17:49:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/pipeline/Material.cmake" : {
      "ObjectId" : "74855a8060d42645d3023061322d1fef330f8bfe",
      "LastModified" : "2013-04-28T02:04:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/pipeline/Mesh.cmake" : {
      "ObjectId" : "14345318220fbc55edcc03fe8b1e31b15357ad33",
      "LastModified" : "2014-09-06T20:29:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_custom_target(MeshBuilder  DEPENDS ${DstFiles})\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/pipeline/Music.cmake" : {
      "ObjectId" : "52e95ed8ff23f811941a7dc32b1e1f51564a17ff",
      "LastModified" : "2014-07-30T19:19:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#message(${LAME_EXE} --decode ${src} | ${OGGENC_EXE} -o ${DstFile})\n",
        "Line" : 12,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "#add_custom_target(MeshBuilder  DEPENDS ${DstFiles})\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/pipeline/RLSL.cmake" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2013-04-28T02:04:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/pipeline/Script.cmake" : {
      "ObjectId" : "ec64890c4a8a70a76daae5bbed41f50de19e58d1",
      "LastModified" : "2014-11-15T17:06:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/pipeline/Sound.cmake" : {
      "ObjectId" : "ca67e9b6c9a2326fa1b62a2b5bfe19d06245b0ec",
      "LastModified" : "2013-04-28T02:04:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/pipeline/Sprite.cmake" : {
      "ObjectId" : "c3c94c26d1f317a3cdbdb647e7578602a51f7a1c",
      "LastModified" : "2013-07-08T05:27:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/pipeline/Texture.cmake" : {
      "ObjectId" : "6eb0ca8ccd4029e22136d4525bd0fe4284ff129d",
      "LastModified" : "2013-04-28T02:04:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#message(\"Texture: \" ${src} \" to \" ${DstFile})\n",
        "Line" : 9,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "cmake/pipeline/World.cmake" : {
      "ObjectId" : "91a8295c322db7587f6ae0072c8f1a3defa3e79f",
      "LastModified" : "2014-11-15T17:06:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/applayer/CMakeLists.txt" : {
      "ObjectId" : "1c26b1db135065fdbca87d3b7285e755ef4b910c",
      "LastModified" : "2014-11-15T17:06:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#message(\"pos: \" ${f})\n",
        "Line" : 12,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 1
    },
    "lib/applayer/cmake/Findapplayer.cmake" : {
      "ObjectId" : "f42afb65f11c95e8bb501cf8873d67a92cd6459e",
      "LastModified" : "2014-11-15T17:06:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#SET(applayer_LIBS applayer ${DEP_LIBS} )\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/applayer/cmake/applayerdep.cmake" : {
      "ObjectId" : "cb10a350bc41d6f245b34df490cb2b784dde548a",
      "LastModified" : "2014-11-15T17:06:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/applayer/unittest/CMakeLists.txt" : {
      "ObjectId" : "305f5888fe06c71f9ab623e27c5c383bed8cf833",
      "LastModified" : "2013-04-28T02:04:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/applayer/unittest/cmake/test_applayerdep.cmake" : {
      "ObjectId" : "2e1e08193900458e30d81e5dda2a86c054c29000",
      "LastModified" : "2013-04-28T02:04:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/input/CMakeLists.txt" : {
      "ObjectId" : "87c5b0ecd966852ae9994c8fb53d7be4cb19eae3",
      "LastModified" : "2014-11-15T17:06:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/input/cmake/Findinput.cmake" : {
      "ObjectId" : "5b40f599575c293e0cbeb608a339e97108f8b3a3",
      "LastModified" : "2014-11-15T17:06:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#SET(input_LIBS input ${DEP_LIBS} )\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/input/cmake/inputdep.cmake" : {
      "ObjectId" : "3d7c694f5c30ffeb1580f5d9cb8c4682718d3820",
      "LastModified" : "2013-04-28T02:04:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/input/unittest/CMakeLists.txt" : {
      "ObjectId" : "5f3642aeca2f138466c393184e2b44214f97d3d2",
      "LastModified" : "2013-04-28T02:04:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/input/unittest/cmake/test_inputdep.cmake" : {
      "ObjectId" : "333dd41405ddd156520602d35d883f16819a91fd",
      "LastModified" : "2013-04-28T02:04:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/kinetestlib/CMakeLists.txt" : {
      "ObjectId" : "91bd65054fc64486fe379bc0e1c735824d49ac8d",
      "LastModified" : "2014-11-15T17:06:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/kinetestlib/cmake/Findkinetestlib.cmake" : {
      "ObjectId" : "0be7dba7b19536306243df4d64f83adea2b327ee",
      "LastModified" : "2014-11-15T17:06:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#SET(kinetestlib_LIBS kinetestlib ${DEP_LIBS} )\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/kinetestlib/cmake/kinetestlibdep.cmake" : {
      "ObjectId" : "0238aaf419ca15a19854bf8dfa50401a76975bdf",
      "LastModified" : "2014-11-15T17:06:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/kinetestlib/unittest/CMakeLists.txt" : {
      "ObjectId" : "abac3c3ade08f380a40b93f7c26645641aa0b838",
      "LastModified" : "2013-04-28T02:04:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/kinetestlib/unittest/cmake/test_kinetestlibdep.cmake" : {
      "ObjectId" : "a44e5334103134a5c54122c854ae3c6dad2510c2",
      "LastModified" : "2013-04-28T02:04:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/physics/CMakeLists.txt" : {
      "ObjectId" : "a093bad0d5ee752911b01d508079302907c7506e",
      "LastModified" : "2014-11-15T17:06:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/physics/cmake/Findphysics.cmake" : {
      "ObjectId" : "c6a75eeed6d4ab69d7c93e4aede3487e4c1e1fb9",
      "LastModified" : "2014-11-15T17:06:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/physics/cmake/physicsdep.cmake" : {
      "ObjectId" : "a9ec1cc4379a280fa1a2fee4bc6d7a4f7be67035",
      "LastModified" : "2014-11-15T17:06:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/physics/unittest/CMakeLists.txt" : {
      "ObjectId" : "e0e1b216f28e1663fe253004b12b3b89053d5eb9",
      "LastModified" : "2014-11-15T17:06:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/physics/unittest/cmake/test_physicsdep.cmake" : {
      "ObjectId" : "bbe33122958ff825611ac0dc1b3c07aaeb9be3df",
      "LastModified" : "2014-11-15T17:06:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/renderer/CMakeLists.txt" : {
      "ObjectId" : "32bd7ab583a6d2f092d20cb42dd4719cac5fed61",
      "LastModified" : "2014-11-15T17:06:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#message(\"GFX: \" ${fileName})\n",
        "Line" : 21,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "lib/renderer/cmake/Findrenderer.cmake" : {
      "ObjectId" : "3cf2902da48facd4e890d487a8c5b976babea0ce",
      "LastModified" : "2014-11-15T17:06:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#SET(renderer_LIBS renderer ${DEP_LIBS} ${glew_LIBS})\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/renderer/cmake/rendererdep.cmake" : {
      "ObjectId" : "bb721b760b24b05a060b1936f4e27d74171c48a3",
      "LastModified" : "2014-11-15T17:06:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/renderer/unittest/CMakeLists.txt" : {
      "ObjectId" : "3407415a4f0fce2d1d95a150a5270a7960e3e6f9",
      "LastModified" : "2014-11-15T17:06:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/renderer/unittest/cmake/test_rendererdep.cmake" : {
      "ObjectId" : "1beec65eea3452c6f5997eebd135e0b0cba1532b",
      "LastModified" : "2015-02-17T17:39:08Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/script/CMakeLists.txt" : {
      "ObjectId" : "a5d9e344c8ce93c8413a50fed5cd31c21b0bb365",
      "LastModified" : "2015-03-13T20:20:04Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/script/cmake/Findscript.cmake" : {
      "ObjectId" : "14e1516228ab30892c68513642009ad4e35dcaf6",
      "LastModified" : "2015-03-13T20:20:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#SET(script_LIBS script ${DEP_LIBS} )\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/script/cmake/scriptdep.cmake" : {
      "ObjectId" : "f0c06b2754c9fa9553ecb44c2c89ffffd0f7c9b9",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/script/lua-5.3.0/Makefile" : {
      "ObjectId" : "7fa91c858bb1e5a832a07e06f2635324858582eb",
      "LastModified" : "2015-03-13T20:20:04Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for installing Lua\n\n# See doc/readme.html for installation and customization instructions.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# == CHANGE THE SETTINGS BELOW TO SUIT YOUR ENVIRONMENT =======================\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Your platform. See PLATS for possible values.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Where to install. The installation starts in the src and doc directories,\n\n# so take care if INSTALL_TOP is not an absolute path. See the local target.\n\n# You may want to make INSTALL_LMOD and INSTALL_CMOD consistent with\n\n# LUA_ROOT, LUA_LDIR, and LUA_CDIR in luaconf.h.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# How to install. If your install program does not support \"-p\", then\n\n# you may have to run ranlib on the installed liblua.a.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# If you don't have \"install\" you can use \"cp\" instead.\n\n# INSTALL= cp -p\n\n# INSTALL_EXEC= $(INSTALL)\n\n# INSTALL_DATA= $(INSTALL)\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Other utilities.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# == END OF USER SETTINGS -- NO NEED TO CHANGE ANYTHING BELOW THIS LINE =======\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Convenience platforms targets.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# What to install.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Lua version and release.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Targets start here.\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# make may get confused with test/ and install/\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# echo config parameters\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# echo pkg-config data\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# list targets that do not create files (but not all makes understand .PHONY)\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# (end of Makefile)\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "lib/script/lua-5.3.0/src/Makefile" : {
      "ObjectId" : "2e7a4120cef20aa052d6968aae87b783b789f407",
      "LastModified" : "2015-03-13T20:20:04Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for building Lua\n\n# See ../doc/readme.html for installation and customization instructions.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# == CHANGE THE SETTINGS BELOW TO SUIT YOUR ENVIRONMENT =======================\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Your platform. See PLATS for possible values.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# == END OF USER SETTINGS -- NO NEED TO CHANGE ANYTHING BELOW THIS LINE =======\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Targets start here.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Convenience targets for popular platforms\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# list targets that do not create files (but not all makes understand .PHONY)\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# DO NOT DELETE\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# (end of Makefile)\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "lib/script/unittest/CMakeLists.txt" : {
      "ObjectId" : "aba6f2961a1f93d82df2e461f55b34b2aa941498",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/script/unittest/cmake/test_scriptdep.cmake" : {
      "ObjectId" : "3fdda2148fff080e8c97804f017e752c8f30a3c3",
      "LastModified" : "2014-11-15T17:06:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/sound/CMakeLists.txt" : {
      "ObjectId" : "99411f0e65fe45925e3f66a6802ee6ada39d5b02",
      "LastModified" : "2014-11-15T17:06:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/sound/cmake/Findsound.cmake" : {
      "ObjectId" : "49a76fb4f420270f2f0f150188d5365224ce19ad",
      "LastModified" : "2014-11-15T17:06:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#SET(sound_LIBS sound ${DEP_LIBS} )\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/sound/cmake/sounddep.cmake" : {
      "ObjectId" : "b02fbc344745a28149db4dfa0abe6485383b628b",
      "LastModified" : "2014-11-15T17:06:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/sound/unittest/CMakeLists.txt" : {
      "ObjectId" : "7e297542821a480d82013b8f143accf509f4f1b8",
      "LastModified" : "2014-11-15T17:06:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/sound/unittest/cmake/test_sounddep.cmake" : {
      "ObjectId" : "9760398d2809572eec1e57ad6af1998021d12656",
      "LastModified" : "2014-11-15T17:06:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/windriver/CMakeLists.txt" : {
      "ObjectId" : "1fbe9c6e125cc99c3c3d52724e7399062b7b4e2a",
      "LastModified" : "2014-11-15T17:06:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/windriver/cmake/Findwindriver.cmake" : {
      "ObjectId" : "8a72ba0973244e779eee49b514018a9a25495a12",
      "LastModified" : "2014-11-15T17:06:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/windriver/cmake/windriverdep.cmake" : {
      "ObjectId" : "0964b07c187cc0f533c4f227446a6b31aedd3f91",
      "LastModified" : "2014-11-15T17:06:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/windriver/unittest/CMakeLists.txt" : {
      "ObjectId" : "442ffb57b009f53871b05d4a3479521c9ab45198",
      "LastModified" : "2014-11-15T17:06:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/windriver/unittest/cmake/test_windriverdep.cmake" : {
      "ObjectId" : "054e35ea5c433a96ec4446ac9d81e411fcb9f113",
      "LastModified" : "2014-11-15T17:06:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "program/arkanoid_component/CMakeLists.txt" : {
      "ObjectId" : "e17c82958a6f1acefb001f74508a651c4c4d0fa0",
      "LastModified" : "2014-11-15T17:06:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "program/arkanoid_component/cmake/arkanoidcompdep.cmake" : {
      "ObjectId" : "27e89993895e576b0b9e198d1059dd23516f7e02",
      "LastModified" : "2014-11-15T17:06:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "program/crashcar/CMakeLists.txt" : {
      "ObjectId" : "d580cde8ac0b3e3c4002240a64ca65a267cb6083",
      "LastModified" : "2014-11-15T17:06:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "program/crashcar/cmake/crashcardep.cmake" : {
      "ObjectId" : "27e89993895e576b0b9e198d1059dd23516f7e02",
      "LastModified" : "2014-11-15T17:06:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "program/example/actor/CMakeLists.txt" : {
      "ObjectId" : "8e681260abe198699bcaafe711dfcb4bcc995599",
      "LastModified" : "2014-11-15T17:06:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "program/example/actor/cmake/actordep.cmake" : {
      "ObjectId" : "27e89993895e576b0b9e198d1059dd23516f7e02",
      "LastModified" : "2015-02-17T17:39:08Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "program/example/spriteExample/CMakeLists.txt" : {
      "ObjectId" : "57f88ed9a9295dcb3ad3ccf4a12dee8847183bf9",
      "LastModified" : "2014-11-15T17:06:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "program/example/spriteExample/cmake/sprite_exampledep.cmake" : {
      "ObjectId" : "b4286c83a0cd1954b9436cd406f8b4d46c92eec9",
      "LastModified" : "2014-11-15T17:06:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "program/example/world/CMakeLists.txt" : {
      "ObjectId" : "6a58091d6f74d0b925e82941462eb2df1b227767",
      "LastModified" : "2014-11-15T17:06:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "program/example/world/cmake/worlddep.cmake" : {
      "ObjectId" : "b4286c83a0cd1954b9436cd406f8b4d46c92eec9",
      "LastModified" : "2014-11-15T17:06:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/CMakeLists.txt" : {
      "ObjectId" : "38831afa1f1ff3f2e30bc861669488a131f425b1",
      "LastModified" : "2014-11-15T17:06:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/common/CMakeLists.txt" : {
      "ObjectId" : "1163c1aa16859eba1e6b02be9760a187f75083fd",
      "LastModified" : "2014-11-15T17:06:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/common/cmake/Findcommon.cmake" : {
      "ObjectId" : "1ef159ca292f95330b53d648079ff279b34b548e",
      "LastModified" : "2014-11-15T17:06:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#SET(common_LIBS common ${DEP_LIBS} )\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tools/common/cmake/commondep.cmake" : {
      "ObjectId" : "6e0b7c82202e7b95a942ea464b3f366d860030d1",
      "LastModified" : "2014-11-15T17:06:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/common/unittest/CMakeLists.txt" : {
      "ObjectId" : "112d87da64a40e57ee261dda25c15f7e4d54ed4e",
      "LastModified" : "2014-11-15T17:06:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/common/unittest/cmake/test_commondep.cmake" : {
      "ObjectId" : "a57ab24f916e4f34b04c44b1df0300fa01ada84e",
      "LastModified" : "2014-11-15T17:06:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/meshconverter/CMakeLists.txt" : {
      "ObjectId" : "2f0fede2d0ba7fe824a8ca665dbdbc848c76a6ef",
      "LastModified" : "2014-11-15T17:06:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/meshconverter/cmake/meshconverterdep.cmake" : {
      "ObjectId" : "a57ab24f916e4f34b04c44b1df0300fa01ada84e",
      "LastModified" : "2014-11-15T17:06:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/worldconverter/CMakeLists.txt" : {
      "ObjectId" : "244071fd3e15c9de4dcad9875cd3ba25ac050d3a",
      "LastModified" : "2014-11-15T17:06:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/worldconverter/cmake/worldconverterdep.cmake" : {
      "ObjectId" : "a57ab24f916e4f34b04c44b1df0300fa01ada84e",
      "LastModified" : "2014-11-15T17:06:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 78,
    "MAKEFILE" : 2
  },
  "ElapsedTime" : 1951
}