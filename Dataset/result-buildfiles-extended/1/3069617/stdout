{
  "Repository" : "3069617",
  "Revision" : "HEAD",
  "ObjectId" : "e876e86d09099e6f8a55d40c3db0ad4550c29c69",
  "CommitTime" : "2019-01-26T14:57:55Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "126322ce05e29c8480208cd8dbd5970958d2df99",
      "LastModified" : "2019-01-24T18:02:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#------------------------------------------------------------------------------\n\n#                                 Fifengine                                          \n\n#------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#------------------------------------------------------------------------------\n\n#                                 Version                                          \n\n#------------------------------------------------------------------------------\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# check if \"git\" is installed\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# get git commit hash, if source folder is a git repository\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# not a git repo, possibly a source download\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#------------------------------------------------------------------------------\n\n#                                 Options                                          \n\n#------------------------------------------------------------------------------\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#------------------------------------------------------------------------------\n\n#                                 Configure                                          \n\n#------------------------------------------------------------------------------\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# set path to our custom CMAKE scripts\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Create a \"Release\" build by default.\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# if building a C++ library is enabled, then build a shared library by default\n\n# if you need a static library, set \"-Dbuild-library=ON -DBUILD_SHARED_LIBS=OFF\"\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Do not allow an in-source-tree build, request an out-of-source-tree build.\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Disable in-source builds and modifications to the source tree.\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# organize targets into folders\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#------------------------------------------------------------------------------\n\n#                                 Compiler Options                                         \n\n#------------------------------------------------------------------------------\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# MSVC compiler options\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# build on all cores\n",
        "Line" : 107,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# warning level: /W<level 0 to 4> or /Wall\n",
        "Line" : 113,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# ensure we use minimal \"windows.h\" lib without the crazy min max macros    \n",
        "Line" : 117,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# avoid \"C1128: number of sections exceeded object file format limit: compile with /bigobj\"\n",
        "Line" : 121,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# disable SAFESEH - to avoid \"LNK2026: module unsafe\" on \"OpenAL32.lib\"\n",
        "Line" : 124,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# use static libs - to avoid \"LNK1104: cannot open file 'libboost_filesystem-vc140-mt-1_59.lib'\"\n",
        "Line" : 130,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# Note: c++11 is implicitly enabled on MSVC >=2013\n",
        "Line" : 134,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# GCC and Clang compiler options\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#------------------------------------------------------------------------------\n\n#                                 Defines                                        \n\n#------------------------------------------------------------------------------\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# define for using TinyXML with Standard Template Library (STL) support enabled\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#------------------------------------------------------------------------------\n\n#                                 Display Status                                         \n\n#------------------------------------------------------------------------------\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#------------------------------------------------------------------------------\n\n#                           Find Dependencies - Windows                                        \n\n#------------------------------------------------------------------------------\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Tell CMake where to search for binaries (dlls), includes and libs on Windows\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# help to find dependencies on Appveyor\n",
        "Line" : 191,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# help to find dependencies on your local env (FifeSDK)\n",
        "Line" : 200,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "#------------------------------------------------------------------------------\n\n#                                 Source Files                                         \n\n#------------------------------------------------------------------------------\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# tell compiler to search in the following folders for include files\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Core\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# CEGUI v0.8.0+\n",
        "Line" : 342,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# FIFECHAN\n",
        "Line" : 348,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# LIBROCKET\n",
        "Line" : 367,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#------------------------------------------------------------------------------\n\n#                         Source Groups for Source Files                                    \n\n#------------------------------------------------------------------------------\n",
        "Line" : 374,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#------------------------------------------------------------------------------\n\n#                                 Header Files                                         \n\n#------------------------------------------------------------------------------\n",
        "Line" : 383,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Core\n",
        "Line" : 387,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# CEGUI\n",
        "Line" : 568,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Fifechan\n",
        "Line" : 574,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Librocket\n",
        "Line" : 593,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "#------------------------------------------------------------------------------\n\n#                      Source Groups for Header Files                                    \n\n#------------------------------------------------------------------------------\n",
        "Line" : 600,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "#------------------------------------------------------------------------------\n\n#                                 SWIG Files                                         \n\n#------------------------------------------------------------------------------\n",
        "Line" : 611,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Core\n",
        "Line" : 615,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# CEGUI\n",
        "Line" : 684,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# FIFECHAN\n",
        "Line" : 689,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# LIBROCKET\n",
        "Line" : 703,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "#------------------------------------------------------------------------------\n\n#                      Source Groups for SWIG Files                                    \n\n#------------------------------------------------------------------------------\n",
        "Line" : 708,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# TODO some files for this source_group are not found\n\n#add_custom_target(fife.swig SOURCES ${FIFE_CORE_SWIG} ${FIFE_CEGUI_SWIG} ${FIFE_FCHAN_SWIG_LIB} ${FIFE_FCHAN_SWIG} ${FIFE_LROCKET_SWIG})\n",
        "Line" : 718,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "#------------------------------------------------------------------------------\n\n#                                 SWIG WRAPPER Files                                         \n\n#------------------------------------------------------------------------------\n",
        "Line" : 721,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# SWIG WRAPPERS FOR PYTHON\n",
        "Line" : 725,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "#------------------------------------------------------------------------------\n\n#                      Source Groups for SWIG WRAPPER Files                                    \n\n#------------------------------------------------------------------------------\n",
        "Line" : 735,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "#------------------------------------------------------------------------------\n\n#                                 Find Packages                                         \n\n#------------------------------------------------------------------------------\n",
        "Line" : 743,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# Setting up SWIG files\n",
        "Line" : 783,
        "CharPositionInLine" : 2
      },
      "55" : {
        "Text" : "# Find python library and add include path for python headers\n",
        "Line" : 790,
        "CharPositionInLine" : 2
      },
      "56" : {
        "Text" : "# find SWIG \n",
        "Line" : 855,
        "CharPositionInLine" : 2
      },
      "57" : {
        "Text" : "# protect user from working with Swig v3.0.8, which is broken\n",
        "Line" : 858,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# include the use swig file\n",
        "Line" : 865,
        "CharPositionInLine" : 2
      },
      "59" : {
        "Text" : "#------------------------------------------------------------------------------\n\n#                  Build fifengine as a Python extension module                                       \n\n#------------------------------------------------------------------------------\n",
        "Line" : 883,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# Find python library and add include path for python headers\n",
        "Line" : 888,
        "CharPositionInLine" : 2
      },
      "61" : {
        "Text" : "# CMake 3.8: swig_add_module is deprecated, use swig_add_library instead.\n",
        "Line" : 903,
        "CharPositionInLine" : 2
      },
      "62" : {
        "Text" : "# CMake 3.8: swig_add_module is deprecated, use swig_add_library instead.\n",
        "Line" : 935,
        "CharPositionInLine" : 4
      },
      "63" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# Install Python package locally, e.g. into \"C:\\Python27\\Lib\\site-packages\\fife\" #---------------------------------------------------------------------------------\n",
        "Line" : 956,
        "CharPositionInLine" : 3
      },
      "64" : {
        "Text" : "# get path to your local python site packages folder \n",
        "Line" : 960,
        "CharPositionInLine" : 4
      },
      "65" : {
        "Text" : "# Slash-Fix: Cmake would create a warning, when using the variable in FILES or DIRECTORY without changing it.\n",
        "Line" : 965,
        "CharPositionInLine" : 4
      },
      "66" : {
        "Text" : "# install pythonized fife\n",
        "Line" : 971,
        "CharPositionInLine" : 2
      },
      "67" : {
        "Text" : "# copy all files/folders from the extension folder\n\n# but exclude extension folders of the optional dependencies: cegui, librocket, pychan\n",
        "Line" : 976,
        "CharPositionInLine" : 2
      },
      "68" : {
        "Text" : "# install fife's extension for cegui   \n",
        "Line" : 986,
        "CharPositionInLine" : 4
      },
      "69" : {
        "Text" : "# install fife's extension for librocket\n",
        "Line" : 991,
        "CharPositionInLine" : 4
      },
      "70" : {
        "Text" : "# install pychan - fife's extension for fifechan \n",
        "Line" : 996,
        "CharPositionInLine" : 4
      },
      "71" : {
        "Text" : "# install pythonized fifechan\n",
        "Line" : 999,
        "CharPositionInLine" : 4
      },
      "72" : {
        "Text" : "#------------------------------------------------------------------------------\n\n#                       Build fifengine as a library                                        \n\n#------------------------------------------------------------------------------\n",
        "Line" : 1005,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# include support for GNU / multiarch path names\n\n# https://www.gnu.org/prep/standards/html_node/Directory-Variables.html\n",
        "Line" : 1040,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 74
    },
    "cmake/FindCEGUI.cmake" : {
      "ObjectId" : "5d2be05f399907d45f055ea80727315aeabb75c9",
      "LastModified" : "2016-05-09T14:34:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n# FindCEGUI\n\n#\n\n# Locate CEGUI LIBRARIES\n\n#\n\n# This module defines\n\n#    CEGUI_FOUND, if false, do not try to link to CEGUI\n\n#    CEGUI_INCLUDE_DIR, where to find headers.\n\n#    CEGUI_LIBRARIES, the LIBRARIES to link against\n\n#    CEGUI_BINARY_REL - location of the main CEGUI binary (win32 non-static only, release)\n\n#    CEGUI_BINARY_DBG - location of the main CEGUI binaries (win32 non-static only, debug)\n\n#\n\n#\n\n#         Modules :\n\n#    CEGUI_${COMPONENT}_FOUND - ${COMPONENT} is available\n\n#    CEGUI_${COMPONENT}_INCLUDE_DIRS - additional include directories for ${COMPONENT}\n\n#    CEGUI_${COMPONENT}_LIBRARIES - link these to use ${COMPONENT}\n\n#    CEGUI_${COMPONENT}_BINARY_REL - location of the component binary (win32 non-static only, release)\n\n#    CEGUI_${COMPONENT}_BINARY_DBG - location of the component binary (win32 non-static only, debug)\n\n#\n\n# VERSION 0.7.X:\n\n#        WindowsRenderer:\n\n#                Falagard\n\n#        Renderer:\n\n#                Direct3D9Renderer Direct3D10Renderer Direct3D11Renderer IrrlichtRenderer NullRenderer OgreRenderer OpenGLRenderer\n\n#        ImageCodec:\n\n#                CoronaImageCodec DevILImageCodec FreeImageImageCodec SILLYImageCodec STBImageCodec TGAImageCodec\n\n#        Parser:\n\n#                ExpatParser LibxmlParser RapidXMLParser TinyXMLParser XercesParser)\n\n#        Script:\n\n#                LuaScriptModule toluapp\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# VERSION 0.8.X:\n\n#        WindowsRenderer:\n\n#                CoreWindowRendererSet\n\n#        Renderer:\n\n#                Direct3D9Renderer Direct3D10Renderer Direct3D11Renderer IrrlichtRenderer NullRenderer OgreRenderer OpenGLRenderer OpenGL3Renderer OpenGLESRenderer\n\n#        ImageCodec:\n\n#                CoronaImageCodec DevILImageCodec FreeImageImageCodec SILLYImageCodec STBImageCodec TGAImageCodec PVRImageCodec\n\n#        Parser:\n\n#                ExpatParser LibXMLParser RapidXMLParser TinyXMLParser XercesParser)\n\n#        Script:\n\n#                LuaScriptModule\n\n#\n\n# author: Guillaume Smaha\n\n#\n\n# People have asked us to include a FindCEGUI that is high quality that they will\n\n# be able to copy and use to find CEGUI, so we have finally done that.\n\n#\n\n# If you have improvements for this scripts, please consider sending them upstream.\n\n# See https://bitbucket.org/cegui/cegui\n\n################################################################################\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "################################################################################\n\n# Get the value of a preprocessor entry\n\n################################################################################\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "################################################################################\n\n# Check if exist a preprocessor entry\n\n################################################################################\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "################################################################################\n\n# Replace the value of a preprocessor entry\n\n################################################################################\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "################################################################################\n\n# Define the value of preprocessor entry\n\n################################################################################\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "################################################################################\n\n# Begin processing of package\n\n################################################################################\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "################################################################################\n\n# Display a status message unless FIND_QUIETLY is set\n\n################################################################################\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "################################################################################\n\n# Get environment variable, define it as ENV_$var and make sure backslashes are converted to forward slashes\n\n################################################################################\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# replace won't work if var is blank\n",
        "Line" : 141,
        "CharPositionInLine" : 5
      },
      "10" : {
        "Text" : "################################################################################\n\n# Construct search paths for includes and libraries from a PREFIX_PATH\n\n################################################################################\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "################################################################################\n\n# clear cache variables if a certain variable changed\n\n################################################################################\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# test against internal check variable\n\n# HACK: Apparently, adding a variable to the cache cleans up the list\n\n# a bit. We need to also remove any empty strings from the list, but\n\n# at the same time ensure that we are actually dealing with a list.\n",
        "Line" : 171,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "################################################################################\n\n# Try to get some hints from pkg-config, if available\n\n################################################################################\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "################################################################################\n\n# Couple a set of release AND debug libraries (or frameworks)\n\n################################################################################\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "################################################################################\n\n# Generate debug names from given release names\n\n################################################################################\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "################################################################################\n\n# Add the parent dir from DIR to VAR\n\n################################################################################\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "################################################################################\n\n# Do the final processing for the package find.\n\n################################################################################\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# skip if already processed during this run\n",
        "Line" : 233,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "#########################################################\n\n# Find cegui modules\n\n#########################################################\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#########################################################\n\n# register a module\n\n#########################################################\n",
        "Line" : 356,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#########################################################\n\n# Main\n\n#########################################################\n",
        "Line" : 369,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Register var to check change on base\n",
        "Line" : 376,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Get path, convert backslashes as ${ENV_${var}}\n",
        "Line" : 383,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Determine whether to search for a dynamic or static build\n",
        "Line" : 389,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# construct search paths from environmental hints and\n\n# OS specific guesses\n",
        "Line" : 399,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Construct search paths for includes and libraries\n",
        "Line" : 433,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# try to locate CEGUI via pkg-config\n",
        "Line" : 438,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# locate CEGUI include files\n",
        "Line" : 441,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# determine CEGUI version\n",
        "Line" : 448,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# Starting CEGUI 0.8, the headers are in the CEGUI subdirectory, and we must include\n\n# its parent rather than directly the subdirectory. Otherwise we'll get compiler errors.\n",
        "Line" : 492,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# we basically overwrite CEGUI_INCLUDE_DIR so that it contains only the parent directory.\n",
        "Line" : 496,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# find binaries\n",
        "Line" : 514,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Base\n",
        "Line" : 527,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# WindowsRenderer\n",
        "Line" : 530,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# Renderer\n",
        "Line" : 533,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# ImageCodec\n",
        "Line" : 545,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "# Parser\n",
        "Line" : 554,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# Script\n",
        "Line" : 561,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "# WindowsRenderer\n",
        "Line" : 566,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "# Renderer\n",
        "Line" : 569,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "# ImageCodec\n",
        "Line" : 579,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "# Parser\n",
        "Line" : 587,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "# Script\n",
        "Line" : 594,
        "CharPositionInLine" : 4
      },
      "44" : {
        "Text" : "# Register var to check change on modules\n",
        "Line" : 607,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Find modules\n",
        "Line" : 619,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Find modules\n",
        "Line" : 628,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#Check change on modules\n",
        "Line" : 634,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48
    },
    "cmake/FindFifeChan.cmake" : {
      "ObjectId" : "78e6f403a1052ba646a9ccb2ce7932a4eacb629a",
      "LastModified" : "2016-11-05T12:08:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# FindFifeChan.cmake\n\n#------------------------------------------------------------------------------\n\n#\n\n# Find the native fifechan includes and libraries. Supports components.\n\n#\n\n# Usage: find_package(FifeChan COMPONENTS opengl sdl REQUIRED)\n\n#\n\n# FIFECHAN_INCLUDE_DIR        - where to find fifechan/fifechan.hüü, etc.\n\n# FIFECHAN_LIBRARIES          - List of libraries when using fifechan.\n\n# FIFECHAN_FOUND              - True, if fifechan found.\n\n# \n\n# FIFECHAN_${component}_FOUND - True, if fifechan_component found.\n\n#\n\n#------------------------------------------------------------------------------\n\n# Author: Jens A. Koch <jakoch@web.de>\n\n#------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#------------------------------------------------------------------------------\n\n#                       Find FIFECHAN_INCLUDE_DIR                                \n\n#------------------------------------------------------------------------------\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#------------------------------------------------------------------------------\n\n#                       Find FIFECHAN_LIBRARY                              \n\n#------------------------------------------------------------------------------\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# support alternative library names: suffix \"_static\" and prefix \"lib\"\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#------------------------------------------------------------------------------\n\n#                           Find libraries (components)\n\n#\n\n#   Example: find_package(FifeChan COMPONENTS opengl sdl REQUIRED)                                    \n\n#------------------------------------------------------------------------------\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# - handle the QUIETLY and REQUIRED arguments\n\n# - set FIFECHAN_FOUND to TRUE if all REQUIRED_VARS are TRUE\n\n# - additionally handle components, which are found: FIFECHAN_${component}_FOUND\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# for debugging\n\n#message(STATUS \"FIFECHAN_INCLUDE_DIR  = '${FIFECHAN_INCLUDE_DIR}'\")\n\n#message(STATUS \"FIFECHAN_LIBRARIES    = '${FIFECHAN_LIBRARIES}'\")\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cmake/FindGLEW.cmake" : {
      "ObjectId" : "bfd5c6cecfd414955a4a55291e52650996cea4e1",
      "LastModified" : "2017-02-28T15:24:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find GLEW\n\n# and define\n\n#\n\n#  GLEW_FOUND          - System has GLEW\n\n#  GLEW_INCLUDE_DIR    - The GLEW include directories\n\n#  GLEW_LIBRARIES      - The GLEW libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# glew32d glew32sd \n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# get GLEW version from glew.h\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/FindLibRocket.cmake" : {
      "ObjectId" : "5f7014b88d605804dd8080a93bc6d1fc0e3326ea",
      "LastModified" : "2016-09-30T11:48:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find libRocket\n\n# and define\n\n#\n\n#  LIBROCKET_FOUND          - System has libRocket\n\n#  LIBROCKET_INCLUDE_DIRS   - The LibRocket include directories\n\n#  LIBROCKET_LIBRARIES      - The libraries needed to use LibRocket\n\n#  LIBROCKET_DEFINITIONS    - Compiler switches required for using LibRocket\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LIBROCKET_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindOGG.cmake" : {
      "ObjectId" : "a080dce64b662a44034d4dbc3b6ec2358b70f0ba",
      "LastModified" : "2017-02-28T15:34:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find OGG\n\n# and define\n\n#\n\n#  OGG_FOUND        - System has OGG\n\n#  OGG_INCLUDE_DIRS - The include directories\n\n#  OGG_LIBRARY      - The libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# try to find package and provide a hint\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindOpenALSoft.cmake" : {
      "ObjectId" : "562b0e1ab88c3904f199246c2d98a2289e263752",
      "LastModified" : "2017-03-21T07:10:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find OpenAL-Soft\n\n#  and define\n\n#\n\n#  OPENALSOFT_FOUND          - System has OpenAL-Soft\n\n#  OPENALSOFT_INCLUDE_DIR    - The OpenAL-Soft include directories\n\n#  OPENALSOFT_LIBRARY        - The OpenAL-Soft libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Fink\n",
        "Line" : 11,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 13,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# Blastwave\n",
        "Line" : 15,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# FreeBSD\n",
        "Line" : 18,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Linux\n",
        "Line" : 20,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# Windows SDK Include PATH\n",
        "Line" : 22,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# for debugging\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# for debugging\n\n#message(STATUS \"OPENALSOFT_INCLUDE_DIR  = '${OPENALSOFT_INCLUDE_DIR}'\")\n\n#message(STATUS \"OPENALSOFT_LIBRARY      = '${OPENALSOFT_LIBRARY}'\")\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "cmake/FindSDL2.cmake" : {
      "ObjectId" : "9e691cf95fc309d7632f90963360a2bb8589729d",
      "LastModified" : "2018-02-15T14:31:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This module defines\n\n# SDL2_LIBRARY, the name of the library to link against\n\n# SDL2_FOUND, if false, do not try to link to SDL2\n\n# SDL2_INCLUDE_DIR, where to find SDL.h\n\n#\n\n# This module responds to the the flag:\n\n# SDL2_BUILDING_LIBRARY\n\n# If this is defined, then no SDL2main will be linked in because\n\n# only applications need main().\n\n# Otherwise, it is assumed you are building an application and this\n\n# module will attempt to locate and set the the proper link flags\n\n# as part of the returned SDL2_LIBRARY variable.\n\n#\n\n# Don't forget to include SDLmain.h and SDLmain.m your project for the\n\n# OS X framework based version. (Other versions link to -lSDL2main which\n\n# this module will try to find on your behalf.) Also for OS X, this\n\n# module will automatically add the -framework Cocoa on your behalf.\n\n#\n\n#\n\n# Additional Note: If you see an empty SDL2_LIBRARY_TEMP in your configuration\n\n# and no SDL2_LIBRARY, it means CMake did not find your SDL2 library\n\n# (SDL2.dll, libsdl2.so, SDL2.framework, etc).\n\n# Set SDL2_LIBRARY_TEMP to point to your SDL2 library, and configure again.\n\n# Similarly, if you see an empty SDL2MAIN_LIBRARY, you should set this value\n\n# as appropriate. These values are used to generate the final SDL2_LIBRARY\n\n# variable, but when these values are unset, SDL2_LIBRARY does not get created.\n\n#\n\n#\n\n# $SDL2DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$SDL2DIR\n\n# used in building SDL2.\n\n# l.e.galup  9-20-02\n\n#\n\n# Modified by Eric Wing.\n\n# Added code to assist with automated building by using environmental variables\n\n# and providing a more controlled/consistent search behavior.\n\n# Added new modifications to recognize OS X frameworks and\n\n# additional Unix paths (FreeBSD, etc).\n\n# Also corrected the header search path to follow \"proper\" SDL guidelines.\n\n# Added a search for SDL2main which is needed by some platforms.\n\n# Added a search for threads which is needed by some platforms.\n\n# Added needed compile switches for MinGW.\n\n#\n\n# On OSX, this will prefer the Framework version (if found) over others.\n\n# People will have to manually change the cache values of\n\n# SDL2_LIBRARY to override this selection or set the CMake environment\n\n# CMAKE_INCLUDE_PATH to modify the search paths.\n\n#\n\n# Note that the header path has changed from SDL2/SDL.h to just SDL.h\n\n# This needed to change because \"proper\" SDL convention\n\n# is #include \"SDL.h\", not <SDL2/SDL.h>. This is done for portability\n\n# reasons because not all systems place things in SDL2/ (see FreeBSD).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2003-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#message(\"<FindSDL2.cmake>\")\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Fink\n",
        "Line" : 74,
        "CharPositionInLine" : 5
      },
      "4" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 75,
        "CharPositionInLine" : 12
      },
      "5" : {
        "Text" : "# Blastwave\n",
        "Line" : 76,
        "CharPositionInLine" : 10
      },
      "6" : {
        "Text" : "# Non-OS X framework versions expect you to also dynamically link to\n\n# SDL2main. This is mainly for Windows and OS X. Other (Unix) platforms\n\n# seem to provide SDL2main for compatibility even though they don't\n\n# necessarily need it.\n",
        "Line" : 98,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# SDL2 may require threads on your system.\n\n# The Apple build may not need an explicit flag because one of the\n\n# frameworks may already provide it.\n\n# But for non-OSX systems, I will use the CMake Threads package.\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# MinGW needs an additional library, mwindows\n\n# It's total link flags should look like -lmingw32 -lSDL2main -lSDL2 -lmwindows\n\n# (Actually on second look, I think it only needs one of the m* libraries.)\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# For SDL2main\n",
        "Line" : 128,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# For OS X, SDL2 uses Cocoa as a backend so it must link to Cocoa.\n\n# CMake doesn't display the -framework Cocoa string in the UI even\n\n# though it actually is there if I modify a pre-used variable.\n\n# I think it has something to do with the CACHE STRING.\n\n# So I use a temporary variable until the end so I can set the\n\n# \"real\" variable in one-shot.\n",
        "Line" : 135,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# For threads, as mentioned Apple doesn't need this.\n\n# In fact, there seems to be a problem if I used the Threads package\n\n# and try using this line, so I'm just skipping it entirely for OS X.\n",
        "Line" : 145,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# For MinGW library\n",
        "Line" : 152,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# Set the final string here so the GUI reflects the final state.\n",
        "Line" : 157,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# Set the temp variable to INTERNAL so it is not seen in the CMake GUI\n",
        "Line" : 159,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "#message(\"</FindSDL2.cmake>\")\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "cmake/FindSDL2_image.cmake" : {
      "ObjectId" : "c845f258d64a48d3ff665b288a0780e987ab0119",
      "LastModified" : "2017-02-28T15:34:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate SDL_image library\n\n#\n\n# This module defines:\n\n#\n\n# ::\n\n#\n\n#   SDL_IMAGE_LIBRARIES, the name of the library to link against\n\n#   SDL_IMAGE_INCLUDE_DIRS, where to find the headers\n\n#   SDL_IMAGE_FOUND, if false, do not try to link against\n\n#   SDL_IMAGE_VERSION_STRING - human-readable string containing the version of SDL_image\n\n#\n\n#\n\n#\n\n# For backward compatiblity the following variables are also set:\n\n#\n\n# ::\n\n#\n\n#   SDLIMAGE_LIBRARY (same value as SDL_IMAGE_LIBRARIES)\n\n#   SDLIMAGE_INCLUDE_DIR (same value as SDL_IMAGE_INCLUDE_DIRS)\n\n#   SDLIMAGE_FOUND (same value as SDL_IMAGE_FOUND)\n\n#\n\n#\n\n#\n\n# $SDLDIR is an environment variable that would correspond to the\n\n# ./configure --prefix=$SDLDIR used in building SDL.\n\n#\n\n# Created by Eric Wing.  This was influenced by the FindSDL.cmake\n\n# module, but with modifications to recognize OS X frameworks and\n\n# additional Unix paths (FreeBSD, etc).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2005-2009 Kitware, Inc.\n\n# Copyright 2012 Benjamin Eikel\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# path suffixes to search inside ENV{SDLDIR}\n",
        "Line" : 50,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# for backward compatiblity\n\n#set(SDLIMAGE_LIBRARY ${SDL_IMAGE_LIBRARIES})\n\n#set(SDLIMAGE_INCLUDE_DIR ${SDL_IMAGE_INCLUDE_DIRS})\n\n#set(SDLIMAGE_FOUND ${SDL_IMAGE_FOUND})\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/FindSDL2_ttf.cmake" : {
      "ObjectId" : "28f4bf4cd40d33adab308d6a1fe46312b58bc122",
      "LastModified" : "2017-02-28T15:34:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate SDL_image library\n\n#\n\n# This module defines:\n\n#\n\n# ::\n\n#\n\n#   SDL_TTF_LIBRARIES, the name of the library to link against\n\n#   SDL_TTF_INCLUDE_DIRS, where to find the headers\n\n#   SDL_TTF_FOUND, if false, do not try to link against\n\n#   SDL_F_VERSION_STRING - human-readable string containing the version of SDL_ttf\n\n#\n\n#\n\n#\n\n# For backward compatiblity the following variables are also set:\n\n#\n\n# ::\n\n#\n\n#   SDLTTF_LIBRARY (same value as SDL_TTF_LIBRARIES)\n\n#   SDLTTF_INCLUDE_DIR (same value as SDL_TTF_INCLUDE_DIRS)\n\n#   SDLTTF_FOUND (same value as SDL_TTF_FOUND)\n\n#\n\n#\n\n#\n\n# $SDLDIR is an environment variable that would correspond to the\n\n# ./configure --prefix=$SDLDIR used in building SDL.\n\n#\n\n# Created by Eric Wing.  This was influenced by the FindSDL.cmake\n\n# module, but with modifications to recognize OS X frameworks and\n\n# additional Unix paths (FreeBSD, etc).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2005-2009 Kitware, Inc.\n\n# Copyright 2012 Benjamin Eikel\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# path suffixes to search inside ENV{SDLDIR}\n",
        "Line" : 50,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# for backward compatiblity\n\n#set(SDLTTF_LIBRARY ${SDL_TTF_LIBRARIES})\n\n#set(SDLTTF_INCLUDE_DIR ${SDL_TTF_INCLUDE_DIRS})\n\n#set(SDLTTF_FOUND ${SDL_TTF_FOUND})\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/FindTinyXML.cmake" : {
      "ObjectId" : "16297a64e3c5aa137cc5ed98fbed6d7889350290",
      "LastModified" : "2019-01-11T17:24:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##################################################################################################\n\n#Copyright (c) 2013-2019, Open Source Robotics Foundation\n\n#All rights reserved.\n\n#\n\n#Redistribution and use in source and binary forms, with or without modification,\n\n#are permitted provided that the following conditions are met:\n\n#\n\n#  Redistributions of source code must retain the above copyright notice, this\n\n#  list of conditions and the following disclaimer.\n\n#\n\n#  Redistributions in binary form must reproduce the above copyright notice, this\n\n#  list of conditions and the following disclaimer in the documentation and/or\n\n#  other materials provided with the distribution.\n\n#\n\n#  Neither the name of the {organization} nor the names of its\n\n#  contributors may be used to endorse or promote products derived from\n\n#  this software without specific prior written permission.\n\n#\n\n#THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n\n#ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\n#WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\n#DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\n\n#ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\n#(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\n#LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n\n#ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n#(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\n#SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n##################################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##################################################################################################\n\n# \n\n# CMake script for finding TinyXML.\n\n# \n\n# Input variables:\n\n# \n\n# - TinyXML_ROOT_DIR (optional): When specified, header files and libraries will be searched for in\n\n#     ${TinyXML_ROOT_DIR}/include\n\n#     ${TinyXML_ROOT_DIR}/libs\n\n#   respectively, and the default CMake search order will be ignored. When unspecified, the default\n\n#   CMake search order is used.\n\n#   This variable can be specified either as a CMake or environment variable. If both are set,\n\n#   preference is given to the CMake variable.\n\n#   Use this variable for finding packages installed in a nonstandard location, or for enforcing\n\n#   that one of multiple package installations is picked up.\n\n# \n\n# \n\n# Cache variables (not intended to be used in CMakeLists.txt files)\n\n# \n\n# - TinyXML_INCLUDE_DIR: Absolute path to package headers.\n\n# - TinyXML_LIBRARY: Absolute path to library.\n\n# \n\n# \n\n# Output variables:\n\n# \n\n# - TinyXML_FOUND: Boolean that indicates if the package was found\n\n# - TinyXML_INCLUDE_DIRS: Paths to the necessary header files\n\n# - TinyXML_LIBRARIES: Package libraries\n\n# \n\n# \n\n# Example usage:\n\n# \n\n#  find_package(TinyXML)\n\n#  if(NOT TinyXML_FOUND)\n\n#    # Error handling\n\n#  endif()\n\n#  ...\n\n#  include_directories(${TinyXML_INCLUDE_DIRS} ...)\n\n#  ...\n\n#  target_link_libraries(my_target ${TinyXML_LIBRARIES})\n\n# \n\n##################################################################################################\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Get package location hint from environment variable (if any)\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search path for nonstandard package locations\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Find headers and libraries\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Output variables generation\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enforce case-correctness: Set appropriately cased variable...\n",
        "Line" : 98,
        "CharPositionInLine" : 36
      },
      "7" : {
        "Text" : "# ...and unset uppercase variable generated by find_package_handle_standard_args\n",
        "Line" : 99,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 8
    },
    "cmake/FindVORBIS.cmake" : {
      "ObjectId" : "39ec2f4a0b34b6a89ed449c6783c0afb20a69b7c",
      "LastModified" : "2017-02-28T15:34:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find VORBIS\n\n# and define\n\n#\n\n#  VORBIS_FOUND        - System has VORBIS\n\n#  VORBIS_INCLUDE_DIRS - The include directories\n\n#  VORBIS_LIBRARY      - The libraries\n\n#  VORBISFILE_LIBRARY  - The vorbisfile\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# try to find package and provide a hint\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find vorbisfile dependency\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/get-fifechan.cmake" : {
      "ObjectId" : "f4c7d799fb6455fda33ac404006e8f35a76af275",
      "LastModified" : "2019-01-11T17:24:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# External Project:     FifeChan / FifeGUI\n\n# Downloads:            https://github.com/fifengine/fifechan/releases                                            \n\n#------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For Windows it's faster to download the pre-compiled development binaries.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#if(MINGW) # download pre-compiled dev package for MinGW 32/64-bit\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#ExternalProject_Add(\n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#fifechan\n\n#PREFIX              ${DEPENDENCY_EXTRACT_DIR}\n\n#DOWNLOAD_DIR        ${DEPENDENCY_DOWNLOAD_DIR}\n\n#URL                 https://github.com/fifengine/fifechan/releases/tag/${FIFECHAN_VERSION}/fifechan-v${FIFECHAN_VERSION}-MinGW.tar.gz\n\n#URL                 https://ci.appveyor.com/api/projects/jakoch/fifechan/artifacts/fifechan-shared-MinGW.tar.gz\n\n#URL_MD5             1\n\n#CONFIGURE_COMMAND   \"\"\n\n#BUILD_COMMAND       \"\"\n\n#INSTALL_COMMAND \n",
        "Line" : 16,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "#COMMAND ${CMAKE_COMMAND} -E copy_directory ${DEPENDENCY_EXTRACT_DIR}/src/fifechan/lib     ${DEPENDENCY_INSTALL_DIR}/lib\n\n#COMMAND ${CMAKE_COMMAND} -E copy_directory ${DEPENDENCY_EXTRACT_DIR}/src/fifechan/include ${DEPENDENCY_INSTALL_DIR}/include/fifechan\n",
        "Line" : 25,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "#)\n",
        "Line" : 27,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#endif(MINGW)\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# download pre-compiled dev package for Visual C++ 32/64-bit\n",
        "Line" : 31,
        "CharPositionInLine" : 11
      },
      "9" : {
        "Text" : "#URL                 https://ci.appveyor.com/api/buildjobs/5rg5bi98ta05l6v0/artifacts/fifechan-shared-dev-cf9d15b-VC15-x86.zip\n",
        "Line" : 38,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# build from source\n",
        "Line" : 50,
        "CharPositionInLine" : 7
      },
      "11" : {
        "Text" : "#CONFIGURE_COMMAND <SOURCE_DIR>/configure --prefix=${DEPENDENCY_INSTALL_DIR}\n",
        "Line" : 66,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 12
    },
    "cmake/get-glew.cmake" : {
      "ObjectId" : "41546b94cab037ed3c26d01527501cfb59bc07d3",
      "LastModified" : "2019-01-11T17:24:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# External Project:     GLEW - OpenGL Extension Wrangler Library\n\n# Downloads:            http://glew.sourceforge.net/  \n\n# Github:               https://github.com/nigels-com/glew                                          \n\n#------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For Windows it's faster to download the pre-compiled development binaries.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#URL                 https://github.com/nigels-com/glew/releases/download/glew-${GLEW_VERSION}/glew-${GLEW_VERSION}-win32.zip Download link is broken\n",
        "Line" : 18,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# build from source\n",
        "Line" : 29,
        "CharPositionInLine" : 7
      },
      "4" : {
        "Text" : "# TODO\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "cmake/get-libogg.cmake" : {
      "ObjectId" : "26332b338634fbf97a238ad37fdaace91d62545f",
      "LastModified" : "2019-01-11T17:24:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# External Project:     libogg\n\n# Downloads:            http://downloads.xiph.org/releases/ogg/                                 \n\n#------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/get-libpng.cmake" : {
      "ObjectId" : "56a89fecbdb2edec99a9a39ebc55bb14538eac5f",
      "LastModified" : "2019-01-24T18:02:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# External Project:     libpng\n\n# Website:              http://www.libpng.org/pub/png/libpng.html\n\n# Downloads:            https://github.com/glennrp/libpng/archive/v1.6.36.zip\n\n# Github:               https://github.com/glennrp/libpng\n\n#------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/get-libvorbis.cmake" : {
      "ObjectId" : "c00fbe21d6abda0c78a6a37f4ffec1447d10190b",
      "LastModified" : "2019-01-11T17:24:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# External Project:     libvorbis\n\n# Downloads:            http://downloads.xiph.org/releases/vorbis/                                \n\n#------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# find libogg\n",
        "Line" : 17,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 2
    },
    "cmake/get-openalsoft.cmake" : {
      "ObjectId" : "9459c07df05d8a728ac5c9da36c9024e18bc4573",
      "LastModified" : "2019-01-11T17:24:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# External Project:       OpenAL-Soft\n\n#\n\n# Website:                http://kcat.strangesoft.net/openal.html\n\n# Downloads:              http://kcat.strangesoft.net/openal.html#download\n\n#\n\n# Alternative Downloads:  http://kcat.strangesoft.net/openal-binaries/  \n\n#                         http://kcat.strangesoft.net/openal-releases/                                          \n\n#------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For win32 it's faster to download the pre-compiled development binaries.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# build from source\n",
        "Line" : 33,
        "CharPositionInLine" : 7
      },
      "3" : {
        "Text" : "#-DLIBTYPE=STATIC\n",
        "Line" : 48,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 4
    },
    "cmake/get-sdl2.cmake" : {
      "ObjectId" : "26f4d4351b890d85e79a346778994b2c255ea53a",
      "LastModified" : "2019-01-11T17:24:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# External Project:     SDL2\n\n# Downloads:            https://libsdl.org/release/\n\n#------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For Windows it's faster to download the pre-compiled development binaries.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# download pre-compiled SDL2 dev package for MinGW 32/64-bit\n",
        "Line" : 13,
        "CharPositionInLine" : 12
      },
      "3" : {
        "Text" : "# download pre-compiled SDL2 dev package for Visual C++ 32/64-bit\n",
        "Line" : 30,
        "CharPositionInLine" : 11
      },
      "4" : {
        "Text" : "# build from source\n",
        "Line" : 47,
        "CharPositionInLine" : 7
      },
      "5" : {
        "Text" : "#CONFIGURE_COMMAND <SOURCE_DIR>/configure --prefix=${DEPENDENCY_INSTALL_DIR}\n",
        "Line" : 63,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "cmake/get-sdl2_image.cmake" : {
      "ObjectId" : "4b0a9340b24541c53a2cd5981a40bbc653d09a33",
      "LastModified" : "2019-01-11T17:24:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# External Project:     SDL2_image\n\n# Downloads:            https://libsdl.org/projects/SDL_image/                                            \n\n#------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For win32 it's faster to download the pre-compiled development binaries.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# download pre-compiled SDL2 dev package for MinGW 32/64-bit\n",
        "Line" : 13,
        "CharPositionInLine" : 12
      },
      "3" : {
        "Text" : "# download pre-compiled SDL2 dev package for Visual C++ 32/64-bit\n",
        "Line" : 31,
        "CharPositionInLine" : 11
      },
      "4" : {
        "Text" : "# build from source\n",
        "Line" : 49,
        "CharPositionInLine" : 7
      },
      "CommentCount" : 5
    },
    "cmake/get-sdl2_ttf.cmake" : {
      "ObjectId" : "f605c477bda5b3cd4f8daf157f3171e6f6666efa",
      "LastModified" : "2019-01-26T14:57:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# External Project:     SDL2_ttf\n\n# Downloads:            https://libsdl.org/projects/SDL_ttf/                                            \n\n#------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For win32 it's faster to download the pre-compiled development binaries.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# download pre-compiled SDL2 dev package for MinGW 32/64-bit\n",
        "Line" : 13,
        "CharPositionInLine" : 12
      },
      "3" : {
        "Text" : "# download pre-compiled SDL2 dev package for Visual C++ 32/64-bit\n",
        "Line" : 31,
        "CharPositionInLine" : 11
      },
      "4" : {
        "Text" : "# build from source\n",
        "Line" : 49,
        "CharPositionInLine" : 7
      },
      "CommentCount" : 5
    },
    "cmake/get-swig.cmake" : {
      "ObjectId" : "401102b2f41e34f6d9c2a73cc7389ec324be65cf",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# External Project:       SWIG (Simplified Wrapper and Interface Generator)\n\n#\n\n# Website:                http://www.swig.org/\n\n# Downloads:              http://www.swig.org/download.html                                       \n\n#------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For Windows it's faster to download the pre-compiled development binaries.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#INSTALL_DIR         ${DEPENDENCY_INSTALL_DIR}/../build-tools/swig\n",
        "Line" : 21,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# TODO\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "cmake/get-tinyxml.cmake" : {
      "ObjectId" : "e58e481934c7c765a0b378c1d433914967573191",
      "LastModified" : "2019-01-24T18:02:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# External Project:     TinyXML v1\n\n# Website:              https://sourceforge.net/projects/tinyxml \n\n# Downloads:            https://sourceforge.net/projects/tinyxml/files/tinyxml/                                 \n\n#------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# build from source\n",
        "Line" : 28,
        "CharPositionInLine" : 7
      },
      "2" : {
        "Text" : "# TODO\n",
        "Line" : 30,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 3
    },
    "cmake/get-zlib.cmake" : {
      "ObjectId" : "e0416ce6591e079a30f3aa6d0b6cf28effc5735c",
      "LastModified" : "2019-01-24T18:02:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# External Project:     zlib\n\n# Downloads:            http://zlib.net/\n\n# Github:               https://github.com/madler/zlib\n\n#------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/patches/libogg/CMakeLists.txt" : {
      "ObjectId" : "3b9fbab040d98b75f3582b91024eba2692aefd32",
      "LastModified" : "2019-01-11T17:24:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# create \"ogg/config_types.h\"\n",
        "Line" : 24,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "cmake/patches/libvorbis/CMakeLists.txt" : {
      "ObjectId" : "14828d22494aa61ab9b35fcf8712d6c1149b5c97",
      "LastModified" : "2019-01-11T17:24:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#find_package(Ogg REQUIRED)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#lib/barkmel.c  # unnecessary: bark scale utility\n",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#lib/psytune.c   # dead code\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#lib/tone.c      # error: 'M_PI': undeclared identifier\n",
        "Line" : 38,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "cmake/patches/tinyxml/CMakeLists.txt" : {
      "ObjectId" : "8e3a7a2ed228b9283b0f36f063723fc50f5b8537",
      "LastModified" : "2019-01-11T17:24:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dependencies/CMakeLists.txt" : {
      "ObjectId" : "a3478ef7b08b54ef2a09fcac051dc7dad2d1d4f6",
      "LastModified" : "2019-01-24T18:02:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#------------------------------------------------------------------------------\n\n#                           Fifengine Dependencies                                               \n\n#------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# create a \"Release\" build by default\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# set a fallback download folder for dependencies\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# set a fallback installation folder for dependencies\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# set a fallback folder for the extracted dependencies\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#------------------------------------------------------------------------------\n\n#                                 Display Status                                         \n\n#------------------------------------------------------------------------------\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#------------------------------------------------------------------------------\n\n#                                Options                                                   \n\n#------------------------------------------------------------------------------\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# TODO boost\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#------------------------------------------------------------------------------\n\n#                   Check Options + Include external build scripts                                             \n\n#------------------------------------------------------------------------------\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# TODO: boost\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    }
  },
  "FileTypes" : {
    "CMAKE" : 28
  },
  "ElapsedTime" : 3955
}