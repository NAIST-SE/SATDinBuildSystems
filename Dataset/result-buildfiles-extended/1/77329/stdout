{
  "Repository" : "77329",
  "Revision" : "HEAD",
  "ObjectId" : "36fc4cae15092a84ea8c29b9c6658c7cabfadb6e",
  "CommitTime" : "2018-03-13T15:16:06Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "1f683fd5797bfb0c6e56dc5641196d9e60fe8d99",
      "LastModified" : "2016-04-18T16:11:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Project Tuttle OFX \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The install rule does not depend on all, i.e. everything will not be built before installing\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add a variable for experimental host/plugins features\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add a variable to set a default path to OFX plugins\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add a variable to install dependencies with tuttle when deploy\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Diplay commands being ran by CMake\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Include subdirs\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add a target to generate API documentation with Doxygen\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "Makefile" : {
      "ObjectId" : "ed804657a3d3f980cb2d718e2e78e9a42a85b2dc",
      "LastModified" : "2014-12-30T13:54:47Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Automatically select the number of processors.\n\n# You can override that on the command line: \"make NPROC=1\".\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Keep one proc for system tasks\n",
        "Line" : 15,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "applications/CMakeLists.txt" : {
      "ObjectId" : "35ae86741aa883573cb94642ef6235d6b9bd06ef",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# sam\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# scripts\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Edit python scripts if the host is built with python3\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "applications/sam/CMakeLists.txt" : {
      "ObjectId" : "dcca0d221f5df9d4c24641914a50928ab7c07c1e",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## sam\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# common\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# sam_ls\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# sam_mv\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# sam_cp\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# sam_rm\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# sam_do\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# sam\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# deploy sam symbolic links\n",
        "Line" : 79,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 9
    },
    "applications/script/CMakeLists.txt" : {
      "ObjectId" : "aa04d1b0dfcf6a84e8936d5c8bcfedf3335b7706",
      "LastModified" : "2015-07-28T16:08:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## scripts\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindCTL.cmake" : {
      "ObjectId" : "8f0cb7e8c50ebc629d5e9398f4ec0d5e20126188",
      "LastModified" : "2014-09-02T09:29:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find CTL library \n\n# CTL stands for Color transform language \n\n# http://ampasctl.sourceforge.net/\n\n# Find the native CTL includes and library\n\n# This module defines\n\n#  CTL_INCLUDE_DIRS, where to find openimageio.h, Set when\n\n#                            CTL_INCLUDE_DIR is found.\n\n#  CTL_LIBRARIES, libraries to link against to use CTL.\n\n#  CTL_ROOT_DIR, The base directory to search for CTL.\n\n#                        This can also be an environment variable.\n\n#  CTL_FOUND, If false, do not try to use CTL.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If CTL_ROOT was defined in the environment, use it, otherwise \n\n# try to use pkgconfig\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fink\n",
        "Line" : 29,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 30,
        "CharPositionInLine" : 13
      },
      "4" : {
        "Text" : "# Blastwave\n",
        "Line" : 31,
        "CharPositionInLine" : 11
      },
      "5" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set CTL_FOUND to TRUE if \n\n# all listed variables are TRUE\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/FindFFmpeg.cmake" : {
      "ObjectId" : "2141881a72b8978351e3f2345c6eefc9c7b39e64",
      "LastModified" : "2014-10-10T16:23:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find FFmpeg library\n\n# Find the native FFmpeg includes and library.\n\n# \n\n# This module defines:\n\n# FFMPEG_FOUND\n\n# FFMPEG_INCLUDE_DIR - The FFmpeg include directory.\n\n# FFMPEG_LIBRARIES - The FFmpeg libraries.\n\n# FFMPEG_DEFINITIONS - The FFmpeg compile flags.\n\n# \n\n# For each component:\n\n# ${COMPONENT}_FOUND\n\n# ${COMPONENT}_INCLUDE_DIR\n\n# ${COMPONENT}_LIBRARIES\n\n# ${COMPONENT}_DEFINITIONS\n\n# ${COMPONENT}_VERSION\n\n#\n\n# If any component is specified, default components are avcodec avformat avutil.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### Macro: check_ffmpeg_version\n\n#   \n\n# Check FFmpeg version.\n\n# @todo: clean how to get current FFmpeg version.\n\n#\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "### Macro: find_component\n\n#   \n\n# Check the given component by invoking pkgconfig and \n\n# then looking up the libraries and include directories.\n\n# @todo: WIN and MAC OSX.\n\n#\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 42,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Marks the given component as found if both *_LIBRARIES AND *_INCLUDE_DIR is present.  \n",
        "Line" : 63,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Get FFmpeg from custom install\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Get FFmpeg from system install\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Check FFmpeg version\n",
        "Line" : 88,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Check components and add their stuff to the FFMPEG_* vars.\n",
        "Line" : 97,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Get component name is lower cases.\n",
        "Line" : 99,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# If the component is found.\n",
        "Line" : 102,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# Build the include path with duplicates removed.\n",
        "Line" : 117,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 12
    },
    "cmake/FindGLEW.cmake" : {
      "ObjectId" : "758287e1b2c5788fefddf9cbe7dbcb10ce7fa8f6",
      "LastModified" : "2014-10-20T12:12:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find the OpenGL Extension Wrangler Library (GLEW)\n\n# This module defines the following variables:\n\n#  GLEW_INCLUDE_DIRS - include directories for GLEW\n\n#  GLEW_LIBRARIES - libraries to link against GLEW\n\n#  GLEW_FOUND - true if GLEW has been found and can be used\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2012 Benjamin Eikel\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindIlmBase.cmake" : {
      "ObjectId" : "82cb184fcd068b994eba862d0faafffae28adebe",
      "LastModified" : "2014-11-08T11:02:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Module to find IlmBase\n\n#\n\n# This module will first look into the directories defined by the variables:\n\n#   - ILMBASE_HOME, ILMBASE_VERSION, ILMBASE_LIB_AREA\n\n#\n\n# It also supports non-standard names for the library components.\n\n#\n\n# To use a custom IlmBase:\n\n#   - Set the variable ILMBASE_CUSTOM to True\n\n#   - Set the variable ILMBASE_CUSTOM_LIBRARIES to a list of the libraries to\n\n#     use, e.g. \"SpiImath SpiHalf SpiIlmThread SpiIex\"\n\n#\n\n# This module defines the following variables:\n\n#\n\n# ILMBASE_INCLUDE_DIR - where to find half.h, IlmBaseConfig.h, etc.\n\n# ILMBASE_LIBRARIES   - list of libraries to link against when using IlmBase.\n\n# ILMBASE_FOUND       - True if IlmBase was found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Other standarnd issue macros\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Macro to assemble a helper state variable\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Macro to search for an include directory\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Macro to search for the given library and adds the cached\n\n# variable names to the specified list\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Properly define ${tmp_prefix}_LIBRARY (cached) and ${tmp_prefix}_LIBRARIES\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Add to the list of variables which should be reset\n",
        "Line" : 71,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Encode the current state of the external variables into a string\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# If the state has changed, clear the cached variables\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Generic search paths\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Search paths for the IlmBase files\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Locate the header files\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# If the headers were found, add its parent to the list of lib directories\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Locate the IlmBase libraries\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Create the list of variables that might need to be cleared\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Store the current state so that variables might be cleared if required\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Link with pthreads if required\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Use the standard function to handle ILMBASE_FOUND\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Unset the helper variables to avoid pollution\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "cmake/FindLibCaca.cmake" : {
      "ObjectId" : "4fe04427cfe1143d18bbe1bae8c1af26fec837dc",
      "LastModified" : "2014-10-20T12:12:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find LibCaca library\n\n# Find the native LibCaca includes and library\n\n# This module defines\n\n#  LIBCACA_INCLUDE_DIRS, where to find openimageio.h, Set when\n\n#                            LIBCACA_INCLUDE_DIR is found.\n\n#  LIBCACA_LIBRARIES, libraries to link against to use LibCaca.\n\n#  LIBCACA_ROOT_DIR, The base directory to search for LibCaca.\n\n#                        This can also be an environment variable.\n\n#  LIBCACA_FOUND, If false, do not try to use LibCaca.\n\n#\n\n# also defined, but not for general use are\n\n#  LIBCACA_LIBRARY, where to find the LibCaca library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If LIBCACA_ROOT was defined in the environment, use it.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fink\n",
        "Line" : 23,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 24,
        "CharPositionInLine" : 13
      },
      "4" : {
        "Text" : "# Blastwave\n",
        "Line" : 25,
        "CharPositionInLine" : 11
      },
      "5" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LIBCACA_FOUND to TRUE if \n\n# all listed variables are TRUE\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/FindLibRaw.cmake" : {
      "ObjectId" : "cefe9806f98bd428dbf6f7b970c3d45a31030b68",
      "LastModified" : "2014-10-20T12:12:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find LibRaw library\n\n# Find the native LibRaw includes and library\n\n# This module defines\n\n#  LIBRAW_INCLUDE_DIRS, where to find openimageio.h, Set when\n\n#                            LIBRAW_INCLUDE_DIR is found.\n\n#  LIBRAW_LIBRARIES, libraries to link against to use LibRaw.\n\n#  LIBRAW_ROOT_DIR, The base directory to search for LibRaw.\n\n#                        This can also be an environment variable.\n\n#  LIBRAW_FOUND, If false, do not try to use LibRaw.\n\n#\n\n# also defined, but not for general use are\n\n#  LIBRAW_LIBRARY, where to find the LibRaw library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If LIBRAW_ROOT was defined in the environment, use it.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fink\n",
        "Line" : 28,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 29,
        "CharPositionInLine" : 13
      },
      "4" : {
        "Text" : "# Blastwave\n",
        "Line" : 30,
        "CharPositionInLine" : 11
      },
      "5" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LIBRAW_FOUND to TRUE if \n\n# all listed variables are TRUE\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/FindNumpy.cmake" : {
      "ObjectId" : "c861ff6faae008a6dacd6d388843636e83e590e3",
      "LastModified" : "2015-02-17T11:55:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find numpy python module\n\n# find_package(Numpy)\n\n# This module defines\n\n#   NUMPY_INCLUDE_DIR, numpy C header directory\n\n#   NUMPY_FOUND, if the directory is found or not\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindOpenColorIO.cmake" : {
      "ObjectId" : "a759e6f182699b57b146a6693842944b05b51199",
      "LastModified" : "2014-10-20T12:12:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find OpenColorIO library\n\n# Find the native OpenColorIO includes and library\n\n# This module defines:\n\n#\n\n#  OPENCOLORIO_INCLUDE_DIRS, where to find openimageio.h, Set when OPENCOLORIO_INCLUDE_DIR is found.\n\n#  OPENCOLORIO_LIBRARIES, libraries to link against to use OpenColorIO.\n\n#  OPENCOLORIO_ROOT_DIR, The base directory to search for OpenColorIO.\n\n#                        This can also be an environment variable.\n\n#  OPENCOLORIO_FOUND, If false, do not try to use OpenColorIO.\n\n#\n\n# also defined, but not for general use are\n\n#  OPENCOLORIO_LIBRARY, where to find the OpenColorIO library.\n\n# \n\n# If OPENCOLORIO_ROOT is defined in the environment this module will use it in priority\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If OPENCOLORIO_ROOT is defined in the environment, use it.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If not environment variable is set, fall back on pkg-config\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Add few search directories\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Fink\n",
        "Line" : 32,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 33,
        "CharPositionInLine" : 13
      },
      "6" : {
        "Text" : "# Blastwave\n",
        "Line" : 34,
        "CharPositionInLine" : 11
      },
      "7" : {
        "Text" : "# Looking for include path\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Looking for library path\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set OPENCOLORIO_FOUND to TRUE if \n\n# all listed variables are TRUE\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Set variable as advanced mode\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "cmake/FindOpenEXR.cmake" : {
      "ObjectId" : "9ea0f6c9efd693eb69b52c1b7cbb35fe3bfa7af1",
      "LastModified" : "2014-10-20T12:12:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find OpenEXR library\n\n# Find the native OpenEXR includes and library\n\n# This module defines\n\n#  OPENEXR_INCLUDE_DIRS, where to find ImfXdr.h, etc. Set when\n\n#                        OPENEXR_INCLUDE_DIR is found.\n\n#  OPENEXR_LIBRARIES, libraries to link against to use OpenEXR.\n\n#  OPENEXR_ROOT_DIR, The base directory to search for OpenEXR.\n\n#                    This can also be an environment variable.\n\n#  OPENEXR_FOUND, If false, do not try to use OpenEXR.\n\n#\n\n# For individual library access these advanced settings are available\n\n#  OPENEXR_HALF_LIBRARY, Path to Half library\n\n#  OPENEXR_IEX_LIBRARY, Path to Half library\n\n#  OPENEXR_ILMIMF_LIBRARY, Path to Ilmimf library\n\n#  OPENEXR_ILMTHREAD_LIBRARY, Path to IlmThread library\n\n#  OPENEXR_IMATH_LIBRARY, Path to Imath library\n\n#\n\n# also defined, but not for general use are\n\n#  OPENEXR_LIBRARY, where to find the OpenEXR library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2011 Blender Foundation.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If OPENEXR_ROOT_DIR was defined in the environment, use it.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Fink\n",
        "Line" : 48,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 49,
        "CharPositionInLine" : 13
      },
      "5" : {
        "Text" : "# Blastwave\n",
        "Line" : 50,
        "CharPositionInLine" : 11
      },
      "6" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set OPENEXR_FOUND to TRUE if \n\n# all listed variables are TRUE\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Both include paths are needed because of dummy OSL headers mixing #include <OpenEXR/foo.h> and #include <foo.h> :(\n",
        "Line" : 85,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "cmake/FindOpenImageIO.cmake" : {
      "ObjectId" : "648fbf92e8de209c9b7085640996daab35ff1428",
      "LastModified" : "2014-10-20T12:12:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find OpenImageIO library\n\n# Find the native OpenImageIO includes and library\n\n# This module defines\n\n#  OPENIMAGEIO_INCLUDE_DIRS, where to find openimageio.h, Set when\n\n#                            OPENIMAGEIO_INCLUDE_DIR is found.\n\n#  OPENIMAGEIO_LIBRARIES, libraries to link against to use OpenImageIO.\n\n#  OPENIMAGEIO_ROOT_DIR, The base directory to search for OpenImageIO.\n\n#                        This can also be an environment variable.\n\n#  OPENIMAGEIO_FOUND, If false, do not try to use OpenImageIO.\n\n#\n\n# also defined, but not for general use are\n\n#  OPENIMAGEIO_LIBRARY, where to find the OpenImageIO library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2011 Blender Foundation.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If OPENIMAGEIO_ROOT_DIR was defined in the environment, use it.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Fink\n",
        "Line" : 33,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 34,
        "CharPositionInLine" : 13
      },
      "5" : {
        "Text" : "# Blastwave\n",
        "Line" : 35,
        "CharPositionInLine" : 11
      },
      "6" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set OPENIMAGEIO_FOUND to TRUE if \n\n# all listed variables are TRUE\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cmake/FindOpenJpeg.cmake" : {
      "ObjectId" : "ac01c3abc6f846c0ca5e13928503a34e58ba3422",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find OpenJpeg library\n\n# Find the native OpenJpeg includes and library\n\n# This module defines:\n\n#\n\n#  OPENJPEG_INCLUDE_DIRS, where to find openimageio.h, Set when OPENJPEG_INCLUDE_DIR is found.\n\n#  OPENJPEG_LIBRARIES, libraries to link against to use OpenJpeg.\n\n#  OPENJPEG_ROOT_DIR, The base directory to search for OpenJpeg.\n\n#                        This can also be an environment variable.\n\n#  OPENJPEG_FOUND, If false, do not try to use OpenJpeg.\n\n#\n\n# also defined, but not for general use are\n\n#  OPENJPEG_LIBRARY, where to find the OpenJpeg library.\n\n# \n\n# If OPENJPEG_ROOT is defined in the environment this module will use it in priority\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If OPENJPEG_ROOT is defined in the environment, use it.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add few search directories\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Fink\n",
        "Line" : 26,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 27,
        "CharPositionInLine" : 13
      },
      "5" : {
        "Text" : "# Blastwave\n",
        "Line" : 28,
        "CharPositionInLine" : 11
      },
      "6" : {
        "Text" : "# Looking for include path\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Looking for library path\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set OPENJPEG_FOUND to TRUE if \n\n# all listed variables are TRUE\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Set variable as advanced mode\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "cmake/FindSeExpr.cmake" : {
      "ObjectId" : "ddc31141705cbf381ce9d4abf1ed35a931643b48",
      "LastModified" : "2014-10-20T12:12:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find SeExpr library\n\n# Find the native SeExpr includes and library\n\n# This module defines\n\n#  SEEXPR_INCLUDE_DIRS, where to find openimageio.h, Set when\n\n#                            SEEXPR_INCLUDE_DIR is found.\n\n#  SEEXPR_LIBRARIES, libraries to link against to use SeExpr.\n\n#  SEEXPR_ROOT_DIR, The base directory to search for SeExpr.\n\n#                        This can also be an environment variable.\n\n#  SEEXPR_FOUND, If false, do not try to use SeExpr.\n\n#\n\n# also defined, but not for general use are\n\n#  SEEXPR_LIBRARY, where to find the SeExpr library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If SEEXPR_ROOT was defined in the environment, use it.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fink\n",
        "Line" : 23,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 24,
        "CharPositionInLine" : 13
      },
      "4" : {
        "Text" : "# Blastwave\n",
        "Line" : 25,
        "CharPositionInLine" : 11
      },
      "5" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set SEEXPR_FOUND to TRUE if \n\n# all listed variables are TRUE\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/FindavTranscoder.cmake" : {
      "ObjectId" : "db3db06c6564fc77ddf403596ba2097fb71e01cd",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Look for AvTranscoder.\n\n# In this project, AvTranscoder is retrieved as a submodule and built with AudioVideo plugin.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find ffmpeg libraries which are dependencies of avTranscoder\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use target defined in avTranscoder project\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Look for the submodule\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/FindsequenceParser.cmake" : {
      "ObjectId" : "aee8ba2c0a6b5f0df48a772df6f3433fee4b12a6",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Look for sequenceParser.\n\n# In this project, sequenceParser is retrieved as a submodule.\n\n# TODO : add SEQUENCEPARSER_ROOT_DIR env to override current installation\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Look for the submodule\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/TuttleMacros.cmake" : {
      "ObjectId" : "4f96de569c80c9d99a46ed3cc8658583eb5ec514",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Custom macros, UseOfxpp UseTerry\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Returns the library LIBRARY soname in SONAME\n\n# CAVEAT this function is linux specific and has not been tested\n\n# on multiple systems\n\n# TODO: macosx version of this function\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Returns architecture as defined by the OFX standard\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# use ${CMAKE_SYSTEM_NAME}-${CMAKE_SYSTEM_PROCESSOR}\n\n# message(\"ARCH=${CMAKE_SYSTEM_NAME}-${CMAKE_SYSTEM_PROCESSOR}\")\n\n# TODO test all systems\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Assume x86_64\n",
        "Line" : 25,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Returns path where to install python bindings and tools\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Install dynamic libraries in the TUTTLE/lib folder\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Is it a shared library?\n",
        "Line" : 42,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# Use this function to create a new plugin target\n\n# Each new plugin is added to 2 Makefile custom targets:\n\n#   * 'ofxplugins'\n\n#   * 'ofx<plugin_parent_dir>'\n\n# The first argument is the plugin name\n\n# the second argument is a list of files to compile\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# FIXME: Why ? what are we including here ? common ??\n",
        "Line" : 65,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# If no plugin source is provided, recursively find file below src folder\n",
        "Line" : 70,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# Extract plugin VERSION_MAJOR/MINOR from \"src/mainEntry.cpp\"\n",
        "Line" : 77,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# By default, do not build a plugin with major version 0\n",
        "Line" : 101,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# OpenFX and Terry are used by default\n",
        "Line" : 110,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# Plugin target is a shared library\n",
        "Line" : 114,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# Get plugin parent directory\n",
        "Line" : 117,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# Create custom target if it does not exist\n",
        "Line" : 123,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# Add this new plugin to custom Makefile targets\n",
        "Line" : 131,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# Static link with a common plugin library\n",
        "Line" : 135,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# FIXME: why tuttlePluginLib depends on OpenGL ? is it necessary ?\n",
        "Line" : 145,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# Install OFX plugin as specified in\n\n# http://openfx.sourceforge.net/Documentation/1.3/Reference/ch02s02.html\n",
        "Line" : 156,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "# Set RPATH for installed libraries like boost \n",
        "Line" : 164,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# Search in current variables the ones starting with PACKAGE_NAME\n\n# and having INCLUDE/LIBRARY_PATH/LIBRARIES in their name\n\n# Returns the results in INCLUDES LIBRARYPATH LIBRARIES\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Handle Package_XX and PACKAGE_XX variable prefixes\n",
        "Line" : 178,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# Add a package/library dependency to a plugin\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# QUIET mode cause the package name can be a target\n\n# defined previously.\n",
        "Line" : 197,
        "CharPositionInLine" : 8
      },
      "26" : {
        "Text" : "# Test both lower and upper case FOUND variable ie.\n\n# MyLib_FOUND and MYLIB_FOUND \n\n# as it seems that there is no norm\n",
        "Line" : 201,
        "CharPositionInLine" : 8
      },
      "27" : {
        "Text" : "# Find paths using the cmake variable names\n",
        "Line" : 208,
        "CharPositionInLine" : 12
      },
      "28" : {
        "Text" : "# Add compilations libraries, includes and paths\n",
        "Line" : 211,
        "CharPositionInLine" : 12
      },
      "29" : {
        "Text" : "# Removes the target from the build and install if a lib is missing\n",
        "Line" : 229,
        "CharPositionInLine" : 12
      },
      "30" : {
        "Text" : "# Add a list of packages to a plugin\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Add an executable using tuttle libraries\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# It needs boost libraries\n",
        "Line" : 249,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "# Set RPATH flags\n",
        "Line" : 252,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# OpenFX and Terry \n",
        "Line" : 261,
        "CharPositionInLine" : 8
      },
      "35" : {
        "Text" : "# to include applications/common folder.\n\n# unfortunatelly common is in the prefix of all includes \n",
        "Line" : 265,
        "CharPositionInLine" : 8
      },
      "36" : {
        "Text" : "# Link with libraries\n",
        "Line" : 272,
        "CharPositionInLine" : 8
      },
      "37" : {
        "Text" : "# RPATH\n",
        "Line" : 275,
        "CharPositionInLine" : 8
      },
      "38" : {
        "Text" : "# Install\n",
        "Line" : 285,
        "CharPositionInLine" : 8
      },
      "39" : {
        "Text" : "# Add libraries to an executable.\n",
        "Line" : 291,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# FIXME: find a way of treating targets and internal package\n\n# May be by removing sequenceParser as a external dep\n",
        "Line" : 293,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "# Equivalent to plugin add library\n",
        "Line" : 298,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 42
    },
    "cmake/UseOfxpp.cmake" : {
      "ObjectId" : "abb36345e77fce7f46f958eefe445ddd45589d06",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Uses custom ofx c++ wrapper\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/UseTerry.cmake" : {
      "ObjectId" : "05a6d0e199d19ffa73497feb9e2759945c935109",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use terry image library\n\n# include(UseTerry)\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FIXME: there is a openexr subfolder with a file half.hpp including for\n\n# external half.h from ilmbase/openexr.\n\n# So terry depends on openexr \n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/UseTuttleBoost.cmake" : {
      "ObjectId" : "057ad6b4dd2374b50361fb5ce36a1c45c38bf273",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Boost for the whole Tuttle project\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Get boost libraries for tuttleCommon\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Get boost libraries for tuttleHost\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Override some boost gil headers\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "libraries/tuttle/CMakeLists.txt" : {
      "ObjectId" : "829d9f461c2fb3f1076ea4d2d27cbfcefec9b29b",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt for Tuttle host library \n\n# This file needs to be split in several simple one\n\n# The folder tree must be reorganized\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add custom cmake macros\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# All libraries will be put in INSTALL_PREFIX/lib \n\n# RPATH of host points INSTALL_PREFIX/lib\n\n# see: http://www.cmake.org/Wiki/CMake_RPATH_handling\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Tuttle source code\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Boost dependencies\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# OpenFX and Terry rely on boost\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Extract tuttleHost_VERSION_MAJOR/MINOR/MICRO from version.hpp\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# SequenceParser, as a separate project\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# TODO: if cmake >= 2.8.11\n\n# TODO: declare BOOST Atomic optional.\n\n# There is a basic fallback implementation for boost_atomic:\n\n# libraries/tuttle/src/tuttle/common/atomic.hpp\n\n# target_compile_definitions(tuttleHost PUBLIC WITHOUT_BOOST_ATOMIC)\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Add tuttleCommon library (utilities for both host and plugins)\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Add tuttlePlugin library (utilities for tuttle plugins)\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Add tuttleIOPlugin library (utilities for tuttle IO plugins)\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Add tuttleHost library\n",
        "Line" : 77,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# TuttleHost depends on libpng when it is built in debug.\n\n# To generate png images when for each output of each nodes computed in the graph.\n",
        "Line" : 93,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Install tuttle libraries in INSTALL_PREFIX/lib/\n",
        "Line" : 102,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Install tuttle host headers\n",
        "Line" : 108,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Install boost library along with tuttle library\n\n# Need to copy the files pointed by symlinks instead of the symlinks\n",
        "Line" : 119,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Python bindings with Swig \n",
        "Line" : 125,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Load Modules/UseSWIG.cmake\n",
        "Line" : 129,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Find python c libs\n",
        "Line" : 132,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Numpy\n",
        "Line" : 137,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Add swig flag to create binding without Numpy\n",
        "Line" : 139,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# Find numpy headers\n",
        "Line" : 143,
        "CharPositionInLine" : 8
      },
      "23" : {
        "Text" : "# Swig to compile c++ -> python\n",
        "Line" : 152,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "#-doxygen\n",
        "Line" : 153,
        "CharPositionInLine" : 93
      },
      "25" : {
        "Text" : "# pyTuttle\n",
        "Line" : 158,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# FIXME : do we need a python package as before ?\n",
        "Line" : 161,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# Create the output dir as it's not done automatically by cmake\n",
        "Line" : 165,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# Force the library to look in the project lib folder relatively\n",
        "Line" : 171,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# get path to install python bindings\n",
        "Line" : 178,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# Install python libs and wrapper in INSTALL_PREFIX/lib/python\n",
        "Line" : 181,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# Build boot unit tests of host and plugins\n",
        "Line" : 192,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 32
    },
    "libraries/tuttle/tests/CMakeLists.txt" : {
      "ObjectId" : "dab9ff22286dc24077f73cbc426d5162446e9bf4",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Setup CMake to run tests\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create custom target 'run_tests'\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Get tests of tuttle host and plugins\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Run through each source\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Extract the filename without an extension (NAME_WE)\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Add define for all tests\n",
        "Line" : 26,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Build test\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Move testing binary into a testBin directory\n",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Add it to test execution\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 9
    },
    "plugins/CMakeLists.txt" : {
      "ObjectId" : "fc3948d418f1b4fc9b109879ad301a6bf4b62e39",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/_scripts/ImageEffectApi/CMakeLists.txt" : {
      "ObjectId" : "9cfaf0475122832d9ffea24a6ddc7ea9f441e330",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Declare the plugin\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Create the plugin\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "plugins/image/display/ColorCubeViewer/CMakeLists.txt" : {
      "ObjectId" : "78a982acc18341c8d2418951b3f13a673b32ab76",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Declare the plugin\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# FIXME the following include is here to fix the include \"hsv\" from gil\n\n# and should definitely be removed\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "plugins/image/display/Histogram/CMakeLists.txt" : {
      "ObjectId" : "cbfe1acbaef853f7ea25feaef8b616bd810b38d3",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Declare the plugin\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# FIXME should get rid of this include\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "plugins/image/display/Viewer/CMakeLists.txt" : {
      "ObjectId" : "bedaa15274ad43562fb83543bf9d35ec375b0d13",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Declare the plugin\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/image/generator/Checkerboard/CMakeLists.txt" : {
      "ObjectId" : "7bea4d4864e2872a87a95362f5defebc080b6f14",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Declare the plugin\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/image/generator/ColorBars/CMakeLists.txt" : {
      "ObjectId" : "4ea093e7f266f42635d05e1e51a6c2211dddb9d2",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Declare the plugin\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/image/generator/ColorCube/CMakeLists.txt" : {
      "ObjectId" : "1fad36b5ace14cab8a875be5e5a2c7111a34566b",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Declare the plugin\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/image/generator/ColorGradient/CMakeLists.txt" : {
      "ObjectId" : "58f5129bafc6326537583d360369f25c6d7ad1ff",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Declare the plugin\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/image/generator/ColorWheel/CMakeLists.txt" : {
      "ObjectId" : "54ce89a2f83d515fb2428b2e8d91ccd46ba0e4c8",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Declare the plugin\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# FIXME should get rid of this include\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "plugins/image/generator/Constant/CMakeLists.txt" : {
      "ObjectId" : "c219e8e730ddf634847fa6b30433972fa58c96d7",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Declare the plugin\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/image/generator/Ramp/CMakeLists.txt" : {
      "ObjectId" : "5d5b5613a8cd82115ea08dfd8ee9c381da1644ad",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Declare the plugin\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/image/generator/SeExpr/CMakeLists.txt" : {
      "ObjectId" : "69fccc6bcad93333099e4c4c31f4a6e304381fc5",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Declare the plugin\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/image/generator/Text/CMakeLists.txt" : {
      "ObjectId" : "15191c0bae45432f1015a391c3f9a8d4e17828eb",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Declare the plugin\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#tuttle_ofx_plugin_add_library(Text PythonLibs)\n\n# FIXME : add_library(PythonLibs) does not work because\n\n# FindPythonLibs defines variables prefixed with PYTHON_ instead of\n\n# PYTHONLIBS_ . The function tuttle_ofx_plugin_add_library assumes \n\n# the prefix is the name of the plugin \n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# So we use the classic way of including and linking \n\n#find_package(PythonLibs)\n\n#include_directories(${PYTHON_INCLUDE_DIRS})\n\n#target_link_libraries(Text ${PYTHON_LIBRARIES})\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Moreover, this plugin needs boost python\n\n#find_package(Boost 1.55.0 COMPONENTS python QUIET)\n\n#target_link_libraries(Text ${Boost_LIBRARIES})\n\n#tuttle_install_shared_libs(${Boost_LIBRARIES})\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# On linux\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# FIXME should get rid of this include\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "plugins/image/io/AudioVideo/CMakeLists.txt" : {
      "ObjectId" : "3b1c4e10840b3b95bebf7f7b7dc534a61b23dff1",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create target AudioVideo\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find ffmpeg libraries which are dependencies of avTranscoder\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Install ffmpeg libraries\n",
        "Line" : 10,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Build avTranscoder library\n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Add external libraries\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "plugins/image/io/Exr/CMakeLists.txt" : {
      "ObjectId" : "7371910fff505707e43dee5cf2ca6dd5e2e57d9f",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add external libraries\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/image/io/ImageMagick/CMakeLists.txt" : {
      "ObjectId" : "34d8d86d5c4c6a4f3267b22de318abc1100aa7e9",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add external libraries with specific components\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/image/io/Jpeg2000/CMakeLists.txt" : {
      "ObjectId" : "0a0bb5e1040fd538a99e5628e9d078abb253eb27",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add external libraries\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/image/io/MemoryBuffer/CMakeLists.txt" : {
      "ObjectId" : "9be7525b27673ff964ae7ee80bfa40d81ec4e9e4",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add external libraries\n\n#tuttle_ofx_plugin_add_library(MemoryBuffer sequenceParser)\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/image/io/OpenImageIO/CMakeLists.txt" : {
      "ObjectId" : "de1b9dc43a958f7a87309d0f7b60368e07b82847",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add external libraries\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# FIXME : as Terry needs to load half.h\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "plugins/image/io/Png/CMakeLists.txt" : {
      "ObjectId" : "aacf7d7fb273c39121a93cbabaef246eac833425",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Declare the plugin\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/image/io/Raw/CMakeLists.txt" : {
      "ObjectId" : "a57ae67d70ceb89f1d5ad2bff787f6fc1106351a",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Declare the plugin\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/image/process/channel/ChannelShuffle/CMakeLists.txt" : {
      "ObjectId" : "1381dc4bac38fff35f6be88229ed7e321a483226",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Declare the plugin\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/image/process/channel/Component/CMakeLists.txt" : {
      "ObjectId" : "a8744347e5499575121a715b25837537878077e7",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Declare the plugin\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/image/process/color/BasicKeyer/CMakeLists.txt" : {
      "ObjectId" : "17834837d31970152392bd776927e9e25f128cd7",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Declare the plugin\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/image/process/color/BitDepth/CMakeLists.txt" : {
      "ObjectId" : "4d8d9f58ee8c827ec2372b9c0f40797f7a8c5e6a",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Declare the plugin\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/image/process/color/CTL/CMakeLists.txt" : {
      "ObjectId" : "822da44548d70dda8d67f66c248dfeb448a45779",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Declare the plugin\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/image/process/color/ColorGradation/CMakeLists.txt" : {
      "ObjectId" : "30366bdd3a473cbe3dcc2308f89e8030718ccbdf",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Declare the plugin\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/image/process/color/ColorSpaceKeyer/CMakeLists.txt" : {
      "ObjectId" : "61d50a0d3e16ca730da4524b1b2a10dc00e58619",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Declare the plugin\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# FIXME should get rid of this include\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "plugins/image/process/color/ColorSuppress/CMakeLists.txt" : {
      "ObjectId" : "90599ad16a92c10ba81c11fd0476351bb2672a8a",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Declare the plugin\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/image/process/color/ColorTransfer/CMakeLists.txt" : {
      "ObjectId" : "1b3abecea9f8eccb0030baac8b400c53b3a921bd",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Declare the plugin\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/image/process/color/ColorTransform/CMakeLists.txt" : {
      "ObjectId" : "eddbcbb6d88b9e16e680d391f516bcb8382174b3",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Declare the plugin\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/image/process/color/Colorspace/CMakeLists.txt" : {
      "ObjectId" : "85703cb08d7f8a63607e482fa58cd72da9a21aac",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Declare the plugin\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/image/process/color/Gamma/CMakeLists.txt" : {
      "ObjectId" : "efcb593063f59e66fb86a8fa03fd03cf0137e718",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Declare the plugin\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/image/process/color/HistogramKeyer/CMakeLists.txt" : {
      "ObjectId" : "e7c17d7e6bf20d751a19e81bdbe930c4d09e4f9c",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Declare the plugin\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# FIXME should get rid of this include\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "plugins/image/process/color/IdKeyer/CMakeLists.txt" : {
      "ObjectId" : "e084759eff42392b914840763dd7609ea56459ad",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Declare the plugin\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/image/process/color/Invert/CMakeLists.txt" : {
      "ObjectId" : "dcf975e90b43a202af5b2db06959a99010284452",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Declare the plugin\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/image/process/color/Lut/CMakeLists.txt" : {
      "ObjectId" : "a0e67ad094065410e6d77e441afff5e59674e163",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Declare the plugin\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/image/process/color/Normalize/CMakeLists.txt" : {
      "ObjectId" : "4ef954460156255dbd69cd1f985c64bf53517e81",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Declare the plugin\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# FIXME should get rid of this include\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "plugins/image/process/color/OCIO/CMakeLists.txt" : {
      "ObjectId" : "5522b81afd366b5292308c455a6a78e4d3cef4ae",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Declare the plugin\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/image/process/color/Print/CMakeLists.txt" : {
      "ObjectId" : "8efd191c30049fd288886576dd76409f877e6881",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Declare the plugin\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/image/process/filter/AnisotropicDiffusion/CMakeLists.txt" : {
      "ObjectId" : "d689834ef4c54379b17b261ec8aa3284de3d14a2",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Declare the plugin\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/image/process/filter/Blur/CMakeLists.txt" : {
      "ObjectId" : "20b5b8e5e57349e3c558ec4bb3035ef4ad4eba2b",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Declare the plugin\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/image/process/filter/Convolution/CMakeLists.txt" : {
      "ObjectId" : "4f5cd33d977cd41a0c02b638ec49c7db9178d786",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Declare the plugin\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/image/process/filter/FloodFill/CMakeLists.txt" : {
      "ObjectId" : "d219b9ad66905db8687dff1d1169de2dcb26de2c",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Declare the plugin\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/image/process/filter/LocalMaxima/CMakeLists.txt" : {
      "ObjectId" : "37b8db4067fdbc2145ec987d572c6b2143764299",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Declare the plugin\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/image/process/filter/NlmDenoiser/CMakeLists.txt" : {
      "ObjectId" : "27a8880b175236696c2999b24e6cb5bb5c0a7b16",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Declare the plugin\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/image/process/filter/Sobel/CMakeLists.txt" : {
      "ObjectId" : "4204731b16c9e191fe0edc24b520229255f803fb",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Declare the plugin\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/image/process/filter/Thinning/CMakeLists.txt" : {
      "ObjectId" : "e067ba09428cf90df7fc84efde4596c0e036a5cf",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Declare the plugin\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/image/process/geometry/Crop/CMakeLists.txt" : {
      "ObjectId" : "524a341d6a66bcffea82b4f94012a03ae495df93",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Declare the plugin\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/image/process/geometry/Flip/CMakeLists.txt" : {
      "ObjectId" : "36b2ad5f30f517e8daaf40c040091274393d16c9",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Declare the plugin\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/image/process/geometry/LensDistort/CMakeLists.txt" : {
      "ObjectId" : "5d18a87f21efc402c67ee8eb5a5a79f594fd2067",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Declare the plugin\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/image/process/geometry/Move2D/CMakeLists.txt" : {
      "ObjectId" : "db5716e45ee52212176cfb1d4993b880494957f3",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Declare the plugin\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/image/process/geometry/Pinning/CMakeLists.txt" : {
      "ObjectId" : "f3249e3043a096f017a0c73770c4640fe93df0cb",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Declare the plugin\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/image/process/geometry/PushPixel/CMakeLists.txt" : {
      "ObjectId" : "9f5632677cc09fe4e33076a295d3cb22c1b44692",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Declare the plugin\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/image/process/geometry/Resize/CMakeLists.txt" : {
      "ObjectId" : "d45be5e436f26ad685b9136c3702cbcc451f6b6f",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Declare the plugin\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/image/process/geometry/Warp/CMakeLists.txt" : {
      "ObjectId" : "fca0c394ff8f3571dad6993cee67c737806095cc",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Declare the plugin\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/image/process/math/MathOperator/CMakeLists.txt" : {
      "ObjectId" : "d21b96b1076c32f308d95ff38f9b31dc4f753844",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Declare the plugin\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/image/process/time/TimeShift/CMakeLists.txt" : {
      "ObjectId" : "a5aef07fa5d1ffb042c9defa6547394c026a1719",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Declare the plugin\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/image/process/transition/Fade/CMakeLists.txt" : {
      "ObjectId" : "b7e2b7890d19bf6968b85f6c4838b501a9d4dc56",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Declare the plugin\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/image/process/transition/Merge/CMakeLists.txt" : {
      "ObjectId" : "e0354c29abb634af02c3dae3c24ffbcdb21e4a76",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# NOTE : boostHack must be included before boost for this plugin to compile\n\n# FIXME should get rid of this include\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Declare the plugin\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "plugins/param/analysis/Diff/CMakeLists.txt" : {
      "ObjectId" : "67fb7af893726bc55329f67abcaeaace78705e2f",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Declare the plugin\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/param/analysis/ImageStatistics/CMakeLists.txt" : {
      "ObjectId" : "03466e3173cdc780de2ad95b297fc64f65575e67",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Declare the plugin\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# FIXME should get rid of this include\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "plugins/param/debug/DebugImageEffectApi/CMakeLists.txt" : {
      "ObjectId" : "7c977769ee286979a7bc268c4f246dd70b32258f",
      "LastModified" : "2017-02-20T10:18:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros used to create an openfx plugin with tuttle\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Declare the plugin\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "CMAKE" : 88,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 1904
}