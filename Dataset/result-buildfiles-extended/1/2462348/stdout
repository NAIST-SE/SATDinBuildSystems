{
  "Repository" : "2462348",
  "Revision" : "HEAD",
  "ObjectId" : "42334bfbfffbb1530e69213199e775e54edbad21",
  "CommitTime" : "2019-03-25T07:07:33Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "6108f3c412678a7274493bd7ff5266f024534039",
      "LastModified" : "2019-03-25T07:07:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set up include-directories\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add sub-directories\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/CMakeLists.txt" : {
      "ObjectId" : "7a798700ef1a65f2e704f216aeab51ab5c91914c",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Note this file serves twofold purpose. It serves as a partial CMakefile\n\n# as part of complete mCtrl source tree, and it is also capable to work\n\n# as a standalone CMakefile when deployed with the directory examples into\n\n# a release binary package.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# === The stand-alone mode ==================================\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ===========================================================\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# By default, CMake uses -O3 for Release builds. Lets stick with safer -O2:\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# By default, mingw-w64 uses its own swprintf() implementation (for the\n\n# sake of standard compliance). This enforces swprintf() from MSVCRT.DLL:\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Enable DEP (data execution prevention) and ASLR (address space layout\n\n# randomization).\n\n# See https://lists.gnu.org/archive/html/bug-binutils/2015-09/msg00204.html\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# For 64-bit build, enable higher entropy for the memory relocations:\n",
        "Line" : 45,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 7
    },
    "lib/acutest/CMakeLists.txt" : {
      "ObjectId" : "4a741a424dd9e10e6b7f3bad30215d78098cffde",
      "LastModified" : "2019-03-19T18:13:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Specify proper C runtime library:\n",
        "Line" : 24,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Specify proper C runtime library:\n",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "lib/acutest/examples/CMakeLists.txt" : {
      "ObjectId" : "c4076c7f97335699872cb2781dee727287a1ad9d",
      "LastModified" : "2019-03-19T18:13:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/hsluv-c/CMakeLists.txt" : {
      "ObjectId" : "ed7895bec7a4858371a73a72e679bc1f4c100569",
      "LastModified" : "2019-03-19T18:34:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Disable warnings about the so-called unsecured functions:\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Specify proper C runtime library:\n",
        "Line" : 24,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "lib/hsluv-c/src/CMakeLists.txt" : {
      "ObjectId" : "731840280301bafcf8fdf1bb64e0c72f1319ba4a",
      "LastModified" : "2019-03-19T18:38:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# In Windows SDK, math functions are part of C runtime lib.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/hsluv-c/tests/CMakeLists.txt" : {
      "ObjectId" : "a26448f61acab9ffb75eb610d95d3777b6bf8781",
      "LastModified" : "2019-03-19T18:13:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/windrawlib/CMakeLists.txt" : {
      "ObjectId" : "6364e161d4707e040ee0b69b3e539ad4f98a1d13",
      "LastModified" : "2019-03-19T18:13:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set up include-directories\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add sub-directories\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "lib/windrawlib/examples/CMakeLists.txt" : {
      "ObjectId" : "4638c9bba52a9ce7e9a7ab8c9fdcf99a6d360b79",
      "LastModified" : "2019-03-19T18:13:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# By default, CMake uses -O3 for Release builds. Lets stick with safer -O2:\n",
        "Line" : 10,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "lib/windrawlib/src/CMakeLists.txt" : {
      "ObjectId" : "c6f4c645855d409c05a7787b0b1f39fc4952a175",
      "LastModified" : "2019-03-19T18:13:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tell <windows.h> to not include everything. We include what we need anyway\n\n# and this saves compiler a lot of work in the parsing stage, so compilation\n\n# is faster.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Enable COM interface preprocessor wrapper macros for C.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Detect gcc version:\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Enable many warnings:\n",
        "Line" : 51,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Use unicode (-W suffixed symbols):\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Use faster but less precise float math; it suffices for our purposes:\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# By default, CMake uses -O3 for Release builds. Lets stick with safer -O2:\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Disable warnings about the so-called unsecured functions:\n",
        "Line" : 64,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Use faster but less precise float math; it suffices for our purposes:\n",
        "Line" : 67,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Specify proper C runtime library:\n",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 10
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "ca7fd1b50ec1e6d57c92c43f70176937b048e999",
      "LastModified" : "2019-03-19T18:13:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Windows SDK libs\n\n# Libs distributed with us\n",
        "Line" : 46,
        "CharPositionInLine" : 56
      },
      "1" : {
        "Text" : "# Tell <windows.h> to not include everything. We include what we need anyway\n\n# and this saves compiler a lot of work in the parsing stage, so compilation\n\n# is faster.\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Enable COM interface preprocessor wrapper macros for C.\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Detect gcc version:\n",
        "Line" : 64,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Enable many warnings:\n",
        "Line" : 67,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Use unicode (-W suffixed symbols):\n",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Use faster but less precise float math; it suffices for our purposes:\n",
        "Line" : 73,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# With gcc >= 4.9, use LTO for Release builds:\n",
        "Line" : 76,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Ensure we do not depend on libgcc.dll and that our exported symbols\n\n# don't have undesired symbol decorations:\n",
        "Line" : 83,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# By default, mingw-w64 uses its own swprintf() implementation (for the\n\n# sake of standard compliance). This enforces swprintf() from MSVCRT.DLL:\n",
        "Line" : 88,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Enable DEP (data execution prevention) and ASLR (address space layout\n\n# randomization).\n\n# See https://lists.gnu.org/archive/html/bug-binutils/2015-09/msg00204.html\n",
        "Line" : 92,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# For 64-bit build, enable higher entropy for the memory relocations:\n",
        "Line" : 98,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# With gcc/binutils toolchain (e.g. mingw-w64), gcc option -Wl,--kill-at\n\n# results in unusable import lib because gcc/ld then un-decorates not just\n\n# DLL exports but unfortunately also import lib symbols. Hence lets create\n\n# the import lib manually below with gendef and dlltool.\n\n#\n\n# We assume 'gendef' and 'dlltool' are located in the same dir where\n\n# gcc is living.\n",
        "Line" : 103,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Disable warnings about the so-called unsecured functions:\n",
        "Line" : 130,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Use faster but less precise float math; it suffices for our purposes:\n",
        "Line" : 133,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Make sure strings in string table resource are zero-terminated.\n\n# (RC.EXE by default removes the zero terminators even if they are\n\n# explicitly specified in the resource script):\n",
        "Line" : 136,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# We provide our own manifest, so tell the linker to not generate it:\n",
        "Line" : 141,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# MSVC 6.0 does not expose GdiAlphaBlend() and friends from import lib\n\n# for GDI32.DLL. We have to use the wrappers from MSIMG32.DLL.\n\n# (See also preprocessor magic in mctrl/compat.h)\n",
        "Line" : 144,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Specify proper C runtime library:\n",
        "Line" : 151,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 19
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "e36ef02bd43e39786f4ab6c5bc9257bdf3330083",
      "LastModified" : "2019-03-19T18:13:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# all tests but test-build.exe link with mCtrl.dll\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 12
  },
  "ElapsedTime" : 984
}