{
  "Repository" : "22045033",
  "Revision" : "HEAD",
  "ObjectId" : "69f900a778e56dc3446d29af5d63fc0a26ff3774",
  "CommitTime" : "2019-04-15T17:43:43Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "daaaee0b8a65b259df9becbf2e54a5be788058d9",
      "LastModified" : "2018-05-11T01:12:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#need 3.1 for \"cmake -E env\" command\n",
        "Line" : 1,
        "CharPositionInLine" : 36
      },
      "1" : {
        "Text" : "#version number\n\n#---------------------------------------------------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# initialization and include paths\n\n#---------------------------------------------------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "#now enable the languages\n",
        "Line" : 17,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "#CPack setup\n\n# --------------------------------------------------------------------\n",
        "Line" : 39,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "#set(ICO_ICON ${CMAKE_SOURCE_DIR}/amber.ico)\n\n#set(ICO_UNINSTALL_ICON ${CMAKE_SOURCE_DIR}/amber-uninstall.ico)\n\n#set(ICNS_ICON ${CMAKE_SOURCE_DIR}/cmake-packaging/amber_logo.icns)\n\n#set(OSX_STARTUP_SCRIPT ${CMAKE_SOURCE_DIR}/cmake-packaging/osx-startup-script.sh)\n",
        "Line" : 44,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# header installation option\n",
        "Line" : 52,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# on Windows, make MSVC auto-create import libraries just like MinGW does\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#--------------------------------------------------------------\t\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "Makefile" : {
      "ObjectId" : "99264b583584c65af560db421fb857cbfc4e2d29",
      "LastModified" : "2016-05-02T20:53:29Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# CPPTRAJ - Main makefile\n\n# Daniel R. Roe\n\n# 2014-12-10\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Make all targets\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Install all targets \n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Create libcpptraj.so\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Run Tests\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Clean up\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remove cpptraj binary\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "05104e2f2031751b619d26b4c72969d550cf65d7",
      "LastModified" : "2019-03-01T15:33:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n# Parse cpptrajfiles\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# read each non-empty line into an element of a list\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# get rid of backslashes\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# name of list that we are curreently appending to\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ignore comment lines\n",
        "Line" : 17,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# extract the name of the source file mentioned in the line (a string after whitespace or an equals sign)\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# get name of variable that the following list is being set to\n\n# must exclude parentheses so that we don't match dereferences of other variables\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# if we are starting a new source list, update LIST_NAME accordingly\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# did we get a new source file?\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# get rid of LIBCPPTRAJ.o suffix if it exists\n",
        "Line" : 40,
        "CharPositionInLine" : 3
      },
      "10" : {
        "Text" : "#message(\"\\\"${LINE}\\\" - SFN: \\\"${SOURCE_FILE_NAME}\\\" - VN: \\\"${VARIABLE_NAME}\\\"\")\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# The above loop will create the folowing variables:\n\n# COMMON_SOURCES - all C++ source files used for both cpptraj and libcpptraj, that are compiled the same way for both\n\n# CSOURCES - all C source files used for cpptraj and libcpptraj\n\n# SOURCES - C++ sources for cpptraj only\n\n# LIBCPPTRAJ_OBJECTS - C++ sources for libcpptraj that should be compiled with the LIBCPPTRAJ definition \n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# pub_fft.F90 is not in the source lists\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#---------------------------------------------------------------------------------------------------------------------------------------------------------------------\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#---------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n#add the common object library\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#concatenate all the source files\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# we only need pubfft if we don't have FFTW\n",
        "Line" : 79,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "#normally this would be applied by target_link_libraries, but since we use that intermediary object library, we have to apply it manually\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# NOTE: there is a CMake bug where if we were to set these as a directory-scope includes, the CUDA build would fail on some platforms with old versions of CMake\n\n# it turns out that CMake's cuda library passes the include paths after the first one from each of these generator expressions to nvcc without the -I flag\n\n# This causes the error \"A single input file is required for a non-link phase when an outputfile is specified\"\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#---------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n# cpptraj executable\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#------------------------------------------------------------------------------------------\n\n# libcpptraj library\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#tell others where to find the cpptraj includes\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#------------------------------------------------------------------------------------------\n\n# DLL exports/imports\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# CMake automatically sets up the libcpptraj_EXPORTS definition for libcpptraj.\n\n# We just have to apply it to the common obj as well.\n",
        "Line" : 118,
        "CharPositionInLine" : 1
      },
      "24" : {
        "Text" : "# now set up the definition for other people to use\n",
        "Line" : 122,
        "CharPositionInLine" : 1
      },
      "25" : {
        "Text" : "#------------------------------------------------------------------------------------------\n\n# Header installation\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# grab all .h files from the main directory.\n",
        "Line" : 130,
        "CharPositionInLine" : 1
      },
      "27" : {
        "Text" : "# also grab xdrfile headers since some of them are used by cpptraj headers\n",
        "Line" : 134,
        "CharPositionInLine" : 1
      },
      "28" : {
        "Text" : "# configure SymbolExporting.h specially for the current install type\n",
        "Line" : 140,
        "CharPositionInLine" : 1
      },
      "29" : {
        "Text" : "#---------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n#Deal with external libraries\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# NOTE: you CANNOT set any directory-scope include directories that use generator expressions here.\n\n# These expressions get propagated down into the cuda_kernels subdir, and trigger an undocumented bug in old versions of CMake\n\n# where they get passed to nvcc without a -I prefix, breaking everything.  So please don't do it.\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#readline\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#xdrfile\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# libsander\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#add the sander-specific definitions and libraries\n",
        "Line" : 189,
        "CharPositionInLine" : 1
      },
      "35" : {
        "Text" : "# arpack\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# --------------------------------------------------------------------\n\n# Parallel Versions\n\n# --------------------------------------------------------------------\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# since we use CXX mpi, we have to define this manually\n",
        "Line" : 209,
        "CharPositionInLine" : 112
      },
      "38" : {
        "Text" : "# CUDA\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# since we use CXX mpi, we have to define this manually\n",
        "Line" : 254,
        "CharPositionInLine" : 128
      },
      "40" : {
        "Text" : "# THE ULTIMATE CHIMERA!!!!! Muahahahaha!\n",
        "Line" : 270,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 41
    },
    "src/Makefile" : {
      "ObjectId" : "a13d0f507f27086344f746b0c6d98a02aaeb34dd",
      "LastModified" : "2019-03-04T20:02:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Cpptraj standalone Makefile\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Default target: cpptraj only\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Install all targets\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Cpptraj ------------------------------\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# libcpptraj ---------------------------\n\n# Rule to make libcpptraj-specific objects\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# nproc --------------------------------\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Internal object/library targets\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Dependency targets\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Clean/uninstall targets\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Header dependencies\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "src/arpack/Makefile" : {
      "ObjectId" : "d7be447233c82badf5bc1c845cd8740105266a7a",
      "LastModified" : "2019-03-04T20:02:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for ARPACK bundled with cpptraj\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/cuda_kernels/CMakeLists.txt" : {
      "ObjectId" : "8739581321f165ad5b7088121a9bc202d22857da",
      "LastModified" : "2017-09-28T16:29:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/cuda_kernels/Makefile" : {
      "ObjectId" : "46b44bdb93130b07fa93129e3dcaf31d6b1dfa75",
      "LastModified" : "2019-03-04T20:02:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for cpptraj cuda sources\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Variables\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# General rules\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Source files\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Objects\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Specific rules\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Dependencies\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "src/readline/Makefile" : {
      "ObjectId" : "c923c7d48e40cb40a221408bf99688a56347eac4",
      "LastModified" : "2019-03-04T20:02:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for readline bundled with cpptraj.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Dependencies\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/xdrfile/CMakeLists.txt" : {
      "ObjectId" : "d974c7d7746909f919f3daff2c5056edf9c92c51",
      "LastModified" : "2017-07-26T14:06:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#AMBER CMake buildfile for xdrfile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#------------------------------------------------------------------------------------------\n\n#I assume that this library should be optimized\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# xdrfile is not set up to build as a Windows shared library.  Someone would need to add dll exports to all of the symbols (bluh)\n",
        "Line" : 9,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 3
    },
    "src/xdrfile/Makefile" : {
      "ObjectId" : "1f352d91d9c21f550165de6e0fb294055adfc4ed",
      "LastModified" : "2019-03-04T20:02:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for xdrfile bundled with cpptraj\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Variables\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Source files\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Objects\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Specific rules\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Dependencies\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "f87cbfea32b78caabe2b27ba9596c12734174f18",
      "LastModified" : "2017-09-28T16:29:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# install to full path inside AmberTools directory\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# install to top-level dir\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "test/Makefile" : {
      "ObjectId" : "b3b4e7f3cc20f0e7349ab917ed302fd7395c7a12",
      "LastModified" : "2019-03-04T20:02:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Test makefile for cpptraj\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Every test target should go here.\n",
        "Line" : 450,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "util/Makefile" : {
      "ObjectId" : "27f8a0663b6d767071d2686c10f1b2ba120bee94",
      "LastModified" : "2018-05-11T01:12:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Misc utility programs for CPPTRAJ tests, etc\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 5,
    "MAKEFILE" : 8
  },
  "ElapsedTime" : 5776
}