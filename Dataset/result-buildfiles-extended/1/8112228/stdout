{
  "Repository" : "8112228",
  "Revision" : "HEAD",
  "ObjectId" : "b015d971fe1b467e78877f2379ac437bfe30cfe7",
  "CommitTime" : "2015-06-12T20:50:47Z",
  "Files" : {
    "docs/Makefile" : {
      "ObjectId" : "3e9ad0831be1c9d70a96aca152d12b2b396beae5",
      "LastModified" : "2014-08-01T10:01:47Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Internal variables.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "operators/ACVDOperators/CMakeLists.txt" : {
      "ObjectId" : "51989dc07eacf21ef82193c0570c4740bba63650",
      "LastModified" : "2015-02-12T13:44:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Modules\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "################################################################################\n\n# Dependencies: \n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "################################################################################\n\n# Guard\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "################################################################################\n\n# MiscMeshOperators\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#message(\"BRANCH: ${ACVD_BRANCH}\")\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Name for custom target\n",
        "Line" : 50,
        "CharPositionInLine" : 30
      },
      "6" : {
        "Text" : "# Root dir for entire project   \n",
        "Line" : 51,
        "CharPositionInLine" : 31
      },
      "7" : {
        "Text" : "# URL of git repo\n",
        "Line" : 52,
        "CharPositionInLine" : 76
      },
      "8" : {
        "Text" : "# Git branch name, commit id or tag   \n",
        "Line" : 53,
        "CharPositionInLine" : 33
      },
      "9" : {
        "Text" : "# pass VTK_DIR \n",
        "Line" : 56,
        "CharPositionInLine" : 27
      },
      "10" : {
        "Text" : "# not needed if make install\n",
        "Line" : 57,
        "CharPositionInLine" : 32
      },
      "11" : {
        "Text" : "#LOG_DOWNLOAD 1            # Wrap download in script to log output\n\n#    LOG_UPDATE 1              # Wrap update in script to log output\n\n#    LOG_CONFIGURE 1           # Wrap configure in script to log output\n\n#    LOG_BUILD 1               # Wrap build in script to log output\n\n#    LOG_TEST 1                # Wrap test in script to log output\n\n#    LOG_INSTALL 1             # Wrap install in script to log output \n",
        "Line" : 61,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# not possible, because only known after build time\n\n#FIND_PACKAGE(vtkDiscreteRemeshing)\n\n#FIND_PACKAGE(vtkSrface)\n\n#FIND_PACKAGE(vtkVolumeProcessing)\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#for iohelper:\n",
        "Line" : 148,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# external project ACVD\n",
        "Line" : 150,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "############################################################################\n\n## Testing\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#FILE( GLOB_RECURSE  TEST_FILES test/*)\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "operators/Base/CMakeLists.txt" : {
      "ObjectId" : "84032fa5398b8314487adadfe2696a59be78bdd2",
      "LastModified" : "2015-02-12T13:44:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n# Dependencies: \n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "################################################################################\n\n# Guard\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "################################################################################\n\n# TetgenOperators \n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "operators/CGALOperators/CMakeLists.txt" : {
      "ObjectId" : "d9817c5c9219a06a53ad3e7e682ba46396f10d5b",
      "LastModified" : "2015-02-12T13:44:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n# Dependencies: \n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "################################################################################\n\n# Guard\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "################################################################################\n\n## CGalOperators\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# weigl: h√§?\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# /bigobj is required for CGAL builds for windows\n",
        "Line" : 82,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "############################################################################\n\n## Testing\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "operators/CLI/CMakeLists.txt" : {
      "ObjectId" : "cccb8dad2a211101ffc0ec517fc77628a918d38a",
      "LastModified" : "2014-08-01T10:01:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "operators/CMake/FindACVD.cmake" : {
      "ObjectId" : "8177754fa5c71369a3bbab8104d3ba4fb64a1431",
      "LastModified" : "2015-02-12T13:44:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(ACVD_INCLUDE_PATHS \"/usr/include\")\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "operators/CMake/FindJNI.cmake" : {
      "ObjectId" : "70aa72bb4a03a74c95b6cab1b2ef0c87708bb248",
      "LastModified" : "2015-02-12T13:44:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is a modified version of FindJNI.cmake which lets it work with\n\n# Oracle Java 7 in Ubuntu 13.04.\n\n# The file at /usr/share/cmake-2.8/Modules/FindJNI.cmake should be\n\n# overwritten with this file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Find JNI java libraries.\n\n# This module finds if Java is installed and determines where the\n\n# include files and libraries are. It also determines what the name of\n\n# the library is. This code sets the following variables:\n\n#\n\n#  JNI_INCLUDE_DIRS      = the include dirs to use\n\n#  JNI_LIBRARIES         = the libraries to use\n\n#  JNI_FOUND             = TRUE if JNI headers and libraries were found.\n\n#  JAVA_AWT_LIBRARY      = the path to the jawt library\n\n#  JAVA_JVM_LIBRARY      = the path to the jvm library\n\n#  JAVA_INCLUDE_PATH     = the include path to jni.h\n\n#  JAVA_INCLUDE_PATH2    = the include path to jni_md.h\n\n#  JAVA_AWT_INCLUDE_PATH = the include path to jawt.h\n\n#\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#=============================================================================\n\n# Copyright 2001-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Expand {libarch} occurences to java_libarch subdirectory(-ies) and set ${_var}\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Determine java arch-specific library subdir\n\n# Mostly based on openjdk/jdk/make/common/shared/Platform.gmk as of openjdk\n\n# 1.6.0_18 + icedtea patches. However, it would be much better to base the\n\n# guess on the first part of the GNU config.guess platform triplet.\n",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Subdir is \"arm\" for both big-endian (arm) and little-endian (armel).\n",
        "Line" : 47,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# mips* machines are bi-endian mostly so processor does not tell\n\n# endianess of the underlying system.\n",
        "Line" : 50,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Both flavours can run on the same processor\n",
        "Line" : 58,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# s390 binaries can run on s390x machines\n",
        "Line" : 63,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Append default list architectures if CMAKE_SYSTEM_PROCESSOR was empty or\n\n# system is non-Linux (where the code above has not been well tested)\n",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Sometimes ${CMAKE_SYSTEM_PROCESSOR} is added to the list to prefer\n\n# current value to a hardcoded list. Remove possible duplicates.\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# can this one be removed according to #8821 ? Alex\n",
        "Line" : 121,
        "CharPositionInLine" : 59
      },
      "12" : {
        "Text" : "# fedora\n",
        "Line" : 123,
        "CharPositionInLine" : 67
      },
      "13" : {
        "Text" : "# Debian specific paths for default JVM\n",
        "Line" : 124,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# This is to add Oracle Java 7 support.\n",
        "Line" : 128,
        "CharPositionInLine" : 47
      },
      "15" : {
        "Text" : "# can this one be removed according to #8821 ? Alex\n",
        "Line" : 154,
        "CharPositionInLine" : 49
      },
      "16" : {
        "Text" : "# Debian specific path for default JVM\n",
        "Line" : 160,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# This is to add Oracle Java 7 support.\n",
        "Line" : 162,
        "CharPositionInLine" : 37
      },
      "18" : {
        "Text" : "# If using \"-framework JavaVM\", prefer its headers *before* the others in\n\n# JAVA_AWT_INCLUDE_DIRECTORIES... (*prepend* to the list here)\n\n#\n",
        "Line" : 208,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# add in the include path\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "operators/CMake/FindNETGEN.cmake" : {
      "ObjectId" : "d83cc4c7530af797eb2eed3401c531c3f68abb9c",
      "LastModified" : "2015-02-12T13:44:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(NETGEN_INCLUDE_PATHS \"/usr/include\")\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "operators/CMake/FindPackageHandleStandardArgs.cmake" : {
      "ObjectId" : "89f987834965ad8ee47bbb0b24669ce1ea05c232",
      "LastModified" : "2015-02-12T13:44:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIND_PACKAGE_HANDLE_STANDARD_ARGS(NAME (DEFAULT_MSG|\"Custom failure message\") VAR1 ... )\n\n#    This macro is intended to be used in FindXXX.cmake modules files.\n\n#    It handles the REQUIRED and QUIET argument to FIND_PACKAGE() and\n\n#    it also sets the <UPPERCASED_NAME>_FOUND variable.\n\n#    The package is found if all variables listed are TRUE.\n\n#    Example:\n\n#\n\n#    FIND_PACKAGE_HANDLE_STANDARD_ARGS(LibXml2 DEFAULT_MSG LIBXML2_LIBRARIES LIBXML2_INCLUDE_DIR)\n\n#\n\n#    LibXml2 is considered to be found, if both LIBXML2_LIBRARIES and \n\n#    LIBXML2_INCLUDE_DIR are valid. Then also LIBXML2_FOUND is set to TRUE.\n\n#    If it is not found and REQUIRED was used, it fails with FATAL_ERROR, \n\n#    independent whether QUIET was used or not.\n\n#    If it is found, the location is reported using the VAR1 argument, so \n\n#    here a message \"Found LibXml2: /usr/lib/libxml2.so\" will be printed out.\n\n#    If the second argument is DEFAULT_MSG, the message in the failure case will \n\n#    be \"Could NOT find LibXml2\", if you don't like this message you can specify\n\n#    your own custom failure message there.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "operators/CMake/FindTETGEN.cmake" : {
      "ObjectId" : "639538811f099eecbeda5c360eed287b4fa24aeb",
      "LastModified" : "2015-02-12T13:44:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(TETGEN_INCLUDE_PATHS \"$ENV{TETGEN_PATH}\" \"/opt/TETGEN/include/TETGEN3\" \"/usr/include\")\n\n#set(TETGEN_LIB_PATHS \"$ENV{TETGEN_PATH}/lib\" \"/opt/TETGEN/lib\" \"/usr/lib/\")\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "operators/CMake/FindVCG.cmake" : {
      "ObjectId" : "cc4fe945618f0c1351480f7c390a7ef46b389149",
      "LastModified" : "2015-02-12T13:44:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "operators/CMakeLists.txt" : {
      "ObjectId" : "4877dc33cefe0a2a56100061fb0c33529428d097",
      "LastModified" : "2015-04-16T14:36:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#########################\n\n# Set default Build Type to Debug\n\n#########################\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++0x\")\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "## Activating c++0x for gcc \n\n## currently supported by VTK6.X (bug)\n\n#SET(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++0x\") \n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# for deactivating the rpath within shared object (runtime path defines places\n\n# for loading libraries as abspaths)\n\n#message(\"CMAKE does not set RPATH, please adapt your LD_LIBRARY_PATH\")\n\n#set(CMAKE_SKIP_RPATH true)\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Find VTK\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# SWIG\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#SWIG options\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Find Python\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# linux workaround:\n",
        "Line" : 61,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# Find Boost\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#message(\"Include dirs of Boost : \" ${Boost_INCLUDE_DIR} )\n\n#message(\"cmake module path: \" ${CMAKE_MODULE_PATH} )\n\n#message(\"Booth2 python library: \" ${Boost_PYTHON_LIBRARY} )\n\n#MESSAGE(\"Boost Libraries = \" ${Boost_LIBRARIES})  \n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#########################\n\n# Testing \n\n#########################\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#########################\n\n# Misc Options\n\n#########################\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)\n\n# deprecated\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#SET(BUILD_SHARED_LIBS ON)\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#SET(CMAKE_PYTHON_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/../MSML_Python\n\n#    CACHE PATH \"Choose the test data path.\")\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "################################################################################\n\n## Macro\n\n#\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# options\n",
        "Line" : 148,
        "CharPositionInLine" : 9
      },
      "18" : {
        "Text" : "# single arg\n",
        "Line" : 149,
        "CharPositionInLine" : 21
      },
      "19" : {
        "Text" : "# multi arg\n",
        "Line" : 150,
        "CharPositionInLine" : 24
      },
      "20" : {
        "Text" : "################################################################################\n\n## Modules\n\n# \n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "operators/MiscMeshOperators/CMakeLists.txt" : {
      "ObjectId" : "cc8693648f9190cfa410f8890fb5a5c7fc9d4dbc",
      "LastModified" : "2015-02-12T13:44:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n# Dependencies: \n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "################################################################################\n\n# Guard\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "################################################################################\n\n# MiscMeshOperators\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "############################################################################\n\n## Testing\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#FILE( GLOB_RECURSE  TEST_FILES test/*)\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "operators/NetgenOperators/CMakeLists.txt" : {
      "ObjectId" : "a3ac72879878dd26b47f17ae70f780cd2b998de9",
      "LastModified" : "2015-02-12T13:44:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n# Dependencies: \n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "################################################################################\n\n# Guard\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "################################################################################\n\n# NetgenOperators \n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#message(\"NETGEN libraries are ${NetgenOperators_LIBS}\")\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "operators/TetgenOperators/CMakeLists.txt" : {
      "ObjectId" : "528732e612889826bd7f03b48200df8145aa0ba7",
      "LastModified" : "2015-02-12T13:44:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n# Dependencies: \n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "################################################################################\n\n# Guard\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "################################################################################\n\n# TetgenOperators \n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "operators/VCGOperators/CMakeLists.txt" : {
      "ObjectId" : "b354aaa12a28504e5ac6560aa330f10166471fb8",
      "LastModified" : "2015-05-25T20:04:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Modules\n",
        "Line" : 1,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "################################################################################\n\n# Dependencies:\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "################################################################################\n\n# Guard\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "################################################################################\n\n# External Dependencies:\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Name for custom target\n",
        "Line" : 34,
        "CharPositionInLine" : 27
      },
      "6" : {
        "Text" : "#[DEPENDS projects...]       # Targets on which the project depends\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Root dir for entire project\n",
        "Line" : 36,
        "CharPositionInLine" : 28
      },
      "8" : {
        "Text" : "#GIT_REPOSITORY  http://github.com/CognitionGuidedSurgery/ACVD.git       # URL of git repo\n\n#GIT_TAG master              # Git branch name, commit id or tag\n",
        "Line" : 37,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#[SOURCE_DIR dir]            # Source dir to be used for build\n\n#[CONFIGURE_COMMAND cmd...]  # Build tree configuration command\n\n#[CMAKE_COMMAND /.../cmake]  # Specify alternative cmake executable\n\n#[CMAKE_GENERATOR gen]       # Specify generator for native build\n\n#[CMAKE_GENERATOR_TOOLSET t] # Generator-specific toolset name\n\n#[CMAKE_ARGS args...]        # Arguments to CMake command line\n\n#CMAKE_ARGS -DCMAKE_INSTALL_PREFIX:PATH=<INSTALL_DIR>\n\n#           -DCMAKE_SKIP_RPATH:BOOL=1\n\n#[CMAKE_CACHE_ARGS args...]  # Initial cache arguments, of the form -Dvar:string=on\n",
        "Line" : 45,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#--Build step-----------------\n",
        "Line" : 54,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "#[BINARY_DIR dir]            # Specify build dir location\n\n#[BUILD_COMMAND cmd...]      # Command to drive the native build\n\n#[BUILD_IN_SOURCE 1]         # Use source dir for build dir\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "#--Install step---------------\n\n#INSTALL_DIR dir           # Installation prefix\n",
        "Line" : 58,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "#[INSTALL_COMMAND cmd...]    # Command to drive install after build\n",
        "Line" : 60,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "#--Test step------------------\n",
        "Line" : 61,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "#[TEST_BEFORE_INSTALL 1]     # Add test step executed before install step\n\n#[TEST_AFTER_INSTALL 1]      # Add test step executed after install step\n\n#[TEST_COMMAND cmd...]       # Command to drive test\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "#--Output logging-------------\n",
        "Line" : 65,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "# Wrap download in script to log output\n\n# Wrap update in script to log output\n\n# Wrap configure in script to log output\n\n# Wrap build in script to log output\n\n# Wrap test in script to log output\n\n# Wrap install in script to log output\n",
        "Line" : 66,
        "CharPositionInLine" : 28
      },
      "18" : {
        "Text" : "################################################################################\n\n# MiscMeshOperators\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#SET(CMAKE_MODULE_PATH \"${CMAKE_MODULE_PATH} ${install_dir}/lib/CMake/VCG/\" )\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#for iohelper:\n",
        "Line" : 99,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# external project VCG\n",
        "Line" : 102,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 22
    }
  },
  "FileTypes" : {
    "CMAKE" : 15,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 1589
}