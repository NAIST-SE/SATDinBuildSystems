{
  "Repository" : "72367169",
  "Revision" : "HEAD",
  "ObjectId" : "ac0c1fde587c22411bdca84fdc19cb955a59e052",
  "CommitTime" : "2019-04-11T12:58:54Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "281c39b4e76369384dc87e50cec84776713bb546",
      "LastModified" : "2019-02-15T08:39:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ccache\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If not cross-compiling, we can build cpp_rsc.\n",
        "Line" : 41,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# For cross-compilation, re-use the binary from default.\n",
        "Line" : 44,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 3
    },
    "Makefile" : {
      "ObjectId" : "1c1a564f5cd5e34c0c048282c7bd7599bd5798af",
      "LastModified" : "2019-02-06T09:47:44Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile to build the Dronecode SDK library\n\n#\n\n# The targets are mostly for convenience around cmake.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Don't show make output about changing directories\n",
        "Line" : 7,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Check for ninja and use it if available\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Mac OS\n",
        "Line" : 20,
        "CharPositionInLine" : 20
      },
      "4" : {
        "Text" : "# Get additional arguments after target argument. (e.g. make release install)\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# and turn them into do-nothing targets\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Default is \"Debug\", also possible is \"Release\"\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Default is no DROPDEBUG\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# To enable MAVLink passthrough plugin build\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Set default cmake here but replace with special version for Android build.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Function to create build_* directory and call make there.\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# We need cmake from the Android SDK (currently at 3.6 because 3.7 fails the test).\n",
        "Line" : 176,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 12
    },
    "backend/CMakeLists.txt" : {
      "ObjectId" : "9f42088d7b9776c54c72f26b8fa6dfdead4a7e6f",
      "LastModified" : "2018-08-30T00:58:59Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "backend/cmake/helpers/build_boringssl.cmake" : {
      "ObjectId" : "d7724d6fd9b01706f7453020600b4fbda92c6d6a",
      "LastModified" : "2018-03-06T15:08:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Manually install boringssl\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "backend/cmake/helpers/build_cares.cmake" : {
      "ObjectId" : "e2ae35a183442258da11368d5edfe26cf7295fed",
      "LastModified" : "2018-03-06T15:08:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set c-ares variables\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Actually build c-ares\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Update CMAKE_PREFIX_PATH accordingly\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "backend/cmake/helpers/build_external.cmake" : {
      "ObjectId" : "cd885a572de6268489cff8406028e5d23c1ece64",
      "LastModified" : "2018-03-06T15:08:04Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "backend/cmake/helpers/build_grpc.cmake" : {
      "ObjectId" : "bcb94b215e276ac81425d22c68471345e9629bfd",
      "LastModified" : "2018-03-06T15:08:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set gRPC variables\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Actually build gRPC\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Include gRPCConfig.cmake\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "backend/cmake/helpers/build_protobuf.cmake" : {
      "ObjectId" : "682f34de2d561aac41901fc90c8bb96caf4d2001",
      "LastModified" : "2018-03-06T15:08:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set protobuf variables\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Actually build protobuf\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Update CMAKE_PREFIX_PATH accordingly\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "backend/cmake/helpers/build_target.cmake" : {
      "ObjectId" : "1bc0a7d9ddb8a3b3d79abd21f0e1536e9e4d66fd",
      "LastModified" : "2018-08-30T00:58:59Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "backend/cmake/third_party/boringssl/CMakeLists.txt" : {
      "ObjectId" : "1daee1a0e9fbaac4adc7bdc1847ee7688181a2fe",
      "LastModified" : "2019-02-25T08:43:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Note: https://github.com/grpc/grpc/issues/9440\n",
        "Line" : 44,
        "CharPositionInLine" : 32
      },
      "1" : {
        "Text" : "# We disable ASM optimizations for MSVC and iOS (see above for iOS), which \n\n# might have a performance impact on secure communications.\n\n# This should be benchmarked/evaluated before we decide if it is worth \n\n# enabling them or not in our case.\n\n#\n\n# More information here:  https://github.com/grpc/grpc/issues/9440\n",
        "Line" : 47,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "backend/cmake/third_party/cares/CMakeLists.txt" : {
      "ObjectId" : "cf7c4d8470ca0d4d30c2c00ff43c448f5f70e370",
      "LastModified" : "2019-02-25T08:43:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "backend/cmake/third_party/grpc/CMakeLists.txt" : {
      "ObjectId" : "8b0a76202b8b93d4ae22245e64aea09928479876",
      "LastModified" : "2019-03-27T13:02:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This answer probably saved me from destroying my computer:\n\n# https://stackoverflow.com/questions/45414507/pass-a-list-of-prefix-paths-to-externalproject-add-in-cmake-args\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "backend/cmake/third_party/protobuf/CMakeLists.txt" : {
      "ObjectId" : "8fa6da2138398a105e272c0b25a31c99ef82426d",
      "LastModified" : "2019-02-25T08:43:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "backend/src/CMakeLists.txt" : {
      "ObjectId" : "fbbfc562f6c045835f2e2b0a0b649ed9fa2fdd81",
      "LastModified" : "2019-03-27T13:02:08Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "backend/src/cmake/compile_proto.cmake" : {
      "ObjectId" : "882b554771e8a5a614e1a2fb3014b2552219af74",
      "LastModified" : "2019-02-25T08:43:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "backend/test/CMakeLists.txt" : {
      "ObjectId" : "3318c40dfff2f9c4a718a7d0116242c49256b738",
      "LastModified" : "2019-03-27T13:02:08Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/compiler_flags.cmake" : {
      "ObjectId" : "d2ce34a68a0d05cf496f89a1ce695518a84cab32",
      "LastModified" : "2019-02-25T08:43:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We need this so Windows links to e.g. dronecode_sdk_telemetry.dll.\n\n# Without this option it will look for dronecode_sdk_telemetry.lib and fail.\n",
        "Line" : 6,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# We are not using exceptions to make it easier to write wrappers.\n",
        "Line" : 10,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Otherwise tinyxml2 complains.\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Add DEBUG define for Debug target because that is not done automatically.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/curl.cmake" : {
      "ObjectId" : "0ba5b6d3aa48f45045269cd83f9409197264dcb5",
      "LastModified" : "2019-04-11T10:14:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# core and some plugins require curl\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You need to call cmake with -DWIN_CURL_INCLUDE_DIR:STRING=\"C:\\\\curl-7.54.1\\\\include\"\n",
        "Line" : 9,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Strangely with curl 7.64.1 the following libs are required additionally to avoid linking errors.\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "cmake/tinyxml2.cmake" : {
      "ObjectId" : "83526d96008d8f491f509681e6e893d8f61b668b",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We need tinyxml2 for the camera definition parsing.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We save the value of BUILD_STATIC_LIBRARY and BUILD_SHARED_LIBRARY before altering them\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This trick is needed with the cache as it is an option of tinyxml2,\n\n# and tinyxml2 is used as a submodule\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Being linked to a shared lib later, tinyxml2_static needs to be compiled with -fPIC\n\n# Same trick here, we don't want to set -fPIC outside of this file\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Actually include tinyxml2\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# We set CMAKE_POSITION_INDEPENDENT_CODE back to what it was before including this file\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# We set BUILD_STATIC_LIBRARY back to what it was before including this file\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cmake/unit_tests.cmake" : {
      "ObjectId" : "13b9f3bb74084c93563bcdeb22b9a1e7b6240c4a",
      "LastModified" : "2019-02-25T08:43:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/zlib.cmake" : {
      "ObjectId" : "acdd19c650281c34a5c58fee3dea363e56efe3d8",
      "LastModified" : "2019-02-25T08:43:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "core/CMakeLists.txt" : {
      "ObjectId" : "6a63577b081a1c37ddb18454997ad3d4323c2abc",
      "LastModified" : "2019-02-25T08:43:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Link to Windows networking lib.\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO: not sure if this is needed\n\n#EXPORT dronecode_sdk-targets\n",
        "Line" : 76,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# TODO: add this again\n\n#${PROJECT_SOURCE_DIR}/core/http_loader_test.cpp\n",
        "Line" : 101,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "example/CMakeLists.txt" : {
      "ObjectId" : "785d3dc84f05d1349d53e7c6af6c389f7c919705",
      "LastModified" : "2019-02-25T08:43:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This allows to build all examples at once.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "example/battery/CMakeLists.txt" : {
      "ObjectId" : "ca8d2993085ce58a136c7ac668fc7d0ce1fa7405",
      "LastModified" : "2019-03-27T13:17:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This warning is triggered by the MAVLink includes.\n",
        "Line" : 7,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Line below required if /usr/local/include is not in your default includes\n\n#include_directories(/usr/local/include)\n\n# Line below required if /usr/local/lib is not in your default linker path\n\n#link_directories(/usr/local/lib)\n",
        "Line" : 9,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "example/calibrate/CMakeLists.txt" : {
      "ObjectId" : "08bb23d7ce1385665f69affba9e323a5c515cff4",
      "LastModified" : "2019-02-25T08:43:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Line below required if /usr/local/include is not in your default includes\n\n#include_directories(/usr/local/include)\n\n# Line below required if /usr/local/lib is not in your default linker path\n\n#link_directories(/usr/local/lib)\n",
        "Line" : 7,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "example/fly_mission/CMakeLists.txt" : {
      "ObjectId" : "7390abfd78f91d30bbd3e6b4f7d15f0fa1f06918",
      "LastModified" : "2019-02-25T08:43:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Line below required if /usr/local/include is not in your default includes\n\n#include_directories(/usr/local/include)\n\n# Line below required if /usr/local/lib is not in your default linker path\n\n#link_directories(/usr/local/lib)\n",
        "Line" : 7,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "example/fly_qgc_mission/CMakeLists.txt" : {
      "ObjectId" : "23c8d2358e1ebc3ad10fffdcda0076ade1935429",
      "LastModified" : "2019-02-25T08:43:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Line below required if /usr/local/include is not in your default includes\n\n#include_directories(/usr/local/include)\n\n# Line below required if /usr/local/lib is not in your default linker path\n\n#link_directories(/usr/local/lib)\n",
        "Line" : 7,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "example/follow_me/CMakeLists.txt" : {
      "ObjectId" : "3a137263b3ac9edd4326cc2b2a51c1b88f4619d1",
      "LastModified" : "2019-02-25T08:43:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Line below required if /usr/local/include is not in your default includes\n\n#include_directories(/usr/local/include)\n\n# Line below required if /usr/local/lib is not in your default linker path\n\n#link_directories(/usr/local/lib)\n",
        "Line" : 9,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "example/multiple_drones/CMakeLists.txt" : {
      "ObjectId" : "b78b1596fe1c6fb68d3b444420e29abc1273e12a",
      "LastModified" : "2019-02-25T08:43:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Line below required if /usr/local/include is not in your default includes\n\n#include_directories(/usr/local/include)\n\n# Line below required if /usr/local/lib is not in your default linker path\n\n#link_directories(/usr/local/lib)\n",
        "Line" : 9,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "example/offboard_velocity/CMakeLists.txt" : {
      "ObjectId" : "57958057e3a8702d9359e804524c4cdbf1028d8c",
      "LastModified" : "2019-02-25T08:43:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Line below required if /usr/local/include is not in your default includes\n\n#include_directories(/usr/local/include)\n\n# Line below required if /usr/local/lib is not in your default linker path\n\n#link_directories(/usr/local/lib)\n",
        "Line" : 7,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# For M_PI\n",
        "Line" : 13,
        "CharPositionInLine" : 43
      },
      "CommentCount" : 2
    },
    "example/takeoff_land/CMakeLists.txt" : {
      "ObjectId" : "217be70574724f4a041733ce370ca4a050a8915e",
      "LastModified" : "2019-02-25T08:43:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Line below required if /usr/local/include is not in your default includes\n\n#include_directories(/usr/local/include)\n\n# Line below required if /usr/local/lib is not in your default linker path\n\n#link_directories(/usr/local/lib)\n",
        "Line" : 7,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "example/transition_vtol_fixed_wing/CMakeLists.txt" : {
      "ObjectId" : "a2bd1833a0987c0086c73bafc091f225c973d227",
      "LastModified" : "2019-02-25T08:43:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Line below required if /usr/local/include is not in your default includes\n\n#include_directories(/usr/local/include)\n\n# Line below required if /usr/local/lib is not in your default linker path\n\n#link_directories(/usr/local/lib)\n",
        "Line" : 7,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "external_example/integration_tests/CMakeLists.txt" : {
      "ObjectId" : "791f5224a44b8aa81b17dd88d56b578310cb4f25",
      "LastModified" : "2019-02-25T08:43:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external_example/plugins/CMakeLists.txt" : {
      "ObjectId" : "a5c4dce3cc76446262fce414b3da68566371f3c7",
      "LastModified" : "2019-02-25T08:43:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external_example/plugins/example/CMakeLists.txt" : {
      "ObjectId" : "839fb0e02ac17809c05da70902de581d30e5411a",
      "LastModified" : "2019-02-25T08:43:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#EXPORT dronecode_sdk-targets\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "iOS.cmake" : {
      "ObjectId" : "5be1f9d0cd061f37a05c909fa79c46beab00db2e",
      "LastModified" : "2019-02-25T08:43:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is based off of the Platform/Darwin.cmake and Platform/UnixPaths.cmake\n\n# files which are included with CMake 2.8.4\n\n# It has been altered for iOS development\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Options:\n\n#\n\n# IOS_PLATFORM = OS (default) or SIMULATOR\n\n#   This decides if SDKS will be selected from the iPhoneOS.platform or iPhoneSimulator.platform folders\n\n#   OS - the default, used to build for iPhone and iPad physical devices, which have an arm arch.\n\n#   SIMULATOR - used to build for the Simulator platforms, which have an x86 arch.\n\n#\n\n# CMAKE_IOS_DEVELOPER_ROOT = automatic(default) or /path/to/platform/Developer folder\n\n#   By default this location is automatcially chosen based on the IOS_PLATFORM value above.\n\n#   If set manually, it will override the default location and force the user of a particular Developer Platform\n\n#\n\n# CMAKE_IOS_SDK_ROOT = automatic(default) or /path/to/platform/Developer/SDKs/SDK folder\n\n#   By default this location is automatcially chosen based on the CMAKE_IOS_DEVELOPER_ROOT value.\n\n#   In this case it will always be the most up-to-date SDK found in the CMAKE_IOS_DEVELOPER_ROOT path.\n\n#   If set manually, this will force the use of a specific SDK version\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Macros:\n\n#\n\n# set_xcode_property (TARGET XCODE_PROPERTY XCODE_VALUE)\n\n#  A convenience macro for setting xcode specific properties on targets\n\n#  example: set_xcode_property (myioslib IPHONEOS_DEPLOYMENT_TARGET \"3.1\")\n\n#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Standard settings\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Required as of cmake 2.8.10\n\n#set (CMAKE_OSX_DEPLOYMENT_TARGET \"\" CACHE STRING \"Force unset of the deployment target for iOS\" FORCE)\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Determine the cmake host system version so we know where to find the iOS SDKs\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Skip the platform compiler checks for cross compiling\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# All iOS/Darwin specific settings - some may be redundant\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Hidden visibilty is required for cxx on iOS\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# hack: if a new cmake (which uses CMAKE_INSTALL_NAME_TOOL) runs on an old build tree\n\n# (where install_name_tool was hardcoded) and where CMAKE_INSTALL_NAME_TOOL isn't in the cache\n\n# and still cmake didn't fail in CMakeFindBinUtils.cmake (because it isn't rerun)\n\n# hardcode CMAKE_INSTALL_NAME_TOOL here to install_name_tool, so it behaves as it did before, Alex\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Setup iOS platform unless specified manually with IOS_PLATFORM\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Setup building for arm64 or not\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Check the platform selection and setup for developer root\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# This causes the installers to properly locate the output libraries\n",
        "Line" : 100,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# This causes the installers to properly locate the output libraries\n",
        "Line" : 106,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "# Setup iOS developer location unless specified manually with CMAKE_IOS_DEVELOPER_ROOT\n\n# Note Xcode 4.3 changed the installation location, choose the most recent one available\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Find and use the most recent iOS sdk unless specified manually with CMAKE_IOS_SDK_ROOT\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Set the sysroot default to the most recent SDK\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# set the architecture for iOS\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# default to searching for frameworks first\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# set up the default search directories for frameworks\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# This little macro lets you set any XCode specific property\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#  -Wno-missing-braces\n",
        "Line" : 168,
        "CharPositionInLine" : 82
      },
      "23" : {
        "Text" : "# This was copied over form another Toolchain file but it seems not needed\n\n#\n\n# iOS headers\n\n#include_directories(SYSTEM \"${CMAKE_IOS_SDK_ROOT}/usr/include\")\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# iOS libraries\n\n#link_directories(\"${CMAKE_IOS_SDK_ROOT}/usr/lib\")\n\n#link_directories(\"${CMAKE_IOS_SDK_ROOT}/usr/lib/system\")\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# XXX: Strange enough it works best if this root path is not set at all\n\n#\n\n# Set the find root to the iOS developer roots and to user defined paths\n\n#set (CMAKE_FIND_ROOT_PATH ${CMAKE_IOS_DEVELOPER_ROOT} ${CMAKE_IOS_SDK_ROOT} ${CMAKE_PREFIX_PATH} CACHE string  \"iOS find search path root\")\n\n#message(\"Found root path: ${CMAKE_FIND_ROOT_PATH}\")\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#set (CMAKE_FIND_ROOT_PATH \"\")\n\n# only search the iOS sdks, not the remainder of the host filesystem\n\n#set (CMAKE_FIND_ROOT_PATH_MODE_PROGRAM ONLY)\n\n#set (CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)\n\n#set (CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 27
    },
    "integration_tests/CMakeLists.txt" : {
      "ObjectId" : "192b9467f778ff1b162ede81253668c370216773",
      "LastModified" : "2019-03-27T13:17:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# SYSTEM because we don't want warnings for gtest headers.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# `make test` does not show output, but `make check` does\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This includes all GTests that run integration tests\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#logging.cpp # Not fully implemented\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "plugins/CMakeLists.txt" : {
      "ObjectId" : "8a108afc145c39cc2c7ad79cf65f22a882c4aa67",
      "LastModified" : "2019-03-27T13:17:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_subdirectory(logging) # Not implemented completely\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/action/CMakeLists.txt" : {
      "ObjectId" : "8b2c4f75bd2e82668d38476fb216ae659132a1c9",
      "LastModified" : "2019-02-25T08:43:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/calibration/CMakeLists.txt" : {
      "ObjectId" : "f86420f96a7b5f5f420b512c67f70ffe4a0eb527",
      "LastModified" : "2019-02-25T08:43:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#EXPORT dronecode_sdk-targets\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "plugins/camera/CMakeLists.txt" : {
      "ObjectId" : "be36a2abdb36923486bc67c401dfe008c024f97e",
      "LastModified" : "2019-02-25T08:43:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#EXPORT dronecode_sdk-targets\n",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "plugins/follow_me/CMakeLists.txt" : {
      "ObjectId" : "18c52913bb364fa5648f7febe2a859333691d1a8",
      "LastModified" : "2019-02-25T08:43:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#EXPORT dronecode_sdk-targets\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "plugins/gimbal/CMakeLists.txt" : {
      "ObjectId" : "75b5d65ed642b693ecc7e0a950ec6e31bb8244c1",
      "LastModified" : "2019-02-25T08:43:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#EXPORT dronecode_sdk-targets\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "plugins/info/CMakeLists.txt" : {
      "ObjectId" : "7edc33a7454c9b44cc20e3614c02ca3e4c34269a",
      "LastModified" : "2019-02-25T08:43:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#EXPORT dronecode_sdk-targets\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "plugins/log_files/CMakeLists.txt" : {
      "ObjectId" : "0a8e96ae4d64bb9345b8a8c3a97b9760468cd5e8",
      "LastModified" : "2019-02-25T08:43:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#EXPORT dronecode_sdk-targets\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "plugins/logging/CMakeLists.txt" : {
      "ObjectId" : "0465f7e3b5548792e6f229df9d9cf7ddd918fa62",
      "LastModified" : "2019-02-25T08:43:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#EXPORT dronecode_sdk-targets\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "plugins/mavlink_passthrough/CMakeLists.txt" : {
      "ObjectId" : "0b5a06e732a934be6f08a4bc25f43f05d32a01e9",
      "LastModified" : "2019-02-25T08:43:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#EXPORT dronecode_sdk-targets\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "plugins/mission/CMakeLists.txt" : {
      "ObjectId" : "70133cc1f3f6530b30adf7d80af47c30dfaa2115",
      "LastModified" : "2019-02-25T08:43:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# JSON parser library for parsing QGC plan for Mission\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#EXPORT dronecode_sdk-targets\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "plugins/mission_raw/CMakeLists.txt" : {
      "ObjectId" : "710af445055e5ea4ec2f6e8102bb02ccdcbf616b",
      "LastModified" : "2019-02-25T08:43:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#EXPORT dronecode_sdk-targets\n",
        "Line" : 24,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "plugins/offboard/CMakeLists.txt" : {
      "ObjectId" : "171544bb9b53233e0a278fea311e1fa59e877eb9",
      "LastModified" : "2019-02-25T08:43:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#EXPORT dronecode_sdk-targets\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "plugins/param/CMakeLists.txt" : {
      "ObjectId" : "d9fdc6f88d26c3d50a26e406a1202300e984fc2b",
      "LastModified" : "2019-03-27T13:17:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#EXPORT dronecode_sdk-targets\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "plugins/telemetry/CMakeLists.txt" : {
      "ObjectId" : "3f4db6dbf0b38e6104ef72bd646046f5e782c9d7",
      "LastModified" : "2019-03-27T13:17:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#EXPORT dronecode_sdk-targets\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 51,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 1164
}