{
  "Repository" : "29839135",
  "Revision" : "HEAD",
  "ObjectId" : "df0bda35e19377553a44f6f4b497c02e2c9fec95",
  "CommitTime" : "2018-11-15T16:48:15Z",
  "Files" : {
    "CMakeCPack.cmake" : {
      "ObjectId" : "9b63b965993bfed25300c1ff2f5aec4dd4f056bb",
      "LastModified" : "2018-06-08T16:30:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIXME: better description of the project\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set(CPACK_PROJECT_CONFIG_FILE \"${CMAKE_CURRENT_SOURCE_DIR}/CMakeCPackOptions.cmake\")\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMakeLists.txt" : {
      "ObjectId" : "2d5fa34493c4d04c409a322331774e38c333837e",
      "LastModified" : "2018-09-03T23:41:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Read the configuration arguments\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Include git hash in source\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Do not link to SDL2main library\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Create a rw_interface TARGET that holds all compiler options\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Copy the license to the install directory\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Copy the license to the build directory (for CI)\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "CTestConfig.cmake" : {
      "ObjectId" : "1e71a1cc23aa4b42af56f3065d2f0145b265496e",
      "LastModified" : "2018-06-08T16:30:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/modules/FindClangTidy.cmake" : {
      "ObjectId" : "3002f7aa491a9485ceecd8f7e7eedc613e8a1bf6",
      "LastModified" : "2018-06-08T16:30:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find clang-tidy executable and create clang_tidy_check_target function to check targets\n\n# Once done this will define\n\n#\n\n# CLANG_TIDY_FOUND - system has clang-tidy\n\n# CLANG_TIDY_BIN - path of clang-tidy\n\n# CLANG_TIDY_VERSION - version of clang-tidy\n\n#\n\n# clang_tidy_check_target function:\n\n# usage:\n\n# clang_tidy_check_target(\n\n#     TARGET <target>                   # Target to attach clang-tidy to\n\n#     [FORMAT_STYLE <format_style>]     # Format of clang-tidy output\n\n#     [FIX <fix_bool>]                  # Apply the clang-tidy fixes to the sources\n\n#     [CHECK_ALL]                       # run all clang-tidy checks\n\n#     )\n\n# Copyright (c) 2018 OpenRW project\n\n#\n\n# Redistribution and use is allowed according to the terms of the New BSD license.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#options\n",
        "Line" : 57,
        "CharPositionInLine" : 24
      },
      "2" : {
        "Text" : "#one_value_keywords\n",
        "Line" : 58,
        "CharPositionInLine" : 38
      },
      "3" : {
        "Text" : "#multi_value_keywords\n",
        "Line" : 59,
        "CharPositionInLine" : 15
      },
      "CommentCount" : 4
    },
    "cmake/modules/FindFFmpeg.cmake" : {
      "ObjectId" : "cca142b273a5f2774b23ccae9b197e6a427602cb",
      "LastModified" : "2018-08-20T21:45:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find ffmpeg libraries (libavcodec, libavformat and libavutil)\n\n# Once done this will define\n\n#\n\n# FFMPEG_FOUND - system has ffmpeg or libav\n\n# FFMPEG_INCLUDE_DIR - the ffmpeg include directory\n\n# FFMPEG_LIBRARIES - Link these to use ffmpeg\n\n# FFMPEG_LIBAVCODEC\n\n# FFMPEG_LIBAVFORMAT\n\n# FFMPEG_LIBAVUTIL\n\n#\n\n# Copyright (c) 2008 Andreas Schneider <mail@cynapses.org>\n\n# Modified for other libraries by Lasse Kärkkäinen <tronic>\n\n# Modified for Hedgewars by Stepik777\n\n#\n\n# Redistribution and use is allowed according to the terms of the New\n\n# BSD license.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindGLM.cmake" : {
      "ObjectId" : "43e2e3fb025609b3f763449e57d5ea2a6bb24695",
      "LastModified" : "2018-09-17T20:32:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FindGLM - attempts to locate the glm matrix/vector library.\n\n#\n\n# This module defines the following variables (on success):\n\n#   GLM_INCLUDE_DIRS  - where to find glm/glm.hpp\n\n#   GLM_FOUND         - if the library was successfully located\n\n#\n\n# It is trying a few standard installation locations, but can be customized\n\n# with the following variables:\n\n#   GLM_ROOT_DIR      - root directory of a glm installation\n\n#                       Headers are expected to be found in either:\n\n#                       <GLM_ROOT_DIR>/glm/glm.hpp           OR\n\n#                       <GLM_ROOT_DIR>/include/glm/glm.hpp\n\n#                       This variable can either be a cmake or environment\n\n#                       variable. Note however that changing the value\n\n#                       of the environment varible will NOT result in\n\n#                       re-running the header search and therefore NOT\n\n#                       adjust the variables set by this module.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2012 Carsten Neumann\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# default search dirs\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# check environment variable\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# put user specified location at beginning of search\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# locate header\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/modules/FindIncludeWhatYouUse.cmake" : {
      "ObjectId" : "f7ee2e61233c40e893a4b07cc2616a3dca175c62",
      "LastModified" : "2018-06-08T16:30:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/modules/FindSDL2.cmake" : {
      "ObjectId" : "040dad5175f7c5382c0c59ac097deaeb050a6011",
      "LastModified" : "2018-08-20T21:45:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate SDL2 library\n\n# This module defines\n\n# SDL2_LIBRARY, the name of the library to link against\n\n# SDL2_FOUND, if false, do not try to link to SDL2\n\n# SDL2_INCLUDE_DIR, where to find SDL.h\n\n#\n\n# This module responds to the the flag:\n\n# SDL2_BUILDING_LIBRARY\n\n# If this is defined, then no SDL2_main will be linked in because\n\n# only applications need main().\n\n# Otherwise, it is assumed you are building an application and this\n\n# module will attempt to locate and set the the proper link flags\n\n# as part of the returned SDL2_LIBRARY variable.\n\n#\n\n# Don't forget to include SDL2main.h and SDL2main.m your project for the\n\n# OS X framework based version. (Other versions link to -lSDL2main which\n\n# this module will try to find on your behalf.) Also for OS X, this\n\n# module will automatically add the -framework Cocoa on your behalf.\n\n#\n\n#\n\n# Additional Note: If you see an empty SDL2_LIBRARY_TEMP in your configuration\n\n# and no SDL2_LIBRARY, it means CMake did not find your SDL2 library\n\n# (SDL2.dll, libsdl2.so, SDL2.framework, etc).\n\n# Set SDL2_LIBRARY_TEMP to point to your SDL2 library, and configure again.\n\n# Similarly, if you see an empty SDL2MAIN_LIBRARY, you should set this value\n\n# as appropriate. These values are used to generate the final SDL2_LIBRARY\n\n# variable, but when these values are unset, SDL2_LIBRARY does not get created.\n\n#\n\n#\n\n# $SDL2DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$SDL2DIR\n\n# used in building SDL2.\n\n# l.e.galup  9-20-02\n\n#\n\n# Modified by Eric Wing.\n\n# Added code to assist with automated building by using environmental variables\n\n# and providing a more controlled/consistent search behavior.\n\n# Added new modifications to recognize OS X frameworks and\n\n# additional Unix paths (FreeBSD, etc).\n\n# Also corrected the header search path to follow \"proper\" SDL2 guidelines.\n\n# Added a search for SDL2main which is needed by some platforms.\n\n# Added a search for threads which is needed by some platforms.\n\n# Added needed compile switches for MinGW.\n\n#\n\n# On OSX, this will prefer the Framework version (if found) over others.\n\n# People will have to manually change the cache values of\n\n# SDL2_LIBRARY to override this selection or set the CMake environment\n\n# CMAKE_INCLUDE_PATH to modify the search paths.\n\n#\n\n# Note that the header path has changed from SDL2/SDL.h to just SDL.h\n\n# This needed to change because \"proper\" SDL2 convention\n\n# is #include \"SDL.h\", not <SDL2/SDL.h>. This is done for portability\n\n# reasons because not all systems place things in SDL2/ (see FreeBSD).\n\n#\n\n# Ported by Johnny Patterson. This is a literal port for SDL2 of the FindSDL.cmake\n\n# module with the minor edit of changing \"SDL\" to \"SDL2\" where necessary. This\n\n# was not created for redistribution, and exists temporarily pending official\n\n# SDL2 CMake modules.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2003-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fink\n",
        "Line" : 83,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 84,
        "CharPositionInLine" : 13
      },
      "4" : {
        "Text" : "# Blastwave\n",
        "Line" : 85,
        "CharPositionInLine" : 11
      },
      "5" : {
        "Text" : "#MESSAGE(\"SDL2_INCLUDE_DIR is ${SDL2_INCLUDE_DIR}\")\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#MESSAGE(\"SDL2_LIBRARY_TEMP is ${SDL2_LIBRARY_TEMP}\")\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Non-OS X framework versions expect you to also dynamically link to\n\n# SDL2main. This is mainly for Windows and OS X. Other (Unix) platforms\n\n# seem to provide SDL2main for compatibility even though they don't\n\n# necessarily need it.\n",
        "Line" : 109,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# SDL2 may require threads on your system.\n\n# The Apple build may not need an explicit flag because one of the\n\n# frameworks may already provide it.\n\n# But for non-OSX systems, I will use the CMake Threads package.\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# MinGW needs an additional library, mwindows\n\n# It's total link flags should look like -lmingw32 -lSDL2main -lSDL2 -lmwindows\n\n# (Actually on second look, I think it only needs one of the m* libraries.)\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# For SDL2main\n",
        "Line" : 144,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# For OS X, SDL2 uses Cocoa as a backend so it must link to Cocoa.\n\n# CMake doesn't display the -framework Cocoa string in the UI even\n\n# though it actually is there if I modify a pre-used variable.\n\n# I think it has something to do with the CACHE STRING.\n\n# So I use a temporary variable until the end so I can set the\n\n# \"real\" variable in one-shot.\n",
        "Line" : 151,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# For threads, as mentioned Apple doesn't need this.\n\n# In fact, there seems to be a problem if I used the Threads package\n\n# and try using this line, so I'm just skipping it entirely for OS X.\n",
        "Line" : 161,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# For MinGW library\n",
        "Line" : 168,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Set the final string here so the GUI reflects the final state.\n",
        "Line" : 177,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Set the temp variable to INTERNAL so it is not seen in the CMake GUI\n",
        "Line" : 179,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 16
    },
    "cmake/modules/GetGitRevisionDescription.cmake" : {
      "ObjectId" : "85eae1562fe2011e9800787819b21f30a8898eb4",
      "LastModified" : "2018-06-08T16:30:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Returns a version string from Git\n\n#\n\n# These functions force a re-configure on each git commit so that you can\n\n# trust the values of the variables in your build system.\n\n#\n\n#  get_git_head_revision(<refspecvar> <hashvar> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the refspec and sha hash of the current head revision\n\n#\n\n#  git_describe(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe on the source tree, and adjusting\n\n# the output so that it tests false if an error occurs.\n\n#\n\n#  git_get_exact_tag(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe --exact-match on the source tree,\n\n# and adjusting the output so that it tests false if there was no exact\n\n# matching tag.\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We must run the following at \"include\" time, not at function call time,\n\n# to find the path to this module rather than the path to a calling list file\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# .git dir not found, search parent directories\n",
        "Line" : 45,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "# We have reached the root directory, we are not in git\n",
        "Line" : 49,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# check if this is a submodule\n",
        "Line" : 56,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# TODO sanitize\n\n#if((${ARGN}\" MATCHES \"&&\") OR\n\n#\t(ARGN MATCHES \"||\") OR\n\n#\t(ARGN MATCHES \"\\\\;\"))\n\n#\tmessage(\"Please report the following error to the project!\")\n\n#\tmessage(FATAL_ERROR \"Looks like someone's doing something nefarious with git_describe! Passed arguments ${ARGN}\")\n\n#endif()\n",
        "Line" : 97,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "#message(STATUS \"Arguments to execute_process: ${ARGN}\")\n",
        "Line" : 105,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 7
    },
    "cmake/modules/WrapTargets.cmake" : {
      "ObjectId" : "f17b46d903cf0df9f71f0a98640857a519b285e8",
      "LastModified" : "2018-08-20T21:45:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake_configure.cmake" : {
      "ObjectId" : "1f873c940604ba6dbd55028d93f515ef254e766e",
      "LastModified" : "2018-10-29T15:35:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# target_compile_features(rw_interface INTERFACE cxx_std_14) is not supported by CMake 3.2\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Required minimum version of Windows = Vista\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "cmake_options.cmake" : {
      "ObjectId" : "2243b5497cd737fb7539219ff566fa3b7c6fa4b0",
      "LastModified" : "2018-09-17T20:32:59Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external/CMakeLists.txt" : {
      "ObjectId" : "de3bbe458c83abf9b70f716265f9cf390ce90c70",
      "LastModified" : "2018-09-17T20:32:59Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external/microprofile/CMakeLists.txt" : {
      "ObjectId" : "ab138f65f41a33c34c65211bb19bba5cd4ebdfdb",
      "LastModified" : "2018-09-17T20:32:59Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "rwcore/CMakeLists.txt" : {
      "ObjectId" : "95a2c35e6a2e71330cea7df8c80f1456fbbc7d41",
      "LastModified" : "2018-09-17T20:32:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# GL stuff is only here temporarily, hoping to move it back to rwengine\n",
        "Line" : 3,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "rwengine/CMakeLists.txt" : {
      "ObjectId" : "24d0620acbed9c75b0a3f3525bede706da2dbc82",
      "LastModified" : "2018-09-17T20:32:59Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "rwgame/CMakeLists.txt" : {
      "ObjectId" : "f9b9afdcd9f91049bc89c897bcf72bc770fbe440",
      "LastModified" : "2018-10-30T14:08:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "rwtools/CMakeLists.txt" : {
      "ObjectId" : "af12e1131b37767379628cf95e412c55d2894356",
      "LastModified" : "2018-09-17T20:32:59Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "rwtools/rwfont/CMakeLists.txt" : {
      "ObjectId" : "7494258be4a3935f70c96e773e8a15b5ae1626bc",
      "LastModified" : "2018-09-17T20:32:59Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "rwviewer/CMakeLists.txt" : {
      "ObjectId" : "0e4490b1e878a22b848f843bdb7ff39809d9a00e",
      "LastModified" : "2018-09-17T20:32:59Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "b91bdaf1c1f715f874e71780e2d200f28e9a0907",
      "LastModified" : "2018-09-17T20:32:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Hack in rwgame sources until there's a per-target test suite\n",
        "Line" : 46,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 21
  },
  "ElapsedTime" : 1821
}