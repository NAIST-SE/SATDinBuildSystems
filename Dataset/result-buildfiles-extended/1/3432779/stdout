{
  "Repository" : "3432779",
  "Revision" : "HEAD",
  "ObjectId" : "0c38285d89da54086a70987f63b9926ed6e2a5de",
  "CommitTime" : "2019-04-17T11:53:41Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "bb19880dba07499abc899ff74ea498f074ede13f",
      "LastModified" : "2019-03-16T12:53:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# For config.h\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Allows includes based on src/ like #include \"common/utility.h\" or #include \"csync/csync.h\"\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# disable the crashreporter if libcrashreporter-qt is not available or we're building for ARM\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#enable function name and line number in debug output\n",
        "Line" : 49,
        "CharPositionInLine" : 27
      },
      "4" : {
        "Text" : "# if we cannot get it from git, directly try .tag (packages)\n\n# this will work if the tar balls have been properly created\n\n# via git-archive.\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Inside the .app bundle\n",
        "Line" : 76,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#####\n\n## handle BUILD_OWNCLOUD_OSX_BUNDLE\n\n# BUILD_OWNCLOUD_OSX_BUNDLE was not initialized OR set to true on OSX\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# BUILD_OWNCLOUD_OSX_BUNDLE was disabled on OSX\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# any other platform\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#####\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# this option removes Http authentication, keychain, shibboleth etc and is intended for\n\n# external authentication mechanisms\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# this option builds the shell integration\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# this option builds/installs the generic shell integration icons\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# this options builds the dolphin integration plugin\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# this options builds the nautilus (like) integration plugins\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# this option builds the client\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# this option builds the client documentation\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# this option creates only libocsync and libowncloudsync (NOTE: BUILD_CLIENT needs to be on)\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# build the GUI component, when disabled only owncloudcmd is built\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# When this option is enabled, 5xx errors are not added to the blacklist\n\n# Normally you don't want to enable this option because if a particular file\n\n# triggers a bug on the server, you want the file to be blacklisted.\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Get APIs from from Vista onwards.\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Handle Translations, pick all client_* files from trans directory.\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 22
    },
    "OWNCLOUD.cmake" : {
      "ObjectId" : "8d76fa0149c1cab843f3bf5330a12ca6be878872",
      "LastModified" : "2018-05-23T07:57:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set( THEME_INCLUDE          \"${OEM_THEME_DIR}/mytheme.h\" )\n\n# set( APPLICATION_LICENSE    \"${OEM_THEME_DIR}/license.txt )\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "OwnCloudCPack.cmake" : {
      "ObjectId" : "39eee0080fa21905f83866080ab437b927971396",
      "LastModified" : "2017-09-27T07:13:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#    set( CPACK_DMG_BACKGROUND_IMAGE \"${CMAKE_SOURCE_DIR}/admin/osx/DMGBackground.png\" )\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# did not work with cmake 2.8.7, so we override MacOSXBundleInfo.plist.in\n\n#set( CPACK_BUNDLE_PLIST ${CMAKE_SOURCE_DIR}/admin/osx/Info.plist )\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# do we need these?\n\n#set( CPACK_SYSTEM_NAME \"OSX\" )\n\n#set( CPACK_PACKAGE_NAME \"FOO\" )\n\n#set( CPACK_BUNDLE_NAME \"BAR\" )\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Package file name without extension. Also a directory of installer  cmake-2.5.0-Linux-i686\n\n# CPACK_GENERATOR   CPack generator to be used  STGZ;TGZ;TZ\n\n# CPACK_INCLUDE_TOPLEVEL_DIRECTORY    Controls whether CPack adds a top-level directory, usually of the form ProjectName-Version-OS, to the top of package tree.  0 to disable, 1 to enable\n\n# CPACK_INSTALL_CMAKE_PROJECTS    List of four values: Build directory, Project Name, Project Component, Directory in the package     /home/andy/vtk/CMake-bin;CMake;ALL;/\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# File used as a description of a project     /path/to/project/ReadMe.txt\n",
        "Line" : 48,
        "CharPositionInLine" : 75
      },
      "5" : {
        "Text" : "#  Description summary of a project\n",
        "Line" : 49,
        "CharPositionInLine" : 83
      },
      "6" : {
        "Text" : "# CPACK_PACKAGE_EXECUTABLES   List of pairs of executables and labels. Used by the NSIS generator to create Start Menu shortcuts.     ccmake;CMake\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Installation directory on the target system -> C:\\Program Files\\${APPLICATION_SHORTNAME}\n",
        "Line" : 51,
        "CharPositionInLine" : 73
      },
      "8" : {
        "Text" : "# Registry key used when installing this project  CMake 2.5.0\n",
        "Line" : 52,
        "CharPositionInLine" : 72
      },
      "9" : {
        "Text" : "# Package name, defaults to the project name\n",
        "Line" : 53,
        "CharPositionInLine" : 51
      },
      "10" : {
        "Text" : "# Package vendor name\n",
        "Line" : 54,
        "CharPositionInLine" : 66
      },
      "11" : {
        "Text" : "# set( CPACK_RESOURCE_FILE_LICENSE \"${CMAKE_SOURCE_DIR}/LICENSE.txt\" ) # License file for the project, used by the STGZ, NSIS, and PackageMaker generators.  /home/andy/vtk/CMake/Copyright.txt\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Directory for the installed files.  - needed to provide anything to avoid an error# CPACK_INSTALL_COMMANDS  Extra commands to install components.\n",
        "Line" : 60,
        "CharPositionInLine" : 35
      },
      "13" : {
        "Text" : "# Set the options file that needs to be included inside CMakeCPackOptions.cmake\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# File included at cpack time, once per generator after setting CPACK_GENERATOR to the actual generator being used; allows per-generator setting of CPACK_* variables at cpack time.  ${PROJECT_BINARY_DIR}/CPackOptions.cmake\n",
        "Line" : 66,
        "CharPositionInLine" : 72
      },
      "CommentCount" : 15
    },
    "THEME.cmake" : {
      "ObjectId" : "a5dc42fb1adc87a384ffd5105529fc4a15c4cbff",
      "LastModified" : "2019-02-13T09:04:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Default suffix if the theme doesn't define one\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# need this logic to not mess with re/uninstallations via macosx.pkgproj\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For usage in XML files we preprocess\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "VERSION.cmake" : {
      "ObjectId" : "553a0f6ab703296cfbbc79d7b2e7aaee2941744e",
      "LastModified" : "2019-02-13T09:04:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#e.g. beta1, beta2, rc1\n",
        "Line" : 8,
        "CharPositionInLine" : 38
      },
      "1" : {
        "Text" : "# Integer ID. Generated by the build system\n",
        "Line" : 12,
        "CharPositionInLine" : 36
      },
      "2" : {
        "Text" : "# Composite defines\n\n# Used e.g. for libraries Keep at x.y.z.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Version with Build ID. Used in the installer\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "admin/CMakeLists.txt" : {
      "ObjectId" : "8908d6c813ef8d75ee259ef9022af7ac2af397ba",
      "LastModified" : "2014-08-26T16:13:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# traverse into osx subdirectory to install and patch the create-pack script\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "admin/osx/CMakeLists.txt" : {
      "ObjectId" : "5531223fb86e8a19dd995718831708bb87406405",
      "LastModified" : "2018-04-04T13:46:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check if varialbe MAC_INSTALLER_BACKGROUND_FILE is defined. That might come\n\n# from the OEM.cmake for branded clients or from OWNCLOUD.cmake for the non\n\n# branded client.\n\n# Make sure that the MAC_INSTALLER_BACKGROUND_FILE contains the full path, ie.\n\n# includes CMAKE_SOURCE_DIR or so.\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "admin/osx/create_mac.sh.cmake" : {
      "ObjectId" : "40b3e5796a328fd41948f6dd487cec2cf7657e28",
      "LastModified" : "2018-04-04T13:46:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#!/bin/bash\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Script to create the Mac installer using the packages tool from\n\n# http://s.sudre.free.fr/Software/Packages/about.html\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# the path of installation must be given as parameter\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The name of the installer package\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# set the installer name to the copied prj config file\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The command line tool of the \"Packages\" tool, see link above.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Sign the finished package if desired.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# FIXME: OEMs?\n\n# they will need to do their own signing..\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Sparkle wants a tbz, it cannot install raw pkg\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "admin/osx/macosx.pkgproj.cmake" : {
      "ObjectId" : "0552e1c3235fa8a8763ab8cce7c1d20faff9de18",
      "LastModified" : "2018-04-04T14:45:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "admin/osx/post_install.sh.cmake" : {
      "ObjectId" : "55d5e1c1d0e20ce0eeb8b648d6de9dbadb12787a",
      "LastModified" : "2018-12-03T13:18:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#!/bin/sh\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Always enable the new 10.10 finder plugin if available\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add it to DB. This happens automatically too but we try to push it a bit harder for issue #3463\n",
        "Line" : 5,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Since El Capitan we need to sleep #4650\n",
        "Line" : 7,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# enable it\n",
        "Line" : 9,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "admin/osx/pre_install.sh.cmake" : {
      "ObjectId" : "cd909e29ad1e333f096320a99f67c228952fc233",
      "LastModified" : "2018-04-04T13:46:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#!/bin/sh\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# kill the old version. see issue #2044\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "admin/win/Toolchain-mingw32-openSUSE.cmake" : {
      "ObjectId" : "ae1c5745f8229e1638ffc3057977fd4f71a60e51",
      "LastModified" : "2018-04-04T13:46:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# this one is important\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# specify the cross compiler\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# where is the target environment containing libraries\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## configure qt variables\n\n# generic\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# dirs\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# qt tools\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "admin/win/nsi/l10n/Makefile" : {
      "ObjectId" : "645889dceef0ef7ddb79465a2e5f3ec0dcd76a0d",
      "LastModified" : "2019-04-10T09:12:04Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Translation\n\n#--------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/AddAppIconMacro.cmake" : {
      "ObjectId" : "dc833bd9d9329a02777e89caba77c4d588646ecf",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This macro is taken from kdelibs/cmake/modules/KDE4Macros.cmake.\n\n#\n\n# Copyright (c) 2006-2009 Alexander Neundorf, <neundorf@kde.org>\n\n# Copyright (c) 2006, 2007, Laurent Montel, <montel@kde.org>\n\n# Copyright (c) 2007 Matthias Kretz <kretz@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file [in KDE repositories].\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# adds application icon to target source list \n\n# for detailed documentation see the top of FindKDE4Internal.cmake\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# List from:\n\n# https://developer.apple.com/library/content/documentation/GraphicsAnimation/Conceptual/HighResolutionOSX/Optimizing/Optimizing.html#//apple_ref/doc/uid/TP40012302-CH7-SW4\n",
        "Line" : 76,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Copy the sidebar icons in the main app bundle for the FinderSync extension to pick.\n\n# https://developer.apple.com/library/content/documentation/General/Conceptual/ExtensibilityPG/Finder.html#//apple_ref/doc/uid/TP40014214-CH15-SW15\n",
        "Line" : 99,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# This will register the icon into the bundle\n",
        "Line" : 123,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Append the icns file to the sources list so it will be a dependency to the\n\n# main target\n",
        "Line" : 126,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Install the icon into the Resources dir in the bundle\n",
        "Line" : 130,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 7
    },
    "cmake/modules/AddCMockaTest.cmake" : {
      "ObjectId" : "b2d1ca8a4bb409b2a57d63b3a2127df598fe137e",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - ADD_CHECK_TEST(test_name test_source linklib1 ... linklibN)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2007      Daniel Gollub <dgollub@suse.de>\n\n# Copyright (c) 2007-2010 Andreas Schneider <asn@cynapses.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/CheckCCompilerFlagSSP.cmake" : {
      "ObjectId" : "2fe43954a91a0eba4b758c50287ed8eeaa8c018a",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check whether the C compiler supports a given flag in the\n\n# context of a stack checking compiler option.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CHECK_C_COMPILER_FLAG_SSP(FLAG VARIABLE)\n\n#\n\n#  FLAG - the compiler flag\n\n#  VARIABLE - variable to store the result\n\n#\n\n#  This actually calls check_c_source_compiles.\n\n#  See help for CheckCSourceCompiles for a listing of variables\n\n#  that can modify the build.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Copyright (c) 2006, Alexander Neundorf, <neundorf@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/modules/CheckPrototypeDefinition.cmake" : {
      "ObjectId" : "2342b3c4f7a477f76210a24a17c75dc8952a322d",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check if the protoype we expect is correct.\n\n# check_prototype_definition(FUNCTION PROTOTYPE RETURN HEADER VARIABLE)\n\n#  FUNCTION - The name of the function (used to check if prototype exists)\n\n#  PROTOTYPE- The prototype to check.\n\n#  RETURN - The return value of the function.\n\n#  HEADER - The header files required.\n\n#  VARIABLE - The variable to store the result.\n\n# Example:\n\n#  check_prototype_definition(getpwent_r\n\n#   \"struct passwd *getpwent_r(struct passwd *src, char *buf, int buflen)\"\n\n#   \"NULL\"\n\n#   \"unistd.h;pwd.h\"\n\n#   SOLARIS_GETPWENT_R)\n\n# The following variables may be set before calling this macro to\n\n# modify the way the check is run:\n\n#\n\n#  CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n#  CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n#  CMAKE_REQUIRED_INCLUDES = list of include directories\n\n#  CMAKE_REQUIRED_LIBRARIES = list of libraries to link\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2005-2009 Kitware, Inc.\n\n# Copyright 2010-2011 Andreas Schneider <asn@cryptomilk.org>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n\n#\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/DefineCMakeDefaults.cmake" : {
      "ObjectId" : "483722fdcb0a70187c60ae2479aaee15dafac257",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# (c) 2014 Copyright ownCloud GmbH\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING* file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Always include srcdir and builddir in include path\n\n# This saves typing ${CMAKE_CURRENT_SOURCE_DIR} ${CMAKE_CURRENT_BINARY} in\n\n# about every subdir\n\n# since cmake 2.4.0\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Put the include dirs which are in the source or build tree\n\n# before all other include dirs, so the headers in the sources\n\n# are prefered over the already installed ones\n\n# since cmake 2.4.1\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Use colored output\n\n# since cmake 2.4.0\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Define the generic version of the libraries here\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# set -Werror\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set the default build type to release with debug info\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cmake/modules/DefineCompilerFlags.cmake" : {
      "ObjectId" : "c8e831caaf58aa3bbf2b4275d14f008f0cb81996",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# (c) 2014 Copyright ownCloud GmbH\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING* file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# define system dependent compiler flags\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Define GNUCC compiler flags\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# add -Wconversion ?\n\n# cannot be pedantic with sqlite3 directly linked\n\n# FIXME Can we somehow not use those flags for sqlite3.* but use them for the rest of csync?\n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# with -fPIC\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#\n\n# Check for large filesystem support\n\n#\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# with large file support\n",
        "Line" : 59,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# with large file support\n",
        "Line" : 69,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# Use secure functions by default and suppress warnings about\n\n#\"deprecated\" functions\n",
        "Line" : 88,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 9
    },
    "cmake/modules/DefineInstallationPaths.cmake" : {
      "ObjectId" : "b1fb47d590be2fdf95156e9cf133d5b03ad1b2de",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# (c) 2014 Copyright ownCloud GmbH\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING* file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Suffix for Linux\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# The following are directories where stuff will be installed to\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Same same\n",
        "Line" : 99,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "cmake/modules/DefinePlatformDefaults.cmake" : {
      "ObjectId" : "91f65921534b6a6532952696d53d1d2044a10ca9",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# (c) 2014 Copyright ownCloud GmbH\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING* file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set system vars\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/DeployQt5.cmake" : {
      "ObjectId" : "b9e5d70292073b2276e7b8e615144bce02e26c6c",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Functions to help assemble a standalone Qt5 executable.\n\n# A collection of CMake utility functions useful for deploying\n\n# Qt5 executables.\n\n#\n\n# The following functions are provided by this module:\n\n#   write_qt5_conf\n\n#   resolve_qt5_paths\n\n#   fixup_qt5_executable\n\n#   install_qt5_plugin_path\n\n#   install_qt5_plugin\n\n#   install_qt5_executable\n\n# Requires CMake 2.6 or greater because it uses function and\n\n# PARENT_SCOPE. Also depends on BundleUtilities.cmake.\n\n#\n\n#  WRITE_QT5_CONF(<qt_conf_dir> <qt_conf_contents>)\n\n# Writes a qt.conf file with the <qt_conf_contents> into <qt_conf_dir>.\n\n#\n\n#  RESOLVE_QT5_PATHS(<paths_var> [<executable_path>])\n\n# Loop through <paths_var> list and if any don't exist resolve them\n\n# relative to the <executable_path> (if supplied) or the CMAKE_INSTALL_PREFIX.\n\n#\n\n#  FIXUP_QT5_EXECUTABLE(<executable> [<qtplugins> <libs> <dirs> <plugins_dir> <request_qt_conf>])\n\n# Copies Qt plugins, writes a Qt configuration file (if needed) and fixes up a\n\n# Qt5 executable using BundleUtilities so it is standalone and can be\n\n# drag-and-drop copied to another machine as long as all of the system\n\n# libraries are compatible.\n\n#\n\n# <executable> should point to the executable to be fixed-up.\n\n#\n\n# <qtplugins> should contain a list of the names or paths of any Qt plugins\n\n# to be installed.\n\n#\n\n# <libs> will be passed to BundleUtilities and should be a list of any already\n\n# installed plugins, libraries or executables to also be fixed-up.\n\n#\n\n# <dirs> will be passed to BundleUtilities and should contain and directories\n\n# to be searched to find library dependencies.\n\n#\n\n# <plugins_dir> allows an custom plugins directory to be used.\n\n#\n\n# <request_qt_conf> will force a qt.conf file to be written even if not needed.\n\n#\n\n#  INSTALL_QT5_PLUGIN_PATH(plugin executable copy installed_plugin_path_var <plugins_dir> <component> <configurations>)\n\n# Install (or copy) a resolved <plugin> to the default plugins directory\n\n# (or <plugins_dir>) relative to <executable> and store the result in\n\n# <installed_plugin_path_var>.\n\n#\n\n# If <copy> is set to TRUE then the plugins will be copied rather than\n\n# installed. This is to allow this module to be used at CMake time rather than\n\n# install time.\n\n#\n\n# If <component> is set then anything installed will use this COMPONENT.\n\n#\n\n#  INSTALL_QT5_PLUGIN(plugin executable copy installed_plugin_path_var <plugins_dir> <component>)\n\n# Install (or copy) an unresolved <plugin> to the default plugins directory\n\n# (or <plugins_dir>) relative to <executable> and store the result in\n\n# <installed_plugin_path_var>. See documentation of INSTALL_QT5_PLUGIN_PATH.\n\n#\n\n#  INSTALL_QT5_EXECUTABLE(<executable> [<qtplugins> <libs> <dirs> <plugins_dir> <request_qt_conf> <component>])\n\n# Installs Qt plugins, writes a Qt configuration file (if needed) and fixes up\n\n# a Qt5 executable using BundleUtilities so it is standalone and can be\n\n# drag-and-drop copied to another machine as long as all of the system\n\n# libraries are compatible. The executable will be fixed-up at install time.\n\n# <component> is the COMPONENT used for bundle fixup and plugin installation.\n\n# See documentation of FIXUP_QT5_BUNDLE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2011 Mike McQuaid <m...@mikemcquaid.com>\n\n# Copyright 2013 Mihai Moldovan <io...@ionic.de>\n\n# CMake - Cross Platform Makefile Generator\n\n# Copyright 2000-2011 Kitware, Inc., Insight Software Consortium\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n#\n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The functions defined in this file depend on the fixup_bundle function\n\n# (and others) found in BundleUtilities.cmake\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#string(TOUPPER \"QT_${plugin}_PLUGIN\" plugin_var)\n",
        "Line" : 264,
        "CharPositionInLine" : 16
      },
      "CommentCount" : 4
    },
    "cmake/modules/ECMAddAppIcon.cmake" : {
      "ObjectId" : "c2d07f6fb97b7c5174d1bfefcae48b536ae08a29",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# ECMAddAppIcon\n\n# -------------\n\n#\n\n# Add icons to executable files and packages.\n\n#\n\n# ::\n\n#\n\n#  ecm_add_app_icon(<sources_var>\n\n#                   ICONS <icon> [<icon> [...]]\n\n#                   [SIDEBAR_ICONS <icon> [<icon> [...]] # Since 5.49\n\n#                   [OUTFILE_BASENAME <name>]) # Since 5.49\n\n#                   )\n\n#\n\n# The given icons, whose names must match the pattern::\n\n#\n\n#   <size>-<other_text>.png\n\n#\n\n# will be added to the executable target whose sources are specified by\n\n# ``<sources_var>`` on platforms that support it (Windows and Mac OS X).\n\n# Other icon files are ignored but on Mac SVG files can be supported and\n\n# it is thus possible to mix those with png files in a single macro call.\n\n#\n\n# ``<size>`` is a numeric pixel size (typically 16, 32, 48, 64, 128 or 256).\n\n# ``<other_text>`` can be any other text. See the platform notes below for any\n\n# recommendations about icon sizes.\n\n#\n\n# ``SIDEBAR_ICONS`` can be used to add Mac OS X sidebar\n\n# icons to the generated iconset. They are used when a folder monitored by the\n\n# application is dragged into Finder's sidebar. Since 5.49.\n\n#\n\n# ``OUTFILE_BASENAME`` will be used as the basename for the icon file. If\n\n# you specify it, the icon file will be called ``<OUTFILE_BASENAME>.icns`` on Mac OS X\n\n# and ``<OUTFILE_BASENAME>.ico`` on Windows. If you don't specify it, it defaults\n\n# to ``<sources_var>.<ext>``. Since 5.49.\n\n#\n\n#\n\n# Windows notes\n\n#    * Icons are compiled into the executable using a resource file.\n\n#    * Icons may not show up in Windows Explorer if the executable\n\n#      target does not have the ``WIN32_EXECUTABLE`` property set.\n\n#    * One of the tools png2ico (See :find-module:`FindPng2Ico`) or\n\n#      icotool (see :find-module:`FindIcoTool`) is required.\n\n#    * Supported sizes: 16, 24, 32, 48, 64, 128, 256, 512 and 1024.\n\n#\n\n# Mac OS X notes\n\n#    * The executable target must have the ``MACOSX_BUNDLE`` property set.\n\n#    * Icons are added to the bundle.\n\n#    * If the ksvg2icns tool from KIconThemes is available, .svg and .svgz\n\n#      files are accepted; the first that is converted successfully to .icns\n\n#      will provide the application icon. SVG files are ignored otherwise.\n\n#    * The tool iconutil (provided by Apple) is required for bitmap icons.\n\n#    * Supported sizes: 16, 32, 64, 128, 256 (and 512, 1024 after OS X 10.9).\n\n#    * At least a 128x128px (or an SVG) icon is required.\n\n#    * Larger sizes are automatically used to substitute for smaller sizes on\n\n#      \"Retina\" (high-resolution) displays. For example, a 32px icon, if\n\n#      provided, will be used as a 32px icon on standard-resolution displays,\n\n#      and as a 16px-equivalent icon (with an \"@2x\" tag) on high-resolution\n\n#      displays. That is why you should provide 64px and 1024px icons although\n\n#      they are not supported anymore directly. Instead they will be used as\n\n#      32px@2x and 512px@2x. ksvg2icns handles this internally.\n\n#    * This function sets the ``MACOSX_BUNDLE_ICON_FILE`` variable to the name\n\n#      of the generated icns file, so that it will be used as the\n\n#      ``MACOSX_BUNDLE_ICON_FILE`` target property when you call\n\n#      ``add_executable``.\n\n#    * Sidebar icons should typically provided in 16, 32, 64, 128 and 256px.\n\n#\n\n# Since 1.7.0.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2014 Alex Merry <alex.merry@kde.org>\n\n# Copyright 2014 Ralf Habacker <ralf.habacker@freenet.de>\n\n# Copyright 2006-2009 Alexander Neundorf, <neundorf@kde.org>\n\n# Copyright 2006, 2007, Laurent Montel, <montel@kde.org>\n\n# Copyright 2007 Matthias Kretz <kretz@kde.org>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# 1. Redistributions of source code must retain the copyright\n\n#    notice, this list of conditions and the following disclaimer.\n\n# 2. Redistributions in binary form must reproduce the copyright\n\n#    notice, this list of conditions and the following disclaimer in the\n\n#    documentation and/or other materials provided with the distribution.\n\n# 3. The name of the author may not be used to endorse or promote products\n\n#    derived from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n\n# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n\n# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n\n# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\n\n# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n\n# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n\n# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# do we have ksvg2icns in the path and did we receive an svg (or compressed svg) icon?\n",
        "Line" : 121,
        "CharPositionInLine" : 12
      },
      "3" : {
        "Text" : "# convert the svg icon to an icon resource\n",
        "Line" : 123,
        "CharPositionInLine" : 16
      },
      "4" : {
        "Text" : "# install the icns file we just created\n",
        "Line" : 129,
        "CharPositionInLine" : 20
      },
      "5" : {
        "Text" : "# we're done now\n",
        "Line" : 134,
        "CharPositionInLine" : 20
      },
      "6" : {
        "Text" : "# Icons: https://developer.apple.com/library/content/documentation/GraphicsAnimation/Conceptual/HighResolutionOSX/Optimizing/Optimizing.html#//apple_ref/doc/uid/TP40012302-CH7-SW4\n",
        "Line" : 148,
        "CharPositionInLine" : 18
      },
      "7" : {
        "Text" : "# Sidebar Icons: https://developer.apple.com/library/content/documentation/General/Conceptual/ExtensibilityPG/Finder.html#//apple_ref/doc/uid/TP40014214-CH15-SW15\n",
        "Line" : 157,
        "CharPositionInLine" : 18
      },
      "8" : {
        "Text" : "# this bit's a little hacky to make the dependency stuff work\n",
        "Line" : 205,
        "CharPositionInLine" : 16
      },
      "9" : {
        "Text" : "# According to https://stackoverflow.com/a/40851713/2886832\n\n# Windows always chooses the first icon above 255px, all other ones will be ignored\n",
        "Line" : 219,
        "CharPositionInLine" : 12
      },
      "10" : {
        "Text" : "# maxSize icon needs to be included as raw png\n",
        "Line" : 235,
        "CharPositionInLine" : 20
      },
      "11" : {
        "Text" : "# standard png2ico has no rcfile argument\n",
        "Line" : 247,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# png2ico from kdewin provides rcfile argument\n",
        "Line" : 256,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# else none of the supported tools was found\n",
        "Line" : 270,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# first generate .iconset directory structure, then convert to .icns format using the Mac OS X \"iconutil\" utility,\n\n# to create retina compatible icon, you need png source files in pixel resolution 16x16, 32x32, 64x64, 128x128,\n\n# 256x256, 512x512, 1024x1024\n",
        "Line" : 275,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# List of supported sizes and filenames taken from:\n\n# https://developer.apple.com/library/content/documentation/GraphicsAnimation/Conceptual/HighResolutionOSX/Optimizing/Optimizing.html#//apple_ref/doc/uid/TP40012302-CH7-SW4\n",
        "Line" : 302,
        "CharPositionInLine" : 12
      },
      "16" : {
        "Text" : "# List of supported sizes and filenames taken from:\n\n# https://developer.apple.com/library/content/documentation/General/Conceptual/ExtensibilityPG/Finder.html#//apple_ref/doc/uid/TP40014214-CH15-SW15\n",
        "Line" : 314,
        "CharPositionInLine" : 12
      },
      "17" : {
        "Text" : "# generate .icns icon file\n",
        "Line" : 335,
        "CharPositionInLine" : 12
      },
      "18" : {
        "Text" : "# This will register the icon into the bundle\n",
        "Line" : 346,
        "CharPositionInLine" : 12
      },
      "19" : {
        "Text" : "# Append the icns file to the sources list so it will be a dependency to the\n\n# main target\n",
        "Line" : 349,
        "CharPositionInLine" : 12
      },
      "20" : {
        "Text" : "# Install the icon into the Resources dir in the bundle\n",
        "Line" : 353,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 21
    },
    "cmake/modules/ECMFindModuleHelpers.cmake" : {
      "ObjectId" : "f2e32f959e88618956ad340879ed98e722850519",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# ECMFindModuleHelpers\n\n# --------------------\n\n#\n\n# Helper macros for find modules: ecm_find_package_version_check(),\n\n# ecm_find_package_parse_components() and\n\n# ecm_find_package_handle_library_components().\n\n#\n\n# ::\n\n#\n\n#   ecm_find_package_version_check(<name>)\n\n#\n\n# Prints warnings if the CMake version or the project's required CMake version\n\n# is older than that required by extra-cmake-modules.\n\n#\n\n# ::\n\n#\n\n#   ecm_find_package_parse_components(<name>\n\n#       RESULT_VAR <variable>\n\n#       KNOWN_COMPONENTS <component1> [<component2> [...]]\n\n#       [SKIP_DEPENDENCY_HANDLING])\n\n#\n\n# This macro will populate <variable> with a list of components found in\n\n# <name>_FIND_COMPONENTS, after checking that all those components are in the\n\n# list of KNOWN_COMPONENTS; if there are any unknown components, it will print\n\n# an error or warning (depending on the value of <name>_FIND_REQUIRED) and call\n\n# return().\n\n#\n\n# The order of components in <variable> is guaranteed to match the order they\n\n# are listed in the KNOWN_COMPONENTS argument.\n\n#\n\n# If SKIP_DEPENDENCY_HANDLING is not set, for each component the variable\n\n# <name>_<component>_component_deps will be checked for dependent components.\n\n# If <component> is listed in <name>_FIND_COMPONENTS, then all its (transitive)\n\n# dependencies will also be added to <variable>.\n\n#\n\n# ::\n\n#\n\n#   ecm_find_package_handle_library_components(<name>\n\n#       COMPONENTS <component> [<component> [...]]\n\n#       [SKIP_DEPENDENCY_HANDLING])\n\n#       [SKIP_PKG_CONFIG])\n\n#\n\n# Creates an imported library target for each component.  The operation of this\n\n# macro depends on the presence of a number of CMake variables.\n\n#\n\n# The <name>_<component>_lib variable should contain the name of this library,\n\n# and <name>_<component>_header variable should contain the name of a header\n\n# file associated with it (whatever relative path is normally passed to\n\n# '#include'). <name>_<component>_header_subdir variable can be used to specify\n\n# which subdirectory of the include path the headers will be found in.\n\n# ecm_find_package_components() will then search for the library\n\n# and include directory (creating appropriate cache variables) and create an\n\n# imported library target named <name>::<component>.\n\n#\n\n# Additional variables can be used to provide additional information:\n\n#\n\n# If SKIP_PKG_CONFIG, the <name>_<component>_pkg_config variable is set, and\n\n# pkg-config is found, the pkg-config module given by\n\n# <name>_<component>_pkg_config will be searched for and used to help locate the\n\n# library and header file.  It will also be used to set\n\n# <name>_<component>_VERSION.\n\n#\n\n# Note that if version information is found via pkg-config,\n\n# <name>_<component>_FIND_VERSION can be set to require a particular version\n\n# for each component.\n\n#\n\n# If SKIP_DEPENDENCY_HANDLING is not set, the INTERFACE_LINK_LIBRARIES property\n\n# of the imported target for <component> will be set to contain the imported\n\n# targets for the components listed in <name>_<component>_component_deps.\n\n# <component>_FOUND will also be set to false if any of the compoments in\n\n# <name>_<component>_component_deps are not found.  This requires the components\n\n# in <name>_<component>_component_deps to be listed before <component> in the\n\n# COMPONENTS argument.\n\n#\n\n# The following variables will be set:\n\n#\n\n# ``<name>_TARGETS``\n\n#   the imported targets\n\n# ``<name>_LIBRARIES``\n\n#   the found libraries\n\n# ``<name>_INCLUDE_DIRS``\n\n#   the combined required include directories for the components\n\n# ``<name>_DEFINITIONS``\n\n#   the \"other\" CFLAGS provided by pkg-config, if any\n\n# ``<name>_VERSION``\n\n#   the value of ``<name>_<component>_VERSION`` for the first component that\n\n#   has this variable set (note that components are searched for in the order\n\n#   they are passed to the macro), although if it is already set, it will not\n\n#   be altered\n\n#\n\n# Note that these variables are never cleared, so if\n\n# ecm_find_package_handle_library_components() is called multiple times with\n\n# different components (typically because of multiple find_package() calls) then\n\n# ``<name>_TARGETS``, for example, will contain all the targets found in any\n\n# call (although no duplicates).\n\n#\n\n# Since pre-1.0.0.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2014 Alex Merry <alex.merry@kde.org>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# 1. Redistributions of source code must retain the copyright\n\n#    notice, this list of conditions and the following disclaimer.\n\n# 2. Redistributions in binary form must reproduce the copyright\n\n#    notice, this list of conditions and the following disclaimer in the\n\n#    documentation and/or other materials provided with the distribution.\n\n# 3. The name of the author may not be used to endorse or promote products\n\n#    derived from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n\n# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n\n# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n\n# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\n\n# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n\n# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n\n# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Make sure deps are included\n",
        "Line" : 160,
        "CharPositionInLine" : 12
      },
      "3" : {
        "Text" : "# This makes sure components are listed in the same order as\n\n# KNOWN_COMPONENTS (potentially important for inter-dependencies)\n",
        "Line" : 177,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# if there are any left, they are unknown components\n",
        "Line" : 187,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 5
    },
    "cmake/modules/ECMFindModuleHelpersStub.cmake" : {
      "ObjectId" : "bb8c9a62fc6d93928a32ea5c11fa1d79a7323cea",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/modules/FindCMocka.cmake" : {
      "ObjectId" : "65a13a76d20bdcb32e01ca4cfff4e75c1f563c9e",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find CMocka\n\n# Once done this will define\n\n#\n\n#  CMOCKA_ROOT_DIR - Set this variable to the root installation of CMocka\n\n#\n\n# Read-Only variables:\n\n#  CMOCKA_FOUND - system has CMocka\n\n#  CMOCKA_INCLUDE_DIR - the CMocka include directory\n\n#  CMOCKA_LIBRARIES - Link these to use CMocka\n\n#  CMOCKA_DEFINITIONS - Compiler switches required for using CMocka\n\n#\n\n#=============================================================================\n\n#  Copyright (c) 2011-2012 Andreas Schneider <asn@cryptomilk.org>\n\n#\n\n#  Distributed under the OSI-approved BSD License (the \"License\");\n\n#  see accompanying file Copyright.txt for details.\n\n#\n\n#  This software is distributed WITHOUT ANY WARRANTY; without even the\n\n#  implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n#  See the License for more information.\n\n#=============================================================================\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# show the CMOCKA_INCLUDE_DIR and CMOCKA_LIBRARIES variables only in the advanced view\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindINotify.cmake" : {
      "ObjectId" : "736e3dce42c3a50a8a7442b94492b7603d6e41bc",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# (c) 2014 Copyright ownCloud GmbH\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING* file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This module defines\n\n#  INOTIFY_INCLUDE_DIR, where to find inotify.h, etc.\n\n#  INOTIFY_LIBRARY_DIR, the directory holding the inotify library.\n\n#  INOTIFY_FOUND, If false, do not try to use inotify.\n\n# also defined, but not for general use are\n\n#  INOTIFY_LIBRARY, where to find the inotify library.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# all listed variables are TRUE\n\n# handle the QUIETLY and REQUIRED arguments and set INOTIFY_FOUND to TRUE if\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/modules/FindIcoTool.cmake" : {
      "ObjectId" : "3b3511eb3dd31ece4cd0592d04542b698d488471",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2017 Vincent Pinon <vpinon@kde.org>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindLibSSH.cmake" : {
      "ObjectId" : "94dbf762ba41cae80cffaf450fe00a9d4650683f",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find LibSSH\n\n# Once done this will define\n\n#\n\n#  LIBSSH_FOUND - system has LibSSH\n\n#  LIBSSH_INCLUDE_DIRS - the LibSSH include directory\n\n#  LIBSSH_LIBRARIES - Link these to use LibSSH\n\n#  LIBSSH_DEFINITIONS - Compiler switches required for using LibSSH\n\n#\n\n#  Copyright (c) 2009 Andreas Schneider <asn@cryptomilk.org>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Older versions of libssh like libssh-0.2 have LIBSSH_VERSION but not LIBSSH_VERSION_MAJOR\n",
        "Line" : 63,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# If the version is too old, but libs and includes are set,\n\n# find_package_handle_standard_args will set LIBSSH_FOUND to TRUE again,\n\n# so we need this if() here.\n",
        "Line" : 84,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# show the LIBSSH_INCLUDE_DIRS and LIBSSH_LIBRARIES variables only in the advanced view\n",
        "Line" : 92,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "cmake/modules/FindPackageVersionCheck.cmake" : {
      "ObjectId" : "7c026f3627138257bfbda193b56bc610d973663d",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# (c) 2014 Copyright ownCloud GmbH\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING* file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FIND_PACKAGE_VERSION_CHECK(NAME (DEFAULT_MSG|\"Custom failure message\"))\n\n#    This function is intended to be used in FindXXX.cmake modules files.\n\n#    It handles NAME_FIND_VERSION and NAME_VERSION variables in a Module.\n\n#\n\n#    Example:\n\n#    find_package(LibSSH 0.3.2)\n\n#\n\n#    # check for the version and set it\n\n#    set(LibSSH_VERSION 0.3.0)\n\n#    find_package_version_check(LibSSH DEFAULT_MSG)\n\n#\n\n#\n\n# Copyright (c) 2009 Andreas Schneider <asn@cryptomilk.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the New\n\n# BSD license.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# exact version found\n",
        "Line" : 28,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# exect version not found\n",
        "Line" : 31,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# check if newer or older\n",
        "Line" : 33,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 5
    },
    "cmake/modules/FindPdfLatex.cmake" : {
      "ObjectId" : "82fb8c659155299a540d2f8c9ec9ad02e6874c1c",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# (c) 2014 Copyright ownCloud GmbH\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING* file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindPng2Ico.cmake" : {
      "ObjectId" : "d84f667301d7f98e196bbd11a9a7ccdd0b6f6de4",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindPng2Ico\n\n# -----------\n\n#\n\n# Try to find png2ico.\n\n#\n\n# If the png2ico executable is not in your PATH, you can provide\n\n# an alternative name or full path location with the ``Png2Ico_EXECUTABLE``\n\n# variable.\n\n#\n\n# This will define the following variables:\n\n#\n\n# ``Png2Ico_FOUND``\n\n#     True if png2ico is available.\n\n#\n\n# ``Png2Ico_EXECUTABLE``\n\n#     The png2ico executable.\n\n#\n\n# If ``Png2Ico_FOUND`` is TRUE, it will also define the following imported\n\n# target:\n\n#\n\n# ``Png2Ico::Png2Ico``\n\n#     The png2ico executable.\n\n#\n\n# and the following variables:\n\n#\n\n# ``Png2Ico_HAS_COLORS_ARGUMENT``\n\n#     Whether png2ico accepts a ``--colors`` argument. `Matthias Benkmann's\n\n#     tool <http://www.winterdrache.de/freeware/png2ico/>`_ does, while the\n\n#     version of png2ico from the `\"KDE On Windows\" (kdewin)\n\n#     <https://projects.kde.org/projects/kdesupport/kdewin>`_ project does not.\n\n#\n\n# ``Png2Ico_HAS_RCFILE_ARGUMENT``\n\n#     Whether png2ico accepts an ``--rcfile`` argument. The version of png2ico\n\n#     from the `\"KDE On Windows\" (kdewin)\n\n#     <https://projects.kde.org/projects/kdesupport/kdewin>`_ project does,\n\n#     while `Matthias Benkmann's tool\n\n#     <http://www.winterdrache.de/freeware/png2ico/>`_ does not.\n\n#\n\n# Since 1.7.0.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2014 Alex Merry <alex.merry@kde.org>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# 1. Redistributions of source code must retain the copyright\n\n#    notice, this list of conditions and the following disclaimer.\n\n# 2. Redistributions in binary form must reproduce the copyright\n\n#    notice, this list of conditions and the following disclaimer in the\n\n#    documentation and/or other materials provided with the distribution.\n\n# 3. The name of the author may not be used to endorse or promote products\n\n#    derived from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n\n# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n\n# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n\n# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\n\n# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n\n# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n\n# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find png2ico\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/modules/FindQt5Keychain.cmake" : {
      "ObjectId" : "4aff32d6fb15062d2aa0f4183bd8bfeaa8dd3d6a",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# (c) 2014 Copyright ownCloud GmbH\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING* file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Try to find QtKeychain\n\n# Once done this will define\n\n#  QTKEYCHAIN_FOUND - System has QtKeychain\n\n#  QTKEYCHAIN_INCLUDE_DIRS - The QtKeychain include directories\n\n#  QTKEYCHAIN_LIBRARIES - The libraries needed to use QtKeychain\n\n#  QTKEYCHAIN_DEFINITIONS - Compiler switches required for using LibXml2\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# When we build our own Qt we also need to build QtKeychain with it\n\n# so that it doesn't pull a different Qt version. For that reason\n\n# first look in the Qt lib directory for QtKeychain.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Use PATH here because Debian 7.0 has CMake 2.8.9 and DIRECTORY is only available from 2.8.12+\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set QTKEYCHAIN_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/modules/FindSMBClient.cmake" : {
      "ObjectId" : "730498eddc7ec8e6b5ec2ec248d7c1dea0f09200",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find SMBClient\n\n# Once done this will define\n\n#\n\n#  SMBCLIENT_FOUND - system has SMBClient\n\n#  SMBCLIENT_INCLUDE_DIRS - the SMBClient include directory\n\n#  SMBCLIENT_LIBRARIES - Link these to use SMBClient\n\n#  SMBCLIENT_DEFINITIONS - Compiler switches required for using SMBClient\n\n#\n\n#  Copyright (c) 2013 Andreas Schneider <asn@cryptomilk.org>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# show the SMBCLIENT_INCLUDE_DIRS and SMBCLIENT_LIBRARIES variables only in the advanced view\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/modules/FindSQLite3.cmake" : {
      "ObjectId" : "4fd1ceb53ab82e69f2e25e827924906171f2c7ce",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find SQLite3\n\n# Once done this will define\n\n#\n\n#  SQLITE3_FOUND - system has SQLite3\n\n#  SQLITE3_INCLUDE_DIRS - the SQLite3 include directory\n\n#  SQLITE3_LIBRARIES - Link these to use SQLite3\n\n#  SQLITE3_DEFINITIONS - Compiler switches required for using SQLite3\n\n#\n\n#  Copyright (c) 2009-2013 Andreas Schneider <asn@cryptomilk.org>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# show the SQLITE3_INCLUDE_DIRS and SQLITE3_LIBRARIES variables only in the advanced view\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindSparkle.cmake" : {
      "ObjectId" : "2b0c75b95db3b1ebbc13b68d82c98cabda04c84b",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find Sparkle.framework\n\n#\n\n# Once done this will define\n\n#  SPARKLE_FOUND - system has Sparkle\n\n#  SPARKLE_LIBRARY - The framework needed to use Sparkle\n\n# Copyright (c) 2009, Vittorio Giovara <vittorio.giovara@gmail.com>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindSphinx.cmake" : {
      "ObjectId" : "953f626a597a9cee11aa18fb3e402c7be4876fbd",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# (c) 2014 Copyright ownCloud GmbH\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING* file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/GNUInstallDirs.cmake" : {
      "ObjectId" : "5249477cb0dd0d56ae158592e76b0d3d618a4609",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# GNUInstallDirs\n\n# --------------\n\n#\n\n# Define GNU standard installation directories\n\n#\n\n# Provides install directory variables as defined for GNU software:\n\n#\n\n# ::\n\n#\n\n#   http://www.gnu.org/prep/standards/html_node/Directory-Variables.html\n\n#\n\n# Inclusion of this module defines the following variables:\n\n#\n\n# ::\n\n#\n\n#   CMAKE_INSTALL_<dir>      - destination for files of a given type\n\n#   CMAKE_INSTALL_FULL_<dir> - corresponding absolute path\n\n#\n\n# where <dir> is one of:\n\n#\n\n# ::\n\n#\n\n#   BINDIR           - user executables (bin)\n\n#   SBINDIR          - system admin executables (sbin)\n\n#   LIBEXECDIR       - program executables (libexec)\n\n#   SYSCONFDIR       - read-only single-machine data (etc)\n\n#   SHAREDSTATEDIR   - modifiable architecture-independent data (com)\n\n#   LOCALSTATEDIR    - modifiable single-machine data (var)\n\n#   LIBDIR           - object code libraries (lib or lib64 or lib/<multiarch-tuple> on Debian)\n\n#   INCLUDEDIR       - C header files (include)\n\n#   OLDINCLUDEDIR    - C header files for non-gcc (/usr/include)\n\n#   DATAROOTDIR      - read-only architecture-independent data root (share)\n\n#   DATADIR          - read-only architecture-independent data (DATAROOTDIR)\n\n#   INFODIR          - info documentation (DATAROOTDIR/info)\n\n#   LOCALEDIR        - locale-dependent data (DATAROOTDIR/locale)\n\n#   MANDIR           - man documentation (DATAROOTDIR/man)\n\n#   DOCDIR           - documentation root (DATAROOTDIR/doc/PROJECT_NAME)\n\n#\n\n# Each CMAKE_INSTALL_<dir> value may be passed to the DESTINATION\n\n# options of install() commands for the corresponding file type.  If the\n\n# includer does not define a value the above-shown default will be used\n\n# and the value will appear in the cache for editing by the user.  Each\n\n# CMAKE_INSTALL_FULL_<dir> value contains an absolute path constructed\n\n# from the corresponding destination by prepending (if necessary) the\n\n# value of CMAKE_INSTALL_PREFIX.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2011 Nikita Krupen'ko <krnekit@gmail.com>\n\n# Copyright 2011 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Installation directories\n\n#\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# We check if the variable was manually set and not cached, in order to\n\n# allow projects to set the values as normal variables before including\n\n# GNUInstallDirs to avoid having the entries cached or user-editable. It\n\n# replaces the \"if(NOT DEFINED CMAKE_INSTALL_XXX)\" checks in all the\n\n# other cases.\n\n# If CMAKE_INSTALL_LIBDIR is defined, if _libdir_set is false, then the\n\n# variable is a normal one, otherwise it is a cache one.\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# If CMAKE_INSTALL_LIBDIR is not defined, it is always executed.\n\n# Otherwise:\n\n#  * if _libdir_set is false it is not executed (meaning that it is\n\n#    not a cache variable)\n\n#  * if _GNUInstallDirs_LAST_CMAKE_INSTALL_PREFIX is not defined it is\n\n#    not executed\n\n#  * if _GNUInstallDirs_LAST_CMAKE_INSTALL_PREFIX and\n\n#    CMAKE_INSTALL_PREFIX are the same string it is not executed.\n\n#    _GNUInstallDirs_LAST_CMAKE_INSTALL_PREFIX is updated after the\n\n#    execution, of this part of code, therefore at the next inclusion\n\n#    of the file, CMAKE_INSTALL_LIBDIR is defined, and the 2 strings\n\n#    are equal, meaning that the if is not executed the code the\n\n#    second time.\n",
        "Line" : 99,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Override this default 'lib' with 'lib64' iff:\n\n#  - we are on Linux system but NOT cross-compiling\n\n#  - we are NOT on debian\n\n#  - we are on a 64 bits system\n\n# reason is: amd64 ABI: http://www.x86-64.org/documentation/abi.pdf\n\n# For Debian with multiarch, use 'lib/${CMAKE_LIBRARY_ARCHITECTURE}' if\n\n# CMAKE_LIBRARY_ARCHITECTURE is set (which contains e.g. \"i386-linux-gnu\"\n\n# and CMAKE_INSTALL_PREFIX is \"/usr\"\n\n# See http://wiki.debian.org/Multiarch\n",
        "Line" : 114,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# __LAST_LIBDIR_DEFAULT is the default value that we compute from\n\n# _GNUInstallDirs_LAST_CMAKE_INSTALL_PREFIX, not a cache entry for\n\n# the value that was last used as the default.\n\n# This value is used to figure out whether the user changed the\n\n# CMAKE_INSTALL_LIBDIR value manually, or if the value was the\n\n# default one. When CMAKE_INSTALL_PREFIX changes, the value is\n\n# updated to the new default, unless the user explicitly changed it.\n",
        "Line" : 125,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# is this a debian system ?\n",
        "Line" : 135,
        "CharPositionInLine" : 38
      },
      "8" : {
        "Text" : "# not debian, rely on CMAKE_SIZEOF_VOID_P:\n",
        "Line" : 139,
        "CharPositionInLine" : 11
      },
      "9" : {
        "Text" : "# Save for next run\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Values whose defaults are relative to DATAROOTDIR.  Store empty values in\n\n# the cache and store the defaults in local variables if the cache values are\n\n# not set explicitly.  This auto-updates the defaults as DATAROOTDIR changes.\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Result directories\n\n#\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "cmake/modules/GetGitRevisionDescription.cmake" : {
      "ObjectId" : "c8d27f2e8ce494c96404086ce58982239916a44c",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Returns a version string from Git\n\n#\n\n# These functions force a re-configure on each git commit so that you can\n\n# trust the values of the variables in your build system.\n\n#\n\n#  get_git_head_revision(<refspecvar> <hashvar> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the refspec and sha hash of the current head revision\n\n#\n\n#  git_describe(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe on the source tree, and adjusting\n\n# the output so that it tests false if an error occurs.\n\n#\n\n#  git_get_exact_tag(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe --exact-match on the source tree,\n\n# and adjusting the output so that it tests false if there was no exact\n\n# matching tag.\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We must run the following at \"include\" time, not at function call time,\n\n# to find the path to this module rather than the path to a calling list file\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# .git dir not found, search parent directories\n",
        "Line" : 45,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "# We have reached the root directory, we are not in git\n",
        "Line" : 49,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# check if this is a submodule\n",
        "Line" : 56,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# TODO sanitize\n\n#if((${ARGN}\" MATCHES \"&&\") OR\n\n#\t(ARGN MATCHES \"||\") OR\n\n#\t(ARGN MATCHES \"\\\\;\"))\n\n#\tmessage(\"Please report the following error to the project!\")\n\n#\tmessage(FATAL_ERROR \"Looks like someone's doing something nefarious with git_describe! Passed arguments ${ARGN}\")\n\n#endif()\n",
        "Line" : 97,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "#message(STATUS \"Arguments to execute_process: ${ARGN}\")\n",
        "Line" : 105,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 7
    },
    "cmake/modules/MacroAddCompileFlags.cmake" : {
      "ObjectId" : "8c51296099802269007896187f35fb7d93d3a3d1",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - MACRO_ADD_COMPILE_FLAGS(target_name flag1 ... flagN)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, Oswald Buddenhagen, <ossi@kde.org>\n\n# Copyright (c) 2006, Andreas Schneider, <asn@cryptomilk.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/MacroAddLinkFlags.cmake" : {
      "ObjectId" : "eaef154015045537b540da09ab29566cfffdc35f",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - MACRO_ADD_LINK_FLAGS(target_name flag1 ... flagN)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, Oswald Buddenhagen, <ossi@kde.org>\n\n# Copyright (c) 2006, Andreas Schneider, <asn@cryptomilk.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/MacroEnsureOutOfSourceBuild.cmake" : {
      "ObjectId" : "a2e9480992696ab24318303b337689fbab019722",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - MACRO_ENSURE_OUT_OF_SOURCE_BUILD(<errorMessage>)\n\n# MACRO_ENSURE_OUT_OF_SOURCE_BUILD(<errorMessage>)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, Alexander Neundorf, <neundorf@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/MacroLogFeature.cmake" : {
      "ObjectId" : "45e27b6dff4f17a0a7e65ea56a19888180965b8b",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file defines the Feature Logging macros.\n\n#\n\n# MACRO_LOG_FEATURE(VAR FEATURE DESCRIPTION URL [REQUIRED [MIN_VERSION [COMMENTS]]])\n\n#   Logs the information so that it can be displayed at the end\n\n#   of the configure run\n\n#   VAR : TRUE or FALSE, indicating whether the feature is supported\n\n#   FEATURE: name of the feature, e.g. \"libjpeg\"\n\n#   DESCRIPTION: description what this feature provides\n\n#   URL: home page\n\n#   REQUIRED: TRUE or FALSE, indicating whether the featue is required\n\n#   MIN_VERSION: minimum version number. empty string if unneeded\n\n#   COMMENTS: More info you may want to provide.  empty string if unnecessary\n\n#\n\n# MACRO_DISPLAY_FEATURE_LOG()\n\n#   Call this to display the collected results.\n\n#   Exits CMake with a FATAL error message if a required feature is missing\n\n#\n\n# Example:\n\n#\n\n# INCLUDE(MacroLogFeature)\n\n#\n\n# FIND_PACKAGE(JPEG)\n\n# MACRO_LOG_FEATURE(JPEG_FOUND \"libjpeg\" \"Support JPEG images\" \"http://www.ijg.org\" TRUE \"3.2a\" \"\")\n\n# ...\n\n# MACRO_DISPLAY_FEATURE_LOG()\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, Alexander Neundorf, <neundorf@kde.org>\n\n# Copyright (c) 2006, Allen Winter, <winter@kde.org>\n\n# Copyright (c) 2009, Sebastian Trueg, <trueg@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# _required _minvers _comments)\n",
        "Line" : 57,
        "CharPositionInLine" : 58
      },
      "3" : {
        "Text" : "#      SET(_logtext \"${_logtext}\\n\") #double-space missing features?\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# in FeatureSummary.cmake since CMake 2.8.3\n",
        "Line" : 95,
        "CharPositionInLine" : 33
      },
      "5" : {
        "Text" : "# in FeatureSummary.cmake since CMake 2.8.3\n",
        "Line" : 103,
        "CharPositionInLine" : 31
      },
      "CommentCount" : 6
    },
    "cmake/modules/MacroOptionalFindPackage.cmake" : {
      "ObjectId" : "a066bc781c8935c3fb2fd093b6c0d4d72daf3e7a",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - MACRO_OPTIONAL_FIND_PACKAGE() combines FIND_PACKAGE() with an OPTION()\n\n# MACRO_OPTIONAL_FIND_PACKAGE( <name> [QUIT] )\n\n# This macro is a combination of OPTION() and FIND_PACKAGE(), it\n\n# works like FIND_PACKAGE(), but additionally it automatically creates\n\n# an option name WITH_<name>, which can be disabled via the cmake GUI.\n\n# or via -DWITH_<name>=OFF\n\n# The standard <name>_FOUND variables can be used in the same way\n\n# as when using the normal FIND_PACKAGE()\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006-2010 Alexander Neundorf, <neundorf@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This is just a helper macro to set a bunch of variables empty.\n\n# We don't know whether the package uses UPPERCASENAME or CamelCaseName, so we try both:\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/modules/UseDoxygen.cmake" : {
      "ObjectId" : "86622f61ca4c58bc8d297c06a0e562431ea8487f",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# (c) 2014 Copyright ownCloud GmbH\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING* file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# -helper macro to add a \"doc\" target with CMake build system. \n\n# and configure doxy.config.in to doxy.config\n\n#\n\n# target \"doc\" allows building the documentation with doxygen/dot on WIN32 and Linux\n\n# Creates .chm windows help file if MS HTML help workshop \n\n# (available from http://msdn.microsoft.com/workshop/author/htmlhelp)\n\n# is installed with its DLLs in PATH.\n\n#\n\n#\n\n# Please note, that the tools, e.g.:\n\n# doxygen, dot, latex, dvips, makeindex, gswin32, etc.\n\n# must be in path.\n\n#\n\n# Note about Visual Studio Projects: \n\n# MSVS has its own path environment which may differ from the shell.\n\n# See \"Menu Tools/Options/Projects/VC++ Directories\" in VS 7.1\n\n#\n\n# author Jan Woetzel 2004-2006\n\n# www.mip.informatik.uni-kiel.de/~jw\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# click+jump in Emacs and Visual Studio (for doxy.config) (jw)\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# we need latex for doxygen because of the formulas\n",
        "Line" : 37,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# use (configured) doxy.config from (out of place) BUILD tree:\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# use static hand-edited doxy.config from SOURCE tree:\n",
        "Line" : 61,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# using template doxy.config.in\n",
        "Line" : 67,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# failed completely...\n",
        "Line" : 74,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# create a windows help .chm file using hhc.exe\n\n# HTMLHelp DLL must be in path!\n\n# fallback: use hhw.exe interactively\n",
        "Line" : 83,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# MESSAGE(SEND_ERROR \"DBG  HHP_FILE=${HHP_FILE}\")\n",
        "Line" : 91,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# install windows help?\n\n# determine useful name for output file \n\n# should be project and version unique to allow installing \n\n# multiple projects into one global directory      \n",
        "Line" : 96,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# default\n",
        "Line" : 104,
        "CharPositionInLine" : 35
      },
      "12" : {
        "Text" : "# keep suffix\n",
        "Line" : 115,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "#MESSAGE(\"DBG ${PROJECT_BINARY_DIR}/doc/html/index.chm \\n${OUT}\")\n\n# create target used by install and package commands \n",
        "Line" : 118,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# MESSAGE(SEND_ERROR \"HTML_HELP_COMPILER=${HTML_HELP_COMPILER}\")\n",
        "Line" : 128,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 15
    },
    "cmake/modules/Warnings.cmake" : {
      "ObjectId" : "d4f7c910a6587b14d7bf6c3c1f8951b97fedc653",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# (c) 2014 Copyright ownCloud GmbH\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING* file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Fix sqlite compilation on macOS\n",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Fix sqlite compilation on MinGW\n",
        "Line" : 12,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 3
    },
    "docs/CMakeLists.txt" : {
      "ObjectId" : "de9dba2bd6ba07507270ee9aa7c358878fcbac0e",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "docs/Makefile" : {
      "ObjectId" : "89bfd02c3279203ce25584f604860e1938235e25",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for the documentation\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Print a basic help about the targets\n",
        "Line" : 32,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "## Install Antora's command tools locally\n",
        "Line" : 49,
        "CharPositionInLine" : 7
      },
      "3" : {
        "Text" : "## Remove build artifacts from output dir\n",
        "Line" : 53,
        "CharPositionInLine" : 7
      },
      "4" : {
        "Text" : "## Generate PDF version of the manual\n",
        "Line" : 57,
        "CharPositionInLine" : 5
      },
      "CommentCount" : 5,
      "Errorlog" : "line 42:10 token recognition error at: '\\0'\nline 44:10 token recognition error at: '\\0'\n"
    },
    "man/CMakeLists.txt" : {
      "ObjectId" : "86782966b814feee08d15c2f5ca59c8e73c262f2",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Sphinx cache with pickled ReST documents\n",
        "Line" : 3,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# HTML output directory\n",
        "Line" : 6,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "shell_integration/CMakeLists.txt" : {
      "ObjectId" : "959d94b7e4199d20bcbcab82b766dfaae601fe00",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "shell_integration/MacOSX/CMakeLists.txt" : {
      "ObjectId" : "4173f6e9429eed95137e1ca878851c70beea40ff",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The bundle identifier and application group need to have compatible values with the client\n\n# to be able to open a Mach port across the extension's sandbox boundary.\n\n# Pass the info through the xcodebuild command line and make sure that the project uses\n\n# those user-defined settings to build the plist.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# for the ownCloud.icns to be generated\n",
        "Line" : 17,
        "CharPositionInLine" : 62
      },
      "CommentCount" : 2
    },
    "shell_integration/dolphin/CMakeLists.txt" : {
      "ObjectId" : "ff8888a7a671ff3b707fea165da13faa2dd42d77",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# kcoreaddons_add_plugin uses deprecated VAR PLUGIN_INSTALL_DIR\n\n# when that is fixed and you want to remove this workaround,\n\n# you need to _require_ the new enough kcoreaddons\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---HELPER---\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#---OVERLAY PLUGIN---\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#---ACTION PLUGIN---\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "shell_integration/icons/CMakeLists.txt" : {
      "ObjectId" : "04235c55b476a4f237ddac52698d2964367b4875",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# the GLOB returns a absolute path. Make it relative by replacing the current src dir by nothing\n",
        "Line" : 8,
        "CharPositionInLine" : 5
      },
      "CommentCount" : 1
    },
    "shell_integration/nautilus/CMakeLists.txt" : {
      "ObjectId" : "d8f75d8a57c40ed089d243bdc341169dba9d925b",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# copy the python nautilus plugin to build dir as it is going to\n\n# be changed.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Call the setupappname.sh script to set the custom app name.\n",
        "Line" : 7,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Create a nemo plugin script from the nautilus one. \n\n# nemocmd copies the syncstate.py and performs string replacement.\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Create a caja plugin script from the nautilus one. \n\n# cajacmd copies the syncstate.py and performs string replacement.\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "shell_integration/windows/CMakeLists.txt" : {
      "ObjectId" : "2c004fd6728a56d74845c321c99fc189ef2dad00",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use static runtime for all subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "shell_integration/windows/OCContextMenu/CMakeLists.txt" : {
      "ObjectId" : "badfbb638b582be2cf1ec404a6bc58033d48a978",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "shell_integration/windows/OCOverlays/CMakeLists.txt" : {
      "ObjectId" : "13526b74905137a2b8aab9a6b2d78e71cba6e577",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "shell_integration/windows/OCUtil/CMakeLists.txt" : {
      "ObjectId" : "d353422f4c49ab5be85cead76141d954996ef87b",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/3rdparty/qtlockedfile/qtlockedfile.pri" : {
      "ObjectId" : "ad0c2fbabfb03a23d17060a7861073a4ba5e2141",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "src/3rdparty/qtokenizer/qtokenizer.pro" : {
      "ObjectId" : "4dcd70028114d6e1910919f62d2721ade067dd8a",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "src/3rdparty/qtokenizer/test/test.pro" : {
      "ObjectId" : "269fcf6b0286b37062ce82bcdec8b26acf2e3edd",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Input\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/3rdparty/qtsingleapplication/qtsingleapplication.pri" : {
      "ObjectId" : "c807763dce01e2aa6d987b302bd75a1afa3a2f6b",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "src/3rdparty/qtsingleapplication/qtsinglecoreapplication.pri" : {
      "ObjectId" : "3d6301b29c4fd97bebf8a99665834c12d2fef927",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "3147645f9566fe733cc08a8e7e6c32c60153da81",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO: OSX and LIB_ONLY seem to require this to go to binary dir only\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO: Mingw64 7.3 might also need to be excluded here as it seems to not automatically link libssp\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Enable DEP & ASLR\n",
        "Line" : 37,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# s/y k/y ALL k/ for building this target always\n",
        "Line" : 61,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "src/cmd/CMakeLists.txt" : {
      "ObjectId" : "da61b6bf9a00b24b17e6ee3d2e0a72c02ae94299",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Need tokenizer for netrc parser\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "src/common/common.cmake" : {
      "ObjectId" : "aaaed36af534dc05d17821b3bb850d332f54c8eb",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Just list files to build as part of the csync dynamic lib.\n\n# Essentially they could be in the same directory but are separate to\n\n# help keep track of the different code licenses.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/crashreporter/CMakeLists.txt" : {
      "ObjectId" : "3550f21e7ac44a4cbd00befb6804cf0ecda8dad0",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO: differentiate release channel\n\n# if(BUILD_RELEASE)\n\n#     set(CRASHREPORTER_RELEASE_CHANNEL \"release\")\n\n# else()\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# endif()\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Theme\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Sources\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/csync/CMakeLists.txt" : {
      "ObjectId" : "f881db4ac33df3966b405cf0136a7a7233b87b8d",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# global needed variables\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add definitions\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Specific option for builds tied to servers that do not support renaming extensions\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# make sure that the path for the local sqlite3 is before the system one\n",
        "Line" : 72,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# For src/common/utility_mac.cpp\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/csync/ConfigureChecks.cmake" : {
      "ObjectId" : "d6a028ce804568bc8c60423efb548eab03b1261d",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# HEADER FILES\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FUNCTIONS\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# librt\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "src/csync/DefineOptions.cmake" : {
      "ObjectId" : "5cb525fe4fdd16f513232ce97f5def93b7c5ecfe",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/csync/config_csync.h.cmake" : {
      "ObjectId" : "aff1bb74457d6c2124db5705056d7ce5d7685f9a",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKESOURCE",
      "CommentCount" : 0
    },
    "src/gui/CMakeLists.txt" : {
      "ObjectId" : "e83b0e7474b121f5fb6e27cd868055fbf3817f3d",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#TODO Move resources files\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define this, we need to check in updater.cpp\n",
        "Line" : 130,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# Sparkle.framework is installed from here because macdeployqt's CopyFramework breaks on this bundle\n\n# as its logic is tightly tailored around Qt5 frameworks\n",
        "Line" : 135,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# add executable icon on windows and osx\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# UPSTREAM our ECMAddAppIcon.cmake then require that version here\n\n# find_package(ECM 1.7.0 REQUIRED NO_MODULE)\n\n# list(APPEND CMAKE_MODULE_PATH ${ECM_MODULE_PATH})\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# we may not add MACOSX_BUNDLE here, if not building one\n",
        "Line" : 241,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# add_executable( ${APPLICATION_EXECUTABLE} main.cpp ${final_src})\n",
        "Line" : 243,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# set(CMAKE_INSTALL_PREFIX \".\") # Examples use /Applications. hurmpf.\n",
        "Line" : 246,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# we must add MACOSX_BUNDLE only if building a bundle\n",
        "Line" : 249,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# We want to access Cocoa specific structures in the code above\n\n# and need the platform plugin interface for that - which is private.\n",
        "Line" : 291,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# not actually a library. Will pull in includes\n",
        "Line" : 293,
        "CharPositionInLine" : 69
      },
      "11" : {
        "Text" : "## handle DBUS for Fdo notifications\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# application.cpp still uses QDesktopServices::storageLocation\n",
        "Line" : 317,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "src/gui/updater/CMakeLists.txt" : {
      "ObjectId" : "ecfba63186b31bc03124bc45627612aa2a3f3267",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/libsync/CMakeLists.txt" : {
      "ObjectId" : "f315509a9e2fa02931fcb43cf0257a352dd185f4",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## begin zsync\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ntohs\n",
        "Line" : 81,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# ensure size_t is 64 bits\n",
        "Line" : 85,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "## end zsync\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# These headers are installed for libowncloudsync to be used by 3rd party apps\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/libsync/vfs/CMakeLists.txt" : {
      "ObjectId" : "306988f46fbe7c429151745af90ccebe5635fd3d",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Globbing for plugins has a problem with in-source builds\n\n# that create directories for the build.\n\n#file(GLOB vfsPlugins RELATIVE ${CMAKE_CURRENT_LIST_DIR} \"*\")\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/libsync/vfs/suffix/CMakeLists.txt" : {
      "ObjectId" : "3765e028551452978bfc081967da2d010fab033f",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# for being loadable when client run from build dir\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# For being lodable when client run from install dir (after make macdeployqt)\n",
        "Line" : 24,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "89c2b2712cdd9f867616a1d99a31154105cbc706",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/csync/CMakeLists.txt" : {
      "ObjectId" : "5a8336c15abcba9d0ccc741cb653815f94c7be0b",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# create test library\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# create tests\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# std\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# vio\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# encoding\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "test/manual/favlink/favlink.pro" : {
      "ObjectId" : "8490b79ce900df344ede0d207c25ac150faebe2a",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "######################################################################\n\n# Automatically generated by qmake (2.01a) Do. M�r 21 15:22:28 2013\n\n######################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Input\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "test/mockserver/CMakeLists.txt" : {
      "ObjectId" : "fecf3d60609322a4956b9e22eea9db4a884852d5",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#qt_wrap_ui(mockserver_UI_SRCS ${mockserver_UI})\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add_executable( ${MOCKSERVER_NAME} main.cpp ${final_src})\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "test/owncloud_add_test.cmake" : {
      "ObjectId" : "cbd6ab28ea8760e6ec1b1ed5bb2a7402723ea9e3",
      "LastModified" : "2019-04-17T11:08:31Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "translations/Makefile" : {
      "ObjectId" : "25122c0753e787e495e9e75c6204e2575cc0dcfe",
      "LastModified" : "2019-04-10T09:12:04Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Translation\n\n#--------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 72,
    "CMAKESOURCE" : 1,
    "QMAKE" : 6,
    "MAKEFILE" : 3
  },
  "ElapsedTime" : 14541
}