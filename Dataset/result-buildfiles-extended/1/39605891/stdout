{
  "Repository" : "39605891",
  "Revision" : "HEAD",
  "ObjectId" : "088041ca6cb379550c1c3713fc425a25a7a9e6ee",
  "CommitTime" : "2019-04-18T15:49:16Z",
  "Files" : {
    "Makefile" : {
      "ObjectId" : "ea4b7f4969653d81d03297c690c42a5a405a94f5",
      "LastModified" : "2019-01-05T16:34:31Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# -fsanitize=float-cast-overflow\n",
        "Line" : 32,
        "CharPositionInLine" : 114
      },
      "1" : {
        "Text" : "# Main build task, default build\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Build test target\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Build the shared library version of the leekscript\n\n# (libleekscript.so in build/)\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Install the shared library by copying the libleekscript.so file\n\n# into /usr/lib/ folder.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Build with coverage flags enabled\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Run tests\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Benchmark\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Run a benchmark\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Run a benchmark on operator\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Valgrind\n\n# `apt install valgrind`\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Travis task, useless in local.\n\n# Build a leekscript docker image, compile, run tests and run cpp-coveralls\n\n# (coverage results are sent to coveralls.io).\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Coverage results with lcov.\n\n# `apt install lcov`\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Build with profile flags enabled\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# gprof profiling, results displayed by gprof2dot & dot\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Build with sanitize flags enabled\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# callgrind profiling, results displayed by kcachegrind\n\n# `apt install kcachegrind`\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Clean every build files by destroying the build/ folder.\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Check useless headers and stuff using cppclean\n\n# `pip install --upgrade cppclean`\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Line couning with cloc.\n\n# `apt-get install cloc`\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Documentation with doxygen\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Get remaining to do work in project\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Objects dependencies\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 827
}