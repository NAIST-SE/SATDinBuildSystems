{
  "Repository" : "43395319",
  "Revision" : "HEAD",
  "ObjectId" : "73598ddcccc766b446e32cc5e36dc940cd995558",
  "CommitTime" : "2019-04-18T23:49:57Z",
  "Files" : {
    "docs/Makefile" : {
      "ObjectId" : "165058b672f6e2abde828f7ab059773aaf0a122d",
      "LastModified" : "2019-02-13T01:35:06Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# The TypeDoc build for ldclient-js is more complicated than for ldclient-node because ldclient-js takes\n\n# some of its types from ldclient-js-common. TypeDoc unfortunately does not understand the directive\n\n# \"export * from 'ldclient-js-common'\" - so, by default, even though it does see the common types (like\n\n# LDUser), it will not include them in the output.\n\n#\n\n# The current solution is to run TypeDoc on a hacked-together file that puts all of the types directly\n\n# into one package. The sed commands below create this temporary declaration file by taking the types file\n\n# from ldclient-js and replacing the ldclient-js-common imports with the actual contents of the\n\n# ldclient-js-common module. We then run TypeDoc from the docs directory, which contains its own\n\n# tsconfig.json that points to the temporarily file instead of the original files.\n\n# \n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Extract the whole module declaration from ldclient-js-common, then remove the first and last lines\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Replace the block from DOCBUILD-START-REPLACE to DOCBUILD-END-REPLACE with that excerpt\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 1110
}