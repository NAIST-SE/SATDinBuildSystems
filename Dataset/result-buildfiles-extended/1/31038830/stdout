{
  "Repository" : "31038830",
  "Revision" : "HEAD",
  "ObjectId" : "6d4f419096d32c2a0f01f4baddd8550287e13cdb",
  "CommitTime" : "2019-04-12T22:40:54Z",
  "Files" : {
    "3rdparty/SDL/SDL2-2.0.9/CMakeLists.txt" : {
      "ObjectId" : "0128c7ac7d3e6aaa5cd614f2305f43ab95ee77d2",
      "LastModified" : "2018-12-03T20:05:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# !!! FIXME: this should probably do \"MACOSX_RPATH ON\" as a target property\n\n# !!! FIXME:  for the SDL2 shared library (so you get an\n\n# !!! FIXME:  install_name (\"soname\") of \"@rpath/libSDL-whatever.dylib\"\n\n# !!! FIXME:  instead of \"/usr/local/lib/libSDL-whatever.dylib\"), but I'm\n\n# !!! FIXME:  punting for now and leaving the existing behavior. Until this\n\n# !!! FIXME:  properly resolved, this line silences a warning in CMake 3.0+.\n\n# !!! FIXME:  remove it and this comment entirely once the problem is\n\n# !!! FIXME:  properly resolved.\n\n#cmake_policy(SET CMP0042 OLD)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# General settings\n\n# Edit include/SDL_version.h and change the version, then:\n\n#   SDL_MICRO_VERSION += 1;\n\n#   SDL_INTERFACE_AGE += 1;\n\n#   SDL_BINARY_AGE += 1;\n\n# if any functions have been added, set SDL_INTERFACE_AGE to 0.\n\n# if backwards compatibility has been broken,\n\n# set SDL_BINARY_AGE and SDL_INTERFACE_AGE to 0.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# the following should match the versions in Xcode project file:\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set defaults preventing destination file conflicts\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Calculate a libtool-like version number\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# General settings & flags\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Check for 64 or 32 bit\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Get the platform\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# TODO: iOS?\n",
        "Line" : 122,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Don't mistake osx for unix\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# JavaScript does not yet have threading support, so disable pthreads when building for Emscripten.\n",
        "Line" : 142,
        "CharPositionInLine" : 40
      },
      "11" : {
        "Text" : "# Default option knobs\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Compiler info\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# VisualStudio 8.0+\n",
        "Line" : 165,
        "CharPositionInLine" : 34
      },
      "14" : {
        "Text" : "#set(CMAKE_C_FLAGS \"/ZI /WX- /\n",
        "Line" : 167,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Default flags, if not set otherwise\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Hackish, but does the trick on Win32\n",
        "Line" : 187,
        "CharPositionInLine" : 37
      },
      "17" : {
        "Text" : "# Make sure /RTC1 is disabled, otherwise it will use functions from the CRT\n",
        "Line" : 203,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Those are used for pkg-config and friends, so that the SDL2.pc, sdl2-config,\n\n# etc. are created correctly.\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# When building shared lib for Windows with MinGW,\n\n# avoid the DLL having a \"lib\" prefix\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Emscripten toolchain has a nonempty default value for this, and the checks\n\n# in this file need to change that, so remember the original value, and\n\n# restore back to that afterwards. For check_function_exists() to work in\n\n# Emscripten, this value must be at its default value.\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# We build SDL on cygwin without the UNIX emulation layer\n",
        "Line" : 229,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# General includes\n",
        "Line" : 243,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# All these ENABLED_BY_DEFAULT vars will default to ON if not specified, so\n\n#  you only need to have a platform override them if they are disabling.\n",
        "Line" : 251,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Set up default values for the currently supported set of subsystems:\n\n# Emscripten/Javascript does not have assembly support, a dynamic library\n\n# loading architecture, low-level CPU inspection or multithreading.\n",
        "Line" : 255,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "#set_option(DEPENDENCY_TRACKING \"Use gcc -MMD -MT dependency tracking\" ON)\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# TODO: We should (should we?) respect cmake's ${BUILD_SHARED_LIBS} flag here\n\n# The options below are for compatibility to configure's default behaviour.\n",
        "Line" : 347,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# General source files\n",
        "Line" : 355,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Do nada - use optimization settings to determine the assertion level\n",
        "Line" : 375,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# Compiler option evaluation\n",
        "Line" : 389,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Check for -Wall first, so later things can override pieces of it.\n",
        "Line" : 391,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# TODO: Those all seem to be quite GCC specific - needs to be\n\n# reworked for better compiler support\n",
        "Line" : 472,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# if only HAVE_ALTIVEC_H_HDR is set\n",
        "Line" : 613,
        "CharPositionInLine" : 31
      },
      "33" : {
        "Text" : "# TODO: SDL_cpuinfo.h needs to support the user's configuration wish\n\n# for MSVC - right now it is always activated\n",
        "Line" : 622,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# TODO:\n\n#else()\n\n#  if(USE_GCC OR USE_CLANG)\n\n#    list(APPEND EXTRA_CFLAGS \"-mno-sse\" \"-mno-sse2\" \"-mno-sse3\" \"-mno-mmx\")\n\n#  endif()\n",
        "Line" : 633,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# TODO: Can't deactivate on FreeBSD? w/o LIBC, SDL_stdinc.h can't define\n\n# anything.\n",
        "Line" : 640,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# needed for M_PI\n",
        "Line" : 667,
        "CharPositionInLine" : 41
      },
      "37" : {
        "Text" : "# TODO: refine the mprotect check\n",
        "Line" : 683,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# Enable/disable various subsystems of the SDL library\n",
        "Line" : 739,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Haptic requires some private functions from the joystick subsystem.\n",
        "Line" : 752,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "# TODO: in configure.in, the test for LOADSO and SDL_DLOPEN is a bit weird:\n\n# if LOADSO is not wanted, SDL_LOADSO_DISABLED is set\n\n# If however on Unix or APPLE dlopen() is detected via CheckDLOPEN(),\n\n# SDL_LOADSO_DISABLED will not be set, regardless of the LOADSO settings\n",
        "Line" : 766,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# General SDL subsystem options, valid for all platforms\n",
        "Line" : 771,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# CheckDummyAudio/CheckDiskAudio - valid for all platforms\n",
        "Line" : 773,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "# Relevant for Unix/Darwin only\n",
        "Line" : 789,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# SDL_spinlock.c Needs to be compiled in ARM mode.\n\n# There seems to be no better way currently to set the ARM mode.\n\n# see: https://issuetracker.google.com/issues/62264618\n\n# Another option would be to set ARM mode to all compiled files\n",
        "Line" : 809,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "# Core stuff\n",
        "Line" : 875,
        "CharPositionInLine" : 4
      },
      "46" : {
        "Text" : "#enable gles\n",
        "Line" : 882,
        "CharPositionInLine" : 4
      },
      "47" : {
        "Text" : "# Platform-specific options and settings\n",
        "Line" : 913,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# Hide noisy warnings that intend to aid mostly during initial stages of porting a new\n\n# project. Uncomment at will for verbose cross-compiling -I/../ path info.\n",
        "Line" : 915,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "#enable gles\n",
        "Line" : 958,
        "CharPositionInLine" : 4
      },
      "50" : {
        "Text" : "# Need to check for Raspberry PI first and add platform specific compiler flags, otherwise the test for GLES fails!\n",
        "Line" : 997,
        "CharPositionInLine" : 4
      },
      "51" : {
        "Text" : "# We've already found the header, so REQUIRE the lib to be present\n",
        "Line" : 1068,
        "CharPositionInLine" : 8
      },
      "52" : {
        "Text" : "# seems to be BSD specific - limit the test to BSD only?\n",
        "Line" : 1089,
        "CharPositionInLine" : 20
      },
      "53" : {
        "Text" : "# Prevent codegen that would use the VC runtime libraries.\n",
        "Line" : 1170,
        "CharPositionInLine" : 4
      },
      "54" : {
        "Text" : "# Check for DirectX\n",
        "Line" : 1177,
        "CharPositionInLine" : 2
      },
      "55" : {
        "Text" : "# xinput.h may need windows.h, but doesn't include it itself.\n",
        "Line" : 1190,
        "CharPositionInLine" : 6
      },
      "56" : {
        "Text" : "# TODO: change $ENV{DXSDL_DIR} to get the path from the include checks\n",
        "Line" : 1218,
        "CharPositionInLine" : 6
      },
      "57" : {
        "Text" : "# headers needed elsewhere ...\n",
        "Line" : 1226,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# requires SDL_LOADSO on Windows (IME, DX, etc.)\n",
        "Line" : 1251,
        "CharPositionInLine" : 4
      },
      "59" : {
        "Text" : "# Libraries for Win32 native and MinGW\n",
        "Line" : 1294,
        "CharPositionInLine" : 2
      },
      "60" : {
        "Text" : "# TODO: in configure.in the check for timers is set on\n\n# cygwin | mingw32* - does this include mingw32CE?\n",
        "Line" : 1297,
        "CharPositionInLine" : 2
      },
      "61" : {
        "Text" : "# TODO: rework this all for proper MacOS X, iOS and Darwin support\n",
        "Line" : 1379,
        "CharPositionInLine" : 2
      },
      "62" : {
        "Text" : "# We always need these libs on macOS at the moment.\n\n# !!! FIXME: we need Carbon for some very old API calls in\n\n# !!! FIXME:  src/video/cocoa/SDL_cocoakeyboard.c, but we should figure out\n\n# !!! FIXME:  how to dump those.\n",
        "Line" : 1381,
        "CharPositionInLine" : 2
      },
      "63" : {
        "Text" : "# Requires the darwin file implementation\n",
        "Line" : 1390,
        "CharPositionInLine" : 2
      },
      "64" : {
        "Text" : "# !!! FIXME: modern CMake doesn't need \"LANGUAGE C\" for Objective-C.\n",
        "Line" : 1394,
        "CharPositionInLine" : 4
      },
      "65" : {
        "Text" : "# !!! FIXME: why is COREVIDEO inside this if() block?\n",
        "Line" : 1397,
        "CharPositionInLine" : 4
      },
      "66" : {
        "Text" : "# !!! FIXME: modern CMake doesn't need \"LANGUAGE C\" for Objective-C.\n",
        "Line" : 1406,
        "CharPositionInLine" : 4
      },
      "67" : {
        "Text" : "# !!! FIXME: modern CMake doesn't need \"LANGUAGE C\" for Objective-C.\n",
        "Line" : 1466,
        "CharPositionInLine" : 4
      },
      "68" : {
        "Text" : "# Actually load the frameworks at the end so we don't duplicate include.\n",
        "Line" : 1472,
        "CharPositionInLine" : 2
      },
      "69" : {
        "Text" : "# iOS hack needed - http://code.google.com/p/ios-cmake/ ?\n",
        "Line" : 1502,
        "CharPositionInLine" : 2
      },
      "70" : {
        "Text" : "# TODO: Use FIND_PACKAGE(OpenGL) instead\n",
        "Line" : 1547,
        "CharPositionInLine" : 6
      },
      "71" : {
        "Text" : "# Dummies\n\n# configure.in does it differently:\n\n# if not have X\n\n#   if enable_X {  SDL_X_DISABLED = 1 }\n\n#   [add dummy sources]\n\n# so it always adds a dummy, without checking, if it was actually requested.\n\n# This leads to missing internal references on building, since the\n\n# src/X/*.c does not get included.\n",
        "Line" : 1564,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# results in unresolved symbols on OSX\n",
        "Line" : 1574,
        "CharPositionInLine" : 33
      },
      "73" : {
        "Text" : "# We always need to have threads and timers around\n",
        "Line" : 1601,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# Append the -MMD -MT flags\n\n# if(DEPENDENCY_TRACKING)\n\n#   if(COMPILER_IS_GNUCC)\n\n#     set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -MMD -MT \\$@\")\n\n#   endif()\n\n# endif()\n",
        "Line" : 1617,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# Prepare the flags and remove duplicates\n",
        "Line" : 1627,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# Compat helpers for the configuration files\n",
        "Line" : 1640,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# TODO: we need a Windows script, too\n",
        "Line" : 1642,
        "CharPositionInLine" : 2
      },
      "78" : {
        "Text" : "# Clean up the different lists\n",
        "Line" : 1665,
        "CharPositionInLine" : 2
      },
      "79" : {
        "Text" : "# MESSAGE(STATUS \"SDL_LIBS: ${SDL_LIBS}\")\n\n# MESSAGE(STATUS \"SDL_STATIC_LIBS: ${SDL_STATIC_LIBS}\")\n",
        "Line" : 1674,
        "CharPositionInLine" : 2
      },
      "80" : {
        "Text" : "##### Info output #####\n",
        "Line" : 1687,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# Longest option is VIDEO_X11_XSCREENSAVER = 22 characters\n\n# Get the padding\n",
        "Line" : 1704,
        "CharPositionInLine" : 2
      },
      "82" : {
        "Text" : "# Ensure that the extra cflags are used at compile time\n",
        "Line" : 1730,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# Always build SDLmain\n",
        "Line" : 1733,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# Don't try to link with the default set of libraries.\n",
        "Line" : 1759,
        "CharPositionInLine" : 4
      },
      "85" : {
        "Text" : "# Note: Apparently, OUTPUT_NAME must really be unique; even when\n\n# CMAKE_IMPORT_LIBRARY_SUFFIX or the like are given. Otherwise\n\n# the static build may race with the import lib and one will get\n\n# clobbered, when the suffix is realized via subsequent rename.\n",
        "Line" : 1777,
        "CharPositionInLine" : 4
      },
      "86" : {
        "Text" : "# TODO: Win32 platforms keep the same suffix .lib for import and static\n\n# libraries - do we need to consider this?\n",
        "Line" : 1788,
        "CharPositionInLine" : 2
      },
      "87" : {
        "Text" : "##### Tests #####\n",
        "Line" : 1798,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "##### Installation targets #####\n",
        "Line" : 1807,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "##### Export files #####\n",
        "Line" : 1813,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "# \".so\", \".dylib\", etc.\n",
        "Line" : 1859,
        "CharPositionInLine" : 46
      },
      "91" : {
        "Text" : "# FreeBSD uses ${PREFIX}/libdata/pkgconfig\n",
        "Line" : 1870,
        "CharPositionInLine" : 4
      },
      "92" : {
        "Text" : "# TODO: what about the .spec file? Is it only needed for RPM creation?\n",
        "Line" : 1877,
        "CharPositionInLine" : 2
      },
      "93" : {
        "Text" : "##### Uninstall target #####\n",
        "Line" : 1881,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 94
    },
    "3rdparty/SDL/SDL2-2.0.9/SDL2Config.cmake" : {
      "ObjectId" : "4a5f646020ef4c415e082c799932104c37ddaa3a",
      "LastModified" : "2018-12-03T20:05:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/SDL/SDL2-2.0.9/android-project/app/proguard-rules.pro" : {
      "ObjectId" : "eaf0e916cdf0b2a92e4ad3c261f620b2f0f50dbb",
      "LastModified" : "2018-12-03T20:05:51Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# By default, the flags in this file are appended to flags specified\n\n# in [sdk]/tools/proguard/proguard-android.txt\n\n# You can edit the include path and order by changing the proguardFiles\n\n# directive in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add any project specific keep options here:\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "3rdparty/SDL/SDL2-2.0.9/cmake/macros.cmake" : {
      "ObjectId" : "96a7ce8b1406692acaf32a25d9c864da3f94cb45",
      "LastModified" : "2018-12-03T20:05:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Message Output\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# prefix for each element\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Do not use string(REPLACE \";\" \" \") here to avoid messing up list\n\n# entries\n",
        "Line" : 60,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "3rdparty/SDL/SDL2-2.0.9/cmake/sdlchecks.cmake" : {
      "ObjectId" : "4a2c3ed57856e3a43ab48f5f7cd40db9c4b7043b",
      "LastModified" : "2018-12-03T20:05:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# reduce the library name for shared linking\n",
        "Line" : 7,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# resolves symlinks\n",
        "Line" : 9,
        "CharPositionInLine" : 69
      },
      "2" : {
        "Text" : "# Requires:\n\n# - n/a\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Requires:\n\n# - n/a\n\n# Optional:\n\n# - ALSA_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Requires:\n\n# - PkgCheckModules\n\n# Optional:\n\n# - PULSEAUDIO_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Requires:\n\n# - PkgCheckModules\n\n# Optional:\n\n# - JACK_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Requires:\n\n# - PkgCheckModules\n\n# Optional:\n\n# - ESD_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Requires:\n\n# - n/a\n\n# Optional:\n\n# - ARTS_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# TODO\n",
        "Line" : 243,
        "CharPositionInLine" : 10
      },
      "9" : {
        "Text" : "# Requires:\n\n# - n/a\n\n# Optional:\n\n# - NAS_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# TODO: set include paths properly, so the NAS headers are found\n",
        "Line" : 263,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Requires:\n\n# - n/a\n\n# Optional:\n\n# - SNDIO_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 287,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# TODO: set include paths properly, so the sndio headers are found\n",
        "Line" : 294,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Requires:\n\n# - PkgCheckModules\n\n# Optional:\n\n# - FUSIONSOUND_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 318,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Requires:\n\n# - LIBSAMPLERATE\n\n# Optional:\n\n# - LIBSAMPLERATE_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 348,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Requires:\n\n# - n/a\n\n# Optional:\n\n# - X11_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 373,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Check for multitouch\n",
        "Line" : 510,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# Requires:\n\n# - EGL\n\n# - PkgCheckModules\n\n# Optional:\n\n# - MIR_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 567,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Requires:\n\n# - EGL\n\n# - PkgCheckModules\n\n# Optional:\n\n# - WAYLAND_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 628,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# We have to generate some protocol interface code for some unstable Wayland features.\n",
        "Line" : 665,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "# Requires:\n\n# - n/a\n\n#\n",
        "Line" : 702,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Apple always has Cocoa.\n",
        "Line" : 707,
        "CharPositionInLine" : 14
      },
      "22" : {
        "Text" : "# Requires:\n\n# - PkgCheckModules\n\n# Optional:\n\n# - DIRECTFB_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 720,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Requires:\n\n# - n/a\n",
        "Line" : 751,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Requires:\n\n# - nada\n",
        "Line" : 781,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Requires:\n\n# - nada\n",
        "Line" : 799,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Requires:\n\n# - nada\n\n# Optional:\n\n# - THREADS opt\n\n# Sets:\n\n# PTHREAD_CFLAGS\n\n# PTHREAD_LIBS\n",
        "Line" : 832,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# the android libc provides built-in support for pthreads, so no\n\n# additional linking or compile flags are necessary\n",
        "Line" : 842,
        "CharPositionInLine" : 6
      },
      "28" : {
        "Text" : "# causes Carbon.p complaints?\n\n# set(PTHREAD_CFLAGS \"-D_REENTRANT -D_THREAD_SAFE\")\n",
        "Line" : 852,
        "CharPositionInLine" : 6
      },
      "29" : {
        "Text" : "# Run some tests\n",
        "Line" : 884,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# Can be faked, if necessary\n\n# Can be faked, if necessary\n",
        "Line" : 951,
        "CharPositionInLine" : 65
      },
      "31" : {
        "Text" : "# Requires\n\n# - nada\n\n# Optional:\n\n# Sets:\n\n# USB_LIBS\n\n# USB_CFLAGS\n",
        "Line" : 968,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Requires:\n\n# - n/a\n",
        "Line" : 1108,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Requires:\n\n# - EGL\n\n# - PkgCheckModules\n\n# Optional:\n\n# - KMSDRM_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 1143,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 34
    },
    "3rdparty/SDL/SDL2-2.0.9/include/SDL_config.h.cmake" : {
      "ObjectId" : "48dd2d41b785186e3eaced3092cefe6157f300e6",
      "LastModified" : "2018-12-03T20:05:51Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/*\n  Simple DirectMedia Layer\n  Copyright (C) 1997-2018 Sam Lantinga <slouken@libsdl.org>\n\n  This software is provided 'as-is', without any express or implied\n  warranty.  In no event will the authors be held liable for any damages\n  arising from the use of this software.\n\n  Permission is granted to anyone to use this software for any purpose,\n  including commercial applications, and to alter it and redistribute it\n  freely, subject to the following restrictions:\n\n  1. The origin of this software must not be misrepresented; you must not\n     claim that you wrote the original software. If you use this software\n     in a product, an acknowledgment in the product documentation would be\n     appreciated but is not required.\n  2. Altered source versions must be plainly marked as such, and must not be\n     misrepresented as being the original software.\n  3. This notice may not be removed or altered from any source distribution.\n*/",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/**\n *  \\file SDL_config.h.in\n *\n *  This is a set of defines to configure the SDL features\n */",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/* General platform specific identifiers */",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* C language features */",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/* C datatypes */\n/* Define SIZEOF_VOIDP for 64/32 architectures */",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/* Comment this if you want to build without any C library requirements */",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/* Useful headers */",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "/* C library functions */",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "/* We may need some replacement for stdarg.h here */",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "/* SDL internal assertion support */",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "/* Allow disabling of core subsystems */",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "/* Enable various audio drivers */",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "/* Enable various input drivers */",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "/* Enable various sensor drivers */",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "/* Enable various shared object loading systems */",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "/* Enable various threading systems */",
        "Line" : 306,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "/* Enable various timer systems */",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "/* Enable various video drivers */",
        "Line" : 319,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "/* Enable OpenGL support */",
        "Line" : 376,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "/* Enable Vulkan support */",
        "Line" : 388,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "/* Enable system power support */",
        "Line" : 391,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "/* Enable system filesystem support */",
        "Line" : 400,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "/* Enable assembly routines */",
        "Line" : 409,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "/* Enable dynamic libsamplerate support */",
        "Line" : 413,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "/* Platform specific definitions */",
        "Line" : 416,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "/* Older Visual C++ headers don't have the Win64-compatible typedefs... */",
        "Line" : 451,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 26
    },
    "3rdparty/SDL/SDL2-2.0.9/src/hidapi/Makefile.am" : {
      "ObjectId" : "3382a1f040bcd84e64b5b4d49f3bdd06df9d4604",
      "LastModified" : "2018-12-03T20:05:51Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "3rdparty/SDL/SDL2-2.0.9/src/hidapi/hidtest/Makefile.am" : {
      "ObjectId" : "d2786445a316ce0eb0e1033eb599ebf6fddd29d4",
      "LastModified" : "2018-12-03T20:05:51Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Linux\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Other OS's\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "3rdparty/SDL/SDL2-2.0.9/src/hidapi/ios/Makefile.am" : {
      "ObjectId" : "1f8f2cec66a275ecdb5a10322fc63a7c924da979",
      "LastModified" : "2018-12-03T20:05:51Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "3rdparty/SDL/SDL2-2.0.9/src/hidapi/libusb/Makefile.am" : {
      "ObjectId" : "13c9d355178815e6a3fb899501e30dbd1cd032ef",
      "LastModified" : "2018-12-03T20:05:51Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "3rdparty/SDL/SDL2-2.0.9/src/hidapi/linux/Makefile.am" : {
      "ObjectId" : "230eeb75a207745621b72a1a12bddf1c182cdade",
      "LastModified" : "2018-12-03T20:05:51Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "3rdparty/SDL/SDL2-2.0.9/src/hidapi/mac/Makefile.am" : {
      "ObjectId" : "23d96e08fb6c25a41e940a8dd0900353231dcf1c",
      "LastModified" : "2018-12-03T20:05:51Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "3rdparty/SDL/SDL2-2.0.9/src/hidapi/testgui/Makefile.am" : {
      "ObjectId" : "1c02f3f2c3559ba327db83c3d622221ef0c008ae",
      "LastModified" : "2018-12-03T20:05:51Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Linux\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Other OS's\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Rules for copying the binary and its dependencies into the app bundle.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "3rdparty/SDL/SDL2-2.0.9/src/hidapi/windows/Makefile.am" : {
      "ObjectId" : "97e261ac9ee1edaab169dbf068340240c823a257",
      "LastModified" : "2018-12-03T20:05:51Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "3rdparty/SDL/SDL2-2.0.9/test/CMakeLists.txt" : {
      "ObjectId" : "3c25c5c7c98790944cc22c408cec58152544b0e6",
      "LastModified" : "2018-12-03T20:05:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Global settings for all of the test targets\n\n# FIXME: is this wrong?\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FIXME: Parent directory CMakeLists.txt only sets these for mingw/cygwin,\n\n# but we need them for VS as well.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# HACK: Dummy target to cause the resource files to be copied to the build directory.\n\n# Need to make it an executable so we can use the TARGET_FILE_DIR generator expression.\n\n# This is needed so they get copied to the correct Debug/Release subdirectory in Xcode.\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# TODO: Might be easier to make all targets depend on the resources...?\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "3rdparty/SDL/SDL2-2.0.9/test/nacl/Makefile" : {
      "ObjectId" : "9ca166c12742e3c6ae23d6c7ac84a421244e9c1d",
      "LastModified" : "2018-12-03T20:05:51Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (c) 2013 The Chromium Authors. All rights reserved.\n\n# Use of this source code is governed by a BSD-style license that can be\n\n# found in the LICENSE file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# GNU Makefile based on shared rules provided by the Native Client SDK.\n\n# See README.Makefiles for more details.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# NACL_SDK_ROOT ?= $(abspath $(CURDIR)/../../..)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ppapi_simple and SDL2 end up being listed twice due to dependency solving issues -- Gabriel\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Build rules generated by macros from common.mk:\n\n# Overriden macro from NACL SDK to be able to customize the library search path -- Gabriel\n\n# Specific Link Macro \n\n#\n\n# $1 = Target Name\n\n# $2 = List of inputs\n\n# $3 = List of libs\n\n# $4 = List of deps\n\n# $5 = List of lib dirs\n\n# $6 = Other Linker Args\n\n#\n\n# For debugging, we translate the pre-finalized .bc file.\n\n#\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "3rdparty/freetype/freetype-2.9/CMakeLists.txt" : {
      "ObjectId" : "b0f86126b3c805a8504d0880219efe2efa974cdb",
      "LastModified" : "2019-01-26T18:14:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Copyright 2013-2018 by\n\n# David Turner, Robert Wilhelm, and Werner Lemberg.\n\n#\n\n# Written originally by John Cary <cary@txcorp.com>\n\n#\n\n# This file is part of the FreeType project, and may only be used, modified,\n\n# and distributed under the terms of the FreeType project license,\n\n# LICENSE.TXT.  By continuing to use, modify, or distribute this file you\n\n# indicate that you have read the license and understand and accept it\n\n# fully.\n\n#\n\n#\n\n# As a preliminary, create a compilation directory and change into it, for\n\n# example\n\n#\n\n#   mkdir ~/freetype2.compiled\n\n#   cd ~/freetype2.compiled\n\n#\n\n# Now you can say\n\n#\n\n#   cmake <path-to-freetype2-src-dir>\n\n#\n\n# to create a Makefile that builds a static version of the library.\n\n#\n\n# For a dynamic library, use\n\n#\n\n#   cmake <path-to-freetype2-src-dir> -D BUILD_SHARED_LIBS:BOOL=true\n\n#\n\n# For a framework on OS X, use\n\n#\n\n#   cmake <path-to-freetype2-src-dir> -D BUILD_FRAMEWORK:BOOL=true -G Xcode\n\n#\n\n# instead.\n\n#\n\n# For an iOS static library, use\n\n#\n\n#   cmake -D IOS_PLATFORM=OS -G Xcode <path-to-freetype2-src-dir>\n\n#\n\n# or\n\n#\n\n#   cmake -D IOS_PLATFORM=SIMULATOR -G Xcode <path-to-freetype2-src-dir>\n\n#\n\n# Please refer to the cmake manual for further options, in particular, how\n\n# to modify compilation and linking parameters.\n\n#\n\n# Some notes.\n\n#\n\n# . `cmake' creates configuration files in\n\n#\n\n#     <build-directory>/include/freetype/config\n\n#\n\n#   which should be further modified if necessary.\n\n#\n\n# . You can use `cmake' directly on a freshly cloned FreeType git\n\n#   repository.\n\n#\n\n# . `CMakeLists.txt' is provided as-is since it is normally not used by the\n\n#   developer team.\n\n#\n\n# . If you want to disable the automatic generation of the distribution\n\n#   targets, add the `-D FREETYPE_NO_DIST=true' command line argument.\n\n#\n\n# . Set the `WITH_ZLIB', `WITH_BZip2', `WITH_PNG', and `WITH_HarfBuzz'\n\n#   CMake variables to `ON' or `OFF' to force or skip using a dependency.\n\n#   Leave a variable undefined (which is the default) to use the dependency\n\n#   only if it is available.  Example:\n\n#\n\n#     cmake ... -DWITH_ZLIB=ON -DWITH_HarfBuzz=OFF ...\n\n#\n\n# . Installation of FreeType can be controlled with the CMake variables\n\n#   `SKIP_INSTALL_HEADERS', `SKIP_INSTALL_LIBRARIES', and `SKIP_INSTALL_ALL'\n\n#   (this is compatible with the same CMake variables in zlib's CMake\n\n#   support).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMAKE_TOOLCHAIN_FILE must be set before `project' is called, which\n\n# configures the base build environment and references the toolchain file\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# iOS only uses static libraries\n",
        "Line" : 106,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Disallow in-source builds\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add local cmake modules\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Compiler definitions for building the library\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Find dependencies\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Create the configuration file\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Create the options file\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Specify library include directories\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# not BZIP2_INCLUDE_DIRS\n",
        "Line" : 384,
        "CharPositionInLine" : 44
      },
      "11" : {
        "Text" : "# Installations\n\n# Note the trailing slash in the argument to the `DIRECTORY' directive\n",
        "Line" : 397,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Packaging\n\n# CPack version numbers for release tarball name.\n",
        "Line" : 428,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Add `make dist' target if FREETYPE_DIST is set (which is the default)\n",
        "Line" : 449,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# eof\n",
        "Line" : 454,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "3rdparty/freetype/freetype-2.9/Makefile" : {
      "ObjectId" : "0c7ee0eef9b9ae55573be13930e6534348207d18",
      "LastModified" : "2019-01-26T18:14:45Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# FreeType 2 build system -- top-level Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright 1996-2018 by\n\n# David Turner, Robert Wilhelm, and Werner Lemberg.\n\n#\n\n# This file is part of the FreeType project, and may only be used, modified,\n\n# and distributed under the terms of the FreeType project license,\n\n# LICENSE.TXT.  By continuing to use, modify, or distribute this file you\n\n# indicate that you have read the license and understand and accept it\n\n# fully.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Project names\n\n#\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The variable TOP_DIR holds the path to the topmost directory in the project\n\n# engine source hierarchy.  If it is not defined, default it to `.'.\n\n#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The variable OBJ_DIR gives the location where object files and the\n\n# FreeType library are built.\n\n#\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# EOF\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "3rdparty/freetype/freetype-2.9/builds/cmake/FindHarfBuzz.cmake" : {
      "ObjectId" : "f394b82bf975ced36ef8f5c5e9069de54c24f4a7",
      "LastModified" : "2019-01-26T18:14:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2012, Intel Corporation\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright notice, this\n\n#   list of conditions and the following disclaimer.\n\n# * Redistributions in binary form must reproduce the above copyright notice,\n\n#   this list of conditions and the following disclaimer in the documentation\n\n#   and/or other materials provided with the distribution.\n\n# * Neither the name of Intel Corporation nor the names of its contributors may\n\n#   be used to endorse or promote products derived from this software without\n\n#   specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n# Try to find Harfbuzz include and library directories.\n\n#\n\n# After successful discovery, this will set for inclusion where needed:\n\n# HARFBUZZ_INCLUDE_DIRS - containg the HarfBuzz headers\n\n# HARFBUZZ_LIBRARIES - containg the HarfBuzz library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# HarfBuzz 0.9.18 split ICU support into a separate harfbuzz-icu library.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "3rdparty/freetype/freetype-2.9/builds/cmake/iOS.cmake" : {
      "ObjectId" : "c6da70c0c833c2e38ef36dbfa14d4da04dc0e60b",
      "LastModified" : "2019-01-26T18:14:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# iOS.cmake\n\n#\n\n# Copyright 2014-2018 by\n\n# David Turner, Robert Wilhelm, and Werner Lemberg.\n\n#\n\n# Written by David Wimsey <david@wimsey.us>\n\n#\n\n# This file is part of the FreeType project, and may only be used, modified,\n\n# and distributed under the terms of the FreeType project license,\n\n# LICENSE.TXT.  By continuing to use, modify, or distribute this file you\n\n# indicate that you have read the license and understand and accept it\n\n# fully.\n\n#\n\n#\n\n# This file is derived from the files `Platform/Darwin.cmake' and\n\n# `Platform/UnixPaths.cmake', which are part of CMake 2.8.4.  It has been\n\n# altered for iOS development.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Options\n\n# -------\n\n#\n\n#   IOS_PLATFORM = OS | SIMULATOR\n\n#\n\n#     This decides whether SDKS are selected from the `iPhoneOS.platform' or\n\n#     `iPhoneSimulator.platform' folders.\n\n#\n\n#     OS - the default, used to build for iPhone and iPad physical devices,\n\n#       which have an ARM architecture.\n\n#     SIMULATOR - used to build for the Simulator platforms, which have an\n\n#       x86 architecture.\n\n#\n\n#   CMAKE_IOS_DEVELOPER_ROOT = /path/to/platform/Developer folder\n\n#\n\n#     By default, this location is automatically chosen based on the\n\n#     IOS_PLATFORM value above.  If you manually set this variable, it\n\n#     overrides the default location and forces the use of a particular\n\n#     Developer Platform.\n\n#\n\n#   CMAKE_IOS_SDK_ROOT = /path/to/platform/Developer/SDKs/SDK folder\n\n#\n\n#     By default, this location is automatically chosen based on the\n\n#     CMAKE_IOS_DEVELOPER_ROOT value.  In this case it is always the most\n\n#     up-to-date SDK found in the CMAKE_IOS_DEVELOPER_ROOT path.  If you\n\n#     manually set this variable, it forces the use of a specific SDK\n\n#     version.\n\n#\n\n#\n\n# Macros\n\n# ------\n\n#\n\n#   set_xcode_property (TARGET XCODE_PROPERTY XCODE_VALUE)\n\n#\n\n#     A convenience macro for setting Xcode specific properties on targets.\n\n#\n\n#     Example:\n\n#\n\n#       set_xcode_property(myioslib IPHONEOS_DEPLOYMENT_TARGET \"3.1\")\n\n#\n\n#   find_host_package (PROGRAM ARGS)\n\n#\n\n#     A macro to find executable programs on the host system, not within the\n\n#     iOS environment.  Thanks to the `android-cmake' project for providing\n\n#     the command.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# standard settings\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# required as of cmake 2.8.10\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# determine the cmake host system version so we know where to find the iOS\n\n# SDKs\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# skip the platform compiler checks for cross compiling\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# all iOS/Darwin specific settings - some may be redundant\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# hidden visibility is required for cxx on iOS\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# hack: If a new cmake (which uses CMAKE_INSTALL_NAME_TOOL) runs on an old\n\n#       build tree (where `install_name_tool' was hardcoded), and where\n\n#       CMAKE_INSTALL_NAME_TOOL isn't in the cache and still cmake didn't\n\n#       fail in `CMakeFindBinUtils.cmake' (because it isn't rerun), hardcode\n\n#       CMAKE_INSTALL_NAME_TOOL here to `install_name_tool' so it behaves as\n\n#       it did before.\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# set up iOS platform unless specified manually with IOS_PLATFORM\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# check the platform selection and setup for developer root\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# this causes the installers to properly locate the output libraries\n",
        "Line" : 152,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# this causes the installers to properly locate the output libraries\n",
        "Line" : 158,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# set up iOS developer location unless specified manually with\n\n# CMAKE_IOS_DEVELOPER_ROOT --\n\n# note that Xcode 4.3 changed the installation location; choose the most\n\n# recent one available\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# find and use the most recent iOS SDK unless specified manually with\n\n# CMAKE_IOS_SDK_ROOT\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# set the sysroot default to the most recent SDK\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# set the architecture for iOS --\n\n# note that currently both ARCHS_STANDARD_32_BIT and\n\n# ARCHS_UNIVERSAL_IPHONE_OS set armv7 only, so set both manually\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# set the find root to the iOS developer roots and to user defined paths\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# default to searching for frameworks first\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# set up the default search directories for frameworks\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# only search the iOS SDKs, not the remainder of the host filesystem\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# this little macro lets you set any Xcode specific property\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# this macro lets you find executable programs on the host system\n",
        "Line" : 255,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# eof\n",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24
    },
    "3rdparty/freetype/freetype-2.9/src/tools/ftrandom/Makefile" : {
      "ObjectId" : "24dc49c563961522b068c37a31bbb81bcf70eac1",
      "LastModified" : "2019-01-26T18:14:45Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# TOP_DIR and OBJ_DIR should be set by the user to the right directories,\n\n# if necessary.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The setup below is for gcc on a Unix-like platform,\n\n# where FreeType has been set up to create a static library\n\n# (which is the default).\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# EOF\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "3rdparty/glew/glew-2.1.0/Makefile" : {
      "ObjectId" : "2352045a7a8ba1f398467d4dca7707db626e8d11",
      "LastModified" : "2019-01-26T18:14:45Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#!gmake\r\n\n## The OpenGL Extension Wrangler Library\r\n\n## Copyright (C) 2002-2008, Milan Ikits <milan ikits[]ieee org>\r\n\n## Copyright (C) 2002-2008, Marcelo E. Magallon <mmagallo[]debian org>\r\n\n## Copyright (C) 2002, Lev Povalahev\r\n\n## All rights reserved.\r\n\n## \r\n\n## Redistribution and use in source and binary forms, with or without \r\n\n## modification, are permitted provided that the following conditions are met:\r\n\n## \r\n\n## * Redistributions of source code must retain the above copyright notice, \r\n\n##   this list of conditions and the following disclaimer.\r\n\n## * Redistributions in binary form must reproduce the above copyright notice, \r\n\n##   this list of conditions and the following disclaimer in the documentation \r\n\n##   and/or other materials provided with the distribution.\r\n\n## * The name of the author may be used to endorse or promote products \r\n\n##   derived from this software without specific prior written permission.\r\n\n##\r\n\n## THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" \r\n\n## AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE \r\n\n## IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n\n## ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE \r\n\n## LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR \r\n\n## CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF \r\n\n## SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n\n## INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n\n## CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n\n## ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF\r\n\n## THE POSSIBILITY OF SUCH DAMAGE.\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# To disable stripping of linked binaries either:\r\n\n#   - use STRIP= on gmake command-line\r\n\n#   - edit this makefile to set STRIP to the empty string\r\n\n# (Note: STRIP does not affect the strip in the install step)\r\n\n#\r\n\n# To disable symlinks:\r\n\n#   - use LN= on gmake command-line\r\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# GLEW shared and static libraries\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Force re-write of glew.pc, GLEW_DEST can vary\r\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# GLEW utility programs\r\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Don't build glewinfo or visualinfo for NaCL, yet.\r\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Install targets\r\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# runtime\r\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# development files\r\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Distributions\r\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "3rdparty/glew/glew-2.1.0/auto/Makefile" : {
      "ObjectId" : "4027aa3fb8ecdc2c9f5df9c04d6fd6ef120a5aaf",
      "LastModified" : "2019-01-26T18:14:45Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "## Copyright (C) 2002-2008, Marcelo E. Magallon <mmagallo[]debian org>\r\n\n## Copyright (C) 2002-2008, Milan Ikits <milan ikits[]ieee org>\r\n\n##\r\n\n## This program is distributed under the terms and conditions of the GNU\r\n\n## General Public License Version 2 as published by the Free Software\r\n\n## Foundation or, at your option, any later version.\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#GLEW_SPLIT_SOURCE = yes\r\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "### Use git repository for GL extension specifications\r\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\r\n\n### Conventional desktop OpenGL settings\r\n\n###\r\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###\r\n\n### Experimental OpenGL ES settings\r\n\n###\r\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# REGISTRY     = registry/gles\r\n\n# EXT          = extensions/gles\r\n\n# FILTER       = filter_gles_ext.sh\r\n\n# CORE         = core/gles\r\n\n# REGISTRY_URL = http://www.khronos.org/registry/gles/\r\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#GL_CORE_SPEC  := $(shell grep GL_VERSION custom.txt    |                       perl -pi -e \"s=^=$(CORE)/=g;\")\r\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#GLX_CORE_SPEC := $(shell grep GLX_VERSION custom.txt   |                       perl -pi -e \"s=^=$(CORE)/=g;\")\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Update documentation\r\n",
        "Line" : 308,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#<a href=\"$(@F)\">(.*)</a>#\\1#' > $@\r\n",
        "Line" : 315,
        "CharPositionInLine" : 12
      },
      "10" : {
        "Text" : "#<a href=\"$(@F)\">(.*)</a>#\\1#' $@\r\n",
        "Line" : 325,
        "CharPositionInLine" : 15
      },
      "11" : {
        "Text" : "#<a href=\"$(@F)\">(.*)</a>#\\1#' $@\r\n",
        "Line" : 335,
        "CharPositionInLine" : 15
      },
      "12" : {
        "Text" : "#<a href=\"$(@F)\">(.*)</a>#\\1#' $@\r\n",
        "Line" : 345,
        "CharPositionInLine" : 15
      },
      "CommentCount" : 13
    },
    "3rdparty/glew/glew-2.1.0/build/cmake/CMakeLists.txt" : {
      "ObjectId" : "1c5150c78a97ca89ec4cd29ecf5b3db4285ad427",
      "LastModified" : "2019-01-26T18:14:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# get version from config/version\r\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# X11 required when builing visualinfo and glewinfo,\r\n\n# but not for Windows or Apple OSX platforms\r\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#### Regal mode ####\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#### OSMesa mode ####\r\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#### GLEW ####\r\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# add options from visual studio project\r\n",
        "Line" : 103,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# kill security checks which are dependent on stdlib\r\n",
        "Line" : 107,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# remove stdlib dependency\r\n",
        "Line" : 110,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# remove stdlib dependency on windows with GCC and Clang (for similar reasons\r\n\n# as to MSVC - to allow it to be used with any Windows compiler)\r\n",
        "Line" : 114,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#  Mac OSX has no glu.pc unless optional X11/GLX is installed\r\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "3rdparty/glew/glew-2.1.0/build/cmake/CopyImportedTargetProperties.cmake" : {
      "ObjectId" : "a7ade9842ea7bf1b2296eafb6653046243272a59",
      "LastModified" : "2019-01-26T18:14:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# CopyImportedTargetProperties\n\n# --------------------------\n\n#\n\n# Copies the `INTERFACE*` and `IMPORTED*` properties from a target\n\n# to another one.\n\n# This function can be used to duplicate an `IMPORTED` or an `ALIAS` library\n\n# with a different name since ``add_library(... ALIAS ...)`` does not work\n\n# for those targets.\n\n#\n\n# ::\n\n#\n\n#   copy_imported_target_properties(<source-target> <destination-target>)\n\n#\n\n# The function copies all the `INTERFACE*` and `IMPORTED*` target\n\n# properties from `<source-target>` to `<destination-target>`.\n\n#\n\n# The function uses the `IMPORTED_CONFIGURATIONS` property to determine\n\n# which configuration-dependent properties should be copied\n\n# (`IMPORTED_LOCATION_<CONFIG>`, etc...)\n\n#\n\n# Example:\n\n#\n\n# Internally the CMake project of ZLIB builds the ``zlib`` and\n\n# ``zlibstatic`` targets which can be exported in the ``ZLIB::`` namespace\n\n# with the ``install(EXPORT ...)`` command.\n\n#\n\n# The config-module will then create the import libraries ``ZLIB::zlib`` and\n\n# ``ZLIB::zlibstatic``. To use ``ZLIB::zlibstatic`` under the standard\n\n# ``ZLIB::ZLIB`` name we need to create the ``ZLIB::ZLIB`` imported library\n\n# and copy the appropriate properties:\n\n#\n\n#   add_library(ZLIB::ZLIB STATIC IMPORTED)\n\n#   copy_imported_target_properties(ZLIB::zlibstatic ZLIB::ZLIB)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# copy configuration-independent properties\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# message(STATUS \"set_target_properties(${dest_target} PROPERTIES ${prop} ${v})\")\n",
        "Line" : 68,
        "CharPositionInLine" : 12
      },
      "3" : {
        "Text" : "# copy configuration-dependent properties\n",
        "Line" : 72,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# message(STATUS \"set_target_properties(${dest_target} PROPERTIES ${prop} ${v})\")\n",
        "Line" : 84,
        "CharPositionInLine" : 16
      },
      "CommentCount" : 5
    },
    "3rdparty/glew/glew-2.1.0/build/cmake/glew-config.cmake" : {
      "ObjectId" : "0b79c0b1455d56fe3dd4df03dc94461dc87c9269",
      "LastModified" : "2019-01-26T18:14:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This config-module creates the following import libraries:\n\n#\n\n# - GLEW::glew shared lib\n\n# - GLEW::glew_s static lib\n\n#\n\n# Additionally GLEW::GLEW will be created as an\n\n# copy of either the shared (default) or the static libs.\n\n#\n\n# Dependending on the setting of BUILD_SHARED_LIBS at GLEW build time\n\n# either the static or shared versions may not be available.\n\n#\n\n# Set GLEW_USE_STATIC_LIBS to OFF or ON to force using the shared\n\n# or static lib for GLEW::GLEW \n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# decide which import library (glew/glew_s)\n\n# needs to be copied to GLEW::GLEW\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# if defined, use only static or shared\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# else use static only if no shared\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# CMake doesn't allow creating ALIAS lib for an IMPORTED lib\n\n# so create imported ones and copy the properties\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# message(STATUS \"add_library(${_glew_dest_target} ${_glew_target_type} IMPORTED)\")\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "3rdparty/glew/glew-2.1.0/build/cmake/testbuild/CMakeLists.txt" : {
      "ObjectId" : "c8326b49411c5a09bc3b8cb84a1edc1d4d1ae3c1",
      "LastModified" : "2019-01-26T18:14:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# call twice to test multiple call\r\n",
        "Line" : 5,
        "CharPositionInLine" : 35
      },
      "CommentCount" : 1
    },
    "3rdparty/glew/glew-2.1.0/build/conan/FindGLEW.cmake" : {
      "ObjectId" : "b054daf0debc42e277ff058e57880b2d947bcec7",
      "LastModified" : "2019-01-26T18:14:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/glew/glew-2.1.0/build/conan/test_package/CMakeLists.txt" : {
      "ObjectId" : "8ec6ecff18c0fa5c65e109cf629f889c3da8af72",
      "LastModified" : "2019-01-26T18:14:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/glew/glew-2.1.0/build/vc6/Makefile" : {
      "ObjectId" : "06600f1580509d176b9d6a416d61b6ab70c5df00",
      "LastModified" : "2019-01-26T18:14:45Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "3rdparty/harfbuzz/harfbuzz-1.4.6/CMakeLists.txt" : {
      "ObjectId" : "91e7eca0e0d55cfeba7d3c0c5c1a46d5c4ce65f0",
      "LastModified" : "2019-01-26T18:14:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Disallow in-source builds\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## HarfBuzz build configurations\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# perhaps we are on dist directory\n",
        "Line" : 60,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "## Extract variables from Makefile files\n\n# http://stackoverflow.com/a/27630120/1414809\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "##\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## Define ragel tasks\n",
        "Line" : 114,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "##\n",
        "Line" : 134,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "## Generate hb-version.h\n",
        "Line" : 136,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "##\n",
        "Line" : 145,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "## Define sources and headers of the project\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# https://github.com/WebKit/webkit/blob/master/Source/cmake/FindFreetype2.cmake\n",
        "Line" : 167,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# https://github.com/WebKit/webkit/blob/master/Source/cmake/FindGLIB.cmake\n",
        "Line" : 218,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# https://github.com/WebKit/webkit/blob/master/Source/cmake/FindICU.cmake\n",
        "Line" : 239,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Apple Advanced Typography\n",
        "Line" : 257,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "##\n",
        "Line" : 288,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "## Atomic ops availability detection\n",
        "Line" : 290,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "##\n",
        "Line" : 320,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# https://github.com/WebKit/webkit/blob/master/Source/cmake/FindCairo.cmake\n",
        "Line" : 326,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "## Install\n",
        "Line" : 349,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "##\n",
        "Line" : 361,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 22
    },
    "3rdparty/harfbuzz/harfbuzz-1.4.6/Makefile.am" : {
      "ObjectId" : "1d8f2e7c7d44348efb4677876067976cd4a6153e",
      "LastModified" : "2019-01-26T18:14:45Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# ChangeLog generation\n\n#\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Release engineering\n\n#\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# TODO: Copy infrastructure from cairo\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# TAR_OPTIONS is not set as env var for 'make dist'.  How to fix that?\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Clean up any sticky bits we may inherit from parent dir\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "3rdparty/harfbuzz/harfbuzz-1.4.6/docs/Makefile.am" : {
      "ObjectId" : "3916801aed75de4171cf9b1cf863b9b307de196a",
      "LastModified" : "2019-01-26T18:14:45Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We require automake 1.6 at least.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This is a blank Makefile.am for using gtk-doc.\n\n# Copy this to your project's API docs directory and modify the variables to\n\n# suit your project. See the GTK+ Makefiles in gtk+/docs/reference for examples\n\n# of using the various options.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The name of the module, e.g. 'glib'.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Uncomment for versioned docs and specify the version of the module, e.g. '2'.\n\n#DOC_MODULE_VERSION=$(HB_VERSION_MAJOR)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The top-level SGML file. You can change this if you want to.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Directories containing the source code.\n\n# gtk-doc will search all .c and .h files beneath these paths\n\n# for inline comments documenting functions and macros.\n\n# e.g. DOC_SOURCE_DIR=$(top_srcdir)/gtk $(top_srcdir)/gdk\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Extra options to pass to gtkdoc-scangobj. Not normally needed.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Extra options to supply to gtkdoc-scan.\n\n# e.g. SCAN_OPTIONS=--deprecated-guards=\"GTK_DISABLE_DEPRECATED\"\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Header files or dirs to ignore when scanning. Use base file/dir names\n\n# e.g. IGNORE_HFILES=gtkdebug.h gtkintl.h private_code\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Extra options to supply to gtkdoc-mkdb.\n\n# e.g. MKDB_OPTIONS=--xml-mode --output-format=xml\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Extra options to supply to gtkdoc-mktmpl\n\n# e.g. MKTMPL_OPTIONS=--only-section-tmpl\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Extra options to supply to gtkdoc-mkhtml\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Extra options to supply to gtkdoc-fixref. Not normally needed.\n\n# e.g. FIXXREF_OPTIONS=--extra-dir=../gdk-pixbuf/html --extra-dir=../gdk/html\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Used for dependencies. The docs will be rebuilt if any of these change.\n\n# e.g. HFILE_GLOB=$(top_srcdir)/gtk/*.h\n\n# e.g. CFILE_GLOB=$(top_srcdir)/gtk/*.c\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Extra header to include when scanning, which are not under DOC_SOURCE_DIR\n\n# e.g. EXTRA_HFILES=$(top_srcdir}/contrib/extra.h\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Images to copy into HTML directory.\n\n# e.g. HTML_IMAGES=$(top_srcdir)/gtk/stock-icons/stock_about_24.png\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Extra SGML files that are included by $(DOC_MAIN_SGML_FILE).\n\n# e.g. content_files=running.sgml building.sgml changes-2.0.sgml\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# SGML files where gtk-doc abbrevations (#GtkWidget) are expanded\n\n# These files must be listed here *and* in content_files\n\n# e.g. expand_content_files=running.sgml\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# CFLAGS and LDFLAGS for compiling gtkdoc-scangobj with your library.\n\n# Only needed if you are using gtkdoc-scangobj to dynamically query widget\n\n# signals and properties.\n\n# e.g. GTKDOC_CFLAGS=-I$(top_srcdir) -I$(top_builddir) $(GTK_DEBUG_FLAGS)\n\n# e.g. GTKDOC_LIBS=$(top_builddir)/gtk/$(gtktargetlib)\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# This includes the standard gtk-doc make rules, copied by gtkdocize.\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Other files to distribute\n\n# e.g. EXTRA_DIST += version.xml.in\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Files not to distribute\n\n# for --rebuild-types in $(SCAN_OPTIONS), e.g. $(DOC_MODULE).types\n\n# for --rebuild-sections in $(SCAN_OPTIONS) e.g. $(DOC_MODULE)-sections.txt\n\n#DISTCLEANFILES +=\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Comment this out if you want 'make check' to test you doc status\n\n# and run some sanity checks\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#TESTS = $(GTKDOC_CHECK)\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "3rdparty/harfbuzz/harfbuzz-1.4.6/src/Makefile.am" : {
      "ObjectId" : "0c077d9901309ea58f1daddd0884b0b988c29841",
      "LastModified" : "2019-01-26T18:14:45Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The following warning options are useful for debugging: -Wpadded\n\n#AM_CXXFLAGS =\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Convenience targets:\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# XXX\n\n# The following creates a recursive dependency on FreeType if FreeType is\n\n# built with HarfBuzz support enabled.  Newer pkg-config handles that just\n\n# fine but pkg-config 0.26 as shipped in Ubuntu 14.04 crashes.  Remove\n\n# in a year or two, or otherwise work around it...\n\n#HBDEPS   += $(FREETYPE_DEPS)\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Put the library together\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Use a C linker for GCC, not C++; Don't link to libstdc++\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# For check-defs.sh\n",
        "Line" : 298,
        "CharPositionInLine" : 20
      },
      "7" : {
        "Text" : "# What does the 0 mean anyway?!\n",
        "Line" : 328,
        "CharPositionInLine" : 38
      },
      "CommentCount" : 8
    },
    "3rdparty/harfbuzz/harfbuzz-1.4.6/src/hb-ucdn/Makefile.am" : {
      "ObjectId" : "73b5502547780c42487bed2474e456519039652a",
      "LastModified" : "2019-01-26T18:14:45Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rdparty/harfbuzz/harfbuzz-1.4.6/test/Makefile.am" : {
      "ObjectId" : "ec77822603fed8b2ad4c7df80e6de5585db5e1c5",
      "LastModified" : "2019-01-26T18:14:45Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Convenience targets:\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "3rdparty/harfbuzz/harfbuzz-1.4.6/test/api/Makefile.am" : {
      "ObjectId" : "530bf3ede7711439dd5c444e8d3a3ecf233ba65a",
      "LastModified" : "2019-01-26T18:14:45Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Convenience targets:\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# HAVE_FREETYPE\n",
        "Line" : 66,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# HAVE_OT\n",
        "Line" : 68,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# Tests for header compilation\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Default test running environment\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# check-tool: Run tests under $(TOOL)\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# TODO: The following check does not fail if valgrind finds error.  It should.\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# check-symbols: Finds untested API symbols\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "3rdparty/harfbuzz/harfbuzz-1.4.6/test/fuzzing/Makefile.am" : {
      "ObjectId" : "3ea8605bd7bedfd3fe4abbb58aad25573e3d93e4",
      "LastModified" : "2019-01-26T18:14:45Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Convenience targets:\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "3rdparty/harfbuzz/harfbuzz-1.4.6/test/shaping/Makefile.am" : {
      "ObjectId" : "89578e10b7f06d5a932c562281b56e4d165c6ca2",
      "LastModified" : "2019-01-26T18:14:45Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Convenience targets:\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO Figure out Python stuff\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "3rdparty/harfbuzz/harfbuzz-1.4.6/util/Makefile.am" : {
      "ObjectId" : "2543a6091df0f97250ce8b579126974d31129eaf",
      "LastModified" : "2019-01-26T18:14:45Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Convenience targets:\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# HAVE_CAIRO_FT\n\n# HAVE_FREETYPE\n",
        "Line" : 42,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# HAVE_OT\n",
        "Line" : 51,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# HAVE_GLIB\n",
        "Line" : 53,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "#if HAVE_OT\n\n#if HAVE_FONTCONFIG\n\n#hb_fc_list_SOURCES = \\\n#\thb-fc.cc \\\n#\thb-fc.h \\\n#\thb-fc-list.c \\\n#\t$(NULL)\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#hb_fc_list_LDADD = \\\n#\t$(LDADD) \\\n#\t$(FONTCONFIG_LIBS) \\\n#\t$(NULL)\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#bin_PROGRAMS += hb-fc-list\n\n#endif # HAVE_FONTCONFIG\n\n#endif # HAVE_OT\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "3rdparty/harfbuzz/harfbuzz-1.4.6/win32/Makefile.am" : {
      "ObjectId" : "63ba4680c601b4b21e442c05537b73b2a9baf664",
      "LastModified" : "2019-01-26T18:14:45Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "3rdparty/libpng/libpng-1.6.21/CMakeLists.txt" : {
      "ObjectId" : "2f180b559cc50ed2efc8450ad1ec601cceebe7fd",
      "LastModified" : "2019-01-26T18:14:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (C) 2007-2015 Glenn Randers-Pehrson\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This code is released under the libpng license.\n\n# For conditions of distribution and use, see the disclaimer\n\n# and license in png.h\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# needed packages\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# not needed on windows\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# COMMAND LINE OPTIONS\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Many more configuration options could be added here\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# SET LIBNAME\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# to distinguish between debug and release lib\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Use the prebuilt pnglibconf.h file from the scripts folder\n\n# TODO: fix this by building with awk; without this no cmake build can be\n\n# configured directly (to do so indirectly use your local awk to build a\n\n# pnglibconf.h in the build directory.)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# OUR SOURCES\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# SOME NEEDED DEFINITIONS\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# NOW BUILD OUR TARGET\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# msvc does not append 'lib' - do it here to have consistent name\n",
        "Line" : 120,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# does not work without changing name\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# msvc does not append 'lib' - do it here to have consistent name\n",
        "Line" : 133,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# does not work with msvc due to png_lib_ver issue\n",
        "Line" : 167,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "#\n",
        "Line" : 171,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Ensure the CMAKE_LIBRARY_OUTPUT_DIRECTORY is set\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Set a variable with CMake code which:\n\n# Creates a symlink from src to dest (if possible) or alternatively\n\n# copies if different.\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# libpng is a library so default to 'lib'\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# CREATE PKGCONFIG FILES\n\n# we use the same files like ./configure, so we have to set its vars\n\n# Only do this on Windows for Cygwin - the files don't make much sense outside\n\n# a UNIX look alike\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# SET UP LINKS\n",
        "Line" : 261,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#   VERSION 16.${PNGLIB_RELEASE}.1.6.21\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# MSVC doesn't use a different file extension for shared vs. static\n\n# libs.  We are able to change OUTPUT_NAME to remove the _static\n\n# for all other platforms.\n",
        "Line" : 270,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# If CMake > 2.4.x, we set a variable used below to export\n\n# targets to an export file.\n\n# TODO: Use VERSION_GREATER after our cmake_minimum_required >= 2.6.2\n",
        "Line" : 280,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# future proof\n",
        "Line" : 285,
        "CharPositionInLine" : 38
      },
      "27" : {
        "Text" : "# INSTALL\n",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Create a symlink for libpng.dll.a => libpng16.dll.a on Cygwin\n",
        "Line" : 299,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# Install man pages\n",
        "Line" : 338,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# Install pkg-config files\n",
        "Line" : 344,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# On versions of CMake that support it, create an export file CMake\n\n# users can include() to import our targets\n",
        "Line" : 357,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# what's with libpng-manual.txt and all the extra files?\n",
        "Line" : 363,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# UNINSTALL\n\n# do we need this?\n",
        "Line" : 365,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# DIST\n\n# do we need this?\n",
        "Line" : 368,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# to create msvc import lib for mingw compiled shared lib\n\n# pexports libpng.dll > libpng.def\n\n# lib /def:libpng.def /machine:x86\n",
        "Line" : 371,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 36
    },
    "3rdparty/libpng/libpng-1.6.21/Makefile.am" : {
      "ObjectId" : "73097dbccc9337bf6bd20571b69c2992ed0cd71f",
      "LastModified" : "2019-01-26T18:14:45Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Makefile.am:\n\n#   Source file for Makefile.in (and hence Makefile)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# test programs - run on make check, make distcheck\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Utilities - installed\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This ensures that pnglibconf.h gets built at the start of 'make all' or\n\n# 'make check', but it does not add dependencies to the individual programs,\n\n# this is done below.\n\n#\n\n# IMPORTANT: always add the object modules of new programs to the list below\n\n# because otherwise the sequence 'configure; make new-program' will *sometimes*\n\n# result in the installed (system) pnglibconf.h being used and the result is\n\n# always wrong and always very confusing.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Generally these are single line shell scripts to run a test with a particular\n\n# set of parameters:\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# man pages\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# generate the -config scripts if required\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# rules to build libpng, only build the old library on request\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# EXTRA_LTLIBRARIES= libpng.la\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#   Versioned symbols and restricted exports\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#   Only restricted exports when possible\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#distribute headers in /usr/include/libpng/*\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# pkg-config stuff, note that libpng.pc is always required in order\n\n# to get the correct library\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Extra source distribution files, '${srcdir}' is used below to stop build files\n\n# from those directories being included.  This only works if the configure is\n\n# not done in the source directory!\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# PNG_COPTS give extra options for the C compiler to be used on all compilation\n\n# steps (unless targe_CFLAGS is specified; that will take precedence over\n\n# AM_CFLAGS)\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# DFNCPP is normally just CPP - the C preprocessor - but on Solaris and maybe\n\n# other operating systems (NeXT?) the C preprocessor selected by configure\n\n# checks input tokens for validity - effectively it performs part of the ANSI-C\n\n# parsing - and therefore fails with the .df files.  configure.ac has special\n\n# checks for this and sets DFNCPP appropriately.\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Rename functions in scripts/prefix.out with a PNG_PREFIX prefix.\n\n# Rename macros in scripts/macro.lst from PNG_PREFIXpng_ to PNG_ (the actual\n\n# implementation of the macro).\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# is empty\n",
        "Line" : 193,
        "CharPositionInLine" : 13
      },
      "18" : {
        "Text" : "# The following is necessary to ensure that the local pnglibconf.h is used, not\n\n# an installed one (this can happen immediately after on a clean system if\n\n# 'make test' is the first thing the user does.)  Only files which include\n\n# one of the png source files (typically png.h or pngpriv.h) need to be listed\n\n# here:\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# We must use -DPNG_NO_USE_READ_MACROS here even when the library may actually\n\n# be built with PNG_USE_READ_MACROS; this prevents the read macros from\n\n# interfering with the symbol file format.\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# The .c file for pnglibconf.h is machine generated\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Symbol checks (.def and .out files should match)\n",
        "Line" : 254,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# used on demand to regenerate the standard header, CPPFLAGS should\n\n# be empty - no non-standard defines\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Extra checks\n",
        "Line" : 282,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Don't distribute the generated script files\n",
        "Line" : 285,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Make links between installed files with release-specific names and the generic\n\n# file names.  If this install rule is run the generic names will be deleted and\n\n# recreated - this has obvious issues for systems with multiple installations.\n",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# EXT_LIST is a list of the possibly library directory extensions, this exists\n\n# because we can't find a good way of discovering the file extensions that are\n\n# actually installed on a given system, so instead we check for every extension\n\n# we have seen.\n",
        "Line" : 307,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# If --enable-unversioned-links is specified the header and lib file links\n\n# will be automatically made on a 'make install':\n",
        "Line" : 335,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Likewise, --install-pc causes libpng.pc to be constructed:\n",
        "Line" : 345,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# And --install-config:\n",
        "Line" : 352,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# The following addition ensures that 'make all' always builds the test programs\n\n# too.  It used to, but some change either in libpng or configure stopped this\n\n# working.\n",
        "Line" : 358,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 31
    },
    "3rdparty/zlib/zlib-1.2.8/CMakeLists.txt" : {
      "ObjectId" : "0c0247cc516b4493bb9a9b66f743a6110139a2b5",
      "LastModified" : "2019-01-26T18:14:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Check to see if we have large file support\n\n#\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We add these other definitions here because CheckTypeSize.cmake\n\n# in CMake 2.4.x does not automatically do so and we want\n\n# compatibility with CMake 2.4.x.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# clear variable\n",
        "Line" : 47,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "#\n\n# Check for fseeko\n\n#\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Check for unistd.h\n\n#\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If we're doing an out of source build and the user has a zconf.h\n\n# in their source tree...\n",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#============================================================================\n\n# zlib\n\n#============================================================================\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# If present will override custom build rule below.\n",
        "Line" : 128,
        "CharPositionInLine" : 23
      },
      "8" : {
        "Text" : "# parse the full version number from zlib.h and include in ZLIB_FULL_VERSION\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# This gets us DLL resource information when compiling on MinGW.\n",
        "Line" : 171,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# This property causes shared libraries on Linux to have the full version\n\n# encoded into their final filename.  We disable this on Cygwin because\n\n# it causes cygz-${ZLIB_FULL_VERSION}.dll to be created when cygz.dll\n\n# seems to be the default.\n\n#\n\n# This has no effect with MSVC, on that platform the version info for\n\n# the DLL comes from the resource file win32/zlib1.rc\n",
        "Line" : 192,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# On unix-like platforms the library is almost always called libz\n",
        "Line" : 203,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Creates zlib1.dll when building shared library version\n",
        "Line" : 209,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "#============================================================================\n\n# Example binaries\n\n#============================================================================\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "3rdparty/zlib/zlib-1.2.8/Makefile" : {
      "ObjectId" : "6bba86c73fca2abda416baa1a7cf883b3494fb29",
      "LastModified" : "2019-01-26T18:14:45Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "3rdparty/zlib/zlib-1.2.8/contrib/blast/Makefile" : {
      "ObjectId" : "9be80bafe050eed57029ef2e690f36677a3003c0",
      "LastModified" : "2019-01-26T18:14:45Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "3rdparty/zlib/zlib-1.2.8/contrib/minizip/Makefile" : {
      "ObjectId" : "84eaad20d4fb19b00965268dd75d7e9b66c8cc21",
      "LastModified" : "2019-01-26T18:14:45Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "3rdparty/zlib/zlib-1.2.8/contrib/minizip/Makefile.am" : {
      "ObjectId" : "d343011ebc3b3fd78d2bc3a29801a083c038cf0c",
      "LastModified" : "2019-01-26T18:14:45Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "3rdparty/zlib/zlib-1.2.8/contrib/puff/Makefile" : {
      "ObjectId" : "0e2594c80885c0dbea13c6d22b2e60e9fb82b51f",
      "LastModified" : "2019-01-26T18:14:45Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# puff full coverage test (should say 100%)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rdparty/zlib/zlib-1.2.8/contrib/untgz/Makefile" : {
      "ObjectId" : "b54266fba20a167a1d83b7afd503dfd2f849ca57",
      "LastModified" : "2019-01-26T18:14:45Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "3rdparty/zlib/zlib-1.2.8/nintendods/Makefile" : {
      "ObjectId" : "21337d01ab2fe20743682125994666e20af6b7e7",
      "LastModified" : "2019-01-26T18:14:45Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# TARGET is the name of the output\n\n# BUILD is the directory where object files & intermediate files will be placed\n\n# SOURCES is a list of directories containing source code\n\n# DATA is a list of directories containing data files\n\n# INCLUDES is a list of directories containing header files\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# options for code generation\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# list of directories containing libraries, this must be the top level containing\n\n# include and lib\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# no real need to edit anything past this point unless you need to add additional\n\n# rules for different file extensions\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# use CXX for linking C++ projects, CC for standard C\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# main targets\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#---------------------------------------------------------------------------------------\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#---------------------------------------------------------------------------------------\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    }
  },
  "FileTypes" : {
    "CMAKE" : 17,
    "CMAKESOURCE" : 1,
    "QMAKE" : 1,
    "MAKEFILE" : 12,
    "AUTOMAKE" : 20
  },
  "ElapsedTime" : 2961
}