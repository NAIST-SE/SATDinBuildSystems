{
  "Repository" : "11781433",
  "Revision" : "HEAD",
  "ObjectId" : "1d8f9ef988e86a9ea3f2257321503393c6358a77",
  "CommitTime" : "2019-04-15T11:53:23Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "cabeead29a149896c751e455ccc55608c0f03160",
      "LastModified" : "2019-04-05T09:58:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# COOLFluiD cmake build system\n\n##############################################################################\n\n# TODO\n\n#  * packaging with the build system\n\n#  * check precompiled headers\n\n##############################################################################\n\n# Command line options for cmake:\n\n# -DCMAKE_BUILD_TYPE=DEBUG     will set the build type\n\n# -DCF_SKIP_FORTRAN=:BOOL=ON   will not test for fortran language\n\n# -DCMAKE_SKIP_RPATH:BOOL=ON   will remove rpath\n\n# -G\"Visual Studio 9 2008\"     will generate for WIN32\n\n# -DCMAKE_INSTALL_PREFIX=DIR   will specify where to install\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# cmake behavior\n\n##############################################################################\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Tell the CMake makefile generator to not have rules depend on themselves.\n\n# This causes extra rebuilds when the include path changes from turning a library on or off\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# allow relaxed loop and if constructions\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# check for cmake policies introduced in cmake 2.6\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# check 'cmake --help-policy CMP000*'\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# cmake > 2.6\n",
        "Line" : 33,
        "CharPositionInLine" : 39
      },
      "7" : {
        "Text" : "# cmake >= 2.6.0\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# policy ignores CMAKE_BACKWARDS_COMPATIBILITY keyword\n",
        "Line" : 37,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# policy checks unique global names for targets\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# policy prefers libraries with full path when linking libraries\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# policy gives error on leading and trailing spaces in library names\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# policy tries to escape the -D compile definitions\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# policy asks for bundle destination in MACOSX\n",
        "Line" : 47,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# policy ignores empty elements on a list\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# cmake >= 2.6.1\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# policy passes full path library names to the generator\n",
        "Line" : 54,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# cmake > 2.6.2\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# policy glob_recurse does not follow symbolic links\n",
        "Line" : 60,
        "CharPositionInLine" : 6
      },
      "19" : {
        "Text" : "# cmake >= 2.6.3\n",
        "Line" : 64,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# bad variable references treated as errors\n",
        "Line" : 66,
        "CharPositionInLine" : 6
      },
      "21" : {
        "Text" : "# included scripts do cmake_policy push and pop\n",
        "Line" : 68,
        "CharPositionInLine" : 6
      },
      "22" : {
        "Text" : "# cmake > 2.8\n",
        "Line" : 73,
        "CharPositionInLine" : 39
      },
      "23" : {
        "Text" : "# cmake >= 2.8.0\n",
        "Line" : 75,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# if() recognizes numbers and boolean constants\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# Duplicate binary directories are not allowed\n",
        "Line" : 79,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# Input directories must have CMakeLists.txt\n",
        "Line" : 81,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "##############################################################################\n\n# project definition and versioning\n\n##############################################################################\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# include personal options\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# option to skip fortran language\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# option to add CUDA support\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# the following is needed by .../share/cmake-2.8/Modules/CMakeDetermineCUDACompiler.cmake \n",
        "Line" : 106,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "##############################################################################\n\n# cmake setup\n\n##############################################################################\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# disallow in-source build\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# include other configurations\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# define macros\n\n# include testing support\n",
        "Line" : 138,
        "CharPositionInLine" : 26
      },
      "36" : {
        "Text" : "# recreate the logfile\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Append the library version information to the library target properties.\n\n# A parent project may set its own properties and/or may block this.\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# use RPATHs, i.e. don't skip the full RPATH for the build tree\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# when building, don't use the install RPATH already\n\n# (but later on when installing)\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# the RPATH to be used when installing\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# add the automatically determined parts of the RPATH\n\n# which point to directories outside the build tree to the install RPATH\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# create the dso directory for shared libraries\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# name the generated config files\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "##############################################################################\n\n# configuration options\n\n##############################################################################\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# set the default build to be RelWithDebInfo\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# check for operating system\n\n# check compiler features\n",
        "Line" : 203,
        "CharPositionInLine" : 36
      },
      "47" : {
        "Text" : "# add user global options\n\n# create extra build modes\n\n# defined default compilation flags and linking rules per architecture\n",
        "Line" : 206,
        "CharPositionInLine" : 36
      },
      "48" : {
        "Text" : "##############################################################################\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "##############################################################################\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "##############################################################################\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# finding boost (essential)\n",
        "Line" : 251,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# find boost package (essential)\n\n# SET ( Boost_DEBUG 1 )  # to debug boost search\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# find based on minimal version defined below\n",
        "Line" : 257,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# older cmakes dont have these versions\n",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# components to search for\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "#IF ( CF_ENABLE_IBMSHARED OR CF_ENABLE_IBMSTATIC ) \n\n#LIST ( APPEND CF_Boost_COMPONENTS filesystem system regex unit_test_framework )\n\n#ELSE()\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "#ENDIF()\n",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# if not found give more information\n",
        "Line" : 297,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# add boost include path\n",
        "Line" : 302,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# remove debug version of Boost libraries if present\n\n# we assume that the release version is available\n",
        "Line" : 307,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "##############################################################################\n\n# find non essential packages\n",
        "Line" : 318,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# our find macros\n\n#FIND_PACKAGE(BlasLapack)      # search for Blas Lapack support\n",
        "Line" : 321,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# serial domain decomposition\n\n# parallel domain decomposition\n",
        "Line" : 323,
        "CharPositionInLine" : 30
      },
      "64" : {
        "Text" : "#ADD_DEFINITIONS  ( -DIDXTYPEWIDTH=64 )   # 64 bit\n\n#ADD_DEFINITIONS  ( -DREALTYPEWIDTH=64 )  # 64 bit\n",
        "Line" : 325,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# curl downloads files on the fly\n",
        "Line" : 329,
        "CharPositionInLine" : 30
      },
      "66" : {
        "Text" : "# valgrind for profiling and memmory leak detection\n\n# Google PerfTools for profiling\n",
        "Line" : 331,
        "CharPositionInLine" : 30
      },
      "67" : {
        "Text" : "# GNU Scientific Library\n",
        "Line" : 335,
        "CharPositionInLine" : 32
      },
      "68" : {
        "Text" : "# MPI \n",
        "Line" : 338,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# if mpi was found add it to the include path if needed\n",
        "Line" : 341,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# mutation++\n",
        "Line" : 356,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# mutation++ library\n",
        "Line" : 358,
        "CharPositionInLine" : 28
      },
      "72" : {
        "Text" : "# define CF_HAVE_MUTATIONPP only if enabled to do so\n",
        "Line" : 359,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# PLATO\n",
        "Line" : 363,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# PLATO library\n",
        "Line" : 365,
        "CharPositionInLine" : 23
      },
      "75" : {
        "Text" : "# define CF_HAVE_PLATO only if enabled to do so\n",
        "Line" : 366,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# CUDA\n",
        "Line" : 370,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# CUDA environment\n",
        "Line" : 372,
        "CharPositionInLine" : 20
      },
      "78" : {
        "Text" : "# cmake find macros\n",
        "Line" : 376,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# file compression support\n",
        "Line" : 378,
        "CharPositionInLine" : 28
      },
      "80" : {
        "Text" : "# AL: this should not be here !!!!!!\n",
        "Line" : 386,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "#include the generated config file\n",
        "Line" : 399,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "# AL: SVN is not checked anymore for portability reasons\n\n# check for subversion support\n\n# INCLUDE(CheckSvnVersion)\n",
        "Line" : 403,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# enable all kind of tests\n",
        "Line" : 407,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "##############################################################################\n",
        "Line" : 415,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "##############################################################################\n",
        "Line" : 419,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# continue to kernel modules\n",
        "Line" : 421,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "# include in compilation path the src dir\n",
        "Line" : 423,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "#MESSAGE(\"##### coolfluid-solver_files = ${coolfluid-solver_files}\")\n",
        "Line" : 426,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "##############################################################################\n",
        "Line" : 428,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "##############################################################################\n",
        "Line" : 432,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "#IF (CF_ENABLE_STATIC)\n",
        "Line" : 434,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "#ENDIF()\n",
        "Line" : 438,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "# check existence of Mutation* libraries and set corresponding environmental variables\n",
        "Line" : 440,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "# local plugins\n",
        "Line" : 462,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "# find extra plugins\n",
        "Line" : 466,
        "CharPositionInLine" : 0
      },
      "96" : {
        "Text" : "# include base extra dir in compilation search path\n",
        "Line" : 468,
        "CharPositionInLine" : 2
      },
      "97" : {
        "Text" : "# include plugin configuration\n",
        "Line" : 471,
        "CharPositionInLine" : 2
      },
      "98" : {
        "Text" : "# find modules in each search dir\n",
        "Line" : 483,
        "CharPositionInLine" : 2
      },
      "99" : {
        "Text" : "# include each module dir in compilation search path\n",
        "Line" : 490,
        "CharPositionInLine" : 6
      },
      "100" : {
        "Text" : "# include modules directories\n",
        "Line" : 499,
        "CharPositionInLine" : 0
      },
      "101" : {
        "Text" : "# applications directory (Solver & co)\n",
        "Line" : 507,
        "CharPositionInLine" : 0
      },
      "102" : {
        "Text" : "# AL: this could mess up the testcases\n\n#IF (NOT CF_ENABLE_STATIC)\n\n#  SET ( coolfluid_solver_exe ${COOLFluiD_BINARY_DIR}/apps/Solver/coolfluid-solver CACHE  \"Full path to coolfluid-solver\" INTERNAL )\n\n#  MESSAGE (\"###### coolfluid_solver_exe is ${coolfluid_solver_exe}\")\n\n#  MARK_AS_ADVANCED ( coolfluid_solver_exe )\n\n#ENDIF()\n",
        "Line" : 510,
        "CharPositionInLine" : 0
      },
      "103" : {
        "Text" : "#config file generation (at the end, so everything is detected)\n",
        "Line" : 517,
        "CharPositionInLine" : 0
      },
      "104" : {
        "Text" : "# install the headers\n",
        "Line" : 520,
        "CharPositionInLine" : 0
      },
      "105" : {
        "Text" : "##############################################################################\n\n# print summary\n\n##############################################################################\n",
        "Line" : 526,
        "CharPositionInLine" : 0
      },
      "106" : {
        "Text" : "# if file with orphan files exists remove it\n",
        "Line" : 589,
        "CharPositionInLine" : 0
      },
      "107" : {
        "Text" : "# if orphan files were found, put the list on the file\n",
        "Line" : 594,
        "CharPositionInLine" : 0
      },
      "108" : {
        "Text" : "# dump relevant variables in the log file\n\n# packaging instructions\n",
        "Line" : 604,
        "CharPositionInLine" : 24
      },
      "CommentCount" : 109
    },
    "CTestConfig.cmake" : {
      "ObjectId" : "c640e958b593a17d01b23198806a7798160255bb",
      "LastModified" : "2014-09-23T14:47:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## This file should be placed in the root directory of your project.\n\n## Then modify the CMakeLists.txt file in the root directory of your\n\n## project to incorporate the testing dashboard.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "apps/CMakeLists.txt" : {
      "ObjectId" : "337bb0a8ab72d5ba55e17ed7f0b88a0e1c136c61",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#FOREACH( ADIR ${CF_KERNEL_MODS} )\n\n#    LOGVERBOSE (\"\\# KERNEL MODULE [${ADIR}]\")\n\n#    ADD_SUBDIRECTORY (${ADIR})\n\n#ENDFOREACH( ADIR ${CF_KERNEL_MODS} )\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "apps/Solver/CMakeLists.txt" : {
      "ObjectId" : "5bfaeb6520b63e0e9bcac6a9075432a797f20dfb",
      "LastModified" : "2018-02-23T17:03:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### coolfluid-solver ##########################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# testing of testcases\n\n#GET_PROPERTY ( coolfluid_solver_path TARGET coolfluid-solver PROPERTY LOCATION )\n\n#SET ( coolfluid_solver_exe ${coolfluid_solver_path} CACHE \"Full path to coolfluid-solver\" INTERNAL )\n\n#MESSAGE (\"###### coolfluid_solver_exe is ${coolfluid_solver_exe}\")\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#MARK_AS_ADVANCED ( coolfluid_solver_exe )\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###############################################################################\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/CMakeLists.txt" : {
      "ObjectId" : "3e510a2ad94e71f7bd8680c33827442ffe1101eb",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# install the cmake files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/CMakeTestCUDACompiler.cmake" : {
      "ObjectId" : "bf4e231720555b8fa7c07ce037a11bee6acab4d2",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Modified from CMakeTestCUDACompiler.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This file is used by EnableLanguage in cmGlobalGenerator to\n\n# determine that that selected CUDA compiler can actually compile\n\n# and link the most basic of programs. If not, a fatal error\n\n# is set and cmake stops processing commands and will not generate\n\n# any makefiles or projects.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/CheckCompilerFeatures.cmake" : {
      "ObjectId" : "1cf75241eb044433228beb34ca0edb63a232b1c2",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#######################################################################################\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#   CHECK_TYPE_SIZE(int8_t         CF_SIZEOF_INT8_T)\n\n#   CHECK_TYPE_SIZE(uint8_t        CF_SIZEOF_UINT8_T)\n\n#   CHECK_TYPE_SIZE(int_least8_t   CF_SIZEOF_INT_LEAST8_T)\n\n#   CHECK_TYPE_SIZE(uint_least8_t  CF_SIZEOF_UINT_LEAST8_T)\n\n#   CHECK_TYPE_SIZE(int_fast8_t    CF_SIZEOF_INT_FAST8_T)\n\n#   CHECK_TYPE_SIZE(uint_fast8_t   CF_SIZEOF_UINT_FAST8_T)\n\n#   CHECK_TYPE_SIZE(int16_t        CF_SIZEOF_INT16_T)\n\n#   CHECK_TYPE_SIZE(uint16_t       CF_SIZEOF_UINT16_T)\n\n#   CHECK_TYPE_SIZE(int_least16_t  CF_SIZEOF_INT_LEAST16_T)\n\n#   CHECK_TYPE_SIZE(uint_least16_t CF_SIZEOF_UINT_LEAST16_T)\n\n#   CHECK_TYPE_SIZE(int_fast16_t   CF_SIZEOF_INT_FAST16_T)\n\n#   CHECK_TYPE_SIZE(uint_fast16_t  CF_SIZEOF_UINT_FAST16_T)\n\n#   CHECK_TYPE_SIZE(int32_t        CF_SIZEOF_INT32_T)\n\n#   CHECK_TYPE_SIZE(uint32_t       CF_SIZEOF_UINT32_T)\n\n#   CHECK_TYPE_SIZE(int_least32_t  CF_SIZEOF_INT_LEAST32_T)\n\n#   CHECK_TYPE_SIZE(uint_least32_t CF_SIZEOF_UINT_LEAST32_T)\n\n#   CHECK_TYPE_SIZE(int_fast32_t   CF_SIZEOF_INT_FAST32_T)\n\n#   CHECK_TYPE_SIZE(uint_fast32_t  CF_SIZEOF_UINT_FAST32_T)\n\n#   CHECK_TYPE_SIZE(int64_t        CF_SIZEOF_INT64_T)\n\n#   CHECK_TYPE_SIZE(uint64_t       CF_SIZEOF_UINT64_T)\n\n#   CHECK_TYPE_SIZE(int_least64_t  CF_SIZEOF_INT_LEAST64_T)\n\n#   CHECK_TYPE_SIZE(uint_least64_t CF_SIZEOF_UINT_LEAST64_T)\n\n#   CHECK_TYPE_SIZE(int_fast64_t   CF_SIZEOF_INT_FAST64_T)\n\n#   CHECK_TYPE_SIZE(uint_fast64_t  CF_SIZEOF_UINT_FAST64_T)\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#   CHECK_TYPE_SIZE(ssize_t        CF_SIZEOF_SSIZE_T)\n\n#   CHECK_TYPE_SIZE(off_t          CF_SIZEOF_OFF_T)\n\n#   CHECK_TYPE_SIZE(__int64        CF_SIZEOF___INT64)\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#######################################################################################\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#######################################################################################\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# LOG ( \"+++++  Checking for pre compiled header support\" )\n\n# INCLUDE(CheckPreCompiledHeaderSupport)\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#######################################################################################\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#######################################################################################\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#######################################################################################\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#LOG ( \"+++++  Checking for restrict keyword\" )\n\n#INCLUDE(CheckRestrictKeyword)\n",
        "Line" : 83,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#######################################################################################\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# LOG ( \"+++++  Checking for explicit template support\" ) # output in macro\n",
        "Line" : 88,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "#######################################################################################\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# check memory mmap functions\n",
        "Line" : 93,
        "CharPositionInLine" : 45
      },
      "14" : {
        "Text" : "# check memory mmap functions\n",
        "Line" : 94,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "#######################################################################################\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# check memory mmap functions\n",
        "Line" : 104,
        "CharPositionInLine" : 51
      },
      "17" : {
        "Text" : "#######################################################################################\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#######################################################################################\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#######################################################################################\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#######################################################################################\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#######################################################################################\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# check unistd.h\n",
        "Line" : 145,
        "CharPositionInLine" : 61
      },
      "23" : {
        "Text" : "#######################################################################################\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# check for c++ abi, ussually present in GNU compilers\n",
        "Line" : 150,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "#######################################################################################\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# check for time headers\n",
        "Line" : 164,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "#######################################################################################\n\n# Win32 specific\n\n#######################################################################################\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# check windows.hfor Windows API\n",
        "Line" : 177,
        "CharPositionInLine" : 62
      },
      "29" : {
        "Text" : "# check dbghelp.h for call stack\n",
        "Line" : 179,
        "CharPositionInLine" : 62
      },
      "30" : {
        "Text" : "# check psapi.h for memory info\n",
        "Line" : 181,
        "CharPositionInLine" : 62
      },
      "31" : {
        "Text" : "#######################################################################################\n\n# UNIX specific\n\n#######################################################################################\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# for dlopen\n",
        "Line" : 192,
        "CharPositionInLine" : 52
      },
      "CommentCount" : 33
    },
    "cmake/CheckExplicitInstantiation.cmake" : {
      "ObjectId" : "fc6cfca57fcf9197d6bd850102db533bfa1706cf",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test whether the compiler supports explicit template instantiation.\n\n# This actually creates a class template instantiation in one source\n\n# file and tries to use it from another.  This approach checks that\n\n# both the instantiation syntax and symbol linkage is handled\n\n# properly.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/CheckFunctionDef.cmake" : {
      "ObjectId" : "9ddba584a96ef52b08e5303d2ce38c6810910f5a",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# try to compile a program\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/CheckMPI.cmake" : {
      "ObjectId" : "475342cce8d6942332177981c1e436307abd866a",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#######################################################################\n\n# find MPI compiler or libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# try to compile an mpi program to check if compiler is already mpi\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#######################################################################\n\n# find mpirun\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/CheckOperatingSystem.cmake" : {
      "ObjectId" : "4577beb56cdaba4dbf4b68c170c8183ea4752dce",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### Check for Linux\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### Check for Apple MacOSX\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "### Check for Windows\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "### FINAL MESSAGE\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/CheckPreCompiledHeaderSupport.cmake" : {
      "ObjectId" : "5c8fe0069a6dff2286f5328065c184cc38d6e911",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check support for precompiled headers\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Assume WIN32 uses MSVC, therefore PCH support is ok\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# define macro for using precompiled header\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Flags to generate PCH\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Flags to use PCH\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# if we have gcc > 3.4 then PCH support is ok\n\n# but for the moment we keep it out\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "cmake/CheckRestrictKeyword.cmake" : {
      "ObjectId" : "3d9ca76cbe31d0ff5ea8af9f878e5136d7ba28e1",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This module checks if the C++ compiler supports the restrict keyword or\n\n# some variant of it. The following variants are checked for in that order:\n\n# 1. restrict            (The standard C99 keyword, not yet in C++ standard, Windows VS has it)\n\n# 2. __restrict          (G++ has it)\n\n# 3. __restrict__        (G++ has it too)\n\n# 4. _Restrict           (seems to be used by Sun's compiler)\n\n# These four cases seem to cover all existing variants; however some C++\n\n# compilers don't support any variant, in which case the CF_RESTRICT_KEYWORD variable is set to nothing\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# not supported so keep it empty\n",
        "Line" : 46,
        "CharPositionInLine" : 33
      },
      "CommentCount" : 2
    },
    "cmake/CheckSvnVersion.cmake" : {
      "ObjectId" : "928d453ab2ab98d4376aec8a228c43559e5549a8",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# sunversion version check\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#   MESSAGE(\"Current revision is ${COOLFluiD_WC_REVISION}\")\n\n#   MESSAGE(\"svn info : ${COOLFluiD_WC_INFO}\")\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/DefineBuildModes.cmake" : {
      "ObjectId" : "f46df95105b7356e67aaa209e38a7b75a7d649cb",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#######################################################\n\n### DEBUG mode #### TO BE REMOVED !!!!!!!\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## AL: changed from -02 to -03 for experiments\n",
        "Line" : 9,
        "CharPositionInLine" : 3
      },
      "2" : {
        "Text" : "#LIST ( APPEND CMAKE_CXX_LINK_FLAGS  \"-O2 -Wl,--allow-multiple-definition -Wl,--whole-archive\" )\n\n#LIST ( APPEND CMAKE_CXX_LINK_FLAGS  \" -Wl,--allow-multiple-definition -Wl,--whole-archive\" )\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "### TESTING THIS MODIFICATION\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#######################################################\n\n### OPTIM mode\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#######################################################\n\n### RelWithDebInfo mode\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#######################################################\n\n### RELEASE mode\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#######################################################\n\n### CUDA mode\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# LIST ( APPEND CF_C_FLAGS_CUDA       \"-O2 -g -arch sm_20 -Xcompiler -fPIC\" )\n\n# LIST ( APPEND CF_CXX_FLAGS_CUDA     \"-O2 -g -arch sm_20 -Xcompiler -fPIC\" )\n\n# LIST ( APPEND CF_Fortran_FLAGS_CUDA \"-O2 -g -fPIC\" )\n\n# LIST ( APPEND CF_CUDAC_FLAGS_CUDA   \"-O2 -g -arch sm_20 -Xcompiler -fPIC\" )\n",
        "Line" : 132,
        "CharPositionInLine" : 3
      },
      "9" : {
        "Text" : "#LIST ( APPEND CF_CUDAC_FLAGS_CUDA   \"-O3 -g -arch sm_20 -Xcompiler -fPIC\" )\n",
        "Line" : 139,
        "CharPositionInLine" : 3
      },
      "10" : {
        "Text" : "#LIST ( APPEND CF_CUDAC_FLAGS_CUDA  \"-O3 -g -arch=sm_60 --compiler-options -fPIC\" )\n",
        "Line" : 141,
        "CharPositionInLine" : 3
      },
      "11" : {
        "Text" : "#   SET(CMAKE_SHARED_LIBRARY_Fortran_FLAGS \"-fPIC\")  \n\n#   SET(CMAKE_SHARED_LIBRARY_C_FLAGS \"-Xcompiler -fPIC\")        \n\n#   SET(CMAKE_SHARED_LIBRARY_CXX_FLAGS \"-Xcompiler -fPIC\")      \n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "### CUDARELEASE mode\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# LIST ( APPEND CF_C_FLAGS_CUDARELEASE       \"-O2 -g -arch sm_20 -Xcompiler -fPIC\" )\n\n# LIST ( APPEND CF_CXX_FLAGS_CUDARELEASE     \"-O2 -g -arch sm_20 -Xcompiler -fPIC\" )\n\n# LIST ( APPEND CF_Fortran_FLAGS_CUDARELEASE \"-O2 -g -fPIC\" )\n\n# LIST ( APPEND CF_CUDAC_FLAGS_CUDARELEASE   \"-O2 -g -arch sm_20 -Xcompiler -fPIC\" )\n",
        "Line" : 153,
        "CharPositionInLine" : 3
      },
      "14" : {
        "Text" : "# LIST ( APPEND CF_CUDAC_FLAGS_CUDARELEASE   \"-O3 -DNDEBUG -arch=sm_30 -Xcompiler -fPIC\" )\n",
        "Line" : 160,
        "CharPositionInLine" : 3
      },
      "15" : {
        "Text" : "#   LIST ( APPEND CF_CUDAC_FLAGS_CUDARELEASE   \"-O3 -DNDEBUG -code=compute_35 -arch=sm_35 -Xcompiler -fPIC\" )\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#   SET(CMAKE_SHARED_LIBRARY_Fortran_FLAGS \"-fPIC\")  \n\n#   SET(CMAKE_SHARED_LIBRARY_C_FLAGS \"-Xcompiler -fPIC\")        \n\n#   SET(CMAKE_SHARED_LIBRARY_CXX_FLAGS \"-Xcompiler -fPIC\")      \n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#IF ( CF_ENABLE_IBMSTATIC )\n\n# LIST ( APPEND CMAKE_CXX_LINK_FLAGS       \"-O3 -Wl,--allow-multiple-definition -Wl,--whole-archive\" )\n\n# LIST ( APPEND CF_C_FLAGS_BGOPTIM3        \"-O3 -qstrict -qarch=qp -qtune=qp\" )\n\n# LIST ( APPEND CF_CXX_FLAGS_BGOPTIM3      \"-O3 -qstrict -qarch=qp -qtune=qp\" )\n\n# LIST ( APPEND CF_Fortran_FLAGS_BGOPTIM3  \"-O3 -qstrict -qarch=qp -qtune=qp\" )\n\n#MARK_AS_ADVANCED( CF_CMAKE_CXX_FLAGS_BGOPTIM3  CF_CMAKE_C_FLAGS_BGOPTIM3 CF_CMAKE_Fortran_FLAGS_BGOPTIM3 )\n\n#ENDIF(CF_ENABLE_IBMSTATIC)\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#######################################################\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "cmake/DefineBuildRules.cmake" : {
      "ObjectId" : "297952db68f03dd12c2d4782cdf28e0335b07035",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#IF (NOT CF_ENABLE_CUDA) \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#ELSE()\n\n#SET ( CF_LIBRARY_LINK_FLAGS \"-Xcompiler\" CACHE STRING \"Extra link flags for libraries\" FORCE )\n\n#ENDIF (NOT CF_ENABLE_CUDA)\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "########################################################################################\n\n# UNIX\n\n########################################################################################\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# gnu specific warning flags\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# use pipe for faster compilation\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# respect c 89 standard (same as -std=c89)\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#IF(CF_ENABLE_MUTATIONPP)\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# use new features from c++0x\n",
        "Line" : 24,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#    CF_ADD_CXX_FLAGS(\"-std=c++0x\")\n\n#ELSE()\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# respect c++ 98 standard\n",
        "Line" : 27,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "#ENDIF(CF_ENABLE_MUTATIONPP)\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# dont allow gnu extensions\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# dont defined common variables\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# use many warnings\n",
        "Line" : 39,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# this is added for checking \n",
        "Line" : 41,
        "CharPositionInLine" : 5
      },
      "15" : {
        "Text" : "#      CF_ADD_CXX_FLAGS(\"-W\")\n\n#      CF_ADD_CXX_FLAGS(\"-Wextra\")\n\n#      CF_ADD_CXX_FLAGS(\"-Woverloaded-virtual\")\n\n#      CF_ADD_CXX_FLAGS(\"-Wsign-promo\")\n\n#      CF_ADD_CXX_FLAGS(\"-Wformat\")\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Warn if an undefined identifier is evaluated in an #if directive.\n\n# AL: this flag activates many BOOST warnings\n\n#CF_ADD_CXX_FLAGS(\"-Wundef\" )\n\n# accept functions that dont use all parameters, due to virtual functions may not need all\n",
        "Line" : 47,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# remove boost many warnings\n",
        "Line" : 52,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "# this is temporary until we all move to using openmpi\n\n# must turn off non-virtual-dtor because many mpi implementations use it\n\n# KDE uses -Wnon-virtual-dtor\n",
        "Line" : 55,
        "CharPositionInLine" : 6
      },
      "19" : {
        "Text" : "#      CF_ADD_CXX_FLAGS(\"-Wno-non-virtual-dtor\")\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# must turn long long off because many mpi implementations use it\n",
        "Line" : 59,
        "CharPositionInLine" : 6
      },
      "21" : {
        "Text" : "#      CF_ADD_CXX_FLAGS(\"-Wno-long-long\")\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# be pedantic but issue warnings instead of errors\n\n# suppressing this option suppresses many BOOST warnings\n\n# CF_ADD_CXX_FLAGS(\"-pedantic\")\n",
        "Line" : 61,
        "CharPositionInLine" : 6
      },
      "23" : {
        "Text" : "#     CF_ADD_CXX_FLAGS(\"-fpermissive\")\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# could add even these\n\n#-Wcast-align -Wchar-subscripts -Wpointer-arith -Wformat-security\n",
        "Line" : 66,
        "CharPositionInLine" : 6
      },
      "25" : {
        "Text" : "########################################################################################\n\n# WINDOWS\n\n########################################################################################\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# stupid VS2005 warning about not using fopen\n",
        "Line" : 80,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# for M_PI in cmath\n",
        "Line" : 82,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# disable auto-linking with boost\n",
        "Line" : 84,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# Required for auto link not to mess up on vs80.\n\n# @todo Disable auto link on windows altogether.\n\n# ADD_DEFINITIONS( -DBOOST_DYN_LINK )\n",
        "Line" : 87,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# compilation flags\n\n#   /MD use the Multithreaded DLL of runtime library\n",
        "Line" : 91,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# add exception handling\n",
        "Line" : 96,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# under windows internal deps must be used so force them\n",
        "Line" : 100,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# linker flags:\n\n#   /OPT:NOREF keeps functions and data that are never referenced ( needed for static libs )\n",
        "Line" : 105,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "#   SET ( CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} /OPT:NOREF /OPT:NOICF\" )\n\n#   SET ( CMAKE_CXX_CREATE_STATIC_LIBRARY  \"lib ${CMAKE_CL_NOLOGO} /OPT:NOREF /OPT:NOICF <LINK_FLAGS> /out:<TARGET> <OBJECTS>\" )\n",
        "Line" : 109,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "########################################################################################\n\n# APPLE\n\n########################################################################################\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Apple linker with GCC does not support explicit templates so force them OFF\n",
        "Line" : 120,
        "CharPositionInLine" : 1
      },
      "37" : {
        "Text" : "#  # improve the linker compiler to avoid unresolved symbols causing errors\n",
        "Line" : 126,
        "CharPositionInLine" : 1
      },
      "38" : {
        "Text" : "#  SET(CMAKE_CXX_CREATE_SHARED_LIBRARY\n\n#  \"<CMAKE_CXX_COMPILER> -undefined dynamic_lookup <LANGUAGE_COMPILE_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS> <LINK_FLAGS> -o <TARGET> -install_name <TARGET_INSTALLNAME_DIR><TARGET_SONAME> <OBJECTS> <LINK_LIBRARIES>\")\n",
        "Line" : 127,
        "CharPositionInLine" : 8
      },
      "39" : {
        "Text" : "########################################################################################\n\n# GENERIC\n\n########################################################################################\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Disable boost pre-1.34 boost::filesystem functions.\n\n# ADD_DEFINITIONS ( -DBOOST_FILESYSTEM_NO_DEPRECATED )\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "########################################################################################\n\n# FINAL\n\n########################################################################################\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# test and add the user defined flags\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# fortran flags currently nont checked\n",
        "Line" : 159,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# FOREACH( fortran_flag ${Fortran_FLAGS_LIST} )\n\n#   CF_ADD_Fortran_FLAGS_SIGNAL_ERROR ( ${fortran_flag} )\n\n# ENDFOREACH()\n",
        "Line" : 161,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 45
    },
    "cmake/DefineGlobalOptions.cmake" : {
      "ObjectId" : "134d0408bda222f9e76c442a7e7307be2fbc50fe",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#########################################################################################\n\n# Generic OPTIONS\n\n#########################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# user option to add assertions\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# use of long unsigned integers\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# precision real numbers\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# memory allocation for CUDA \n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# user option to add tracing\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# user option to add logging\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# user option to add debug logging\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# user option to enable debug macros\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# user option to search other dirs for plugins\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# if user disables MPI we overwrite the CF_HAVE_MPI variable\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#########################################################################################\n\n# PROFILING OPTIONS\n\n#########################################################################################\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# user option to add system depedent profiling\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "###########################\n\n# GNU gprof\n",
        "Line" : 104,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "###########################\n\n# google-perftools\n",
        "Line" : 116,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "#########################################################################################\n\n# STATIC BUILD OPTIONS\n\n#########################################################################################\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# user option to static build\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# LINUX\n",
        "Line" : 145,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "# SGI IRIX\n",
        "Line" : 150,
        "CharPositionInLine" : 6
      },
      "19" : {
        "Text" : "# On Darwin:\n\n#  -all_load $convenience\n",
        "Line" : 155,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "# On Solaris 2:\n\n#   -z allextract $convenience -z defaultextract\n",
        "Line" : 161,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 21
    },
    "cmake/DefineMacros.cmake" : {
      "ObjectId" : "d1fb709c4a46dfcfc9b3dec62ead2cd1f6bc86aa",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# include cmake macros\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# include coolfluid macros\n\n##############################################################################\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindBlasLapack.cmake" : {
      "ObjectId" : "6e96db0527e832f05f373a7039c35a437461be9f",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Confirm that liblapack library is installed\n\n# This module defines\n\n#   CF_HAVE_LAPACK\n\n#   CF_HAVE_BLAS\n\n#   CF_HAVE_BLASLAPACK\n\n#   CF_BLASLAPACK_LIBRARIES\n\n# Require both lapack and blas\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BLAS ############################\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# LAPACK #########################\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# clear include search path\n\n# clear library search path\n",
        "Line" : 48,
        "CharPositionInLine" : 32
      },
      "4" : {
        "Text" : "# BOTH ###########################\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#################################\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# user provided directly the libraries of LAPACK\n\n# TODO: test  that they actually work\n",
        "Line" : 96,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    },
    "cmake/FindBoost.cmake" : {
      "ObjectId" : "d0664c01cd941867bac891205b505844d22247a0",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Boost include dirs and libraries\n\n# Usage of this module as follows:\n\n#\n\n# NOTE: Take note of the Boost_ADDITIONAL_VERSIONS variable below.\n\n# Due to Boost naming conventions and limitations in CMake this find\n\n# module is NOT future safe with respect to Boost version numbers,\n\n# and may break.\n\n#\n\n# == Using Header-Only libraries from within Boost: ==\n\n#\n\n#   find_package( Boost 1.36.0 )\n\n#   if(Boost_FOUND)\n\n#      include_directories(${Boost_INCLUDE_DIRS})\n\n#      add_executable(foo foo.cc)\n\n#   endif()\n\n#\n\n#\n\n# == Using actual libraries from within Boost: ==\n\n#\n\n#   set(Boost_USE_STATIC_LIBS   ON)\n\n#   set(Boost_USE_MULTITHREADED ON)\n\n#   find_package( Boost 1.36.0 COMPONENTS date_time filesystem system ... )\n\n#\n\n#   if(Boost_FOUND)\n\n#      include_directories(${Boost_INCLUDE_DIRS})\n\n#      add_executable(foo foo.cc)\n\n#      target_link_libraries(foo ${Boost_LIBRARIES})\n\n#   endif()\n\n#\n\n#\n\n# The components list needs to contain actual names of boost libraries only,\n\n# such as \"date_time\" for \"libboost_date_time\".  If you're using parts of\n\n# Boost that contain header files only (e.g. foreach) you do not need to\n\n# specify COMPONENTS.\n\n#\n\n# You should provide a minimum version number that should be used. If you provide this \n\n# version number and specify the REQUIRED attribute, this module will fail if it\n\n# can't find the specified or a later version. If you specify a version number this is\n\n# automatically put into the considered list of version numbers and thus doesn't need\n\n# to be specified in the Boost_ADDITIONAL_VERSIONS variable (see below).\n\n#\n\n# NOTE for Visual Studio Users:\n\n#     Automatic linking is used on MSVC & Borland compilers by default when\n\n#     #including things in Boost.  It's important to note that setting\n\n#     Boost_USE_STATIC_LIBS to OFF is NOT enough to get you dynamic linking,\n\n#     should you need this feature.  Automatic linking typically uses static\n\n#     libraries with a few exceptions (Boost.Python is one).\n\n#\n\n#     Please see the section below near Boost_LIB_DIAGNOSTIC_DEFINITIONS for\n\n#     more details.  Adding a TARGET_LINK_LIBRARIES() as shown in the example\n\n#     above appears to cause VS to link dynamically if Boost_USE_STATIC_LIBS\n\n#     gets set to OFF.  It is suggested you avoid automatic linking since it\n\n#     will make your application less portable.\n\n#\n\n# =========== The mess that is Boost_ADDITIONAL_VERSIONS (sorry?) ============\n\n#\n\n# OK, so the Boost_ADDITIONAL_VERSIONS variable can be used to specify a list of\n\n# boost version numbers that should be taken into account when searching\n\n# for Boost. Unfortunately boost puts the version number into the\n\n# actual filename for the libraries, so this variable will certainly be needed\n\n# in the future when new Boost versions are released.\n\n#\n\n# Currently this module searches for the following version numbers:\n\n# 1.33, 1.33.0, 1.33.1, 1.34, 1.34.0, 1.34.1, 1.35, 1.35.0, 1.35.1,\n\n# 1.36, 1.36.0, 1.36.1, 1.37, 1.37.0, 1.38, 1.38.0, 1.39, 1.39.0,\n\n# 1.40, 1.40.0\n\n#\n\n# NOTE: If you add a new major 1.x version in Boost_ADDITIONAL_VERSIONS you should\n\n# add both 1.x and 1.x.0 as shown above.  Official Boost include directories\n\n# omit the 3rd version number from include paths if it is 0 although not all\n\n# binary Boost releases do so.\n\n#\n\n# SET(Boost_ADDITIONAL_VERSIONS \"1.78\" \"1.78.0\" \"1.79\" \"1.79.0\")\n\n#\n\n# ===================================== ============= ========================\n\n#\n\n# Variables used by this module, they can change the default behaviour and\n\n# need to be set before calling find_package:\n\n#\n\n#   Boost_USE_MULTITHREADED      Can be set to OFF to use the non-multithreaded\n\n#                                boost libraries.  If not specified, defaults\n\n#                                to ON.\n\n#\n\n#   Boost_USE_STATIC_LIBS        Can be set to ON to force the use of the static\n\n#                                boost libraries. Defaults to OFF.\n\n#\n\n# Other Variables used by this module which you may want to set.\n\n#\n\n#   Boost_ADDITIONAL_VERSIONS    A list of version numbers to use for searching\n\n#                                the boost include directory.  Please see\n\n#                                the documentation above regarding this\n\n#                                annoying, but necessary variable :(\n\n#\n\n#   Boost_DEBUG                  Set this to TRUE to enable debugging output\n\n#                                of FindBoost.cmake if you are having problems.\n\n#                                Please enable this before filing any bug\n\n#                                reports.\n\n#\n\n#   Boost_DETAILED_FAILURE_MSG   FindBoost doesn't output detailed information\n\n#                                about why it failed or how to fix the problem\n\n#                                unless this is set to TRUE or the REQUIRED\n\n#                                keyword is specified in find_package().\n\n#                                  [Since CMake 2.8.0]\n\n# \n\n#   Boost_COMPILER               Set this to the compiler suffix used by Boost\n\n#                                (e.g. \"-gcc43\") if FindBoost has problems finding\n\n#                                the proper Boost installation\n\n#\n\n# These last three variables are available also as environment variables:\n\n#\n\n#   BOOST_ROOT or BOOSTROOT      The preferred installation prefix for searching for\n\n#                                Boost.  Set this if the module has problems finding\n\n#                                the proper Boost installation.\n\n#\n\n#   BOOST_INCLUDEDIR             Set this to the include directory of Boost, if the\n\n#                                module has problems finding the proper Boost installation\n\n#\n\n#   BOOST_LIBRARYDIR             Set this to the lib directory of Boost, if the\n\n#                                module has problems finding the proper Boost installation\n\n#\n\n# Variables defined by this module:\n\n#\n\n#   Boost_FOUND                         System has Boost, this means the include dir was\n\n#                                       found, as well as all the libraries specified in\n\n#                                       the COMPONENTS list.\n\n#\n\n#   Boost_INCLUDE_DIRS                  Boost include directories: not cached\n\n#\n\n#   Boost_INCLUDE_DIR                   This is almost the same as above, but this one is\n\n#                                       cached and may be modified by advanced users\n\n#\n\n#   Boost_LIBRARIES                     Link to these to use the Boost libraries that you\n\n#                                       specified: not cached\n\n#\n\n#   Boost_LIBRARY_DIRS                  The path to where the Boost library files are.\n\n#\n\n#   Boost_VERSION                       The version number of the boost libraries that\n\n#                                       have been found, same as in version.hpp from Boost\n\n#\n\n#   Boost_LIB_VERSION                   The version number in filename form as\n\n#                                       it's appended to the library filenames\n\n#\n\n#   Boost_MAJOR_VERSION                 major version number of boost\n\n#   Boost_MINOR_VERSION                 minor version number of boost\n\n#   Boost_SUBMINOR_VERSION              subminor version number of boost\n\n#\n\n#   Boost_LIB_DIAGNOSTIC_DEFINITIONS    [WIN32 Only] You can call\n\n#                                       add_definitions(${Boost_LIB_DIAGNOSTIC_DEFINITIONS})\n\n#                                       to have diagnostic information about Boost's\n\n#                                       automatic linking outputted during compilation time.\n\n#\n\n# For each component you specify in find_package(), the following (UPPER-CASE)\n\n# variables are set.  You can use these variables if you would like to pick and\n\n# choose components for your targets instead of just using Boost_LIBRARIES.\n\n#\n\n#   Boost_${COMPONENT}_FOUND            True IF the Boost library \"component\" was found.\n\n#\n\n#   Boost_${COMPONENT}_LIBRARY          Contains the libraries for the specified Boost\n\n#                                       \"component\" (includes debug and optimized keywords\n\n#                                       when needed).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2006-2009 Kitware, Inc.\n\n# Copyright 2006-2008 Andreas Schneider <mail@cynapses.org>\n\n# Copyright 2007      Wengo\n\n# Copyright 2007      Mike Jackson\n\n# Copyright 2008      Andreas Pakulat <apaku@gmx.de>\n\n# Copyright 2008-2009 Philip Lowman <philip@yhbt.com>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distributed this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#  FindBoost functions & macros\n\n#\n\n############################################\n\n#\n\n# Check the existence of the libraries.\n\n#\n\n############################################\n\n# This macro was taken directly from the FindQt4.cmake file that is included\n\n# with the CMake distribution. This is NOT my work. All work was done by the\n\n# original authors of the FindQt4.cmake file. Only minor modifications were\n\n# made to remove references to Qt and make this file more generally applicable\n\n# And ELSE/ENDIF pairs were removed for readability.\n\n#########################################################################\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# if the generator supports configuration types then set\n\n# optimized and debug libraries, or if the CMAKE_BUILD_TYPE has a value\n",
        "Line" : 198,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# if there are no configuration types and CMAKE_BUILD_TYPE has no value\n\n# then just use the release libraries\n",
        "Line" : 203,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# FIXME: This probably should be set for both cases\n",
        "Line" : 207,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# if only the release version was found, set the debug variable also to the release version\n",
        "Line" : 211,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# if only the debug version was found, set the release variable also to the debug version\n",
        "Line" : 218,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Remove superfluous \"debug\" / \"optimized\" keywords from\n\n# Boost_LIBRARY_DIRS\n",
        "Line" : 228,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# Make variables changeble to the advanced user\n",
        "Line" : 241,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\n\n# Runs compiler with \"-dumpversion\" and parses major/minor\n\n# version with a regex.\n\n#\n",
        "Line" : 251,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#\n\n# End functions/macros\n\n#  \n\n#-------------------------------------------------------------------------------\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# The version may appear in a directory with or without the patch\n\n# level, even when the patch level is non-zero.\n",
        "Line" : 280,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# The user has not requested an exact version.  Among known\n\n# versions, find those that are acceptable to the user request.\n",
        "Line" : 286,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Select acceptable versions.\n",
        "Line" : 295,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# This version is high enough.\n",
        "Line" : 298,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# This version is a short-form for the requested version with\n\n# the patch level dropped.\n",
        "Line" : 301,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# Any version is acceptable.\n",
        "Line" : 307,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# The reason that we failed to find Boost. This will be set to a\n\n# user-friendly message when we fail to find some necessary piece of\n\n# Boost.\n",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# remove unit_test_framework if unite tests are not enabled \n",
        "Line" : 317,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# On versions < 1.35, remove the System library from the considered list\n\n# since it wasn't added until 1.35.\n",
        "Line" : 326,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# in cache already\n",
        "Line" : 347,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# Need to search for boost\n",
        "Line" : 366,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Output some of their choices\n",
        "Line" : 370,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# In windows, automatic linking is performed, so you do not have\n\n# to specify the libraries.  If you are linking to a dynamic\n\n# runtime, then you can choose to link to either a static or a\n\n# dynamic Boost library, the default is to do a static link.  You\n\n# can alter this for a specific library \"whatever\" by defining\n\n# BOOST_WHATEVER_DYN_LINK to force Boost library \"whatever\" to be\n\n# linked dynamically.  Alternatively you can force all Boost\n\n# libraries to dynamic link by defining BOOST_ALL_DYN_LINK.\n",
        "Line" : 380,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# This feature can be disabled for Boost library \"whatever\" by\n\n# defining BOOST_WHATEVER_NO_LIB, or for all of Boost by defining\n\n# BOOST_ALL_NO_LIB.\n",
        "Line" : 389,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# If you want to observe which libraries are being linked against\n\n# then defining BOOST_LIB_DIAGNOSTIC will cause the auto-linking\n\n# code to emit a #pragma message each time a library is selected\n\n# for linking.\n",
        "Line" : 393,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# If BOOST_ROOT was defined in the environment, use it.\n",
        "Line" : 409,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# If BOOSTROOT was defined in the environment, use it.\n",
        "Line" : 414,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# If BOOST_INCLUDEDIR was defined in the environment, use it.\n",
        "Line" : 419,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# If BOOST_LIBRARYDIR was defined in the environment, use it.\n",
        "Line" : 424,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Search for Boost include DIR \n\n# ------------------------------------------------------------------------\n\n# Try to find Boost by stepping backwards through the Boost versions\n\n# we know about.\n",
        "Line" : 459,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# Build a list of path suffixes for each version.\n",
        "Line" : 465,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# Add in a path suffix, based on the required version, ideally\n\n# we could read this from version.hpp, but for that to work we'd\n\n# need to know the include dir already\n",
        "Line" : 468,
        "CharPositionInLine" : 6
      },
      "35" : {
        "Text" : "# Transform 1.35 => 1_35 and 1.36.0 => 1_36_0\n",
        "Line" : 473,
        "CharPositionInLine" : 6
      },
      "36" : {
        "Text" : "# For BoostPro's underscores (and others?)\n",
        "Line" : 484,
        "CharPositionInLine" : 8
      },
      "37" : {
        "Text" : "# Look for a standard boost header file.\n",
        "Line" : 499,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Extract version information from version.hpp\n\n# ------------------------------------------------------------------------\n",
        "Line" : 507,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "# Extract Boost_VERSION and Boost_LIB_VERSION from version.hpp\n\n# Read the whole file:\n\n#\n",
        "Line" : 512,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Suffix initialization and compiler suffix detection.\n\n# ------------------------------------------------------------------------\n",
        "Line" : 547,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# Setting some more suffixes for the library\n",
        "Line" : 551,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "# Attempt to guess the compiler suffix\n\n# NOTE: this is not perfect yet, if you experience any issues\n\n# please report them and use the Boost_COMPILER variable\n\n# to work around the problems.\n",
        "Line" : 564,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "# Good luck!\n",
        "Line" : 584,
        "CharPositionInLine" : 20
      },
      "44" : {
        "Text" : "# yes, this is correct\n",
        "Line" : 585,
        "CharPositionInLine" : 35
      },
      "45" : {
        "Text" : "# Good luck!\n",
        "Line" : 586,
        "CharPositionInLine" : 20
      },
      "46" : {
        "Text" : "# yes, this is correct\n",
        "Line" : 587,
        "CharPositionInLine" : 35
      },
      "47" : {
        "Text" : "# no GCC version encoding prior to 1.34\n",
        "Line" : 594,
        "CharPositionInLine" : 38
      },
      "48" : {
        "Text" : "# no GCC version encoding prior to 1.34\n",
        "Line" : 602,
        "CharPositionInLine" : 38
      },
      "49" : {
        "Text" : "# Determine which version of GCC we have.\n",
        "Line" : 605,
        "CharPositionInLine" : 10
      },
      "50" : {
        "Text" : "# In Boost 1.36.0 and newer, the mangled compiler name used\n\n# on Mac OS X/Darwin is \"xgcc\".\n",
        "Line" : 609,
        "CharPositionInLine" : 16
      },
      "51" : {
        "Text" : "# In Boost <= 1.35.0, there is no mangled compiler name for\n\n# the Mac OS X/Darwin version of GCC.\n",
        "Line" : 613,
        "CharPositionInLine" : 16
      },
      "52" : {
        "Text" : "# We don't know the Boost version, so assume it's\n\n# pre-1.36.0.\n",
        "Line" : 618,
        "CharPositionInLine" : 14
      },
      "53" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Begin finding boost libraries\n\n# ------------------------------------------------------------------------\n",
        "Line" : 662,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "# Support preference of static libs by adjusting CMAKE_FIND_LIBRARY_SUFFIXES\n",
        "Line" : 702,
        "CharPositionInLine" : 4
      },
      "55" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  End finding boost libraries\n\n# ------------------------------------------------------------------------\n",
        "Line" : 763,
        "CharPositionInLine" : 2
      },
      "56" : {
        "Text" : "# Check the version of Boost against the requested version.\n",
        "Line" : 775,
        "CharPositionInLine" : 4
      },
      "57" : {
        "Text" : "# If the user requested an exact version of Boost, check\n\n# that. We already know that the Boost version we have is >= the\n\n# requested version.\n",
        "Line" : 795,
        "CharPositionInLine" : 6
      },
      "58" : {
        "Text" : "# If the user didn't specify a patchlevel, it's 0.\n",
        "Line" : 800,
        "CharPositionInLine" : 6
      },
      "59" : {
        "Text" : "# We'll set Boost_FOUND true again if we have an exact version match.\n",
        "Line" : 805,
        "CharPositionInLine" : 6
      },
      "60" : {
        "Text" : "# State that we found a version of Boost that is too new or too old.\n",
        "Line" : 817,
        "CharPositionInLine" : 6
      },
      "61" : {
        "Text" : "# We were unable to find some libraries, so generate a sensible\n\n# error message that lists the libraries we were unable to find.\n",
        "Line" : 849,
        "CharPositionInLine" : 6
      },
      "62" : {
        "Text" : "# Compatibility Code for backwards compatibility with CMake\n\n# 2.4's FindBoost module.\n",
        "Line" : 870,
        "CharPositionInLine" : 6
      },
      "63" : {
        "Text" : "# Look for the boost library path.\n\n# Note that the user may not have installed any libraries\n\n# so it is quite possible the Boost_LIBRARY_PATH may not exist.\n",
        "Line" : 873,
        "CharPositionInLine" : 6
      },
      "64" : {
        "Text" : "# Strip off the trailing \"/include\" in the path.\n",
        "Line" : 883,
        "CharPositionInLine" : 8
      },
      "65" : {
        "Text" : "# we opt not to automatically output Boost_ERROR_REASON here as\n\n# it could be quite lengthy and somewhat imposing in it's requests\n\n# Since Boost is not always a required dependency we'll leave this\n\n# up to the end-user.\n",
        "Line" : 928,
        "CharPositionInLine" : 8
      },
      "66" : {
        "Text" : "# show the Boost_INCLUDE_DIRS AND Boost_LIBRARIES variables only in the advanced view\n",
        "Line" : 941,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 67
    },
    "cmake/FindCBlas.cmake" : {
      "ObjectId" : "05417697e1d0e642f4c84eff911486808fbeb523",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Sets:\n\n#   CBLAS_INCLUDE_DIR  = where cblas.h can be found\n\n#   CBLAS_LIBRARY      = the library to link against (cblas etc)\n\n#   CF_HAVE_CBLAS      = set to true after finding the library\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# clear include search path\n\n# clear library search path\n",
        "Line" : 11,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 2
    },
    "cmake/FindCUDA.cmake" : {
      "ObjectId" : "fe362ff31af1ea9d35f5d63946f9f5dcd7ad210e",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find CUDA\n\n# This module looks for CUDA (NVIDIA compiler) support\n\n# Sets:\n\n# CUDA_INCLUDE_DIR  = where CUDA headers can be found\n\n# CUDA_LIBRARY      = the library to link against\n\n# CF_HAVE_CUDA      = set to true after finding the library\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# clear include search path\n\n# clear library search path\n",
        "Line" : 9,
        "CharPositionInLine" : 28
      },
      "2" : {
        "Text" : "# try in user defined paths first\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#FIND_PATH(CUDA_INCLUDE_DIR\n\n#          NAMES device_runtime.h\n\n#          PATHS ${TRIAL_INCLUDE_PATHS} )\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/FindCurl.cmake" : {
      "ObjectId" : "d349e2f539c627fb2e8bb83cd7254e34ca2057de",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Sets:\n\n# CURL_INCLUDE_DIR  = where curl.h can be found\n\n# CURL_LIBRARY      = the library to link against (curl etc)\n\n# CF_HAVE_CURL        = set to true after finding the library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# clear include search path\n\n# clear library search path\n",
        "Line" : 10,
        "CharPositionInLine" : 30
      },
      "CommentCount" : 2
    },
    "cmake/FindGSL.cmake" : {
      "ObjectId" : "07bd74c516724eed00cea2bb7cc0eea19ed249b4",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Sets:\n\n# GSL_INCLUDE_DIR  = where gsl_const.h can be found\n\n# GSL_LIBRARY      = the library to link against (gsl etc)\n\n# CF_HAVE_GSL        = set to true after finding the library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# clear include search path\n\n# clear library search path\n",
        "Line" : 10,
        "CharPositionInLine" : 30
      },
      "CommentCount" : 2
    },
    "cmake/FindGooglePerftools.cmake" : {
      "ObjectId" : "0ec5ab17922bdf2704da5d5207ec5028662b17ff",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Sets:\n\n# GOOGLE_PERFTOOLS_INCLUDE_DIR  = where google/profiler.h can be found\n\n# GOOGLE_PERFTOOLS_LIBRARY      = the library to link against\n\n# CF_HAVE_GOOGLE_PERFTOOLS      = set to true after finding the library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# clear include search path\n\n# clear library search path\n",
        "Line" : 10,
        "CharPositionInLine" : 30
      },
      "2" : {
        "Text" : "#tools used for profiling post-processing\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/FindMPI.cmake" : {
      "ObjectId" : "b7320c39114a94b9c6fbddecea39cfdb8ae9eaa2",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find MPI\n\n# This module looks for MPI (Message Passing Interface) support\n\n# Sets:\n\n# MPI_INCLUDE_DIR  = where MPI headers can be found\n\n# MPI_LIBRARY      = the library to link against\n\n# CF_MPI_AVAILABLE = set to true after finding the library\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# clear include search path\n\n# clear library search path\n",
        "Line" : 9,
        "CharPositionInLine" : 28
      },
      "2" : {
        "Text" : "# try in user defined paths first\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# try in these paths first and then the system ones\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# search for the mpi c++ library\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# try in user defined paths first\n",
        "Line" : 103,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# try in these paths first and then the system ones\n",
        "Line" : 113,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#    CF_DEBUG_VAR ( ${mpi_extra_lib} )\n\n#    CF_DEBUG_VAR ( MPI_EXTRA_LIBRARY_${mpi_extra_lib} )\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cmake/FindMetis.cmake" : {
      "ObjectId" : "15eee0d3e628dffb1ef896cf5d63e2722b555532",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# this module look for METIS (http://hdf.ncsa.uiuc.edu) support\n\n# it will define the following values\n\n#\n\n# METIS_INCLUDE_DIR  = where metis.h can be found\n\n# METIS_LIBRARY      = the library to link against (metis etc)\n\n# CF_HAVE_METIS        = set to true after finding the library\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# clear include search path\n\n# clear library search path\n",
        "Line" : 13,
        "CharPositionInLine" : 30
      },
      "CommentCount" : 2
    },
    "cmake/FindMutationpp.cmake" : {
      "ObjectId" : "5c5d09d69bee70bf34168e667a1a83c5662fa828",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Sets:\n\n# MUTATIONPP_INCLUDE_DIR  = where Mixture.h can be found\n\n# MUTATIONPP_LIBRARY      = the library to link against (mutation++ etc)\n\n# CF_HAVE_MUTATIONPP        = set to true after finding the library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# clear include search path\n\n# clear library search path\n",
        "Line" : 10,
        "CharPositionInLine" : 30
      },
      "CommentCount" : 2
    },
    "cmake/FindPLATO.cmake" : {
      "ObjectId" : "0bd951b06c134ec5773c9f05650be064ebaed758",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Sets:\n\n# PLATO_INCLUDE_DIR  = where Mixture.h can be found\n\n# PLATO_LIBRARY      = the library to link against (PLATO etc)\n\n# CF_HAVE_PLATO        = set to true after finding the library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# clear include search path\n\n# clear library search path\n",
        "Line" : 10,
        "CharPositionInLine" : 30
      },
      "CommentCount" : 2
    },
    "cmake/FindParmetis.cmake" : {
      "ObjectId" : "cf13e44ee8786f28e7f05e4ff49ba39185a59fdb",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# this module look for PARMETIS (http://hdf.ncsa.uiuc.edu) support\n\n# it will define the following values\n\n#\n\n# PARMETIS_INCLUDE_DIR  = where parmetis.h can be found\n\n# PARMETIS_LIBRARY      = the library to link against (parmetis etc)\n\n# CF_HAVE_PARMETIS        = set to true after finding the library\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# dont search for parmetis without MPI\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# clear include search path\n\n# clear library search path\n",
        "Line" : 15,
        "CharPositionInLine" : 30
      },
      "CommentCount" : 3
    },
    "cmake/FindValgrind.cmake" : {
      "ObjectId" : "6217fb60ba54f020bf2db72d8a2b1d92a06d4384",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Sets:\n\n# valgrind_INCLUDE_DIR  = where valgrind.h can be found\n\n# CF_HAVE_VALGRIND      = set to true after finding the library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# guard for double inclusion\n",
        "Line" : 6,
        "CharPositionInLine" : 28
      },
      "2" : {
        "Text" : "# clear include search path\n\n# clear library search path\n",
        "Line" : 8,
        "CharPositionInLine" : 30
      },
      "CommentCount" : 3
    },
    "cmake/PrepareCPack.cmake" : {
      "ObjectId" : "f2585def8011056f8409fc76c995e3b0858bbd98",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# package instrucitons\n\n# if CPack is available and this is a build of just COOLFluiD\n\n# as opposed to a build of from an external project\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#       SET(CPACK_PACKAGE_DESCRIPTION_FILE \"${CMAKE_CURRENT_SOURCE_DIR}/Copyright.txt\")\n\n#       SET(CPACK_RESOURCE_FILE_LICENSE \"${CMAKE_CURRENT_SOURCE_DIR}/Copyright.txt\")\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#       SET(CPACK_PACKAGE_EXECUTABLES \"vtk\" \"VTK\" )\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/dashboard.cmake" : {
      "ObjectId" : "da6f13d340dbdfde51c2fd2eec0ba0ad29761626",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##########################################################################\n\n# General Settings\n\n################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# directories\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# number of cores to use\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# user and machine names \n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##########################################################################\n\n# Advanced Settings\n\n#\n\n# Requires that you know what you doing\n\n##########################################################################\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# dashboard model \n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# subdirs to put in\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# ctest config\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# miscellaneous helpers\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# miscellaneous locations/files\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# configure options\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# switches\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##########################################################################\n\n# Pre \n\n##########################################################################\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# start\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# enrich path\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# flags for coverage\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# very careful check with nbprocs because make -j without number is a guaranteed machine crash\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "##########################################################################\n\n# Checkout & initiate\n\n##########################################################################\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# since plugin checkout is hidden, checkout is going to be reported into framework\n\n# et this point ctestconfig.txt doesn't exist, so using execute_process to perform initial checkout\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#initiate\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "##########################################################################\n\n# Update\n\n##########################################################################\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# collect plugin directories into a list\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# update is all-in-one \n\n# this could be done per-plugin, but ctest_update doesn't like it\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "##########################################################################\n\n# Config\n\n##########################################################################\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# configure is all-in-one \n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# perform config\n",
        "Line" : 164,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# write project.xml\n",
        "Line" : 176,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "#file(APPEND \"${CTEST_BINARY_DIRECTORY}/Project.xml\" \"    <Dependency name=\\\"Framework\\\">\\n\")\n\n#file(APPEND \"${CTEST_BINARY_DIRECTORY}/Project.xml\" \"    </Dependency>\\n\")\n",
        "Line" : 184,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "##########################################################################\n\n# Build\n\n##########################################################################\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# compilation \n\n# this could be done per-plugin, if dependencies were known\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "##########################################################################\n\n# Run tests\n\n##########################################################################\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Framework's tests\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Testing plugins\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "##########################################################################\n\n# Coverage\n\n##########################################################################\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# coverage of framework\n",
        "Line" : 290,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# coverage of plugins\n",
        "Line" : 300,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "##########################################################################\n\n# Post \n\n##########################################################################\n",
        "Line" : 318,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 37
    },
    "cmake/macros/CFAddCompilationFlags.cmake" : {
      "ObjectId" : "35619d832ed20f8323ab87bab947e3f5a8d66b12",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# this macro separates the sources form the headers\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#  MESSAGE ( STATUS \"FLAG [${m_c_flags}] is [${C_FLAG_TEST_${N_CFLAG}}] \" )\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##############################################################################\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##############################################################################\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#  MESSAGE ( STATUS \"FLAG [${m_cxx_flags}] is [${CXX_FLAG_TEST_${N_CXXFLAG}}] \" )\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "##############################################################################\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "##############################################################################\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "##############################################################################\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "##############################################################################\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "cmake/macros/CFAddKernelLibrary.cmake" : {
      "ObjectId" : "7fbb27528b56317bc514bffb8b5ce0116579ee66",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# kernel library macro\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# declare this library as part of the kernel\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "##############################################################################\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/macros/CFAddLibrary.cmake" : {
      "ObjectId" : "6911b62a95bdd718cfb90e83ee49eb15212e990d",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# macro for adding a library in the project\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# option to build it or not\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# by default libraries are not part of the kernel\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# add the library to the list of kernel libs\n",
        "Line" : 13,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# and mark the option advanced\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# should we install these headers ?\n\n# default for kernel libs is to install\n\n# default for plugin libs is not to install\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# library is shared or static?\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# add to list of local libs\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#   CF_DEBUG_VAR(CF_MODULES_LIST)\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# check if all required modules are present\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#IF (CF_BUILD_${LIBNAME} AND ${LIBNAME}_all_mods_pres)\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "#SET ( CF_COMPILES_${LIBNAME} ${${LIBNAME}_will_compile} CACHE INTERNAL \"\" FORCE )\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# this proves that only libraries that come before in alphabetical order are checked !!! BUG !!!\n\n# message (WARNING \"COOLFluiD Library ${LIBNAME} will compile:  ${${LIBNAME}_will_compile}\" )\n",
        "Line" : 61,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# compile if selected and all required modules are present\n",
        "Line" : 66,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# add include dirs if defined\n",
        "Line" : 69,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# add installation paths\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# install headers for the libraries but\n\n# check if this library headers should be installed with the API\n",
        "Line" : 93,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# replace the current directory with target\n",
        "Line" : 96,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "# STRING ( REPLACE coolfluid/plugins coolfluid LIBNAME_INSTALL_HEADERS ${LIBNAME_INSTALL_HEADERS} )\n\n# STRING ( REPLACE coolfluid/extra   coolfluid LIBNAME_INSTALL_HEADERS ${LIBNAME_INSTALL_HEADERS} )\n",
        "Line" : 99,
        "CharPositionInLine" : 6
      },
      "19" : {
        "Text" : "# if mpi was found add it to the libraries\n",
        "Line" : 104,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "#           MESSAGE ( STATUS \"${APPNAME} links to ${MPI_LIBRARIES}\" )\n",
        "Line" : 106,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# add coolfluid internal dependency libraries if defined\n",
        "Line" : 110,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# MESSAGE ( STATUS \"${LIBNAME} has ${${LIBNAME}_cflibs}}\" )\n",
        "Line" : 113,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# add external dependency libraries if defined\n",
        "Line" : 118,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "#\tMESSAGE ( STATUS \"${LIBNAME} has ${${LIBNAME}_libs}}\" )\n",
        "Line" : 120,
        "CharPositionInLine" : 3
      },
      "25" : {
        "Text" : "# only add link in dso library if building shared libs\n",
        "Line" : 124,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# if not kernel lib and static is set \n\n# then this lib will be added to the list of kernel libs\n",
        "Line" : 145,
        "CharPositionInLine" : 3
      },
      "27" : {
        "Text" : "# log some info about the library\n",
        "Line" : 155,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "##############################################################################\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 29
    },
    "cmake/macros/CFAddPluginApp.cmake" : {
      "ObjectId" : "0a4214275029b83fd48d033e3f66b98a50a9ec11",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# macro for adding a application in the project\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# option to build it or not\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# add to list of local apps\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#   CF_DEBUG_VAR(CF_MODULES_LIST)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# check if all required modules are present\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# compile if selected and all required modules are present\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# add installation paths\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# if mpi was found add it to the libraries\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#           MESSAGE ( STATUS \"${APPNAME} links to ${MPI_LIBRARIES}\" )\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# add external dependency libraries if defined\n",
        "Line" : 65,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# internal dependencies\n",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# log some info about the app\n",
        "Line" : 83,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "##############################################################################\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "cmake/macros/CFAddPluginLibrary.cmake" : {
      "ObjectId" : "bc4a4aaab505d3350f023239b4e903990d0a3374",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# library plugin macro\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/macros/CFAddTest.cmake" : {
      "ObjectId" : "3915cb67d7bbabd10ed0540756066db1a7347c11",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Function to add a test.\n\n#\n\n# Mandatory keywords:\n\n# - UTEST/PTEST\n\n#      choose according to the test profile: unit-test, performance-test\n\n#      give as value the name of the test\n\n# - CPP\n\n#      lists the sources and headers\n\n#\n\n# Optional keywords:\n\n# - ARGUMENTS\n\n#      a list of arguments to pass to the the test execution (default empty)\n\n# - LIBS\n\n#      a list of required libraries for this test to build (default empty)\n\n# - MPI (default: mpirun is not called , unless global CMake constant makes all utests run with mpirun -np 1)\n\n#      number of processors to use for call with mpirun (it can be a list of numbers)\n\n#      the keyword \"default\" will take the global number CF_TESTING_NB_PROCS\n\n# - DEPENDS\n\n#      list of targets this test depends on (LIBS are automatically a dependency already)\n\n#\n\n# The two master switches turns the each type on and off\n\n#   - CF_ENABLE_UNIT_TESTS\n\n#   - CF_ENABLE_PERFORMANCE_TESTS\n\n#\n\n# After calling this function, the test is added to one of the following lists:\n\n#   - CF_ENABLED_UTESTS\n\n#   - CF_DISABLED_UTESTS\n\n#   - CF_ENABLED_PTESTS\n\n#   - CF_DISABLED_PTESTS\n\n# The following variables will be set:\n\n#   - ${TEST_TARGETNAME}_builds\n\n#   - ${TEST_TARGETNAME}_dir\n\n#   - ${TEST_TARGETNAME}_libs\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#MESSAGE(INFO,\"***TEST*************************************************************\")\n\n#MESSAGE(INFO,\"***TEST*** CF_ENABLE_UNIT_TESTS= ${CF_ENABLE_UNIT_TESTS}\")\n\n#MESSAGE(INFO,\"***TEST*** CF_ENABLE_PERFORMANCE_TESTS= ${CF_ENABLE_PERFORMANCE_TESTS}\")\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# parse and complain if stg wrong with the arguments\n",
        "Line" : 45,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# select unit/acceptance/performance tests\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#MESSAGE(INFO,\"***TEST*** _TEST_NAME= ${_TEST_NAME}\")\n\n#MESSAGE(INFO,\"***TEST*** _TEST_ENABLED= ${_TEST_ENABLED}\")\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# option to build it or not (option is advanced and does not appear in the cmake gui)\n",
        "Line" : 73,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# check if test will build\n",
        "Line" : 77,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# select mpi stuff\n",
        "Line" : 86,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#MESSAGE(INFO,\"***TEST*** _TEST_BUILDS= ${_TEST_BUILDS}\")\n\n#MESSAGE(INFO,\"***TEST*** Boost_UNIT_TEST_FRAMEWORK_LIBRARY= ${Boost_UNIT_TEST_FRAMEWORK_LIBRARY}\")\n\n#MESSAGE(INFO,\"***TEST*** Boost_UNIT_TEST_FRAMEWORK_FOUND= ${Boost_UNIT_TEST_FRAMEWORK_FOUND}\")\n\n#MESSAGE(INFO,\"***TEST*** CF_HAVE_MPI= ${CF_HAVE_MPI}\")\n\n#MESSAGE(INFO,\"***TEST*** MPI_LIBRARIES= ${MPI_LIBRARIES}\")\n\n#MESSAGE(INFO,\"***TEST*** BOOSTUNITTEST_LIBRARY= ${BOOSTUNITTEST_LIBRARY}\")\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# prepare\n",
        "Line" : 102,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# manual hacking includes\n",
        "Line" : 106,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# separate exec\n",
        "Line" : 111,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# targets it depending on\n",
        "Line" : 114,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# add dependency libraries if defined, proper way to do\n",
        "Line" : 120,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# add dependency libraries if defined, not so nice way\n",
        "Line" : 125,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# if mpi was found add it to the libraries\n",
        "Line" : 130,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# add boost unit test lib\n",
        "Line" : 136,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# prepare test\n",
        "Line" : 140,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# if installing\n",
        "Line" : 155,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Set global variables\n",
        "Line" : 163,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Log summary\n",
        "Line" : 175,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "#  MESSAGE(INFO \"${_TEST_TARGETNAME}\")\n\n#  MESSAGE(INFO \"    build requested     : [${CF_BUILD_${_TEST_TARGETNAME}}]\")\n\n#  MESSAGE(INFO \"    builds              : [${${_TEST_TARGETNAME}_builds}]\")\n\n#  MESSAGE(INFO \"    sources             : [${_PAR_CPP}]\")\n\n#  MESSAGE(INFO \"    test dir            : [${_TEST_DIR}]\")\n\n#  MESSAGE(INFO \"    mpirun              : [${CF_MPIRUN_PROGRAM}]\")\n\n#  MESSAGE(INFO \"    mpi nb_proc         : [${_PAR_MPI}]\")\n\n#  MESSAGE(INFO \"    libs                : [${${_TEST_TARGETNAME}_libs}]\")\n\n#  MESSAGE(INFO \"    target type         : [${${_TEST_TARGETNAME}_TYPE}]\")\n\n#  MESSAGE(INFO \"    target sources      : [${${_TEST_TARGETNAME}_P_SOURCES}]\")\n\n#  MESSAGE(INFO \"    target link flags   : [${${_TEST_TARGETNAME}_LINK_FLAGS}]\")\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Add test to either CF_ENABLED_UTESTS  / CF_ENABLED_ATESTS\n\n#                 or CF_DISABLED_UTESTS / CF_DISABLED_ATESTS\n",
        "Line" : 188,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "#MESSAGE(FATAL_ERROR \"BASTA\")\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##############################################################################\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "cmake/macros/CFAddTestCase.cmake" : {
      "ObjectId" : "9c7598784ca587d9def30b61ad448a92669cee80",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Function to add a test.\n\n#\n\n# Mandatory keywords:\n\n# - UCASE/PCASE\n\n#      choose according to the test profile: unit-test, performance-test\n\n#      give as value the relative_to_source dir/name of the CFcase\n\n#\n\n# Optional keywords:\n\n# - ARGUMENTS\n\n#      a list of arguments to pass to the the test execution (default empty)\n\n# - MPI (default: if HAVE_MPI then runs the case on default number of processors)\n\n#      number of processors to use for call with mpirun (it can be a list of numbers)\n\n#      the keyword \"default\" will take the global number CF_TESTING_NB_PROCS\n\n#\n\n# The two master switches turns each type on and off\n\n#   - CF_ENABLE_UNIT_CASES\n\n#   - CF_ENABLE_PERFORMANCE_CASES\n\n#\n\n# After calling this function, the test is added to one of the following lists:\n\n#   - CF_ENABLED_UCASES\n\n#   - CF_DISABLED_UCASES\n\n#   - CF_ENABLED_PCASES\n\n#   - CF_DISABLED_PCASES\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#MESSAGE(INFO,\"***CASE*************************************************************\")\n\n#MESSAGE(INFO,\"***CASE*** CF_ENABLE_UNIT_CASES= ${CF_ENABLE_UNIT_CASES}\")\n\n#MESSAGE(INFO,\"***CASE*** CF_ENABLE_PERFORMANCE_CASES= ${CF_ENABLE_PERFORMANCE_CASES}\")\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#  set( multi_value_args  MPI)\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#MESSAGE(INFO,\"***CASE*** CF_ENABLE_PERFORMANCE_CASES= ${CF_ENABLE_PERFORMANCE_CASES}\")\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# parse and complain if stg wrong with the arguments\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# create testcase folder  \n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# copy all needed files into the testcase folder   \n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# select unit/acceptance/performance tests, removing extension if present\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# enrich test name with path\n",
        "Line" : 78,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#MESSAGE(INFO,\"***CASE*** _TEST_NAME= ${_TEST_NAME}\")\n\n#MESSAGE(INFO,\"***CASE*** _TEST_CFCASE= ${_TEST_CFCASE}\")\n\n#MESSAGE(INFO,\"***CASE*** _TEST_TARGETNAME= ${_TEST_TARGETNAME}\")\n\n#MESSAGE(INFO,\"***CASE*** _CMAKE_CURRENT_SOURCE_DIR= ${CMAKE_CURRENT_SOURCE_DIR}\")\n\n#MESSAGE(INFO,\"***CASE*** _CMAKE_SOURCE_DIR= ${CMAKE_SOURCE_DIR}\")\n\n#MESSAGE(INFO,\"***CASE*** _TEST_ENABLED= ${_TEST_ENABLED}\")\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# option to build it or not (option is advanced and does not appear in the cmake gui)\n",
        "Line" : 96,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# check if test will build\n",
        "Line" : 100,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# select mpi stuff\n",
        "Line" : 109,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# build the testing command\n",
        "Line" : 118,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# read the file and chew it into a nice formatting\n",
        "Line" : 122,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# semicolons are the dividers between list items\n",
        "Line" : 124,
        "CharPositionInLine" : 79
      },
      "16" : {
        "Text" : "# multiline text broken by backslash\n",
        "Line" : 125,
        "CharPositionInLine" : 71
      },
      "17" : {
        "Text" : "# clearing whitespaces at the end of line\n",
        "Line" : 126,
        "CharPositionInLine" : 75
      },
      "18" : {
        "Text" : "# previous skips possible whitespaces in first line\n",
        "Line" : 127,
        "CharPositionInLine" : 63
      },
      "19" : {
        "Text" : "# everywhere always exactly one whitespace, plus clearing in front of = sign\n",
        "Line" : 128,
        "CharPositionInLine" : 78
      },
      "20" : {
        "Text" : "# preparing the list containing the blocks, \n\n# the keyword is #!<space>KEYWORD, rest of the line must be ignored (until first newline)\n\n# replace back any __REPLACED_SEMICOLON__ symbols at the end\n",
        "Line" : 129,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# replacing terminating #! to ; (this turns it into a list)\n",
        "Line" : 132,
        "CharPositionInLine" : 64
      },
      "22" : {
        "Text" : "# keeping !# ... ; enclosures\n",
        "Line" : 133,
        "CharPositionInLine" : 77
      },
      "23" : {
        "Text" : "# further formatting\n",
        "Line" : 134,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# removing blocks\n",
        "Line" : 136,
        "CharPositionInLine" : 66
      },
      "25" : {
        "Text" : "# now each line is an item in the list\n",
        "Line" : 138,
        "CharPositionInLine" : 60
      },
      "26" : {
        "Text" : "# exporting lines having ###, first wor is key, \n\n# equation sign is attached (if present)\n",
        "Line" : 139,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# now each line is an item in the list\n",
        "Line" : 141,
        "CharPositionInLine" : 76
      },
      "28" : {
        "Text" : "# now each line is an item in the list\n",
        "Line" : 142,
        "CharPositionInLine" : 83
      },
      "29" : {
        "Text" : "# pure cfcase options\n",
        "Line" : 143,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# clear everything in a line after any hash, including the hash\n",
        "Line" : 144,
        "CharPositionInLine" : 81
      },
      "31" : {
        "Text" : "# just for convenience, then one can split by space\n",
        "Line" : 145,
        "CharPositionInLine" : 79
      },
      "32" : {
        "Text" : "# process pragmas\n",
        "Line" : 147,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "# Residual check\n",
        "Line" : 150,
        "CharPositionInLine" : 6
      },
      "34" : {
        "Text" : "#MESSAGE(INFO \"***CASE*** RESIDUAL=${CFtargetResidual}\")\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# process cfoptions\n",
        "Line" : 164,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# extract working directory\n",
        "Line" : 167,
        "CharPositionInLine" : 6
      },
      "37" : {
        "Text" : "# extract libraries and check if compiled\n",
        "Line" : 177,
        "CharPositionInLine" : 6
      },
      "38" : {
        "Text" : "#message (WARNING \"Testing library message ${ilibname}\"  ) \n",
        "Line" : 184,
        "CharPositionInLine" : 9
      },
      "39" : {
        "Text" : "# process blocks like latex description or file list\n\n#foreach(iblock ${blockcontents})\n\n#endforeach(iblock ${blockcontents})\n",
        "Line" : 197,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "#MESSAGE(INFO \"***CASE*** WORKDIR=|${CFtestWorkdir}|\")\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# additional options\n\n# tolerance is set to \"0.1%\"\n",
        "Line" : 203,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "#MESSAGE(\"TESTCOMMAND  ${_TEST_COMMAND}\")\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# prepare\n",
        "Line" : 213,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# time to copy the CFcase to binary tree\n",
        "Line" : 216,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "# prepare test\n",
        "Line" : 219,
        "CharPositionInLine" : 4
      },
      "46" : {
        "Text" : "#add_test(NAME ${_TEST_TARGETNAME}_dprocs WORKING_DIRECTORY ${_TEST_WDIR} COMMAND ${CF_MPIRUN_PROGRAM} -np ${CF_TESTING_NB_PROCS} ${_TEST_COMMAND})\n",
        "Line" : 224,
        "CharPositionInLine" : 10
      },
      "47" : {
        "Text" : "#add_test(NAME ${_TEST_TARGETNAME}_${nprocs}procs WORKING_DIRECTORY ${_TEST_WDIR} COMMAND ${CF_MPIRUN_PROGRAM} -np ${nprocs} ${_TEST_COMMAND})\n",
        "Line" : 227,
        "CharPositionInLine" : 10
      },
      "48" : {
        "Text" : "#add_test(NAME   ${_TEST_TARGETNAME}_serial WORKING_DIRECTORY ${_TEST_WDIR} COMMAND ${_TEST_COMMAND})\n",
        "Line" : 232,
        "CharPositionInLine" : 6
      },
      "49" : {
        "Text" : "# if installing\n",
        "Line" : 237,
        "CharPositionInLine" : 2
      },
      "50" : {
        "Text" : "# Add test to either CF_ENABLED_UCASES  / CF_ENABLED_PCASES\n\n#                 or CF_DISABLED_UCASES / CF_DISABLED_PCASES\n",
        "Line" : 242,
        "CharPositionInLine" : 2
      },
      "51" : {
        "Text" : "##############################################################################\n",
        "Line" : 260,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 52
    },
    "cmake/macros/CFBoolTo01.cmake" : {
      "ObjectId" : "893e3dc35ca8c47bd7744624c9732ef8eb249970",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# sets all the given variables either to 0 or 1\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/macros/CFCheckFileLength.cmake" : {
      "ObjectId" : "b4ed0951339b0abdc47d923b980e4f7264446d42",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# this macro separates the sources form the headers\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/macros/CFDumpVariables.cmake" : {
      "ObjectId" : "ad21383fd79c74380fb1305d80a5986b8504d636",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# dumps list of relevant cmake variables to the log file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# if you are building in-source, this is the same as CMAKE_SOURCE_DIR, otherwise\n\n# this is the top level directory of your build tree\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# if you are building in-source, this is the same as CMAKE_CURRENT_SOURCE_DIR, otherwise this\n\n# is the directory where the compiled or generated files from the current CMakeLists.txt will go to\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# this is the directory, from which cmake was started, i.e. the top level source directory\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# this is the directory where the currently processed CMakeLists.txt is located in\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# contains the full path to the top level directory of your build tree\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# contains the full path to the root of your project source directory,\n\n# i.e. to the nearest directory where CMakeLists.txt contains the PROJECT() command\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# set this variable to specify a common place where CMake should put all executable files\n\n# (instead of CMAKE_CURRENT_BINARY_DIR)\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# set this variable to specify a common place where CMake should put all libraries\n\n# (instead of CMAKE_CURRENT_BINARY_DIR)\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# tell CMake to search first in directories listed in CMAKE_MODULE_PATH\n\n# when you use FIND_PACKAGE() or INCLUDE()\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# this is the complete path of the cmake which runs currently (e.g. /usr/local/bin/cmake)\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# this is the CMake installation directory\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# this is the filename including the complete path of the file where this variable is used.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# this is linenumber where the variable is used\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# this is used when searching for include files e.g. using the FIND_PATH() command.\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# this is used when searching for libraries e.g. using the FIND_LIBRARY() command.\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# the complete system name, e.g. \"Linux-2.4.22\", \"FreeBSD-5.4-RELEASE\" or \"Windows 5.1\"\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# the short system name, e.g. \"Linux\", \"FreeBSD\" or \"Windows\"\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# only the version part of CMAKE_SYSTEM\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# the processor name e.g. \"Intel(R) Pentium(R) M processor 2.00GHz\"\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# is TRUE on all UNIX-like OS's, including Apple OS X and CygWin\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# is TRUE on Windows, including CygWin\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# is TRUE on Apple OS X\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# is TRUE when using the MinGW compiler in Windows\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# is TRUE on Windows when using the CygWin version of cmake\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# is TRUE on Windows when using a Borland compiler\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Microsoft compiler\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# set this to true if you don't want to rebuild the object files if the rules have changed,\n\n# but not the actual source files or headers (e.g. if you changed the some compiler switches)\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# since CMake 2.1 the install rule depends on all, i.e. everything will be built before installing.\n\n# If you don't like this, set this one to true.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# If set, runtime paths are not added when using shared libraries. Default it is set to OFF\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# set this to true if you are using makefiles and want to see the full compile and link\n\n# commands instead of only the shortened ones\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# this will cause CMake to not put in the rules that re-run CMake. This might be useful if\n\n# you want to use the generated build files on another machine.\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# A simple way to get switches to the compiler is to use ADD_DEFINITIONS().\n\n# But there are also two variables exactly for this purpose:\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# the compiler flags for compiling C sources\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# the compiler flags for compiling C++ sources\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Choose the type of build.  Example: SET(CMAKE_BUILD_TYPE Debug)\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# if this is set to ON, then all libraries are built as shared libraries by default.\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# the compiler used for C files\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# the compiler used for C++ files\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# if the compiler is a variant of gcc, this should be set to 1\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# if the compiler is a variant of g++, this should be set to 1\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# the tools for creating libraries\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 42
    },
    "cmake/macros/CFListOperations.cmake" : {
      "ObjectId" : "958763043bb057bb520cfd4ffa429b1f69ca8386",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# this macro adds to a cached list if element not yet present\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##############################################################################\n\n# this macro adds to a cached list if element not yet present\n\n##############################################################################\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##############################################################################",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/macros/CFLogToFile.cmake" : {
      "ObjectId" : "bfc3e0305690a372ff1712c656b6ab1443a52925",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# this macro logs simultaneously to screen and to file\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# this macro logs just to file\n\n##############################################################################\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##############################################################################\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##############################################################################\n\n# this macro logs to screen if we are verbose\n\n##############################################################################\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##############################################################################\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/macros/CFOptionAddSubdirectory.cmake" : {
      "ObjectId" : "8114bdde4133bc9d7a7a81557c93eff773a1efd0",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# only adds the subdirectory if it is present\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# IS_DIRECTORY works with full paths\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "##############################################################################\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/macros/CFSearchPaths.cmake" : {
      "ObjectId" : "c42f71f204a246d1159dbcb26d72f2af2af60870",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# adds a path to search for when searching for include files\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##############################################################################\n\n# adds a path to search for when searching for library files\n\n##############################################################################\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##############################################################################\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##############################################################################\n\n# sets a path to search for when searching for INCLUDE files\n\n##############################################################################\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "##############################################################################\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "##############################################################################\n\n# sets a path to search for when searching for library files\n\n##############################################################################\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "##############################################################################",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cmake/macros/CFSeparateSources.cmake" : {
      "ObjectId" : "65e055934b42d7cabe69686e8f5e71acff52530e",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# this macro separates the sources form the headers\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# check for existance of all declared files\n",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# check that file lenght is not too big\n",
        "Line" : 11,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# separate headers and sources\n",
        "Line" : 14,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "##############################################################################\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/macros/CFSetUnion.cmake" : {
      "ObjectId" : "923145fdfcd396caa120af94c3aced0915a5f106",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# This will add arguments not found in ${parameter} to the end.  It\n\n# does not attempt to remove duplicate arguments already existing in\n\n# ${parameter}.\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create a separated list of the arguments to loop over\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Make a copy of the current arguments in ${parameter}\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Now loop over each required argument and see if it is in our\n\n# current list of arguments.\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# This helps when we get arguments to the function that are\n\n# grouped as a string:\n\n#\n\n# [\"-O3 -g\"]  instead of [-O3 -g]\n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#elsewise the Seperate command doesn't work)\n",
        "Line" : 19,
        "CharPositionInLine" : 29
      },
      "6" : {
        "Text" : "# Look for the required argument in our list of existing arguments\n",
        "Line" : 22,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# The required argument wasn't found, so we need to add it in.\n",
        "Line" : 30,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "##############################################################################\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "cmake/macros/CFVariables.cmake" : {
      "ObjectId" : "e6c3595a8d34e4814395e823160c2672fb0f3cd8",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# prints the variable name and value\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# sets a variable if not yet defined\n\n##############################################################################\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/macros/CFWarnOrphanFiles.cmake" : {
      "ObjectId" : "03d81c75a063b0aff573b5d5d6896010b58e357c",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# macro for warning about missing files in the listing of files\n\n# usefull for headers  that are forgotten and give errors compiling\n\n# from installed sources.\n\n# it warns about files that are present in the directory but are neither\n\n# in the headers or the sources of all the libraries and applications\n\n# defined in this directory\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# first find all the files in the directory\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#     CF_DEBUG_VAR(NELEMS)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# remove all found files from orphan list to avoid duplicates\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# remove files present in optional list\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# remove files present in libs\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# remove files present in apps\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# remove files present in tests\n",
        "Line" : 45,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# warn about the other files\n",
        "Line" : 52,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# temporarily ignore Test files while the unit tests are not added\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "##############################################################################\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "config/CMakeLists.txt" : {
      "ObjectId" : "da71ec644ff559ecfc5577802b394d964de24131",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# file for general configuration for the whole framework\n\n#\n\n# config options that affect all the framework libraries and components\n\n# must be handled in this directory\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# explicit template support\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#coolfluid_config.h\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# create the header with the svn version\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "config/sysinfo/CMakeLists.txt" : {
      "ObjectId" : "dab2cf5031b3ee8c95062fee649270756e96430a",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# recreate the file\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "doc/CMakeLists.txt" : {
      "ObjectId" : "6ee38c4f8c6661e55fab2ea663705d65595c9923",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# click+jump in Emacs and Visual Studio (for ${DOXYFILE}) (jw)\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# we need latex for doxygen because of the formulas\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# use (configured) ${DOXYFILE} from (out of place) BUILD tree:\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# use static hand-edited ${DOXYFILE} from SOURCE tree:\n",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# using template ${DOXYFILE}.in\n",
        "Line" : 42,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# failed completely...\n",
        "Line" : 49,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# create a windows help .chm file using hhc.exe\n\n# HTMLHelp DLL must be in path!\n\n# fallback: use hhw.exe interactively\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# MESSAGE(SEND_ERROR \"DBG  HHP_FILE=${HHP_FILE}\")\n",
        "Line" : 66,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# install windows help?\n\n# determine useful name for output file \n\n# should be project and version unique to allow installing \n\n# multiple projects into one global directory      \n",
        "Line" : 71,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# default\n",
        "Line" : 79,
        "CharPositionInLine" : 35
      },
      "10" : {
        "Text" : "# keep suffix\n",
        "Line" : 90,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "#MESSAGE(\"DBG ${PROJECT_BINARY_DIR}/Doc/html/index.chm \\n${OUT}\")\n\n# create target used by install and package commands \n",
        "Line" : 93,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# MESSAGE(SEND_ERROR \"HTML_HELP_COMPILER=${HTML_HELP_COMPILER}\")\n",
        "Line" : 103,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 13
    },
    "plugins/ATDModel/CMakeLists.txt" : {
      "ObjectId" : "709efa904dfe7a27eed8621ac39550edfbe52d00",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/AeroCoef/CMakeLists.txt" : {
      "ObjectId" : "334f380d4f7d57778ff83e7dde7a1f67028d8037",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##################################################################\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##################################################################\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##################################################################\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##################################################################\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "##################################################################\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "##################################################################\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "##################################################################\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##################################################################\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "##################################################################\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "plugins/AnalyticalEE/CMakeLists.txt" : {
      "ObjectId" : "446d42ef90556c92af747788321ae7c8f781c3ce",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/AnalyticalModel/CMakeLists.txt" : {
      "ObjectId" : "24c7c2662fd9684a77390f8bd85c9d13d64257dc",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/ArcJet/CMakeLists.txt" : {
      "ObjectId" : "66a0a84706b64361962c3e5397a167d5d6b8616f",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ADD_SUBDIRECTORY ( testcases )\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/AutoTemplateLoader/CMakeLists.txt" : {
      "ObjectId" : "339db131289fb2aab4a8b57569d2de289b90851a",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# needs libtool to load the libs\n",
        "Line" : 1,
        "CharPositionInLine" : 23
      },
      "1" : {
        "Text" : "# these files do not produce orphan warnings\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "plugins/AutoTemplateLoader/FindBlitz.cmake" : {
      "ObjectId" : "5a4a5fc121ea43150abf696d89d3bd15b919da9f",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Sets:\n\n#   BLITZ_INCLUDE_DIR  = where blitz/array.h can be found\n\n#   CF_HAVE_BLITZ      = set to true after finding the library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/AutoTemplateLoader/FindFlens.cmake" : {
      "ObjectId" : "efd9a81827c271e376f373a633aa4f0550ab5d78",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Sets:\n\n#   FLENS_INCLUDE_DIR  = where TestFixture.h can be found\n\n#   FLENS_LIBRARY      = the library to link against (flens etc)\n\n#   CF_HAVE_FLENS        = set to true after finding the library\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/AutoTemplateLoader/FindTVMET.cmake" : {
      "ObjectId" : "728a00d5bafe41ef3563e87dc55237ac66024d8e",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Sets:\n\n#   TVMET_INCLUDE_DIR  = where tvmet/Vector.h can be found\n\n#   CF_HAVE_TVMET      = set to true after finding the library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/BackwardEuler/CMakeLists.txt" : {
      "ObjectId" : "5ab4cb108eaff84368ae8ba72ccbbc512a93b87a",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##################################################################\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##################################################################\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/Burgers/CMakeLists.txt" : {
      "ObjectId" : "8cfaab7bc2f1d2341206bf5b7909e7cba4a7075b",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/Burgers/testcases/CMakeLists.txt" : {
      "ObjectId" : "519a1f1d74c3cc90715518bd9a39fcfa8da6f32b",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/CFmeshCellSplitter/CMakeLists.txt" : {
      "ObjectId" : "afe2b8e739ca6f22ffaa6898ddbddac48e2eb728",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/CFmeshExtruder/CMakeLists.txt" : {
      "ObjectId" : "51668d829b839d7893d8777c6a2ec795163847c4",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/CFmeshFileReader/CMakeLists.txt" : {
      "ObjectId" : "36677b1c3385df3d39e34d9554b60c1cd62afbde",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# Option on MPI\n\n##############################################################################\n\n# TODO: this dependency on MPI should somehow be removed\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/CFmeshFileWriter/CMakeLists.txt" : {
      "ObjectId" : "81fb1122c3f3f1cf81bf73ec74145a9d644c6d94",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/CGNS2CFmesh/CMakeLists.txt" : {
      "ObjectId" : "cb437ba33a5b3efec14d08461e461b2d6d196d2b",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/CGNS2CFmesh/FindCGNS.cmake" : {
      "ObjectId" : "073800d6a22651b1ed8e8ec1add749ede4a6c24d",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# this module looks for CGNS library\n\n# it will define the following values\n\n#\n\n# Needs environmental variables\n\n#   CGNS_HOME\n\n# Sets\n\n#   CGNS_INCLUDE_DIR\n\n#   CGNS_LIBRARY\n\n#   CF_HAVE_CGNS\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# clear include search path\n\n# clear library search path\n",
        "Line" : 12,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 2
    },
    "plugins/CMakeLists.txt" : {
      "ObjectId" : "d5781ca879edd8ab9c659e6dbf9e12bd5af54b7c",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# find modules\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CF_DEBUG_VAR(Subversion_FOUND)\n\n# CF_DEBUG_VAR(CF_ENABLE_AUTOMATIC_UPDATE_MODULES)\n\n# CF_DEBUG_VAR(COOLFluiD_WC_REVISION)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in case cmake should use subversion to update to correct version\n\n# typically from the CTest automatic testing procedure\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#     MESSAGE ( \"SVN output: ${svn_update_output}\" )\n\n#     MESSAGE ( \"SVN errors: ${svn_update_error}\"  )\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# include all plugin configuration\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# include modules directories\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "plugins/Catalycity/CMakeLists.txt" : {
      "ObjectId" : "9d004e3519c7b31213a4fa4c1ddeace068924bb6",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/Chemistry/CH4/CMakeLists.txt" : {
      "ObjectId" : "ddbf51a28dfb2278ee48e76869101d9e3859f8d9",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/Chemistry/CMakeLists.txt" : {
      "ObjectId" : "b10fb551983015132e822d3f5e56e63203348b67",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ADD_SUBDIRECTORY ( testcases )\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/Chemistry/testcases/CMakeLists.txt" : {
      "ObjectId" : "277f14622dd656ab33dcfe48ebe3dfbcc90f89b0",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/ConcurrentCoupler/CMakeLists.txt" : {
      "ObjectId" : "636bb8171f4a323c2f1e53abc57ebb2fc5d4b915",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ADD_SUBDIRECTORY ( testcases )\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/ConvertStructMesh/CMakeLists.txt" : {
      "ObjectId" : "9ac0d737ee3ba2a892a1eba82d3a0fc41707a5bd",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/DiscontGalerkin/CMakeLists.txt" : {
      "ObjectId" : "573dc81e553adf48cf3f0156e806508c17b4206c",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/Dpl2CFmesh/CMakeLists.txt" : {
      "ObjectId" : "189cac1fedae1c975c1bf9f51d53ac190586b9b1",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/EmptyConvergenceMethod/CMakeLists.txt" : {
      "ObjectId" : "11cd509ffe9a3e08ddc1c93aa95c06143cfa1319",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/EmptySpaceMethod/CMakeLists.txt" : {
      "ObjectId" : "af04909cd3f92c0dc1568c6238807808341116d2",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/ExplicitFilters/CMakeLists.txt" : {
      "ObjectId" : "984b6b1ae7d9335c421c6341c192bd0ae50e1789",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#cf_add_test( MPI 1 PCASE jets2DFVM.CFcase)\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/FAST2CFmesh/CMakeLists.txt" : {
      "ObjectId" : "aba85c3fce58ee088aec80692234a3c4e0a53950",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/FiniteElement/CMakeLists.txt" : {
      "ObjectId" : "5edc620e9634abb1e6be36106f5dcc87367a3dff",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########################################################################\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "########################################################################\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "########################################################################\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "########################################################################\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "plugins/FiniteVolume/CMakeLists.txt" : {
      "ObjectId" : "b25b3cc47ea2cb9c898c90d258ebaee954ebcf13",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ConstantPolyRecLin.cxx\n\n#ConstantPolyRecLin.hh\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#FVMCC_ComputeRhsJacobConv.hh\n\n#FVMCC_ComputeRhsJacobConv.cxx\n\n#FVMCC_ComputeRhsJacobDiag.hh\n\n#FVMCC_ComputeRhsJacobDiag.cxx\n\n#FVMCC_ComputeRhsJacobDiagFast.hh\n\n#FVMCC_ComputeRhsJacobDiagFast.cxx\n\n#FVMCC_ComputeRhsJacobDiagSimple.hh\n\n#FVMCC_ComputeRhsJacobDiagSimple.cxx\n\n#FVMCC_ComputeRhsJacobDiagFull.hh\n\n#FVMCC_ComputeRhsJacobDiagFull.cxx\n\n#FVMCC_ComputeRhsJacobFastCoupling.cxx\n\n#FVMCC_ComputeRhsJacobFastCoupling.hh\n\n#FVMCC_ComputeRhsJacobBlockDiag.cxx\n\n#FVMCC_ComputeRhsJacobBlockDiag.hh\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#FVMCC_ComputeRhsJacobFastSingleSys.cxx\n\n#FVMCC_ComputeRhsJacobFastSingleSys.hh\n\n#FVMCC_ComputeRhsJacob_Linearized.cxx\n\n#FVMCC_ComputeRhsJacob_Linearized.hh\n\n#FVMCC_ComputeRhsJacobSingleSys.cxx\n\n#FVMCC_ComputeRhsJacobSingleSys.hh\n\n#FVMCC_ComputeRhsJacobTridiag.hh\n\n#FVMCC_ComputeRhsJacobTridiag.cxx\n\n#FVMCC_ComputeRhsJacobTriGM.hh\n\n#FVMCC_ComputeRhsJacobTriGM.cxx\n\n#FVMCC_ComputeRhsJacobDiff.hh\n\n#FVMCC_ComputeRhsJacobDiff.cxx\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#FVMCC_PolyRecLin.cxx\n\n#FVMCC_PolyRecLin.hh\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#LaxFriedFlux.cxx\n\n#LaxFriedFlux.hh\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#LeastSquareP1PolyRec2DLin.cxx\n\n#LeastSquareP1PolyRec2DLin.hh\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#PolyReconstructorLin.cxx\n\n#PolyReconstructorLin.hh\n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#RoeFluxLin.cxx\n\n#RoeFluxLin.hh\n\n#RoeFluxLinALE.cxx\n\n#RoeFluxLinALE.hh\n",
        "Line" : 294,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "plugins/FiniteVolumeArcJet/CMakeLists.txt" : {
      "ObjectId" : "8b24343642eb4534110af494ceb2a7409674ecaa",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/FiniteVolumeCUDA/CMakeLists.txt" : {
      "ObjectId" : "879bb91bd6233e48b5f31eefc9fcb6ed9a9b1384",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# StencilCUDASetup.cxx or some other DUMMY file is \n\n# needed in order to properly link this module\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/FiniteVolumeCombustion/CMakeLists.txt" : {
      "ObjectId" : "7ccaffe703db48e73a2f206514f4855d37f4675c",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/FiniteVolumeGReKO/CMakeLists.txt" : {
      "ObjectId" : "79a49e4bbe14c8acb2f098f21f89faa7d2c8cc00",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#NavierStokesGReKO2DSourceTerm.cxx\n\n#NavierStokesGReKO2DSourceTerm_NL.cxx\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#NavierStokesGReKO2DSourceTerm_ZH.cxx\n\n#NavierStokesGReKO2DSourceTerm.hh\n\n#NavierStokesGReKO2DSourceTerm_NL.hh\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#NavierStokesGReKO2DSourceTerm_ZH.hh\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#SubInletNSGReKO2DTtPtAlpha.cxx\n\n#SubInletNSGReKO2DTtPtAlpha.hh\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "plugins/FiniteVolumeICP/CMakeLists.txt" : {
      "ObjectId" : "b85b14d4ab7f7ac0a5de7cc29118ffc3325d8b27",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/FiniteVolumeLES/CMakeLists.txt" : {
      "ObjectId" : "d11bf034df62931c5eb29cc7c22779d8085bed66",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/FiniteVolumeMHD/CMakeLists.txt" : {
      "ObjectId" : "95762cc4af687283889e9d2e8b91ef10e710f567",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/FiniteVolumeMaxwell/CMakeLists.txt" : {
      "ObjectId" : "6e05ba9f1a52fdad3c54e6e2239165a91b1fafe4",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#NoSlipWall2DProjectionDim.cxx\n\n#NoSlipWall2DProjectionDim.hh\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#PerfectElectricalIsolatedWall2DProjectionDim.cxx\n\n#PerfectElectricalIsolatedWall2DProjectionDim.hh\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/FiniteVolumeMultiFluidMHD/CMakeLists.txt" : {
      "ObjectId" : "4158f41b2f3805afba11ce1a39ed34973ee4588a",
      "LastModified" : "2019-03-20T13:12:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# to be removed after testing\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#UnsteadySubInletYUVTEIWRhoiViTi.cxx\n\n#UnsteadySubInletYUVTEIWRhoiViTi.hh\n\n#SubOutletPPCWRhoiViTi3D.cxx\n\n#SubOutletPPCWRhoiViTi3D.hh\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/FiniteVolumeNEQ/CMakeLists.txt" : {
      "ObjectId" : "386bd8ab75da42850b041752d37ff475eeb5bf30",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#NoSlipWallIsothermalNSrvtCat_old.hh\n\n#NoSlipWallIsothermalNSrvtCat_old.cxx\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/FiniteVolumeNavierStokes/CMakeLists.txt" : {
      "ObjectId" : "e447e0aadf34441dd36c90dea2630d33c66cafbb",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# Option on MPI\n\n##############################################################################\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##############################################################################\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "plugins/FiniteVolumePoisson/CMakeLists.txt" : {
      "ObjectId" : "6dac079b073ee53542773990e5631534038901b9",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/FiniteVolumeTU/CMakeLists.txt" : {
      "ObjectId" : "846d36c1031fc307d331c6cf23e2fc6f82efa130",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/FiniteVolumeTurb/CMakeLists.txt" : {
      "ObjectId" : "38243d34e1e878d40399757bddcd412f95e4b7d0",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/FluctSplit/CMakeLists.txt" : {
      "ObjectId" : "580e37b52d873462683e5867169cc205c0f7453e",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#############################################################################\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#DiffTermCarbuncleFixEuler2.hh\n\n#DiffTermCarbuncleFixEuler2.ci\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#FluctSplit files\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#############################################################################\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# LIST ( APPEND FluctSplitAdvectionDiffusion_files\n\n# FluctSplitAdvectionDiffusion.hh\n\n# ScalarDiffusionTerm.hh\n\n# ScalarDiffusionTerm.cxx\n\n# ScalarDiffusionTermHO.hh\n\n# ScalarDiffusionTermHO.cxx\n\n# ScalarLinearadv2DSourceTerm.hh\n\n# ScalarLinearadv2DSourceTerm.cxx\n\n# ScalarLinearadv2DSourceTermHO.hh\n\n# ScalarLinearadv2DSourceTermHO.cxx\n\n# ScalarUnsteady2DSourceTerm.cxx\n\n# ScalarUnsteady2DSourceTerm.hh\n\n# ScalarUnsteady2DSourceTerm2.cxx\n\n# ScalarUnsteady2DSourceTerm2.hh\n\n# ScalarUnsteady2DSourceTermHO.cxx\n\n# ScalarUnsteady2DSourceTermHO.hh\n\n# UnsteadScalarDiffusionTerm.cxx\n\n# UnsteadScalarDiffusionTerm.hh\n\n# LinearAdvDiffHO3D.hh\n\n# LinearAdvDiffHO3D.cxx\n\n# )\n\n# \n\n# LIST ( APPEND FluctSplitAdvectionDiffusion_requires_mods LinearAdv )\n\n# LIST ( APPEND FluctSplitAdvectionDiffusion_cflibs LinearAdv FluctSplit )\n\n# \n\n# CF_ADD_PLUGIN_LIBRARY ( FluctSplitAdvectionDiffusion )\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#############################################################################\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#############################################################################\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#VorticitySetup.cxx\n\n#VorticitySetup.hh\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#Vorticity_NavierStokes2Dcons.cxx\n\n#Vorticity_NavierStokes2Dcons.hh\n\n#Vorticity_NavierStokes3Dcons.cxx\n\n#Vorticity_NavierStokes3Dcons.hh\n",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#############################################################################\n",
        "Line" : 280,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#############################################################################\n",
        "Line" : 335,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#P2Normal_Tetra.cxx\n\n#P2Normal_Tetra.hh\n",
        "Line" : 438,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#############################################################################\n",
        "Line" : 543,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#STKT_LDACSchemeSysScalar.hh\n\n#STKT_LDACSchemeSysScalar.cxx\n",
        "Line" : 596,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#############################################################################\n",
        "Line" : 697,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#BLDAFVSchemeCSys.cxx\n\n#BLDAFVSchemeCSys.hh\n",
        "Line" : 702,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#-\n\n#BLWHLLSchemeCSys.cxx\n\n#BLWHLLSchemeCSys.hh\n\n#BLWNSchemeCSys.cxx\n\n#BLWNSchemeCSys.hh\n\n#-\n",
        "Line" : 706,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#BSchemePtSys.cxx\n\n#BSchemePtSys.hh\n",
        "Line" : 714,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#############################################################################\n",
        "Line" : 751,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#NSchemeScalarT.ci\n\n#NSchemeScalarT.cxx\n\n#NSchemeScalarT.hh\n",
        "Line" : 773,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#BSchemePtScalar.cxx\n\n#BSchemePtScalar.hh\n",
        "Line" : 784,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#############################################################################\n",
        "Line" : 792,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#LIST ( APPEND FluctSplitLTE_files\n\n#FluctSplitLTE.hh\n\n#WeakSlipWallEuler2DPrvtLTEImpl.hh\n\n#WeakSlipWallEuler2DPrvtLTEImpl.cxx\n\n#)\n",
        "Line" : 794,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#LIST ( APPEND FluctSplitLTE_cflibs FluctSplit LTE )\n\n#LIST ( APPEND FluctSplitLTE_requires_mods FluctSplit LTE FluctSplitSystem )\n",
        "Line" : 800,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#CF_ADD_PLUGIN_LIBRARY ( FluctSplitLTE )\n",
        "Line" : 803,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#############################################################################\n",
        "Line" : 805,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# HOCRD_SplitStrategyVarBIsoP2.hh\n\n# HOCRD_SplitStrategyVarBIsoP2.cxx\n\n#HOCRD_SplitStrategyIsoP2_GaussLobatto.hh\n\n#HOCRD_SplitStrategyIsoP2_GaussLobatto.cxx\n\n#HOCRD_SplitStrategyIsoP2_GaussLobatto_N4.hh\n\n#HOCRD_SplitStrategyIsoP2_GaussLobatto_N4.cxx\n",
        "Line" : 813,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#HOCRD3D_IsoP2.hh\n",
        "Line" : 826,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#HOCRD3D_IsoP2.cxx\n",
        "Line" : 828,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#############################################################################\n",
        "Line" : 837,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#############################################################################\n",
        "Line" : 858,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#############################################################################\n",
        "Line" : 871,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#############################################################################\n",
        "Line" : 875,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#############################################################################\n",
        "Line" : 879,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#  SaveSourceData.cxx\n\n#  LoadSourceData.cxx\n\n#  UpdateCoeffSetup.cxx\n\n#  MixLayer3DRandomPerturbation.cxx\n\n#  UpdateCoeffUnSetup.cxx\n\n#  Statistics_NavierStokes2Dcons.cxx\n\n#  STKT_LDACSchemeSysScalar.cxx\n\n#  STKT_SplitterSysScalar.cxx\n\n#  UpdateCoeffUnSetup.hh\n\n#  SaveSourceData.hh\n\n#  MixLayer3DRandomPerturbation.hh\n\n#  UpdateCoeffSetup.hh\n\n#  LoadSourceData.hh\n\n#  STKT_SplitterSysScalar.hh\n\n#  FluctSplitLinEuler.hh\n\n#  Statistics_NavierStokes2Dcons.hh\n\n#  STKT_LDACSchemeSysScalar.hh\n",
        "Line" : 882,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 35
    },
    "plugins/FluctSplit/CUDA/CMakeLists.txt" : {
      "ObjectId" : "156e2af6cc6d2f58bdf1a547219354a7e43d6f6a",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#     ComputeRHSCUDA.hh\n\n#     ComputeRHSCUDA.cxx\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/FluctSplit/HONavierStokes/CMakeLists.txt" : {
      "ObjectId" : "8c4cf5aa313c46a35545cbbbef417a46f982a37f",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/FluctSplit/LinEuler/CMakeLists.txt" : {
      "ObjectId" : "14ffac2c014db4880b628df3a26c09d06d4572f4",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# boundary conditions\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# sources\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# High order\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "plugins/FluctSplit/MetaSchemes/CMakeLists.txt" : {
      "ObjectId" : "e06046c7cee2712cead21f50ae97e7ae59310d20",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/FluctSplit/RANS/CMakeLists.txt" : {
      "ObjectId" : "d85b12458e780c9e61b6d5b13648479dc32348b2",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/FluctSplitNEQ/CMakeLists.txt" : {
      "ObjectId" : "49c98c8ba3d69e26aa4836faba8d8bfbc3c243d7",
      "LastModified" : "2017-05-07T16:24:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#DiffTermCarbuncleFixTCNEQ_Ec.ci\n\n#DiffTermCarbuncleFixTCNEQ_Ec.hh\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/FluxReconstructionMethod/CMakeLists.txt" : {
      "ObjectId" : "b0f70ad3126174943b929aa782515aa30bd21266",
      "LastModified" : "2019-04-12T15:05:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/FluxReconstructionMultiFluidMHD/CMakeLists.txt" : {
      "ObjectId" : "592145b979bd40f4241feb1d52c525e059a00c60",
      "LastModified" : "2018-08-09T14:56:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/FluxReconstructionNEQ/CMakeLists.txt" : {
      "ObjectId" : "6d821203a361b8b593055c20749a08bb1c0d0d84",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/FluxReconstructionNavierStokes/CMakeLists.txt" : {
      "ObjectId" : "74b1f9f7cd0d477bf98116368fe9305e004f44fe",
      "LastModified" : "2019-04-12T15:05:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/ForwardEuler/CMakeLists.txt" : {
      "ObjectId" : "cc9e7005f5be47794b5ffe4a774740c782a8ec13",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/GETModel/CMakeLists.txt" : {
      "ObjectId" : "c47088c1ddb159c344525712f7e52c19b769b9c5",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/GETModel/FindGET.cmake" : {
      "ObjectId" : "feefe08aac5400d4ecc0951746fe58b5f69e4a2d",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Sets\n\n#   GET_INCLUDE_DIRS\n\n#   GET_LIBS\n\n#   CF_HAVE_GET\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# clear include search path\n\n# clear library search path\n",
        "Line" : 7,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 2
    },
    "plugins/GReKO/CMakeLists.txt" : {
      "ObjectId" : "543b98a4f0a606138ae9336f59ab0d83918e87fc",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Euler2DGReKOMachAlphaPTToCons.cxx\n\n#Euler2DGReKOMachAlphaPTToCons.hh\n\n#Euler2DGReKOMachAlphaPTToPuvt.cxx\n\n#Euler2DGReKOMachAlphaPTToPuvt.hh\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#WNavierStokes2DGReKOPuvt.cxx\n\n#WNavierStokes2DGReKOPuvt.hh\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/Gambit2CFmesh/CMakeLists.txt" : {
      "ObjectId" : "94282874b757d8189a0518f49caed49b41a4754e",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/Gmsh2CFmesh/CMakeLists.txt" : {
      "ObjectId" : "5ebd27f65699b64ce936767bc780826152934948",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/Heat/CMakeLists.txt" : {
      "ObjectId" : "3a8379d9e12f52d7861c48d546d5fe33cf5b1546",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ADD_SUBDIRECTORY ( testcases )\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/Heat/testcases/CMakeLists.txt" : {
      "ObjectId" : "d44b8790db3d08b99498b1f24771c9d09559886c",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/HessianEE/CMakeLists.txt" : {
      "ObjectId" : "a5d7c210a187d4e116fb5f4c1aa325d73fa5f396",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/ICP/CMakeLists.txt" : {
      "ObjectId" : "7554629ed2b28ff20089ed5d2da7218046fb75f3",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/ICP/testcases/CMakeLists.txt" : {
      "ObjectId" : "77380380ad5d911b6e7ad561807c22d4f94de96e",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#cf_add_case( MPI 12 CASEDIR TorchNEQ PCASE torch_air11_PLATO.CFcase CASEFILES torch_PLATO.inter restart_cfl80.CFmesh )\n\n#cf_add_case( MPI default PCASE Air11_30kW8GPerSecAdiabatInCoupling/torchNSFVMLTEdPuvtQJCouplingFirstStrategy.CFcase )\n\n#cf_add_case( MPI default PCASE Argon10kW8GPerSecAdiabatInCoupling/torchNSFVMLTEdPuvtQJCouplingFirstStrategy.CFcase )\n\n#cf_add_case( MPI default PCASE ArgonTorch10kW8G/torchNSFVMLTEdPuvtQJ.CFcase )\n\n#cf_add_case( MPI default PCASE ArgonTorch10kW8G_Coupling/torchNSFVMLTEdPuvtQJCouplingFirstStrategy.CFcase )\n\n#cf_add_case( MPI default PCASE CO28_30kW12GPerSecAdiabatInCoupling/torchNSFVMLTEdPuvtQJCouplingFirstStrategy.CFcase )\n\n#cf_add_case( MPI default PCASE Plasmatron/AirTorch30kW_12gps_10kPa/torchNSFVMLTEdPuvtQJ.CFcase )\n\n#cf_add_case( MPI default PCASE Plasmatron/Torch/AUSM.CFcase )\n\n#cf_add_case( MPI default PCASE Plasmatron/Torch/AUSMIncomp.CFcase )\n\n#cf_add_case( MPI default PCASE Plasmatron/TorchStep1/restart.CFcase )\n\n#cf_add_case( MPI default PCASE Plasmatron/TorchStep1/start_AUSM.CFcase )\n\n#cf_add_case( MPI default PCASE Plasmatron/TorchStep1/start_AUSM_Incomp.CFcase )\n\n#cf_add_case( MPI default PCASE Plasmatron/TorchStep1/start.CFcase )\n\n#cf_add_case( MPI default PCASE Plasmatron/TorchStep2/restart_AUSM.CFcase )\n\n#cf_add_case( MPI default PCASE Plasmatron/TorchStep2/restart.CFcase )\n\n#cf_add_case( MPI default PCASE TorchNEQ/channelCNEQ_AUSM.CFcase )\n\n#cf_add_case( MPI default PCASE TorchNEQ/channelCNEQ.CFcase )\n\n#cf_add_case( MPI default PCASE TorchNEQ/start_AUSM.CFcase )\n\n#cf_add_case( MPI default PCASE TorchNEQ/torchCNEQ_AUSM.CFcase )\n\n#cf_add_case( MPI default PCASE TorchNEQ/torchCNEQ.CFcase )\n\n#cf_add_case( MPI default PCASE TorchNEQ/torchNEQ_AUSM.CFcase )\n\n#cf_add_case( MPI default PCASE TorchNEQ/torchNEQ.CFcase )\n\n#cf_add_case( MPI default PCASE TorchNEQ/torchNEQ.CFcase.Pivt )\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/KOmega/CMakeLists.txt" : {
      "ObjectId" : "cc768d6bfe904c57b6793d32c57ba4933bcf79ca",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/KOmega/testcases/CMakeLists.txt" : {
      "ObjectId" : "d2a201dc0b39262dad1fa3c197e684904b9cea73",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#cf_add_case( MPI default PCASE DeleryBump/DeleryKOmegaBSL_2nd.CFcase )\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/LES/CMakeLists.txt" : {
      "ObjectId" : "eba6371eaf02221d1ef48534e9678f118cf3e025",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/LES/FindLESModels.cmake" : {
      "ObjectId" : "6b7f8dc9708a036202ea9e34e7abbce5d7702081",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Needs environmental variables\n\n#   LESMODELS_DIR\n\n# Sets\n\n#   LESMODELS_INCLUDE_DIR\n\n#   LESMODELS_LIBRARIES\n\n#   CF_HAVE_LESMODELS\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# clear include search path\n\n# clear library search path\n",
        "Line" : 8,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 2
    },
    "plugins/LESDataProcessing/CMakeLists.txt" : {
      "ObjectId" : "6fb43f5151894c86d2503117d3ead89558704be9",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/LESvki/CMakeLists.txt" : {
      "ObjectId" : "790cd74fd91fd22b5c626aeb5d9c37dbd9ae742d",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/LTE/CMakeLists.txt" : {
      "ObjectId" : "ba52019a24fbf9b16f8165cbd3eaac8c042cad1b",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/LUSGSMethod/CMakeLists.txt" : {
      "ObjectId" : "e0a3dcdbe925c9f69956cbeebc4ac8e7b80b1815",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/LagrangianSolver/CMakeLists.txt" : {
      "ObjectId" : "4b424f7bebecdaf9d8b52aaacebe7ffa2e66a090",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/LinEuler/CMakeLists.txt" : {
      "ObjectId" : "daeccd12054db54a25392d3d3abfecdb04266232",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ADD_SUBDIRECTORY ( testcases )\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/LinEuler/testcases/CMakeLists.txt" : {
      "ObjectId" : "6ede8130733b7223149f93141cecf6da561a6f05",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/LinearAdv/CMakeLists.txt" : {
      "ObjectId" : "b1262237bfecc64c27ababa72d17609b5f8974d9",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ADD_SUBDIRECTORY ( testcases )\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/LinearAdv/testcases/CMakeLists.txt" : {
      "ObjectId" : "e1d631eb9027de59c9432a005d9ed121d4d34af1",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/LinearAdvSys/CMakeLists.txt" : {
      "ObjectId" : "3e1c5a84eb8cda47b12321700d2135de77dea0cd",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ADD_SUBDIRECTORY ( testcases )\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/LinearAdvSys/testcases/CMakeLists.txt" : {
      "ObjectId" : "2a3f744b5dbc08d0b259f7af552a7d9343e38a45",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/MHD/CMakeLists.txt" : {
      "ObjectId" : "10d0a570e7e730a5f16e5373a71f15b56248d1f3",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/MHD/testcases/CMakeLists.txt" : {
      "ObjectId" : "171f8c46a062f215287c35dce98001176d63d7e3",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#cf_add_case( MPI default PCASE CoronalExpansion/coronalExpansionFVMMHDProjImpl.CFcase )\n\n#cf_add_case( MPI default PCASE CoronalExpansion/coronalExpansionFVMMHDProjImplPRIM.CFcase )\n\n#cf_add_case( MPI default PCASE CoronalExpansion/coronalExpansionFVMMHDProjPolytropicImplPRIM.CFcase )\n\n#cf_add_case( MPI default PCASE Cube/cubeFVMPowellImpl.CFcase )\n\n#cf_add_case( MPI default PCASE Cylinder/quarterCylinderFVMMHDPowell.CFcase )\n\n#cf_add_case( MPI default PCASE Cylinder/quarterCylinderFVMMHDPowellImpl.CFcase )\n\n#cf_add_case( MPI default PCASE Cylinder/quarterCylinderFVMMHDProj.CFcase )\n\n#cf_add_case( MPI default PCASE Cylinder/quarterCylinderFVMMHDProjImpl.CFcase )\n\n#cf_add_case( MPI default PCASE Dipole3D/dipole3DFVMMHDProjImpl.CFcase )\n\n#cf_add_case( MPI default PCASE Dipole3D/dipole3DFVMMHDProjImplOgino.CFcase )\n\n#cf_add_case( MPI default PCASE Dipole3D/dipole3DFVMMHDProjImplRotation.CFcase )\n\n#cf_add_case( MPI default PCASE Dipole3D/dipole3DFVMMHDProjImplRotationTorus.CFcase )\n\n#cf_add_case( MPI default PCASE Dipole3D/dipole3DFVMMHDProjNoFlow.CFcase )\n\n#cf_add_case( MPI default PCASE Jets2D/jets2DFSMMHDImpl.CFcase )\n\n#cf_add_case( MPI default PCASE Jets2D/jets2DFSMMHDProjImpl.CFcase )\n\n#cf_add_case( MPI default PCASE Jets2D/jets2DFVMMHDPowell.CFcase )\n\n#cf_add_case( MPI default PCASE Jets2D/jets2DFVMMHDPowellImpl.CFcase )\n\n#cf_add_case( MPI default PCASE Jets2D/jets2DFVMMHDProj.CFcase )\n\n#cf_add_case( MPI default PCASE Jets2D/jets2DFVMMHDProjImpl.CFcase )\n\n#cf_add_case( MPI default PCASE Jets2D/jets2DMHDFluctSplitCRD.CFcase )\n\n#cf_add_case( MPI default PCASE Jets2D/jets2DMHDProjFluctSplitCRD.CFcase )\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#cf_add_case( MPI default PCASE Nozzle/nozzleFluctSplitMHD.CFcase )\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#cf_add_case( MPI default PCASE Nozzle/nozzleFVMMHDPowellImpl.CFcase )\n\n#cf_add_case( MPI default PCASE Nozzle/nozzleFVMMHDProj.CFcase )\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#cf_add_case( MPI default PCASE Nozzle/nozzleMHDFluctSplitCRD.CFcase )\n\n#cf_add_case( MPI default PCASE Nozzle/nozzleMHDProjFluctSplitCRD.CFcase )\n\n#cf_add_case( MPI default PCASE Nozzle3D/cuda.CFcase )\n\n#cf_add_case( MPI default PCASE Nozzle3D/cudaImpl.CFcase )\n\n#cf_add_case( MPI default PCASE Nozzle3D/nozzle3DFVMMHDProj.CFcase )\n\n#cf_add_case( MPI default PCASE Nozzle3D/nozzle3DFVMMHDProjImpl.CFcase )\n\n#cf_add_case( MPI default PCASE ShockTube/shocktube-fvm-powell.CFcase )\n\n#cf_add_case( MPI default PCASE ShockTube/shocktube-fvm-powellQD.CFcase )\n\n#cf_add_case( MPI default PCASE ShockTube/shocktube-fvm-proj.CFcase )\n\n#cf_add_case( MPI default PCASE ShockTube/shocktube-fvm-projQD.CFcase )\n\n#cf_add_case( MPI default PCASE SinusBump/bumpFluctSplitCRDMHD.CFcase )\n\n#cf_add_case( MPI default PCASE SinusBump/bumpFluctSplitCRDMHDQD.CFcase )\n\n#cf_add_case( MPI default PCASE SinusBump/bumpFluctSplitMHD.CFcase )\n\n#cf_add_case( MPI default PCASE SinusBump/bumpFVMMHDPowell.CFcase )\n\n#cf_add_case( MPI default PCASE SinusBump/bumpFVMMHDPowellImpl.CFcase )\n\n#cf_add_case( MPI default PCASE SinusBump/bumpFVMMHDProj.CFcase )\n\n#cf_add_case( MPI default PCASE SinusBump/bumpFVMMHDProjImpl.CFcase )\n\n#cf_add_case( MPI default PCASE SinusBump/bumpMHDFluctSplitCRD.CFcase )\n\n#cf_add_case( MPI default PCASE SinusBump/bumpMHDProjFluctSplitCRD.CFcase )\n\n#cf_add_case( MPI 1       PCASE SinusBump3D/bump3DFVMMHDPowell.CFcase )\n\n#cf_add_case( MPI default PCASE SinusBump3D/bump3DFVMMHDPowellImpl.CFcase )\n\n#cf_add_case( MPI 1       PCASE SinusBump3D/bump3DFVMMHDProj.CFcase )\n\n#cf_add_case( MPI default PCASE SinusBump3D/bump3DFVMMHDProjImpl.CFcase )\n\n#cf_add_case( MPI default PCASE Sphere/sphereFVMMHDPowell.CFcase )\n\n#cf_add_case( MPI default PCASE Sphere/sphereFVMMHDPowellImpl.CFcase )\n\n#cf_add_case( MPI default PCASE Sphere/sphereFVMMHDProj.CFcase )\n\n#cf_add_case( MPI default PCASE Sphere/sphereFVMMHDProjImpl.CFcase )\n\n#cf_add_case( MPI default PCASE Wedge/wedgeFluctSplitMHD.CFcase )\n\n#cf_add_case( MPI 1       PCASE Wedge/wedgeFVMMHDPowell.CFcase )\n\n#cf_add_case( MPI default PCASE Wedge/wedgeFVMMHDPowellImpl.CFcase )\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#cf_add_case( MPI default PCASE Wedge/wedgeMHDFluctSplitCRD.CFcase )\n\n#cf_add_case( MPI default PCASE Wedge/wedgeMHDProjFluctSplitCRD.CFcase )\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "plugins/MarcoTest/CMakeLists.txt" : {
      "ObjectId" : "4d101e1909dd7df4c59796361be4bd8fabf88b58",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#MarcoTest_BC.cxx\n\n#MarcoTest_BC.hh\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/MatrixStabilityMethodWriter/CMakeLists.txt" : {
      "ObjectId" : "e3267bac6e0eed87a1fd4895445c5e1319f9007e",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/Maxwell/CMakeLists.txt" : {
      "ObjectId" : "6ebd935170d684a19e44cf559ef62e81a151acef",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ADD_SUBDIRECTORY ( testcases )\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/Maxwell/testcases/CMakeLists.txt" : {
      "ObjectId" : "058d28964085e7989bed363e99172faf4c7a1923",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#cf_add_case( MPI 1 2     PCASE wireSteadyImplProjBigCircle100X30.CFcase )\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/MeshAdapterSpringAnalogy/CMakeLists.txt" : {
      "ObjectId" : "9f780a967fd793bc849a1a8cc477d4dc5e9a7778",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/MeshFEMMove/CMakeLists.txt" : {
      "ObjectId" : "1f56f141f613c815ae601c3d3a8ad1ee79a35f1e",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/MeshGenerator1D/CMakeLists.txt" : {
      "ObjectId" : "eaa68de2b478602e13e12d1bb5f547f5864dfadf",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/MeshLaplacianSmoothing/CMakeLists.txt" : {
      "ObjectId" : "eb050a08a6bd7459cd24fa13bbd59fae694c4a6c",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/MeshRigidMove/CMakeLists.txt" : {
      "ObjectId" : "a02caec68ed47ea88b224b3bf041eb5fb1518cf4",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/MeshTools/CMakeLists.txt" : {
      "ObjectId" : "bdeb243cc7022af52d54de56dc11f1bea7f4475e",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##################################################################\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##################################################################\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/MultiFluidMHD/CMakeLists.txt" : {
      "ObjectId" : "58e4e391ab9e7bd08ae2b2fdf78f8e7e673952b6",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/MultiFluidMHD/testcases/CMakeLists.txt" : {
      "ObjectId" : "315fdb7ef264c4fc8f28b63d2c5b12ea67143d38",
      "LastModified" : "2019-04-12T15:05:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#cf_add_case( MPI        16      CASEDIR 5_GEMchallenge\t\tPCASE 1_GEMChallengeRegressionTest_2DHalf.CFcase   CASEFILES mesh2D_512x256Periodic.CFmesh gem_test.inter )\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#cf_add_case( MPI        1       CASEDIR 11_BrioWuTube\t\tPCASE 1_BrioWu.CFcase\t\t\t\t   CASEFILES shockTube_1x6e-3_600x4.neu BrioWu.inter )\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/Mutation2.0.0I/CMakeLists.txt" : {
      "ObjectId" : "37e1da65aee4135200f1bf8adee2194a2dc52ec6",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/Mutation2.0I/CMakeLists.txt" : {
      "ObjectId" : "c3be5644aa514e9b3a1ac636917ee166ea8a7047",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/MutationI/CMakeLists.txt" : {
      "ObjectId" : "1b38370d52295106cebed01b02d2692b1cb34306",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#OnlySigma.hh\n\n#OnlySigma.cxx\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/MutationUsage/CMakeLists.txt" : {
      "ObjectId" : "65b694e2a1087a0a2e26db953fb26c1e6f28edfb",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/MutationppI/CMakeLists.txt" : {
      "ObjectId" : "0d38c4f2d58205a10935991c75b10d6a6d0392c3",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/NEQ/CMakeLists.txt" : {
      "ObjectId" : "5ce7dbf68629f273e302d6a23d953e95e8547bf4",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/NEQ/testcases/CMakeLists.txt" : {
      "ObjectId" : "d6c0966a9b4411d31f42429bafb7d18681a601eb",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#cf_add_case( MPI default PCASE CNEQ/Catalicity/Testcase_TCNEQ.CFcase )\n\n#cf_add_case( MPI default PCASE CNEQ/Catalicity/Test_for_Cyl.CFcase )\n\n#cf_add_case( MPI default PCASE PrabhuCylinder/PrabhuCylRDS_TCNEQ.CFcase )\n\n#cf_add_case( MPI default PCASE TCNEQ/DoubleCone/Run42_N2/DConeN2_42_CRD_Weak.CFcase )\n\n#cf_add_case( MPI default PCASE TCNEQ/EXPERT3D/expertM13.5_postprocessing.CFcase )\n\n#cf_add_case( MPI default PCASE TCNEQ/ICP2Cat/restart.CFcase )\n\n#cf_add_case( MPI 1       PCASE TCNEQ/Nozzle1DNEQ/nozzle1DFVM_ThermNEQMultiTvTe.CFcase )\n\n#cf_add_case( MPI 1       PCASE TCNEQ/Nozzle1DNEQ/nozzle1DFVM_ThermNEQMultiTvTeCR_Pvt.CFcase )\n\n#cf_add_case( MPI 1       PCASE TCNEQ/ShockTube/shocktubeNEQ.CFcase )\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/NEQKOmega/CMakeLists.txt" : {
      "ObjectId" : "0dc14366ea04f302bdce28aa60295c61966c5adb",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/NEQKOmega/testcases/CMakeLists.txt" : {
      "ObjectId" : "b29ff4979aeeb5614fd4f96da0438d06ed69f43a",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#CF_SEARCH_TESTCASES()\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/NavierStokes/CMakeLists.txt" : {
      "ObjectId" : "b177fa9885457d18218d9e3259b7f6c781a20a98",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/NavierStokes/testcases/CMakeLists.txt" : {
      "ObjectId" : "69a0658df0ac97b9f2ba464e18cfc473e868dbcf",
      "LastModified" : "2019-04-12T15:05:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#cf_add_case( MPI 8       CASEDIR Naca0012 PCASE nacaFVMImpl_hybrid_euler_PuvtAnalytic.CFcase CASEFILES naca0012_hybrid.SP naca0012_hybrid.dpl )\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/NewtonMethod/CMakeLists.txt" : {
      "ObjectId" : "3ede08ecf607aaf607f42291547e10a9dde32673",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#######################################################################\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#######################################################################\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#######################################################################\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#######################################################################\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "plugins/NitrogenNASA/CMakeLists.txt" : {
      "ObjectId" : "beed80adec424db5c6c2ed434084c2a8c064bc4f",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/NitrogenNASAI/CMakeLists.txt" : {
      "ObjectId" : "46055be888000540b777c43a38bc6866323d7317",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/NonLinearAdv/CMakeLists.txt" : {
      "ObjectId" : "42f678500798715486eac4a1f4b1107c5c2ca23c",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ADD_SUBDIRECTORY ( testcases )\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/NonLinearAdv/testcases/CMakeLists.txt" : {
      "ObjectId" : "2ca2b389a514439edd6acbcee5450207da4b2cee",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/PARADE/CMakeLists.txt" : {
      "ObjectId" : "045037ea8179e73a319eb408c92bd849cd416720",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/ParMetisBalancer/CMakeLists.txt" : {
      "ObjectId" : "083b7705f942553a088f355a47b10e1f11807a5a",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# avoids warning of orphan when parmeti is not present\n",
        "Line" : 15,
        "CharPositionInLine" : 61
      },
      "CommentCount" : 1
    },
    "plugins/ParaViewWriter/CMakeLists.txt" : {
      "ObjectId" : "8750f46f72f336d37d27b7b5c8ee8cffd314686a",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/Paralution/CMakeLists.txt" : {
      "ObjectId" : "2b00dc35458f9eef0c5c35a8140af7eea28663dc",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/Paralution/FindParalution.cmake" : {
      "ObjectId" : "421027a902d27bae0a4dceca67b3c397b9890b79",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Needs environmental variables\n\n#   PARALUTION_DIR\n\n# Sets\n\n#   PARALUTION_INCLUDE_DIR\n\n#   PARALUTION_LIBS\n\n#   CF_HAVE_PARALUTION\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/Pardiso/CMakeLists.txt" : {
      "ObjectId" : "ca0f409faa829044b4ebe47e2808bfa9c0914520",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/Pardiso/FindPardiso.cmake" : {
      "ObjectId" : "934d1661419433ac4dbc105adefb1bb78a38c2a5",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Needs environmental variables\n\n#   PARDISO_INCLUDE_DIR\n\n#   PARDISO_LIBRARY_DIR\n\n#   PARDISO_GFORTRANLIB_DIR\n\n# Sets\n\n#   CF_PARDISO_INCLUDE\n\n#   CF_PARDISO_LIB\n\n#   CF_HAVE_PARDISO\n\n#   CF_HAVE_PARDISO_UBASEL\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# look for Intel MKL version, versions 10 should work fine.\n\n# (setup for the GNU compilers, 64 lp version)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# look for University Basel version, version 3.3 works fine\n\n# (requires lapack and blas, set by package Lapack)\n\n# PARDISO_LIBRARY_DIR directory should have pointers to libm.so\n\n# and libiomp5.so (*1)\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# (*1) libiomp5 is a temporary fix from Intel MKL instead of libgomp; gcc\n\n# openmp support comes through -fopenmp option (ADD_DEFINITIONS(-fopenmp))\n\n# and should also be in linking line, but cmake doesn't provide an elegant\n\n# solution -- should i force it with -lgomp instead of L9?\n\n# (this ambiguity will wait for gcc-4.4, with libgomp merged into gcc)\n",
        "Line" : 46,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# TODO: generate PardisoConfig.hh\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "plugins/Petsc/CMakeLists.txt" : {
      "ObjectId" : "81df28754fd207ccdbda4b803c1869b71a9b6f13",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#TriDiagLSS.cxx\n\n#TriDiagLSS.hh\n\n#TriDiagLSSData.cxx\n\n#TriDiagLSSData.hh\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#MESSAGE (\"######################### coolfluid-solver_libs in PETSC is ${coolfluid-solver_libs}\")\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/Petsc/FindPetsc.cmake" : {
      "ObjectId" : "a4d0972bbc9101795675432364fbbca7935be2fe",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Needs environmental variables\n\n#   PETSC_ARCH\n\n#   PETSC_DIR\n\n# Sets\n\n#   PETSC_INCLUDE_DIR\n\n#   PETSC_LIBS\n\n#   CF_HAVE_PETSC\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#FIND_LIBRARY(PETSC_KSP_LIB petscksp ${TRIAL_LIBRARY_PATHS}  NO_DEFAULT_PATH)\n\n#FIND_LIBRARY(PETSC_KSP_LIB petscksp )\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#FIND_LIBRARY(PETSC_SNES_LIB petscsnes ${TRIAL_LIBRARY_PATHS}  NO_DEFAULT_PATH)\n\n#FIND_LIBRARY(PETSC_SNES_LIB petscsnes )\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#FIND_LIBRARY(PETSC_CDM_LIB petscdm ${TRIAL_LIBRARY_PATHS}  NO_DEFAULT_PATH)\n\n#FIND_LIBRARY(PETSC_CDM_LIB petscdm )\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#FIND_LIBRARY(PETSC_MAT_LIB petscmat ${TRIAL_LIBRARY_PATHS}  NO_DEFAULT_PATH)\n\n#FIND_LIBRARY(PETSC_MAT_LIB petscmat )\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#FIND_LIBRARY(PETSC_VEC_LIB petscvec ${TRIAL_LIBRARY_PATHS}  NO_DEFAULT_PATH)\n\n#FIND_LIBRARY(PETSC_VEC_LIB petscvec )\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#LIST ( APPEND PETSC_LIBRARIES ${PETSC_KSP_LIB} ${PETSC_SNES_LIB} ${PETSC_CDM_LIB} ${PETSC_MAT_LIB} ${PETSC_VEC_LIB} ${PETSC_LIBRARY} )\n\n#LIST ( APPEND PETSC_LIBRARIES ${PETSC_LIBRARY} )\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#  PETSC_KSP_LIB\n\n#  PETSC_SNES_LIB\n\n#  PETSC_CDM_LIB\n\n#  PETSC_MAT_LIB\n\n#  PETSC_VEC_LIB\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "plugins/PhysicalModelDummy/CMakeLists.txt" : {
      "ObjectId" : "f575c9493d4be873f80eba4a0d57de4641f7a95d",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ADD_SUBDIRECTORY ( testcases )\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/PhysicalModelDummy/testcases/CMakeLists.txt" : {
      "ObjectId" : "6b11b018d484fd2d35338e1ff14e32c164a72ab6",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/PlatoI/CMakeLists.txt" : {
      "ObjectId" : "cf5b68042c220cee91550c31f13fb65bf53ba5c9",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/Poisson/CMakeLists.txt" : {
      "ObjectId" : "c5c6cfca2cf8597ddd1d650c554030e0de32a33a",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ADD_SUBDIRECTORY ( testcases )\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/Poisson/testcases/CMakeLists.txt" : {
      "ObjectId" : "1cd619b3aecc5e9ff2cf6054e3bd72853a2caf4a",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/RKRD/CMakeLists.txt" : {
      "ObjectId" : "f6d89bb80e2bafa2d05fcb42be2a6098cfcbe913",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# strategy\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/RadiativeTransfer/CMakeLists.txt" : {
      "ObjectId" : "ad03f2ad5152b5b03f04cfd01b2d8ee86600a924",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/RadiativeTransfer/RadiationLibrary/Models/HSNB/core/CMakeLists.txt" : {
      "ObjectId" : "803605ab3dc3a3d35c0301c53c846e8863c9c25f",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/RadiativeTransfer/testcases/CMakeLists.txt" : {
      "ObjectId" : "c80b5b3799b0c5d275e5e60ca06bfd6e59b8a5df",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/RemeshMeandr/CMakeLists.txt" : {
      "ObjectId" : "9a90f58812074662fec31d3a877a042793021e4e",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/RotationAdv/CMakeLists.txt" : {
      "ObjectId" : "4c9388938938ffc517c6a62da6e50cdca284155f",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ADD_SUBDIRECTORY ( testcases )\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/RotationAdv/testcases/CMakeLists.txt" : {
      "ObjectId" : "edca0da507ab12b193ef417f595251e7eb47818f",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/RotationAdvSys/CMakeLists.txt" : {
      "ObjectId" : "a56b667b3202d96580694a5affa90d0f8a18168e",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/RungeKutta/CMakeLists.txt" : {
      "ObjectId" : "dceb4343a6269124fc6bb6339077880dea18db51",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/RungeKutta2/CMakeLists.txt" : {
      "ObjectId" : "932ecc3aeda000c8f26235f318516a8027abbc7e",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/RungeKuttaLS/CMakeLists.txt" : {
      "ObjectId" : "3de6dc1e3267c4ec5c0636cebf99547deed80b29",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/SA/CMakeLists.txt" : {
      "ObjectId" : "731635a48196896b194a95f09d19d0c8bd1f3b1d",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/SA/testcases/CMakeLists.txt" : {
      "ObjectId" : "726c0c2e5b097cbbf2ea3987cc286bf985944555",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/SAMGLSS/CMakeLists.txt" : {
      "ObjectId" : "5e5de53889d01df55348f580bbf9fa78573b6124",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/SAMGLSS/FindSAMG.cmake" : {
      "ObjectId" : "8c4d0f741741dc326963a77b48f3554cbd700f79",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Needs environmental variables\n\n#   SAMG_HOME\n\n#   SAMG_OPTIONS\n\n# Sets\n\n#   SAMG_INCLUDE_DIR\n\n#   SAMG_LIBRARY\n\n#   CF_HAVE_SAMG\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# for samgp\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## no mpi\n\n#FIND_LIBRARY(SAMG_LIBRARY mpidummy ${TRIAL_LIBRARY_PATHS} NO_DEFAULT_PATH)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## for samg\n\n#FIND_LIBRARY(SAMG_LIBRARY amg      ${TRIAL_LIBRARY_PATHS} NO_DEFAULT_PATH)\n\n#FIND_LIBRARY(SAMG_LIBRARY ifport   ${TRIAL_LIBRARY_PATHS} NO_DEFAULT_PATH)\n\n#FIND_LIBRARY(SAMG_LIBRARY ifcoremt ${TRIAL_LIBRARY_PATHS} NO_DEFAULT_PATH)\n\n#FIND_LIBRARY(SAMG_LIBRARY imf      ${TRIAL_LIBRARY_PATHS} NO_DEFAULT_PATH)\n\n#FIND_LIBRARY(SAMG_LIBRARY guide    ${TRIAL_LIBRARY_PATHS} NO_DEFAULT_PATH)\n\n#FIND_LIBRARY(SAMG_LIBRARY cxaguard ${TRIAL_LIBRARY_PATHS} NO_DEFAULT_PATH)\n\n#FIND_LIBRARY(SAMG_LIBRARY pthread  ${TRIAL_LIBRARY_PATHS} NO_DEFAULT_PATH)\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "plugins/SimpleGlobalMeshAdapter/CMakeLists.txt" : {
      "ObjectId" : "30e2d2dd2ff0afb1f7bfe8c4b469b86fdf123674",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/SpectralFD/CMakeLists.txt" : {
      "ObjectId" : "17666ec971fd4e21d8c33442f33c8e55906803e4",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/SpectralFDLES/CMakeLists.txt" : {
      "ObjectId" : "10067a41ac3efdbdee2f05d1e9b7ab8798f4ab49",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/SpectralFDLinEuler/CMakeLists.txt" : {
      "ObjectId" : "28ac6430db3d957170dba30a19cb3909640ef4a0",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/SpectralFDNavierStokes/CMakeLists.txt" : {
      "ObjectId" : "214c7ada66eaa1ba96eca05f697066e41c114c48",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/SpectralFV/CMakeLists.txt" : {
      "ObjectId" : "eca044ac95473459ff1a7320477f9627cb77a21e",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/SpectralFVNavierStokes/CMakeLists.txt" : {
      "ObjectId" : "9a9e61914ae40423e669abaa19fdf66f1ca240a2",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/StructMech/CMakeLists.txt" : {
      "ObjectId" : "d10e3649c697633cba23db01ccd66d71a7688e5b",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/StructMech/testcases/CMakeLists.txt" : {
      "ObjectId" : "5b5ef7afec0b0284de9de7b7b0c9366bb98dc477",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#cf_add_case( MPI default PCASE PlaneStress/NonLinearStressedSquare.CFcase )\n\n#cf_add_case( MPI 1       PCASE PlaneStress/StressedSquare.CFcase )\n\n#cf_add_case( MPI 1       PCASE PlaneStress/StressedSquareQD_2ndOrder.CFcase )\n\n#cf_add_case( MPI 1       PCASE PlaneStress/StressedSquareQD.CFcase )\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/StructMechHeat/CMakeLists.txt" : {
      "ObjectId" : "910855274c3cc05eaf727db7ca5bf6226b067c6b",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/SubSystemCoupler/CMakeLists.txt" : {
      "ObjectId" : "fb8d8d01740629a0cc349f6ebc0c2244633221aa",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##########################################################################\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##########################################################################\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##########################################################################\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#ADD_SUBDIRECTORY ( testcases )\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "plugins/SubSystemCoupler/testcases/CMakeLists.txt" : {
      "ObjectId" : "c457087b2e2227a319b725ed7cd12f11f145f625",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/THOR2CFmesh/CMakeLists.txt" : {
      "ObjectId" : "8ac52e87dba03f7524dd70fcf84d2b97cb13bee7",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/Tecplot2CFmesh/CMakeLists.txt" : {
      "ObjectId" : "e1ccf2c8026597689756b31c204cdb84b0a454de",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/TecplotMerge/CMakeLists.txt" : {
      "ObjectId" : "46241add877e564202d2ab5c11def1c4a72bdc4d",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/TecplotWriter/CMakeLists.txt" : {
      "ObjectId" : "00f21a7d390bc8dbe03afb3a819800397ee17086",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/TecplotWriterNavierStokes/CMakeLists.txt" : {
      "ObjectId" : "f36ff57cb4ab2ae365f245f7375a7ec80d8b7b4b",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/Trilinos/CMakeLists.txt" : {
      "ObjectId" : "1943cdd05116ea092bfa9ba0d8e9303cd3f129d0",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#LIST ( APPEND Trilinos_libs ${TRILINOS_LIBRARIES} ${CF_BLASLAPACK_LIBRARIES} )\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/Trilinos/FindTrilinos.cmake" : {
      "ObjectId" : "c65a9acfb48b3d12f2c9530cc7ed0672c60f1300",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Sets\n\n#   TRILINOS_INCLUDE_DIR\n\n#   TRILINOS_LIBRARIES\n\n#   CF_HAVE_TRILINOS\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# clear include search path\n\n# clear library search path\n",
        "Line" : 8,
        "CharPositionInLine" : 28
      },
      "2" : {
        "Text" : "#  ${TRILINOS_MEROS_LIB} \n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "plugins/XCFcaseConverter/CMakeLists.txt" : {
      "ObjectId" : "a97b49aefa5c09c8924ff3dc343686ab466f52b4",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ADD_SUBDIRECTORY ( testcases )\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/XCFcaseConverter/testcases/CMakeLists.txt" : {
      "ObjectId" : "8dc53dd895e462b2a57b2ef152f12bd7e197470e",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "0bf01e4f4ff709e1c22cfc5232993e7eb2d346ea",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Common/CMakeLists.txt" : {
      "ObjectId" : "d33e5c378b8abcc6cda89f0c11fd292ee9c7e7fe",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# Basic files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################################################\n\n# template meta-programming classes\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###############################################################################\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# MPI Files\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###############################################################################\n\n# SERIAL PE\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "###############################################################################\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "###############################################################################\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Curl download helper\n\n# LIST ( APPEND OPTIONAL_dirfiles CurlDownloader.hh CurlDownloader.cxx)\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "###############################################################################\n\n# MMap allocation\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "###############################################################################\n\n# Operating System dependent files\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "### UNIXES ####\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#IF ( NOT CF_HAVE_SINGLE_EXEC )\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# the following makes the compilation fail when no library is created\n\n# needs to be tested better for static compilation\n",
        "Line" : 242,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "### WINDOWS ####\n",
        "Line" : 261,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# should search explicitly for dbghelp.dll\n\n# should search for psapi.dll if not in windows 7 (already in kernel32.dll)\n",
        "Line" : 268,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# libraries for ProcessInfoWin32\n",
        "Line" : 271,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "#IF ( NOT CF_HAVE_LIBLOADER AND NOT CF_HAVE_SINGLE_EXEC )\n",
        "Line" : 281,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "###############################################################################\n",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#LIST(APPEND coolfluid-solver_files ${CMAKE_CURRENT_SOURCE_DIR}/${AFILE} )\n",
        "Line" : 293,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "src/Config/CMakeLists.txt" : {
      "ObjectId" : "c136b40565b2ab52dae7862736a45777686d0899",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Environment/CMakeLists.txt" : {
      "ObjectId" : "9a8def18097eccb490a1518b76e4735422514e4f",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Framework/CMakeLists.txt" : {
      "ObjectId" : "1094a85a05f1156457d504451282f57a6a80462f",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# compile some files with CUDA compiler\n",
        "Line" : 550,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###########################################\n\n# MPI\n",
        "Line" : 560,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add link to boost libraries: this was needed only on Genius cluster, may prove faulty on some other systems\n",
        "Line" : 602,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###########################################\n\n# Metis\n\n#LIST ( APPEND OPTIONAL_dirfiles Metis.cxx Metis.hh)\n\n#IF(CF_HAVE_METIS)\n\n#  LIST ( APPEND Framework_files Metis.cxx Metis.hh )\n\n#  LIST ( APPEND Framework_includedirs ${METIS_INCLUDE_DIR})\n\n#  LIST ( APPEND Framework_libs ${METIS_LIBRARY})\n\n#ENDIF(CF_HAVE_METIS)\n",
        "Line" : 605,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/MathTools/CMakeLists.txt" : {
      "ObjectId" : "371bcaf8965567b5a53fd458b057fccbd80b9d6d",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# try to compile using boost\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Function Parser (v4.5.2) from http://warp.povusers.org/FunctionParser/\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#FParser/fparser_gmpint.hh\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#FParser/fparser_mpfr.hh\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/ShapeFunctions/CMakeLists.txt" : {
      "ObjectId" : "62b9d6dacc5548b22745e2f13aface923e58a2ae",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/UnitTests/CMakeLists.txt" : {
      "ObjectId" : "631f2c3cd739d6260eec539e833de6c966e9c25f",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# little helping executable for comparing CFmeshes\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/UnitTests/MathTools/CMakeLists.txt" : {
      "ObjectId" : "f91f8e566c24090fd210ee2d5f2d0eb090f63a95",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/logcpp/CMakeLists.txt" : {
      "ObjectId" : "87f11f8530d5bdfc754a78322d37a018ef9e91b6",
      "LastModified" : "2018-07-05T13:13:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# RemoteSyslogAppender.hh\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# DummyThreads.hh\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# RemoteSyslogAppender.cpp\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# DummyThreads.cpp\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    }
  },
  "FileTypes" : {
    "CMAKE" : 228
  },
  "ElapsedTime" : 6202
}