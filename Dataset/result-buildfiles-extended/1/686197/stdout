{
  "Repository" : "686197",
  "Revision" : "HEAD",
  "ObjectId" : "014a067e8a26e6976aa78dee37ab1058a5004ae6",
  "CommitTime" : "2019-02-03T14:17:56Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "fa6e3f8decf47efda3fba07aa16de8c86e1c3620",
      "LastModified" : "2016-03-19T13:02:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#--------------------------------------------------------------------------------------------------#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#--------------------------------------------------------------------------------------------------#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#--------------------------------------------------------------------------------------------------#\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#--------------------------------------------------------------------------------------------------#\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#--------------------------------------------------------------------------------------------------#\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#--------------------------------------------------------------------------------------------------#\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#--------------------------------------------------------------------------------------------------#\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#--------------------------------------------------------------------------------------------------#\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#--------------------------------------------------------------------------------------------------#\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#--------------------------------------------------------------------------------------------------#\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#--------------------------------------------------------------------------------------------------#\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#--------------------------------------------------------------------------------------------------#\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "cmake/CodeCoverage.cmake" : {
      "ObjectId" : "fc2012a7bbac718cece3dba057333855c90bf229",
      "LastModified" : "2015-09-06T15:04:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2012 - 2015, Lars Bilke\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without modification,\n\n# are permitted provided that the following conditions are met:\n\n#\n\n# 1. Redistributions of source code must retain the above copyright notice, this\n\n#    list of conditions and the following disclaimer.\n\n#\n\n# 2. Redistributions in binary form must reproduce the above copyright notice,\n\n#    this list of conditions and the following disclaimer in the documentation\n\n#    and/or other materials provided with the distribution.\n\n#\n\n# 3. Neither the name of the copyright holder nor the names of its contributors\n\n#    may be used to endorse or promote products derived from this software without\n\n#    specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n\n# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\n# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\n# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\n# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n\n# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\n# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n#\n\n#\n\n# 2012-01-31, Lars Bilke\n\n# - Enable Code Coverage\n\n#\n\n# 2013-09-17, Joakim SÃ¶derberg\n\n# - Added support for Clang.\n\n# - Some additional usage instructions.\n\n#\n\n# USAGE:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# 0. (Mac only) If you use Xcode 5.1 make sure to patch geninfo as described here:\n\n#      http://stackoverflow.com/a/22404544/80480\n\n#\n\n# 1. Copy this file into your cmake modules path.\n\n#\n\n# 2. Add the following line to your CMakeLists.txt:\n\n#      INCLUDE(CodeCoverage)\n\n#\n\n# 3. Set compiler flags to turn off optimization and enable coverage:\n\n#    SET(CMAKE_CXX_FLAGS \"-g -O0 -fprofile-arcs -ftest-coverage\")\n\n#\t SET(CMAKE_C_FLAGS \"-g -O0 -fprofile-arcs -ftest-coverage\")\n\n#\n\n# 3. Use the function SETUP_TARGET_FOR_COVERAGE to create a custom make target\n\n#    which runs your test executable and produces a lcov code coverage report:\n\n#    Example:\n\n#\t SETUP_TARGET_FOR_COVERAGE(\n\n#\t\t\t\tmy_coverage_target  # Name for custom target.\n\n#\t\t\t\ttest_driver         # Name of the test driver executable that runs the tests.\n\n#\t\t\t\t\t\t\t\t\t# NOTE! This should always have a ZERO as exit code\n\n#\t\t\t\t\t\t\t\t\t# otherwise the coverage generation will not complete.\n\n#\t\t\t\tcoverage            # Name of output directory.\n\n#\t\t\t\t)\n\n#\n\n# 4. Build a Debug build:\n\n#\t cmake -DCMAKE_BUILD_TYPE=Debug ..\n\n#\t make\n\n#\t make my_coverage_target\n\n#\n\n#\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check prereqs\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# NOT GCOV_PATH\n",
        "Line" : 78,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# NOT CMAKE_COMPILER_IS_GNUCXX\n",
        "Line" : 84,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# NOT CMAKE_BUILD_TYPE STREQUAL \"Debug\"\n",
        "Line" : 110,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Param _targetname     The name of new the custom make target\n\n# Param _testrunner     The name of the target which runs the tests.\n\n#\t\t\t\t\t\tMUST return ZERO always, even on errors.\n\n#\t\t\t\t\t\tIf not, no coverage report will be created!\n\n# Param _outputname     lcov output is generated as _outputname.info\n\n#                       HTML report is generated in _outputname/index.html\n\n# Optional fourth parameter is passed as arguments to _testrunner\n\n#   Pass them in list form, e.g.: \"-j;2\" for -j 2\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# NOT LCOV_PATH\n",
        "Line" : 125,
        "CharPositionInLine" : 9
      },
      "8" : {
        "Text" : "# NOT GENHTML_PATH\n",
        "Line" : 129,
        "CharPositionInLine" : 9
      },
      "9" : {
        "Text" : "# Setup target\n",
        "Line" : 131,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# Cleanup lcov\n",
        "Line" : 134,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Run tests\n",
        "Line" : 137,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Capturing lcov counters and generating report\n",
        "Line" : 140,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Show info where to find the report\n",
        "Line" : 150,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# SETUP_TARGET_FOR_COVERAGE\n",
        "Line" : 156,
        "CharPositionInLine" : 14
      },
      "15" : {
        "Text" : "# Param _targetname     The name of new the custom make target\n\n# Param _testrunner     The name of the target which runs the tests\n\n# Param _outputname     cobertura output is generated as _outputname.xml\n\n# Optional fourth parameter is passed as arguments to _testrunner\n\n#   Pass them in list form, e.g.: \"-j;2\" for -j 2\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# NOT PYTHON_EXECUTABLE\n",
        "Line" : 167,
        "CharPositionInLine" : 9
      },
      "17" : {
        "Text" : "# NOT GCOVR_PATH\n",
        "Line" : 171,
        "CharPositionInLine" : 9
      },
      "18" : {
        "Text" : "# Run tests\n",
        "Line" : 175,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Running gcovr\n",
        "Line" : 178,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Show info where to find the report\n",
        "Line" : 184,
        "CharPositionInLine" : 1
      },
      "21" : {
        "Text" : "# SETUP_TARGET_FOR_COVERAGE_COBERTURA\n",
        "Line" : 190,
        "CharPositionInLine" : 14
      },
      "CommentCount" : 22
    },
    "examples/CMakeLists.txt" : {
      "ObjectId" : "7eb9be74b0522bd3f7f50e1f05586f6d0dcf741d",
      "LastModified" : "2016-06-09T20:29:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/dictionary/CMakeLists.txt" : {
      "ObjectId" : "9e9f521098c769aff1c8c9830a7f3185d5205b02",
      "LastModified" : "2016-03-19T13:02:46Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/hanoi/CMakeLists.txt" : {
      "ObjectId" : "ddbe345124db78c2dcecf703598b77e95c7217ae",
      "LastModified" : "2016-03-19T13:02:46Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/scheduling/CMakeLists.txt" : {
      "ObjectId" : "65c7f36be01380188fafb390ca2d95eb812bcdcb",
      "LastModified" : "2016-06-09T20:29:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "sdd/CMakeLists.txt" : {
      "ObjectId" : "63a427941c8213700ad982975994505b31a46603",
      "LastModified" : "2016-06-09T20:29:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "f196867841df9fdff0c16221122f0f5356810298",
      "LastModified" : "2016-06-09T20:29:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 8
  },
  "ElapsedTime" : 795
}