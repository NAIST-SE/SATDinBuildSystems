{
  "Repository" : "921584",
  "Revision" : "HEAD",
  "ObjectId" : "d4ab82eaae32fa3a68d0699a941db67bc7fb9c18",
  "CommitTime" : "2019-02-23T19:01:33Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "0c40e085995c8cd2f0c46198a1f83c6867dee94b",
      "LastModified" : "2019-02-23T19:01:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n# Main CMake project file\n\n# Contains global options and definitions\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##\n\n# Project version\n\n##\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Used on official releases\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Used on unreleased, development builds\n\n#set(COLOBOT_VERSION_UNRELEASED \"+alpha\")\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Append git characteristics to version\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "##\n\n# Platform detection and some related checks\n\n##\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Platform-dependent implementation of system.h\n",
        "Line" : 65,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Platform-dependent implementation of system.h\n",
        "Line" : 76,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Platform-dependent implementation of system.h\n",
        "Line" : 87,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Platform-dependent implementation of system.h\n",
        "Line" : 98,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# To avoid CMake warning\n",
        "Line" : 101,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Platform-dependent implementation of system.h\n",
        "Line" : 111,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "##\n\n# Build options\n\n##\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Build targets should be placed in the root build directory\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Include cmake directory with some additional scripts\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# MSVC needs different flags if linking statically\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Compiler detection\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# updated version of physfs is not available on some platforms so we keep using deprecated functions, see #958\n",
        "Line" : 139,
        "CharPositionInLine" : 83
      },
      "18" : {
        "Text" : "# updated version of physfs is not available on some platforms so we keep using deprecated functions, see #958\n",
        "Line" : 157,
        "CharPositionInLine" : 83
      },
      "19" : {
        "Text" : "# disable some useless warnings\n",
        "Line" : 165,
        "CharPositionInLine" : 94
      },
      "20" : {
        "Text" : "# Needed for Debug information (it's set to \"No\" by default for some reason)\n",
        "Line" : 176,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Global compile flags\n\n# These are specific to GCC/MinGW/clang; for other compilers, change as necessary\n\n# The flags are used throughout src/ and test/ subdirs\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Special flags for boost\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Flags for gtest\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Asserts can be enabled/disabled regardless of build type\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Development build can be enabled/disabled regardless of build type\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Official build - changes text on the crash screen\n\n# PLEASE DO NOT USE ON UNOFFICIAL BUILDS. Thanks.\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Portable build - load all data from current directory\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Portable saves - suitable for e.g. putting the whole game on external storage and moving your saves with it\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Building tests can be enabled/disabled\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Building tool programs can be enabled/disabled\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# CBot can also be a static library\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Generate desktop files, manpage, etc.\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Doxygen docs are optional for installation\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Build OpenAL sound support\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# This is useful in case you want to use static boost libraries\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# This is useful on Windows, if linking against standard GLEW dll fails\n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Sometimes helpful if there is a different version of gtest installed on system vs bundled\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# This is for use with colobot-lint tool\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Default build type if not given is debug\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Warn about development build\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "##\n\n# Searching for packages\n\n##\n",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "##\n\n# Additional settings to use when cross-compiling with MXE (http://mxe.cc/)\n\n##\n",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "##\n\n# Additional settings for MSYS\n\n##\n",
        "Line" : 306,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "##\n\n# Additional functions for colobot-lint\n\n##\n",
        "Line" : 311,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "##\n\n# MSVC specific settings\n\n##\n",
        "Line" : 317,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# only this works for some reason\n",
        "Line" : 324,
        "CharPositionInLine" : 23
      },
      "47" : {
        "Text" : "# use wingetopt library\n",
        "Line" : 325,
        "CharPositionInLine" : 21
      },
      "48" : {
        "Text" : "# Hide console in release builds\n",
        "Line" : 327,
        "CharPositionInLine" : 4
      },
      "49" : {
        "Text" : "##\n\n# Localename\n\n##\n",
        "Line" : 333,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "##\n\n# Wingetopt\n\n##\n",
        "Line" : 340,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "##\n\n# Doxygen docs\n\n##\n",
        "Line" : 349,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "##\n\n# Targets\n\n##\n",
        "Line" : 364,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# Installation paths defined before compiling sources\n",
        "Line" : 368,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# We need to use STRING because PATH doesn't accept relative paths\n",
        "Line" : 370,
        "CharPositionInLine" : 4
      },
      "55" : {
        "Text" : "# Subdirectory with sources\n",
        "Line" : 396,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# Google Test library\n",
        "Line" : 406,
        "CharPositionInLine" : 4
      },
      "57" : {
        "Text" : "# Hippomocks library\n",
        "Line" : 419,
        "CharPositionInLine" : 4
      },
      "58" : {
        "Text" : "# Tests targets\n",
        "Line" : 422,
        "CharPositionInLine" : 4
      },
      "59" : {
        "Text" : "##\n\n# Installation\n\n##\n",
        "Line" : 429,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# Data: check if the submodule handles its own installation\n",
        "Line" : 433,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# Documentation\n",
        "Line" : 441,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 62
    },
    "cmake/FindGLEW.cmake" : {
      "ObjectId" : "94c9b327bd5332e75ebfd1fec108450bcfe4eeab",
      "LastModified" : "2012-07-28T21:36:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake module to find GLEW\n\n# Borrowed from http://code.google.com/p/nvidia-texture-tools/\n\n# MIT license Copyright (c) 2007 NVIDIA Corporation\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Try to find GLEW library and include path.\n\n# Once done this will define\n\n#\n\n# GLEW_FOUND\n\n# GLEW_INCLUDE_PATH\n\n# GLEW_LIBRARY\n\n#\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# for MinGW's MSYS\n",
        "Line" : 21,
        "CharPositionInLine" : 15
      },
      "3" : {
        "Text" : "# or in local directory\n",
        "Line" : 23,
        "CharPositionInLine" : 35
      },
      "CommentCount" : 4
    },
    "cmake/FindLibSndFile.cmake" : {
      "ObjectId" : "7a6d32b6733c3935c7b9d3f265638c3088adaf08",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Base Io build system\n\n# Written by Jeremy Tregunna <jeremy.tregunna@me.com>\n\n#\n\n# Find libsndfile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindPhysFS.cmake" : {
      "ObjectId" : "6d4c93d466b8696ca978163d6f04c84dd4012427",
      "LastModified" : "2018-06-04T07:17:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# PHYSFS_FOUND\n\n# PHYSFS_INCLUDE_PATH\n\n# PHYSFS_LIBRARY\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindSDL2.cmake" : {
      "ObjectId" : "236d6b4b9ceea2f12bcc81ca6f66e3649f5460cf",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate SDL2 library\n\n# This module defines\n\n# SDL2_LIBRARY, the name of the library to link against\n\n# SDL2_FOUND, if false, do not try to link to SDL2\n\n# SDL2_INCLUDE_DIR, where to find SDL.h\n\n#\n\n# This module responds to the the flag:\n\n# SDL2_BUILDING_LIBRARY\n\n# If this is defined, then no SDL2main will be linked in because\n\n# only applications need main().\n\n# Otherwise, it is assumed you are building an application and this\n\n# module will attempt to locate and set the the proper link flags\n\n# as part of the returned SDL2_LIBRARY variable.\n\n#\n\n# Don't forget to include SDLmain.h and SDLmain.m your project for the\n\n# OS X framework based version. (Other versions link to -lSDL2main which\n\n# this module will try to find on your behalf.) Also for OS X, this\n\n# module will automatically add the -framework Cocoa on your behalf.\n\n#\n\n#\n\n# Additional Note: If you see an empty SDL2_LIBRARY_TEMP in your configuration\n\n# and no SDL2_LIBRARY, it means CMake did not find your SDL2 library\n\n# (SDL2.dll, libsdl2.so, SDL2.framework, etc).\n\n# Set SDL2_LIBRARY_TEMP to point to your SDL2 library, and configure again.\n\n# Similarly, if you see an empty SDL2MAIN_LIBRARY, you should set this value\n\n# as appropriate. These values are used to generate the final SDL2_LIBRARY\n\n# variable, but when these values are unset, SDL2_LIBRARY does not get created.\n\n#\n\n#\n\n# $SDL2DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$SDL2DIR\n\n# used in building SDL2.\n\n# l.e.galup  9-20-02\n\n#\n\n# Modified by Eric Wing.\n\n# Added code to assist with automated building by using environmental variables\n\n# and providing a more controlled/consistent search behavior.\n\n# Added new modifications to recognize OS X frameworks and\n\n# additional Unix paths (FreeBSD, etc).\n\n# Also corrected the header search path to follow \"proper\" SDL guidelines.\n\n# Added a search for SDL2main which is needed by some platforms.\n\n# Added a search for threads which is needed by some platforms.\n\n# Added needed compile switches for MinGW.\n\n#\n\n# On OSX, this will prefer the Framework version (if found) over others.\n\n# People will have to manually change the cache values of\n\n# SDL2_LIBRARY to override this selection or set the CMake environment\n\n# CMAKE_INCLUDE_PATH to modify the search paths.\n\n#\n\n# Note that the header path has changed from SDL2/SDL.h to just SDL.h\n\n# This needed to change because \"proper\" SDL convention\n\n# is #include \"SDL.h\", not <SDL2/SDL.h>. This is done for portability\n\n# reasons because not all systems place things in SDL2/ (see FreeBSD).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2003-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fink\n",
        "Line" : 73,
        "CharPositionInLine" : 5
      },
      "3" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 74,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : "# Blastwave\n",
        "Line" : 75,
        "CharPositionInLine" : 10
      },
      "5" : {
        "Text" : "# Non-OS X framework versions expect you to also dynamically link to\n\n# SDL2main. This is mainly for Windows and OS X. Other (Unix) platforms\n\n# seem to provide SDL2main for compatibility even though they don't\n\n# necessarily need it.\n",
        "Line" : 96,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# SDL2 may require threads on your system.\n\n# The Apple build may not need an explicit flag because one of the\n\n# frameworks may already provide it.\n\n# But for non-OSX systems, I will use the CMake Threads package.\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# MinGW needs an additional library, mwindows\n\n# It's total link flags should look like -lmingw32 -lSDL2main -lSDL2 -lmwindows\n\n# (Actually on second look, I think it only needs one of the m* libraries.)\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# For SDL2main\n",
        "Line" : 126,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# For OS X, SDL2 uses Cocoa as a backend so it must link to Cocoa.\n\n# CMake doesn't display the -framework Cocoa string in the UI even\n\n# though it actually is there if I modify a pre-used variable.\n\n# I think it has something to do with the CACHE STRING.\n\n# So I use a temporary variable until the end so I can set the\n\n# \"real\" variable in one-shot.\n",
        "Line" : 133,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# For threads, as mentioned Apple doesn't need this.\n\n# In fact, there seems to be a problem if I used the Threads package\n\n# and try using this line, so I'm just skipping it entirely for OS X.\n",
        "Line" : 143,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# For MinGW library\n",
        "Line" : 150,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# Set the final string here so the GUI reflects the final state.\n",
        "Line" : 155,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# Set the temp variable to INTERNAL so it is not seen in the CMake GUI\n",
        "Line" : 157,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 14
    },
    "cmake/FindSDL2_image.cmake" : {
      "ObjectId" : "78704cbeb1c52f8d166d17dc948b40a178b69880",
      "LastModified" : "2016-03-29T14:06:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate SDL2_image library\n\n# This module defines\n\n# SDL2_IMAGE_LIBRARY, the name of the library to link against\n\n# SDL2_IMAGE_FOUND, if false, do not try to link to SDL2_image\n\n# SDL2_IMAGE_INCLUDE_DIR, where to find SDL_image.h\n\n#\n\n# Additional Note: If you see an empty SDL2_IMAGE_LIBRARY_TEMP in your configuration\n\n# and no SDL2_IMAGE_LIBRARY, it means CMake did not find your SDL2_Image library\n\n# (SDL2_image.dll, libsdl2_image.so, SDL2_image.framework, etc).\n\n# Set SDL2_IMAGE_LIBRARY_TEMP to point to your SDL2 library, and configure again.\n\n# Similarly, if you see an empty SDL2MAIN_LIBRARY, you should set this value\n\n# as appropriate. These values are used to generate the final SDL2_IMAGE_LIBRARY\n\n# variable, but when these values are unset, SDL2_IMAGE_LIBRARY does not get created.\n\n#\n\n# $SDL2 is an environment variable that would\n\n# correspond to the ./configure --prefix=$SDL2\n\n# used in building SDL2.\n\n# l.e.galup 9-20-02\n\n#\n\n# Modified by Eric Wing.\n\n# Added code to assist with automated building by using environmental variables\n\n# and providing a more controlled/consistent search behavior.\n\n# Added new modifications to recognize OS X frameworks and\n\n# additional Unix paths (FreeBSD, etc).\n\n# Also corrected the header search path to follow \"proper\" SDL2 guidelines.\n\n# Added a search for SDL2main which is needed by some platforms.\n\n# Added a search for threads which is needed by some platforms.\n\n# Added needed compile switches for MinGW.\n\n#\n\n# On OSX, this will prefer the Framework version (if found) over others.\n\n# People will have to manually change the cache values of\n\n# SDL2_IMAGE_LIBRARY to override this selection or set the CMake environment\n\n# CMAKE_INCLUDE_PATH to modify the search paths.\n\n#\n\n# Note that the header path has changed from SDL2/SDL.h to just SDL.h\n\n# This needed to change because \"proper\" SDL2 convention\n\n# is #include \"SDL.h\", not <SDL2/SDL.h>. This is done for portability\n\n# reasons because not all systems place things in SDL2/ (see FreeBSD).\n\n#\n\n# Ported by Johnny Patterson. This is a literal port for SDL2 of the FindSDL.cmake\n\n# module with the minor edit of changing \"SDL\" to \"SDL2\" where necessary. This\n\n# was not created for redistribution, and exists temporarily pending official\n\n# SDL2 CMake modules.\n\n# \n\n# Note that on windows this will only search for the 32bit libraries, to search\n\n# for 64bit change x86/i686-w64 to x64/x86_64-w64\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2003-2009 Kitware, Inc.\n\n#\n\n# CMake - Cross Platform Makefile Generator\n\n# Copyright 2000-2014 Kitware, Inc.\n\n# Copyright 2000-2011 Insight Software Consortium\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright\n\n# notice, this list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright\n\n# notice, this list of conditions and the following disclaimer in the\n\n# documentation and/or other materials provided with the distribution.\n\n#\n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n# nor the names of their contributors may be used to endorse or promote\n\n# products derived from this software without specific prior written\n\n# permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n# License text for the above reference.)\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fink\n",
        "Line" : 104,
        "CharPositionInLine" : 5
      },
      "3" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 105,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : "# Blastwave\n",
        "Line" : 106,
        "CharPositionInLine" : 10
      },
      "5" : {
        "Text" : "# Lookup the 64 bit libs on x64\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# On 32bit build find the 32bit libs\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Set the final string here so the GUI reflects the final state.\n",
        "Line" : 148,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# Set the temp variable to INTERNAL so it is not seen in the CMake GUI\n",
        "Line" : 150,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 9
    },
    "cmake/FindSDL2_ttf.cmake" : {
      "ObjectId" : "9f38607e41b8c6a1ca0260f5128df42bea9ef015",
      "LastModified" : "2016-03-29T14:06:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate SDL2_ttf library\n\n# This module defines\n\n# SDL2_TTF_LIBRARY, the name of the library to link against\n\n# SDL2_TTF_FOUND, if false, do not try to link to SDL2_ttf\n\n# SDL2_TTF_INCLUDE_DIR, where to find SDL_image.h\n\n#\n\n# Additional Note: If you see an empty SDL2_TTF_LIBRARY_TEMP in your configuration\n\n# and no SDL2_TTF_LIBRARY, it means CMake did not find your SDL2_Image library\n\n# (SDL2_ttf.dll, libsdl2_image.so, SDL2_ttf.framework, etc).\n\n# Set SDL2_TTF_LIBRARY_TEMP to point to your SDL2 library, and configure again.\n\n# Similarly, if you see an empty SDL2MAIN_LIBRARY, you should set this value\n\n# as appropriate. These values are used to generate the final SDL2_TTF_LIBRARY\n\n# variable, but when these values are unset, SDL2_TTF_LIBRARY does not get created.\n\n#\n\n# $SDL2 is an environment variable that would\n\n# correspond to the ./configure --prefix=$SDL2\n\n# used in building SDL2.\n\n# l.e.galup 9-20-02\n\n#\n\n# Modified by Eric Wing.\n\n# Added code to assist with automated building by using environmental variables\n\n# and providing a more controlled/consistent search behavior.\n\n# Added new modifications to recognize OS X frameworks and\n\n# additional Unix paths (FreeBSD, etc).\n\n# Also corrected the header search path to follow \"proper\" SDL2 guidelines.\n\n# Added a search for SDL2main which is needed by some platforms.\n\n# Added a search for threads which is needed by some platforms.\n\n# Added needed compile switches for MinGW.\n\n#\n\n# On OSX, this will prefer the Framework version (if found) over others.\n\n# People will have to manually change the cache values of\n\n# SDL2_TTF_LIBRARY to override this selection or set the CMake environment\n\n# CMAKE_INCLUDE_PATH to modify the search paths.\n\n#\n\n# Note that the header path has changed from SDL2/SDL.h to just SDL.h\n\n# This needed to change because \"proper\" SDL2 convention\n\n# is #include \"SDL.h\", not <SDL2/SDL.h>. This is done for portability\n\n# reasons because not all systems place things in SDL2/ (see FreeBSD).\n\n#\n\n# Ported by Johnny Patterson. This is a literal port for SDL2 of the FindSDL.cmake\n\n# module with the minor edit of changing \"SDL\" to \"SDL2\" where necessary. This\n\n# was not created for redistribution, and exists temporarily pending official\n\n# SDL2 CMake modules.\n\n# \n\n# Note that on windows this will only search for the 32bit libraries, to search\n\n# for 64bit change x86/i686-w64 to x64/x86_64-w64\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2003-2009 Kitware, Inc.\n\n#\n\n# CMake - Cross Platform Makefile Generator\n\n# Copyright 2000-2014 Kitware, Inc.\n\n# Copyright 2000-2011 Insight Software Consortium\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright\n\n# notice, this list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright\n\n# notice, this list of conditions and the following disclaimer in the\n\n# documentation and/or other materials provided with the distribution.\n\n#\n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n# nor the names of their contributors may be used to endorse or promote\n\n# products derived from this software without specific prior written\n\n# permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n# License text for the above reference.)\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fink\n",
        "Line" : 103,
        "CharPositionInLine" : 5
      },
      "3" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 104,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : "# Blastwave\n",
        "Line" : 105,
        "CharPositionInLine" : 10
      },
      "5" : {
        "Text" : "# Lookup the 64 bit libs on x64\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# On 32bit build find the 32bit libs\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Set the final string here so the GUI reflects the final state.\n",
        "Line" : 147,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# Set the temp variable to INTERNAL so it is not seen in the CMake GUI\n",
        "Line" : 149,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 9
    },
    "cmake/colobot-lint.cmake" : {
      "ObjectId" : "0fb019b2c38258cdcaaded9fa17b0147b232ba95",
      "LastModified" : "2016-03-29T14:06:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Some functions for use with colobot-lint\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##\n\n# This adds a new target with generated fake source files that include single header files\n\n# It is a workaround for how CMake and Clang handle header files in compilation database\n\n# And we need that to check each header file in the project exactly once, the same as .cpp modules\n\n##\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/msys.cmake" : {
      "ObjectId" : "8a6223352143771dbc5a60ca275d7ad1c26a87fc",
      "LastModified" : "2016-03-29T14:06:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Hacks for MSYS\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# fixes putenv()\n",
        "Line" : 9,
        "CharPositionInLine" : 68
      },
      "CommentCount" : 2
    },
    "cmake/mxe.cmake" : {
      "ObjectId" : "2c440c9f4435c856d46a0c9768566940dcc1004e",
      "LastModified" : "2016-03-29T14:06:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# When cross-compiling with MXE, we need to straighten some things\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Checking is a bit primitive, but this should detect MXE toolchain file\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# All must be static, CBOT and GLEW too\n",
        "Line" : 10,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# For some reason, these have to be absolute paths\n",
        "Line" : 26,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 4
    },
    "desktop/CMakeLists.txt" : {
      "ObjectId" : "af7049328468bc36bedfe6ca72a9925513ebfac2",
      "LastModified" : "2019-02-09T20:42:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Render SVG icon in various sizes\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Using xmlstarlet to edit SVG file is a workaround for rsvg-convert bug (see: https://bugzilla.gnome.org/show_bug.cgi?id=762115)\n",
        "Line" : 20,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# Prepare the ICNS icon generation\n",
        "Line" : 36,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Pack icon for Mac OS\n",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Install Desktop Entry file\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Install appdata\n",
        "Line" : 73,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Install Icon\n",
        "Line" : 79,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Translate translatable material\n",
        "Line" : 85,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Create manpage from pod-formatted file\n",
        "Line" : 99,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# This copes with the fact that english has no \"/LANG\" in the paths and filenames.\n",
        "Line" : 111,
        "CharPositionInLine" : 16
      },
      "10" : {
        "Text" : "# Create the english manpage\n",
        "Line" : 133,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# Translate the manpage to other languages\n",
        "Line" : 137,
        "CharPositionInLine" : 12
      },
      "12" : {
        "Text" : "##\n\n# Packaging\n\n##\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Don't version the install directory, and allow overwriting\n",
        "Line" : 180,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Install the executable directly in Program Files/Colobot/\n",
        "Line" : 183,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Branding\n\n## Installation and uninstallation icons\n",
        "Line" : 187,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "## Header and Left banner images\n",
        "Line" : 191,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "## Allow to directly run Colobot at the end of the installation\n",
        "Line" : 196,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "## TODO: Find a way to have no license prompt. Until that, display the GPL-3\n",
        "Line" : 199,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 19
    },
    "desktop/Info.plist.cmake" : {
      "ObjectId" : "21149090e01f4dc05fa6566f36e06cd7e064d189",
      "LastModified" : "2016-03-29T14:06:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "desktop/colobot.rc.cmake" : {
      "ObjectId" : "b40fcabab032f6dfea6ed25862c5bb4813509576",
      "LastModified" : "2016-03-29T14:06:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0,
      "Errorlog" : "line 11:29 token recognition error at: '\"colobot.exe\\0'\nline 12:33 token recognition error at: '\\0'\nline 13:71 token recognition error at: '\\0'\nline 14:46 token recognition error at: '\\0'\nline 15:38 token recognition error at: '\\0'\nline 16:65 token recognition error at: '\\0'\nline 17:47 token recognition error at: '\\0'\nline 18:50 token recognition error at: '\\0'\nline 23:21 token recognition error at: '\", 0x409, 1200\\n\\t\\tEND\\nEND\\n\u0000'\n"
    },
    "lib/gtest/CMakeLists.txt" : {
      "ObjectId" : "76c51ba9252bf5db549e5e6b94cb00a0c72a687d",
      "LastModified" : "2016-03-29T14:06:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# gtest-all.cc includes all other sources\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/localename/CMakeLists.txt" : {
      "ObjectId" : "c54648fbaad0f1669311caeb90022270e3465acd",
      "LastModified" : "2016-03-29T14:06:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/wingetopt/CMakeLists.txt" : {
      "ObjectId" : "bb45b846aed54f563ac57df2edf0e81af7ba955a",
      "LastModified" : "2016-03-29T14:06:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "po/CMakeLists.txt" : {
      "ObjectId" : "6a5d707323965ce1f8d62931187a970ebbbc8c1f",
      "LastModified" : "2016-07-11T07:27:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Extract translations\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Generate translations\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/CBot/CMakeLists.txt" : {
      "ObjectId" : "a9a83e2e2dfe855b281d9f4b97b1e2067e52f1ef",
      "LastModified" : "2018-06-04T07:17:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Includes\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "c58172bdd9048eaebd9b7538a4923de489e59119",
      "LastModified" : "2019-02-09T20:42:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Compile flags as defined in global CMakeLists\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Groups source files for IDE project\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Subdirectories\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Optional libraries\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Additional libraries per platform\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# MXE requires special treatment\n",
        "Line" : 42,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# because it isn't included in standard linking libraries\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# for clock_gettime\n",
        "Line" : 98,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Configure file\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Source files\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Libraries\n",
        "Line" : 586,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Includes\n",
        "Line" : 606,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Link directories\n",
        "Line" : 634,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Targets\n",
        "Line" : 640,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "src/common/config.h.cmake" : {
      "ObjectId" : "f6d0bcaeffed0ee00c9404349306654a32450e80",
      "LastModified" : "2018-06-04T07:17:51Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "// Macros set by CMake",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "// Assume we have the Mac OS X function CFLocaleCopyCurrent in the CoreFoundation framework",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/common/version.h.cmake" : {
      "ObjectId" : "ca377e4fb23bd83f422d6b2ba35f23842c8da62a",
      "LastModified" : "2019-02-09T20:42:05Z",
      "FileType" : "CMAKESOURCE",
      "CommentCount" : 0
    },
    "src/graphics/opengl/shaders/CMakeLists.txt" : {
      "ObjectId" : "716a9655dc82e4a1574e9c64ba88e526d536f132",
      "LastModified" : "2016-03-29T14:06:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tools/CMakeLists.txt" : {
      "ObjectId" : "c588f7b7b4de516b9850edc78f52813088d2dabf",
      "LastModified" : "2016-03-29T14:06:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "cd4c320b245dd5b3529e20c16a859ec2dee47858",
      "LastModified" : "2016-03-29T14:06:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Compile flags as defined in global CMakeLists\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Unit tests\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CBot tests\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "test/cbot/CMakeLists.txt" : {
      "ObjectId" : "ce1f8e2586d584ae3b463905bb7713cf54e0d32a",
      "LastModified" : "2016-03-29T14:06:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Includes\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Libraries\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Needed for error strings (TODO: why are they on Colobot side? :/)\n",
        "Line" : 11,
        "CharPositionInLine" : 16
      },
      "3" : {
        "Text" : "# Needed for colobotbase\n",
        "Line" : 12,
        "CharPositionInLine" : 20
      },
      "CommentCount" : 4
    },
    "test/unit/CMakeLists.txt" : {
      "ObjectId" : "cd60639777c058fcf8084b64204f6e18909b1182",
      "LastModified" : "2018-05-10T19:20:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Platform-dependent tests\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sources\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Includes\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Libraries\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Test files\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Targets\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# GoogleTest isn't compatible with -Wsuggest-override -Werror:\n\n# see https://github.com/google/googletest/issues/1063\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    }
  },
  "FileTypes" : {
    "CMAKE" : 24,
    "CMAKESOURCE" : 2
  },
  "ElapsedTime" : 3669
}