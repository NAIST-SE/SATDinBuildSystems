{
  "Repository" : "2283104",
  "Revision" : "HEAD",
  "ObjectId" : "d1cc9ed1fc59071cc1c3afad4345d7e5b6cd8873",
  "CommitTime" : "2018-10-03T00:04:39Z",
  "Files" : {
    "Makefile" : {
      "ObjectId" : "ac5191b1b2831ba39e6a7d8d8c13dd78b1acd7f9",
      "LastModified" : "2018-02-14T09:04:12Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "docs/Makefile" : {
      "ObjectId" : "b9582d9adf03768489acd115c9c04879e7da33f5",
      "LastModified" : "2014-08-10T18:11:50Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Internal variables.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "ooni/nettests/third_party/Makefile" : {
      "ObjectId" : "16adfe0e665267e6efc08ee47512a4adef4717fa",
      "LastModified" : "2014-08-10T18:11:50Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "scripts/set_caps/Makefile" : {
      "ObjectId" : "bc808436c431432ebbb94dd33ca77d00da698f17",
      "LastModified" : "2016-09-19T11:56:08Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Wrappers for running ooniprobe as a non-root user.\n\n#\n\n# Build-Depends: cython, pythonX.Y-dev, libcap2-bin\n\n# Depends: libpythonX.Y\n\n#\n\n# $ make && make check\n\n# $ sudo make install # after installing the rest of ooni-probe\n\n# $ make installcheck_unsafe # runs complete tests as non-root\n\n#\n\n# `make` builds a program that has file capabilities set on it. This is just\n\n# ./ooniprobe compiled into a C program using Cython, so that one can set\n\n# capabilities directly on the resulting binary. This way, we avoid the need\n\n# for a separate child python interpreter with its own capabilities. Another\n\n# advantage is that libpython.so (needed by the program) would be automatically\n\n# upgraded by the system package manager. The version of python is hard-coded\n\n# into the wrapper at build time; making this dynamic is possible, but much\n\n# more complex and not yet implemented.\n\n#\n\n# Execution may additionally be limited to a particular unix group by using\n\n# chgrp(1) and chmod(1) to 'o-x,g+x' after installation.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# GNU Makefile conventions, see https://www.gnu.org/prep/standards/html_node/Makefile-Conventions.html\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Unfortunately cython --embed ignores the arguments in the shebang line\n\n# So we need to patch the generated code ourselves.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# test that setcapped binary ignores PYTHONPATH\n",
        "Line" : 65,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# run a standard check. note that because of hardcoded paths (for security)\n\n# this can only work after you've installed your development copy\n",
        "Line" : 74,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 5,
      "Errorlog" : "line 60:39 token recognition error at: '\\1'\n"
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 4
  },
  "ElapsedTime" : 1233
}