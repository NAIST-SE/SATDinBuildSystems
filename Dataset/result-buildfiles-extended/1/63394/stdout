{
  "Repository" : "63394",
  "Revision" : "HEAD",
  "ObjectId" : "21e2e9d653d291a7dc36d21b6fc14b2a0da48985",
  "CommitTime" : "2017-07-26T17:47:50Z",
  "Files" : {
    "pom.xml" : {
      "ObjectId" : "c2e17d26724e5e4055d2d5f15ea9368a0cfd8863",
      "LastModified" : "2015-09-10T10:23:52Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "\n  ~ Copyright 2015 multibit.org\n  ~\n  ~ Licensed under the MIT license (the \"License\");\n  ~ you may not use this file except in compliance with the License.\n  ~ You may obtain a copy of the License at\n  ~\n  ~    http://opensource.org/licenses/mit-license.php\n  ~\n  ~ Unless required by applicable law or agreed to in writing, software\n  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  ~ See the License for the specific language governing permissions and\n  ~ limitations under the License.\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : " Use \"mvn clean package\" to build the code packaged into a basic multibit.jar \n  \t\tUse \"mvn clean verify\" before submitting a patch Use \"mvn clean install\" \n  \t\tto build the executable jar, installers and Mac DMG Use \"mvn site:site\" to \n  \t\tgenerate a complete website under target/site Use \"mvn site:run\" to run a \n  \t\tlocal webserver localhost:8080/index.html ",
        "Line" : 33,
        "CharPositionInLine" : 50
      },
      "2" : {
        "Text" : " Public read-only source ",
        "Line" : 49,
        "CharPositionInLine" : 41
      },
      "3" : {
        "Text" : " Bitcoinj release repo ",
        "Line" : 54,
        "CharPositionInLine" : 39
      },
      "4" : {
        "Text" : " zxing release repo ",
        "Line" : 60,
        "CharPositionInLine" : 36
      },
      "5" : {
        "Text" : " MultiBit repository for releases ",
        "Line" : 66,
        "CharPositionInLine" : 50
      },
      "6" : {
        "Text" : " MultiBit staging repository for snapshots ",
        "Line" : 72,
        "CharPositionInLine" : 59
      },
      "7" : {
        "Text" : " Sonatype snapshot repo ",
        "Line" : 78,
        "CharPositionInLine" : 40
      },
      "8" : {
        "Text" : " filter properties files e.g. version.properties ",
        "Line" : 94,
        "CharPositionInLine" : 69
      },
      "9" : {
        "Text" : " Standard compile to ensure Java7 is used in all environments (e.g. Jenkins) ",
        "Line" : 113,
        "CharPositionInLine" : 97
      },
      "10" : {
        "Text" : " Create main executable jar - all classes ",
        "Line" : 127,
        "CharPositionInLine" : 62
      },
      "11" : {
        "Text" : " Produce staging directory with all resources used in creation of the installers ",
        "Line" : 151,
        "CharPositionInLine" : 101
      },
      "12" : {
        "Text" : " Use the Enforcer to verify build integrity ",
        "Line" : 205,
        "CharPositionInLine" : 64
      },
      "13" : {
        "Text" : " Create a snapshot to build the list of URNs below ",
        "Line" : 221,
        "CharPositionInLine" : 95
      },
      "14" : {
        "Text" : " List of required hashes ",
        "Line" : 224,
        "CharPositionInLine" : 69
      },
      "15" : {
        "Text" : " Format is URN of groupId:artifactId:version:type:classifier:scope:hash ",
        "Line" : 225,
        "CharPositionInLine" : 116
      },
      "16" : {
        "Text" : " classifier is \"null\" if not present ",
        "Line" : 226,
        "CharPositionInLine" : 81
      },
      "17" : {
        "Text" : " A check for the rules themselves ",
        "Line" : 366,
        "CharPositionInLine" : 82
      },
      "18" : {
        "Text" : " Ensure we download the enforcer rules ",
        "Line" : 377,
        "CharPositionInLine" : 63
      },
      "19" : {
        "Text" : " spongycastle used by bitcoinj clones ",
        "Line" : 408,
        "CharPositionInLine" : 54
      },
      "20" : {
        "Text" : " zxing used for QR codes ",
        "Line" : 414,
        "CharPositionInLine" : 41
      },
      "21" : {
        "Text" : " XChange VirtEx exchange support ",
        "Line" : 443,
        "CharPositionInLine" : 49
      },
      "22" : {
        "Text" : " XChange Open Exchange Rates exchange support ",
        "Line" : 449,
        "CharPositionInLine" : 62
      },
      "23" : {
        "Text" : " XChange BTC-E exchange support ",
        "Line" : 455,
        "CharPositionInLine" : 48
      },
      "24" : {
        "Text" : " XChange Bitstamp exchange support ",
        "Line" : 461,
        "CharPositionInLine" : 51
      },
      "25" : {
        "Text" : " XChange CampBX exchange support ",
        "Line" : 467,
        "CharPositionInLine" : 49
      },
      "26" : {
        "Text" : " All time handling is through Joda Time ",
        "Line" : 488,
        "CharPositionInLine" : 56
      },
      "27" : {
        "Text" : " All money handling is through Joda Money ",
        "Line" : 494,
        "CharPositionInLine" : 58
      },
      "28" : {
        "Text" : " Generate cross-referenced HTML source code listing ",
        "Line" : 514,
        "CharPositionInLine" : 72
      },
      "29" : {
        "Text" : " Source encoding ",
        "Line" : 524,
        "CharPositionInLine" : 33
      },
      "30" : {
        "Text" : " Location of staging directory for creation of installer ",
        "Line" : 527,
        "CharPositionInLine" : 73
      },
      "31" : {
        "Text" : " Version of bitcoinj to use ",
        "Line" : 531,
        "CharPositionInLine" : 44
      },
      "32" : {
        "Text" : " Version of XChange to use ",
        "Line" : 534,
        "CharPositionInLine" : 43
      },
      "33" : {
        "Text" : " Version of spongycastle to use ",
        "Line" : 537,
        "CharPositionInLine" : 48
      },
      "CommentCount" : 34
    }
  },
  "FileTypes" : {
    "MAVEN" : 1
  },
  "ElapsedTime" : 1008
}