{
  "Repository" : "14534297",
  "Revision" : "HEAD",
  "ObjectId" : "f2405c4a82ac73566ba91859c6afd4b2f128c230",
  "CommitTime" : "2018-07-07T19:32:13Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "52fec6ec4167fe9f1154d4a20fa07faf4cd9fd7c",
      "LastModified" : "2018-07-07T19:32:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configure paths\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configure compiler options\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Get arch\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#message(STATUS \"System name:  ${CMAKE_SYSTEM_NAME}\")\n\n#message(STATUS \"Architecture: ${ARCH}\")\n\n#message(STATUS \"System processor: ${CMAKE_SYSTEM_PROCESSOR}\")\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Check dependencies\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#    add_definitions(\"-DNO_CPP11_STRING\")\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "Makefile" : {
      "ObjectId" : "45248814900cba869363476da43802ba91f62269",
      "LastModified" : "2015-01-01T18:15:20Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "client/CMakeLists.txt" : {
      "ObjectId" : "b07ec9a86a66a2fad5820587b736f3ef156aaf4c",
      "LastModified" : "2018-03-16T17:29:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Bonjour\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# CoreAudio\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Avahi\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# ALSA\n",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# if OGG then tremor or vorbis\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Tremor (fixed-point) or libvorbis (floating-point)\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "client/Makefile" : {
      "ObjectId" : "baf2146848ae578d6bc05b0994eda92512f9785f",
      "LastModified" : "2018-07-07T19:32:13Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#    This file is part of snapcast\n\n#   Copyright (C) 2014-2018  Johannes Pohl\n\n#\n\n#   This program is free software: you can redistribute it and/or modify\n\n#   it under the terms of the GNU General Public License as published by\n\n#   the Free Software Foundation, either version 3 of the License, or\n\n#   (at your option) any later version.\n\n#\n\n#   This program is distributed in the hope that it will be useful,\n\n#   but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n#   GNU General Public License for more details.\n\n#\n\n#   You should have received a copy of the GNU General Public License\n\n#   along with this program.  If not, see <http://www.gnu.org/licenses/>.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# dh_auto_install (Debian) sets this variable\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Simplify building debuggable executables 'make DEBUG=-g STRIP=echo'\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#sudo apt-get install build-essential debhelper dh-make dh-systemd quilt fakeroot lintian\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/CheckCXX11StringSupport.cmake" : {
      "ObjectId" : "a09880811417b2743416f9f1e177b556cb5553ed",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is part of snapcast\n\n# Copyright (C) 2014-2018  Johannes Pohl\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This program is free software: you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation, either version 3 of the License, or\n\n# (at your option) any later version.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# You should have received a copy of the GNU General Public License\n\n# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#[=======================================================================[.rst:\nCheckCXX11StringSupport\n----------------------\n\nCheck if the C++ compiler supports std::to_string, std::stoi, ...\nSee also: https://stackoverflow.com/questions/17950814/how-to-use-stdstoul-and-stdstoull-in-android/18124627#18124627\n\n.. command:: CHECK_CXX11_STRING_SUPPORT\n\n  ::\n\n    CHECK_CXX11_STRING_SUPPORT(resultVar)\n\n  Checks support for std::to_string, std::stoul, std::stoi, std::stod.\n  The result will be stored in the internal cache variable specified\n  by ``resultVar``, with a boolean true value for success and boolean false for\n  failure.\n#]=======================================================================]",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/TargetArch.cmake" : {
      "ObjectId" : "9251ba89b38271a5ef221dca3075205e97e9a8f8",
      "LastModified" : "2018-02-03T20:29:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Based on the Qt 5 processor detection code, so should be very accurate\n\n# https://qt.gitorious.org/qt/qtbase/blobs/master/src/corelib/global/qprocessordetection.h\n\n# Currently handles arm (v5, v6, v7), x86 (32/64), ia64, and ppc (32/64)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Regarding POWER/PowerPC, just as is noted in the Qt source,\n\n# \"There are many more known variants/revisions that we do not handle/detect.\"\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set ppc_support to TRUE before including this file or ppc and ppc64\n\n# will be treated as invalid architectures since they are no longer supported by Apple\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# On OS X we use CMAKE_OSX_ARCHITECTURES *if* it was set\n\n# First let's normalize the order of the values\n",
        "Line" : 55,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Note that it's not possible to compile PowerPC applications if you are using\n\n# the OS X SDK version 10.6 or later - you'll need 10.4/10.5 for that, so we\n\n# disable it by default\n\n# See this page for more information:\n\n# http://stackoverflow.com/questions/5333490/how-can-we-restore-ppc-ppc64-as-well-as-full-10-4-10-5-sdk-support-to-xcode-4\n",
        "Line" : 58,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Architecture defaults to i386 or ppc on OS X 10.5 and earlier, depending on the CPU type detected at runtime.\n\n# On OS X 10.6+ the default is x86_64 if the CPU supports it, i386 otherwise.\n",
        "Line" : 64,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Now add all the architectures in our normalized order\n",
        "Line" : 81,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Detect the architecture in a rather creative way...\n\n# This compiles a small C program which is a series of ifdefs that selects a\n\n# particular #error preprocessor directive whose message string contains the\n\n# target architecture. The program will always fail to compile (both because\n\n# file is not a valid C program, and obviously because of the presence of the\n\n# #error preprocessor directives... but by exploiting the preprocessor in this\n\n# way, we can detect the correct target architecture even when cross-compiling,\n\n# since the program itself never needs to be run (only the compiler/preprocessor)\n",
        "Line" : 102,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# Parse the architecture name from the compiler output\n",
        "Line" : 119,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Get rid of the value marker leaving just the architecture name\n",
        "Line" : 122,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# If we are compiling with an unknown architecture this variable should\n\n# already be set to \"unknown\" but in the case that it's empty (i.e. due\n\n# to a typo in the code), then set it to unknown\n",
        "Line" : 125,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 11
    },
    "cmake/modules/FindAsio.cmake" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2018-02-03T20:29:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "common/CMakeLists.txt" : {
      "ObjectId" : "f8891ded76c26c44f29cfd9b6e3b3e379bf4d31b",
      "LastModified" : "2018-03-16T17:29:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "externals/Makefile" : {
      "ObjectId" : "a637d49d2b93e209a3593fa0cc66d31c19a604e7",
      "LastModified" : "2018-02-19T19:04:28Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#    This file is part of snapcast\n\n#   Copyright (C) 2014-2018  Johannes Pohl\n\n#\n\n#   This program is free software: you can redistribute it and/or modify\n\n#   it under the terms of the GNU General Public License as published by\n\n#   the Free Software Foundation, either version 3 of the License, or\n\n#   (at your option) any later version.\n\n#\n\n#   This program is distributed in the hope that it will be useful,\n\n#   but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n#   GNU General Public License for more details.\n\n#\n\n#   You should have received a copy of the GNU General Public License\n\n#   along with this program.  If not, see <http://www.gnu.org/licenses/>.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\tif [ ! -d \"flac\" ]; then \\\n#\t\t$(error flac directory missing); \\\n#\tfi; \\\n#\tif [ ! -d ogg ]; then \\\n#\t\t$(error ogg directory missing); \\\n#\tfi; \\\n#\tif [ ! -d tremor ]; then \\\n#\t\t$(error tremor directory missing); \\\n#\tfi\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "server/CMakeLists.txt" : {
      "ObjectId" : "48b15654870acd4c04ce0f96aaa010fb0b873a9e",
      "LastModified" : "2018-07-01T18:51:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Avahi\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#    list(APPEND SERVER_LIBRARIES ${BONJOUR_LIBRARIES})\n\n#    list(APPEND SERVER_INCLUDE ${BONJOUR_INCLUDE_DIRS})\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "server/Makefile" : {
      "ObjectId" : "09b79b78d3f9e2ec4786d0a0608ef2ff33c3ac15",
      "LastModified" : "2018-07-07T19:32:13Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#    This file is part of snapcast\n\n#   Copyright (C) 2014-2018  Johannes Pohl\n\n#\n\n#   This program is free software: you can redistribute it and/or modify\n\n#   it under the terms of the GNU General Public License as published by\n\n#   the Free Software Foundation, either version 3 of the License, or\n\n#   (at your option) any later version.\n\n#\n\n#   This program is distributed in the hope that it will be useful,\n\n#   but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n#   GNU General Public License for more details.\n\n#\n\n#   You should have received a copy of the GNU General Public License\n\n#   along with this program.  If not, see <http://www.gnu.org/licenses/>.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# dh_auto_install (Debian) sets this variable\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Simplify building debuggable executables 'make DEBUG=-g STRIP=echo'\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#sudo apt-get install build-essential debhelper dh-make dh-systemd quilt fakeroot lintian\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    }
  },
  "FileTypes" : {
    "CMAKE" : 7,
    "MAKEFILE" : 4
  },
  "ElapsedTime" : 1588
}