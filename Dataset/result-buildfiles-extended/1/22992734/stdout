{
  "Repository" : "22992734",
  "Revision" : "HEAD",
  "ObjectId" : "5d10497b0dfc51c4c7e7f4de3cc9c4f2d9c47755",
  "CommitTime" : "2017-02-27T22:38:55Z",
  "Files" : {
    "codes/mcmc/mcmc_HPC/mcmc_mpi/Makefile" : {
      "ObjectId" : "7effee034e5d5d525dcd0296e75588f1dbff265e",
      "LastModified" : "2016-04-23T16:24:30Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "codes/mcmc/mcmc_HPC/mcmc_mpi_alt/Makefile" : {
      "ObjectId" : "9b0f18651ff59dfcb60a9a40d17e2711d5271a70",
      "LastModified" : "2016-05-16T23:30:31Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Project subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Linker Flags and Libraries\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Name of final Executable\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# inc files and object files\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Notes: $@ refers to the file name of the target of the rule\n\n#        $< refers to the name of the first prerequisite\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# This is a poor way to do this, actually, because an object\n\n# file depends on all header files. I suppose we don't expect\n\n# the headers to change very often. It would be cleaner to build\n\n# a list of header files that each source file depends on, especially\n\n# since this will be a relatively small project.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "codes/mcmc/mcmc_HPC/mcmc_serial/Makefile" : {
      "ObjectId" : "c823d0a01f61be95a2dff2e1f16cf9e1afa2babd",
      "LastModified" : "2016-04-24T22:07:06Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "codes/mcmc/mcmc_HPC/mcmc_vectorized/Makefile" : {
      "ObjectId" : "1111b91b42422c391cda1b8402aed011b9e1cb60",
      "LastModified" : "2016-04-24T22:07:06Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "codes/mcmc/mcmc_HPC/tmp_tests/Makefile" : {
      "ObjectId" : "e7dbb21626cc3f03a1cd9265859264498ff07221",
      "LastModified" : "2016-04-19T04:01:31Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "codes/referee_questions/10000_mocks/prepare_mocks/Makefile" : {
      "ObjectId" : "2de379749e6c3851ca24edc3379ba9f6026e666f",
      "LastModified" : "2016-10-03T16:54:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Project subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CC=gcc\n\n# CFLAGS=-I$(INCDIR) -Wall -O3\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Linker Flags and Libraries\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Name of final Executable\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# inc files and object files\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Notes: $@ refers to the file name of the target of the rule\n\n#        $< refers to the name of the first prerequisite\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This is a poor way to do this, actually, because an object\n\n# file depends on all header files. I suppose we don't expect\n\n# the headers to change very often. It would be cleaner to build\n\n# a list of header files that each source file depends on, especially\n\n# since this will be a relatively small project.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "codes/referee_questions/error_grid/5000_mocks_183/prepare_mocks/Makefile" : {
      "ObjectId" : "2de379749e6c3851ca24edc3379ba9f6026e666f",
      "LastModified" : "2016-11-26T18:10:04Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Project subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CC=gcc\n\n# CFLAGS=-I$(INCDIR) -Wall -O3\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Linker Flags and Libraries\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Name of final Executable\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# inc files and object files\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Notes: $@ refers to the file name of the target of the rule\n\n#        $< refers to the name of the first prerequisite\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This is a poor way to do this, actually, because an object\n\n# file depends on all header files. I suppose we don't expect\n\n# the headers to change very often. It would be cleaner to build\n\n# a list of header files that each source file depends on, especially\n\n# since this will be a relatively small project.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "codes/referee_questions/error_grid/5000_mocks_193/prepare_mocks/Makefile" : {
      "ObjectId" : "2de379749e6c3851ca24edc3379ba9f6026e666f",
      "LastModified" : "2016-11-26T18:16:41Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Project subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CC=gcc\n\n# CFLAGS=-I$(INCDIR) -Wall -O3\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Linker Flags and Libraries\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Name of final Executable\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# inc files and object files\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Notes: $@ refers to the file name of the target of the rule\n\n#        $< refers to the name of the first prerequisite\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This is a poor way to do this, actually, because an object\n\n# file depends on all header files. I suppose we don't expect\n\n# the headers to change very often. It would be cleaner to build\n\n# a list of header files that each source file depends on, especially\n\n# since this will be a relatively small project.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "codes/referee_questions/error_grid/5000_mocks_203/prepare_mocks/Makefile" : {
      "ObjectId" : "2de379749e6c3851ca24edc3379ba9f6026e666f",
      "LastModified" : "2016-11-26T18:16:41Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Project subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CC=gcc\n\n# CFLAGS=-I$(INCDIR) -Wall -O3\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Linker Flags and Libraries\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Name of final Executable\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# inc files and object files\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Notes: $@ refers to the file name of the target of the rule\n\n#        $< refers to the name of the first prerequisite\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This is a poor way to do this, actually, because an object\n\n# file depends on all header files. I suppose we don't expect\n\n# the headers to change very often. It would be cleaner to build\n\n# a list of header files that each source file depends on, especially\n\n# since this will be a relatively small project.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "codes/referee_questions/error_grid/5000_mocks_213/prepare_mocks/Makefile" : {
      "ObjectId" : "2de379749e6c3851ca24edc3379ba9f6026e666f",
      "LastModified" : "2016-11-26T18:21:40Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Project subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CC=gcc\n\n# CFLAGS=-I$(INCDIR) -Wall -O3\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Linker Flags and Libraries\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Name of final Executable\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# inc files and object files\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Notes: $@ refers to the file name of the target of the rule\n\n#        $< refers to the name of the first prerequisite\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This is a poor way to do this, actually, because an object\n\n# file depends on all header files. I suppose we don't expect\n\n# the headers to change very often. It would be cleaner to build\n\n# a list of header files that each source file depends on, especially\n\n# since this will be a relatively small project.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "codes/referee_questions/error_grid/5000_mocks_223/prepare_mocks/Makefile" : {
      "ObjectId" : "2de379749e6c3851ca24edc3379ba9f6026e666f",
      "LastModified" : "2016-11-27T21:54:11Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Project subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CC=gcc\n\n# CFLAGS=-I$(INCDIR) -Wall -O3\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Linker Flags and Libraries\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Name of final Executable\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# inc files and object files\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Notes: $@ refers to the file name of the target of the rule\n\n#        $< refers to the name of the first prerequisite\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This is a poor way to do this, actually, because an object\n\n# file depends on all header files. I suppose we don't expect\n\n# the headers to change very often. It would be cleaner to build\n\n# a list of header files that each source file depends on, especially\n\n# since this will be a relatively small project.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "codes/referee_questions/error_grid/5000_mocks_233/prepare_mocks/Makefile" : {
      "ObjectId" : "2de379749e6c3851ca24edc3379ba9f6026e666f",
      "LastModified" : "2016-12-19T17:42:30Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Project subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CC=gcc\n\n# CFLAGS=-I$(INCDIR) -Wall -O3\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Linker Flags and Libraries\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Name of final Executable\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# inc files and object files\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Notes: $@ refers to the file name of the target of the rule\n\n#        $< refers to the name of the first prerequisite\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This is a poor way to do this, actually, because an object\n\n# file depends on all header files. I suppose we don't expect\n\n# the headers to change very often. It would be cleaner to build\n\n# a list of header files that each source file depends on, especially\n\n# since this will be a relatively small project.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "codes/referee_questions/error_grid/5000_mocks_243/prepare_mocks/Makefile" : {
      "ObjectId" : "2de379749e6c3851ca24edc3379ba9f6026e666f",
      "LastModified" : "2016-12-19T17:42:30Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Project subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CC=gcc\n\n# CFLAGS=-I$(INCDIR) -Wall -O3\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Linker Flags and Libraries\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Name of final Executable\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# inc files and object files\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Notes: $@ refers to the file name of the target of the rule\n\n#        $< refers to the name of the first prerequisite\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This is a poor way to do this, actually, because an object\n\n# file depends on all header files. I suppose we don't expect\n\n# the headers to change very often. It would be cleaner to build\n\n# a list of header files that each source file depends on, especially\n\n# since this will be a relatively small project.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "codes/referee_questions/error_grid/5000_mocks_253/prepare_mocks/Makefile" : {
      "ObjectId" : "2de379749e6c3851ca24edc3379ba9f6026e666f",
      "LastModified" : "2016-12-19T17:42:30Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Project subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CC=gcc\n\n# CFLAGS=-I$(INCDIR) -Wall -O3\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Linker Flags and Libraries\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Name of final Executable\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# inc files and object files\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Notes: $@ refers to the file name of the target of the rule\n\n#        $< refers to the name of the first prerequisite\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This is a poor way to do this, actually, because an object\n\n# file depends on all header files. I suppose we don't expect\n\n# the headers to change very often. It would be cleaner to build\n\n# a list of header files that each source file depends on, especially\n\n# since this will be a relatively small project.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "codes/referee_questions/error_grid/5000_mocks_263/prepare_mocks/Makefile" : {
      "ObjectId" : "2de379749e6c3851ca24edc3379ba9f6026e666f",
      "LastModified" : "2016-12-19T17:42:30Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Project subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CC=gcc\n\n# CFLAGS=-I$(INCDIR) -Wall -O3\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Linker Flags and Libraries\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Name of final Executable\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# inc files and object files\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Notes: $@ refers to the file name of the target of the rule\n\n#        $< refers to the name of the first prerequisite\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This is a poor way to do this, actually, because an object\n\n# file depends on all header files. I suppose we don't expect\n\n# the headers to change very often. It would be cleaner to build\n\n# a list of header files that each source file depends on, especially\n\n# since this will be a relatively small project.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "codes/referee_questions/error_grid/5000_mocks_273/prepare_mocks/Makefile" : {
      "ObjectId" : "2de379749e6c3851ca24edc3379ba9f6026e666f",
      "LastModified" : "2016-12-19T17:42:30Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Project subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CC=gcc\n\n# CFLAGS=-I$(INCDIR) -Wall -O3\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Linker Flags and Libraries\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Name of final Executable\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# inc files and object files\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Notes: $@ refers to the file name of the target of the rule\n\n#        $< refers to the name of the first prerequisite\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This is a poor way to do this, actually, because an object\n\n# file depends on all header files. I suppose we don't expect\n\n# the headers to change very often. It would be cleaner to build\n\n# a list of header files that each source file depends on, especially\n\n# since this will be a relatively small project.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "codes/referee_questions/error_grid/5000_mocks_283/prepare_mocks/Makefile" : {
      "ObjectId" : "2de379749e6c3851ca24edc3379ba9f6026e666f",
      "LastModified" : "2016-12-19T17:42:30Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Project subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CC=gcc\n\n# CFLAGS=-I$(INCDIR) -Wall -O3\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Linker Flags and Libraries\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Name of final Executable\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# inc files and object files\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Notes: $@ refers to the file name of the target of the rule\n\n#        $< refers to the name of the first prerequisite\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This is a poor way to do this, actually, because an object\n\n# file depends on all header files. I suppose we don't expect\n\n# the headers to change very often. It would be cleaner to build\n\n# a list of header files that each source file depends on, especially\n\n# since this will be a relatively small project.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "codes/referee_questions/error_grid/500_mocks_183/prepare_mocks/Makefile" : {
      "ObjectId" : "2de379749e6c3851ca24edc3379ba9f6026e666f",
      "LastModified" : "2016-12-19T17:42:30Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Project subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CC=gcc\n\n# CFLAGS=-I$(INCDIR) -Wall -O3\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Linker Flags and Libraries\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Name of final Executable\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# inc files and object files\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Notes: $@ refers to the file name of the target of the rule\n\n#        $< refers to the name of the first prerequisite\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This is a poor way to do this, actually, because an object\n\n# file depends on all header files. I suppose we don't expect\n\n# the headers to change very often. It would be cleaner to build\n\n# a list of header files that each source file depends on, especially\n\n# since this will be a relatively small project.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "codes/referee_questions/error_grid/500_mocks_193/prepare_mocks/Makefile" : {
      "ObjectId" : "2de379749e6c3851ca24edc3379ba9f6026e666f",
      "LastModified" : "2016-12-19T17:42:30Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Project subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CC=gcc\n\n# CFLAGS=-I$(INCDIR) -Wall -O3\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Linker Flags and Libraries\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Name of final Executable\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# inc files and object files\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Notes: $@ refers to the file name of the target of the rule\n\n#        $< refers to the name of the first prerequisite\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This is a poor way to do this, actually, because an object\n\n# file depends on all header files. I suppose we don't expect\n\n# the headers to change very often. It would be cleaner to build\n\n# a list of header files that each source file depends on, especially\n\n# since this will be a relatively small project.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "codes/referee_questions/error_grid/500_mocks_203/prepare_mocks/Makefile" : {
      "ObjectId" : "2de379749e6c3851ca24edc3379ba9f6026e666f",
      "LastModified" : "2016-12-19T17:42:30Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Project subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CC=gcc\n\n# CFLAGS=-I$(INCDIR) -Wall -O3\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Linker Flags and Libraries\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Name of final Executable\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# inc files and object files\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Notes: $@ refers to the file name of the target of the rule\n\n#        $< refers to the name of the first prerequisite\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This is a poor way to do this, actually, because an object\n\n# file depends on all header files. I suppose we don't expect\n\n# the headers to change very often. It would be cleaner to build\n\n# a list of header files that each source file depends on, especially\n\n# since this will be a relatively small project.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "codes/referee_questions/error_grid/500_mocks_213/prepare_mocks/Makefile" : {
      "ObjectId" : "2de379749e6c3851ca24edc3379ba9f6026e666f",
      "LastModified" : "2016-12-19T17:42:30Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Project subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CC=gcc\n\n# CFLAGS=-I$(INCDIR) -Wall -O3\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Linker Flags and Libraries\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Name of final Executable\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# inc files and object files\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Notes: $@ refers to the file name of the target of the rule\n\n#        $< refers to the name of the first prerequisite\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This is a poor way to do this, actually, because an object\n\n# file depends on all header files. I suppose we don't expect\n\n# the headers to change very often. It would be cleaner to build\n\n# a list of header files that each source file depends on, especially\n\n# since this will be a relatively small project.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "codes/referee_questions/error_grid/500_mocks_223/prepare_mocks/Makefile" : {
      "ObjectId" : "2de379749e6c3851ca24edc3379ba9f6026e666f",
      "LastModified" : "2016-12-19T17:42:30Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Project subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CC=gcc\n\n# CFLAGS=-I$(INCDIR) -Wall -O3\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Linker Flags and Libraries\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Name of final Executable\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# inc files and object files\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Notes: $@ refers to the file name of the target of the rule\n\n#        $< refers to the name of the first prerequisite\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This is a poor way to do this, actually, because an object\n\n# file depends on all header files. I suppose we don't expect\n\n# the headers to change very often. It would be cleaner to build\n\n# a list of header files that each source file depends on, especially\n\n# since this will be a relatively small project.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "codes/referee_questions/error_grid/500_mocks_243/prepare_mocks/Makefile" : {
      "ObjectId" : "2de379749e6c3851ca24edc3379ba9f6026e666f",
      "LastModified" : "2016-12-19T17:42:30Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Project subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CC=gcc\n\n# CFLAGS=-I$(INCDIR) -Wall -O3\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Linker Flags and Libraries\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Name of final Executable\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# inc files and object files\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Notes: $@ refers to the file name of the target of the rule\n\n#        $< refers to the name of the first prerequisite\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This is a poor way to do this, actually, because an object\n\n# file depends on all header files. I suppose we don't expect\n\n# the headers to change very often. It would be cleaner to build\n\n# a list of header files that each source file depends on, especially\n\n# since this will be a relatively small project.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "codes/referee_questions/error_grid/500_mocks_253/prepare_mocks/Makefile" : {
      "ObjectId" : "2de379749e6c3851ca24edc3379ba9f6026e666f",
      "LastModified" : "2016-12-19T17:42:30Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Project subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CC=gcc\n\n# CFLAGS=-I$(INCDIR) -Wall -O3\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Linker Flags and Libraries\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Name of final Executable\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# inc files and object files\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Notes: $@ refers to the file name of the target of the rule\n\n#        $< refers to the name of the first prerequisite\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This is a poor way to do this, actually, because an object\n\n# file depends on all header files. I suppose we don't expect\n\n# the headers to change very often. It would be cleaner to build\n\n# a list of header files that each source file depends on, especially\n\n# since this will be a relatively small project.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "codes/referee_questions/error_grid/500_mocks_263/prepare_mocks/Makefile" : {
      "ObjectId" : "2de379749e6c3851ca24edc3379ba9f6026e666f",
      "LastModified" : "2016-12-19T17:42:30Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Project subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CC=gcc\n\n# CFLAGS=-I$(INCDIR) -Wall -O3\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Linker Flags and Libraries\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Name of final Executable\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# inc files and object files\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Notes: $@ refers to the file name of the target of the rule\n\n#        $< refers to the name of the first prerequisite\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This is a poor way to do this, actually, because an object\n\n# file depends on all header files. I suppose we don't expect\n\n# the headers to change very often. It would be cleaner to build\n\n# a list of header files that each source file depends on, especially\n\n# since this will be a relatively small project.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "codes/referee_questions/error_grid/500_mocks_273/prepare_mocks/Makefile" : {
      "ObjectId" : "2de379749e6c3851ca24edc3379ba9f6026e666f",
      "LastModified" : "2016-12-19T17:42:30Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Project subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CC=gcc\n\n# CFLAGS=-I$(INCDIR) -Wall -O3\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Linker Flags and Libraries\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Name of final Executable\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# inc files and object files\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Notes: $@ refers to the file name of the target of the rule\n\n#        $< refers to the name of the first prerequisite\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This is a poor way to do this, actually, because an object\n\n# file depends on all header files. I suppose we don't expect\n\n# the headers to change very often. It would be cleaner to build\n\n# a list of header files that each source file depends on, especially\n\n# since this will be a relatively small project.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "codes/referee_questions/error_grid/500_mocks_283/prepare_mocks/Makefile" : {
      "ObjectId" : "2de379749e6c3851ca24edc3379ba9f6026e666f",
      "LastModified" : "2016-12-19T17:42:30Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Project subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CC=gcc\n\n# CFLAGS=-I$(INCDIR) -Wall -O3\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Linker Flags and Libraries\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Name of final Executable\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# inc files and object files\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Notes: $@ refers to the file name of the target of the rule\n\n#        $< refers to the name of the first prerequisite\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This is a poor way to do this, actually, because an object\n\n# file depends on all header files. I suppose we don't expect\n\n# the headers to change very often. It would be cleaner to build\n\n# a list of header files that each source file depends on, especially\n\n# since this will be a relatively small project.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "codes/referee_questions/error_grid/500_mocks_293/prepare_mocks/Makefile" : {
      "ObjectId" : "2de379749e6c3851ca24edc3379ba9f6026e666f",
      "LastModified" : "2016-12-19T17:42:30Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Project subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CC=gcc\n\n# CFLAGS=-I$(INCDIR) -Wall -O3\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Linker Flags and Libraries\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Name of final Executable\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# inc files and object files\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Notes: $@ refers to the file name of the target of the rule\n\n#        $< refers to the name of the first prerequisite\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This is a poor way to do this, actually, because an object\n\n# file depends on all header files. I suppose we don't expect\n\n# the headers to change very often. It would be cleaner to build\n\n# a list of header files that each source file depends on, especially\n\n# since this will be a relatively small project.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "codes/referee_questions/error_grid/500_mocks_303/prepare_mocks/Makefile" : {
      "ObjectId" : "2de379749e6c3851ca24edc3379ba9f6026e666f",
      "LastModified" : "2016-12-19T17:42:30Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Project subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CC=gcc\n\n# CFLAGS=-I$(INCDIR) -Wall -O3\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Linker Flags and Libraries\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Name of final Executable\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# inc files and object files\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Notes: $@ refers to the file name of the target of the rule\n\n#        $< refers to the name of the first prerequisite\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This is a poor way to do this, actually, because an object\n\n# file depends on all header files. I suppose we don't expect\n\n# the headers to change very often. It would be cleaner to build\n\n# a list of header files that each source file depends on, especially\n\n# since this will be a relatively small project.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "codes/referee_questions/error_grid/500_mocks_313/prepare_mocks/Makefile" : {
      "ObjectId" : "2de379749e6c3851ca24edc3379ba9f6026e666f",
      "LastModified" : "2016-12-19T17:42:30Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Project subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CC=gcc\n\n# CFLAGS=-I$(INCDIR) -Wall -O3\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Linker Flags and Libraries\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Name of final Executable\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# inc files and object files\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Notes: $@ refers to the file name of the target of the rule\n\n#        $< refers to the name of the first prerequisite\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This is a poor way to do this, actually, because an object\n\n# file depends on all header files. I suppose we don't expect\n\n# the headers to change very often. It would be cleaner to build\n\n# a list of header files that each source file depends on, especially\n\n# since this will be a relatively small project.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "codes/referee_questions/error_grid/500_mocks_323/prepare_mocks/Makefile" : {
      "ObjectId" : "2de379749e6c3851ca24edc3379ba9f6026e666f",
      "LastModified" : "2016-12-19T17:42:30Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Project subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CC=gcc\n\n# CFLAGS=-I$(INCDIR) -Wall -O3\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Linker Flags and Libraries\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Name of final Executable\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# inc files and object files\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Notes: $@ refers to the file name of the target of the rule\n\n#        $< refers to the name of the first prerequisite\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This is a poor way to do this, actually, because an object\n\n# file depends on all header files. I suppose we don't expect\n\n# the headers to change very often. It would be cleaner to build\n\n# a list of header files that each source file depends on, especially\n\n# since this will be a relatively small project.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "codes/referee_questions/error_grid/500_mocks_fid/prepare_mocks/Makefile" : {
      "ObjectId" : "2de379749e6c3851ca24edc3379ba9f6026e666f",
      "LastModified" : "2016-12-19T17:42:30Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Project subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CC=gcc\n\n# CFLAGS=-I$(INCDIR) -Wall -O3\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Linker Flags and Libraries\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Name of final Executable\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# inc files and object files\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Notes: $@ refers to the file name of the target of the rule\n\n#        $< refers to the name of the first prerequisite\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This is a poor way to do this, actually, because an object\n\n# file depends on all header files. I suppose we don't expect\n\n# the headers to change very often. It would be cleaner to build\n\n# a list of header files that each source file depends on, especially\n\n# since this will be a relatively small project.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "codes/referee_questions/error_grid/prep_mock/Makefile" : {
      "ObjectId" : "2de379749e6c3851ca24edc3379ba9f6026e666f",
      "LastModified" : "2016-12-19T17:42:30Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Project subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CC=gcc\n\n# CFLAGS=-I$(INCDIR) -Wall -O3\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Linker Flags and Libraries\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Name of final Executable\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# inc files and object files\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Notes: $@ refers to the file name of the target of the rule\n\n#        $< refers to the name of the first prerequisite\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This is a poor way to do this, actually, because an object\n\n# file depends on all header files. I suppose we don't expect\n\n# the headers to change very often. It would be cleaner to build\n\n# a list of header files that each source file depends on, especially\n\n# since this will be a relatively small project.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "codes/referee_questions/error_grid/prep_nonuni/Makefile" : {
      "ObjectId" : "2de379749e6c3851ca24edc3379ba9f6026e666f",
      "LastModified" : "2016-12-19T17:42:30Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Project subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CC=gcc\n\n# CFLAGS=-I$(INCDIR) -Wall -O3\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Linker Flags and Libraries\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Name of final Executable\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# inc files and object files\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Notes: $@ refers to the file name of the target of the rule\n\n#        $< refers to the name of the first prerequisite\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This is a poor way to do this, actually, because an object\n\n# file depends on all header files. I suppose we don't expect\n\n# the headers to change very often. It would be cleaner to build\n\n# a list of header files that each source file depends on, especially\n\n# since this will be a relatively small project.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "codes/referee_questions/mcmc_cov_fid_errors/mcmc_mpi/Makefile" : {
      "ObjectId" : "9b0f18651ff59dfcb60a9a40d17e2711d5271a70",
      "LastModified" : "2016-12-19T17:42:30Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Project subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Linker Flags and Libraries\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Name of final Executable\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# inc files and object files\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Notes: $@ refers to the file name of the target of the rule\n\n#        $< refers to the name of the first prerequisite\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# This is a poor way to do this, actually, because an object\n\n# file depends on all header files. I suppose we don't expect\n\n# the headers to change very often. It would be cleaner to build\n\n# a list of header files that each source file depends on, especially\n\n# since this will be a relatively small project.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "codes/referee_questions/mcmc_cov_fid_errors/prep_nonuni/Makefile" : {
      "ObjectId" : "2de379749e6c3851ca24edc3379ba9f6026e666f",
      "LastModified" : "2016-12-19T17:42:30Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Project subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CC=gcc\n\n# CFLAGS=-I$(INCDIR) -Wall -O3\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Linker Flags and Libraries\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Name of final Executable\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# inc files and object files\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Notes: $@ refers to the file name of the target of the rule\n\n#        $< refers to the name of the first prerequisite\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This is a poor way to do this, actually, because an object\n\n# file depends on all header files. I suppose we don't expect\n\n# the headers to change very often. It would be cleaner to build\n\n# a list of header files that each source file depends on, especially\n\n# since this will be a relatively small project.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "codes/referee_questions/mcmc_cov_fid_errors/prepare_mock/Makefile" : {
      "ObjectId" : "2de379749e6c3851ca24edc3379ba9f6026e666f",
      "LastModified" : "2016-12-19T17:42:30Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Project subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CC=gcc\n\n# CFLAGS=-I$(INCDIR) -Wall -O3\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Linker Flags and Libraries\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Name of final Executable\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# inc files and object files\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Notes: $@ refers to the file name of the target of the rule\n\n#        $< refers to the name of the first prerequisite\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This is a poor way to do this, actually, because an object\n\n# file depends on all header files. I suppose we don't expect\n\n# the headers to change very often. It would be cleaner to build\n\n# a list of header files that each source file depends on, especially\n\n# since this will be a relatively small project.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "codes/referee_questions/mcmc_covariance/mcmc_mpi/Makefile" : {
      "ObjectId" : "9b0f18651ff59dfcb60a9a40d17e2711d5271a70",
      "LastModified" : "2016-12-19T17:42:30Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Project subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Linker Flags and Libraries\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Name of final Executable\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# inc files and object files\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Notes: $@ refers to the file name of the target of the rule\n\n#        $< refers to the name of the first prerequisite\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# This is a poor way to do this, actually, because an object\n\n# file depends on all header files. I suppose we don't expect\n\n# the headers to change very often. It would be cleaner to build\n\n# a list of header files that each source file depends on, especially\n\n# since this will be a relatively small project.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "codes/referee_questions/mcmc_density_cut/mcmc/mcmc_mpi/Makefile" : {
      "ObjectId" : "9b0f18651ff59dfcb60a9a40d17e2711d5271a70",
      "LastModified" : "2016-12-19T17:42:30Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Project subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Linker Flags and Libraries\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Name of final Executable\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# inc files and object files\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Notes: $@ refers to the file name of the target of the rule\n\n#        $< refers to the name of the first prerequisite\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# This is a poor way to do this, actually, because an object\n\n# file depends on all header files. I suppose we don't expect\n\n# the headers to change very often. It would be cleaner to build\n\n# a list of header files that each source file depends on, especially\n\n# since this will be a relatively small project.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "codes/referee_questions/mcmc_density_cut/prepare_mock/Makefile" : {
      "ObjectId" : "2de379749e6c3851ca24edc3379ba9f6026e666f",
      "LastModified" : "2016-12-19T17:42:30Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Project subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CC=gcc\n\n# CFLAGS=-I$(INCDIR) -Wall -O3\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Linker Flags and Libraries\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Name of final Executable\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# inc files and object files\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Notes: $@ refers to the file name of the target of the rule\n\n#        $< refers to the name of the first prerequisite\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This is a poor way to do this, actually, because an object\n\n# file depends on all header files. I suppose we don't expect\n\n# the headers to change very often. It would be cleaner to build\n\n# a list of header files that each source file depends on, especially\n\n# since this will be a relatively small project.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "codes/referee_questions/mcmc_mock/chi2_check/Makefile" : {
      "ObjectId" : "9b0f18651ff59dfcb60a9a40d17e2711d5271a70",
      "LastModified" : "2016-12-19T17:42:30Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Project subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Linker Flags and Libraries\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Name of final Executable\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# inc files and object files\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Notes: $@ refers to the file name of the target of the rule\n\n#        $< refers to the name of the first prerequisite\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# This is a poor way to do this, actually, because an object\n\n# file depends on all header files. I suppose we don't expect\n\n# the headers to change very often. It would be cleaner to build\n\n# a list of header files that each source file depends on, especially\n\n# since this will be a relatively small project.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "codes/referee_questions/mcmc_mock/mcmc_mpi/Makefile" : {
      "ObjectId" : "9b0f18651ff59dfcb60a9a40d17e2711d5271a70",
      "LastModified" : "2016-12-19T17:42:30Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Project subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Linker Flags and Libraries\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Name of final Executable\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# inc files and object files\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Notes: $@ refers to the file name of the target of the rule\n\n#        $< refers to the name of the first prerequisite\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# This is a poor way to do this, actually, because an object\n\n# file depends on all header files. I suppose we don't expect\n\n# the headers to change very often. It would be cleaner to build\n\n# a list of header files that each source file depends on, especially\n\n# since this will be a relatively small project.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "codes/referee_questions/mcmc_new/mcmc_mpi/Makefile" : {
      "ObjectId" : "9b0f18651ff59dfcb60a9a40d17e2711d5271a70",
      "LastModified" : "2016-12-19T17:42:30Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Project subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Linker Flags and Libraries\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Name of final Executable\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# inc files and object files\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Notes: $@ refers to the file name of the target of the rule\n\n#        $< refers to the name of the first prerequisite\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# This is a poor way to do this, actually, because an object\n\n# file depends on all header files. I suppose we don't expect\n\n# the headers to change very often. It would be cleaner to build\n\n# a list of header files that each source file depends on, especially\n\n# since this will be a relatively small project.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "codes/referee_questions/mcmc_new_cov/mcmc_mpi/Makefile" : {
      "ObjectId" : "9b0f18651ff59dfcb60a9a40d17e2711d5271a70",
      "LastModified" : "2016-12-19T17:42:30Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Project subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Linker Flags and Libraries\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Name of final Executable\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# inc files and object files\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Notes: $@ refers to the file name of the target of the rule\n\n#        $< refers to the name of the first prerequisite\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# This is a poor way to do this, actually, because an object\n\n# file depends on all header files. I suppose we don't expect\n\n# the headers to change very often. It would be cleaner to build\n\n# a list of header files that each source file depends on, especially\n\n# since this will be a relatively small project.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "codes/referee_questions/mcmc_segue/mcmc_mpi/Makefile" : {
      "ObjectId" : "9b0f18651ff59dfcb60a9a40d17e2711d5271a70",
      "LastModified" : "2016-12-19T17:42:30Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Project subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Linker Flags and Libraries\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Name of final Executable\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# inc files and object files\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Notes: $@ refers to the file name of the target of the rule\n\n#        $< refers to the name of the first prerequisite\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# This is a poor way to do this, actually, because an object\n\n# file depends on all header files. I suppose we don't expect\n\n# the headers to change very often. It would be cleaner to build\n\n# a list of header files that each source file depends on, especially\n\n# since this will be a relatively small project.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "codes/referee_questions/mock_distribution/prepare_mock/Makefile" : {
      "ObjectId" : "2de379749e6c3851ca24edc3379ba9f6026e666f",
      "LastModified" : "2017-01-20T16:27:45Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Project subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CC=gcc\n\n# CFLAGS=-I$(INCDIR) -Wall -O3\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Linker Flags and Libraries\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Name of final Executable\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# inc files and object files\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Notes: $@ refers to the file name of the target of the rule\n\n#        $< refers to the name of the first prerequisite\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This is a poor way to do this, actually, because an object\n\n# file depends on all header files. I suppose we don't expect\n\n# the headers to change very often. It would be cleaner to build\n\n# a list of header files that each source file depends on, especially\n\n# since this will be a relatively small project.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "codes/referee_questions/prepare_mock/Makefile" : {
      "ObjectId" : "2de379749e6c3851ca24edc3379ba9f6026e666f",
      "LastModified" : "2017-01-20T16:27:45Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Project subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CC=gcc\n\n# CFLAGS=-I$(INCDIR) -Wall -O3\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Linker Flags and Libraries\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Name of final Executable\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# inc files and object files\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Notes: $@ refers to the file name of the target of the rule\n\n#        $< refers to the name of the first prerequisite\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This is a poor way to do this, actually, because an object\n\n# file depends on all header files. I suppose we don't expect\n\n# the headers to change very often. It would be cleaner to build\n\n# a list of header files that each source file depends on, especially\n\n# since this will be a relatively small project.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "codes/referee_questions/prepare_mock_fast/Makefile" : {
      "ObjectId" : "9bcebaf8d4e3008e9fb7326066a20b3b3ee4ba38",
      "LastModified" : "2017-01-20T16:27:45Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Project subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CC=gcc\n\n# CFLAGS=-I$(INCDIR) -Wall -O3\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Linker Flags and Libraries\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Name of final Executable\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# inc files and object files\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Notes: $@ refers to the file name of the target of the rule\n\n#        $< refers to the name of the first prerequisite\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This is a poor way to do this, actually, because an object\n\n# file depends on all header files. I suppose we don't expect\n\n# the headers to change very often. It would be cleaner to build\n\n# a list of header files that each source file depends on, especially\n\n# since this will be a relatively small project.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "codes/referee_questions/real_sigmas_compare/1000_mocks_1/prepare_mock_fast/Makefile" : {
      "ObjectId" : "9bcebaf8d4e3008e9fb7326066a20b3b3ee4ba38",
      "LastModified" : "2017-01-20T16:27:45Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Project subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CC=gcc\n\n# CFLAGS=-I$(INCDIR) -Wall -O3\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Linker Flags and Libraries\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Name of final Executable\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# inc files and object files\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Notes: $@ refers to the file name of the target of the rule\n\n#        $< refers to the name of the first prerequisite\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This is a poor way to do this, actually, because an object\n\n# file depends on all header files. I suppose we don't expect\n\n# the headers to change very often. It would be cleaner to build\n\n# a list of header files that each source file depends on, especially\n\n# since this will be a relatively small project.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "codes/referee_questions/real_sigmas_compare/1000_mocks_2/prepare_mock_fast/Makefile" : {
      "ObjectId" : "9bcebaf8d4e3008e9fb7326066a20b3b3ee4ba38",
      "LastModified" : "2017-01-20T16:27:45Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Project subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CC=gcc\n\n# CFLAGS=-I$(INCDIR) -Wall -O3\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Linker Flags and Libraries\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Name of final Executable\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# inc files and object files\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Notes: $@ refers to the file name of the target of the rule\n\n#        $< refers to the name of the first prerequisite\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This is a poor way to do this, actually, because an object\n\n# file depends on all header files. I suppose we don't expect\n\n# the headers to change very often. It would be cleaner to build\n\n# a list of header files that each source file depends on, especially\n\n# since this will be a relatively small project.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "codes/referee_questions/test_alt_weighting/mcmc_A/mcmc_mpi/Makefile" : {
      "ObjectId" : "9b0f18651ff59dfcb60a9a40d17e2711d5271a70",
      "LastModified" : "2017-01-20T16:27:45Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Project subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Linker Flags and Libraries\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Name of final Executable\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# inc files and object files\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Notes: $@ refers to the file name of the target of the rule\n\n#        $< refers to the name of the first prerequisite\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# This is a poor way to do this, actually, because an object\n\n# file depends on all header files. I suppose we don't expect\n\n# the headers to change very often. It would be cleaner to build\n\n# a list of header files that each source file depends on, especially\n\n# since this will be a relatively small project.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "codes/referee_questions/test_alt_weighting/mcmc_Atrue_Afid_uniform/mcmc_mpi/Makefile" : {
      "ObjectId" : "9b0f18651ff59dfcb60a9a40d17e2711d5271a70",
      "LastModified" : "2017-01-20T16:27:45Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Project subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Linker Flags and Libraries\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Name of final Executable\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# inc files and object files\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Notes: $@ refers to the file name of the target of the rule\n\n#        $< refers to the name of the first prerequisite\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# This is a poor way to do this, actually, because an object\n\n# file depends on all header files. I suppose we don't expect\n\n# the headers to change very often. It would be cleaner to build\n\n# a list of header files that each source file depends on, especially\n\n# since this will be a relatively small project.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "codes/referee_questions/test_alt_weighting/mcmc_Atrue_Bfid/mcmc_mpi/Makefile" : {
      "ObjectId" : "9b0f18651ff59dfcb60a9a40d17e2711d5271a70",
      "LastModified" : "2017-01-20T16:27:45Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Project subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Linker Flags and Libraries\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Name of final Executable\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# inc files and object files\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Notes: $@ refers to the file name of the target of the rule\n\n#        $< refers to the name of the first prerequisite\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# This is a poor way to do this, actually, because an object\n\n# file depends on all header files. I suppose we don't expect\n\n# the headers to change very often. It would be cleaner to build\n\n# a list of header files that each source file depends on, especially\n\n# since this will be a relatively small project.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "codes/referee_questions/test_alt_weighting/prep_mock_A/Makefile" : {
      "ObjectId" : "2de379749e6c3851ca24edc3379ba9f6026e666f",
      "LastModified" : "2017-01-20T16:27:45Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Project subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CC=gcc\n\n# CFLAGS=-I$(INCDIR) -Wall -O3\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Linker Flags and Libraries\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Name of final Executable\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# inc files and object files\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Notes: $@ refers to the file name of the target of the rule\n\n#        $< refers to the name of the first prerequisite\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This is a poor way to do this, actually, because an object\n\n# file depends on all header files. I suppose we don't expect\n\n# the headers to change very often. It would be cleaner to build\n\n# a list of header files that each source file depends on, especially\n\n# since this will be a relatively small project.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "codes/referee_questions/test_alt_weighting/prep_mock_B/Makefile" : {
      "ObjectId" : "2de379749e6c3851ca24edc3379ba9f6026e666f",
      "LastModified" : "2017-01-20T16:27:45Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Project subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CC=gcc\n\n# CFLAGS=-I$(INCDIR) -Wall -O3\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Linker Flags and Libraries\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Name of final Executable\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# inc files and object files\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Notes: $@ refers to the file name of the target of the rule\n\n#        $< refers to the name of the first prerequisite\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This is a poor way to do this, actually, because an object\n\n# file depends on all header files. I suppose we don't expect\n\n# the headers to change very often. It would be cleaner to build\n\n# a list of header files that each source file depends on, especially\n\n# since this will be a relatively small project.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "codes/referee_questions/test_alt_weighting/prep_mock_C/Makefile" : {
      "ObjectId" : "2de379749e6c3851ca24edc3379ba9f6026e666f",
      "LastModified" : "2017-01-20T16:27:45Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Project subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CC=gcc\n\n# CFLAGS=-I$(INCDIR) -Wall -O3\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Linker Flags and Libraries\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Name of final Executable\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# inc files and object files\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Notes: $@ refers to the file name of the target of the rule\n\n#        $< refers to the name of the first prerequisite\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This is a poor way to do this, actually, because an object\n\n# file depends on all header files. I suppose we don't expect\n\n# the headers to change very often. It would be cleaner to build\n\n# a list of header files that each source file depends on, especially\n\n# since this will be a relatively small project.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "codes/referee_questions/test_alt_weighting/prep_nonuni_A/Makefile" : {
      "ObjectId" : "2de379749e6c3851ca24edc3379ba9f6026e666f",
      "LastModified" : "2017-01-20T16:27:45Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Project subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CC=gcc\n\n# CFLAGS=-I$(INCDIR) -Wall -O3\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Linker Flags and Libraries\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Name of final Executable\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# inc files and object files\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Notes: $@ refers to the file name of the target of the rule\n\n#        $< refers to the name of the first prerequisite\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This is a poor way to do this, actually, because an object\n\n# file depends on all header files. I suppose we don't expect\n\n# the headers to change very often. It would be cleaner to build\n\n# a list of header files that each source file depends on, especially\n\n# since this will be a relatively small project.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "codes/referee_questions/test_alt_weighting/prep_nonuni_B/Makefile" : {
      "ObjectId" : "2de379749e6c3851ca24edc3379ba9f6026e666f",
      "LastModified" : "2017-01-20T16:27:45Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Project subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CC=gcc\n\n# CFLAGS=-I$(INCDIR) -Wall -O3\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Linker Flags and Libraries\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Name of final Executable\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# inc files and object files\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Notes: $@ refers to the file name of the target of the rule\n\n#        $< refers to the name of the first prerequisite\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This is a poor way to do this, actually, because an object\n\n# file depends on all header files. I suppose we don't expect\n\n# the headers to change very often. It would be cleaner to build\n\n# a list of header files that each source file depends on, especially\n\n# since this will be a relatively small project.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "codes/referee_questions/test_alt_weighting/prep_nonuni_C/Makefile" : {
      "ObjectId" : "2de379749e6c3851ca24edc3379ba9f6026e666f",
      "LastModified" : "2017-01-20T16:27:45Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Project subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CC=gcc\n\n# CFLAGS=-I$(INCDIR) -Wall -O3\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Linker Flags and Libraries\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Name of final Executable\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# inc files and object files\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Notes: $@ refers to the file name of the target of the rule\n\n#        $< refers to the name of the first prerequisite\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This is a poor way to do this, actually, because an object\n\n# file depends on all header files. I suppose we don't expect\n\n# the headers to change very often. It would be cleaner to build\n\n# a list of header files that each source file depends on, especially\n\n# since this will be a relatively small project.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "qq_code/mcmc_2disks/gal_mcmc/Makefile" : {
      "ObjectId" : "7390369b534da1add8b2bccfdba4f42c9ed496c0",
      "LastModified" : "2017-01-20T16:27:45Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#CFLAGS= -Wall -O3 -c -fopenmp\n\n#LINKFLAGS= -lgsl -lgslcblas -lm -fopenmp\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "qq_code/mcmc_mock/chi2_check/Makefile" : {
      "ObjectId" : "9b0f18651ff59dfcb60a9a40d17e2711d5271a70",
      "LastModified" : "2017-01-20T16:27:45Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Project subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Linker Flags and Libraries\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Name of final Executable\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# inc files and object files\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Notes: $@ refers to the file name of the target of the rule\n\n#        $< refers to the name of the first prerequisite\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# This is a poor way to do this, actually, because an object\n\n# file depends on all header files. I suppose we don't expect\n\n# the headers to change very often. It would be cleaner to build\n\n# a list of header files that each source file depends on, especially\n\n# since this will be a relatively small project.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "qq_code/mcmc_mock/mcmc_mpi/Makefile" : {
      "ObjectId" : "9b0f18651ff59dfcb60a9a40d17e2711d5271a70",
      "LastModified" : "2017-01-20T16:27:45Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Project subdirectories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler rules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Linker Flags and Libraries\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Name of final Executable\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# inc files and object files\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Notes: $@ refers to the file name of the target of the rule\n\n#        $< refers to the name of the first prerequisite\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# This is a poor way to do this, actually, because an object\n\n# file depends on all header files. I suppose we don't expect\n\n# the headers to change very often. It would be cleaner to build\n\n# a list of header files that each source file depends on, especially\n\n# since this will be a relatively small project.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "qq_code/qq_mock/gal_mcmc/Makefile" : {
      "ObjectId" : "7390369b534da1add8b2bccfdba4f42c9ed496c0",
      "LastModified" : "2017-01-20T16:27:45Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#CFLAGS= -Wall -O3 -c -fopenmp\n\n#LINKFLAGS= -lgsl -lgslcblas -lm -fopenmp\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 63
  },
  "ElapsedTime" : 1156
}