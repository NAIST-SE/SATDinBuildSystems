{
  "Repository" : "6325605",
  "Revision" : "HEAD",
  "ObjectId" : "6ead2fb8f72ac1929a2e04912c5795af0bf37761",
  "CommitTime" : "2018-09-18T13:51:18Z",
  "Files" : {
    "src/CMakeLists.txt" : {
      "ObjectId" : "c1df54ea198a741f25a035280b58daecc6e0247b",
      "LastModified" : "2017-05-07T12:49:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(CMAKE_BUILD_TYPE Debug)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the OpenALPR version in cmake, and also add it as a DEFINE for the code to access\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO: switch to http://www.cmake.org/cmake/help/v2.8.5/cmake.html#module:GNUInstallDirs ?\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# http://www.vtk.org/Wiki/CMake:HowToUseExistingOSXFrameworks\n",
        "Line" : 76,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# OpenCV's released framework has this disabled, so we must too.\n\n# http://stackoverflow.com/a/32710441/868173\n",
        "Line" : 90,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Discover OpenCV directory automatically\n",
        "Line" : 94,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Opencv Package\n",
        "Line" : 100,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Extra linker dependencies for Windows\n",
        "Line" : 119,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# Compile the alprd library on Unix-based OS\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# set runtime_data to reflect the current CMAKE_INSTALL_PREFIX\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Uninstall target, for \"make uninstall\"\n\n# http://www.cmake.org/Wiki/CMake_FAQ#Can_I_do_.22make_uninstall.22_with_CMake.3F\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "src/bindings/go/CMakeLists.txt" : {
      "ObjectId" : "ae14c5cc36760dd9004f6fedba8a3daba4f1c014",
      "LastModified" : "2015-12-17T01:55:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#generate the .pc file\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "src/bindings/java/CMakeLists.txt" : {
      "ObjectId" : "de0644afc63ecfa3a120e6393d56f6b7802b1819",
      "LastModified" : "2015-12-17T01:55:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/bindings/python/CMakeLists.txt" : {
      "ObjectId" : "91d4fe5c02b5cdebc6de8298170e203e9608c7ca",
      "LastModified" : "2015-12-17T01:55:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/cmake_modules/FindTesseract.cmake" : {
      "ObjectId" : "3c738160fd3c2c46352abe6d6019a7ff3e2e9343",
      "LastModified" : "2017-12-04T21:36:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Tesseract-OCR\n\n# Once done, this will define\n\n#\n\n#  Tesseract_FOUND - system has Tesseract\n\n#  Tesseract_INCLUDE_DIRS - the Tesseract include directories\n\n#  Tesseract_LIBRARIES - link these to use Tesseract\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use pkg-config to get hints about paths\n\n#libfind_pkg_check_modules(Tesseract_PKGCONF Tesseract)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Include dir\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Finally the library itself\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set the include dir variables and the libraries and let libfind_process do the rest.\n\n# NOTE: Singular variables for this library, plural for libraries this this lib depends on.\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/cmake_modules/Findlog4cplus.cmake" : {
      "ObjectId" : "cae938a18d2499ff2f00c73c5cb05b5636da2f05",
      "LastModified" : "2015-12-17T01:55:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find log4cplus\n\n# Once done, this will define\n\n#\n\n#  log4cplus_FOUND - system has log4cplus\n\n#  log4cplus_INCLUDE_DIRS - the log4cplus include directories\n\n#  log4cplus_LIBRARIES - link these to use log4cplus\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#libfind_pkg_check_modules(log4cplus_PKGCONF log4cplus)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Include dir\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Finally the library itself\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/cmake_modules/LibFindMacros.cmake" : {
      "ObjectId" : "92b8397cd5ab4b02a5f869cc3b3df7a99ee60b40",
      "LastModified" : "2015-12-17T01:55:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Works the same as find_package, but forwards the \"REQUIRED\" and \"QUIET\" arguments\n\n# used for the current package. For this to work, the first parameter must be the\n\n# prefix of the current package, then the prefix of the new package etc, which are\n\n# passed to find_package.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMake developers made the UsePkgConfig system deprecated in the same release (2.6)\n\n# where they added pkg_check_modules. Consequently I need to support both in my scripts\n\n# to avoid those deprecated warnings. Here's a helper that does just that.\n\n# Works identically to pkg_check_modules, except that no checks are needed prior to use.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Do the final processing once the paths have been detected.\n\n# If include dirs are needed, ${PREFIX}_PROCESS_INCLUDES should be set to contain\n\n# all the variables, each of which contain one include directory.\n\n# Ditto for ${PREFIX}_PROCESS_LIBS and library files.\n\n# Will set ${PREFIX}_FOUND, ${PREFIX}_INCLUDE_DIRS and ${PREFIX}_LIBRARIES.\n\n# Also handles errors in case library detection was required, etc.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Skip processing if already processed during this run\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Start with the assumption that the library was found\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Process all includes and set _FOUND to false if any are missing\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Process all libraries and set _FOUND to false if any are missing\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Print message and/or exit on fatal error\n",
        "Line" : 64,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "src/misc_utilities/CMakeLists.txt" : {
      "ObjectId" : "0b5e7dace05bd86053f5fe725709bb2d2e7eeaf1",
      "LastModified" : "2017-12-04T21:36:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/openalpr/CMakeLists.txt" : {
      "ObjectId" : "a60280119375df2630b8e7845bac6f0f8662add4",
      "LastModified" : "2017-12-04T21:36:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Compile GPU detector\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add definition for default config file\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/openalpr/simpleini/CMakeLists.txt" : {
      "ObjectId" : "4514cd92e3647ccae1cf10859801ad51c490e942",
      "LastModified" : "2015-12-17T01:55:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/openalpr/support/CMakeLists.txt" : {
      "ObjectId" : "3e742c152177c63ff28eca8fad15a1a7c617ffc6",
      "LastModified" : "2015-12-17T01:55:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/statedetection/CMakeLists.txt" : {
      "ObjectId" : "515798ca1df791596108f1a67fc9370b0cb181d8",
      "LastModified" : "2015-12-17T01:55:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tests/CMakeLists.txt" : {
      "ObjectId" : "a5c82ef0a0965e0e6b647bb529ac6d41a7db0888",
      "LastModified" : "2017-12-04T21:36:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/video/CMakeLists.txt" : {
      "ObjectId" : "79c68f2f736e75e734c5f88540ad112d5944d3e1",
      "LastModified" : "2015-12-17T01:55:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#SET_TARGET_PROPERTIES( video PROPERTIES COMPILE_FLAGS -fPIC)",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 14
  },
  "ElapsedTime" : 1774
}