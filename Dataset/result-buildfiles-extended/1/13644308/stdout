{
  "Repository" : "13644308",
  "Revision" : "HEAD",
  "ObjectId" : "bae7afb8eb604b0bce09befc9e896c8ec8357aaa",
  "CommitTime" : "2016-09-19T12:14:21Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "7279e88e5fade70c96f2a8d66234f26af30d1c9b",
      "LastModified" : "2016-07-15T04:55:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (C) 2011-15 DyND Developers\n\n# BSD 2-Clause License, see LICENSE.txt\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "################################################\n\n# Some options configurable from the CMAKE command execution\n\n#\n\n# -DDYND_INSTALL_LIB=ON/OFF, Use a libdynd which has been built and\n\n#   installed separately. To build with this option off, libdynd\n\n#   must be checked out into the libdynd subdirectory.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# -DUSE_RELATIVE_RPATH=ON/OFF, For Linux and OSX, to use the @rpath mechanism\n\n#   for creating a build which is linked with relative paths. The\n\n#   libdynd should have been built with -DUSE_RELATIVE_RPATH=ON as well.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "################################################\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# When this is enabled, the cmake build assumes it is in the directory\n\n# <dynd-python>/build-dev and copies all binaries to the necessary\n\n# place for in-place development of the Python bindings to work.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# For the Git SHA1/version code\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Default install location for Python packages\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Require version >= 1.5\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Helper function for controlling the output directory in in-place build\n\n# mode. By setting the per-target properties, this works on all platforms.\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# USE_RELATIVE_RPATH is inherited from this cmakelists, so need to set it here\n",
        "Line" : 83,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Include libdynd in the build\n",
        "Line" : 96,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Build the libdynd.so/.dll directly to the in-place Python bindings\n",
        "Line" : 104,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# Get the git revision\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Extract the version number from the version string\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Treat warnings as errors (-WX does this)\n",
        "Line" : 135,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Don't use the -fPIC flag since it is the default on MinGW.\n\n# Doing so results in a warning that is then raised as an error.\n\n# Define _hypot=hypot to avoid the conflict between the macro\n\n# used in the Python headers and the name used in the standard library.\n",
        "Line" : 151,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# Define MS_WIN64 so that npy_intp has the correct size and\n\n# the proper module import functions are called on 64 bit Windows.\n",
        "Line" : 156,
        "CharPositionInLine" : 12
      },
      "17" : {
        "Text" : "# Additional C++ source files:\n",
        "Line" : 191,
        "CharPositionInLine" : 18
      },
      "18" : {
        "Text" : "# Additional C++ source files:\n",
        "Line" : 211,
        "CharPositionInLine" : 18
      },
      "19" : {
        "Text" : "# Additional C++ source files:\n",
        "Line" : 227,
        "CharPositionInLine" : 22
      },
      "20" : {
        "Text" : "# Run a postprocess script to work around some Cython bugs\n\n# that haven't been fixed in the latest release.\n",
        "Line" : 243,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Linker commands for the dynd.ndt module.\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Temporarily continue to define PYDYND_EXPORT to avoid inconsistent linkage warnings.\n\n# This should be removed once the macros have been refactored to hide all symbols\n\n# other than module initialization routines.\n",
        "Line" : 251,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# Make sure the api headers are all built and postprocessed\n\n# before anything tries to build conversions.cpp\n",
        "Line" : 258,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# Make sure libdyndt is on the rpath.\n\n# On Windows, the dll is loaded dynamically via the logic in\n\n# dynd/__init__.py\n",
        "Line" : 266,
        "CharPositionInLine" : 12
      },
      "25" : {
        "Text" : "# Linker commands for the dynd.nd module.\n",
        "Line" : 285,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Temporarily continue to define PYDYND_EXPORT to avoid inconsistent linkage warnings.\n\n# This should be removed once the macros have been refactored to hide all symbols\n\n# other than module initialization routines.\n",
        "Line" : 287,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# Make sure the api headers are all built and postprocessed\n\n# before anything tries to build conversions.cpp\n",
        "Line" : 294,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# Make sure libdynd is on the rpath.\n\n# On Windows, the dll is loaded dynamically via the logic in\n\n# dynd/__init__.py\n",
        "Line" : 302,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 29
    },
    "cmake/FindCython.cmake" : {
      "ObjectId" : "6b56b542dd8d4ae541aa8ba202f3990a0ef3573f",
      "LastModified" : "2013-04-24T22:25:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the Cython compiler.\n\n#\n\n# This code sets the following variables:\n\n#\n\n#  CYTHON_EXECUTABLE\n\n#\n\n# See also UseCython.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2011 Kitware, Inc.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#=============================================================================\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindLibDyND.cmake" : {
      "ObjectId" : "a7220449884b43017217a7c1434e6a76f6916480",
      "LastModified" : "2016-05-16T18:59:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find the LibDyND library\n\n# This module finds the LibDyND library which was built separately\n\n# and installed.\n\n#\n\n#  LIBDYND_FOUND               - was LibDyND found\n\n#  LIBDYND_LIBRARIES           - full paths for the LibDyND libraries\n\n#  LIBDYND_LIBRARY_DIR         - the directory containing the libdynd libraries\n\n#  LIBDYND_LIBRARY_NAMES       - the names of the libdynd libraries\n\n#  LIBDYND_INCLUDE_DIR         - path to the LibDyND include files\n\n#  LIBDYND_ROOT_DIR            - directory containing LIBDYND_LIBRARY_DIR and LIBDYND_INCLUDE_DIR\n\n#  LIBDYND_VERSION             - the version of LibDyND found as a string\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#============================================================================\n\n# Copyright 2013 Continuum Analytics, Inc.\n\n#\n\n# MIT License\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining\n\n# a copy of this software and associated documentation files\n\n# (the \"Software\"), to deal in the Software without restriction, including\n\n# without limitation the rights to use, copy, modify, merge, publish,\n\n# distribute, sublicense, and/or sell copies of the Software, and to permit\n\n# persons to whom the Software is furnished to do so, subject to\n\n# the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included\n\n# in all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\n# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n\n# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR\n\n# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n\n# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\n# OTHER DEALINGS IN THE SOFTWARE.\n\n#\n\n#============================================================================\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Try to find a libdynd-config program\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Aside from the system path, search some other locations.\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Get the ndt library to link against.\n",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Get the libraries to link against.\n",
        "Line" : 72,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Construct DYND_LIBRARIES from the names and directory given.\n",
        "Line" : 91,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Get the include directory\n",
        "Line" : 103,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Get the root directory\n",
        "Line" : 113,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Get the version\n",
        "Line" : 123,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 10
    },
    "cmake/FindNumPy.cmake" : {
      "ObjectId" : "a353673eaa511fa44da8af9535b8397bef2c01eb",
      "LastModified" : "2013-06-04T18:22:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find the NumPy libraries\n\n# This module finds if NumPy is installed, and sets the following variables\n\n# indicating where it is.\n\n#\n\n# TODO: Update to provide the libraries and paths for linking npymath lib.\n\n#\n\n#  NUMPY_FOUND               - was NumPy found\n\n#  NUMPY_VERSION             - the version of NumPy found as a string\n\n#  NUMPY_VERSION_MAJOR       - the major version number of NumPy\n\n#  NUMPY_VERSION_MINOR       - the minor version number of NumPy\n\n#  NUMPY_VERSION_PATCH       - the patch version number of NumPy\n\n#  NUMPY_VERSION_DECIMAL     - e.g. version 1.6.1 is 10601\n\n#  NUMPY_INCLUDE_DIRS        - path to the NumPy include files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#============================================================================\n\n# Copyright 2012 Continuum Analytics, Inc.\n\n#\n\n# MIT License\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining\n\n# a copy of this software and associated documentation files\n\n# (the \"Software\"), to deal in the Software without restriction, including\n\n# without limitation the rights to use, copy, modify, merge, publish,\n\n# distribute, sublicense, and/or sell copies of the Software, and to permit\n\n# persons to whom the Software is furnished to do so, subject to\n\n# the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included\n\n# in all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\n# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n\n# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR\n\n# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n\n# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\n# OTHER DEALINGS IN THE SOFTWARE.\n\n#\n\n#============================================================================\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Finding NumPy involves calling the Python interpreter\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Convert the process output into a list\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The output from Python was unexpected. Raise an error always\n\n# here, because we found NumPy, but it appears to be corrupted somehow.\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Make sure all directory separators are '/'\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Get the major and minor version numbers\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cmake/FindPythonLibsNew.cmake" : {
      "ObjectId" : "74686dce0abc1f8b30baa3e1faf64c3c1851c944",
      "LastModified" : "2016-01-31T03:56:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find python libraries\n\n# This module finds the libraries corresponding to the Python interpeter\n\n# FindPythonInterp provides.\n\n# This code sets the following variables:\n\n#\n\n#  PYTHONLIBS_FOUND           - have the Python libs been found\n\n#  PYTHON_PREFIX              - path to the Python installation\n\n#  PYTHON_LIBRARIES           - path to the python library\n\n#  PYTHON_INCLUDE_DIRS        - path to where Python.h is found\n\n#  PYTHON_SITE_PACKAGES       - path to installation site-packages\n\n#  PYTHON_IS_DEBUG            - whether the Python interpreter is a debug build\n\n#\n\n#  PYTHON_INCLUDE_PATH        - path to where Python.h is found (deprecated)\n\n#\n\n# A function PYTHON_ADD_MODULE(<name> src1 src2 ... srcN) is defined\n\n# to build modules for python.\n\n#\n\n# Thanks to talljimbo for the patch adding the 'LDVERSION' config\n\n# variable usage.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2001-2009 Kitware, Inc.\n\n# Copyright 2012-2014 Continuum Analytics, Inc.\n\n#\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright\n\n# notice, this list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright\n\n# notice, this list of conditions and the following disclaimer in the\n\n# documentation and/or other materials provided with the distribution.\n\n#\n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n# nor the names of their contributors may be used to endorse or promote\n\n# products derived from this software without specific prior written\n\n# permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# # A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use the Python interpreter to find the libs.\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# According to http://stackoverflow.com/questions/646518/python-how-to-detect-debug-interpreter\n\n# testing whether sys has the gettotalrefcount function is a reliable,\n\n# cross-platform way to detect a CPython debug interpreter.\n\n#\n\n# The library suffix is from the config var LDVERSION sometimes, otherwise\n\n# VERSION. VERSION will typically be like \"2.7\" on unix, and \"27\" on windows.\n\n#\n\n# The config var LIBPL is for Linux, and helps on Debian Jessie where the\n\n# addition of multi-arch support shuffled things around.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Convert the process output into a list\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Make sure the Python has the same pointer-size as the chosen compiler\n\n# Skip the check on OS X, it doesn't consistently have CMAKE_SIZEOF_VOID_P defined\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The built-in FindPython didn't always give the version numbers\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Make sure all directory separators are '/'\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Seems to require \"-undefined dynamic_lookup\" instead of linking\n\n# against the .dylib, otherwise it crashes. This flag is added\n\n# below\n",
        "Line" : 151,
        "CharPositionInLine" : 5
      },
      "9" : {
        "Text" : "#set(PYTHON_LIBRARY\n\n#    \"${PYTHON_PREFIX}/lib/libpython${PYTHON_LIBRARY_SUFFIX}.dylib\")\n",
        "Line" : 155,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Probably this needs to be more involved. It would be nice if the config\n\n# information the python interpreter itself gave us were more complete.\n",
        "Line" : 164,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# For backward compatibility, set PYTHON_INCLUDE_PATH, but make it internal.\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# We use PYTHON_INCLUDE_DIR, PYTHON_LIBRARY and PYTHON_DEBUG_LIBRARY for the\n\n# cache entries because they are meant to specify the location of a single\n\n# library. We now set the variables listed by the documentation for this\n\n# module.\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Don't know how to get to this directory, just doing something simple :P\n\n#INCLUDE(${CMAKE_CURRENT_LIST_DIR}/FindPackageHandleStandardArgs.cmake)\n\n#FIND_PACKAGE_HANDLE_STANDARD_ARGS(PythonLibs DEFAULT_MSG PYTHON_LIBRARIES PYTHON_INCLUDE_DIRS)\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# PYTHON_ADD_MODULE(<name> src1 src2 ... srcN) is used to build modules for python.\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Mark these options as advanced\n",
        "Line" : 207,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# On OS X, linking against the Python libraries causes\n\n# segfaults, so do this dynamic lookup instead.\n",
        "Line" : 222,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 17
    },
    "cmake/GetGitRevisionDescriptionDyND.cmake" : {
      "ObjectId" : "ee1f22c0047c49a072b80ea5b0659bdd8c2b15a1",
      "LastModified" : "2014-03-27T16:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Returns a version string from Git\n\n#\n\n# These functions force a re-configure on each git commit so that you can\n\n# trust the values of the variables in your build system.\n\n#\n\n#  get_git_head_revision(<dir> <refspecvar> <hashvar> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the refspec and sha hash of the current head revision\n\n#\n\n#  git_describe(<dir> <var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe on the specified source tree, and adjusting\n\n# the output so that it tests false if an error occurs.\n\n#\n\n#  git_get_exact_tag(<dir> <var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe --exact-match on the source tree,\n\n# and adjusting the output so that it tests false if there was no exact\n\n# matching tag.\n\n#\n\n# Modified for DyND in 2013 to accept a directory as a parameter (was choosing\n\n# the wrong directory for a particular setup.)\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We must run the following at \"include\" time, not at function call time,\n\n# to find the path to this module rather than the path to a calling list file\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# .git dir not found, search parent directories\n",
        "Line" : 48,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "# We have reached the root directory, we are not in git\n",
        "Line" : 52,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# TODO sanitize\n\n#if((${ARGN}\" MATCHES \"&amp;&amp;\") OR\n\n#\t(ARGN MATCHES \"||\") OR\n\n#\t(ARGN MATCHES \"\\\\;\"))\n\n#\tmessage(\"Please report the following error to the project!\")\n\n#\tmessage(FATAL_ERROR \"Looks like someone's doing something nefarious with git_describe! Passed arguments ${ARGN}\")\n\n#endif()\n",
        "Line" : 94,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "#message(STATUS \"Hash found: ${hash}\")\n",
        "Line" : 102,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#\t\t${hash}\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cmake/PostprocessCython.cmake" : {
      "ObjectId" : "df1c4faae87ef404f4a8b80ac370ee8cab589165",
      "LastModified" : "2016-01-31T03:56:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the command to run the postprocessing script on the generated C/C++ files.\n",
        "Line" : 6,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "cmake/UseCython.cmake" : {
      "ObjectId" : "c71f225e3d335b1743d5714176453c8ff299b0ee",
      "LastModified" : "2016-05-09T21:44:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define a function to create Cython modules.\n\n#\n\n# For more information on the Cython project, see http://cython.org/.\n\n# \"Cython is a language that makes writing C extensions for the Python language\n\n# as easy as Python itself.\"\n\n#\n\n# This file defines a CMake function to build a Cython Python module.\n\n# To use it, first include this file.\n\n#\n\n#   include( UseCython )\n\n#\n\n# Then call cython_add_module to create a module.\n\n#\n\n#   cython_add_module( <target_name> <pyx_target_name> <src1> <src2> ... <srcN> )\n\n#\n\n# Where <module_name> is the import path for the resulting Python module\n\n# (e.g. mymodule.submodule.other_submodule.this_extension),\n\n# <pyx_target_name> is the desired name of the target that runs the Cython compiler\n\n# to generate the needed C or C++ files, and <src1> <src2> ... are additional source files\n\n# to be compiled with the C or C++ file created by Cython.\n\n# The Cython file to be built is found using the <module_name>.\n\n# <module_name> is also used as the name of the target for the desired Python module.\n\n# A list of output files is provided as the <generated_files> attribute\n\n# of the target corresponding to the Cython compilation call.\n\n#\n\n# Cache variables that effect the behavior include:\n\n#\n\n#  CYTHON_ANNOTATE\n\n#  CYTHON_NO_DOCSTRINGS\n\n#  CYTHON_FLAGS\n\n#\n\n# Source file properties that effect the build process are\n\n#\n\n#  CYTHON_IS_CXX\n\n#  CYTHON_IS_PUBLIC\n\n#  CYTHON_IS_API\n\n#\n\n# For a given Cython file, if CYTHON_IS_CXX is set (using set_source_files_properties)\n\n# Cython will output a C++ file. The CYTHON_IS_PUBLIC and CYTHON_IS_API variables\n\n# are used to provide the list of output files given in the <generated_files>\n\n# property of the target corresponding to the Cython call to build the needed\n\n# C/C++ source files.\n\n#\n\n# The Python modules created are written into the CMAKE_CURRENT_BINARY_DIR\n\n# with the same folder structure they have in your project. For example,\n\n# the module name mymodule.submodule.other_submodule.this_extension would\n\n# cause the target mymodule.submodule.other_submodule.this_extension to be created,\n\n# the file ${CMAKE_CURRENT_SOURCE_DIR}/mymodule/submodule/other_submodule/this_extension.pyx\n\n# would be used to build the desired module, and the Python module resulting from\n\n# the compilation would be written to\n\n# ${CMAKE_CURRENT_BINARY_DIR}/mymodule/submodule/other_submodule/this_extension.${ext}\n\n# where ${ext} is the file extension for Python extensions for the target platform\n\n# and Python version.\n\n#\n\n# See also FindCython.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2011 Kitware, Inc.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#=============================================================================\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Configuration options.\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Create a *.c or *.cxx file from a *.pyx file.\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Default to assuming all files are C.\n",
        "Line" : 90,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Make sure the output directory is created.\n",
        "Line" : 94,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Determine if it is a C or C++ file.\n",
        "Line" : 97,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Set additional flags.\n",
        "Line" : 106,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Determining generated file names.\n",
        "Line" : 122,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Add the command to run the compiler.\n",
        "Line" : 149,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# do not specify byproducts for now since they don't work with the older\n\n# version of cmake available in the apt repositories.\n\n#BYPRODUCTS ${_generated_files}\n",
        "Line" : 153,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Remove internal variables' visibility to the user.\n",
        "Line" : 164,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# cython_add_module( <name> src1 src2 ... srcN )\n\n# Build the Cython Python module.\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Set up the Python module corresponding to this pyx file.\n",
        "Line" : 187,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Force output to not be written to the Release or Debug subdirectory of the target\n\n# directory. The difference in build configuration should already be taken care of in\n\n# the CMAKE_CURRENT_BINARY_DIR on generators where that matters.\n",
        "Line" : 191,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Remove internal variables' visibility to the user.\n",
        "Line" : 205,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 16
    },
    "docs/Makefile" : {
      "ObjectId" : "c00af56ed8dd5c3d6fdb4cca0b7342ead06883da",
      "LastModified" : "2016-01-31T03:56:02Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Internal variables.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "vagrant/wily64-py35/Makefile" : {
      "ObjectId" : "fb0a62858ec1d9ac514a3f55d498daac67b146f1",
      "LastModified" : "2016-02-20T00:53:21Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 8,
    "MAKEFILE" : 2
  },
  "ElapsedTime" : 998
}