{
  "Repository" : "23599187",
  "Revision" : "HEAD",
  "ObjectId" : "0e8c8a9aefb5290cc03571477c5c01d507eb02e0",
  "CommitTime" : "2019-04-17T09:37:34Z",
  "Files" : {
    "BUILD" : {
      "ObjectId" : "8394e665159a8d0e5e3b1a2bd589a71e2074ad77",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Bazel - Google's Build System",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# convenience symlinks",
        "Line" : 12,
        "CharPositionInLine" : 24
      },
      "2" : {
        "Text" : "# IntelliJ with setup-intellij.sh",
        "Line" : 13,
        "CharPositionInLine" : 20
      },
      "3" : {
        "Text" : "# output of compile.sh",
        "Line" : 14,
        "CharPositionInLine" : 23
      },
      "4" : {
        "Text" : "# mainly .git* files",
        "Line" : 15,
        "CharPositionInLine" : 19
      },
      "5" : {
        "Text" : "# gitk creates temp files with []",
        "Line" : 32,
        "CharPositionInLine" : 36
      },
      "6" : {
        "Text" : "# Rewrite paths coming from local repositories back into third_party.",
        "Line" : 72,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Public but bazel-only visibility.",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Public but bazel-only visibility.",
        "Line" : 99,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Public but bazel-only visibility.",
        "Line" : 114,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# This is a workaround for fetching Bazel toolchains, for remote execution.\n# See https://github.com/bazelbuild/bazel/issues/3246.\n# Will be removed once toolchain fetching is supported.",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# A machine with \"high cpu count\".",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# The default RBE platform where most actions run on",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "\"\"\"\n        properties: {\n          name: \"container-image\"\n          value:\"docker://gcr.io/bazel-untrusted/ubuntu1604_bazel_rbe@sha256:b60b641427ca8aa99134cc1f9889e3349e391eed85854b5cfbb462884ec3420b\"\n        }\n        properties: {\n          name: \"dockerNetwork\"\n          value: \"standard\"\n        }\n        properties: {\n          name: \"dockerPrivileged\"\n          value: \"true\"\n        }\n        \"\"\"",
        "Line" : 148,
        "CharPositionInLine" : 34
      },
      "14" : {
        "Text" : "# The highcpu RBE platform where heavy actions run on. In order to\n# use this platform add the highcpu_machine constraint to your target.",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "\"\"\"\n        {PARENT_REMOTE_EXECUTION_PROPERTIES}\n        properties: {\n          name: \"gceMachineType\"\n          value: \"n1-highcpu-32\"\n        }\n        \"\"\"",
        "Line" : 172,
        "CharPositionInLine" : 34
      },
      "CommentCount" : 16
    },
    "distdir.bzl" : {
      "ObjectId" : "fb237d7e857ff9f85d437837713257acd31ae7ce",
      "LastModified" : "2018-06-01T11:52:44Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2018 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http:#www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\"\"\"Defines a repository rule that generates an archive consisting of the specified files to fetch\"\"\"",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\"\nload(\"@bazel_tools//tools/build_defs/pkg:pkg.bzl\", \"pkg_tar\")\n\npkg_tar(\n  name=\"archives\",\n  srcs = {srcs},\n  package_dir = \"{dirname}\",\n  visibility = [\"//visibility:public\"],\n)\n\n\"\"\"",
        "Line" : 16,
        "CharPositionInLine" : 9
      },
      "CommentCount" : 2
    },
    "examples/BUILD" : {
      "ObjectId" : "b33cb8ab32a188398d310c595b3e19a4621158c5",
      "LastModified" : "2017-09-18T09:28:51Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "examples/android/java/bazel/BUILD" : {
      "ObjectId" : "3c5685839696e9f083c90bc9ff92d168079ed774",
      "LastModified" : "2016-12-22T09:57:15Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "examples/cpp/BUILD" : {
      "ObjectId" : "3048a0d48e2e8625c7fc18a0c791f3138d89a952",
      "LastModified" : "2016-07-01T13:36:48Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "examples/gen/BUILD" : {
      "ObjectId" : "f3b4e632e694b2e70e71918f2aecddd11deeb464",
      "LastModified" : "2018-06-26T12:49:22Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "examples/java-native/BUILD" : {
      "ObjectId" : "4f4ecd107d309713bb63e3600e06a5decd66aff6",
      "LastModified" : "2016-07-01T13:36:48Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "examples/java-native/src/main/java/com/example/myproject/BUILD" : {
      "ObjectId" : "72cbf76423f9c37cc7719314eab84edf3b980c51",
      "LastModified" : "2016-07-01T13:36:48Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "examples/java-native/src/main/resources/BUILD" : {
      "ObjectId" : "97aa937693835fbbcc8ac013eea15470e3c36752",
      "LastModified" : "2015-03-25T10:31:21Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "examples/java-native/src/test/java/com/example/myproject/BUILD" : {
      "ObjectId" : "72066b3f0a955d3129abd47cda77b3eb68202f59",
      "LastModified" : "2018-06-26T12:49:22Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# This exercises the \"cpu:<num>\" tag.\n#\n# Expected behavior:\n# test0 and test1 run together then one of the other two alone, and then the remaining one alone.",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This attempts to run TestCustomGreeting.java without any resources, so fails.",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/java-skylark/BUILD" : {
      "ObjectId" : "74541aede1487f44a66027f50c2e4fde8a9e13ab",
      "LastModified" : "2016-07-01T13:36:48Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "examples/java-skylark/src/main/java/com/example/myproject/BUILD" : {
      "ObjectId" : "5f8790fd9458763e5242b7c70540d16b4ca1fc1a",
      "LastModified" : "2016-07-01T13:36:48Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "examples/java-skylark/src/main/resources/BUILD" : {
      "ObjectId" : "97aa937693835fbbcc8ac013eea15470e3c36752",
      "LastModified" : "2015-03-25T10:31:21Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "examples/java-skylark/src/test/java/com/example/myproject/BUILD" : {
      "ObjectId" : "0257d24d8c02d4c924f218977b6a1a029caa2967",
      "LastModified" : "2016-07-01T13:36:48Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "examples/py/BUILD" : {
      "ObjectId" : "39ef8c0452bf05fb65142a89fc2c740a34f0a91b",
      "LastModified" : "2018-06-26T12:49:22Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "examples/py_native/BUILD" : {
      "ObjectId" : "9d52fd68483bbc45700f9b6eabb770d92e9ca495",
      "LastModified" : "2016-07-01T13:36:48Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "examples/py_native/fibonacci/BUILD" : {
      "ObjectId" : "10da5110bff0e2c4d7bf9a9274a682372682519d",
      "LastModified" : "2016-07-01T13:36:48Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "examples/shell/BUILD" : {
      "ObjectId" : "095cea47250e2df6773026ced0e0f27af823cd21",
      "LastModified" : "2018-06-27T15:31:00Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "examples/windows/dll/BUILD" : {
      "ObjectId" : "7cf1f2543d4ebb4af58dc389feeb25dd2205cade",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Define the shared library",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define COMPILING_DLL to export symbols during compiling the DLL.\n# See hello-library.h",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# **Explicitly link to hellolib.dll**",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Declare hellolib.dll as data dependency and load it explicitly in code.",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# **Implicitly link to hellolib.dll**",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Link to hellolib.dll through its import library.",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "examples/windows/dll/windows_dll_library.bzl" : {
      "ObjectId" : "21262ae68821436a432a1bf3ce7c5e37986b8b5f",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# This is a simple windows_dll_library rule for builing a DLL Windows\n# that can be depended on by other cc rules.\n#\n# Example useage:\n#   windows_dll_library(\n#       name = \"hellolib\",\n#       srcs = [\n#           \"hello-library.cpp\",\n#       ],\n#       hdrs = [\"hello-library.h\"],\n#       # Define COMPILING_DLL to export symbols during compiling the DLL.\n#       copts = [\"/DCOMPILING_DLL\"],\n#   )\n#",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\"A simple windows_dll_library rule for builing a DLL Windows.\"\"\"",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Build the shared library",
        "Line" : 27,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Get the import library for the dll",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Because we cannot directly depend on cc_binary from other cc rules in deps attribute,\n# we use cc_import as a bridge to depend on the dll.",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Create a new cc_library to also include the headers needed for the shared library",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "scripts/BUILD" : {
      "ObjectId" : "18e69439eff7a1cb6b8f0117c7ac29a54eb8efd1",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Scripts for IDE / Environment support for Bazel",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The master copy of the completion logic lives in bazel-complete-header.bash\n# and bazel-complete-template.bash. You should make edits in those files.",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "scripts/docs/BUILD" : {
      "ObjectId" : "f3bb79819536d3b76c881837e77204ff3c4ca948",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "scripts/docs/doc_versions.bzl" : {
      "ObjectId" : "093422e78d3129960edf2ec23a6b60ba9ca6ea84",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2018 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# To get the checksum of the versioned documentation tree tarball, run the\n# following command with the selected Bazel version:\n#\n# $ curl -s https://mirror.bazel.build/bazel_versioned_docs/jekyll-tree-0.20.0.tar | sha256sum | cut -d\" \" -f1\n# bb79a63810bf1b0aa1f89bd3bbbeb4a547a30ab9af70c9be656cc6866f4b015b\n#\n# This list must be kept in sync with `doc_versions` variable in //site:_config.yml\n\"\"\"This module contains the versions and hashes of Bazel's documentation tarballs.\"\"\"",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "scripts/docs/jekyll.bzl" : {
      "ObjectId" : "9c0025ae697d843476ac96089ead8368ce1d888c",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2017 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\"\"\"Quick rule to build a Jekyll site.\"\"\"",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\"Try to assert the bucket name from the workspace name.\n\n    E.g. it will answer www.bazel.build if the workspace name is build_bazel_www.\n\n    Args:\n       wname: workspace name\n\n    Returns:\n       the guessed name of the bucket for this workspace.\n    \"\"\"",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "\"\"\"Quick and non-hermetic rule to build a Jekyll site.\"\"\"",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Create a shell script to serve the site locally or push with the --push\n# flag.",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "scripts/packages/BUILD" : {
      "ObjectId" : "7e9ec210b2578ea01edccf4206f1977a2b28b971",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "\"\"\"\n        release_info=\"$$(cat $(location :README.md))\"\n        template=\"$$(cat $(location template_bin.sh))\"\n        echo \"$${template//%release_info%/$${release_info}}\" >$@\n        \"\"\"",
        "Line" : 80,
        "CharPositionInLine" : 10
      },
      "CommentCount" : 1
    },
    "scripts/packages/debian/BUILD" : {
      "ObjectId" : "a54e43cad3902777169f8bd46a61867dd9eb5113",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Debian package manager does not order our rcs correctly, insert a tilde\n# Non RC version number are not matched by the regex, example translations:\n# 0.1.2         0.1.2\n# 0.1.2rc2      0.1.2~rc2\n# 0.1.2rc2-jdk7 0.1.2~rc2-jdk7",
        "Line" : 60,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "# Keep in sync with Depends section in ./control",
        "Line" : 79,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# Keep in sync with Suggests section in ./control",
        "Line" : 91,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Force a rebuild on source change",
        "Line" : 112,
        "CharPositionInLine" : 26
      },
      "4" : {
        "Text" : "\"\"\"\n        mkdir -p bazel/debian\n        tar -xf $(location //:bazel-srcs) -C ./bazel\n        for f in $(locations :debian-files); do\n          cp $$f ./bazel/debian/\n        done\n        cp $(location :changelog) ./bazel/debian\n        dpkg-source -b ./bazel\n        cp ./bazel_*.dsc $(location bazel.dsc)\n        cp ./bazel_*.tar.gz $(location bazel.tar.gz)\n        \"\"\"",
        "Line" : 130,
        "CharPositionInLine" : 10
      },
      "CommentCount" : 5
    },
    "scripts/packages/fedora/BUILD" : {
      "ObjectId" : "d589ef3ce3f13305b83f0f63e574bf707bb7448c",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "scripts/packages/self_extract_binary.bzl" : {
      "ObjectId" : "3dc3d8dd22ec3684f4362e26f9552a771c7b0d91",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2015 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\"\"\"Self-extracting binary.\n\nGenerate a binary suitable for self-extraction:\n\nself_extract_binary(\n  name = \"install.sh\",\n  launcher = \"launcher.sh\",\n  resources = [\"path1/file1\", \"path2/file2\"],\n  flatten_ressources = [\"path3/file3\"],\n)\n\nwill generate a file 'install.sh' with a header (launcher.sh)\nand a ZIP footer with the following entries:\n  path1/\n  path1/file1\n  path2/\n  path2/file2\n  file3\n\n\"\"\"",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\"Implementation for the self_extract_binary rule.\"\"\"",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# This is a bit complex for stripping out timestamps",
        "Line" : 38,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "scripts/release/BUILD" : {
      "ObjectId" : "e7fa5c67514737e1c884d7e831be0d44bcbe3b19",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Scripts for building Bazel releases",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scripts/zsh_completion/BUILD" : {
      "ObjectId" : "d50eb71e709378ea909ae73ca3d66ff5f86a70a3",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "site/BUILD" : {
      "ObjectId" : "bd1c02c1de3762e63e77a0331f93431c587509d4",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "\"\"\"\norigdir=$$PWD\ntmpdir=$$(mktemp -d)\nfor f in $(SRCS); do\n    mkdir -p $$tmpdir/$$(dirname $$f)\n    if which dot > /dev/null; then\n      $(location //scripts/docs:generate_dot_graphs) < $$f > $$tmpdir/$$f\n    else\n      cp $$f $$tmpdir/$$f\n    fi\ndone\ncd $$tmpdir/site\ntar cf $$origdir/$@ *\n\"\"\"",
        "Line" : 112,
        "CharPositionInLine" : 10
      },
      "1" : {
        "Text" : "# Generate the documentation tree in the current git worktree",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# jekyll-tree *must* come last to be the default.",
        "Line" : 158,
        "CharPositionInLine" : 27
      },
      "CommentCount" : 3
    },
    "src/BUILD" : {
      "ObjectId" : "5026e349e6dd7acf63dc933f7ead6c604aab1105",
      "LastModified" : "2019-04-17T07:44:02Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Packaging",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO(bazel-team): find a better way to handle dylib extensions.",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Try to grab the java version from the java_toolchain.\n# Unfortunately, we don't have access to the javac options\n# so we cannot get it from the command-line options.",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Create dummy tools so we can do select to prevent building iOS target on\n# Linux.",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The tools Bazel uses to compile Java.\n# TODO(#6316): Gradually remove the targets here.",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# TODO(philwo): Clean this up, once a Bazel that can run py_binary and sh_binary\n# in Skylark rules on Windows has been released.",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# For integration tests",
        "Line" : 170,
        "CharPositionInLine" : 39
      },
      "7" : {
        "Text" : "# WARNING: Only adjust the number in `expect` if you are intentionally\n# adding or removing embedded tools. Know that the more embedded tools there\n# are in Bazel, the bigger the binary becomes and the slower Bazel starts.",
        "Line" : 182,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# percentage",
        "Line" : 186,
        "CharPositionInLine" : 17
      },
      "9" : {
        "Text" : "# The script assumes that the embedded tools zip (if exists) is the\n# first item here, the deploy jar the second and install base key is the\n# third",
        "Line" : 342,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# In msys, a file path without .exe suffix(say foo), refers to a file with .exe\n# suffix(say foo.exe), if foo.exe exists and foo doesn't. So, on windows, we\n# need to remove bazel.exe first, so that cat to bazel won't fail.",
        "Line" : 377,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# For bash completion generation",
        "Line" : 384,
        "CharPositionInLine" : 30
      },
      "12" : {
        "Text" : "# For installer generation\n# For command line reference generation\n# For integration tests",
        "Line" : 385,
        "CharPositionInLine" : 39
      },
      "13" : {
        "Text" : "# In msys, a file path without .exe suffix(say foo), refers to a file with .exe\n# suffix(say foo.exe), if foo.exe exists and foo doesn't. So, on windows, we\n# need to remove bazel.exe first, so that cat to bazel won't fail.",
        "Line" : 401,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# For bash completion generation",
        "Line" : 408,
        "CharPositionInLine" : 30
      },
      "15" : {
        "Text" : "# For installer generation\n# For command line reference generation\n# For integration tests",
        "Line" : 409,
        "CharPositionInLine" : 39
      },
      "16" : {
        "Text" : "# Build an executable named `bazel.exe`.\n# Works on all platforms but only makes sense on Windows.\n# Workaround for non-configurability of genrule's `outs` attribute.",
        "Line" : 418,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# For bash completion generation",
        "Line" : 429,
        "CharPositionInLine" : 30
      },
      "18" : {
        "Text" : "# For installer generation\n# For integration tests",
        "Line" : 430,
        "CharPositionInLine" : 39
      },
      "19" : {
        "Text" : "# config_setting alias left here because bazel-only third_party code is pointing to it",
        "Line" : 539,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Targets used by the java_tools_binaries Buildkite pipeline to build the\n# java_tools_dist_java* zips and upload them to a tmp directory in GCS.",
        "Line" : 618,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Builds the remote Java tools archive. Not embedded or used in Bazel, but used\n# by the Java tools release process.",
        "Line" : 644,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Targets used by the java_tools_binaries Buildkite pipeline to build the\n# java_tools_java* zips and upload them to a tmp directory in GCS.",
        "Line" : 664,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# Part of the Java tools remote archive. Not embedded or used in Bazel.",
        "Line" : 690,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24
    },
    "src/conditions/BUILD" : {
      "ObjectId" : "2b28e28057662e45e62910679f2e587754a309f4",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/embedded_tools.bzl" : {
      "ObjectId" : "fefa79289dee5ddd18fd48e3d691e19e1634b3ec",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# pylint: disable=g-bad-file-header\n# Copyright 2017 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http:#www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\"\"\"Contains Skylark rules used to build the embedded_tools.zip.\"\"\"",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The list of arguments we pass to the script.",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Action to call the script.",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "src/java_tools/buildjar/BUILD" : {
      "ObjectId" : "bd2b06ea5f6112c32cb2e909d2c34163b9e78cda",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n# JavaBuilder and java tools used by Bazel",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This toolchain is used to bootstrap Bazel.",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# javac -extdirs is implemented by appending the contents to the platform\n# class path after -bootclasspath. For convenience, we currently have a\n# single jar that contains the contents of both the bootclasspath and\n# extdirs.",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Prevent \"Could not reserve enough space for object heap\" errors on Windows.",
        "Line" : 69,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Using tiered compilation improves performance of Javac when not using the worker mode.",
        "Line" : 71,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 5
    },
    "src/java_tools/buildjar/java/com/google/devtools/build/buildjar/BUILD" : {
      "ObjectId" : "2abd4be45441798d5319655186285e5637ddd0c7",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   The Java library builders, which are used by Bazel to compile Java\n#   source code.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Bazel's BuildJar",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n## Bootstrapping using Skylark rules\n#",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/java_tools/buildjar/java/com/google/devtools/build/buildjar/genclass/BUILD" : {
      "ObjectId" : "bd6e437f7218834ec870ba6881f4575f865ab413",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "#\n## Bootstrapping using Skylark rules\n#",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/java_tools/buildjar/java/com/google/devtools/build/buildjar/jarhelper/BUILD" : {
      "ObjectId" : "2947261fefeb52f7856dcbf18cdb6bf4b4dbd777",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "#\n## Bootstrapping using Skylark rules\n#",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/java_tools/buildjar/java/com/google/devtools/build/buildjar/javac/plugins/BUILD" : {
      "ObjectId" : "fa2e8a615461ddf628aa649052110a07f34fa8ab",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Plugins for the Java library builders, which are used by Bazel to\n#   compile Java source code.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n## Bootstrapping using Skylark rules\n#",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/java_tools/buildjar/java/com/google/devtools/build/buildjar/javac/statistics/BUILD" : {
      "ObjectId" : "69d693ef4ffbe66757a037e99166d72dfd56d9b3",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/java_tools/buildjar/java/com/google/devtools/build/java/bazel/BUILD" : {
      "ObjectId" : "0c796402c898fdd3f57d63be343a8d7126c355e1",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Tools for working with Java source code, using the Sun javac API.\n#\n# This is not the source code for javac itself.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Exports the canonical javac bootclasspath artifact locations",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Provides java-level access to the canonical javac bootclasspath",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/java_tools/buildjar/java/com/google/devtools/build/java/turbine/BUILD" : {
      "ObjectId" : "17ec3012bf0514398805fcb9066b88ca6facdc32",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/java_tools/buildjar/java/com/google/devtools/build/java/turbine/javac/BUILD" : {
      "ObjectId" : "88cf3293bef3a522bbde6aacd87c00bf9be66f19",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/java_tools/buildjar/javatests/com/google/devtools/build/buildjar/BUILD" : {
      "ObjectId" : "c680e4f12aaf3d9a3601322e1d677c878df71931",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/java_tools/buildjar/javatests/com/google/devtools/build/java/turbine/BUILD" : {
      "ObjectId" : "73cea18cae0907655a59c789e8c17aefc67fa9e2",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/java_tools/buildjar/javatests/com/google/devtools/build/java/turbine/javac/BUILD" : {
      "ObjectId" : "039902dbdacc30beef73f64d548ae91c8bae4068",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Simulates how Bazel invokes turbine",
        "Line" : 29,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "# Simulates how Bazel invokes turbine",
        "Line" : 51,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# Simulates how Bazel invokes turbine",
        "Line" : 76,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 3
    },
    "src/java_tools/import_deps_checker/BUILD" : {
      "ObjectId" : "d0b39b863220c3a38fa5f7adf4b3dbc3e8c168ca",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/java_tools/import_deps_checker/java/com/google/devtools/build/importdeps/BUILD" : {
      "ObjectId" : "3d9c32f79ddd6f10ed35c5abdb3cefe4f85b2077",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   A checker to check the completeness of the deps of java_import or aar_import targets.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# quiet warnings from com.google.protobuf.UnsafeUtil,\n# see: https://github.com/google/protobuf/issues/3781",
        "Line" : 42,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "src/java_tools/import_deps_checker/javatests/com/google/devtools/build/importdeps/BUILD" : {
      "ObjectId" : "28fb32ac928af8c08f47ff13fb8f85ea98d1e0cf",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Tests for the checker to check the completeness of the deps of java_import or aar_import targets.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/java_tools/import_deps_checker/javatests/com/google/devtools/build/importdeps/testdata/BUILD" : {
      "ObjectId" : "2790185ee4182f6333b1c61262f69a321ffdc2e4",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Test data for testing dependency checking.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 8,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "src/java_tools/import_deps_checker/javatests/com/google/devtools/build/importdeps/tests.bzl" : {
      "ObjectId" : "72ef7bac26c13b328b76e302d493c0fc98c574bd",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2018 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\"\"\"Helpers to create golden tests, to minimize code duplication.\"\"\"",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\"Create a golden test for the dependency checker.\"\"\"",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# The exit code 199 means the checker emits errors on dependency issues.",
        "Line" : 66,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Fake bootclasspath.",
        "Line" : 77,
        "CharPositionInLine" : 52
      },
      "CommentCount" : 4
    },
    "src/java_tools/junitrunner/BUILD" : {
      "ObjectId" : "b06806a3adbdcddeca122a6541c52af97c6795d9",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Run JUnit tests in a controlled environment.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/java_tools/junitrunner/java/com/google/testing/coverage/BUILD" : {
      "ObjectId" : "3be31af97b56e013ab91149a5fa9c393b3152e76",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Bazel custom Jacoco runner used to provide proper initialization and lcov\n# report generation when using offline Jacoco instrumentation.\n# This target should not be used as a dependency (except when writing tests for\n# it).\n#\n# An implicit dependency of all \"java_binary\" rules.",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/java_tools/junitrunner/java/com/google/testing/junit/junit4/BUILD" : {
      "ObjectId" : "dcd479334bbf7961633b6a7fe07be559548cd46a",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   JUnit 4.x extensions",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Libraries\n# =========================================================",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Extensions for writing custom JUnit4 runners",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# TODO(bazel-team): make it testonly",
        "Line" : 15,
        "CharPositionInLine" : 19
      },
      "CommentCount" : 4
    },
    "src/java_tools/junitrunner/java/com/google/testing/junit/runner/BUILD" : {
      "ObjectId" : "cb9dd224c927bf0d54863cc5de1cb4b61b5bab0a",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/java_tools/junitrunner/java/com/google/testing/junit/runner/internal/BUILD" : {
      "ObjectId" : "ecbe811e466def7b1fe0dc4af9ba4e45f083c4ac",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Internal code for the JUnit runner that does not depend on JUnit 4.\n# Code used by the JUnit runner that does depend on JUnit 4\n# lives in the \":junit4\" rule.",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Internal code for the JUnit runner that depends on JUnit 4.\n# Code used by the JUnit runner that doesn't depend on JUnit 4\n# lives in the \"internal\" rule.",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/java_tools/junitrunner/java/com/google/testing/junit/runner/junit4/BUILD" : {
      "ObjectId" : "05c248c720dc0d956b0ad8b9f1a418ebe71a26be",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# JUnit4 test runner core code.",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/java_tools/junitrunner/java/com/google/testing/junit/runner/model/BUILD" : {
      "ObjectId" : "8395b149239d38686b9ba1bc0e3f46c8b65b1dd9",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/java_tools/junitrunner/java/com/google/testing/junit/runner/sharding/BUILD" : {
      "ObjectId" : "72e5687e3d756c2cbdbb66543354ee4a26a6e628",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# TODO(bazel-team): This should be testonly = 1.",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/java_tools/junitrunner/java/com/google/testing/junit/runner/sharding/api/BUILD" : {
      "ObjectId" : "2fcd55a1b7d886fc2ba084be88bc77c2547578a8",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# TODO(bazel-team): This should be testonly = 1.",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/java_tools/junitrunner/java/com/google/testing/junit/runner/sharding/testing/BUILD" : {
      "ObjectId" : "21ba2c0341442d0f242a9bc3cbb69ec83ee0dff0",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/java_tools/junitrunner/java/com/google/testing/junit/runner/util/BUILD" : {
      "ObjectId" : "4d2ae59c7b90c6d04f586f9a1fa1706af42cd446",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/java_tools/junitrunner/javatests/com/google/testing/junit/junit4/runner/BUILD" : {
      "ObjectId" : "d16775014e891556fb40038c1951b639c88deeeb",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/java_tools/junitrunner/javatests/com/google/testing/junit/runner/BUILD" : {
      "ObjectId" : "3017c293b101372720c09ba76326ad29ec26a841",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Libraries\n# =========================================================",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Tests\n# =========================================================",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# BazelTestRunner integration tests",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/java_tools/junitrunner/javatests/com/google/testing/junit/runner/testbed/BUILD" : {
      "ObjectId" : "d7182eb4c6e5c5e8c56dea5f8a79a6589b34c571",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/java_tools/singlejar/BUILD" : {
      "ObjectId" : "332bb57457b68004ed51d433500b4b1408c7aed7",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   SingleJar combines multiple zip files and additional files\n#   into a single zip file.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/java_tools/singlejar/java/com/google/devtools/build/singlejar/BUILD" : {
      "ObjectId" : "6e1257e36bd4635835fbe4d61320f5baa5b10c61",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   SingleJar combines multiple zip files and additional files\n#   into a single zip file.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is used as a library outside of Bazel.",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Avoid adding dependencies here - this is a very low-level library and we don't want to pull in\n# the world, even including commons.",
        "Line" : 38,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#\n# Bootstrapping using Skylark rules\n#",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/java_tools/singlejar/java/com/google/devtools/build/zip/BUILD" : {
      "ObjectId" : "4cadbdf110a464cf3cf8d12d750fa618d6bf2ee6",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Zip provides a library for reading and writing zip files, allowing more\n#   advanced manipulation than the JDK equivalents by providing detailed zip\n#   entry data and raw file access.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Necessary for the bootstrap compilation.",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/java_tools/singlejar/javatests/com/google/devtools/build/singlejar/BUILD" : {
      "ObjectId" : "ce83ab01c57b356c2b1fc2820d8abbe83f4b4314",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Tests for SingleJar",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/java_tools/singlejar/javatests/com/google/devtools/build/zip/BUILD" : {
      "ObjectId" : "269df1d9ff0d252cbc38471db2140022e3794c0c",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Tests for Zip",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/main/cpp/BUILD" : {
      "ObjectId" : "7135055e9fd134f2c4dcc994d103f36dabc40cad",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   The Bazel launcher.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# GetUserNameW",
        "Line" : 8,
        "CharPositionInLine" : 33
      },
      "2" : {
        "Text" : "# CoTaskMemFree",
        "Line" : 9,
        "CharPositionInLine" : 30
      },
      "3" : {
        "Text" : "# SHGetKnownFolderPath",
        "Line" : 10,
        "CharPositionInLine" : 32
      },
      "4" : {
        "Text" : "# grpc",
        "Line" : 11,
        "CharPositionInLine" : 31
      },
      "5" : {
        "Text" : "# The system bazelrc can be voided by setting BAZEL_SYSTEM_BAZELRC_PATH to\n# /dev/null.",
        "Line" : 125,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# For windows platforms, this can include environment\n# variables in the form %ProgramData%. We need to escape for\n# multiple levels, here, this becomes\n# /DBAZEL_SYSTEM_BAZELRC_PATH=\"%%ProgramData%%/bazel.bazelrc\"',\n# and the double % get reduced down to 1 by the compiler. A\n# forward slash is used because \\b is a special character,\n# backspace.",
        "Line" : 128,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# For posix platforms, this can include environment variables in the\n# form ${var_name}. Braces are required.",
        "Line" : 138,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 8
    },
    "src/main/cpp/util/BUILD" : {
      "ObjectId" : "dede1a8d136bace04ff1ad0ea6ac802115bb6ed2",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   C++ utility source for Bazel",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Automatically propagate the symbol definition to rules depending on this.",
        "Line" : 146,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# A zip containing source files used by ijar.",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/main/java/com/google/devtools/build/docgen/BUILD" : {
      "ObjectId" : "76063120e4a273e7d7a526f63f9cd52a9fa26ad9",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Documentation generator for Bazel",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/main/java/com/google/devtools/build/lib/BUILD" : {
      "ObjectId" : "1c1bc6d9d16e45f1b8ff4de9ab08f7195e073415",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Main Java code for Bazel",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Generate list of all srcs via:\n# bazel query 'filter(\"srcs\", kind(\"filegroup rule\", //src/main/java/com/google/devtools/build/lib/...))' | sort | sed -e \"s/^/\\\"/\" | sed -e \"s/$/\\\",/\" | fgrep -v \"build/lib:srcs\"",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#   Java interfaces to various native UNIX system services.",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# todo(dslomov): Get rid of this whole library on Windows.",
        "Line" : 97,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# String canonicalizer.",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# I/O utilities.",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# General utilities.",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Event reporting infrastructure.",
        "Line" : 327,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "########################################################################\n#\n# The \"foundation\" library (concurrent, events, util, vfs, inmemoryfs, options)\n# Filesystem abstraction, event reporting, options parsing, I/O routines.\n#",
        "Line" : 342,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# These packages apparently depend on :foundation. I have no idea why, but to\n# avoid breaking them, I allow them to depend on it.",
        "Line" : 348,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Skylark language for configuration files.\n#\n# IMPORTANT:  NOT A PUBLIC INTERFACE. TARGETS SHOULDN'T DEPEND ON THIS.\n#",
        "Line" : 361,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# needed by Copybara",
        "Line" : 419,
        "CharPositionInLine" : 43
      },
      "12" : {
        "Text" : "# Provides core configuration transition abstractions and Blaze-common (i.e not\n# rule-specific) transitions.",
        "Line" : 438,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "########################################################################\n#\n# The \"packages\" library: syntax, packages, pkgcache.\n# BUILD file scanning, parsing and evaluation; package loading and caching.\n#",
        "Line" : 497,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# IMPORTANT:  NOT A PUBLIC INTERFACE.\n#\n# DO NOT ADD A DEPENDENCY ON THIS TARGET, or any other in this\n# package, without first talking to us.  Here are two good\n# reasons:\n#\n# 1.  FRAGILITY. This is not a stable API, it's an internal interface.\n#     It changes from time to time, and your client *will* be broken.\n#\n# 2.  CORRECTNESS.  The BUILD file parser changes rapidly.  If\n#     your application depends upon it, your application will start to\n#     bit-rot almost immediately.",
        "Line" : 503,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Rules",
        "Line" : 991,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# TODO(bazel-team): Include in the srcs the implementations of the rules inside\n# CoreWorkspaceRules.java once they can be extracted from the \"build-base\" target. They can't be\n# extracted currently because of non-trivial inter-package dependencies.",
        "Line" : 1050,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "########################################################################\n#\n# The Blaze query language, revision 2: query2.\n#",
        "Line" : 1415,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# See startup_options.cc",
        "Line" : 1447,
        "CharPositionInLine" : 35
      },
      "19" : {
        "Text" : "# See startup_options.cc",
        "Line" : 1448,
        "CharPositionInLine" : 77
      },
      "20" : {
        "Text" : "########################################################################\n#\n# Miscellaneous targets\n#",
        "Line" : 1527,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# A library for just the BuildInfo class, so it can be used by the external\n# SingleJar implementation.",
        "Line" : 1532,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 22
    },
    "src/main/java/com/google/devtools/build/lib/actions/BUILD" : {
      "ObjectId" : "4d6a0e9ad91b38dc5eed22921ad0d51829453759",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Action graph and cache.",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/main/java/com/google/devtools/build/lib/analysis/platform/BUILD" : {
      "ObjectId" : "74c5adfbe50ae34ebc82f2d56a6860be3afb33dc",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Providers defined for platforms, constraints, and toolchains.",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/main/java/com/google/devtools/build/lib/analysis/skylark/annotations/BUILD" : {
      "ObjectId" : "25dcd112c6b22d6c741b94c4dbcdf77f2527694e",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache 2.0",
        "Line" : 1,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 1
    },
    "src/main/java/com/google/devtools/build/lib/analysis/skylark/annotations/processor/BUILD" : {
      "ObjectId" : "9d89e316850bf607fa486060ed6661f15b9b0e70",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   A preprocessor for skylark annotations.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 5,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "src/main/java/com/google/devtools/build/lib/authandtls/BUILD" : {
      "ObjectId" : "c4f36b539887baaaf240920fa06b419784693491",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/main/java/com/google/devtools/build/lib/bazel/debug/BUILD" : {
      "ObjectId" : "8cb31586f82e71891cb766d40950aff71ea6f4ce",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Debugging helpers and modules",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/main/java/com/google/devtools/build/lib/bazel/execlog/BUILD" : {
      "ObjectId" : "3ff3f686e4308176d79d0b13bdc368e859cd0148",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/main/java/com/google/devtools/build/lib/bazel/repository/cache/BUILD" : {
      "ObjectId" : "0abca7298f4995a0327556d387f0d0d582ea551a",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/main/java/com/google/devtools/build/lib/bazel/repository/downloader/BUILD" : {
      "ObjectId" : "e1e9f211df7911a6943e7ca348a602ae368ce9b5",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/main/java/com/google/devtools/build/lib/buildeventservice/BUILD" : {
      "ObjectId" : "e03776819a9abf58dd666d3ecbd496cd1c3ad3b0",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/main/java/com/google/devtools/build/lib/buildeventservice/client/BUILD" : {
      "ObjectId" : "8cce8b14b2de841da587968e486bf99cd932b0bb",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# This is required for client TLS.",
        "Line" : 13,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 1
    },
    "src/main/java/com/google/devtools/build/lib/buildeventstream/BUILD" : {
      "ObjectId" : "a47c6790d186a340983f94f6c169a212e098bbbd",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# External build-event reporting infrastructure",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/main/java/com/google/devtools/build/lib/buildeventstream/proto/BUILD" : {
      "ObjectId" : "0a91766e2e3d38a380619fc58a75dd4f113b6017",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# The Bazel IntelliJ plugin uses this.",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "src/main/java/com/google/devtools/build/lib/buildeventstream/transports/BUILD" : {
      "ObjectId" : "b66e2dbab0d4e82e389717ec8408494a766474b2",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/main/java/com/google/devtools/build/lib/causes/BUILD" : {
      "ObjectId" : "1e0ac08e9efafc07556ffa211de572f56d45e9c7",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/main/java/com/google/devtools/build/lib/clock/BUILD" : {
      "ObjectId" : "aef19c50978e36f92be631d3968702ce8a7fb867",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Clock classes.",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/main/java/com/google/devtools/build/lib/cmdline/BUILD" : {
      "ObjectId" : "4790cf329beff539fc4bcb24dcad012903ec4da0",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# The \"cmdline\" library: Label validation and target pattern\n# parsing. Both the label syntax and the target pattern syntax are a\n# public interface, and all changes have to be made in a\n# backwards-compatible manner. This library is intentionally\n# standalone so it can be used outside without pulling in any internal\n# code.",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/main/java/com/google/devtools/build/lib/collect/BUILD" : {
      "ObjectId" : "0f83463e98b2238c2e303a0f592837bea4b06982",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Library of collection utilities.",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/main/java/com/google/devtools/build/lib/collect/compacthashset/BUILD" : {
      "ObjectId" : "2406a18a314c7d06c08f698bf200e1639016ded7",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Library of collection utilities.",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/main/java/com/google/devtools/build/lib/collect/nestedset/BUILD" : {
      "ObjectId" : "d15b0bd8174d14ceaeb43a23113eab67caaf450b",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Library of collection utilities.",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/main/java/com/google/devtools/build/lib/concurrent/BUILD" : {
      "ObjectId" : "879af27057cef284a03f4cc836c57003c286a46d",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Library of concurrency utilities.",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/main/java/com/google/devtools/build/lib/dynamic/BUILD" : {
      "ObjectId" : "57e542dc437ca94fec91846f820fefb7a3c88f00",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/main/java/com/google/devtools/build/lib/exec/apple/BUILD" : {
      "ObjectId" : "cbe9d78b4453c217941f9f1c85aa81ca421a1980",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/main/java/com/google/devtools/build/lib/exec/local/BUILD" : {
      "ObjectId" : "9ef0881a89dcd4d3c21720a31407d6e539913704",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/main/java/com/google/devtools/build/lib/graph/BUILD" : {
      "ObjectId" : "59b9b5e611d7a83d534f4a917ff47656257e83e1",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# This package provides a general-purpose directed graph utility class with\n# implementations of numerous textbook graph algorithms and code to read and\n# write AT&T GraphViz files.",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/main/java/com/google/devtools/build/lib/merge_licenses.bzl" : {
      "ObjectId" : "bc27d09d73a97ba44632e427273c25bb1efdfd36",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2019 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\"A platform-independent build rule that merges license files.\"\"\"",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/main/java/com/google/devtools/build/lib/metrics/BUILD" : {
      "ObjectId" : "a12f18f24df4a5b167bc9ea1bfb48caba4c02133",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/main/java/com/google/devtools/build/lib/profiler/BUILD" : {
      "ObjectId" : "8f10c93952b4821d1cbdc2d17319f3cf8a06451e",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Profiler chart library.",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/main/java/com/google/devtools/build/lib/profiler/callcounts/BUILD" : {
      "ObjectId" : "d2f56a5736a314a1ab0c9e7bfcbe054ee589cb7b",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/main/java/com/google/devtools/build/lib/profiler/memory/BUILD" : {
      "ObjectId" : "fb917d019db5ef4c071fc3231951b80090bc4a7a",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/main/java/com/google/devtools/build/lib/query2/BUILD" : {
      "ObjectId" : "0dd84f3f1ea3ba4f8f8671f0fd76e5bf76839362",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Query library.",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/main/java/com/google/devtools/build/lib/remote/BUILD" : {
      "ObjectId" : "020c2cb37556139f1a89fb3829c5def59b4936ec",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# This is required for client TLS.",
        "Line" : 14,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 1
    },
    "src/main/java/com/google/devtools/build/lib/remote/blobstore/BUILD" : {
      "ObjectId" : "cd0b3291bf7bfe3f7450b62501224c2ec7fea113",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/main/java/com/google/devtools/build/lib/remote/blobstore/http/BUILD" : {
      "ObjectId" : "8633d415b8af793e88ca3f1d7cf818c4443ccb86",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# This is required for client TLS.",
        "Line" : 14,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 1
    },
    "src/main/java/com/google/devtools/build/lib/remote/logging/BUILD" : {
      "ObjectId" : "9289124d5ad0f80d64383feaa9e839c7afe19dce",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/main/java/com/google/devtools/build/lib/remote/merkletree/BUILD" : {
      "ObjectId" : "cba41bebc0a63aefcad9eed562ccbd11195b71c1",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/main/java/com/google/devtools/build/lib/remote/options/BUILD" : {
      "ObjectId" : "7f9df498165149b0ff4a98907f5fb85b58e82679",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/main/java/com/google/devtools/build/lib/remote/util/BUILD" : {
      "ObjectId" : "6974d85271b1f34419d4ffd9c222c2c2b15ca74f",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/main/java/com/google/devtools/build/lib/rules/apple/BUILD" : {
      "ObjectId" : "d03e842b131050ea6a1b84b0fcc9b23c331500d0",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Apple platform support",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/main/java/com/google/devtools/build/lib/rules/apple/cpp/BUILD" : {
      "ObjectId" : "c20dc7967e2466621e548a1eb3b5566e8abb6e94",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Support for building cpp for Apple platform",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/main/java/com/google/devtools/build/lib/rules/apple/swift/BUILD" : {
      "ObjectId" : "d8012bcab55844c4c4f9de0df4fc2a78f93754ae",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Support for building swift for Apple platform",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/main/java/com/google/devtools/build/lib/rules/config/BUILD" : {
      "ObjectId" : "0d704ac0f3cc2b3148ce33bb63d104b3745b2ba1",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Support for rules which enable users to define configuration",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/main/java/com/google/devtools/build/lib/rules/cpp/BUILD" : {
      "ObjectId" : "ae802339c7bccab68ad5b5b779437ddeef33f702",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   C++ rule support",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/main/java/com/google/devtools/build/lib/rules/cpp/proto/BUILD" : {
      "ObjectId" : "f8582cf7484212b51399024871ca1bebdfb31c93",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/main/java/com/google/devtools/build/lib/rules/genquery/BUILD" : {
      "ObjectId" : "34924523159507eb56001f8d8d7bc8aa195cd6a9",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Genquery support",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/main/java/com/google/devtools/build/lib/rules/genrule/BUILD" : {
      "ObjectId" : "35bbfa8f3daaa3f4915b56d1efc5fb9140a48a0c",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Genrule support",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/main/java/com/google/devtools/build/lib/rules/java/BUILD" : {
      "ObjectId" : "af87385e83d2d963146b74f065a38a60d922c93a",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/main/java/com/google/devtools/build/lib/rules/objc/BUILD" : {
      "ObjectId" : "fdc81ff355d510b869f80e939ebcd37e628a5213",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Objective-C rule support",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/main/java/com/google/devtools/build/lib/rules/platform/BUILD" : {
      "ObjectId" : "34aa271d1cb39a1fbd8b38d14d1416fa0fe0dce2",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Rules to define Platforms and related Constraints.",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/main/java/com/google/devtools/build/lib/sandbox/BUILD" : {
      "ObjectId" : "7b745bef2fc3c58d6f8444fa7a37b2999d1cf568",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/main/java/com/google/devtools/build/lib/shell/BUILD" : {
      "ObjectId" : "91fa8958569f52c3ccc2209bab1428731836598f",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Library for dealing with executable commands, including their arguments and runtime environment\n# (environment variables, working directory). It lets a caller execute a command, get its results,\n# and optionally forward interrupts to the subprocess. The library also handles creating threads to\n# ensure timely reading of subprocess outputs.",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Bootstrapping SingleJar using Skylark rules\n#",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/main/java/com/google/devtools/build/lib/skyframe/packages/BUILD" : {
      "ObjectId" : "c4a74a4609783d20ab97768a93861e12c6a76425",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/main/java/com/google/devtools/build/lib/skyframe/serialization/BUILD" : {
      "ObjectId" : "ee7ea9ac2ddbdb8f82c4901df2ba171ae52677bb",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/main/java/com/google/devtools/build/lib/skyframe/serialization/autocodec/BUILD" : {
      "ObjectId" : "783e0dc6902db097e22865b7528c63542d0cdcda",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# @AutoCodec annotation and plugin. Used by clients.",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Generated classes have the following dependencies.",
        "Line" : 16,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# @AutoCodec annotation only. Used by clients and the processor.",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Installs the @AutoCodec annotation processor as a compiler plugin.",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# @AutoCodec annotation processor implementation.",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# .tar archive of dependencies used for bootstrapping.",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The .jar files are created within the .tar file under third_party/bazel_bootstrap so that\n# they will appear there in bazel-distfile, which in turn makes them visible for bootstrapping\n# from the LIBRARY_JARS rule of bazel/scripts/bootstrap/compile.sh.",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "src/main/java/com/google/devtools/build/lib/skyframe/serialization/testutils/BUILD" : {
      "ObjectId" : "c57f70010f07812cc0d927d046dea51a233c05a9",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/main/java/com/google/devtools/build/lib/skyframe/trimming/BUILD" : {
      "ObjectId" : "9b2c425eab71f2d28d9014bb48763e7b53ed72d1",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Classes which provide support for automatically trimming configuration to avoid wasted work during a build.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/main/java/com/google/devtools/build/lib/skylarkbuildapi/BUILD" : {
      "ObjectId" : "ff2735566c43efc53bc5849c6e0fc140187ef8b9",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   This package contains interfaces representing the skylark \"build API\"\n#   (but not the implementation of that API). Ultimately, this package\n#   may be broken out of the Bazel package hierarchy to be standalone.\n#   Thus, this package should not depend on Bazel-specific packages (only\n#   those which contain pure-Skylark concepts, such as the interpreter or\n#   annotation interfaces).",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 11,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "src/main/java/com/google/devtools/build/lib/skylarkbuildapi/android/BUILD" : {
      "ObjectId" : "b29813adf10631d2ea39f6f62560e68618e030ac",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   This package contains interfaces representing the skylark \"build API\"\n#   (but not the implementation of that API). Ultimately, this package\n#   may be broken out of the Bazel package hierarchy to be standalone.\n#   Thus, this package should not depend on Bazel-specific packages (only\n#   those which contain pure-Skylark concepts, such as the interpreter or\n#   annotation interfaces).",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 11,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "src/main/java/com/google/devtools/build/lib/skylarkbuildapi/apple/BUILD" : {
      "ObjectId" : "0d4920e9c12d781d8e59d134c83acb838e194b0f",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   This package contains interfaces representing the skylark \"build API\"\n#   (but not the implementation of that API). Ultimately, this package\n#   may be broken out of the Bazel package hierarchy to be standalone.\n#   Thus, this package should not depend on Bazel-specific packages (only\n#   those which contain pure-Skylark concepts, such as the interpreter or\n#   annotation interfaces).",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 11,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "src/main/java/com/google/devtools/build/lib/skylarkbuildapi/config/BUILD" : {
      "ObjectId" : "c456d792655c3aa6a1859204aa49a917fb39dd9e",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   This package contains interfaces representing the skylark \"build API\"\n#   (but not the implementation of that API). Ultimately, this package\n#   may be broken out of the Bazel package hierarchy to be standalone.\n#   Thus, this package should not depend on Bazel-specific packages (only\n#   those which contain pure-Skylark concepts, such as the interpreter or\n#   annotation interfaces).",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 11,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "src/main/java/com/google/devtools/build/lib/skylarkbuildapi/cpp/BUILD" : {
      "ObjectId" : "6f8133b14c86e6541060df6d68d29bb64547da79",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   This package contains interfaces representing the skylark \"build API\"\n#   (but not the implementation of that API). Ultimately, this package\n#   may be broken out of the Bazel package hierarchy to be standalone.\n#   Thus, this package should not depend on Bazel-specific packages (only\n#   those which contain pure-Skylark concepts, such as the interpreter or\n#   annotation interfaces).",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 11,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "src/main/java/com/google/devtools/build/lib/skylarkbuildapi/java/BUILD" : {
      "ObjectId" : "e1fb5040007491114f05358bcd913ba6dd7204c9",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   This package contains interfaces representing the skylark \"build API\"\n#   (but not the implementation of that API). Ultimately, this package\n#   may be broken out of the Bazel package hierarchy to be standalone.\n#   Thus, this package should not depend on Bazel-specific packages (only\n#   those which contain pure-Skylark concepts, such as the interpreter or\n#   annotation interfaces).",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 11,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "src/main/java/com/google/devtools/build/lib/skylarkbuildapi/platform/BUILD" : {
      "ObjectId" : "5adb3710f4c82848d4cc93edf19972663a01a9f8",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   This package contains interfaces representing the skylark \"build API\"\n#   (but not the implementation of that API). Ultimately, this package\n#   may be broken out of the Bazel package hierarchy to be standalone.\n#   Thus, this package should not depend on Bazel-specific packages (only\n#   those which contain pure-Skylark concepts, such as the interpreter or\n#   annotation interfaces).",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 11,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "src/main/java/com/google/devtools/build/lib/skylarkbuildapi/proto/BUILD" : {
      "ObjectId" : "d379c34cd78553cd367cbc56024191829de058a5",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   This package contains interfaces representing the skylark \"build API\"\n#   (but not the implementation of that API). Ultimately, this package\n#   may be broken out of the Bazel package hierarchy to be standalone.\n#   Thus, this package should not depend on Bazel-specific packages (only\n#   those which contain pure-Skylark concepts, such as the interpreter or\n#   annotation interfaces).",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 11,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "src/main/java/com/google/devtools/build/lib/skylarkbuildapi/python/BUILD" : {
      "ObjectId" : "c49c44d83e56c397643f6dc4a042c706a32f61bb",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   This package contains interfaces representing the skylark \"build API\"\n#   (but not the implementation of that API). Ultimately, this package\n#   may be broken out of the Bazel package hierarchy to be standalone.\n#   Thus, this package should not depend on Bazel-specific packages (only\n#   those which contain pure-Skylark concepts, such as the interpreter or\n#   annotation interfaces).",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 11,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "src/main/java/com/google/devtools/build/lib/skylarkbuildapi/repository/BUILD" : {
      "ObjectId" : "b9803ba97aec531ff12a524a3583dae715ffb3f5",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   This package contains interfaces representing the skylark \"build API\"\n#   (but not the implementation of that API). Ultimately, this package\n#   may be broken out of the Bazel package hierarchy to be standalone.\n#   Thus, this package should not depend on Bazel-specific packages (only\n#   those which contain pure-Skylark concepts, such as the interpreter or\n#   annotation interfaces).",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 11,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "src/main/java/com/google/devtools/build/lib/skylarkbuildapi/test/BUILD" : {
      "ObjectId" : "40f1563ab9353154c89f13ab5c4283cd0af31dc4",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   This package contains interfaces representing the skylark \"build API\"\n#   (but not the implementation of that API). Ultimately, this package\n#   may be broken out of the Bazel package hierarchy to be standalone.\n#   Thus, this package should not depend on Bazel-specific packages (only\n#   those which contain pure-Skylark concepts, such as the interpreter or\n#   annotation interfaces).",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 11,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "src/main/java/com/google/devtools/build/lib/skylarkdebug/module/BUILD" : {
      "ObjectId" : "39c6b04031cf211ea5615eb704adeff5f40b4150",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/main/java/com/google/devtools/build/lib/skylarkdebug/proto/BUILD" : {
      "ObjectId" : "f310282fb3a84e7eadeb8716f48eabe4ca731b95",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/main/java/com/google/devtools/build/lib/skylarkdebug/server/BUILD" : {
      "ObjectId" : "5122e253295937b6893bc0ca68b11afbb632bd65",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/main/java/com/google/devtools/build/lib/skylarkinterface/processor/BUILD" : {
      "ObjectId" : "e3dd8832988cd32738674975663431eb85e85038",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   A preprocessor for skylarkinterface annotations.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 8,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "src/main/java/com/google/devtools/build/lib/ssd/BUILD" : {
      "ObjectId" : "c6016e031a09de1ecdeabc2d6619bb2ce2a048a0",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/main/java/com/google/devtools/build/lib/standalone/BUILD" : {
      "ObjectId" : "c1a479d3b918e76717cad380effe546e435500e8",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/main/java/com/google/devtools/build/lib/unsafe/BUILD" : {
      "ObjectId" : "84feca8a35e2a813232795dbdfdc8b9e131ab5ab",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/main/java/com/google/devtools/build/lib/vfs/BUILD" : {
      "ObjectId" : "ae2005e144905d3720b1ef2e9492c7a2b44ef109",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Virtual file system; do not use externally!",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/main/java/com/google/devtools/build/lib/vfs/inmemoryfs/BUILD" : {
      "ObjectId" : "2fd8f60b619241178aa9a3388d2b6538827f5719",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# In-memory virtual file system.",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/main/java/com/google/devtools/build/lib/windows/BUILD" : {
      "ObjectId" : "5b0fa68ce9738a7112e9ecd322890b3362a52875",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/main/java/com/google/devtools/build/lib/windows/jni/BUILD" : {
      "ObjectId" : "273cdbdad19a05022e133e401b878cde2b2c36f3",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/main/java/com/google/devtools/build/lib/worker/BUILD" : {
      "ObjectId" : "d1f096214d48733e0b1c454c18be75cad6512396",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/main/java/com/google/devtools/build/skydoc/BUILD" : {
      "ObjectId" : "8f4b5876b23e369230d2cfa52e70f97849f9640a",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Skydoc is a documentation generator for skylark files.\n#\n#   It is currently experimental and in development.\n#\n# Usage:\n# skydoc <target_file> <output_file>",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 13,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "# quiet warnings from com.google.protobuf.UnsafeUtil,\n# see: https://github.com/google/protobuf/issues/3781\n# and: https://github.com/bazelbuild/bazel/issues/5599",
        "Line" : 36,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# ... but only on JDK >= 9",
        "Line" : 41,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 4
    },
    "src/main/java/com/google/devtools/build/skydoc/fakebuildapi/BUILD" : {
      "ObjectId" : "766f4045821f72916837f115bbd0179288edd89f",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache 2.0",
        "Line" : 5,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 1
    },
    "src/main/java/com/google/devtools/build/skydoc/fakebuildapi/android/BUILD" : {
      "ObjectId" : "b8d310145c51eb8d045253e1a69b1ac438e86214",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache 2.0",
        "Line" : 5,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 1
    },
    "src/main/java/com/google/devtools/build/skydoc/fakebuildapi/apple/BUILD" : {
      "ObjectId" : "a6682ce5b39e4a7018cc3d41939b5d3a9ab57d64",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache 2.0",
        "Line" : 5,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 1
    },
    "src/main/java/com/google/devtools/build/skydoc/fakebuildapi/config/BUILD" : {
      "ObjectId" : "961341acd71d85743a07098c951fc4e4bb4f49db",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache 2.0",
        "Line" : 5,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 1
    },
    "src/main/java/com/google/devtools/build/skydoc/fakebuildapi/cpp/BUILD" : {
      "ObjectId" : "51d7d30b6460150df835d95effd7440108d409da",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache 2.0",
        "Line" : 5,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 1
    },
    "src/main/java/com/google/devtools/build/skydoc/fakebuildapi/java/BUILD" : {
      "ObjectId" : "450406ebd3014623b48be472e7dfb3bf6e62fa1d",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache 2.0",
        "Line" : 5,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 1
    },
    "src/main/java/com/google/devtools/build/skydoc/fakebuildapi/platform/BUILD" : {
      "ObjectId" : "bcbf328ac8b14c9dd6a9b0b50972c5f645a67f38",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache 2.0",
        "Line" : 5,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 1
    },
    "src/main/java/com/google/devtools/build/skydoc/fakebuildapi/proto/BUILD" : {
      "ObjectId" : "9e344998d4dc2a9e83778e737b21884eaf8186f0",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache 2.0",
        "Line" : 5,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 1
    },
    "src/main/java/com/google/devtools/build/skydoc/fakebuildapi/python/BUILD" : {
      "ObjectId" : "5b4cf6855e36ab9f42155b1fc4585e0cae830d25",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache 2.0",
        "Line" : 5,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 1
    },
    "src/main/java/com/google/devtools/build/skydoc/fakebuildapi/repository/BUILD" : {
      "ObjectId" : "9c349e942511f9405dd741b9b94bd2a1ffb3bb87",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache 2.0",
        "Line" : 5,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 1
    },
    "src/main/java/com/google/devtools/build/skydoc/fakebuildapi/test/BUILD" : {
      "ObjectId" : "b07c5f9079f486649ccadb8b066da42a57eb5db5",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache 2.0",
        "Line" : 5,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 1
    },
    "src/main/java/com/google/devtools/build/skydoc/rendering/BUILD" : {
      "ObjectId" : "d3603e243279e6e3a6056990092f99cc6f4ff311",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache 2.0",
        "Line" : 5,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 1
    },
    "src/main/java/com/google/devtools/build/skyframe/BUILD" : {
      "ObjectId" : "b1ff51eac0f86223e06e2565ab89b0dadf5da660",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Skyframe Java code",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# keep",
        "Line" : 36,
        "CharPositionInLine" : 64
      },
      "CommentCount" : 2
    },
    "src/main/java/com/google/devtools/common/options/BUILD" : {
      "ObjectId" : "5936b2c4c603628c3f7d1d76f7af321b0e5351c1",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   A devtools-common options parser.\n#   Open-sourced as part of Bazel.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/main/java/com/google/devtools/common/options/processor/BUILD" : {
      "ObjectId" : "4c37ea0ea932dae6551fa7077cd02b57b9e9555e",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   A preprocessor for the annotations used in the options parser.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 5,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "src/main/java/com/google/devtools/common/options/testing/BUILD" : {
      "ObjectId" : "81f9518816c50a869617d170a36b1fb6b222a10c",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Testing tools for the devtools-common options parser.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 8,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "src/main/java/com/google/devtools/starlark/BUILD" : {
      "ObjectId" : "da44f7674a2f6163a8df424d44c0604338ccb6fa",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# The Starlark interpreter\n# Open-sourced as part of Bazel.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# quiet warnings from com.google.protobuf.UnsafeUtil,\n# see: https://github.com/google/protobuf/issues/3781\n# and: https://github.com/bazelbuild/bazel/issues/5599",
        "Line" : 10,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# ... but only on JDK >= 9",
        "Line" : 15,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 3
    },
    "src/main/native/BUILD" : {
      "ObjectId" : "c65b29c7a278b5a2bea259acdcc424c71aedd763",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# For jni headers.",
        "Line" : 54,
        "CharPositionInLine" : 23
      },
      "1" : {
        "Text" : "# TODO(bazel-team): Come up with a way to support platform-specific dynamic\n# library extensions.  This is issue #914.",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/main/native/windows/BUILD" : {
      "ObjectId" : "e8b7a0ba7351988a0ceea03c02a496f8efe8e677",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Directly re-export resources.o so it can be consumed in the client.",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# A zip containing source files used by ijar.",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/main/protobuf/BUILD" : {
      "ObjectId" : "f8e13adb4d3bf048cb2f3f18983462f041572e0d",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# This new option tagging method is in flux while being applied to the options\n# in the Bazel code base. The visibility should not be changed to allow external\n# dependencies until the interface has stabilized and can commit to maintaining\n# backwards compatibility for 6 months' time.\n# TODO(bazel-team) Make these visibility:public when the interface is stable.",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Proto needed by singlejar and embedded into the java tools archive.",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/main/tools/BUILD" : {
      "ObjectId" : "d7e518eb8aa9249496f706b9ec0c8296f92f4862",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/objc_tools/bundlemerge/BUILD" : {
      "ObjectId" : "25862da6d07af13fc5440c1eb8a692d8c43168ee",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/objc_tools/plmerge/BUILD" : {
      "ObjectId" : "49aafc28ca58936189dced4898090fee76b4e675",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/rule_size_test.bzl" : {
      "ObjectId" : "e80fb90d6bd483111015dbd086c1cc2d809c0f9b",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2018 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\"Defines a test rule that asserts the number of output files in another rule.\n\nThis rule operates in Bazel's analysis phase, not in its execution phase, and so\nit's faster than a conventional test rule would be.\n\nFurthermore this rule's action does not depend on any of the inputs (because the\nassertion is done in the analysis phase) so Bazel won't even build the input\nfiles to run the test. The test has constant execution time.\n\n=== Use ===\n\nUse this rule to assert the size of a filegroup or any other rule and catch\nsudden, unexpected changes in the size.\n\nThe `margin` attribute allows specifying a tolerance value (percentage), to\nallow for organic, expected growth or shrinkage of the target rule.\n\n=== Example ===\n\nThe \"resources_size_test\" test fails if the number of files in\n\"resources\" changes from 123 by more than 3 percent:\n\n    filegroup(\n        name = \"resources\",\n        srcs = glob([\"**\"]) + [\n            \"//foo/bar:resources\"\n            \"//baz:resources\",\n        ],\n    )\n\n    rule_size_test(\n        name = \"resources_size_test\",\n        src = \":resources\",\n\n        # Expect 123 files in \":resources\", with an error margin of 3% to allow\n        # for slight changes.\n        expect = 123,\n        margin = 3,\n    )\n\"\"\"",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Do not allow more than 100% change in size.",
        "Line" : 61,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Allow no margin when expecting 0 files, to avoid division by zero.",
        "Line" : 65,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# CreateProcessW can launch .bat files directly as long as they are NOT\n# empty. Therefore we write a .bat file with a comment in it.",
        "Line" : 92,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# The target whose number of output files this rule asserts. The number\n# of output files is the size of the target's DefaultInfo.files field.",
        "Line" : 112,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# A non-negative integer, the expected number of files that the target\n# in `src` outputs. If 0, then `margin` must also be 0.",
        "Line" : 115,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# A percentage value, in the range of [0..100]. Allows for tolerance in\n# the difference between expected and actual number of files in `src`.\n# If 0, then the target in `src` must output exactly `expect` many\n# files.",
        "Line" : 118,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# True if running on Windows, False otherwise.",
        "Line" : 123,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 9
    },
    "src/test/cpp/BUILD" : {
      "ObjectId" : "881f94ecfe2eb8731fee4d0872ca8b507578d936",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   C++ utility tests for Bazel",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/test/cpp/util/BUILD" : {
      "ObjectId" : "7183c2a940aecbf6a826058a45054bca1ac20e0f",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   C++ utility tests for Bazel",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/test/gen/BUILD" : {
      "ObjectId" : "68deaa8009b5c64b41af7cec5d6a3ad21a7ec889",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Build rules to test genrules under bazel.\n# TODO(bazel-team): Convert to unit test, or remove when the temporary Docker\n# override flags are removed.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# A rule that can help check if Docker container is enabled.",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# A rule to help check if the right uid is set.",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# A genrule to check if output/stdout/strerr are piped correctly.",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# A use case that fails if it's built in a Docker container running under root.",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# A use case that fails if it's built in a Docker container running under root.",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/test/java/com/google/devtools/build/android/BUILD" : {
      "ObjectId" : "e8f3b734f4c96674afe629d7ed0500003fd1d6e5",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/build/android/desugar/BUILD" : {
      "ObjectId" : "90358a5f86a37931269f08bb2b38f2530725220a",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Tests for the Java 8 desugaring tool for Android.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 8,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "# TODO(ajmichael): Use @bazel_tools//tools/android:android_jar here once it supplies runfiles.",
        "Line" : 26,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Make tests run against desugared library",
        "Line" : 40,
        "CharPositionInLine" : 32
      },
      "4" : {
        "Text" : "# Make tests run against twice-desugared library",
        "Line" : 58,
        "CharPositionInLine" : 38
      },
      "5" : {
        "Text" : "# Test for b/62060793. Verifies constant lambda arguments that were pushed using *CONST_0\n# instructions.",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Test for b/62456849. If a synthetic method is named \"lambda$XXX\", but not used in invokedynamic,\n# then Desugar should keep it in the class, rather than renaming it.",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Make tests run against desugared library",
        "Line" : 110,
        "CharPositionInLine" : 32
      },
      "8" : {
        "Text" : "# Make tests run against desugared library",
        "Line" : 127,
        "CharPositionInLine" : 32
      },
      "9" : {
        "Text" : "# Make tests run against desugared library",
        "Line" : 143,
        "CharPositionInLine" : 61
      },
      "10" : {
        "Text" : "# Make tests run against desugared library",
        "Line" : 161,
        "CharPositionInLine" : 38
      },
      "11" : {
        "Text" : "# Make tests run against desugared library",
        "Line" : 180,
        "CharPositionInLine" : 61
      },
      "12" : {
        "Text" : "# Make tests run against desugared library",
        "Line" : 199,
        "CharPositionInLine" : 48
      },
      "13" : {
        "Text" : "# Make tests run against 2x desugared library",
        "Line" : 219,
        "CharPositionInLine" : 54
      },
      "14" : {
        "Text" : "# Make tests run against desugared library",
        "Line" : 237,
        "CharPositionInLine" : 55
      },
      "15" : {
        "Text" : "# Make tests run against desugared library",
        "Line" : 254,
        "CharPositionInLine" : 53
      },
      "16" : {
        "Text" : "# Make tests run against desugared library",
        "Line" : 271,
        "CharPositionInLine" : 54
      },
      "17" : {
        "Text" : "# Make tests run against desugared library",
        "Line" : 288,
        "CharPositionInLine" : 60
      },
      "18" : {
        "Text" : "# Make tests run against desugared library",
        "Line" : 305,
        "CharPositionInLine" : 57
      },
      "19" : {
        "Text" : "# TODO (b/72181101): -Xbootclasspath/p is removed in JDK 9.",
        "Line" : 320,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# Make tests run against desugared library",
        "Line" : 327,
        "CharPositionInLine" : 45
      },
      "21" : {
        "Text" : "# Depend on Jacoco runtime in case testdata was built with coverage\n# instrumentation",
        "Line" : 332,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# Make tests run against desugared library",
        "Line" : 347,
        "CharPositionInLine" : 45
      },
      "23" : {
        "Text" : "# Depend on Jacoco runtime in case testdata was built with coverage\n# instrumentation",
        "Line" : 351,
        "CharPositionInLine" : 8
      },
      "24" : {
        "Text" : "# This test sets the lambda dump directory via the system property in the command line\n# (i.e., jvm_flags). So the dump directory is expected to succeed.",
        "Line" : 489,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Different from the test target above, this test does not set the lambda dump directory in the\n# command line. Instead, it sets the system property in the test code, which is expected to fail.",
        "Line" : 506,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Golden file",
        "Line" : 555,
        "CharPositionInLine" : 50
      },
      "27" : {
        "Text" : "# Make sure desugaring twice doesn't add any files",
        "Line" : 562,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Golden file",
        "Line" : 592,
        "CharPositionInLine" : 56
      },
      "29" : {
        "Text" : "# TODO(b/37110951): Add jar content test for desugared default methods that works with coverage on",
        "Line" : 599,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Golden file",
        "Line" : 612,
        "CharPositionInLine" : 63
      },
      "31" : {
        "Text" : "# Golden file",
        "Line" : 630,
        "CharPositionInLine" : 73
      },
      "32" : {
        "Text" : "# Golden file",
        "Line" : 647,
        "CharPositionInLine" : 73
      },
      "33" : {
        "Text" : "# Test for b/63900665",
        "Line" : 655,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Golden file",
        "Line" : 667,
        "CharPositionInLine" : 93
      },
      "35" : {
        "Text" : "# Test for b/62047432",
        "Line" : 674,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# puts full Jar instead of header Jar on the classpath",
        "Line" : 742,
        "CharPositionInLine" : 29
      },
      "37" : {
        "Text" : "# puts full Jar instead of header Jar on the classpath",
        "Line" : 756,
        "CharPositionInLine" : 29
      },
      "38" : {
        "Text" : "# puts full Jar instead of header Jar on the classpath",
        "Line" : 757,
        "CharPositionInLine" : 35
      },
      "39" : {
        "Text" : "# The golden file for this target should NEVER contain generated lambda classes.",
        "Line" : 774,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Golden file",
        "Line" : 786,
        "CharPositionInLine" : 75
      },
      "41" : {
        "Text" : "# The following genrules run the code tested here as a build tool.  While that's\n# very similar to how Bazel will invoke it natively, the downside is that\n# running the tested tool in a genrule doesn't contribute code coverage\n# information for the tested tool.  Note that the code in :testdata doesn't\n# appear in coverage reports when depending on this target regardless because\n# the needed metadata doesn't survive these genrules.",
        "Line" : 793,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Depend on Jacoco runtime in case testdata was built with coverage\n# instrumentation",
        "Line" : 805,
        "CharPositionInLine" : 8
      },
      "43" : {
        "Text" : "# Generates special lambda invocation so we can test for b/62060793.",
        "Line" : 821,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Desugar the test data for b/62456849",
        "Line" : 830,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Depend on Jacoco runtime in case testdata was built with coverage instrumentation",
        "Line" : 835,
        "CharPositionInLine" : 8
      },
      "46" : {
        "Text" : "# Convert human-written methods whose names start with \"lambda$XXX\" to synthetic methods, so we can\n# test for b/62456849.",
        "Line" : 854,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Desugar the test data for b/62456849",
        "Line" : 867,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# Depend on Jacoco runtime in case testdata was built with coverage instrumentation",
        "Line" : 874,
        "CharPositionInLine" : 8
      },
      "49" : {
        "Text" : "# Depend on Jacoco runtime in case testdata was built with coverage\n# instrumentation",
        "Line" : 895,
        "CharPositionInLine" : 8
      },
      "50" : {
        "Text" : "# This target tests the flag --allow_desugaring_lambda_for_lint=true, which is introduced to solve\n# the incompatibility issue with Android Lint. When the issue is addressed, this target and the\n# flag will be removed.",
        "Line" : 911,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Depend on Jacoco runtime in case testdata was built with coverage\n# instrumentation",
        "Line" : 920,
        "CharPositionInLine" : 8
      },
      "52" : {
        "Text" : "# the lib desugared twice",
        "Line" : 977,
        "CharPositionInLine" : 69
      },
      "53" : {
        "Text" : "# the lib desugared twice.",
        "Line" : 1022,
        "CharPositionInLine" : 69
      },
      "54" : {
        "Text" : "# the lib desugared twice.",
        "Line" : 1068,
        "CharPositionInLine" : 69
      },
      "55" : {
        "Text" : "# Depend on Jacoco runtime in case testdata was built with coverage\n# instrumentation",
        "Line" : 1090,
        "CharPositionInLine" : 8
      },
      "56" : {
        "Text" : "# Depend on Jacoco runtime in case testdata was built with coverage\n# instrumentation",
        "Line" : 1115,
        "CharPositionInLine" : 8
      },
      "57" : {
        "Text" : "# Depend on Jacoco runtime in case testdata was built with coverage\n# instrumentation",
        "Line" : 1142,
        "CharPositionInLine" : 8
      },
      "58" : {
        "Text" : "# Depend on Jacoco runtime in case testdata was built with coverage\n# instrumentation",
        "Line" : 1164,
        "CharPositionInLine" : 8
      },
      "59" : {
        "Text" : "# Depend on Jacoco runtime in case testdata was built with coverage\n# instrumentation",
        "Line" : 1186,
        "CharPositionInLine" : 8
      },
      "60" : {
        "Text" : "# Depend on Jacoco runtime in case testdata was built with coverage\n# instrumentation",
        "Line" : 1212,
        "CharPositionInLine" : 8
      },
      "61" : {
        "Text" : "# Depend on Jacoco runtime in case testdata was built with coverage\n# instrumentation",
        "Line" : 1233,
        "CharPositionInLine" : 8
      },
      "62" : {
        "Text" : "# Depend on Jacoco runtime in case testdata was built with coverage\n# instrumentation",
        "Line" : 1253,
        "CharPositionInLine" : 8
      },
      "63" : {
        "Text" : "# Depend on Jacoco runtime in case testdata was built with coverage\n# instrumentation",
        "Line" : 1279,
        "CharPositionInLine" : 8
      },
      "64" : {
        "Text" : "# Depend on Jacoco runtime in case testdata was built with coverage\n# instrumentation",
        "Line" : 1307,
        "CharPositionInLine" : 8
      },
      "65" : {
        "Text" : "\"\"\"\n    tmpdir=$$(mktemp -d)\n    # unzip input jar in order to pass a folder to desugar\n    pwddir=$$PWD\n    (cd $$tmpdir; $$pwddir/$(location //tools/zip:zipper) x $$pwddir/$(location :testdata_like_in_android_studio))\n    $(location //src/tools/android/java/com/google/devtools/build/android/desugar:Desugar) \\\n          --min_sdk_version 23 --nodesugar_interface_method_bodies_if_needed \\\n          -i $$tmpdir -o $(location testdata_desugared_from_directory_to_jar.jar) \\\n          --copy_bridges_from_classpath \\\n          --classpath_entry $(location :separate) \\\n          --classpath_entry $(location //third_party:guava-jars) \\\n          --classpath_entry $(location //third_party/java/jacoco:blaze-agent) \\\n          --bootclasspath_entry $(location @bazel_tools//tools/android:android_jar)\n     rm -rf $$tmpdir\n    \"\"\"",
        "Line" : 1315,
        "CharPositionInLine" : 10
      },
      "66" : {
        "Text" : "# Depend on Jacoco runtime in case testdata was built with coverage\n# instrumentation",
        "Line" : 1343,
        "CharPositionInLine" : 8
      },
      "67" : {
        "Text" : "\"\"\"\n    tmpdirIn=$$(mktemp -d)\n    tmpdirOut=$$(mktemp -d)\n    # unzip input jar in order to pass a folder to desugar\n    pwddir=$$PWD\n    (cd $$tmpdirIn; $$pwddir/$(location //tools/zip:zipper) x $$pwddir/$(location :testdata_like_in_android_studio))\n    $(location //src/tools/android/java/com/google/devtools/build/android/desugar:Desugar) \\\n          --min_sdk_version 23 --nodesugar_interface_method_bodies_if_needed \\\n          -i $$tmpdirIn  -o $$tmpdirOut \\\n          --copy_bridges_from_classpath \\\n          --classpath_entry $(location :separate) \\\n          --classpath_entry $(location //third_party:guava-jars) \\\n          --classpath_entry $(location //third_party/java/jacoco:blaze-agent) \\\n          --bootclasspath_entry $(location @bazel_tools//tools/android:android_jar)\n     pushd $$tmpdirOut\n     $$pwddir/$(location //tools/zip:zipper) c $$pwddir/$(location testdata_desugared_from_directory_to_directory.jar) $$(find *)\n     popd\n     rm -rf $$tmpdirIn\n     rm -rf $$tmpdirOut\n    \"\"\"",
        "Line" : 1351,
        "CharPositionInLine" : 10
      },
      "68" : {
        "Text" : "# Depend on Jacoco runtime in case testdata was built with coverage\n# instrumentation",
        "Line" : 1384,
        "CharPositionInLine" : 8
      },
      "69" : {
        "Text" : "\"\"\"\n    tmpdir=$$(mktemp -d)\n    # unzip a classpath entry jar in order to pass a folder to desugar\n    pwddir=$$PWD\n    (cd $$tmpdir; $$pwddir/$(location //tools/zip:zipper) x $$pwddir/$(location :separate))\n    $(location //src/tools/android/java/com/google/devtools/build/android/desugar:Desugar) \\\n          --min_sdk_version 23 --nodesugar_interface_method_bodies_if_needed \\\n          -i $(location :testdata_like_in_android_studio) -o $(location testdata_desugared_with_classpath_directory.jar) \\\n          --copy_bridges_from_classpath \\\n          --classpath_entry $$tmpdir \\\n          --classpath_entry $(location //third_party:guava-jars) \\\n          --classpath_entry $(location //third_party/java/jacoco:blaze-agent) \\\n          --bootclasspath_entry $(location @bazel_tools//tools/android:android_jar)\n     rm -rf $$tmpdir\n    \"\"\"",
        "Line" : 1392,
        "CharPositionInLine" : 10
      },
      "70" : {
        "Text" : "# This target tests the flag -desugar_try_with_resources_if_needed, for desugaring\n# try-with-resources statements.",
        "Line" : 1414,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# Depend on Jacoco runtime in case testdata was built with coverage\n# instrumentation",
        "Line" : 1422,
        "CharPositionInLine" : 8
      },
      "72" : {
        "Text" : "# Desugars an interface with a default and a static interface method that was\n# processed by a legacy version of JaCoCo that doesn't emit interface markers\n# when calling methods it generated in interfaces (b/62623509).",
        "Line" : 1439,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# Disable desugaring try-with-resources by specifying a min_sdk_version above 18.",
        "Line" : 1461,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# Depend on Jacoco runtime in case testdata was built with coverage\n# instrumentation",
        "Line" : 1468,
        "CharPositionInLine" : 8
      },
      "75" : {
        "Text" : "# Depend on Jacoco runtime in case testdata was built with coverage\n# instrumentation",
        "Line" : 1491,
        "CharPositionInLine" : 8
      },
      "76" : {
        "Text" : "# This target allows using the desugared jar as a regular dependency of the test",
        "Line" : 1508,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# use un-desugared since we're not desugaring default methods here",
        "Line" : 1526,
        "CharPositionInLine" : 28
      },
      "78" : {
        "Text" : "# use un-desugared since we're not desugaring default methods here",
        "Line" : 1535,
        "CharPositionInLine" : 28
      },
      "79" : {
        "Text" : "# Golden file should show a $instance field and *no* get$Lambda() method",
        "Line" : 1610,
        "CharPositionInLine" : 8
      },
      "80" : {
        "Text" : "\"\"\"\n$(JAVABASE)/bin/javap -c -p -cp $< 'com.google.devtools.build.android.desugar.testdata.Lambda$$$$Lambda$$0' > $@\n\"\"\"",
        "Line" : 1621,
        "CharPositionInLine" : 10
      },
      "81" : {
        "Text" : "# Golden file should show a package-private constructor and *no* get$Lambda() method",
        "Line" : 1637,
        "CharPositionInLine" : 8
      },
      "82" : {
        "Text" : "\"\"\"\n$(JAVABASE)/bin/javap -c -p -cp $< 'com.google.devtools.build.android.desugar.testdata.CaptureLambda$$$$Lambda$$0' > $@\n\"\"\"",
        "Line" : 1649,
        "CharPositionInLine" : 10
      },
      "83" : {
        "Text" : "# Golden file should show a package-private constructor and *no* get$Lambda() method",
        "Line" : 1665,
        "CharPositionInLine" : 8
      },
      "84" : {
        "Text" : "\"\"\"\n$(JAVABASE)/bin/javap -c -p -cp $< 'com.google.devtools.build.android.desugar.testdata.MethodReferenceSuperclass$$$$Lambda$$0' > $@\n\"\"\"",
        "Line" : 1676,
        "CharPositionInLine" : 10
      },
      "85" : {
        "Text" : "# Golden file should show abstract methods only and *no* static methods",
        "Line" : 1692,
        "CharPositionInLine" : 8
      },
      "86" : {
        "Text" : "# drop jacoco fields and static initializers, which jacoco may add, so the output is stable\n# with or without coverage instrumentation",
        "Line" : 1703,
        "CharPositionInLine" : 4
      },
      "87" : {
        "Text" : "\"\"\"\n$(JAVABASE)/bin/javap -p -cp $< 'com.google.devtools.build.android.desugar.testdata.java8.InterfaceMethod' | grep -v 'jacoco' | grep -v 'static {}' > $@\n\"\"\"",
        "Line" : 1705,
        "CharPositionInLine" : 10
      },
      "88" : {
        "Text" : "# Golden file should show *no* methods",
        "Line" : 1721,
        "CharPositionInLine" : 8
      },
      "89" : {
        "Text" : "# drop jacoco fields and static initializers, which jacoco may add, so the output is stable\n# with or without coverage instrumentation",
        "Line" : 1732,
        "CharPositionInLine" : 4
      },
      "90" : {
        "Text" : "\"\"\"\n$(JAVABASE)/bin/javap -p -cp $< 'com.google.devtools.build.android.desugar.testdata.java8.Named$$AbstractName' | grep -v 'jacoco' | grep -v 'static {}' > $@\n\"\"\"",
        "Line" : 1734,
        "CharPositionInLine" : 10
      },
      "91" : {
        "Text" : "# Golden file should show *no* lambda$xxx methods (and 4 stubs for default methods)",
        "Line" : 1750,
        "CharPositionInLine" : 8
      },
      "92" : {
        "Text" : "# drop jacoco fields and static initializers, which jacoco may add, so the output is stable\n# with or without coverage instrumentation",
        "Line" : 1761,
        "CharPositionInLine" : 4
      },
      "93" : {
        "Text" : "\"\"\"\n$(JAVABASE)/bin/javap -p -cp $< 'com.google.devtools.build.android.desugar.testdata.java8.InterfaceMethod$$Concrete' | grep -v 'jacoco' | grep -v 'static {}' > $@\n\"\"\"",
        "Line" : 1763,
        "CharPositionInLine" : 10
      },
      "94" : {
        "Text" : "# Smaller Jar used for idempotency test.  CaptureLambda can be desugared without\n# any need to fix up the resulting lambda class.  Running the desugaring tool\n# over lambda classes that required fixes somehow perturbs the constant pool\n# (but nothing else) so for simplicity we use this Jar for the idempotency test\n# we don't run into the perturbance issue.",
        "Line" : 1785,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "# Depend on Jacoco runtime in case testdata was built with coverage\n# instrumentation",
        "Line" : 1799,
        "CharPositionInLine" : 8
      },
      "96" : {
        "Text" : "# Depend on Jacoco runtime in case testdata was built with coverage\n# instrumentation",
        "Line" : 1817,
        "CharPositionInLine" : 8
      },
      "97" : {
        "Text" : "\"\"\"\n$(JAVABASE)/bin/javap  -p -cp $< com.google.devtools.build.android.desugar.testdata.OuterReferenceLambda > $(location baseclass_disassembled.txt)\ngrep lambda $(location baseclass_disassembled.txt) > $(location baseclass_lambda_signature.txt)\"\"\"",
        "Line" : 1852,
        "CharPositionInLine" : 10
      },
      "98" : {
        "Text" : "\"\"\"\n$(JAVABASE)/bin/javap -p -cp $< com.google.devtools.build.android.desugar.testdata.LambdaInOverride > $(location subclass_disassembled.txt)\ngrep lambda $(location subclass_disassembled.txt) > $(location subclass_lambda_signature.txt)\"\"\"",
        "Line" : 1867,
        "CharPositionInLine" : 10
      },
      "99" : {
        "Text" : "# Tests that deps checking fails due to missing default method: libseparate_java8.jar defines\n# default methods which testdata_desugared_default_methods.jar assumes have been moved to companion.",
        "Line" : 1902,
        "CharPositionInLine" : 0
      },
      "100" : {
        "Text" : "# Regression test for b/68049457 with deps checking failing due to missing static method:\n# b68049457_caller_desugared.jar assumes presence of companion class that's missing (in fact,\n# the whole Jar is missing, similar to neverlink situations).",
        "Line" : 1924,
        "CharPositionInLine" : 0
      },
      "101" : {
        "Text" : "# Tests that any Jar entry starting with j$/ causes singlejar to fail when run\n# with --check_desugar_deps.  This is a backstop against such entries being\n# included in deploy.jars.",
        "Line" : 1963,
        "CharPositionInLine" : 0
      },
      "102" : {
        "Text" : "# Creates simple .jar file with empty file entry called \"j$/hello\"",
        "Line" : 2031,
        "CharPositionInLine" : 0
      },
      "103" : {
        "Text" : "\"\"\"$(location //tools/zip:zipper) c $@ \"j\\$$/hello=\" \"\"\"",
        "Line" : 2035,
        "CharPositionInLine" : 10
      },
      "104" : {
        "Text" : "# b/62623509 regression test.  Calls to jacoco-generated method in interface\n# need to be rewritten to call the companion class even though the original\n# bytecode falsely doesn't indicate that the method is declared in an\n# interface. Jacoco-generated field is *not* moved.",
        "Line" : 2039,
        "CharPositionInLine" : 0
      },
      "105" : {
        "Text" : "\"\"\"$(JAVABASE)/bin/javap -c -p -cp $< 'com/example/gavra/java8coverage/Defaults$$$$CC' > $@\"\"\"",
        "Line" : 2061,
        "CharPositionInLine" : 10
      },
      "106" : {
        "Text" : "# Regression test for b/70415451",
        "Line" : 2069,
        "CharPositionInLine" : 0
      },
      "107" : {
        "Text" : "# Depend on Jacoco runtime in case testdata was built with coverage\n# instrumentation",
        "Line" : 2074,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 108
    },
    "src/test/java/com/google/devtools/build/android/desugar/classes_for_testing_type_inference/BUILD" : {
      "ObjectId" : "b50500e6373c99192094a4ee6f753d90dc6e37f3",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Tests for the extension classes for desugaring try-with-resources for Android.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 8,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "src/test/java/com/google/devtools/build/android/desugar/dependencies/BUILD" : {
      "ObjectId" : "123355b79f7c8e2aeeac34f05449f0641bf6cec3",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Tests for the dependency tracking helper library for desugar.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 8,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "src/test/java/com/google/devtools/build/android/desugar/io/BUILD" : {
      "ObjectId" : "d968a7b9b9ea12351b96f993ba6c3267b58d1fe1",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Tests for the Java 8 desugaring tool for Android.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 7,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "src/test/java/com/google/devtools/build/android/desugar/runtime/BUILD" : {
      "ObjectId" : "28aa4639d4200c180196b420ec32f3f53f6ac312",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Tests for the extension classes for desugaring try-with-resources for Android.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 8,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "# multi-threaded and rely on GC, so it could take long.",
        "Line" : 88,
        "CharPositionInLine" : 23
      },
      "CommentCount" : 3
    },
    "src/test/java/com/google/devtools/build/android/desugar/scan/BUILD" : {
      "ObjectId" : "eafdc8080c23e46984cca628c101747077c1e228",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Tests for the Java 8 desugaring tool for Android.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 7,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "src/test/java/com/google/devtools/build/android/dexer/BUILD" : {
      "ObjectId" : "5585dc2326a717171e3edc20bfbf35cbf9b48856",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Tests for the blaze dx bridge code.",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/test/java/com/google/devtools/build/android/idlclass/BUILD" : {
      "ObjectId" : "e4529b0331345b653b283ceb7285f74c0bd88c1d",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/build/android/junctions/BUILD" : {
      "ObjectId" : "e5cb0c68ccc924be5269edb56394da10db4d7a5d",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/build/android/resources/BUILD" : {
      "ObjectId" : "c08cb5d6556f4dc51727425ee789737767276a86",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/build/android/testing/manifestmerge/BUILD" : {
      "ObjectId" : "22b7cc7ee97d2ed28f3a8b043d3a32b3c5df2258",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/build/android/ziputils/BUILD" : {
      "ObjectId" : "90483cfefbd6318106e56d3fd8b61389e077cce1",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/build/docgen/BUILD" : {
      "ObjectId" : "b101248c7ba8ac3a01daf97d30d9739cc2da84f1",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/build/lib/BUILD" : {
      "ObjectId" : "bdcc604c7eded76e50e75013b76c9fb4e9803726",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Tests for Windows-specific functionality that can run cross-platform.",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Tests for Windows-specific functionality that run on Windows.",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# All Windows-specific tests. Use this to exclude Windows tests from globs.",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Generate list of all srcs via:\n# bazel query 'filter(\"srcs\", kind(\"filegroup rule\", //src/test/java/com/google/devtools/build/lib/...))' | sort | sed -e \"s/^/\\\"/\" | sed -e \"s/$/\\\",/\" | fgrep -v \"build/lib:srcs\"",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This should correspond to the list of \"EMBEDDED_TOOLS\" in TestConstants.java.bazel.",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# This test cannot run on Windows, because it uses native Posix\n# functions via JNI.",
        "Line" : 314,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# java_rules_skylark doesn't support resource loading with\n# qualified paths.",
        "Line" : 340,
        "CharPositionInLine" : 12
      },
      "7" : {
        "Text" : "# TODO(laszlocsomor): remove the .../lib:unix this dependency, because\n# it prevents running the test on Windows.",
        "Line" : 417,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# TODO(laszlocsomor): remove the .../lib:unix this dependency, because\n# it prevents running the test on Windows.",
        "Line" : 438,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Tests that test Windows-specific functionality that run on other operating\n# systems",
        "Line" : 477,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Tests that need to run on Windows",
        "Line" : 516,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# On macOS:\n#   sudo sysctl -w vfs.generic.osxfuse.tunables.allow_other=1\n# Test requires:\n#   --test_env=SANDBOXFS=/path/to/sandboxfs",
        "Line" : 1338,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 12
    },
    "src/test/java/com/google/devtools/build/lib/analysis/mock/cc_toolchain_config.bzl" : {
      "ObjectId" : "4052bf97d405ad1a05dd38fa9d033c173ca66d56",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2019 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\" A rule that mocks cc_toolchain configuration.\"\"\"",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/test/java/com/google/devtools/build/lib/analysis/platform/BUILD" : {
      "ObjectId" : "9d652cc0fa5cee952ef9160a46bda9b59837cf47",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/build/lib/analysis/skylark/annotations/processor/BUILD" : {
      "ObjectId" : "1326161d2d5724e2cf46f1dfa30034c328174f8a",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache 2.0",
        "Line" : 1,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 1
    },
    "src/test/java/com/google/devtools/build/lib/analysis/whitelisting/BUILD" : {
      "ObjectId" : "ececca9d99427ec6d70902906dd3327ba120152b",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Tests for whitelisting mechanism for rolling out and deprecating pieces of Bazel functionality.",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/test/java/com/google/devtools/build/lib/bazel/BUILD" : {
      "ObjectId" : "88f336d6060f65b23312e975afc066f59f342c20",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/build/lib/bazel/debug/BUILD" : {
      "ObjectId" : "11bc586b79b253768a8bd22b157a3f66c9bb76ca",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/build/lib/bazel/execlog/BUILD" : {
      "ObjectId" : "5979ea66c11fed441fb091332d256b5dec180b20",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/build/lib/bazel/repository/BUILD" : {
      "ObjectId" : "737356c35f42611858ad2b1186791cd4a0f3061a",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/build/lib/bazel/repository/cache/BUILD" : {
      "ObjectId" : "be882b954475d9bb0e2f955f1999b44d593b9b09",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/build/lib/bazel/repository/downloader/BUILD" : {
      "ObjectId" : "cdd037438259abedc4e29a69e86264e780cde215",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/build/lib/blackbox/BUILD" : {
      "ObjectId" : "e12b59249ae7678af668b79f957f5ecb1e91d718",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/build/lib/blackbox/bazel/BUILD" : {
      "ObjectId" : "24960de3b024354810451ba7c055a1aba59aa89e",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# should be later split into groups by tools type",
        "Line" : 63,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "# should be later split into groups by tools type",
        "Line" : 65,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# needed by java tools",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/test/java/com/google/devtools/build/lib/blackbox/framework/BUILD" : {
      "ObjectId" : "2b7a3434e405124f70f7cb0f33c6269ddb0afa67",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/build/lib/blackbox/junit/BUILD" : {
      "ObjectId" : "e92341576b8d4b6f0c3c7435b53d633dc9ef6fcd",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/build/lib/blackbox/tests/BUILD" : {
      "ObjectId" : "e1a1f82d114a833bb9fa50839c11bfbac83ae0d8",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/build/lib/blackbox/tests/workspace/BUILD" : {
      "ObjectId" : "ecf953667d55f6462e9861ade80d8a6674fe4950",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/build/lib/buildeventservice/BUILD" : {
      "ObjectId" : "effc600bcbe94ed096dc363790a4084221976530",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/build/lib/buildeventstream/BUILD" : {
      "ObjectId" : "21619e570470bbd5b5e7d6c0e11fa5ccac77f8d1",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/build/lib/buildeventstream/transports/BUILD" : {
      "ObjectId" : "e39b9d378d2adf07caf36d396790228c03d846ac",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/build/lib/buildtool/BUILD" : {
      "ObjectId" : "15976e88e2bc1a4ac9ea6b3e2dd52d01843d1b6a",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/build/lib/packages/util/mock/BUILD" : {
      "ObjectId" : "290eb60eab9e024940777516fee1efc1b0166512",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/build/lib/packages/util/mock/android_cc_toolchain_config.bzl" : {
      "ObjectId" : "e4e4eb21da2a831b04e1d3f56195a4ccd1227cce",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2019 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\"\"\"Mock cc_toolchain_config rule for Android ndk tests.\"\"\"",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/test/java/com/google/devtools/build/lib/packages/util/mock/osx_cc_toolchain_config.bzl" : {
      "ObjectId" : "5654e1b64793d89d3c60863c16be0967b0b72c3c",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2019 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\"\"\" Mock objc toolchain configuration. \"\"\"",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Link actions using the C++ bazel actions.",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Link actions using the ObjC bazel actions.",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/test/java/com/google/devtools/build/lib/profiler/BUILD" : {
      "ObjectId" : "e4cb29ab3db8f0b050b09b84c859a77b27e00afc",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/build/lib/profiler/callcounts/BUILD" : {
      "ObjectId" : "90dc15680685df37051e1e3c058ac03b8a1c955e",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache 2.0",
        "Line" : 6,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 1
    },
    "src/test/java/com/google/devtools/build/lib/profiler/memory/BUILD" : {
      "ObjectId" : "b9c7617ac1e002d6ac7b2257b7a6065fad1cc438",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache 2.0",
        "Line" : 1,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 1
    },
    "src/test/java/com/google/devtools/build/lib/query2/BUILD" : {
      "ObjectId" : "5366e0e2b20cfbc26c4455f659effdb47c828f53",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache 2.0",
        "Line" : 8,
        "CharPositionInLine" : 22
      },
      "1" : {
        "Text" : "########################################################################\n#\n# Tests for Bazel query language, v2.\n#",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# A library containing the actual tests for the :query2 library.",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/test/java/com/google/devtools/build/lib/remote/BUILD" : {
      "ObjectId" : "5d54f3ae60855c52c3cd090cfa4d283d71baee1b",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/build/lib/remote/blobstore/http/BUILD" : {
      "ObjectId" : "8d868d02b04a044f0e9a77e33b9505b49523216e",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/build/lib/remote/logging/BUILD" : {
      "ObjectId" : "60e92a8a37860fd7e90c4dd36e3926e9a32976ed",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/build/lib/remote/merkletree/BUILD" : {
      "ObjectId" : "150cda40ac0b3a6eddbaba88854b7a5aefc60cc1",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/build/lib/remote/util/BUILD" : {
      "ObjectId" : "f4764ec3b1f307d81b49aa42f3b3aa9bc3911f95",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/build/lib/rules/android/BUILD" : {
      "ObjectId" : "ff7f7024bcc22aa32c90891ebffa624acc13bbe2",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/build/lib/rules/apple/BUILD" : {
      "ObjectId" : "badd79c9722a083d9314d60c9777876de9bed382",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/build/lib/rules/config/BUILD" : {
      "ObjectId" : "b34f0065eca00e1d5a7670c4f97e5ccc91a8e2bd",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Tests for rules which enable users to define configuration",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/test/java/com/google/devtools/build/lib/rules/cpp/BUILD" : {
      "ObjectId" : "682aadfce69fa9584bae7fcaed3a9d8549ebfe4b",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/build/lib/rules/objc/BUILD" : {
      "ObjectId" : "a37cb525294ffcfd5eb217146be6536b35b61496",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/build/lib/rules/platform/BUILD" : {
      "ObjectId" : "6b69d171d2d8cf4115f93e9d197bad3666c4edf4",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/build/lib/rules/python/BUILD" : {
      "ObjectId" : "2e81f708b04f056bb2b9531323c906db9692efed",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/build/lib/rules/repository/BUILD" : {
      "ObjectId" : "a66ac9b4cc8106c0138656e8a1ffd16bb1d619dd",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/build/lib/shell/BUILD" : {
      "ObjectId" : "3adcc7cd1dba1b78f8aceca9426255c94b98657f",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache 2.0",
        "Line" : 8,
        "CharPositionInLine" : 22
      },
      "1" : {
        "Text" : "# TODO(laszlocsomor): remove the \"no_windows\" tag and merge \"ShellUtilsWithBashTest\" into\n# \"ShellUtilsTest\" after Bazel has a way to tell the test about the shell interpreter's\n# path, and therefore ShellUtilsWithBashTest can be made to run on Windows.  A possible\n# approach is to update the sh_toolchain rule in //tools/sh:sh_toolchain.bzl to return a\n# platform_common.TemplateVariableInfo provider, then add \"toolchains\" attribute to the\n# java_test, and pass the shell's path from a Make Variable using the \"args\" attribute.",
        "Line" : 94,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "src/test/java/com/google/devtools/build/lib/skyframe/BUILD" : {
      "ObjectId" : "968c424a6e6adbffe45f573fca8184e3b108dd3d",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/build/lib/skyframe/packages/BUILD" : {
      "ObjectId" : "137ae9d90d2136ab9a8637b112866fc77503f351",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/build/lib/skyframe/serialization/BUILD" : {
      "ObjectId" : "b6deccd46f34022d2558d7d261d1ed74404a0b97",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/build/lib/skyframe/trimming/BUILD" : {
      "ObjectId" : "5eed33fee73dc4b5101a2b4a60e626b50fb0ffae",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Tests for the trimming support classes.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/test/java/com/google/devtools/build/lib/skylark/BUILD" : {
      "ObjectId" : "6f3d8613f8273579b417d5075f2bd58eb0e107ce",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/build/lib/skylarkdebug/server/BUILD" : {
      "ObjectId" : "376471f5f5a0ac1fcfab229fe9d2b92b2ded20c8",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/build/lib/skylarkinterface/processor/BUILD" : {
      "ObjectId" : "7b380c15c4fd8e972b9430db26a21db2514a1552",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache 2.0",
        "Line" : 1,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 1
    },
    "src/test/java/com/google/devtools/build/lib/unsafe/BUILD" : {
      "ObjectId" : "3220a80b2c92c51cb8b52d58b03ed3389e0f703e",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/build/skydoc/BUILD" : {
      "ObjectId" : "bcfc620675158c23818c0f90042e81b631610ca4",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/build/skydoc/skydoc_test.bzl" : {
      "ObjectId" : "eda5e02403f6f4cc8ebfd01e1540d78dd524274e",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2018 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n# Convenience macro for skydoc tests. Each target represents two targets:\n# 1. A sh_test target which verifies that skydoc, when run on an input file,\n#    creates output matching the contents of a golden file.\n# 2. A genrule target which will generate a new golden file given an input file\n#    and the current version of skydoc. This target should be used to regenerate\n#    the golden file if changes are made to skydoc.\n\"\"\"Convenience macro for skydoc tests.\"\"\"",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\"Creates a test target and golden-file regeneration target for skydoc testing.\n\n    The test target is named \"{name}_e2e_test\".\n    The golden-file regeneration target is named \"regenerate_{name}_golden\".\n\n    Args:\n      name: A unique name to qualify the created targets.\n      input_file: The label string of the skylark input file for which documentation is generated\n          in this test.\n      golden_file: The label string of the golden file containing the documentation when skydoc\n          is run on the input file.\n      skydoc: The label string of the skydoc binary.\n      deps: A list of label strings of skylark file dependencies of the input_file.\n      whitelisted_symbols: A list of strings representing top-level symbols in the input file\n          to generate documentation for. If empty, documentation for all top-level symbols\n          will be generated.\n      semantic_flags: A list of canonical flags to affect Starlark semantics for the Starlark interpretter\n          during documentation generation. This should only be used to maintain compatibility with\n          non-default semantic flags required to use the given Starlark symbols. For example, if\n          <code>//foo:bar.bzl</code> does not build except when a user would specify\n          <code>--incompatible_foo_semantic=false</code>, then this attribute should contain\n          \"--incompatible_foo_semantic=false\"\n    \"\"\"",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Skydoc requires an absolute input file label to both load the target file and\n# track what its target is for the purpose of resolving relative labels.",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "src/test/java/com/google/devtools/build/skydoc/testdata/android_basic_test/input.bzl" : {
      "ObjectId" : "b06291a8d7fd0ab0fb9cc865120140abc46a1b31",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/build/skydoc/testdata/apple_basic_test/input.bzl" : {
      "ObjectId" : "6f2862e6acc78043c393bfeb33c11320d30b938d",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/build/skydoc/testdata/attribute_types_test/input.bzl" : {
      "ObjectId" : "e98ce284741d5126d4370c06338528a84bd6d634",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/build/skydoc/testdata/config_apis_test/input.bzl" : {
      "ObjectId" : "6f3cf027dcb9bf412922e4cfcd827caab9708042",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "\"\"\"A no-op transition function.\"\"\"",
        "Line" : 7,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "src/test/java/com/google/devtools/build/skydoc/testdata/cpp_basic_test/input.bzl" : {
      "ObjectId" : "937f7daac645eab0e7583125cabf5afb9a261b64",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/build/skydoc/testdata/filter_rules_test/dep.bzl" : {
      "ObjectId" : "b8c075205fdaca25339973e80c66fda02687ec7b",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/build/skydoc/testdata/filter_rules_test/input.bzl" : {
      "ObjectId" : "f7fed994bc43d09b40e7eb4b7623f8e869e6f1e5",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/build/skydoc/testdata/function_basic_test/input.bzl" : {
      "ObjectId" : "37555996d2a9c71ab909c399dd9862d8306e3724",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "\"\"\"A test that verifies basic user function documentation.\"\"\"",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\"Runs some checks on the given source files.\n\n    This rule runs checks on a given set of source files.\n    Use `bazel build` to run the check.\n\n    Args:\n        name: A unique name for this rule.\n        required_param: Use your imagination.\n        srcs: Source files to run the checks against.\n        doesnt_exist: A param that doesn't exist (lets hope we still get *some* documentation)\n        int_param: Your favorite number.\n    \"\"\"",
        "Line" : 12,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "src/test/java/com/google/devtools/build/skydoc/testdata/generated_bzl_test/input.bzl" : {
      "ObjectId" : "bad15f6608955b44ff044be4638722c20fef7568",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "\"\"\"A direct dependency file of the input file.\"\"\"",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/test/java/com/google/devtools/build/skydoc/testdata/java_basic_test/input.bzl" : {
      "ObjectId" : "3716ab8984845b2f3917e6f40ae64705b239b05c",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/build/skydoc/testdata/macro_kwargs_test/input.bzl" : {
      "ObjectId" : "0f6268d8c31c62f91785b01a016b2ff7f81cb7ba",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "\"\"\"Tests for functions which use *args or **kwargs\"\"\"",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\"My kwargs macro is the best.\n\n    This is a long multi-line doc string.\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer\n    elementum, diam vitae tincidunt pulvinar, nunc tortor volutpat dui,\n    vitae facilisis odio ligula a tortor. Donec ullamcorper odio eget ipsum tincidunt,\n    vel mollis eros pellentesque.\n\n    Args:\n      name: The name of the test rule.\n      config: Config to use for my macro\n      deps: List of my macro's dependencies\n      **kwargs: Other attributes to include\n\n    Returns:\n      An empty list.\n    \"\"\"",
        "Line" : 4,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "\"\"\"My args macro is OK.\n\n    Args:\n      name: The name of the test rule.\n      *args: Other arguments to include\n\n    Returns:\n      An empty list.\n    \"\"\"",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "\"\"\"Oh wow this macro has both.\n\n    Not much else to say.\n\n    Args:\n      name: The name of the test rule.\n      number: Some number used for important things\n      *args: Other arguments to include\n      **kwargs: Other attributes to include\n\n    Returns:\n      An empty list.\n    \"\"\"",
        "Line" : 38,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "src/test/java/com/google/devtools/build/skydoc/testdata/misc_apis_test/input.bzl" : {
      "ObjectId" : "24a75a703bd7d21fa56de3a6c18f6bbea674502e",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# This is here to test that built-in names can be shadowed by global names.\n# (Regression test for http://b/35984389).",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\"\nA list of dependencies.\nThese dependencies better provide MyInfo!\n...or else.\n\"\"\"",
        "Line" : 37,
        "CharPositionInLine" : 18
      },
      "CommentCount" : 2
    },
    "src/test/java/com/google/devtools/build/skydoc/testdata/module_test/input.bzl" : {
      "ObjectId" : "d1b04b3b1f964f31cce2980c21b525d897d0153c",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "\"\"\"A test that verifies documenting a module of functions.\"\"\"",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\"Returns the minimum of given elements.\n\n    Args:\n      integers: A list of integers. Must not be empty.\n\n    Returns:\n      The minimum integer in the given list.\n    \"\"\"",
        "Line" : 4,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "\"\"\"Asserts the two given lists are not empty.\n\n    Args:\n      some_list: The first list\n      other_list: The second list\n    \"\"\"",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "\"\"\"Joins the given strings with a delimiter.\n\n    Args:\n      strings: A list of strings to join.\n      delimiter: The delimiter to use\n\n    Returns:\n      The joined string.\n    \"\"\"",
        "Line" : 26,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "src/test/java/com/google/devtools/build/skydoc/testdata/multiple_files_test/dep.bzl" : {
      "ObjectId" : "e4f487bdabaf2bd9b3627cea2ba8be5234a1b4a2",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "\"\"\"A pretty cool function. You should call it.\n\n    Args:\n      name: Some sort of name.\n      srcs: What sources you want cool stuff to happen to.\n      beef: Your opinion on beef.\n    \"\"\"",
        "Line" : 4,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "src/test/java/com/google/devtools/build/skydoc/testdata/multiple_files_test/inner_dep.bzl" : {
      "ObjectId" : "16d4361eaea0598f268b2f353d7395f1662b4b5f",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "\"\"\"A deep dependency file.\"\"\"",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\"Does some prep work. Nothing to see here.\"\"\"",
        "Line" : 4,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "src/test/java/com/google/devtools/build/skydoc/testdata/multiple_files_test/input.bzl" : {
      "ObjectId" : "5b46c5428c5308d97053918850ae089ed192cef9",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "\"\"\"A direct dependency file of the input file.\"\"\"",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/test/java/com/google/devtools/build/skydoc/testdata/multiple_rules_test/input.bzl" : {
      "ObjectId" : "28fd6451a30410fda2fbefd768174ffcb63f9b87",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/build/skydoc/testdata/provider_basic_test/input.bzl" : {
      "ObjectId" : "ff2df4f17df03644230c47c57bfbb72f4efed191",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "\"\"\"\nA provider with some really neat documentation.\nLook on my works, ye mighty, and despair!\n\"\"\"",
        "Line" : 9,
        "CharPositionInLine" : 10
      },
      "CommentCount" : 1
    },
    "src/test/java/com/google/devtools/build/skydoc/testdata/repo_rules_test/input.bzl" : {
      "ObjectId" : "bac2323b157b136a3cc98afddd0ecc8b9ab5e547",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/build/skydoc/testdata/same_level_file_test/BUILD" : {
      "ObjectId" : "97c2e468d2b97475f6ab28c57bdf1d15fcca428b",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/build/skydoc/testdata/same_level_file_test/dep.bzl" : {
      "ObjectId" : "db2cb089ac08ba02b8fe0d526f6e9223ca805baf",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/build/skydoc/testdata/same_level_file_test/input.bzl" : {
      "ObjectId" : "9bf4372983f5731be7c6b81a72cc2c87128184f7",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/build/skydoc/testdata/simple_test/input.bzl" : {
      "ObjectId" : "0e5c94da0cac2857382f4d333ee6e43ff0de597c",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/build/skydoc/testdata/unknown_name_test/input.bzl" : {
      "ObjectId" : "ab999ca49a2a97677857c667df764a33dba28533",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/build/skyframe/BUILD" : {
      "ObjectId" : "7d590a35aa71612e2215dd5c666b59c4b36b955e",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Truth Subject, SubjectFactory, and Graph files.",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "src/test/java/com/google/devtools/common/options/BUILD" : {
      "ObjectId" : "40fe246307ae08655d61a97b03c21b48af628ea9",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/common/options/processor/BUILD" : {
      "ObjectId" : "d77813553bbe8993ab75d77c85e384c01b0619f1",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/java/com/google/devtools/common/options/testing/BUILD" : {
      "ObjectId" : "6b73a6ea6781547fa31e90012e0eaa128c1ff58a",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Tests of the testing tools for the devtools-common options parser.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 8,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "src/test/native/BUILD" : {
      "ObjectId" : "a00458a3a38a0127cc76f0fa4c5eb991901365a1",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   C++ utility tests for Bazel",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/test/py/bazel/BUILD" : {
      "ObjectId" : "31432e159eff86e5766fa00e2850b95fe0ab9b47",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Windows does not support sandboxing yet.",
        "Line" : 130,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 1
    },
    "src/test/shell/BUILD" : {
      "ObjectId" : "e654c401ea41ff0c022785cddca7d7a36a23bb25",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# test asserts symlink behavior",
        "Line" : 68,
        "CharPositionInLine" : 23
      },
      "CommentCount" : 1
    },
    "src/test/shell/bazel/BUILD" : {
      "ObjectId" : "94c7075c7c6ba8b4a94093f062e399ede9d0e79c",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# darwin-specific test",
        "Line" : 99,
        "CharPositionInLine" : 23
      },
      "1" : {
        "Text" : "# objc-specific test",
        "Line" : 112,
        "CharPositionInLine" : 23
      },
      "2" : {
        "Text" : "# TODO(laszlocsomor): make this run on Windows",
        "Line" : 122,
        "CharPositionInLine" : 23
      },
      "3" : {
        "Text" : "# TODO(laszlocsomor): make this run on Windows. Currently fails because\n# the java_common provider doesn't work on Windows.",
        "Line" : 143,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Downloads and compiles protobuf for *every* *test* *case*",
        "Line" : 175,
        "CharPositionInLine" : 21
      },
      "5" : {
        "Text" : "# Doesn't work on Windows for unknown reason",
        "Line" : 179,
        "CharPositionInLine" : 28
      },
      "6" : {
        "Text" : "# To run this test, ensure that maven_dependency_plugin() and\n# android_repositories() in WORKSPACE are uncommented.",
        "Line" : 504,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Disabled on windows and mac; see TODOs in the test suite.",
        "Line" : 530,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 8
    },
    "src/test/shell/bazel/android/BUILD" : {
      "ObjectId" : "eedefffc6db02965f5af8a27118e1e2824338d34",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# These tests rely on the //external:android_{s,n}dk_for_testing filegroups.\n# These targets should point to filegroups containing the contents of\n# the Android SDK and NDK. They *must not* contain any BUILD files that\n# are generated by Android{S,N}dkRepositoryFunction, or else the\n# integration will attempt to overwrite those files and fail. Note that\n# this is incorrect because the filegroups should contain all of the\n# files needed, but since they contain files with names that are not\n# legal Bazel labels, there isn't really a better option.\n#\n# The definitions of these filegroups are in\n# tools/android/android_sdk_repository_template.bzl and\n# src/main/java/com/google/devtools/build/lib/bazel/rules/android/android_ndk_build_file_template.txt",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Remove once fixed: https://github.com/bazelbuild/bazel/issues/4663",
        "Line" : 94,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "src/test/shell/bazel/apple/BUILD" : {
      "ObjectId" : "c5c74415c5c731036ff8c8432fdbd07cb3eabda6",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/shell/bazel/cc_api_rules.bzl" : {
      "ObjectId" : "201b0a75f498f49380a5c9bd9c9c5bae3ee8ca5d",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2019 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\"Example C++ API usage\"\"\"",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/test/shell/bazel/list_source_repository.bzl" : {
      "ObjectId" : "682b55e24a6aa7d92d7500d395153a6638cad51a",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2017 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n# Create a repository that produce the list of sources of Bazel in order to test\n# that all sources in Bazel are contained in the //:srcs filegroup. CI systems\n# can set the SRCS_EXCLUDES environment variable to exclude certain files from\n# being considered as sources.\n\"\"\"A repository definition to fetch all sources in Bazel.\"\"\"",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Depending in ~/.git/logs/HEAD is a trick to depends on something that\n# change everytime the workspace content change.",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# We only add the dependency if it exists.",
        "Line" : 29,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# pylint: disable=unused-variable",
        "Line" : 30,
        "CharPositionInLine" : 60
      },
      "4" : {
        "Text" : "\"\"\"\ngenrule(\n  name = \"sources\",\n  outs = [\"sources.txt\"],\n  srcs = [\"find.result.raw\"],\n  visibility = [\"//visibility:public\"],\n  cmd = \" | \".join([\n    \"cat $<\",\n    \"grep -Ev '^(\\\\\\\\.git|.ijwb|out/|output/|bazel-|derived|tools/defaults/BUILD)'\",\n    \"grep -Ev '%s'\",\n    \"sort -u > $@\",\n  ]),\n)\n\"\"\"",
        "Line" : 36,
        "CharPositionInLine" : 23
      },
      "5" : {
        "Text" : "\"\"\"Create a //:sources target containing the list of sources of Bazel.\n\nSRCS_EXCLUDES give a regex of files to excludes in the list.\"\"\"",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/test/shell/bazel/remote/BUILD" : {
      "ObjectId" : "7f475e000a2b3079f835dfa69eda6983b3bdc740",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/shell/bazel/testdata/BUILD" : {
      "ObjectId" : "0b2b58d693a79aacc48898cd52a65b00be7f83ba",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/shell/bazel/testdata/bazel_toolchain_test_data/BUILD" : {
      "ObjectId" : "9162ef2b9a6c4deaccdf8bb467e068a61fadc350",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/test/shell/bazel/testdata/bazel_toolchain_test_data/tools/arm_compiler/cc_toolchain_config.bzl" : {
      "ObjectId" : "4873c3193ad4e4e347ad25372bed94c3087ff7ad",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "#\n# Copyright 2019 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n# Tests compiling using an external Linaro toolchain on a Linux machine\n#",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\"Implementation of a rule that configures a Linaro toolchain.\"\"\"",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/test/shell/integration/BUILD" : {
      "ObjectId" : "59d10b7e944dbe36739ba49ff0b22187c211639f",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# test uses symlinks and chmod",
        "Line" : 121,
        "CharPositionInLine" : 23
      },
      "1" : {
        "Text" : "# This test doesn't work with the sandbox on, see the source file\n# for details.",
        "Line" : 301,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# TODO(b/34450149): remove when no longer flaky",
        "Line" : 468,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Copy protoc into a known location, since //third_party/protobuf:protoc\n# might be an alias.  This is referenced from testenv.sh.",
        "Line" : 513,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "########################################################################\n# Test suites.",
        "Line" : 630,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/test/starlark/BUILD" : {
      "ObjectId" : "6694c73207287baa6011884478541bb7b9410b2e",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "## Rest of the file should be moved somewhere else (under bazel/tools/).",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/test/starlark/skylint/BUILD" : {
      "ObjectId" : "ff92c388e20fc3cb95e015a744cb6482782a775b",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/tools/android/java/com/google/devtools/build/android/BUILD" : {
      "ObjectId" : "8daefd2560ba67ac24e6eaef2f70f4f4c1c5c569",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Actions for Android rules.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Used by //src/test/shell/bazel/android:android_integration_test",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Memory consumption of SingleJar is about 250 bytes per entry in the output file. Unfortunately,\n# the JVM tends to kill the process with an OOM long before we're at the limit. In the most\n# recent example, 400 MB of memory was enough for about 500,000 entries.",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "src/tools/android/java/com/google/devtools/build/android/desugar/BUILD" : {
      "ObjectId" : "ad9c75ce807cd32e0ef1e38bc5ec2045f4777829",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Tool for desugaring Java constructs not supported by Android tools or devices.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/tools/android/java/com/google/devtools/build/android/desugar/dependencies/BUILD" : {
      "ObjectId" : "a34488d0d497a9d2552b01e4555e0191b462d5b2",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Dependency tracking helper library for desugar that we package separately\n#   for the benefit of desugar users who want to compile the tool from source.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/tools/android/java/com/google/devtools/build/android/desugar/io/BUILD" : {
      "ObjectId" : "9a4c62e6cb5018ef2f106b24b79dcdccdbecaedd",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Tool for desugaring Java constructs not supported by Android tools or devices.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/tools/android/java/com/google/devtools/build/android/desugar/runtime/BUILD" : {
      "ObjectId" : "68179ab2ac650a771474d83775dcf41aa2d94a0b",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   This is the extension package to support desugaring try-with-resources statements.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This library must be compiled with java7, as we directly copy it to the desugared jar.",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "src/tools/android/java/com/google/devtools/build/android/desugar/scan/BUILD" : {
      "ObjectId" : "e128c510ad98485d4891de27d9b1b2795a88783b",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Tools for scanning bytecode for references to other classes and emitting Proguard-style keeps.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# normally used through @bazel_tools",
        "Line" : 32,
        "CharPositionInLine" : 19
      },
      "CommentCount" : 2
    },
    "src/tools/android/java/com/google/devtools/build/android/dexer/BUILD" : {
      "ObjectId" : "3afe9ab86c472e6219e732eb194af75a479f420e",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Collection of dex utilities used in the bazel android actions.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The DexFileMerger and DexBuilder are built in BUILD.tools which is built in\n# a developers workspace, not the Bazel workspace. So we must bundle the\n# dependencies of those binaries into the embedded tools.",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/tools/android/java/com/google/devtools/build/android/idlclass/BUILD" : {
      "ObjectId" : "6984bfcdffb8c0695b41d52ff41d459ab0830cb8",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/tools/android/java/com/google/devtools/build/android/incrementaldeployment/BUILD" : {
      "ObjectId" : "e4070fe1a3a26ee1fdc1dfccef2e19dccf54e0fa",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/tools/android/java/com/google/devtools/build/android/junctions/BUILD" : {
      "ObjectId" : "6ebc748d970725e0165bd78a6068afdfd876c9fa",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/tools/android/java/com/google/devtools/build/android/proto/BUILD" : {
      "ObjectId" : "e0ac5d6c9a5a0d9f5ed679f3a07857a229cdc582",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Protos of the Actions for Android rules.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/tools/android/java/com/google/devtools/build/android/resources/BUILD" : {
      "ObjectId" : "a0cb57c4f40de25b3708f82fa5e080126df02b82",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Tools for android resource processing",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/tools/android/java/com/google/devtools/build/android/ziputils/BUILD" : {
      "ObjectId" : "a53afc217fb7c3e436598937ea389bc1460e2ac9",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Low level zip archive processing library.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/tools/execlog/BUILD" : {
      "ObjectId" : "a8c797d501085e28f92c3211fcc8f4d2f441072c",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/tools/execlog/src/main/java/com/google/devtools/build/execlog/BUILD" : {
      "ObjectId" : "21fa442ad87f5eadadb0cd32bcc88fca31862849",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/tools/execlog/test/main/java/com/google/devtools/build/execlog/BUILD" : {
      "ObjectId" : "316b8d9c1634b2bb0776a25fd6ca59e865ed6f5c",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/tools/launcher/BUILD" : {
      "ObjectId" : "075ee57d1f843422d533412ed1262e4651ceb2e8",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/tools/launcher/util/BUILD" : {
      "ObjectId" : "e3aa79a8fe6ad711d850e3cfb19fbf43aa697d0b",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/tools/launcher/win_rules.bzl" : {
      "ObjectId" : "869b74734289335db9e66b1a1e6f7a6f3b117384",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2017 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is a quick and dirty rule to make Bazel compile itself.  It\n# only supports Java.",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "\"\"\"Replace srcs and hdrs with a dummy.cc on non-Windows platforms.\"\"\"",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "\"\"\"Replace srcs with a dummy.cc on non-Windows platforms.\"\"\"",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "\"\"\"Replace srcs with a dummy.cc on non-Windows platforms.\"\"\"",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "src/tools/package_printer/java/com/google/devtools/build/packageprinter/BUILD" : {
      "ObjectId" : "ffada11a632a0fcdff31f260e32cdcec76bf0cbf",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache 2.0",
        "Line" : 1,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 1
    },
    "src/tools/remote/BUILD" : {
      "ObjectId" : "02551671d17d3401af612a7e7853ba8e8395bd16",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/tools/remote/src/main/java/com/google/devtools/build/remote/worker/BUILD" : {
      "ObjectId" : "66ff2bb7fe984d6cb7b3573d7a710f0504eb33bd",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/tools/singlejar/BUILD" : {
      "ObjectId" : "2cf4acbd8e3ee46c54b2ef84e7764e2b842336a1",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   singlejar C++ implementation.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Requires at least 5 GiB of memory",
        "Line" : 112,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Timing out, see https://github.com/bazelbuild/bazel/issues/1555",
        "Line" : 183,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Timing out, see https://github.com/bazelbuild/bazel/issues/1555",
        "Line" : 200,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Timing out, see https://github.com/bazelbuild/bazel/issues/1555",
        "Line" : 295,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "src/tools/skylark/java/com/google/devtools/skylark/common/BUILD" : {
      "ObjectId" : "249834fcc116246bc9d019b36511e4e5575f5589",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# For docstring parsing libraries.",
        "Line" : 5,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 1
    },
    "src/tools/skylark/java/com/google/devtools/skylark/skylint/BUILD" : {
      "ObjectId" : "baff9ba19f984652c6c590d99db2d9f779c2ec36",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# The Skylint linter for BUILD and Skylark files\n# Open-sourced as part of Bazel.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For docstring parsing libraries.",
        "Line" : 18,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# TODO(bazel-team): Once BazelLibrary has a Build API interface, depend\n# on lib:skylarkbuildapi instead of on lib:packages.",
        "Line" : 23,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 3
    },
    "src/tools/skylark/javatests/com/google/devtools/skylark/skylint/BUILD" : {
      "ObjectId" : "717b05c29c47b9e29f408cd549bca2ebd63351e5",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Tests for the Skylark linter",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/tools/workspacelog/BUILD" : {
      "ObjectId" : "6e741b0db92257b2cff28c2aa8659f98386148ac",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/tools/workspacelog/src/main/java/com/google/devtools/build/workspacelog/BUILD" : {
      "ObjectId" : "b3df80d9f1384beec9aba83548d8356482dfb609",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/tools/workspacelog/test/main/java/com/google/devtools/build/workspacelog/BUILD" : {
      "ObjectId" : "0f8d4d902768933024ab6d540f396d8a5b5bcd2f",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/tools/xcode-common/BUILD" : {
      "ObjectId" : "683e70b1a49ebbc94c237ec376601306444030da",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/tools/xcode-common/java/com/google/devtools/build/xcode/common/BUILD" : {
      "ObjectId" : "bd2519a19e83872413ad9073e107e47d75384017",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/tools/xcode-common/java/com/google/devtools/build/xcode/util/BUILD" : {
      "ObjectId" : "f16287e97e26f1ddd3f46b5c2b44c6e080e2df8f",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/tools/xcode-common/java/com/google/devtools/build/xcode/zip/BUILD" : {
      "ObjectId" : "bb25596847b7d3e96241313865376eb41f907516",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/tools/xcode/actoolwrapper/BUILD" : {
      "ObjectId" : "1becfc0f08c585b4d44ae99114b0522366ca1bc4",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/tools/xcode/ibtoolwrapper/BUILD" : {
      "ObjectId" : "57080e7a78d31f4dc4e753fb894d06285172d363",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/tools/xcode/momcwrapper/BUILD" : {
      "ObjectId" : "6da07affee68819ce6846462947d39fa76049495",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "src/tools/xcode/realpath/BUILD" : {
      "ObjectId" : "8642f9c7c7cb1b2c089db92cef074e9802935333",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# This target will only build on a Mac.",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/tools/xcode/stdredirect/BUILD" : {
      "ObjectId" : "1bffb6c2c65cb6adf0b562900266b6856d73f807",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# This target will only build on a Mac.\n# Does adhoc codesigning (codesign -s -) which is sufficient to allow it to\n# be used by the Xcode 8 build system.",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "third_party/BUILD" : {
      "ObjectId" : "90ab565687731fc1b0056596944ec58dd4c4d91d",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Filegroup to ship the sources to the Bazel embededded tools\n# This filegroup should contains all GPL with classpath exception\n# and LGPL code that we use in Bazel.",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This target only contains the jars that are used for building / running Bazel.\n# The target below is for the Android tools that are not shipped with Bazel.",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# layoutlib has been upgraded to 26.1.2 *just* for font resource support.\n# We are unable to upgrade the other libraries yet due to internal\n# constraints with Blaze. See\n# https://github.com/bazelbuild/bazel/issues/4381\n# TODO(bazel-team): Upgrade entire android_common suite to 26+ after\n# resolving internal constraint.",
        "Line" : 100,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# For bootstrapping JavaBuilder",
        "Line" : 320,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# For bootstrapping JavaBuilder",
        "Line" : 404,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# For bootstrapping JavaBuilder",
        "Line" : 458,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# javax.annotation.Generated is not included in the default root modules in 9,\n# see: http://openjdk.java.net/jeps/320.",
        "Line" : 464,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# @Generated is source-retention",
        "Line" : 469,
        "CharPositionInLine" : 20
      },
      "8" : {
        "Text" : "# For bootstrapping JavaBuilder",
        "Line" : 488,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# For bootstrapping JavaBuilder",
        "Line" : 552,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Testing",
        "Line" : 558,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# To be used by the skylark example.",
        "Line" : 629,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "third_party/allocation_instrumenter/BUILD" : {
      "ObjectId" : "78f6b44ebc5c74cf15a8d19ff8be90179e30fb30",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache 2.0",
        "Line" : 3,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 1
    },
    "third_party/aws-sdk-auth-lite/BUILD" : {
      "ObjectId" : "e9af65673592274e7f1bb62a09ab67f163b3dbec",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "#  Apache-2 license",
        "Line" : 1,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 1
    },
    "third_party/aws-sig-v4-test-suite/BUILD" : {
      "ObjectId" : "0ec0154f7d9158fdf04e2470182a1a233a139668",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "#  Apache-2 license",
        "Line" : 1,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 1
    },
    "third_party/checker_framework_dataflow/BUILD" : {
      "ObjectId" : "7030b19becf1d454f625ad0113abefc11a3dfe16",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# GNU GPL v2 with Classpath exception",
        "Line" : 3,
        "CharPositionInLine" : 26
      },
      "CommentCount" : 1
    },
    "third_party/checker_framework_javacutil/BUILD" : {
      "ObjectId" : "6f1a7784133387fd6ab62dd71d4a92982cdf9266",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# GNU GPL v2 with Classpath exception",
        "Line" : 3,
        "CharPositionInLine" : 26
      },
      "CommentCount" : 1
    },
    "third_party/compiler_config_setting.bzl" : {
      "ObjectId" : "21b1cdb7887c8fd66538e671ec28d2a11d54b73b",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2018 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\"Creates config_setting that allows selecting based on 'compiler' value.\"\"\"",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The \"do_not_use_tools_cpp_compiler_present\" attribute exists to\n# distinguish between older versions of Bazel that do not support\n# \"@bazel_tools//tools/cpp:compiler\" flag_value, and newer ones that do.\n# In the future, the only way to select on the compiler will be through\n# flag_values{\"@bazel_tools//tools/cpp:compiler\"} and the else branch can\n# be removed.",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "third_party/css/bootstrap/BUILD" : {
      "ObjectId" : "42c7a9dd1d1e68e5deacf5fe7e657dfd6d2b9651",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# MIT",
        "Line" : 1,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 1
    },
    "third_party/css/font_awesome/BUILD" : {
      "ObjectId" : "a58e75ed7a5d94b51dcc88e2613a35147bc55b17",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# MIT, fonts under OFL 1.1",
        "Line" : 1,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 1
    },
    "third_party/def_parser/BUILD" : {
      "ObjectId" : "0f281e4da3841106305fccc7f416f9838357fed6",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# 3-clause BSD",
        "Line" : 1,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 1
    },
    "third_party/grpc/BUILD" : {
      "ObjectId" : "12715fa3224ad0dda8bc09bb6e803ecf0311ebc3",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# gRPC Bazel BUILD file.\n#\n# Copyright 2016 gRPC authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache v2",
        "Line" : 17,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "# standard plugins",
        "Line" : 881,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Only builds stubs because we define GRPC_ARES=0",
        "Line" : 1348,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "third_party/grpc/build_defs.bzl" : {
      "ObjectId" : "18042a4132cf4352fc6d65719c3acb8fc385441f",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "\"\"\"BUILD rules to generate gRPC service interfaces.\nYou need to load the rules in your BUILD file for use, like:\nload(\"//third_party/grpc:build_defs.bzl\", \"java_grpc_library\")\n\"\"\"",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If |f| is a generated file, it will have \"bazel-out/*/genfiles\" prefix\n# before \"external/workspace\", so we need to add the starting index of \"external/workspace\"",
        "Line" : 10,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "\"\"\"Generates and compiles gRPC Java sources for services defined in a proto\n    file. This rule is compatible with proto_library with java_api_version,\n    java_proto_library, and java_lite_proto_library.\n    Do note that this rule only scans through the proto file for RPC services. It\n    does not generate Java classes for proto messages. You will need a separate\n    proto_library with java_api_version, java_proto_library, or\n    java_lite_proto_library rule.\n    Args:\n      name: (str) A unique name for this rule. Required.\n      srcs: (list) a single proto_library target that contains the schema of the\n          service. Required.\n      deps: (list) a single java_proto_library target for the proto_library in\n          srcs.  Required.\n      visibility: (list) the visibility list\n      **kwargs: Passed through to generated targets\n    \"\"\"",
        "Line" : 73,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Simplified version of gRPC upstream's grpc_cc_library.",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Our use case doesn't need ares.",
        "Line" : 146,
        "CharPositionInLine" : 36
      },
      "CommentCount" : 5
    },
    "third_party/ijar/BUILD" : {
      "ObjectId" : "466c7d47fd2fa0b23a9fbcd87eaac6873bbd08b3",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache 2.0",
        "Line" : 8,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 1
    },
    "third_party/ijar/test/BUILD" : {
      "ObjectId" : "151e59e619931e43014f81feee830a9044a1127b",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache License 2.0",
        "Line" : 3,
        "CharPositionInLine" : 22
      },
      "1" : {
        "Text" : "# We assume unzip and zip to be on the path",
        "Line" : 18,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# This is a precompiled .jar file because it needs to be compiled with JDK 11.\n# TODO(cushon): build from source once we have a JDK 11",
        "Line" : 34,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Intentionally bad test JAR: file count in central directory\n# wrong.",
        "Line" : 45,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# We assume unzip and zip to be on the path",
        "Line" : 64,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# For testing purposes: a class which exposes a private nested class in\n# public API, classes with annotations and a class with different forms of\n# deprecations markers",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# For testing purposes: an interface jar (ijar) which includes the\n# interface view of the various test class from above.",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "third_party/iossim/BUILD" : {
      "ObjectId" : "f070cac910c92dc695ab2846ca055cf1075afe2b",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# 3-clause BSD",
        "Line" : 1,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 1
    },
    "third_party/jarjar/BUILD" : {
      "ObjectId" : "2d25947b9fdab8eb6777175303c8a612b381ba65",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache 2.0",
        "Line" : 3,
        "CharPositionInLine" : 22
      },
      "1" : {
        "Text" : "# jarjar_bin",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "third_party/java/android_databinding/BUILD" : {
      "ObjectId" : "fe821f6f0368248874eb27b1e972ab98fb89e818",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2016 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache License 2.0",
        "Line" : 15,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "# Executable for the databinding resource compiler.",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "third_party/java/aosp_gradle_core/BUILD" : {
      "ObjectId" : "7df881c1a95235ea2cc1e991b4365c64bd48d190",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache 2.0",
        "Line" : 3,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 1
    },
    "third_party/java/apkbuilder/BUILD" : {
      "ObjectId" : "3274a121506d78f14fc20d1e64162e8fa993a60d",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache 2.0",
        "Line" : 1,
        "CharPositionInLine" : 22
      },
      "1" : {
        "Text" : "# This filegroup is necessary so that Bazel finds an apkbuilder during the\n# bootstrap process when this file is used as\n# @bazel_tools//third_party/java/apkbuilder/BUILD. Otherwise, the bootstrap\n# would fail if an Android SDK was declared in the WORKSPACE file of Bazel.",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "third_party/java/dd_plist/BUILD" : {
      "ObjectId" : "ec497c30a0adb27965d90c5d6d14dc7b34c32a28",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# MIT",
        "Line" : 3,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 1
    },
    "third_party/java/j2objc/BUILD" : {
      "ObjectId" : "79405d56d6739c5ba0a5ede2492b9e5097085809",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2015 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache License 2.0",
        "Line" : 15,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "third_party/java/jacoco/BUILD" : {
      "ObjectId" : "c8001b662c019fe337d8130a11873dd4cb90810d",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   JaCoCo is a free code coverage library for Java, created by the EclEmma team.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# EPL 1.0 (Eclipse Public License)",
        "Line" : 4,
        "CharPositionInLine" : 26
      },
      "CommentCount" : 2
    },
    "third_party/java/javapoet/BUILD" : {
      "ObjectId" : "9fa1d61f112b7531eff722e55e9c55a0c320b8c2",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache License 2.0",
        "Line" : 1,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 1
    },
    "third_party/java/jcommander/BUILD" : {
      "ObjectId" : "6fe61d58dbd39fd518b7670647fcf31b0aa72275",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "third_party/java/jdk/langtools/BUILD" : {
      "ObjectId" : "c4717679d29b74decefd12e8498517d08ce6800a",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# GNU GPL v2 with Classpath exception",
        "Line" : 3,
        "CharPositionInLine" : 26
      },
      "CommentCount" : 1
    },
    "third_party/java/proguard/BUILD" : {
      "ObjectId" : "345346e175a08e5b7e58881b2eb899a0c474d78c",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# GNU GPL v2",
        "Line" : 1,
        "CharPositionInLine" : 26
      },
      "CommentCount" : 1
    },
    "third_party/java/proguard/proguard5.3.3/buildscripts/build.xml" : {
      "ObjectId" : "370a76162da2d2d7ac740e630e0feedd242c7b80",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " Ant build script for ProGuard. ",
        "Line" : 1,
        "CharPositionInLine" : 40
      },
      "CommentCount" : 1
    },
    "third_party/java/proguard/proguard5.3.3/buildscripts/maven/ant/pom.xml" : {
      "ObjectId" : "5d7a8fdd54634b5401e6220785df335af1bebc7b",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "third_party/java/proguard/proguard5.3.3/buildscripts/maven/base/pom.xml" : {
      "ObjectId" : "c18a0edc7cddfcddb66e7942a6bf73d29a861d6a",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " sourceFileExcludes doesn't seem to work, so we're using excludePackageNames ",
        "Line" : 50,
        "CharPositionInLine" : 105
      },
      "CommentCount" : 1
    },
    "third_party/java/proguard/proguard5.3.3/buildscripts/maven/gradle/pom.xml" : {
      "ObjectId" : "2526e89fed42d47687dada04e1a9cc4b0c62219e",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "third_party/java/proguard/proguard5.3.3/buildscripts/maven/gui/pom.xml" : {
      "ObjectId" : "4bd887ab8a333fd66e2b0a9603d4aaa6d1e81fa0",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "third_party/java/proguard/proguard5.3.3/buildscripts/maven/pom.xml" : {
      "ObjectId" : "58e6a729d51adf95dd7c3c95d212c04bf639ac40",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " To keep our project layout simple, we're not following the\n         'one Maven way'. Now Maven is inflicting even more redundant\n         redundancy on us. We're stubborn though. ",
        "Line" : 142,
        "CharPositionInLine" : 54
      },
      "CommentCount" : 1
    },
    "third_party/java/proguard/proguard5.3.3/buildscripts/maven/retrace/pom.xml" : {
      "ObjectId" : "329c59b7ad00ba8b3508256b24b911f70f50e516",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "third_party/java/proguard/proguard5.3.3/buildscripts/maven/wtk/pom.xml" : {
      "ObjectId" : "219ae89f8c280572c9d147ba1f7280eeda42c2bf",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "third_party/java/proguard/proguard5.3.3/examples/android.pro" : {
      "ObjectId" : "10aa8053f818ca4f9419ed1bbb87200254a9166e",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#\n\n# This ProGuard configuration file illustrates how to process Android\n\n# applications.\n\n# Usage:\n\n#     java -jar proguard.jar @android.pro\n\n#\n\n# If you're using the Android SDK, the Ant release build and Eclipse export\n\n# already take care of the proper settings. You only need to enable ProGuard\n\n# by commenting in the corresponding line in project.properties. You can still\n\n# add project-specific configuration in proguard-project.txt.\n\n#\n\n# This configuration file is for custom, stand-alone builds.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Specify the input jars, output jars, and library jars.\n\n# Note that ProGuard works with Java bytecode (.class),\n\n# before the dex compiler converts it into Dalvik code (.dex).\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-libraryjars /usr/local/android-sdk/add-ons/google_apis-7_r01/libs/maps.jar\n\n# ...\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Save the obfuscation mapping to a file, so you can de-obfuscate any stack\n\n# traces later on.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# You can print out the seeds that are matching the keep options below.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#-printseeds bin/classes-processed.seeds\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Preverification is irrelevant for the dex compiler and the Dalvik VM.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Reduce the size of the output some more.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Switch off some optimizations that trip older versions of the Dalvik VM.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Keep a fixed source file attribute and all line number tables to get line\n\n# numbers in the stack traces.\n\n# You can comment this out if you're not interested in stack traces.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# RemoteViews might need annotations.\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Preserve all fundamental application classes.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Preserve all View implementations, their special context constructors, and\n\n# their setters.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Preserve all classes that have special context constructors, and the\n\n# constructors themselves.\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Preserve all classes that have special context constructors, and the\n\n# constructors themselves.\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Preserve all possible onClick handlers.\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Preserve the special fields of all Parcelable implementations.\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Preserve static fields of inner classes of R classes that might be accessed\n\n# through introspection.\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Preserve annotated Javascript interface methods.\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Preserve the required interface from the License Verification Library\n\n# (but don't nag the developer if the library is not used at all).\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# The Android Compatibility library references some classes that may not be\n\n# present in all versions of the API, but we know that's ok.\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Preserve all native method names and the names of their classes.\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Preserve the special static methods that are required in all enumeration\n\n# classes.\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Explicitly preserve all serialization members. The Serializable interface\n\n# is only a marker interface, so it wouldn't save them.\n\n# You can comment this out if your application doesn't use serialization.\n\n# If your code contains serializable classes that have to be backward \n\n# compatible, please refer to the manual.\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Your application may contain more items that need to be preserved; \n\n# typically classes that are dynamically created using Class.forName:\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# -keep public class mypackage.MyClass\n\n# -keep public interface mypackage.MyInterface\n\n# -keep public class * implements mypackage.MyInterface\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# If you wish, you can let the optimization step remove Android logging calls.\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#-assumenosideeffects class android.util.Log {\n\n#    public static boolean isLoggable(java.lang.String, int);\n\n#    public static int v(...);\n\n#    public static int i(...);\n\n#    public static int w(...);\n\n#    public static int d(...);\n\n#    public static int e(...);\n\n#}\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 28
    },
    "third_party/java/proguard/proguard5.3.3/examples/annotations/examples.pro" : {
      "ObjectId" : "d2b212c733a81aab763c52659286157027615846",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#\n\n# This ProGuard configuration file illustrates how to use annotations for\n\n# specifying which classes and class members should be kept.\n\n# Usage:\n\n#     java -jar proguard.jar @examples.pro\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Specify the input, output, and library jars.\n\n# This is assuming the code has been compiled in the examples directory.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Some important configuration is based on the annotations in the code.\n\n# We have to specify what the annotations mean to ProGuard.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# We can then still add any other options that might be useful.\n\n#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Print out a list of what we're preserving.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Preserve all annotations themselves.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Preserve all native method names and the names of their classes.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Preserve the special static methods that are required in all enumeration\n\n# classes.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Explicitly preserve all serialization members. The Serializable interface\n\n# is only a marker interface, so it wouldn't save them.\n\n# You can comment this out if your application doesn't use serialization.\n\n# If your code contains serializable classes that have to be backward \n\n# compatible, please refer to the manual.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "third_party/java/proguard/proguard5.3.3/examples/annotations/lib/annotations.pro" : {
      "ObjectId" : "f704af2dd498a7f1ce667d17df390a1e83ec79ad",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#\n\n# This ProGuard configuration file specifies how annotations can be used\n\n# to configure the processing of other code.\n\n# Usage:\n\n#     java -jar proguard.jar @annotations.pro -libraryjars annotations.jar ...\n\n#\n\n# Note that the other input/output options still have to be specified.\n\n# If you specify them in a separate file, you can simply include this file:\n\n#     -include annotations.pro\n\n#\n\n# You can add any other options that are required. For instance, if you are\n\n# processing a library, you can still include the options from library.pro.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The annotations are defined in the accompanying jar. For now, we'll start\n\n# with these. You can always define your own annotations, if necessary.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The following annotations can be specified with classes and with class\n\n# members.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# @Keep specifies not to shrink, optimize, or obfuscate the annotated class\n\n# or class member as an entry point.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# @KeepName specifies not to optimize or obfuscate the annotated class or\n\n# class member as an entry point.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The following annotations can only be specified with classes.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# @KeepImplementations and @KeepPublicImplementations specify to keep all,\n\n# resp. all public, implementations or extensions of the annotated class as\n\n# entry points. Note the extension of the java-like syntax, adding annotations\n\n# before the (wild-carded) interface name.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# @KeepApplication specifies to keep the annotated class as an application,\n\n# together with its main method.\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# @KeepClassMembers, @KeepPublicClassMembers, and\n\n# @KeepPublicProtectedClassMembers specify to keep all, all public, resp.\n\n# all public or protected, class members of the annotated class from being\n\n# shrunk, optimized, or obfuscated as entry points.\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# @KeepClassMemberNames, @KeepPublicClassMemberNames, and\n\n# @KeepPublicProtectedClassMemberNames specify to keep all, all public, resp.\n\n# all public or protected, class members of the annotated class from being\n\n# optimized or obfuscated as entry points.\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# @KeepGettersSetters and @KeepPublicGettersSetters specify to keep all, resp.\n\n# all public, getters and setters of the annotated class from being shrunk,\n\n# optimized, or obfuscated as entry points.\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "third_party/java/proguard/proguard5.3.3/examples/applets.pro" : {
      "ObjectId" : "75256a045640272bc756a6c68fcab66d6e09da17",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#\n\n# This ProGuard configuration file illustrates how to process applets.\n\n# Usage:\n\n#     java -jar proguard.jar @applets.pro\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Specify the input jars, output jars, and library jars.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Save the obfuscation mapping to a file, so you can de-obfuscate any stack\n\n# traces later on. Keep a fixed source file attribute and all line number\n\n# tables to get line numbers in the stack traces.\n\n# You can comment this out if you're not interested in stack traces.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Preserve all annotations.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# You can print out the seeds that are matching the keep options below.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#-printseeds out.seeds\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Preserve all public applets.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Preserve all native method names and the names of their classes.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Preserve the special static methods that are required in all enumeration\n\n# classes.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Explicitly preserve all serialization members. The Serializable interface\n\n# is only a marker interface, so it wouldn't save them.\n\n# You can comment this out if your library doesn't use serialization.\n\n# If your code contains serializable classes that have to be backward\n\n# compatible, please refer to the manual.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Your application may contain more items that need to be preserved;\n\n# typically classes that are dynamically created using Class.forName:\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# -keep public class mypackage.MyClass\n\n# -keep public interface mypackage.MyInterface\n\n# -keep public class * implements mypackage.MyInterface\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "third_party/java/proguard/proguard5.3.3/examples/applications.pro" : {
      "ObjectId" : "5424423e61ee11331ae35f407f26e16f542904dc",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#\n\n# This ProGuard configuration file illustrates how to process applications.\n\n# Usage:\n\n#     java -jar proguard.jar @applications.pro\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Specify the input jars, output jars, and library jars.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-libraryjars junit.jar\n\n#-libraryjars servlet.jar\n\n#-libraryjars jai_core.jar\n\n#...\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Save the obfuscation mapping to a file, so you can de-obfuscate any stack\n\n# traces later on. Keep a fixed source file attribute and all line number\n\n# tables to get line numbers in the stack traces.\n\n# You can comment this out if you're not interested in stack traces.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Preserve all annotations.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# You can print out the seeds that are matching the keep options below.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#-printseeds out.seeds\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Preserve all public applications.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Preserve all native method names and the names of their classes.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Preserve the special static methods that are required in all enumeration\n\n# classes.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Explicitly preserve all serialization members. The Serializable interface\n\n# is only a marker interface, so it wouldn't save them.\n\n# You can comment this out if your application doesn't use serialization.\n\n# If your code contains serializable classes that have to be backward \n\n# compatible, please refer to the manual.\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Your application may contain more items that need to be preserved; \n\n# typically classes that are dynamically created using Class.forName:\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# -keep public class mypackage.MyClass\n\n# -keep public interface mypackage.MyInterface\n\n# -keep public class * implements mypackage.MyInterface\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "third_party/java/proguard/proguard5.3.3/examples/library.pro" : {
      "ObjectId" : "4669e79c21de5f2885438939fade541e61ac4a3b",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#\n\n# This ProGuard configuration file illustrates how to process a program\n\n# library, such that it remains usable as a library.\n\n# Usage:\n\n#     java -jar proguard.jar @library.pro\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Specify the input jars, output jars, and library jars.\n\n# In this case, the input jar is the program library that we want to process.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Save the obfuscation mapping to a file, so we can de-obfuscate any stack\n\n# traces later on. Keep a fixed source file attribute and all line number\n\n# tables to get line numbers in the stack traces.\n\n# You can comment this out if you're not interested in stack traces.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Preserve all annotations.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Preserve all public classes, and their public and protected fields and\n\n# methods.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Preserve all .class method names.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Preserve all native method names and the names of their classes.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Preserve the special static methods that are required in all enumeration\n\n# classes.\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Explicitly preserve all serialization members. The Serializable interface\n\n# is only a marker interface, so it wouldn't save them.\n\n# You can comment this out if your library doesn't use serialization.\n\n# If your code contains serializable classes that have to be backward\n\n# compatible, please refer to the manual.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Your library may contain more items that need to be preserved; \n\n# typically classes that are dynamically created using Class.forName:\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# -keep public class mypackage.MyClass\n\n# -keep public interface mypackage.MyInterface\n\n# -keep public class * implements mypackage.MyInterface\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "third_party/java/proguard/proguard5.3.3/examples/midlets.pro" : {
      "ObjectId" : "f2f5f2156926b1d90e17b03bdb0acd18221e3bb3",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#\n\n# This ProGuard configuration file illustrates how to process J2ME midlets.\n\n# Usage:\n\n#     java -jar proguard.jar @midlets.pro\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Specify the input jars, output jars, and library jars.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Preverify the code suitably for Java Micro Edition.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Allow methods with the same signature, except for the return type,\n\n# to get the same obfuscation name.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Put all obfuscated classes into the nameless root package.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Allow classes and class members to be made public.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# On Windows, you can't use mixed case class names,\n\n# should you still want to use the preverify tool.\n\n#\n\n# -dontusemixedcaseclassnames\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Save the obfuscation mapping to a file, so you can de-obfuscate any stack\n\n# traces later on.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# You can keep a fixed source file attribute and all line number tables to\n\n# get stack traces with line numbers.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#-renamesourcefileattribute SourceFile\n\n#-keepattributes SourceFile,LineNumberTable\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# You can print out the seeds that are matching the keep options below.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#-printseeds out.seeds\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Preserve all public midlets.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Preserve all native method names and the names of their classes.\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Your midlet may contain more items that need to be preserved; \n\n# typically classes that are dynamically created using Class.forName:\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# -keep public class mypackage.MyClass\n\n# -keep public interface mypackage.MyInterface\n\n# -keep public class * implements mypackage.MyInterface\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "third_party/java/proguard/proguard5.3.3/examples/proguard.pro" : {
      "ObjectId" : "a077df41af3cf9e90c1c24bbe29beb4b7663a661",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#\n\n# This ProGuard configuration file illustrates how to process ProGuard itself.\n\n# Configuration files for typical applications will be very similar.\n\n# Usage:\n\n#     java -jar proguard.jar @proguard.pro\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Specify the input jars, output jars, and library jars.\n\n# We'll filter out the Ant classes, Gradle classes, and WTK classes, keeping\n\n# everything else.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Write out an obfuscation mapping file, for de-obfuscating any stack traces\n\n# later on, or for incremental obfuscation of extensions.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Allow methods with the same signature, except for the return type,\n\n# to get the same obfuscation name.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Put all obfuscated classes into the nameless root package.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Allow classes and class members to be made public.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The entry point: ProGuard and its main method.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# If you want to preserve the Ant task as well, you'll have to specify the\n\n# main ant.jar.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#-libraryjars /usr/local/java/ant/lib/ant.jar\n\n#-adaptresourcefilecontents proguard/ant/task.properties\n\n#\n\n#-keep,allowobfuscation class proguard.ant.*\n\n#-keepclassmembers public class proguard.ant.* {\n\n#    <init>(org.apache.tools.ant.Project);\n\n#    public void set*(***);\n\n#    public void add*(***);\n\n#}\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# If you want to preserve the Gradle task, you'll have to specify the Gradle\n\n# jars.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#-libraryjars /usr/local/java/gradle-2.12/lib/plugins/gradle-plugins-2.12.jar\n\n#-libraryjars /usr/local/java/gradle-2.12/lib/gradle-base-services-2.12.jar\n\n#-libraryjars /usr/local/java/gradle-2.12/lib/gradle-core-2.12.jar\n\n#-libraryjars /usr/local/java/gradle-2.12/lib/groovy-all-2.4.4.jar\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#-keep public class proguard.gradle.* {\n\n#    public *;\n\n#}\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# If you want to preserve the WTK obfuscation plug-in, you'll have to specify\n\n# the kenv.zip file.\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#-libraryjars /usr/local/java/wtk2.5.2/wtklib/kenv.zip\n\n#-keep public class proguard.wtk.ProGuardObfuscator\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "third_party/java/proguard/proguard5.3.3/examples/proguardall.pro" : {
      "ObjectId" : "c3106f70f61e675b10dcba58bae70a2f360cbdf4",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#\n\n# This ProGuard configuration file illustrates how to process ProGuard\n\n# (including its main application, its GUI, its Ant task, and its WTK plugin),\n\n# and the ReTrace tool, all in one go.\n\n# Configuration files for typical applications will be very similar.\n\n# Usage:\n\n#     java -jar proguard.jar @proguardall.pro\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Specify the input jars, output jars, and library jars.\n\n# We'll read all jars from the lib directory, process them, and write the\n\n# processed jars to a new out directory.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# You may have to adapt the paths below.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Allow methods with the same signature, except for the return type,\n\n# to get the same obfuscation name.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Put all obfuscated classes into the nameless root package.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Adapt the names and contents of the resource files.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The main entry points.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# If we have ant.jar, we can properly process the Ant task.\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# If we have the Gradle jars, we can properly process the Gradle task.\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# If we have kenv.zip, we can process the J2ME WTK plugin.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "third_party/java/proguard/proguard5.3.3/examples/proguardgui.pro" : {
      "ObjectId" : "78f67dbf604c2933851b85ad89881796c2b9c3e1",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#\n\n# This ProGuard configuration file illustrates how to process the ProGuard GUI.\n\n# Configuration files for typical applications will be very similar.\n\n# Usage:\n\n#     java -jar proguard.jar @proguardgui.pro\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Specify the input jars, output jars, and library jars.\n\n# The input jars will be merged in a single output jar.\n\n# We'll filter out the Ant classes, Gradle classes, and WTK classes, keeping\n\n# everything else.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If we wanted to reuse the previously obfuscated proguard_out.jar, we could\n\n# perform incremental obfuscation based on its mapping file, and only keep the\n\n# additional GUI files instead of all files.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-applymapping proguard.map\n\n#-injars      ../lib/proguardgui.jar\n\n#-outjars     proguardgui_out.jar\n\n#-libraryjars ../lib/proguard.jar(!proguard/ant/**,!proguard/wtk/**)\n\n#-libraryjars ../lib/retrace.jar\n\n#-libraryjars <java.home>/lib/rt.jar\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Allow methods with the same signature, except for the return type,\n\n# to get the same obfuscation name.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Put all obfuscated classes into the nameless root package.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Adapt the names of resource files, based on the corresponding obfuscated\n\n# class names. Notably, in this case, the GUI resource properties file will\n\n# have to be renamed.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# The entry point: ProGuardGUI and its main method.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "third_party/java/proguard/proguard5.3.3/examples/retrace.pro" : {
      "ObjectId" : "39f5a95c5916030473561c7934d80713d84b7fc0",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#\n\n# This ProGuard configuration file illustrates how to process the ReTrace tool.\n\n# Configuration files for typical applications will be very similar.\n\n# Usage:\n\n#     java -jar proguard.jar @retrace.pro\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Specify the input jars, output jars, and library jars.\n\n# The input jars will be merged in a single output jar.\n\n# We'll filter out the Ant and WTK classes.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If we wanted to reuse the previously obfuscated proguard_out.jar, we could\n\n# perform incremental obfuscation based on its mapping file, and only keep the\n\n# additional ReTrace files instead of all files.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-applymapping proguard.map\n\n#-outjars      retrace_out.jar(proguard/retrace/**)\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Allow methods with the same signature, except for the return type,\n\n# to get the same obfuscation name.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Put all obfuscated classes into the nameless root package.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Allow classes and class members to be made public.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# The entry point: ReTrace and its main method.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "third_party/java/proguard/proguard5.3.3/examples/scala.pro" : {
      "ObjectId" : "3b69c3c8b49be4dc98bafe502544af180c96b870",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#\n\n# This ProGuard configuration file illustrates how to process Scala\n\n# applications, including the Scala runtime.\n\n# Usage:\n\n#     java -jar proguard.jar @scala.pro\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Specify the input jars, output jars, and library jars.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-injars  /usr/local/java/scala-2.9.1/lib/scala-compiler.jar(!META-INF/MANIFEST.MF)\n\n#-injars  /usr/local/java/scala-2.9.1/lib/jline.jar(!META-INF/MANIFEST.MF)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-libraryjars /usr/local/java/ant/lib/ant.jar\n\n#...\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Ignore some compiler artefacts.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Save the obfuscation mapping to a file, so you can de-obfuscate any stack\n\n# traces later on. Keep a fixed source file attribute and all line number\n\n# tables to get line numbers in the stack traces.\n\n# You can comment this out if you're not interested in stack traces.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Preserve all annotations.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# You can print out the seeds that are matching the keep options below.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#-printseeds out.seeds\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Preserve all public applications.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Preserve some classes and class members that are accessed by means of\n\n# introspection.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Preserve some classes and class members that are accessed by means of\n\n# introspection in the Scala compiler library, if it is processed as well.\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#-keep class * implements jline.Completor\n\n#-keep class * implements jline.Terminal\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#-keep class scala.tools.nsc.Global\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#-keepclasseswithmembers class * {\n\n#    <init>(scala.tools.nsc.Global);\n\n#}\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#-keepclassmembers class * {\n\n#    *** scala_repl_value();\n\n#    *** scala_repl_result();\n\n#}\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Preserve all native method names and the names of their classes.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Preserve the special static methods that are required in all enumeration\n\n# classes.\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Explicitly preserve all serialization members. The Serializable interface\n\n# is only a marker interface, so it wouldn't save them.\n\n# You can comment this out if your application doesn't use serialization.\n\n# If your code contains serializable classes that have to be backward \n\n# compatible, please refer to the manual.\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Your application may contain more items that need to be preserved; \n\n# typically classes that are dynamically created using Class.forName:\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# -keep public class mypackage.MyClass\n\n# -keep public interface mypackage.MyInterface\n\n# -keep public class * implements mypackage.MyInterface\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "third_party/java/proguard/proguard5.3.3/examples/servlets.pro" : {
      "ObjectId" : "a3f7875b5ecf711d7f1c11836190728f5385f248",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#\n\n# This ProGuard configuration file illustrates how to process servlets.\n\n# Usage:\n\n#     java -jar proguard.jar @servlets.pro\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Specify the input jars, output jars, and library jars.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Save the obfuscation mapping to a file, so you can de-obfuscate any stack\n\n# traces later on. Keep a fixed source file attribute and all line number\n\n# tables to get line numbers in the stack traces.\n\n# You can comment this out if you're not interested in stack traces.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Preserve all annotations.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# You can print out the seeds that are matching the keep options below.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#-printseeds out.seeds\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Preserve all public servlets.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Preserve all native method names and the names of their classes.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Preserve the special static methods that are required in all enumeration\n\n# classes.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Explicitly preserve all serialization members. The Serializable interface\n\n# is only a marker interface, so it wouldn't save them.\n\n# You can comment this out if your library doesn't use serialization.\n\n# If your code contains serializable classes that have to be backward\n\n# compatible, please refer to the manual.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Your application may contain more items that need to be preserved;\n\n# typically classes that are dynamically created using Class.forName:\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# -keep public class mypackage.MyClass\n\n# -keep public interface mypackage.MyInterface\n\n# -keep public class * implements mypackage.MyInterface\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "third_party/java/proguard/proguard5.3.3/src/proguard/gui/boilerplate.pro" : {
      "ObjectId" : "4b35ac1dd70c32d1af181113bff51aa05b209ed8",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Keep - Applications. Keep all application classes, along with their 'main'\n\n# methods.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Keep - Applets. Keep all extensions of java.applet.Applet.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Keep - Servlets. Keep all extensions of javax.servlet.Servlet.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Keep - Midlets. Keep all extensions of javax.microedition.midlet.MIDlet.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Keep - Xlets. Keep all extensions of javax.tv.xlet.Xlet.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Keep - Library. Keep all public and protected classes, fields, and methods.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Also keep - Enumerations. Keep the special static methods that are required in\n\n# enumeration classes.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Also keep - Serialization code. Keep all fields and methods that are used for\n\n# serialization.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Also keep - BeanInfo classes. Keep all implementations of java.beans.BeanInfo.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Also keep - Bean classes. Keep all specified classes, along with their getters\n\n# and setters.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Also keep - Database drivers. Keep all implementations of java.sql.Driver.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Also keep - Swing UI L&F. Keep all extensions of javax.swing.plaf.ComponentUI,\n\n# along with the special 'createUI' method.\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Also keep - RMI interfaces. Keep all interfaces that extend the\n\n# java.rmi.Remote interface, and their methods.\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Also keep - RMI implementations. Keep all implementations of java.rmi.Remote,\n\n# including any explicit or implicit implementations of Activatable, with their\n\n# two-argument constructors.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Keep names - Native method names. Keep all native class/method names.\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Keep names - _class method names. Keep all .class method names. This may be\n\n# useful for libraries that will be obfuscated again with different obfuscators.\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Remove - System method calls. Remove all invocations of System\n\n# methods without side effects whose return values are not used.\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Remove - Math method calls. Remove all invocations of Math\n\n# methods without side effects whose return values are not used.\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Remove - Number method calls. Remove all invocations of Number\n\n# methods without side effects whose return values are not used.\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Remove - String method calls. Remove all invocations of String\n\n# methods without side effects whose return values are not used.\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Remove - StringBuffer method calls. Remove all invocations of StringBuffer\n\n# methods without side effects whose return values are not used.\n",
        "Line" : 330,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Remove - StringBuilder method calls. Remove all invocations of StringBuilder\n\n# methods without side effects whose return values are not used.\n",
        "Line" : 346,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Remove debugging - Throwable_printStackTrace calls. Remove all invocations of\n\n# Throwable.printStackTrace().\n",
        "Line" : 362,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Remove debugging - Thread_dumpStack calls. Remove all invocations of\n\n# Thread.dumpStack().\n",
        "Line" : 368,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Remove debugging - All logging API calls. Remove all invocations of the\n\n# logging API whose return values are not used.\n",
        "Line" : 374,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Remove debugging - All Log4j API calls. Remove all invocations of the\n\n# Log4j API whose return values are not used.\n",
        "Line" : 380,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 26
    },
    "third_party/java/proguard/proguard5.3.3/src/proguard/gui/default.pro" : {
      "ObjectId" : "8cd6b38ed5142ddb6eb400b3c1a7c5cee4368974",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# The default configuration when starting up the GUI.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Keep - Applications. Keep all application classes, along with their 'main'\n\n# methods.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Also keep - Enumerations. Keep the special static methods that are required in\n\n# enumeration classes.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Also keep - Database drivers. Keep all implementations of java.sql.Driver.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Also keep - Swing UI L&F. Keep all extensions of javax.swing.plaf.ComponentUI,\n\n# along with the special 'createUI' method.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Keep names - Native method names. Keep all native class/method names.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remove - System method calls. Remove all invocations of System\n\n# methods without side effects whose return values are not used.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Remove - Math method calls. Remove all invocations of Math\n\n# methods without side effects whose return values are not used.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Remove - Number method calls. Remove all invocations of Number\n\n# methods without side effects whose return values are not used.\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Remove - String method calls. Remove all invocations of String\n\n# methods without side effects whose return values are not used.\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Remove - StringBuffer method calls. Remove all invocations of StringBuffer\n\n# methods without side effects whose return values are not used.\n",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Remove - StringBuilder method calls. Remove all invocations of StringBuilder\n\n# methods without side effects whose return values are not used.\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "third_party/java/proguard/proguard5.3.3/src/proguard/wtk/default.pro" : {
      "ObjectId" : "d31714f0d5b9bc2a37350732063f0e9dd18828a6",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Keep all extensions of javax.microedition.midlet.MIDlet.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Keep all native class/method names.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Remove all invocations of System methods without side effects\n\n# whose return values are not used.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Remove all invocations of String methods without side effects\n\n# whose return values are not used.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Remove all invocations of StringBuffer methods without side effects\n\n# whose return values are not used.\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "third_party/javascript/bootstrap/BUILD" : {
      "ObjectId" : "3b2f7811f5d0f3084a14543267a8c871990c3b42",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# MIT",
        "Line" : 1,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 1
    },
    "third_party/jaxb/BUILD" : {
      "ObjectId" : "cfead3b81fa1b62f7c9f99b3fd47cfd1457c363b",
      "LastModified" : "2019-04-17T08:15:20Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "#  CDDL License",
        "Line" : 1,
        "CharPositionInLine" : 26
      },
      "CommentCount" : 1
    },
    "third_party/jformatstring/BUILD" : {
      "ObjectId" : "f3f1d35b947b08d14d54aeaf9516dfb7c3106cc6",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# GNU GPL v2 with Classpath exception",
        "Line" : 3,
        "CharPositionInLine" : 26
      },
      "CommentCount" : 1
    },
    "third_party/nanopb/BUILD" : {
      "ObjectId" : "e0d16b60491ae224d5a33a4b423731ffac4be660",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "third_party/nanopb/docs/Makefile" : {
      "ObjectId" : "0dbd97cfec34274421a07705ae6143eabde56115",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "third_party/nanopb/examples/cmake_simple/CMakeLists.txt" : {
      "ObjectId" : "e5f33a028eb0f3cd4b50b46c71a653353fa0a269",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_custom_target(generate_proto_sources DEPENDS ${PROTO_SRCS} ${PROTO_HDRS})\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "third_party/nanopb/examples/network_server/Makefile" : {
      "ObjectId" : "2c7639a15dbf418c49d24cc8d2d07b691ac29fc0",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Include the nanopb provided Makefile rules\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler flags to enable all warnings & debug info\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "third_party/nanopb/examples/simple/Makefile" : {
      "ObjectId" : "970a865009a0d48f4c39fa92faae5e7defe95ac6",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Include the nanopb provided Makefile rules\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler flags to enable all warnings & debug info\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C source code files that are required\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The main program\n\n# The compiled protocol definition\n\n# The nanopb encoder\n\n# The nanopb decoder\n\n# The nanopb common parts\n",
        "Line" : 9,
        "CharPositionInLine" : 35
      },
      "4" : {
        "Text" : "# Build rule for the main program\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Build rule for the protocol\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "third_party/nanopb/examples/using_double_on_avr/Makefile" : {
      "ObjectId" : "874a64bdc981c09bd53459ca8d89eb8171f6b212",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Include the nanopb provided Makefile rules\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler flags to enable all warnings & debug info\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "third_party/nanopb/examples/using_union_messages/Makefile" : {
      "ObjectId" : "66396a02eeacad33108e33934c9ae1288a51dad1",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Include the nanopb provided Makefile rules\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler flags to enable all warnings & debug info\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "third_party/nanopb/extra/FindNanopb.cmake" : {
      "ObjectId" : "9afb21d0b1f1ccf4c04358e8723ca093c1c0040c",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is an example script for use with CMake projects for locating and configuring\n\n# the nanopb library.\n\n#\n\n# The following variables can be set and are optional:\n\n#\n\n#\n\n#   PROTOBUF_SRC_ROOT_FOLDER - When compiling with MSVC, if this cache variable is set\n\n#                              the protobuf-default VS project build locations\n\n#                              (vsprojects/Debug & vsprojects/Release) will be searched\n\n#                              for libraries and binaries.\n\n#\n\n#   NANOPB_IMPORT_DIRS       - List of additional directories to be searched for\n\n#                              imported .proto files.\n\n#\n\n#   NANOPB_GENERATE_CPP_APPEND_PATH - By default -I will be passed to protoc\n\n#                                     for each directory where a proto file is referenced.\n\n#                                     Set to FALSE if you want to disable this behaviour.\n\n#\n\n# Defines the following variables:\n\n#\n\n#   NANOPB_FOUND - Found the nanopb library (source&header files, generator tool, protoc compiler tool)\n\n#   NANOPB_INCLUDE_DIRS - Include directories for Google Protocol Buffers\n\n#\n\n# The following cache variables are also available to set or use:\n\n#   PROTOBUF_PROTOC_EXECUTABLE - The protoc compiler\n\n#   NANOPB_GENERATOR_SOURCE_DIR - The nanopb generator source\n\n#\n\n#  ====================================================================\n\n#\n\n# NANOPB_GENERATE_CPP (public function)\n\n#   SRCS = Variable to define with autogenerated\n\n#          source files\n\n#   HDRS = Variable to define with autogenerated\n\n#          header files\n\n#   ARGN = proto files\n\n#\n\n#  ====================================================================\n\n#  Example:\n\n#\n\n#   set(NANOPB_SRC_ROOT_FOLDER \"/path/to/nanopb\")\n\n#   set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${NANOPB_SRC_ROOT_FOLDER}/cmake)\n\n#   find_package( Nanopb REQUIRED )\n\n#   include_directories(${NANOPB_INCLUDE_DIRS})\n\n#\n\n#   NANOPB_GENERATE_CPP(PROTO_SRCS PROTO_HDRS foo.proto)\n\n#\n\n#   include_directories(${CMAKE_CURRENT_BINARY_DIR})\n\n#   add_executable(bar bar.cc ${PROTO_SRCS} ${PROTO_HDRS})\n\n#\n\n#  ====================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2009 Kitware, Inc.\n\n# Copyright 2009-2011 Philip Lowman <philip@yhbt.com>\n\n# Copyright 2008 Esben Mose Hansen, Ange Optimization ApS\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n#\n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n#=============================================================================\n\n#\n\n# Changes\n\n# 2013.01.31 - Pavlo Ilin - used Modules/FindProtobuf.cmake from cmake 2.8.10 to\n\n#                           write FindNanopb.cmake\n\n#\n\n#=============================================================================\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Create an include path for each file specified\n",
        "Line" : 100,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Treat the source diretory as immutable.\n\n#\n\n# Copy the generator directory to the build directory before\n\n# compiling python and proto files.  Fixes issues when using the\n\n# same build directory with different python/protobuf versions\n\n# as the binary build directory is discarded across builds.\n\n#\n",
        "Line" : 136,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#\n\n# Main.\n\n#\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# By default have NANOPB_GENERATE_CPP macro pass -I to protoc\n\n# for each directory where a proto file is referenced.\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Make a really good guess regarding location of NANOPB_SRC_ROOT_FOLDER\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Find the include directory\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Find nanopb source files\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Find the protoc Executable\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Find nanopb generator source dir\n",
        "Line" : 257,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "third_party/nanopb/generator/proto/Makefile" : {
      "ObjectId" : "89bfe52864ecfe9a00e94d8be2c6090528a8d0d7",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "third_party/pprof/BUILD" : {
      "ObjectId" : "0fb1b97fadbf20463b9a93e46acc1de776167dcd",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache 2.0",
        "Line" : 3,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 1
    },
    "third_party/protobuf/3.6.1/BUILD" : {
      "ObjectId" : "740eead5e47a69ebf56dcfdecda8d736eec076a7",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Bazel (http://bazel.io/) BUILD file for Protobuf.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "################################################################################\n# Java 9 configuration\n################################################################################",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "################################################################################\n# Modifications made by Bazel\n################################################################################",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# For bootstrapping JavaBuilder",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "################################################################################\n# The below build rules are a copy of the upstream protobuf BUILD file without\n# the \"Java support\" section, as advised by Step 3 in the \"Updating protobuf\"\n# docs of Bazel, at\n# https://github.com/bazelbuild/bazel/blob/9162bd920751d3e8c7b0fc3af3009af7e4b3b828/third_party/protobuf/README.md\n# ################################################################################",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "################################################################################\n# Protobuf Runtime Library\n################################################################################",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# -Wno-sign-compare\n# -Wno-unused-function",
        "Line" : 82,
        "CharPositionInLine" : 15
      },
      "7" : {
        "Text" : "# Prevents ISO C++ const string assignment warnings for pyext sources.",
        "Line" : 95,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# Android and MSVC builds do not need to link in a separate pthread library.",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# AUTOGEN(protobuf_lite_srcs)",
        "Line" : 126,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# AUTOGEN(protobuf_srcs)",
        "Line" : 161,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# This provides just the header files for use in projects that need to build\n# shared libraries for dynamic loading. This target is available until Bazel\n# adds native support for such use cases.\n# TODO(keveman): Remove this target once the support gets added to Bazel.",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Map of all well known protos.\n# name => (include path, imports)",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "################################################################################\n# Well Known Types Proto Library Rules\n#\n# These proto_library rules can be used with one of the language specific proto\n# library rules i.e. java_proto_library:\n#\n# java_proto_library(\n#   name = \"any_java_proto\",\n#   deps = [\"@com_google_protobuf//:any_proto],\n# )\n################################################################################",
        "Line" : 282,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "################################################################################\n# Protocol Buffers Compiler\n################################################################################",
        "Line" : 309,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# AUTOGEN(protoc_lib_srcs)",
        "Line" : 316,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "################################################################################\n# Tests\n################################################################################",
        "Line" : 416,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# AUTOGEN(lite_test_protos)",
        "Line" : 421,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# AUTOGEN(test_protos)",
        "Line" : 432,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# AUTOGEN(common_test_srcs)",
        "Line" : 491,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# AUTOGEN(test_plugin_srcs)",
        "Line" : 503,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "# AUTOGEN(test_srcs)",
        "Line" : 528,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# Files for csharp_bootstrap_unittest.cc.",
        "Line" : 607,
        "CharPositionInLine" : 8
      },
      "23" : {
        "Text" : "################################################################################\n# Java support -- deleted rules in favour of \"Modifications made by Bazel\" section\n################################################################################",
        "Line" : 623,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "################################################################################\n# Python support\n################################################################################",
        "Line" : 627,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Copy the builtin proto files from src/google/protobuf to\n# python/google/protobuf. This way, the generated Python sources will be in the\n# same directory as the Python runtime sources. This is necessary for the\n# modules to be imported correctly since they are all part of the same Python\n# package.",
        "Line" : 703,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# TODO(dzc): Remove this once py_proto_library can have labels in srcs, in\n# which case we can simply add :protos_python in srcs.",
        "Line" : 715,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Copy the test proto files from src/google/protobuf to\n# python/google/protobuf. This way, the generated Python sources will be in the\n# same directory as the Python runtime sources. This is necessary for the\n# modules to be imported correctly by the tests since they are all part of the\n# same Python package.",
        "Line" : 741,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# TODO(dzc): Remove this once py_proto_library can have labels in srcs, in\n# which case we can simply add :protos_python_test in srcs.",
        "Line" : 753,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 29
    },
    "third_party/protobuf/3.6.1/Makefile.am" : {
      "ObjectId" : "ae4ac858cd2917e04151081dba9b232b867487b1",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build . before src so that our all-local and clean-local hooks kicks in at\n\n# the right time.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Always include third_party directories in distributions.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Build gmock before we build protobuf tests.  We don't add gmock to SUBDIRS\n\n# because then \"make check\" would also build and run all of gmock's own tests,\n\n# which takes a lot of time and is generally not useful to us.  Also, we don't\n\n# want \"make install\" to recurse into gmock since we don't want to overwrite\n\n# the installed version of gmock if there is one.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# We would like to clean gmock when \"make clean\" is invoked.  But we have to\n\n# be careful because clean-local is also invoked during \"make distclean\", but\n\n# \"make distclean\" already recurses into gmock because it's listed among the\n\n# DIST_SUBDIRS.  distclean will delete gmock/Makefile, so if we then try to\n\n# cd to the directory again and \"make clean\" it will fail.  So, check that the\n\n# Makefile exists before recursing.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Deletes all the files generated by autogen.sh.\n",
        "Line" : 1067,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "third_party/protobuf/3.6.1/benchmarks/Makefile.am" : {
      "ObjectId" : "3ae14ffbcdcba8ba3b4c0a4ef633cc66f5fefbc4",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# We have to cd to $(srcdir) before executing protoc because $(protoc_inputs) is\n\n# relative to srcdir, which may not be the same as the current directory when\n\n# building out-of-tree.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "############# CPP RULES ##############\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Explicit deps because BUILT_SOURCES are only done before a \"make all/check\"\n\n# so a direct \"make test_cpp\" could fail if parallel enough.\n\n# See: https://www.gnu.org/software/automake/manual/html_node/Built-Sources-Example.html#Recording-Dependencies-manually\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "############ CPP RULES END ############\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "############# JAVA RULES ##############\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "############# JAVA RULES END ##############\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "############# PYTHON RULES ##############\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "############# PYTHON RULES END ##############\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "############# GO RULES BEGIN ##############\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "############# GO RULES END ##############\n",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "############# GOGO RULES BEGIN ############\n",
        "Line" : 272,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Explicit deps because BUILT_SOURCES are only done before a \"make all/check\"\n\n# so a direct \"make test_cpp\" could fail if parallel enough.\n\n# See: https://www.gnu.org/software/automake/manual/html_node/Built-Sources-Example.html#Recording-Dependencies-manually\n",
        "Line" : 331,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12,
      "Errorlog" : "line 416:18 token recognition error at: '\"s/b\\.Run(\\\"\\(.*\\)\\\"/b.Run(\\\"\\1'\nline 432:74 token recognition error at: '\"; done' >> gogo-benchmark\\n\\t@echo 'go test -bench=. -- $$all_data' >> gogo-benchmark\\n\\t@echo 'cd ../..' >> gogo-benchmark\\n\\t@chmod +x gogo-benchmark\\n\\ngo_no_group: go_no_group_protoc_middleman generate_gogo_data generate_all_gogo_benchmark_code gogo-benchmark\\n\\t./gogo-benchmark go_no_group $(gogo_data)\\n\\t\\ngogofast: gogofast_protoc_middleman generate_gogo_data gogo-benchmark generate_all_gogo_benchmark_code \\n\\t./gogo-benchmark gogofast $(gogo_data)\\n\\t\\ngogofaster: gogofaster_protoc_middleman  generate_gogo_data gogo-benchmark generate_all_gogo_benchmark_code\\n\\t./gogo-benchmark gogofaster $(gogo_data)\\n\\ngogoslick: gogoslick_protoc_middleman  generate_gogo_data gogo-benchmark generate_all_gogo_benchmark_code\\n\\t./gogo-benchmark gogoslick $(gogo_data)\\n\\n\\n############# GOGO RULES END ############\\n\\n \\n############ UTIL RULES BEGIN ############\\n\\nbin_PROGRAMS += protoc-gen-gogoproto gogo-data-scrubber\\n\\nprotoc_gen_gogoproto_LDADD = $(top_srcdir)/src/libprotobuf.la $(top_srcdir)/src/libprotoc.la\\nprotoc_gen_gogoproto_SOURCES = util/protoc-gen-gogoproto.cc\\nprotoc_gen_gogoproto_CPPFLAGS = -I$(top_srcdir)/src -I$(srcdir)/cpp -I$(srcdir)/util\\n\\ngogo_data_scrubber_LDADD = $(top_srcdir)/src/libprotobuf.la\\ngogo_data_scrubber_SOURCES = util/gogo_data_scrubber.cc\\ngogo_data_scrubber_CPPFLAGS = -I$(top_srcdir)/src -I$(srcdir)/cpp -I$(srcdir)/util\\nutil/gogo_data_scrubber-gogo_data_scrubber.$(OBJEXT): $(benchmarks_protoc_outputs) $(benchmarks_protoc_outputs_proto2) $(benchmarks_protoc_outputs_header) $(benchmarks_protoc_outputs_proto2_header)\\nnodist_gogo_data_scrubber_SOURCES =                                        \\\\n\\t$(benchmarks_protoc_outputs)                                             \\\\n\\t$(benchmarks_protoc_outputs_proto2)                                      \\\\n\\t$(benchmarks_protoc_outputs_proto2_header)                               \\\\n\\t$(benchmarks_protoc_outputs_header)\\n\\t\\n############ UTIL RULES END ############\\n\\nMAINTAINERCLEANFILES =                                                     \\\\n\\tMakefile.in\\n\\nCLEANFILES =                                                               \\\\n\\t$(benchmarks_protoc_outputs)                                             \\\\n\\t$(benchmarks_protoc_outputs_header)                                      \\\\n\\t$(benchmarks_protoc_outputs_proto2)                                      \\\\n\\t$(benchmarks_protoc_outputs_proto2_header)                               \\\\n\\tinitialize_submodule                                                     \\\\n\\tmake_tmp_dir                                                             \\\\n\\tprotoc_middleman                                                         \\\\n\\tprotoc_middleman2                                                        \\\\n\\tjavac_middleman                                                          \\\\n\\tjava-benchmark                                                           \\\\n\\tpython_cpp_proto_library                                                 \\\\n\\tpython-pure-python-benchmark                                             \\\\n\\tpython-cpp-reflection-benchmark                                          \\\\n\\tpython-cpp-generated-code-benchmark                                      \\\\n\\tgo-benchmark                                                             \\\\n\\tgo_protoc_middleman                                                      \\\\n\\tmake_tmp_dir_gogo                                                        \\\\n\\tgogo_proto_middleman                                                     \\\\n\\tgenerate_gogo_data                                                       \\\\n\\tgo_no_group_protoc_middleman                                             \\\\n\\tgo_no_group                                                              \\\\n\\tgo-no-group-benchmark                                                    \\\\n\\t$(cpp_no_group_benchmarks_protoc_outputs_header)                         \\\\n\\t$(cpp_no_group_benchmarks_protoc_outputs)                                \\\\n\\t$(cpp_no_group_benchmarks_protoc_outputs_proto2_header)                  \\\\n\\t$(cpp_no_group_benchmarks_protoc_outputs_proto2)                         \\\\n\\tgenerate_all_gogo_benchmark_code                                         \\\\n\\tgenerate-gogo-benchmark-code                                             \\\\n\\tcpp_no_group_protoc_middleman                                            \\\\n\\tgenerate_cpp_no_group_benchmark_code                                     \\\\n\\tgenerate_gogo_benchmark_code                                             \\\\n\\tgogofast_protoc_middleman                                                \\\\n\\tgogofast                                                                 \\\\n\\tgogofaster_protoc_middleman                                              \\\\n\\tgogofaster                                                               \\\\n\\tgogoslick_protoc_middleman                                               \\\\n\\tgogoslick                                                                \\\\n\\tgogo-benchmark                                                           \\\\n\\tgogo/cpp_no_group/cpp_benchmark.* \\n\\t\\n\\nclean-local:\\n\\t-rm -rf tmp/*\\n\u0000'\n"
    },
    "third_party/protobuf/3.6.1/cmake/CMakeLists.txt" : {
      "ObjectId" : "02174e96aa3a0a3eeefe22e773d3019318631fb4",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Minimum CMake required\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMake policies\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Project\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add c++11 flags\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Options\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# User options\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Path to main configure script\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Parse configure script\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Description\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Version\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Contact\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Parse version tweaks\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Package version\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# FindZLIB module define ZLIB_INCLUDE_DIRS variable\n\n# Set ZLIB_INCLUDE_DIRECTORIES for compatible\n",
        "Line" : 104,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Using imported target if exists\n",
        "Line" : 107,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Explicitly set these to empty (override NOT_FOUND) so cmake doesn't\n\n# complain when we use them later.\n",
        "Line" : 114,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# In case we are building static libraries, link also the runtime library statically\n\n# so that MSVCR*.DLL is not required at runtime.\n\n# https://msdn.microsoft.com/en-us/library/2kzt1wy3.aspx\n\n# This is achieved by replacing msvc option /MD with /MT and /MDd with /MTd\n\n# http://www.cmake.org/Wiki/CMake_FAQ#How_can_I_build_my_MSVC_application_with_a_static_runtime.3F\n",
        "Line" : 129,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Build with multiple processes\n",
        "Line" : 146,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# MSVC warning suppressions\n",
        "Line" : 148,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# 'expression' : signed/unsigned mismatch\n\n# switch statement contains 'default' but no 'case' labels\n\n# unary minus operator applied to unsigned type, result still unsigned\n\n# 'conversion' conversion from 'type1' to 'type2', possible loss of data\n\n# 'identifier' : class 'type' needs to have dll-interface to be used by clients of class 'type2'\n\n# 'var' : conversion from 'size_t' to 'type', possible loss of data\n\n# 'identifier' : truncation from 'type1' to 'type2'\n\n# 'operator' : integral constant overflow\n\n# 'conversion' : truncation of constant value\n\n# 'operator' : result of 32-bit shift implicitly converted to 64 bits (was 64-bit shift intended?)\n\n# 'this' : used in base member initializer list\n\n# no definition for inline function 'function'\n\n# 'type' : forcing value to bool 'true' or 'false' (performance warning)\n\n# The compiler encountered a deprecated declaration.\n",
        "Line" : 150,
        "CharPositionInLine" : 12
      },
      "20" : {
        "Text" : "# Allow big object\n",
        "Line" : 165,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# Suppress linker warnings about files with no symbols defined.\n",
        "Line" : 171,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# Add the \"lib\" prefix for generated .lib outputs.\n",
        "Line" : 183,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# When building with \"make\", \"lib\" prefix will be added automatically by\n\n# the build tool.\n",
        "Line" : 186,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 24
    },
    "third_party/protobuf/3.6.1/cmake/examples.cmake" : {
      "ObjectId" : "e5cad63f67650db353a1f3a0e8b349e8cf0db32f",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Internal utility function: Create a custom target representing a build of examples with custom options.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Skip\n",
        "Line" : 20,
        "CharPositionInLine" : 23
      },
      "2" : {
        "Text" : "# Add examples as an external project.\n\n# sub_directory cannot be used because the find_package(protobuf) call would cause failures with redefined targets.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Build using the legacy compatibility module.\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#Build using the installed library.\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#Build using the installed library in legacy compatibility mode.\n",
        "Line" : 52,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "third_party/protobuf/3.6.1/cmake/install.cmake" : {
      "ObjectId" : "82036cb6878c58deaccbb06f2b12b365388e1161",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Internal function for parsing auto tools scripts\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Install well-known type proto files\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Install configuration\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Allows the build directory to be used as a find directory.\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "third_party/protobuf/3.6.1/cmake/libprotobuf-lite.cmake" : {
      "ObjectId" : "911fce5e5d348c384db3c288ce763fcf8f166c80",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "third_party/protobuf/3.6.1/cmake/libprotobuf.cmake" : {
      "ObjectId" : "65d05c194453bc8d9dfe23cca9c80cf9bf5497c0",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "third_party/protobuf/3.6.1/cmake/libprotoc.cmake" : {
      "ObjectId" : "58568bb2fc009bda162e385a2b6e69c50e0fc57a",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "third_party/protobuf/3.6.1/cmake/protobuf-lite.pc.cmake" : {
      "ObjectId" : "cbe5426afa43872424fdb140c0f34f4268b55b13",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "third_party/protobuf/3.6.1/cmake/protobuf-options.cmake" : {
      "ObjectId" : "47fb15825752e544fda411db01c8a4391ed4dd38",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Verbose output\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FindProtobuf module compatibel\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "third_party/protobuf/3.6.1/cmake/protobuf.pc.cmake" : {
      "ObjectId" : "d33e98cca8f05e95343576d01ee959c22f1b7d78",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "third_party/protobuf/3.6.1/cmake/protoc.cmake" : {
      "ObjectId" : "5777b16ed21d257bf59b33ff28bf45fa2c0c17f5",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "third_party/protobuf/3.6.1/cmake/tests.cmake" : {
      "ObjectId" : "ec790e339fd50cf024adb883a92f8190644ff860",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "third_party/protobuf/3.6.1/compiler_config_setting.bzl" : {
      "ObjectId" : "5e52a6524ffe5f8522a815cff6921c663e48078d",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "\"\"\"Creates config_setting that allows selecting based on 'compiler' value.\"\"\"",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The \"do_not_use_tools_cpp_compiler_present\" attribute exists to\n# distinguish between older versions of Bazel that do not support\n# \"@bazel_tools//tools/cpp:compiler\" flag_value, and newer ones that do.\n# In the future, the only way to select on the compiler will be through\n# flag_values{\"@bazel_tools//tools/cpp:compiler\"} and the else branch can\n# be removed.",
        "Line" : 4,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "third_party/protobuf/3.6.1/conformance/Makefile.am" : {
      "ObjectId" : "e51ab80af9e23aed4a8b6d536436319741d11148",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# proto2 input files, should be separated with proto3, as we\n\n# can't generate proto2 files for ruby, php and objc\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# lite/com/google/protobuf/Any.java                            \\\n  # lite/com/google/protobuf/AnyOrBuilder.java                   \\\n  # lite/com/google/protobuf/AnyProto.java                       \\\n  # lite/com/google/protobuf/BoolValue.java                      \\\n  # lite/com/google/protobuf/BoolValueOrBuilder.java             \\\n  # lite/com/google/protobuf/BytesValue.java                     \\\n  # lite/com/google/protobuf/BytesValueOrBuilder.java            \\\n  # lite/com/google/protobuf/conformance/Conformance.java        \\\n  # lite/com/google/protobuf/DoubleValue.java                    \\\n  # lite/com/google/protobuf/DoubleValueOrBuilder.java           \\\n  # lite/com/google/protobuf/Duration.java                       \\\n  # lite/com/google/protobuf/DurationOrBuilder.java              \\\n  # lite/com/google/protobuf/DurationProto.java                  \\\n  # lite/com/google/protobuf/FieldMask.java                      \\\n  # lite/com/google/protobuf/FieldMaskOrBuilder.java             \\\n  # lite/com/google/protobuf/FieldMaskProto.java                 \\\n  # lite/com/google/protobuf/FloatValue.java                     \\\n  # lite/com/google/protobuf/FloatValueOrBuilder.java            \\\n  # lite/com/google/protobuf/Int32Value.java                     \\\n  # lite/com/google/protobuf/Int32ValueOrBuilder.java            \\\n  # lite/com/google/protobuf/Int64Value.java                     \\\n  # lite/com/google/protobuf/Int64ValueOrBuilder.java            \\\n  # lite/com/google/protobuf/ListValue.java                      \\\n  # lite/com/google/protobuf/ListValueOrBuilder.java             \\\n  # lite/com/google/protobuf/NullValue.java                      \\\n  # lite/com/google/protobuf/StringValue.java                    \\\n  # lite/com/google/protobuf/StringValueOrBuilder.java           \\\n  # lite/com/google/protobuf/Struct.java                         \\\n  # lite/com/google/protobuf/StructOrBuilder.java                \\\n  # lite/com/google/protobuf/StructProto.java                    \\\n  # lite/com/google/protobuf/Timestamp.java                      \\\n  # lite/com/google/protobuf/TimestampOrBuilder.java             \\\n  # lite/com/google/protobuf/TimestampProto.java                 \\\n  # lite/com/google/protobuf/UInt32Value.java                    \\\n  # lite/com/google/protobuf/UInt32ValueOrBuilder.java           \\\n  # lite/com/google/protobuf/UInt64Value.java                    \\\n  # lite/com/google/protobuf/UInt64ValueOrBuilder.java           \\\n  # lite/com/google/protobuf/Value.java                          \\\n  # lite/com/google/protobuf/ValueOrBuilder.java                 \\\n  # lite/com/google/protobuf/WrappersProto.java\n",
        "Line" : 141,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# All source files excepet C++/Objective-C ones should be explicitly listed\n\n# here because the autoconf tools don't include files of other languages\n\n# automatically.\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Explicit deps beacuse BUILT_SOURCES are only done before a \"make all/check\"\n\n# so a direct \"make test_cpp\" could fail if parallel enough.\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Explicit dep beacuse BUILT_SOURCES are only done before a \"make all/check\"\n\n# so a direct \"make test_cpp\" could fail if parallel enough.\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# On travis, the build fails without the isysroot because whatever system\n\n# headers are being found don't include generics support for\n\n# NSArray/NSDictionary, the only guess is their image at one time had an odd\n\n# setup for Xcode and old frameworks are being found.\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Explicit dep beacuse BUILT_SOURCES are only done before a \"make all/check\"\n\n# so a direct \"make test_objc\" could fail if parallel enough.\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# JavaScript well-known types are expected to be in a directory called\n\n# google-protobuf, because they are usually in the google-protobuf npm\n\n# package.  But we want to use the sources from our tree, so we recreate\n\n# that directory structure here.\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Some implementations include pre-generated versions of well-known types.\n",
        "Line" : 255,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## $(PROTOC) -I$(srcdir) -I$(top_srcdir) --java_out=lite:lite $(conformance_protoc_inputs) $(well_known_type_protoc_inputs)\n",
        "Line" : 260,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# We have to cd to $(srcdir) before executing protoc because $(protoc_inputs) is\n\n# relative to srcdir, which may not be the same as the current directory when\n\n# building out-of-tree.\n",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## @mkdir -p lite\n\n## oldpwd=`pwd` && ( cd $(srcdir) && $$oldpwd/../src/protoc$(EXEEXT) -I. -I$(top_srcdir)/src --java_out=lite:$$oldpwd/lite $(conformance_protoc_inputs) $(well_known_type_protoc_inputs) )\n",
        "Line" : 272,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# Currently the conformance code is alongside the rest of the C#\n\n# source, as it's easier to maintain there. We assume we've already\n\n# built that, so we just need a script to run it.\n",
        "Line" : 307,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Targets for actually running tests.\n",
        "Line" : 328,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# These depend on library paths being properly set up.  The easiest way to\n\n# run them is to just use \"tox\" from the python dir.\n",
        "Line" : 353,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "third_party/protobuf/3.6.1/examples/BUILD" : {
      "ObjectId" : "8592145ec1f61fcdb98a5584c078ffc42d422a13",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# This BUILD file shows how to use protobuf with bazel. Before you can use\n# proto_library/<lang>_proto_library rules in a BUILD file, you need to\n# include protobuf repo as remote repositories in your WORKSPACE file. See\n# the WORKSPACE file in the same directory with this BUILD file for an\n# example.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For each .proto file, a proto_library target should be defined. This target\n# is not bound to any particular language. Instead, it defines the dependency\n# graph of the .proto files (i.e., proto imports) and serves as the provider\n# of .proto source files to the protocol compiler.\n#\n# Remote repository \"com_google_protobuf\" must be defined to use this rule.",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The cc_proto_library rule generates C++ code for a proto_library rule. It\n# must have exactly one proto_library dependency. If you want to use multiple\n# proto_library targets, create a separate cc_proto_library target for each\n# of them.\n#\n# Remote repository \"com_google_protobuf_cc\" must be defined to use this rule.",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# cc_library/cc_binary targets can depend on cc_proto_library targets.",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Similar to cc_proto_library but for Java.\n#\n# Remote repository \"com_google_protobuf_java\" must be defined to use this rule.",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Java lite.\n#\n# Remote repository \"com_google_protobuf_javalite\" must be defined to use this\n# rule.",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Java lite API is a subset of the regular Java API so if you only uses this\n# subset in your code, you can actually compile your code against both (i.e.,\n# share code between server build and Android build).\n#\n# The lite version has a smaller code size, and you can see that by comparing\n# the resulted .jar file:\n#\n#   $ bazel build :add_person_java_deploy.jar :add_person_java_lite_deploy.jar\n#   $ ls -l bazel-bin/*_deploy.jar\n#   -r-xr-xr-x 1 xiaofeng eng 1230797 Sep  8 12:24 bazel-bin/add_person_java_deploy.jar\n#   -r-xr-xr-x 1 xiaofeng eng  236166 Sep  8 12:24 bazel-bin/add_person_java_lite_deploy.jar\n#\n# In the above example, the lite .jar file is 6 times smaller. With proper\n# proguard inlining/stripping, the difference can be much more larger than\n# that.",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "third_party/protobuf/3.6.1/examples/CMakeLists.txt" : {
      "ObjectId" : "3e8e65414e1d55fb67dbeec784bd50ce765c03b7",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Minimum CMake required\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Project\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find required protobuf package\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# http://www.cmake.org/Wiki/CMake_FAQ#How_can_I_build_my_MSVC_application_with_a_static_runtime.3F\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Code Generation\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#Legacy Support\n",
        "Line" : 32,
        "CharPositionInLine" : 33
      },
      "6" : {
        "Text" : "#Executable setup\n",
        "Line" : 37,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#Legacy mode\n",
        "Line" : 40,
        "CharPositionInLine" : 33
      },
      "CommentCount" : 8
    },
    "third_party/protobuf/3.6.1/examples/Makefile" : {
      "ObjectId" : "1ff7fa7fc5c25a381de9ca626b35d11640a764e0",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# See README.txt.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# make directory for go package\n",
        "Line" : 29,
        "CharPositionInLine" : 19
      },
      "2" : {
        "Text" : "# fails if protobuf is not installed\n",
        "Line" : 34,
        "CharPositionInLine" : 31
      },
      "3" : {
        "Text" : "# fails if protobuf is not installed\n",
        "Line" : 38,
        "CharPositionInLine" : 31
      },
      "CommentCount" : 4
    },
    "third_party/protobuf/3.6.1/java/core/pom.xml" : {
      "ObjectId" : "067749c6709580c249348c6335c1168cb146c4cc",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Include core protos in the bundle as resources ",
        "Line" : 40,
        "CharPositionInLine" : 60
      },
      "1" : {
        "Text" : " Use Antrun plugin to generate sources with protoc ",
        "Line" : 62,
        "CharPositionInLine" : 65
      },
      "2" : {
        "Text" : " Generate core protos ",
        "Line" : 66,
        "CharPositionInLine" : 40
      },
      "3" : {
        "Text" : " Generate the test protos ",
        "Line" : 80,
        "CharPositionInLine" : 44
      },
      "4" : {
        "Text" : " Add the generated sources to the build ",
        "Line" : 96,
        "CharPositionInLine" : 54
      },
      "5" : {
        "Text" : " OSGI bundle configuration ",
        "Line" : 128,
        "CharPositionInLine" : 41
      },
      "CommentCount" : 6
    },
    "third_party/protobuf/3.6.1/java/pom.xml" : {
      "ObjectId" : "6526b650a8230794b7632ed37f3bd73a5a93c532",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " These are relative to the submodules ",
        "Line" : 29,
        "CharPositionInLine" : 50
      },
      "CommentCount" : 1
    },
    "third_party/protobuf/3.6.1/java/util/pom.xml" : {
      "ObjectId" : "f175cf152204c92a7535f9ab945d670482f9088e",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Use the core proto dir so that we can call the core generation script ",
        "Line" : 48,
        "CharPositionInLine" : 83
      },
      "1" : {
        "Text" : " Generate the test protos ",
        "Line" : 57,
        "CharPositionInLine" : 44
      },
      "2" : {
        "Text" : " Generate all of the test protos from the core module ",
        "Line" : 63,
        "CharPositionInLine" : 78
      },
      "3" : {
        "Text" : " Generate additional test protos for this module ",
        "Line" : 66,
        "CharPositionInLine" : 73
      },
      "4" : {
        "Text" : " Add the generated test sources to the build ",
        "Line" : 82,
        "CharPositionInLine" : 59
      },
      "5" : {
        "Text" : " Configure the OSGI bundle ",
        "Line" : 102,
        "CharPositionInLine" : 41
      },
      "6" : {
        "Text" : " Configure the fat jar to include all dependencies ",
        "Line" : 116,
        "CharPositionInLine" : 65
      },
      "CommentCount" : 7
    },
    "third_party/protobuf/3.6.1/protobuf.bzl" : {
      "ObjectId" : "50f162deeba6a66185aa9073c2d6678c2adb6dfa",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Bazel 0.4.4 and older have genfiles paths that look like:\n#   bazel-out/local-fastbuild/genfiles/external/repo/foo\n# After the exec root rearrangement, they look like:\n#   ../repo/bazel-out/local-fastbuild/genfiles/foo",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# We are using the fact that Bazel 0.4.4+ provides repository-relative paths\n# for ctx.genfiles_dir.",
        "Line" : 16,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# This means that we're either in the old version OR the new version in the local repo.\n# Either way, appending the source path to the genfiles dir works.",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "\"\"\"General implementation for generating protos\"\"\"",
        "Line" : 72,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "\"\"\"Generates codes from Protocol Buffers definitions.\n\nThis rule helps you to implement Skylark macros specific to the target\nlanguage. You should prefer more specific `cc_proto_library `,\n`py_proto_library` and others unless you are adding such wrapper macros.\n\nArgs:\n  srcs: Protocol Buffers definition files (.proto) to run the protocol compiler\n    against.\n  deps: a list of dependency labels; must be other proto libraries.\n  includes: a list of include paths to .proto files.\n  protoc: the label of the protocol compiler to generate the sources.\n  plugin: the label of the protocol compiler plugin to be passed to the protocol\n    compiler.\n  plugin_language: the language of the generated sources\n  plugin_options: a list of options to be passed to the plugin\n  gen_cc: generates C++ sources in addition to the ones from the plugin.\n  gen_py: generates Python sources in addition to the ones from the plugin.\n  outs: a list of labels of the expected outputs from the protocol compiler.\n\"\"\"",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "\"\"\"Bazel rule to create a C++ protobuf library from proto source files\n\n    NOTE: the rule is only an internal workaround to generate protos. The\n    interface may change and the rule may be removed when bazel has introduced\n    the native rule.\n\n    Args:\n      name: the name of the cc_proto_library.\n      srcs: the .proto files of the cc_proto_library.\n      deps: a list of dependency labels; must be cc_proto_library.\n      cc_libs: a list of other cc_library targets depended by the generated\n          cc_library.\n      include: a string indicating the include path of the .proto files.\n      protoc: the label of the protocol compiler to generate the sources.\n      internal_bootstrap_hack: a flag indicate the cc_proto_library is used only\n          for bootstraping. When it is set to True, no files will be generated.\n          The rule will simply be a provider for .proto files, so that other\n          cc_proto_library can depend on it.\n      use_grpc_plugin: a flag to indicate whether to call the grpc C++ plugin\n          when processing the proto files.\n      default_runtime: the implicitly default runtime which will be depended on by\n          the generated cc_library target.\n      **kargs: other keyword arguments that are passed to cc_library.\n\n    \"\"\"",
        "Line" : 184,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# For pre-checked-in generated files, we add the internal_bootstrap_hack\n# which will skip the codegen action.",
        "Line" : 215,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# An empty cc_library to make rule dependency consistent.",
        "Line" : 226,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "\"\"\"Bazel rule to generate the gen_well_known_protos_java genrule\n\n    Args:\n      srcs: the well known protos\n    \"\"\"",
        "Line" : 269,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "\"\"\"Macro to copy files to a different directory and then create a filegroup.\n\n    This is used by the //:protobuf_python py_proto_library target to work around\n    an issue caused by Python source files that are part of the same Python\n    package being in separate directories.\n\n    Args:\n      srcs: The source files to copy and add to the filegroup.\n      strip_prefix: Path to the root of the files to copy.\n      dest: The directory to copy the source files into.\n      **kwargs: extra arguments that will be passesd to the filegroup.\n    \"\"\"",
        "Line" : 293,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "\"\"\"Bazel rule to create a Python protobuf library from proto source files\n\n    NOTE: the rule is only an internal workaround to generate protos. The\n    interface may change and the rule may be removed when bazel has introduced\n    the native rule.\n\n    Args:\n      name: the name of the py_proto_library.\n      srcs: the .proto files of the py_proto_library.\n      deps: a list of dependency labels; must be py_proto_library.\n      py_libs: a list of other py_library targets depended by the generated\n          py_library.\n      py_extra_srcs: extra source files that will be added to the output\n          py_library. This attribute is used for internal bootstrapping.\n      include: a string indicating the include path of the .proto files.\n      default_runtime: the implicitly default runtime which will be depended on by\n          the generated py_library target.\n      protoc: the label of the protocol compiler to generate the sources.\n      use_grpc_plugin: a flag to indicate whether to call the Python C++ plugin\n          when processing the proto files.\n      **kargs: other keyword arguments that are passed to cc_library.\n\n    \"\"\"",
        "Line" : 334,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Note: Generated grpc code depends on Python grpc module. This dependency\n# is not explicitly listed in py_libs. Instead, host system is assumed to\n# have grpc installed.",
        "Line" : 366,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "\"\"\"Bazel rules to create batch tests for protobuf internal.\n\n    Args:\n      name: the name of the rule.\n      modules: a list of modules for tests. The macro will create a py_test for\n          each of the parameter with the source \"google/protobuf/%s.py\"\n      kargs: extra parameters that will be passed into the py_test.\n\n    \"\"\"",
        "Line" : 398,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "\"\"\"For WORKSPACE files, to check the installed version of bazel.\n\n    This ensures bazel supports our approach to proto_library() depending on a\n    copied filegroup. (Fixed in bazel 0.5.4)\n    \"\"\"",
        "Line" : 417,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 14
    },
    "third_party/protobuf/3.6.1/ruby/pom.xml" : {
      "ObjectId" : "adf6ff207da9dbf68eca7d848724bb5c43f771b8",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "third_party/protobuf/3.6.1/src/Makefile.am" : {
      "ObjectId" : "4bb77452f203519f8b4b532610acc5345882d30e",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Turn on all warnings except for sign comparison (we ignore sign comparison\n\n# in Google so our code base have tons of such warnings).\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If I say \"dist_include_DATA\", automake complains that $(includedir) is not\n\n# a \"legitimate\" directory for DATA.  Screw you, automake.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If you are adding new files here, also remember to change the build files for\n\n# all other languages, //protoc-artifacts/build-zip.sh and run\n\n# //update_file_list.sh for bazel.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Not sure why these don't get cleaned automatically.\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Tests ==============================================================\n",
        "Line" : 472,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# We have to cd to $(srcdir) before executing protoc because $(protoc_inputs) is\n\n# relative to srcdir, which may not be the same as the current directory when\n\n# building out-of-tree.\n",
        "Line" : 670,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Disable optimization for tests unless the user explicitly asked for it,\n\n# since test_util.cc takes forever to compile with optimization (with GCC).\n\n# See configure.ac for more info.\n",
        "Line" : 708,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Run cpp_unittest again with PROTOBUF_TEST_NO_DESCRIPTORS defined.\n",
        "Line" : 792,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Build lite_unittest separately, since it doesn't use gtest. It can't\n\n# depend on gtest because our internal version of gtest depend on proto\n\n# full runtime and we want to make sure this test builds without full\n\n# runtime.\n",
        "Line" : 816,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# lite_arena_unittest depends on gtest because teboring@ found that without\n\n# gtest when building the test internally our memory sanitizer doesn't detect\n\n# memory leaks (don't know why).\n",
        "Line" : 833,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Test plugin binary.\n",
        "Line" : 849,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# This test target is to ensure all our public header files and generated\n\n# code is free from warnings. We have to be more pedantic about these\n\n# files because they are compiled by users with different compiler flags.\n",
        "Line" : 867,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "third_party/protobuf/3.6.1/third_party/googletest/CMakeLists.txt" : {
      "ObjectId" : "f8a97faaeb8a843e76b3664d73fa0f5d91345143",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Note that googlemock target already builds googletest\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "third_party/protobuf/3.6.1/third_party/googletest/Makefile.am" : {
      "ObjectId" : "433eefeb08026fa46e702db9e853e8a4efdfc989",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build . before src so that our all-local and clean-local hooks kicks in at\n\n# the right time.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "third_party/protobuf/3.6.1/third_party/googletest/googlemock/CMakeLists.txt" : {
      "ObjectId" : "21d61b130cf1bb5362934edac9b1c0c34c0c9412",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# CMake build script for Google Mock.\n\n#\n\n# To run the tests for Google Mock itself on Linux, use 'make test' or\n\n# ctest.  You can select which tests to run using 'ctest -R regex'.\n\n# For more options, run 'ctest --help'.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BUILD_SHARED_LIBS is a standard CMake variable, but we declare it here to\n\n# make it prominent in the GUI.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# A directory to find Google Test sources.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Defines pre_project_set_up_hermetic_build() and set_up_hermetic_build().\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Google Test also calls hermetic setup functions from add_subdirectory,\n\n# although its changes will not affect things at the current scope.\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "########################################################################\n\n#\n\n# Project-wide settings\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Name of the project.\n\n#\n\n# CMake files in this project can refer to the root source directory\n\n# as ${gmock_SOURCE_DIR} and to the root binary directory as\n\n# ${gmock_BINARY_DIR}.\n\n# Language \"C\" is required for find_package(Threads).\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Instructs CMake to process Google Test's CMakeLists.txt and add its\n\n# targets to the current scope.  We are placing Google Test's binary\n\n# directory in a subdirectory of our own as VC compilation may break\n\n# if they are the same (the default).\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Although Google Test's CMakeLists.txt calls this function, the\n\n# changes there don't affect the current scope.  Therefore we have to\n\n# call it again here.\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# from ${gtest_dir}/cmake/internal_utils.cmake\n",
        "Line" : 61,
        "CharPositionInLine" : 30
      },
      "10" : {
        "Text" : "# Adds Google Mock's and Google Test's header directories to the search path.\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# This directory is needed to build directly from Google\n\n# Test sources.\n",
        "Line" : 67,
        "CharPositionInLine" : 20
      },
      "12" : {
        "Text" : "# Summary of tuple support for Microsoft Visual Studio:\n\n# Compiler    version(MS)  version(cmake)  Support\n\n# ----------  -----------  --------------  -----------------------------\n\n# <= VS 2010  <= 10        <= 1600         Use Google Tests's own tuple.\n\n# VS 2012     11           1700            std::tr1::tuple + _VARIADIC_MAX=10\n\n# VS 2013     12           1800            std::tr1::tuple\n\n# VS 2015     14           1900            std::tuple\n\n# VS 2017     15           >= 1910         std::tuple\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "########################################################################\n\n#\n\n# Defines the gmock & gmock_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Google Mock libraries.  We build them using more strict warnings than what\n\n# are used for other targets, to ensure that Google Mock can be compiled by\n\n# a user aggressive about warnings.\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# If the CMake version supports it, attach header directory information\n\n# to the targets for when we are part of a parent build (ie being pulled\n\n# in via add_subdirectory() rather than being a standalone build).\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "########################################################################\n\n#\n\n# Install rules\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# configure and install pkgconfig files\n",
        "Line" : 121,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "########################################################################\n\n#\n\n# Google Mock's own tests.\n\n#\n\n# You can skip this section if you aren't interested in testing\n\n# Google Mock itself.\n\n#\n\n# The tests are not built by default.  To build them, set the\n\n# gmock_build_tests option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgmock_build_tests=ON flag when running cmake.\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# This must be set in the root directory for the tests to be run by\n\n# 'make test' or ctest.\n",
        "Line" : 146,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "############################################################\n\n# C++ tests built with standard compiler flags.\n",
        "Line" : 150,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# gmock_all_test is commented to save time building and running tests.\n\n# Uncomment if necessary.\n\n# cxx_test(gmock_all_test gmock_main)\n",
        "Line" : 173,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "############################################################\n\n# C++ tests built with non-standard compiler flags.\n",
        "Line" : 177,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# 1600 is Visual Studio 2010.\n",
        "Line" : 186,
        "CharPositionInLine" : 43
      },
      "24" : {
        "Text" : "# Visual Studio 2010, 2012, and 2013 define symbols in std::tr1 that\n\n# conflict with our own definitions. Therefore using our own tuple does not\n\n# work on those compilers.\n",
        "Line" : 187,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# Tests that a binary can be built with Google Mock as a shared library.  On\n\n# some system configurations, it may not possible to run the binary without\n\n# knowing more details about the system configurations. We do not try to run\n\n# this binary. To get a more robust shared library coverage, configure with\n\n# -DBUILD_SHARED_LIBS=ON.\n",
        "Line" : 206,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "############################################################\n\n# Python tests.\n",
        "Line" : 217,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 27
    },
    "third_party/protobuf/3.6.1/third_party/googletest/googlemock/Makefile.am" : {
      "ObjectId" : "9adbc5163dd7191a14a887a384fb5d6d2956b44d",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Automake file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Nonstandard package files for distribution.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We may need to build our internally packaged gtest. If so, it will be\n\n# included in the 'subdirs' variable.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This is generated by the configure script, so clean it for distribution.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# We define the global AM_CPPFLAGS as everything we compile includes from these\n\n# directories.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Modifies compiler and linker flags for pthreads compatibility.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build rules for libraries.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Build rules for tests. Automake's naming for some of these variables isn't\n\n# terribly obvious, so this is a brief reference:\n\n#\n\n# TESTS -- Programs run automatically by \"make check\"\n\n# check_PROGRAMS -- Programs built by \"make check\" but not necessarily run\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# This exercises all major components of Google Mock.  It also\n\n# verifies that libgmock works.\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# This tests using Google Mock in multiple translation units.  It also\n\n# verifies that libgmock_main and libgmock work.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Tests that fused gmock files compile and work.\n",
        "Line" : 81,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Google Mock source files that we don't compile directly.\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# C++ tests that we don't compile using autotools.\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Python tests, which we don't run using autotools.\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Nonstandard package files for distribution.\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Pump scripts for generating Google Mock headers.\n\n# TODO(chandlerc@google.com): automate the generation of *.h from *.h.pump.\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Script for fusing Google Mock and Google Test source files.\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# The Google Mock Generator tool from the cppclean project.\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Script for diagnosing compiler errors in programs that use Google\n\n# Mock.\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# CMake scripts.\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Microsoft Visual Studio 2005 projects.\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Microsoft Visual Studio 2010 projects.\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# gmock_test.cc does not really depend on files generated by the\n\n# fused-gmock-internal rule.  However, gmock_test.o does, and it is\n\n# important to include test/gmock_test.cc as part of this rule in order to\n\n# prevent compiling gmock_test.o until all dependent files have been\n\n# generated.\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# TODO(vladl@google.com): Find a way to add Google Tests's sources here.\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Death tests may produce core dumps in the build directory. In case\n\n# this happens, clean them to keep distcleancheck happy.\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Disables 'make install' as installing a compiled version of Google\n\n# Mock can lead to undefined behavior due to violation of the\n\n# One-Definition Rule.\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 26
    },
    "third_party/protobuf/3.6.1/third_party/googletest/googlemock/make/Makefile" : {
      "ObjectId" : "7c13e05fa961dd3a37ee05def12de08ce0e86a88",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# A sample Makefile for building both Google Mock and Google Test and\n\n# using them in user tests.  This file is self-contained, so you don't\n\n# need to use the Makefile in Google Test's source tree.  Please tweak\n\n# it to suit your environment and project.  You may want to move it to\n\n# your project's root directory.\n\n#\n\n# SYNOPSIS:\n\n#\n\n#   make [all]  - makes everything.\n\n#   make TARGET - makes the given target.\n\n#   make clean  - removes all files generated by make.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Please tweak the following variable definitions as needed by your\n\n# project, except GMOCK_HEADERS and GTEST_HEADERS, which you can use\n\n# in your own targets but shouldn't modify.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Points to the root of Google Test, relative to where this file is.\n\n# Remember to tweak this if you move this file, or if you want to use\n\n# a copy of Google Test at a different location.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Points to the root of Google Mock, relative to where this file is.\n\n# Remember to tweak this if you move this file.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Where to find user code.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Flags passed to the preprocessor.\n\n# Set Google Test and Google Mock's header directories as system\n\n# directories, such that the compiler doesn't generate warnings in\n\n# these headers.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Flags passed to the C++ compiler.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# All tests produced by this Makefile.  Remember to add new tests you\n\n# created to the list.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# All Google Test headers.  Usually you shouldn't change this\n\n# definition.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# All Google Mock headers. Note that all Google Test headers are\n\n# included here too, as they are #included by Google Mock headers.\n\n# Usually you shouldn't change this definition.\t\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# House-keeping build targets.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Builds gmock.a and gmock_main.a.  These libraries contain both\n\n# Google Mock and Google Test.  A test should link with either gmock.a\n\n# or gmock_main.a, depending on whether it defines its own main()\n\n# function.  It's fine if your test only uses features from Google\n\n# Test (and not Google Mock).\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Usually you shouldn't tweak such internal variables, indicated by a\n\n# trailing _.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# For simplicity and to avoid depending on implementation details of\n\n# Google Mock and Google Test, the dependencies specified below are\n\n# conservative and not optimized.  This is fine as Google Mock and\n\n# Google Test compile fast and for ordinary users their source rarely\n\n# changes.\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Builds a sample test.\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "third_party/protobuf/3.6.1/third_party/googletest/googletest/CMakeLists.txt" : {
      "ObjectId" : "77b55cae8c92e1d279aa68354cec1823c7b55c25",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# CMake build script for Google Test.\n\n#\n\n# To run the tests for Google Test itself on Linux, use 'make test' or\n\n# ctest.  You can select which tests to run using 'ctest -R regex'.\n\n# For more options, run 'ctest --help'.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BUILD_SHARED_LIBS is a standard CMake variable, but we declare it here to\n\n# make it prominent in the GUI.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# When other libraries are using a shared version of runtime libraries,\n\n# Google Test also has to use one.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Defines pre_project_set_up_hermetic_build() and set_up_hermetic_build().\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "########################################################################\n\n#\n\n# Project-wide settings\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Name of the project.\n\n#\n\n# CMake files in this project can refer to the root source directory\n\n# as ${gtest_SOURCE_DIR} and to the root binary directory as\n\n# ${gtest_BINARY_DIR}.\n\n# Language \"C\" is required for find_package(Threads).\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Visibility\n",
        "Line" : 57,
        "CharPositionInLine" : 20
      },
      "7" : {
        "Text" : "# Define helper functions and macros used by Google Test.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Defined in internal_utils.cmake.\n",
        "Line" : 73,
        "CharPositionInLine" : 30
      },
      "9" : {
        "Text" : "# Where Google Test's .h files can be found.\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Summary of tuple support for Microsoft Visual Studio:\n\n# Compiler    version(MS)  version(cmake)  Support\n\n# ----------  -----------  --------------  -----------------------------\n\n# <= VS 2010  <= 10        <= 1600         Use Google Tests's own tuple.\n\n# VS 2012     11           1700            std::tr1::tuple + _VARIADIC_MAX=10\n\n# VS 2013     12           1800            std::tr1::tuple\n\n# VS 2015     14           1900            std::tuple\n\n# VS 2017     15           >= 1910         std::tuple\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "########################################################################\n\n#\n\n# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Google Test libraries.  We build them using more strict warnings than what\n\n# are used for other targets, to ensure that gtest can be compiled by a user\n\n# aggressive about warnings.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# If the CMake version supports it, attach header directory information\n\n# to the targets for when we are part of a parent build (ie being pulled\n\n# in via add_subdirectory() rather than being a standalone build).\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "########################################################################\n\n#\n\n# Install rules\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# configure and install pkgconfig files\n",
        "Line" : 123,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "########################################################################\n\n#\n\n# Samples on how to link user tests with gtest or gtest_main.\n\n#\n\n# They are not built by default.  To build them, set the\n\n# gtest_build_samples option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_samples=ON flag when running cmake.\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "########################################################################\n\n#\n\n# Google Test's own tests.\n\n#\n\n# You can skip this section if you aren't interested in testing\n\n# Google Test itself.\n\n#\n\n# The tests are not built by default.  To build them, set the\n\n# gtest_build_tests option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_tests=ON flag when running cmake.\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# This must be set in the root directory for the tests to be run by\n\n# 'make test' or ctest.\n",
        "Line" : 169,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "############################################################\n\n# C++ tests built with standard compiler flags.\n",
        "Line" : 173,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "############################################################\n\n# C++ tests built with non-standard compiler flags.\n",
        "Line" : 204,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 207,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# 1600 is Visual Studio 2010.\n",
        "Line" : 236,
        "CharPositionInLine" : 43
      },
      "23" : {
        "Text" : "# Visual Studio 2010, 2012, and 2013 define symbols in std::tr1 that\n\n# conflict with our own definitions. Therefore using our own tuple does not\n\n# work on those compilers.\n",
        "Line" : 237,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "############################################################\n\n# Python tests.\n",
        "Line" : 251,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Visual Studio .NET 2003 does not support STL with exceptions disabled.\n",
        "Line" : 257,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# 1310 is Visual Studio .NET 2003\n",
        "Line" : 258,
        "CharPositionInLine" : 46
      },
      "27" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 294,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 28
    },
    "third_party/protobuf/3.6.1/third_party/googletest/googletest/Makefile.am" : {
      "ObjectId" : "b6c7232dd4cf4f096b85c0b2d465110558c3ef80",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Automake file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Nonstandard package files for distribution\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# gtest source files that we don't compile directly.  They are\n\n# #included by gtest-all.cc.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Sample files that we don't compile.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# C++ test files that we don't compile directly.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Python tests that we don't run.\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# CMake script\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# MSVC project files\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# xcode project files\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# xcode sample files\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# C++Builder project files\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Distribute and install M4 macro\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# We define the global AM_CPPFLAGS as everything we compile includes from these\n\n# directories.\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Modifies compiler and linker flags for pthreads compatibility.\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Build rules for libraries.\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Build rules for samples and tests. Automake's naming for some of\n\n# these variables isn't terribly obvious, so this is a brief\n\n# reference:\n\n#\n\n# TESTS -- Programs run automatically by \"make check\"\n\n# check_PROGRAMS -- Programs built by \"make check\" but not necessarily run\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# A simple sample on using gtest.\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Also verify that libgtest works by itself.\n",
        "Line" : 279,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# This tests most constructs of gtest and verifies that libgtest_main\n\n# and libgtest work.\n",
        "Line" : 285,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Tests that fused gtest files compile and work.\n",
        "Line" : 293,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Build rules for putting fused Google Test files into the distribution\n\n# package. The user can also create those files by manually running\n\n# scripts/fuse_gtest_files.py.\n",
        "Line" : 306,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Death tests may produce core dumps in the build directory. In case\n\n# this happens, clean them to keep distcleancheck happy.\n",
        "Line" : 325,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Disables 'make install' as installing a compiled version of Google\n\n# Test can lead to undefined behavior due to violation of the\n\n# One-Definition Rule.\n",
        "Line" : 329,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "third_party/protobuf/3.6.1/third_party/googletest/googletest/cmake/internal_utils.cmake" : {
      "ObjectId" : "c54bc94fe298fe16d4513315f19ed82beacaa6ff",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Defines functions and macros useful for building Google Test and\n\n# Google Mock.\n\n#\n\n# Note:\n\n#\n\n# - This file will be run twice when building Google Mock (once via\n\n#   Google Test's CMakeLists.txt, and once via Google Mock's).\n\n#   Therefore it shouldn't have any side effects other than defining\n\n#   the functions and macros.\n\n#\n\n# - The functions/macros defined in this file may depend on Google\n\n#   Test and Google Mock's option() definitions, and thus must be\n\n#   called *after* the options have been defined.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Tweaks CMake's default compiler/linker settings to suit Google Test's needs.\n\n#\n\n# This must be a macro(), as inside a function string() can only\n\n# update variables in the function scope.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For MSVC, CMake sets certain flags to defaults we want to override.\n\n# This replacement code is taken from sample in the CMake Wiki at\n\n# http://www.cmake.org/Wiki/CMake_FAQ#Dynamic_Replace.\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# When Google Test is built as a shared library, it should also use\n\n# shared runtime libraries.  Otherwise, it may end up with multiple\n\n# copies of runtime library data in different modules, resulting in\n\n# hard-to-find crashes. When it is built as a static library, it is\n\n# preferable to use CRT as static libraries, as we don't have to rely\n\n# on CRT DLLs being available. CMake always defaults to using shared\n\n# CRT libraries, so we override that default here.\n",
        "Line" : 28,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# We prefer more strict warning checking for building Google Test.\n\n# Replaces /W3 with /W4 in defaults.\n",
        "Line" : 38,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Defines the compiler/linker flags used to build Google Test and\n\n# Google Mock.  You can tweak these definitions to suit your need.  A\n\n# variable's value is empty before it's explicitly assigned to.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Note: pthreads on MinGW is not supported, even if available\n\n# instead, we use windows threading primitives\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Defines CMAKE_USE_PTHREADS_INIT and CMAKE_THREAD_LIBS_INIT.\n",
        "Line" : 53,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Newlines inside flags variables break CMake's NMake generator.\n\n# TODO(vladl@google.com): Add -RTCs and -RTCu to debug builds.\n",
        "Line" : 63,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# 1400 is Visual Studio 2005\n",
        "Line" : 66,
        "CharPositionInLine" : 33
      },
      "10" : {
        "Text" : "# Suppress spurious warnings MSVC 7.1 sometimes issues.\n\n# Forcing value to bool.\n",
        "Line" : 67,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# Copy constructor and assignment operator could not be generated.\n",
        "Line" : 70,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# Compatibility warnings not applicable to Google Test.\n\n# Resolved overload was found by argument-dependent lookup.\n",
        "Line" : 72,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# 1500 is Visual Studio 2008\n",
        "Line" : 76,
        "CharPositionInLine" : 33
      },
      "14" : {
        "Text" : "# Conditional expression is constant.\n\n# When compiling with /W4, we get several instances of C4127\n\n# (Conditional expression is constant). In our code, we disable that\n\n# warning on a case-by-case basis. However, on Visual Studio 2005,\n\n# the warning fires on std::list. Therefore on that compiler and earlier,\n\n# we disable the warning project-wide.\n",
        "Line" : 77,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "# 1700 is Visual Studio 2012.\n",
        "Line" : 85,
        "CharPositionInLine" : 39
      },
      "16" : {
        "Text" : "# Suppress \"unreachable code\" warning on VS 2012 and later.\n\n# http://stackoverflow.com/questions/3232669 explains the issue.\n",
        "Line" : 86,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# Until version 4.3.2, GCC doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 100,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Sun Pro doesn't provide macros to indicate whether exceptions and\n\n# RTTI are enabled, so we define GTEST_HAS_* explicitly.\n",
        "Line" : 108,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# CMake 2.8 changes Visual Age's compiler ID to \"XL\".\n",
        "Line" : 114,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Until version 9.0, Visual Age doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 117,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# RTTI can not be disabled in HP aCC compiler.\n",
        "Line" : 125,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# The pthreads library is available and allowed?\n",
        "Line" : 129,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# For building gtest's own tests and samples.\n",
        "Line" : 137,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# For building the gtest libraries.\n",
        "Line" : 145,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# type can be either STATIC or SHARED to denote a static or shared library.\n\n# ARGN refers to additional arguments after 'cxx_flags'.\n",
        "Line" : 152,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "########################################################################\n\n#\n\n# Helper functions for creating build targets.\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# cxx_executable_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ executable that depends on the given libraries and\n\n# is built from the given source files with the given compiler flags.\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# 1700 is Visual Studio 2012.\n",
        "Line" : 186,
        "CharPositionInLine" : 48
      },
      "30" : {
        "Text" : "# BigObj required for tests.\n",
        "Line" : 187,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# To support mixing linking in static and dynamic libraries, link each\n\n# library in with an extra call to target_link_libraries.\n",
        "Line" : 200,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# cxx_executable(name dir lib srcs...)\n\n#\n\n# creates a named target that depends on the given libs and is built\n\n# from the given source files.  dir/name.cc is implicitly included in\n\n# the source file list.\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Sets PYTHONINTERP_FOUND and PYTHON_EXECUTABLE.\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# cxx_test_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ test that depends on the given libs and is built\n\n# from the given source files with the given compiler flags.\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# cxx_test(name libs srcs...)\n\n#\n\n# creates a named test target that depends on the given libs and is\n\n# built from the given source files.  Unlike cxx_test_with_flags,\n\n# test/name.cc is already implicitly included in the source file list.\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# py_test(name)\n\n#\n\n# creates a Python test with the given name whose main module is in\n\n# test/name.py.  It does nothing if Python is not installed.\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Multi-configuration build generators as for Visual Studio save\n\n# output in a subdirectory of CMAKE_CURRENT_BINARY_DIR (Debug,\n\n# Release etc.), so we have to provide it here.\n",
        "Line" : 247,
        "CharPositionInLine" : 1
      },
      "38" : {
        "Text" : "# Single-configuration build generators like Makefile generators\n\n# don't have subdirs below CMAKE_CURRENT_BINARY_DIR.\n",
        "Line" : 255,
        "CharPositionInLine" : 1
      },
      "39" : {
        "Text" : "# ${CMAKE_CURRENT_BINARY_DIR} is known at configuration time, so we can\n\n# directly bind it from cmake. ${CTEST_CONFIGURATION_TYPE} is known\n\n# only at ctest runtime (by calling ctest -c <Configuration>), so\n\n# we have to escape $ to delay variable substitution here.\n",
        "Line" : 263,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 40
    },
    "third_party/protobuf/3.6.1/third_party/googletest/googletest/make/Makefile" : {
      "ObjectId" : "9ac74493ba55246597e90b898fae847ae358eab5",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# A sample Makefile for building Google Test and using it in user\n\n# tests.  Please tweak it to suit your environment and project.  You\n\n# may want to move it to your project's root directory.\n\n#\n\n# SYNOPSIS:\n\n#\n\n#   make [all]  - makes everything.\n\n#   make TARGET - makes the given target.\n\n#   make clean  - removes all files generated by make.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Please tweak the following variable definitions as needed by your\n\n# project, except GTEST_HEADERS, which you can use in your own targets\n\n# but shouldn't modify.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Points to the root of Google Test, relative to where this file is.\n\n# Remember to tweak this if you move this file.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Where to find user code.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Flags passed to the preprocessor.\n\n# Set Google Test's header directory as a system directory, such that\n\n# the compiler doesn't generate warnings in Google Test headers.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Flags passed to the C++ compiler.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# All tests produced by this Makefile.  Remember to add new tests you\n\n# created to the list.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# All Google Test headers.  Usually you shouldn't change this\n\n# definition.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# House-keeping build targets.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Builds gtest.a and gtest_main.a.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Usually you shouldn't tweak such internal variables, indicated by a\n\n# trailing _.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# For simplicity and to avoid depending on Google Test's\n\n# implementation details, the dependencies specified below are\n\n# conservative and not optimized.  This is fine as Google Test\n\n# compiles fast and for ordinary users its source rarely changes.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Builds a sample test.  A test should link with either gtest.a or\n\n# gtest_main.a, depending on whether it defines its own main()\n\n# function.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "third_party/protobuf/3.6.1/third_party/googletest/googletest/scripts/test/Makefile" : {
      "ObjectId" : "cdff584637b7a6e9df1fa43ce8f588c43815e561",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# A Makefile for fusing Google Test and building a sample test against it.\n\n#\n\n# SYNOPSIS:\n\n#\n\n#   make [all]  - makes everything.\n\n#   make TARGET - makes the given target.\n\n#   make check  - makes everything and runs the built sample test.\n\n#   make clean  - removes all files generated by make.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Points to the root of fused Google Test, relative to where this file is.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Paths to the fused gtest files.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Where to find the sample test.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Where to find gtest_main.cc.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Flags passed to the preprocessor.\n\n# We have no idea here whether pthreads is available in the system, so\n\n# disable its use.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Flags passed to the C++ compiler.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "third_party/protobuf/3.6.1/util/python/BUILD" : {
      "ObjectId" : "ea9fa641e2f04daff154e48b19cd40e24bf1c36a",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# This is a placeholder for python headers. Projects needing to use\n# fast cpp protos in protobuf's python interface should build with\n# --define=use_fast_cpp_protos=true, and in addition, provide\n# //external:python_headers dependency that in turn provides Python.h.\n#\n# Projects that include protobuf using a Bazel external repository will need to\n# add a workspace rule to their WORKSPACE files to add an external workspace\n# that includes the Python headers. For example, the protobuf WORKSPACE file\n# includes the following local_repository rule that points to this directory:\n#\n# new_local_repository(\n#   name = \"python\",\n#   path = __workspace_dir__ + \"/util/python\",\n# )",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "third_party/protobuf/BUILD" : {
      "ObjectId" : "6a435c68135a5398ba5209f570cca5027b4540b6",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# glob everything to satisfy the compile.sh srcs test",
        "Line" : 13,
        "CharPositionInLine" : 23
      },
      "CommentCount" : 1
    },
    "third_party/protobuf/proto_alias.bzl" : {
      "ObjectId" : "e47728f96dc570ad4f2e38d886adf9620572cf8b",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2016 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "third_party/py/abseil/BUILD" : {
      "ObjectId" : "5bf0a22e4cdd1911ccca2f7bfc6a8a51ac6abf81",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "third_party/py/concurrent/BUILD" : {
      "ObjectId" : "ccc3faa03d359401911faa119978f4eccd776238",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "third_party/py/gflags/BUILD" : {
      "ObjectId" : "35f06748e7286d9eb6097d25953f4be88ab13286",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "third_party/py/gflags/Makefile" : {
      "ObjectId" : "6627c32a5e8cb76cd31b01f56eac8430c96705b9",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Install needed packages\n",
        "Line" : 4,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "#\n",
        "Line" : 6,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Check that the person has .pypirc\n",
        "Line" : 8,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "#\n",
        "Line" : 15,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# FIXME(tansell): Check that the person has .dputrc for PPA\n",
        "Line" : 17,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# Clean up any build files.\n",
        "Line" : 20,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "#\n\n# Clean up the debian stuff\n",
        "Line" : 22,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "#\n\n# Clean up everything else\n",
        "Line" : 25,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "#\n\n# Clean up the egg files\n",
        "Line" : 29,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "#\n\n# Remove dist\n",
        "Line" : 32,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# Generate the tarball based on MANIFEST.in\n",
        "Line" : 37,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "#\n\n# Build the debian packages\n",
        "Line" : 39,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "#\n\n# Build the python Egg\n",
        "Line" : 43,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "#\n",
        "Line" : 46,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# Send the updates to svn\n\n# Upload the source package to code.google.com\n",
        "Line" : 53,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "#\n\n# Upload the package to PyPi\n",
        "Line" : 57,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "#\n\n# Upload the package to the ppa\n\n# FIXME(tansell): dput should run here\n",
        "Line" : 61,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "# Run all the tests.\n",
        "Line" : 66,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 18
    },
    "third_party/py/mock/BUILD" : {
      "ObjectId" : "2d4961de9e696dfa96b312e4caa693b9b8880433",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "third_party/py/six/BUILD" : {
      "ObjectId" : "fa060cb6aed82c597fb537f5a42a81e654921a0a",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "third_party/py/six/documentation/Makefile" : {
      "ObjectId" : "eebafcd6d60f129cb5c626fb2e04d40f78e375da",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Internal variables.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "third_party/zlib/BUILD" : {
      "ObjectId" : "63b29c41dcc6736c2d45073d05584f43cd28e5fb",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "#  BSD/MIT-like license",
        "Line" : 1,
        "CharPositionInLine" : 22
      },
      "1" : {
        "Text" : "# Use -Dverbose=-1 to turn off zlib's trace logging. (#3280)",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "third_party/zlib/CMakeLists.txt" : {
      "ObjectId" : "0fe939df689306f1d0c7c657cb64dd0f0dedc134",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Check to see if we have large file support\n\n#\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We add these other definitions here because CheckTypeSize.cmake\n\n# in CMake 2.4.x does not automatically do so and we want\n\n# compatibility with CMake 2.4.x.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# clear variable\n",
        "Line" : 47,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "#\n\n# Check for fseeko\n\n#\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Check for unistd.h\n\n#\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If we're doing an out of source build and the user has a zconf.h\n\n# in their source tree...\n",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#============================================================================\n\n# zlib\n\n#============================================================================\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# If present will override custom build rule below.\n",
        "Line" : 128,
        "CharPositionInLine" : 23
      },
      "8" : {
        "Text" : "# parse the full version number from zlib.h and include in ZLIB_FULL_VERSION\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# This gets us DLL resource information when compiling on MinGW.\n",
        "Line" : 171,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# This property causes shared libraries on Linux to have the full version\n\n# encoded into their final filename.  We disable this on Cygwin because\n\n# it causes cygz-${ZLIB_FULL_VERSION}.dll to be created when cygz.dll\n\n# seems to be the default.\n\n#\n\n# This has no effect with MSVC, on that platform the version info for\n\n# the DLL comes from the resource file win32/zlib1.rc\n",
        "Line" : 192,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# On unix-like platforms the library is almost always called libz\n",
        "Line" : 203,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Creates zlib1.dll when building shared library version\n",
        "Line" : 209,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "#============================================================================\n\n# Example binaries\n\n#============================================================================\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "third_party/zlib/Makefile" : {
      "ObjectId" : "6bba86c73fca2abda416baa1a7cf883b3494fb29",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "third_party/zlib/contrib/blast/Makefile" : {
      "ObjectId" : "9be80bafe050eed57029ef2e690f36677a3003c0",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "third_party/zlib/contrib/minizip/Makefile" : {
      "ObjectId" : "84eaad20d4fb19b00965268dd75d7e9b66c8cc21",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "third_party/zlib/contrib/minizip/Makefile.am" : {
      "ObjectId" : "d343011ebc3b3fd78d2bc3a29801a083c038cf0c",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "third_party/zlib/contrib/puff/Makefile" : {
      "ObjectId" : "0e2594c80885c0dbea13c6d22b2e60e9fb82b51f",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# puff full coverage test (should say 100%)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "third_party/zlib/contrib/untgz/Makefile" : {
      "ObjectId" : "b54266fba20a167a1d83b7afd503dfd2f849ca57",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "third_party/zlib/nintendods/Makefile" : {
      "ObjectId" : "21337d01ab2fe20743682125994666e20af6b7e7",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# TARGET is the name of the output\n\n# BUILD is the directory where object files & intermediate files will be placed\n\n# SOURCES is a list of directories containing source code\n\n# DATA is a list of directories containing data files\n\n# INCLUDES is a list of directories containing header files\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# options for code generation\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# list of directories containing libraries, this must be the top level containing\n\n# include and lib\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# no real need to edit anything past this point unless you need to add additional\n\n# rules for different file extensions\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# use CXX for linking C++ projects, CC for standard C\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# main targets\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#---------------------------------------------------------------------------------------\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#---------------------------------------------------------------------------------------\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "tools/BUILD" : {
      "ObjectId" : "c13fab2960db402cf59ca373469bb335aa905d80",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Used by Bazel. If a test program depends on this target, it is\n# assumed to be sharding-compliant.",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tools/android/BUILD" : {
      "ObjectId" : "0e54946f4ed3329b0d83f90981fec623c880bc15",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# TODO(laszlocsomor): fix on Windows or describe why it cannot pass.",
        "Line" : 19,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "# TODO(laszlocsomor): fix on Windows or describe why it cannot pass.",
        "Line" : 53,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# TODO(laszlocsomor): fix on Windows or describe why it cannot pass.",
        "Line" : 77,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Exported for AndroidSdkRepositoryTest to use it instead of mocking it out.",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "tools/android/android_sdk_repository_template.bzl" : {
      "ObjectId" : "f6dafb1b924217ac623acfcd3d56702fbce6ab97",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "\"\"\"Template for the build file used in android_sdk_repository.\"\"\"\n# Copyright 2016 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\"Create config_setting rule for windows.\n\n    These represent the matching --host_cpu values.\n    \"\"\"",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "\"\"\"Generate android_sdk rules for the API levels in the Android SDK.\n\n    Args:\n      name: string, the name of the repository being generated.\n      build_tools_version: string, the version of Android's build tools to use.\n      build_tools_directory: string, the directory name of the build tools in\n          sdk's build-tools directory.\n      api_levels: list of ints, the API levels from which to get android.jar\n          et al. and create android_sdk rules.\n      default_api_level: int, the API level to alias the default sdk to if\n          --android_sdk is not specified on the command line.\n    \"\"\"",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# This filegroup is used to pass the minimal contents of the SDK to the\n# Android integration tests. Note that in order to work on Windows, we cannot\n# include directories and must keep the size small.",
        "Line" : 66,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Android 23 removed most of org.apache.http from android.jar and moved it\n# to a separate jar.",
        "Line" : 87,
        "CharPositionInLine" : 12
      },
      "5" : {
        "Text" : "# Android 28 removed most of android.test from android.jar and moved it\n# to separate jars.",
        "Line" : 95,
        "CharPositionInLine" : 12
      },
      "6" : {
        "Text" : "# Build tools version 24.0.0 added a lib64 folder.",
        "Line" : 160,
        "CharPositionInLine" : 12
      },
      "7" : {
        "Text" : "# The tools under build-tools/VERSION require the libraries under\n# build-tools/VERSION/lib, so we can't simply depend on them as a\n# file like we do with aapt.\n# On Windows however we can use these binaries directly because\n# there's no runfiles support so Bazel just creates a junction to\n# {SDK}/build-tools.",
        "Line" : 174,
        "CharPositionInLine" : 16
      },
      "8" : {
        "Text" : "# If $${SDK} is not a directory, it means that this tool is running\n# from a runfiles directory, in the case of\n# android_instrumentation_test. Hence, use the androidsdk\n# that's already present in the runfiles of the current context.",
        "Line" : 181,
        "CharPositionInLine" : 16
      },
      "9" : {
        "Text" : "\"\"\"Generate filegroups for the system images in the Android SDK.\n\n    Args:\n      system_image_dirs: list of strings, the directories containing system image\n          files to be used to create android_device rules.\n    \"\"\"",
        "Line" : 280,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# These images will need to be updated as Android releases new system images.\n# We are intentionally not adding future releases because there is no\n# guarantee that they will work out of the box. Supported system images should\n# be added here once they have been confirmed to work with the Bazel Android\n# testing infrastructure.",
        "Line" : 287,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# \"android-24\" --> \"24\", \"android-O\" --> \"O\"",
        "Line" : 317,
        "CharPositionInLine" : 36
      },
      "12" : {
        "Text" : "# TODO(bazel-team): If the user has an unsupported system image installed,\n# should we print a warning? This includes all 64-bit system-images.",
        "Line" : 328,
        "CharPositionInLine" : 12
      },
      "13" : {
        "Text" : "# For supported system images that exist in /sdk/system-images/, we\n# create a filegroup with their contents.",
        "Line" : 337,
        "CharPositionInLine" : 12
      },
      "14" : {
        "Text" : "# For supported system images that are not installed in the SDK, we\n# create a \"poison pill\" genrule to display a helpful error message to\n# a user who attempts to run a test against an android_device that\n# they don't have the system image for installed.",
        "Line" : 350,
        "CharPositionInLine" : 12
      },
      "15" : {
        "Text" : "# Necessary so that the build doesn't fail in analysis because\n# android_device expects a file named source.properties.",
        "Line" : 357,
        "CharPositionInLine" : 20
      },
      "16" : {
        "Text" : "\"\"\"echo \\\n          This rule requires that the Android SDK used by Bazel has the \\\n          following system image installed: %s. Please install this system \\\n          image through the Android SDK Manager and try again. ; \\\n          exit 1\n          \"\"\"",
        "Line" : 361,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 17
    },
    "tools/android/emulator/BUILD" : {
      "ObjectId" : "c21c9c51543c511e207897ccd2b6698fe598bf1e",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "tools/aquery_differ/BUILD" : {
      "ObjectId" : "7acb6e3fbfc514fa8d4a3228cb8fbc1d5a08cfaf",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2018 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 17,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "tools/bash/BUILD" : {
      "ObjectId" : "ae28be9e9c63722f9dd88a18a017268649de2bbe",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "tools/bash/runfiles/BUILD" : {
      "ObjectId" : "124d38f8e24c50ba6ae03a1a5860ca92a8a0af90",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "tools/build_defs/BUILD" : {
      "ObjectId" : "33ab15c76a0c3987e21301c90ea13a5f5ef137d8",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "tools/build_defs/cc/BUILD" : {
      "ObjectId" : "c0e9019cc7441b87e214f21c5be1c38640971d0f",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache 2.0",
        "Line" : 1,
        "CharPositionInLine" : 22
      },
      "1" : {
        "Text" : "# bazel_osx_p4deps specifies the set of dependencies needed to run Bazel on OS X.\n# Consumed by Google internal tests.",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tools/build_defs/cc/action_names.bzl" : {
      "ObjectId" : "8fd2026704dd11939443c597414f1d6e880cea87",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2018 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\"\"\"Constants for action names used for C++ rules.\"\"\"",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Name for the C compilation action.",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Name of the C++ compilation action.",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Name of the linkstamp-compile action.",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Name of the action used to compute CC_FLAGS make variable.",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Name of the C++ module codegen action.",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Name of the C++ header parsing action.",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Name of the C++ module compile action.",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Name of the assembler action.",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Name of the assembly preprocessing action.",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Name of the action producing ThinLto index.",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Name of the action compiling lto bitcodes into native objects.",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Name of the link action producing executable binary.",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Name of the link action producing dynamic library.",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Name of the link action producing dynamic library that doesn't include it's\n# transitive dependencies.",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Name of the archiving action producing static library.",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Name of the action stripping the binary.",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# A string constant for the objc archive action.",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# A string constant for the objc compilation action.",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# A string constant for the objc++ compile action.",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# A string constant for the objc executable link action.",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# A string constant for the objc++ executable link action.",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# A string constant for the objc fully-link link action.",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# A string constant for the clif actions.",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24
    },
    "tools/build_defs/hash/BUILD" : {
      "ObjectId" : "ea90ca7d58babe2732d4126b5b46b38547503dfe",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache 2.0",
        "Line" : 1,
        "CharPositionInLine" : 22
      },
      "1" : {
        "Text" : "# TODO(laszlocsomor): use the runfiles library after\n# https://github.com/bazelbuild/bazel/issues/4460 is fixed for sh_*",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "tools/build_defs/hash/hash.bzl" : {
      "ObjectId" : "60927308ba6c68139e4a82e93b15deddcd33b644",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2017 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\"\"\"Functions for producing the hash of an artifact.\"\"\"",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\"Create an action to compute the SHA-256 of an artifact.\"\"\"",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# This is necessary until the interpreter used by py_binary is more\n# configurable. As a workaround, let users override $PATH with\n# --action_env for this rule.",
        "Line" : 25,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 3
    },
    "tools/build_defs/pkg/BUILD" : {
      "ObjectId" : "bb2cd9ffa2f5963cf54e9081c5f78fc14a1d27da",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# -*- coding: utf-8 -*-",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 2,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "# Used by pkg_deb",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# archive.py requires xzcat, which is not available by default on Mac",
        "Line" : 37,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# TODO(laszlocsomor): fix on Windows or describe why it cannot pass.",
        "Line" : 39,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Used by pkg_rpm in rpm.bzl.",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# rpmbuild is not available in windows",
        "Line" : 87,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# tests",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# This will breaks if xzcat is not installed",
        "Line" : 129,
        "CharPositionInLine" : 12
      },
      "9" : {
        "Text" : "# archive.py requires xzcat, which is not available by default on Mac",
        "Line" : 254,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# TODO(laszlocsomor): fix on Windows or describe why it cannot pass.",
        "Line" : 256,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 11
    },
    "tools/build_defs/pkg/path.bzl" : {
      "ObjectId" : "4fc93578023f69c1d36c97e0d3b0e50f773adccf",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2016 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\"\"\"Helper functions that don't depend on Skylark, so can be unit tested.\"\"\"",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\"Returns the directory's name of the short path of an artifact.\"\"\"",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Top-level BUILD file.",
        "Line" : 21,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "\"\"\"Returns the short path of f, stripped of strip_prefix.\"\"\"",
        "Line" : 26,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# If no strip_prefix was specified, use the package of the\n# given input as the strip_prefix.",
        "Line" : 28,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "\"\"\"Compute the relative data path prefix from the data_path attribute.\"\"\"",
        "Line" : 38,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Strip ./ from the beginning if specified.\n# There is no way to handle .// correctly (no function that would make\n# that possible and Skylark is not turing complete) so just consider it\n# as an absolute path.",
        "Line" : 40,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Relative to current package",
        "Line" : 46,
        "CharPositionInLine" : 47
      },
      "8" : {
        "Text" : "# Absolute path",
        "Line" : 48,
        "CharPositionInLine" : 35
      },
      "9" : {
        "Text" : "# Relative to a sub-directory",
        "Line" : 50,
        "CharPositionInLine" : 15
      },
      "CommentCount" : 10
    },
    "tools/build_defs/pkg/pkg.bzl" : {
      "ObjectId" : "8ef8c1af6a01ce7eb969147c2d291812e498c690",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2015 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\"\"\"Rules for manipulation of various packaging.\"\"\"",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Filetype to restrict inputs",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "\"\"\"If path starts with a key in remap_paths, rewrite it.\"\"\"",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "\"\"\"Quote the filename, by escaping = by \\= and \\ by \\\\\"\"\"",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "\"\"\"Implementation of the pkg_tar rule.\"\"\"",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Compute the relative path",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Find a list of path remappings to apply.",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Start building the arguments.",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Note: Must match default in rule def.",
        "Line" : 50,
        "CharPositionInLine" : 30
      },
      "9" : {
        "Text" : "# Add runfiles if requested",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# deduplicates files in srcs attribute and their runfiles",
        "Line" : 66,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "\"\"\"The implementation for the pkg_deb rule.\"\"\"",
        "Line" : 125,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Conffiles can be specified by a file or a string list",
        "Line" : 148,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Version and description can be specified by a file or inlined",
        "Line" : 157,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Built using can also be specified by a file or inlined (but is not mandatory)",
        "Line" : 178,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# A rule for creating a tar file, see README.md",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Implicit dependencies.",
        "Line" : 239,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# Compatibility with older versions of pkg_tar that define files as\n# a flat list of labels.",
        "Line" : 253,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# A rule for creating a deb file, see README.md",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Implicit dependencies.",
        "Line" : 296,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 20
    },
    "tools/build_defs/pkg/rpm.bzl" : {
      "ObjectId" : "beb9ffff1c8ec5fb4d02c7908c23626691377394",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2017 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\"\"\"Rules to create RPM archives.\"\"\"",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\"Implements to pkg_rpm rule.\"\"\"",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Version can be specified by a file or inlined.",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Release can be specified by a file or inlined.",
        "Line" : 37,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Expand the spec file template.",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Create the default substitutions based on the data files.",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Add data files.",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Call the generator script.\n# TODO(katre): Generate a source RPM.",
        "Line" : 82,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Link the RPM to the expected output name.",
        "Line" : 93,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Link the RPM to the RPM-recommended output name.",
        "Line" : 105,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# The \"rpm_nvra\" output follows the recommended package naming convention of\n# Name-Version-Release.Arch.rpm\n# See http://ftp.rpm.org/max-rpm/ch-rpm-file-format.html",
        "Line" : 124,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Define the rule.",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Implicit dependencies.",
        "Line" : 155,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "\"\"\"Creates an RPM format package from the data files.\n\nThis runs rpmbuild (and requires it to be installed beforehand) to generate\nan RPM package based on the spec_file and data attributes.\n\nTwo outputs are guaranteed to be produced: \"%{name}.rpm\", and\n\"%{name}-%{architecture}.rpm\". If the \"version\" and \"release\" arguments are\nnon-empty, a third output will be produced, following the RPM-recommended\nN-V-R.A format (Name-Version-Release.Architecture.rpm). Note that due to\nthe fact that rule implementations cannot access the contents of files,\nthe \"version_file\" and \"release_file\" arguments will not create an output\nusing N-V-R.A format.\n\nArgs:\n  spec_file: The RPM spec file to use. If the version or version_file\n    attributes are provided, the Version in the spec will be overwritten,\n    and likewise behaviour with release and release_file. Any Sources listed\n    in the spec file must be provided as data dependencies.\n    The base names of data dependencies can be replaced with the actual location\n    using \"{basename}\" syntax.\n  version: The version of the package to generate. This will overwrite any\n    Version provided in the spec file. Only specify one of version and\n    version_file.\n  version_file: A file containing the version of the package to generate. This\n    will overwrite any Version provided in the spec file. Only specify one of\n    version and version_file.\n  release: The release of the package to generate. This will overwrite any\n    release provided in the spec file. Only specify one of release and\n    release_file.\n  release_file: A file containing the release of the package to generate. This\n    will overwrite any release provided in the spec file. Only specify one of\n    release and release_file.\n  changelog: A changelog file to include. This will not be written to the spec\n    file, which should only list changes to the packaging, not the software itself.\n  data: List all files to be included in the package here.\n\"\"\"",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "tools/build_defs/repo/BUILD" : {
      "ObjectId" : "000a8db0cc75f47907ee276e34dfe33e44b8b604",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache 2.0",
        "Line" : 5,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 1
    },
    "tools/build_defs/repo/android.bzl" : {
      "ObjectId" : "1e0e9caf0a2469e64a70de88134c28a979082d73",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2018 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\"\"\"Rules for importing external Android Archives (AARs).\n\nUsage:\n\n    # In WORKSPACE\n    load(\"@bazel_tools//tools/build_defs/repo:android.bzl\", \"aar_import_external\", \"aar_maven_import_external\")\n\n    # Specify the URL directly:\n    aar_import_external(\n        name = \"com_android_support_preference_v14_25_1_0\",                              # required\n        licenses = [\"notice\"],                                                           # required\n        aar_urls = [                                                                     # required\n            \"https://dl.google.com/dl/android/maven2/com/android/support/preference-v14/25.1.0/preference-v14-25.1.0.aar\"\n        ],\n        aar_sha256 = \"442473fe5c395ebef26c14eb01d17ceda33ad207a4cc23a32a2ad95b87edfabb\", # optional or empty string\n        deps = [                                                                         # optional or empty list\n            \"@com_android_support_recyclerview_v7_25_1_0//aar\",\n            \"@com_android_support_appcompat_v7_25_1_0//aar\",\n            \"@com_android_support_preference_v7_25_1_0//aar\",\n            \"@com_android_support_support_v4_25_1_0//aar\",\n        ],\n    )\n\n    # Or, specify the artifact coordinate:\n    aar_maven_import_external(\n        name = \"com_android_support_preference_v14_25_1_0\",                         # required\n        artifact = \"com.android.support.test:preference-v14:25.1.0\",                # required\n        sha256 = \"442473fe5c395ebef26c14eb01d17ceda33ad207a4cc23a32a2ad95b87edfabb\" # optional or empty string\n        licenses = [\"notice\"],                                                      # required\n        server_urls = [\"https://maven.google.com\"],                                 # required\n        deps = [                                                                    # optional or empty list\n            \"@com_android_support_recyclerview_v7_25_1_0//aar\",\n            \"@com_android_support_appcompat_v7_25_1_0//aar\",\n            \"@com_android_support_preference_v7_25_1_0//aar\",\n            \"@com_android_support_support_v4_25_1_0//aar\",\n        ],\n    )\n\n    # In BUILD.bazel\n    android_library(\n        name = \"foo\",\n        srcs = [...],\n        deps = [\n            \"@com_android_support_preference_v14_25_1_0//aar\",\n        ],\n    )\n\"\"\"",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tools/build_defs/repo/git.bzl" : {
      "ObjectId" : "22692baf618b9d8ae2e47e11fece12bc31b4284a",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2015 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\"\"\"Rules for cloning external git repositories.\"\"\"",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\"\ncd {working_dir}\nset -ex\n( cd {working_dir} &&\n    if ! ( cd '{dir_link}' && [[ \"$(git rev-parse --git-dir)\" == '.git' ]] ) >/dev/null 2>&1; then\n      rm -rf '{directory}' '{dir_link}'\n      git clone '{shallow}' '{remote}' '{directory}' || git clone '{remote}' '{directory}'\n    fi\n    git -C '{directory}' reset --hard {ref} || \\\n    ((git -C '{directory}' fetch '{shallow}' origin {ref}:{ref} || \\\n      git -C '{directory}' fetch origin {ref}:{ref}) && git -C '{directory}' reset --hard {ref})\n      git -C '{directory}' clean -xdf )\n  \"\"\"",
        "Line" : 52,
        "CharPositionInLine" : 38
      },
      "2" : {
        "Text" : "\"\"\"\nset -ex\n(   git -C '{directory}' submodule update --init --checkout --force )\n  \"\"\"",
        "Line" : 84,
        "CharPositionInLine" : 42
      },
      "3" : {
        "Text" : "# After the fact, determine the actual commit and its date",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Remove the .git directory, if present",
        "Line" : 113,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# if we found the actual commit, remove all other means of specifying it,\n# like tag or branch.",
        "Line" : 124,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "\"\"\"Clone an external git repository.\n\nClones a Git repository, checks out the specified tag, or commit, and\nmakes its targets available for binding. Also determine the id of the\ncommit actually checked out and its date, and return a dict with parameters\nthat provide a reproducible version of this rule (which a tag not necessarily\nis).\n\"\"\"",
        "Line" : 242,
        "CharPositionInLine" : 10
      },
      "7" : {
        "Text" : "\"\"\"Clone an external git repository.\n\nClones a Git repository, checks out the specified tag, or commit, and\nmakes its targets available for binding. Also determine the id of the\ncommit actually checked out and its date, and return a dict with parameters\nthat provide a reproducible version of this rule (which a tag not necessarily\nis).\n\"\"\"",
        "Line" : 255,
        "CharPositionInLine" : 10
      },
      "CommentCount" : 8
    },
    "tools/build_defs/repo/http.bzl" : {
      "ObjectId" : "4b763e24d2003d325c9455f3db82ed9c1bfbf10a",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2016 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\"\"\"Rules for downloading files and archives over HTTP.\n\n### Setup\n\nTo use these rules, load them in your `WORKSPACE` file as follows:\n\n```python\nload(\n    \"@bazel_tools//tools/build_defs/repo:http.bzl\",\n    \"http_archive\",\n    \"http_file\",\n    \"http_jar\",\n)\n```\n\nThese rules are improved versions of the native http rules and will eventually\nreplace the native rules.\n\"\"\"",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\"Implementation of the http_archive rule.\"\"\"",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "\"\"\"\npackage(default_visibility = [\"//visibility:public\"])\n\nfilegroup(\n    name = \"file\",\n    srcs = [\"{}\"],\n)\n\"\"\"",
        "Line" : 60,
        "CharPositionInLine" : 19
      },
      "3" : {
        "Text" : "\"\"\"Implementation of the http_file rule.\"\"\"",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "\"\"\"\npackage(default_visibility = [\"//visibility:public\"])\n\njava_import(\n  name = 'jar',\n  jars = ['downloaded.jar'],\n  visibility = ['//visibility:public'],\n)\n\nfilegroup(\n  name = 'file',\n  srcs = ['downloaded.jar'],\n  visibility = ['//visibility:public'],\n)\n\n\"\"\"",
        "Line" : 95,
        "CharPositionInLine" : 18
      },
      "5" : {
        "Text" : "\"\"\"Implementation of the http_jar rule.\"\"\"",
        "Line" : 113,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "\"\"\"A URL to a file that will be made available to Bazel.\n\nThis must be a file, http or https URL. Redirections are followed.\nAuthentication is not supported.\n\nThis parameter is to simplify the transition from the native http_archive\nrule. More flexibility can be achieved by the urls parameter that allows\nto specify alternative URLs to fetch from.\n\"\"\"",
        "Line" : 127,
        "CharPositionInLine" : 12
      },
      "7" : {
        "Text" : "\"\"\"A list of URLs to a file that will be made available to Bazel.\n\nEach entry must be a file, http or https URL. Redirections are followed.\nAuthentication is not supported.\"\"\"",
        "Line" : 139,
        "CharPositionInLine" : 12
      },
      "8" : {
        "Text" : "\"\"\"The expected SHA-256 of the file downloaded.\n\nThis must match the SHA-256 of the file downloaded. _It is a security risk\nto omit the SHA-256 as remote files can change._ At best omitting this\nfield will make your build non-hermetic. It is optional to make development\neasier but should be set before shipping.\"\"\"",
        "Line" : 145,
        "CharPositionInLine" : 14
      },
      "9" : {
        "Text" : "\"\"\"A directory prefix to strip from the extracted files.\n\nMany archives contain a top-level directory that contains all of the useful\nfiles in archive. Instead of needing to specify this prefix over and over\nin the `build_file`, this field can be used to strip it from all of the\nextracted files.\n\nFor example, suppose you are using `foo-lib-latest.zip`, which contains the\ndirectory `foo-lib-1.2.3/` under which there is a `WORKSPACE` file and are\n`src/`, `lib/`, and `test/` directories that contain the actual code you\nwish to build. Specify `strip_prefix = \"foo-lib-1.2.3\"` to use the\n`foo-lib-1.2.3` directory as your top-level directory.\n\nNote that if there are files outside of this directory, they will be\ndiscarded and inaccessible (e.g., a top-level license file). This includes\nfiles/directories that start with the prefix but are not in the directory\n(e.g., `foo-lib-1.2.3.release-notes`). If the specified prefix does not\nmatch a directory in the archive, Bazel will return an error.\"\"\"",
        "Line" : 153,
        "CharPositionInLine" : 14
      },
      "10" : {
        "Text" : "\"\"\"The archive type of the downloaded file.\n\nBy default, the archive type is determined from the file extension of the\nURL. If the file has no extension, you can explicitly specify one of the\nfollowing: `\"zip\"`, `\"jar\"`, `\"war\"`, `\"tar\"`, `\"tar.gz\"`, `\"tgz\"`,\n`\"tar.xz\"`, or `tar.bz2`.\"\"\"",
        "Line" : 173,
        "CharPositionInLine" : 14
      },
      "11" : {
        "Text" : "\"\"\"Downloads a Bazel repository as a compressed archive file, decompresses it,\nand makes its targets available for binding.\n\nIt supports the following file extensions: `\"zip\"`, `\"jar\"`, `\"war\"`, `\"tar\"`,\n`\"tar.gz\"`, `\"tgz\"`, `\"tar.xz\"`, and `tar.bz2`.\n\nExamples:\n  Suppose the current repository contains the source code for a chat program,\n  rooted at the directory `~/chat-app`. It needs to depend on an SSL library\n  which is available from http://example.com/openssl.zip. This `.zip` file\n  contains the following directory structure:\n\n  ```\n  WORKSPACE\n  src/\n    openssl.cc\n    openssl.h\n  ```\n\n  In the local repository, the user creates a `openssl.BUILD` file which\n  contains the following target definition:\n\n  ```python\n  cc_library(\n      name = \"openssl-lib\",\n      srcs = [\"src/openssl.cc\"],\n      hdrs = [\"src/openssl.h\"],\n  )\n  ```\n\n  Targets in the `~/chat-app` repository can depend on this target if the\n  following lines are added to `~/chat-app/WORKSPACE`:\n\n  ```python\n  load(\"@bazel_tools//tools/build_defs/repo:http.bzl\", \"http_archive\")\n\n  http_archive(\n      name = \"my_ssl\",\n      urls = [\"http://example.com/openssl.zip\"],\n      sha256 = \"03a58ac630e59778f328af4bcc4acb4f80208ed4\",\n      build_file = \"@//:openssl.BUILD\",\n  )\n  ```\n\n  Then targets would specify `@my_ssl//:openssl-lib` as a dependency.\n\"\"\"",
        "Line" : 233,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "\"\"\"The expected SHA-256 of the file downloaded.\n\nThis must match the SHA-256 of the file downloaded. _It is a security risk\nto omit the SHA-256 as remote files can change._ At best omitting this\nfield will make your build non-hermetic. It is optional to make development\neasier but should be set before shipping.\"\"\"",
        "Line" : 290,
        "CharPositionInLine" : 14
      },
      "13" : {
        "Text" : "\"\"\"A list of URLs to a file that will be made available to Bazel.\n\nEach entry must be a file, http or https URL. Redirections are followed.\nAuthentication is not supported.\"\"\"",
        "Line" : 299,
        "CharPositionInLine" : 14
      },
      "14" : {
        "Text" : "\"\"\"Downloads a file from a URL and makes it available to be used as a file\ngroup.\n\nExamples:\n  Suppose you need to have a debian package for your custom rules. This package\n  is available from http://example.com/package.deb. Then you can add to your\n  WORKSPACE file:\n\n  ```python\n  load(\"@bazel_tools//tools/build_defs/repo:http.bzl\", \"http_file\")\n\n  http_file(\n      name = \"my_deb\",\n      urls = [\"http://example.com/package.deb\"],\n      sha256 = \"03a58ac630e59778f328af4bcc4acb4f80208ed4\",\n  )\n  ```\n\n  Targets would specify `@my_deb//file` as a dependency to depend on this file.\n\"\"\"",
        "Line" : 310,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "\"\"\"Downloads a jar from a URL and makes it available as java_import\n\nDownloaded files must have a .jar extension.\n\nExamples:\n  Suppose the current repository contains the source code for a chat program, rooted at the\n  directory `~/chat-app`. It needs to depend on an SSL library which is available from\n  `http://example.com/openssl-0.2.jar`.\n\n  Targets in the `~/chat-app` repository can depend on this target if the following lines are\n  added to `~/chat-app/WORKSPACE`:\n\n  ```python\n  load(\"@bazel_tools//tools/build_defs/repo:http.bzl\", \"http_jar\")\n\n  http_jar(\n      name = \"my_ssl\",\n      url = \"http://example.com/openssl-0.2.jar\",\n      sha256 = \"03a58ac630e59778f328af4bcc4acb4f80208ed4\",\n  )\n  ```\n\n  Targets would specify <code>@my_ssl//jar</code> as a dependency to depend on this jar.\n\n  You may also reference files on the current system (localhost) by using \"file:///path/to/file\"\n  if you are on Unix-based systems. If you're on Windows, use \"file:///c:/path/to/file\". In both\n  examples, note the three slashes (`/`) -- the first two slashes belong to `file://` and the third\n  one belongs to the absolute path to the file.\n\"\"\"",
        "Line" : 351,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 16
    },
    "tools/build_defs/repo/java.bzl" : {
      "ObjectId" : "46e8e436fb4747045887f59c373205048778b43d",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2017 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\"Rules for defining external Java dependencies.\n\njava_import_external() replaces `maven_jar` and `http_jar`. It is the\nrecommended solution for defining third party Java dependencies that are\nobtained from web servers.\n\nThis solution offers high availability, low latency, and repository\nscalability at the cost of simplicity. Tooling can be used to generate\nthe WORKSPACE definitions from Maven metadata.\n\nThe default target in this BUILD file will always have the same name as\nthe repository itself. This means that other Bazel rules can depend on\nit as `@repo//:repo` or `@repo` for short.\n\n### Setup\n\nAdd the following to your `WORKSPACE` file:\n\n```python\nload(\"@bazel_tools//tools/build_defs/repo:java.bzl\", \"java_import_external\")\n```\n\n### Best Practices\n\n#### Downloading\n\nThe recommended best practices for downloading Maven jars are as follows:\n\n1. Always follow release versions or pinned revisions.\n2. Permanently mirror all dependencies to GCS or S3 as the first URL\n3. Put the original URL in the GCS or S3 object name\n4. Make the second URL the original repo1.maven.org URL\n5. Make the third URL the maven.ibiblio.org mirror, if it isn't 404\n6. Always specify the sha256 checksum\n\nBazel has one of the most sophisticated systems for downloading files of any\nbuild system. Following these best practices will ensure that your codebase\ntakes full advantage of the level of reliability that Bazel able to offer. See\nhttps://goo.gl/uQOE11 for more information.\n\n#### Selection\n\nAvoid using jars that bundle their dependencies. For example, a Maven jar for\nthe artifact com.initech:tps:1.0 should not contain a classes named\ncom.fakecorp.foo. Try to see if Initech distributes a tps jar that doesn't\nbundle its dependencies. Then create a separate java_import_external() for each\none and have the first depend on the second.\n\nSometimes jars are distributed with their dependencies shaded. What this means\nis that com.initech.tps will contain classes like\ncom.initech.tps.shade.com.fakecorp.foo. This is less problematic, since it\nwon't lead to mysterious classpath conflicts. But it can lead to inefficient\nuse of space and make the license of the end product more difficult to\ndetermine.\n\n#### Licensing\n\nThe following values for the licenses field are typically used. If a jar\ncontains multiple works with difference licenses, then only the most\nrestrictive one is listed, and the rest are noted in accompanying comments.\n\nThe following are examples of how licenses could be categorized, ordered\nby those with terms most permissive to least:\n\n- **unencumbered**: CC0, Unlicense\n- **permissive**: Beerware\n- **notice**: Apache, MIT, X11, BSD, ISC, ZPL, Unicode, JSON, Artistic\n- **reciprocal**: MPL, CPL, EPL, Eclipse, APSL, IBMPL, CDDL\n- **restricted**: GPL, LGPL, OSL, Sleepycat, QTPL, Java, QMail, NPL\n- **by_exception_only**: AGPL, WTFPL\n\n### Naming\n\nBazel repository names must match the following pattern: `[_0-9A-Za-z]+`. To\nchoose an appropriate name based on a Maven group and artifact ID, we recommend\nan algorithm https://gist.github.com/jart/41bfd977b913c2301627162f1c038e55 which\ncan be best explained by the following examples:\n\n- com.google.guava:guava becomes com_google_guava\n- commons-logging:commons-logging becomes commons_logging\n- junit:junit becomes junit\n\nAdopting this naming convention will help maximize the chances that your\ncodebase will be able to successfully interoperate with other Bazel codebases\nusing Java.\n\n### Example\n\nHere is an example of a best practice definition of Google's Guava library:\n\n```python\njava_import_external(\n    name = \"com_google_guava\",\n    licenses = [\"notice\"],  # Apache 2.0\n    jar_urls = [\n        \"http://bazel-mirror.storage.googleapis.com/repo1.maven.org/maven2/com/google/guava/guava/20.0/guava-20.0.jar\",\n        \"http://repo1.maven.org/maven2/com/google/guava/guava/20.0/guava-20.0.jar\",\n        \"http://maven.ibiblio.org/maven2/com/google/guava/guava/20.0/guava-20.0.jar\",\n    ],\n    jar_sha256 = \"36a666e3b71ae7f0f0dca23654b67e086e6c93d192f60ba5dfd5519db6c288c8\",\n    deps = [\n        \"@com_google_code_findbugs_jsr305\",\n        \"@com_google_errorprone_error_prone_annotations\",\n    ],\n)\n\njava_import_external(\n    name = \"com_google_code_findbugs_jsr305\",\n    licenses = [\"notice\"],  # BSD 3-clause\n    jar_urls = [\n        \"http://bazel-mirror.storage.googleapis.com/repo1.maven.org/maven2/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar\",\n        \"http://repo1.maven.org/maven2/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar\",\n        \"http://maven.ibiblio.org/maven2/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar\",\n    ],\n    jar_sha256 = \"905721a0eea90a81534abb7ee6ef4ea2e5e645fa1def0a5cd88402df1b46c9ed\",\n)\n\njava_import_external(\n    name = \"com_google_errorprone_error_prone_annotations\",\n    licenses = [\"notice\"],  # Apache 2.0\n    jar_sha256 = \"e7749ffdf03fb8ebe08a727ea205acb301c8791da837fee211b99b04f9d79c46\",\n    jar_urls = [\n        \"http://bazel-mirror.storage.googleapis.com/repo1.maven.org/maven2/com/google/errorprone/error_prone_annotations/2.0.15/error_prone_annotations-2.0.15.jar\",\n        \"http://maven.ibiblio.org/maven2/com/google/errorprone/error_prone_annotations/2.0.15/error_prone_annotations-2.0.15.jar\",\n        \"http://repo1.maven.org/maven2/com/google/errorprone/error_prone_annotations/2.0.15/error_prone_annotations-2.0.15.jar\",\n    ],\n)\n```\n\n### Annotation Processors\n\nDefining jars that contain annotation processors requires a certain level of\ntrickery, which is best done by copying and pasting from codebases that have\nalready done it before. Please see the Google Nomulus and Bazel Closure Rules\ncodebases for examples in which java_import_external has been used to define\nDagger 2.0, AutoValue, and AutoFactory.\n\nPlease note that certain care needs to be taken into consideration regarding\nwhether or not these annotation processors generate actual API, or simply\ngenerate code that implements them. See the Bazel documentation for further\ninformation.\n\n### Test Dependencies\n\nIt is strongly recommended that the `testonly_` attribute be specified on\nlibraries that are intended for testing purposes. This is passed along to the\ngenerated `java_library` rule in order to ensure that test code remains\ndisjoint from production code.\n\n### Provided Dependencies\n\nThe feature in Bazel most analogous to Maven's provided scope is the neverlink\nattribute. This should be used in rare circumstances when a distributed jar\nwill be loaded into a runtime environment where certain dependencies can be\nreasonably expected to already be provided.\n\"\"\"",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tools/build_defs/repo/jvm.bzl" : {
      "ObjectId" : "893921bdc64085d11c481f67292d3d1336fc32b8",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2018 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\"\n'jvm_import_external' offers additional functionality above what maven_jar has to offer.\nIn addition to downloading the jars, it allows to define this jar's dependencies.\nthus it enables the explicit definition of the entire transitive dependency graph.\n\nThe rule achieves this by writing 'import' build rules in BUILD files next to the downloaded jars.\nThe name of the underlying 'import' rule needs to be specified.\nAn optional 'load' statement can also be provided, along with any other relevant custom attribute.\nThese import rules must have the following attributes:\n- \"jars\"\n- \"deps\"\n- \"runtime_deps\"\n- \"exports\"\n\nthe following macros are defined below that utilize jvm_import_external:\n\n- jvm_maven_import_external - offers a 'maven' like api for identifying jars using 'artifact' format\n- java_import_external - uses `java_import` as the underlying build rule\n\"\"\"",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "\"\"\"Implementation of `java_import_external` rule.\"\"\"",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# This method is public for usage in android.bzl macros",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "\"\"\"This function converts a Maven artifact coordinate into URLs.\"\"\"",
        "Line" : 156,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "tools/build_defs/repo/maven_rules.bzl" : {
      "ObjectId" : "dcb5fe71562335b73b4f446775e705b3d84e154b",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2016 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Implementations of Maven rules in Skylark:\n# 1) maven_jar(name, artifact, repository, sha1, settings)\n#    The API of this is largely the same as the native maven_jar rule,\n#    except for the server attribute, which is not implemented. The optional\n#    settings supports passing a custom Maven settings.xml to download the JAR.\n# 2) maven_aar(name, artifact, sha1, settings)\n#    The API of this rule is the same as maven_jar except that the artifact must\n#    be the Maven coordinate of an AAR and it does not support the historical\n#    repository and server attributes.\n# 3) maven_dependency_plugin()\n#    This rule downloads the maven-dependency-plugin used internally\n#    for testing and the implementation for the fetching of artifacts.\n#\n# Maven coordinates are expected to be in this form:\n# groupId:artifactId:version[:packaging][:classifier]\n#\n# Installation requirements prior to using this rule:\n# 1) Maven binary: `mvn`\n# 2) Maven plugin: `maven-dependency-plugin:2.10`\n# Get it: $ mvn org.apache.maven.plugins:maven-dependency-plugin:2.10:get \\\n#    -Dartifact=org.apache.maven.plugins:maven-dependency-plugin:2.10 \\\n#    -Dmaven.repo.local=$HOME/.m2/repository # or specify your own local repository",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "\"\"\"Rules for retrieving Maven dependencies (experimental)\"\"\"",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Binary dependencies needed for running the bash commands",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "\"\"\"\nset -ex\n%s\"\"\"",
        "Line" : 48,
        "CharPositionInLine" : 38
      },
      "5" : {
        "Text" : "# Fail fast",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Creates a struct containing the different parts of an artifact's FQN.\n# If the fully_qualified_name does not specify a packaging and the rule does\n# not set a default packaging then JAR is assumed.",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Updates the FQN with the default packaging so that the Maven plugin\n# downloads the correct artifact.",
        "Line" : 76,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# NOTE: Please use this method to define ALL paths that the maven_*\n# rules use. Doing otherwise will lead to inconsistencies and/or errors.\n#\n# CONVENTION: *_path refers to files, *_dir refers to directories.",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "\"\"\"Creates a struct that contains the paths to create the cache WORKSPACE\"\"\"",
        "Line" : 100,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# e.g. guava-18.0.jar",
        "Line" : 102,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# e.g. com/google/guava/guava/18.0",
        "Line" : 112,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# The symlink to the actual artifact is stored in this dir, along with the\n# BUILD file. The dir has the same name as the packaging to support syntax\n# like @guava//jar and @google_play_services//aar.",
        "Line" : 115,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# .m2/repository",
        "Line" : 121,
        "CharPositionInLine" : 44
      },
      "14" : {
        "Text" : "# e.g. external/com_google_guava_guava/ \\\n#        .m2/repository/com/google/guava/guava/18.0/guava-18.0.jar",
        "Line" : 128,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# e.g. external/com_google_guava_guava/jar/guava-18.0.jar",
        "Line" : 134,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "\"\"\"\n# DO NOT EDIT: automatically generated BUILD file for maven_jar rule {rule_name}\n\njava_import(\n    name = 'jar',\n    jars = ['{artifact_filename}'],\n    deps = [\n{deps_string}\n    ],\n    visibility = ['//visibility:public']\n)\n\nfilegroup(\n    name = 'file',\n    srcs = ['{artifact_filename}'],\n    visibility = ['//visibility:public']\n)\\n\"\"\"",
        "Line" : 138,
        "CharPositionInLine" : 33
      },
      "17" : {
        "Text" : "\"\"\"\n# DO NOT EDIT: automatically generated BUILD file for maven_aar rule {rule_name}\n\naar_import(\n    name = 'aar',\n    aar = '{artifact_filename}',\n    deps = [\n{deps_string}\n    ],\n    visibility = ['//visibility:public'],\n)\n\nfilegroup(\n    name = 'file',\n    srcs = ['{artifact_filename}'],\n    visibility = ['//visibility:public']\n)\\n\"\"\"",
        "Line" : 156,
        "CharPositionInLine" : 33
      },
      "18" : {
        "Text" : "# Provides the syntax \"@jar_name//jar\" for dependencies",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Constructs the maven command to retrieve the dependencies from remote\n# repositories using the dependency plugin, and executes it.",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# If a custom settings file exists, we'll use that. If not, Maven will use the default settings.",
        "Line" : 190,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# dependency:get step. Downloads the artifact into the local repository.",
        "Line" : 196,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# dependency:copy step. Moves the artifact from the local repository into //external.",
        "Line" : 207,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# Ensure that we have all of the dependencies installed",
        "Line" : 229,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# Provide warnings and errors about attributes",
        "Line" : 232,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# Create a struct to contain the different parts of the artifact FQN",
        "Line" : 235,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# Create a struct to store the relative and absolute paths needed for this rule",
        "Line" : 238,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# Download the artifact",
        "Line" : 250,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# Allow the user to specify deps for the generated java_import or aar_import\n# since maven_jar and maven_aar do not automatically pull in transitive\n# dependencies.",
        "Line" : 273,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# Needed for compatibility reasons with the native maven_jar rule.",
        "Line" : 288,
        "CharPositionInLine" : 8
      },
      "30" : {
        "Text" : "\"\"\"\n# DO NOT EDIT: automatically generated BUILD file for maven_dependency_plugin\n\nfilegroup(\n    name = 'files',\n    srcs = glob(['**']),\n    visibility = ['//visibility:public']\n)\n\"\"\"",
        "Line" : 302,
        "CharPositionInLine" : 18
      },
      "31" : {
        "Text" : "\"\"\"\n<!-- # DO NOT EDIT: automatically generated settings.xml for maven_dependency_plugin -->\n<settings xmlns=\"http://maven.apache.org/SETTINGS/1.0.0\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation=\"http://maven.apache.org/SETTINGS/1.0.0\n    https://maven.apache.org/xsd/settings-1.0.0.xsd\">\n  <localRepository>{localRepository}</localRepository>\n  <mirrors>\n    <mirror>\n      <id>central</id>\n      <url>{mirror}</url>\n      <mirrorOf>*,default</mirrorOf>\n    </mirror>\n  </mirrors>\n</settings>\n\"\"\"",
        "Line" : 313,
        "CharPositionInLine" : 20
      },
      "32" : {
        "Text" : "# Download the plugin with transitive dependencies",
        "Line" : 335,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 33
    },
    "tools/build_defs/repo/utils.bzl" : {
      "ObjectId" : "45209d811c83781070f0a905c7c099f5fa8d042e",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2018 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\"\"\"Utils for manipulating external repositories, once fetched.\n\n### Setup\n\nThese utility are intended to be used by other repository rules. They\ncan be loaded as follows.\n\n```python\nload(\n    \"@bazel_tools//tools/build_defs/repo:utils.bzl\",\n    \"workspace_and_buildfile\",\n    \"patch\",\n    \"update_attrs\",\n)\n```\n\"\"\"",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\"Utility function for writing WORKSPACE and, if requested, a BUILD file.\n\n    This rule is inteded to be used in the implementation function of a\n    repository rule.\n    It assumes the parameters `name`, `build_file`, `build_file_contents`,\n    `workspace_file`, and `workspace_file_content` to be\n    present in `ctx.attr`, the latter four possibly with value None.\n\n    Args:\n      ctx: The repository context of the repository rule calling this utility\n        function.\n    \"\"\"",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "\"\"\"Implementation of patching an already extracted repository.\n\n    This rule is inteded to be used in the implementation function of a\n    repository rule. It assuumes that the parameters `patches`, `patchtool`,\n    `patch_args`, and `patch_cmds` are present in `ctx.attr`.\n\n    Args:\n      ctx: The repository context of the repository rule calling this utility\n        function.\n    \"\"\"",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "\"\"\"Utility function for altering and adding the specified attributes to a particular repository rule invocation.\n\n     This is used to make a rule reproducible.\n\n    Args:\n        orig: dict of actually set attributes (either explicitly or implicitly)\n            by a particular rule invocation\n        keys: complete set of attributes defined on this rule\n        override: dict of attributes to override or add to orig\n\n    Returns:\n        dict of attributes with the keys from override inserted/updated\n    \"\"\"",
        "Line" : 104,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "tools/build_rules/BUILD" : {
      "ObjectId" : "0b3f17a1fdad3a212ab7dc08845adb5cd95311ad",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache 2.0",
        "Line" : 1,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 1
    },
    "tools/build_rules/genproto.bzl" : {
      "ObjectId" : "f169dc5d946c8df560414edb191b0e13e8a0485a",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2014 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is a quick and dirty rule to make Bazel compile itself. Do not use.",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tools/build_rules/java_rules_skylark.bzl" : {
      "ObjectId" : "f99449fe224b44a03f167c87197bd3ea04bf33f5",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2014 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\"Java rules for bootstraping Bazel.\n\n\nThis is a quick and dirty rule to make Bazel compile itself. It's not production\nready.\n\"\"\"",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO: This is weird.",
        "Line" : 35,
        "CharPositionInLine" : 58
      },
      "3" : {
        "Text" : "# Cleaning build output directory",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# We haven't got a good story for where these should end up, so\n# stick them in the root of the jar.",
        "Line" : 69,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Cleaning build output directory",
        "Line" : 110,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Write the wrapper.",
        "Line" : 126,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# We extract the .so into a temp dir. If only we could mmap\n# directly from the zip file.",
        "Line" : 152,
        "CharPositionInLine" : 12
      },
      "8" : {
        "Text" : "# This works both on Darwin and Linux, with the darwin path\n# looking like tmp.XXXXXXXX.{random}",
        "Line" : 156,
        "CharPositionInLine" : 12
      },
      "9" : {
        "Text" : "# TODO(bazel-team): Why do we need to filter here? The attribute\n# already says only jars are allowed.",
        "Line" : 178,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# A copy to avoid conflict with native rule.",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# A copy to avoid conflict with native rule",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# TODO(bazel-team): it would be better if we could offer a\n# test_class attribute, but the \"args\" attribute is hard\n# coded in the bazel infrastructure.",
        "Line" : 262,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 13
    },
    "tools/build_rules/test_rules.bzl" : {
      "ObjectId" : "57526f91b5dfd9be3b2ed947a77fcd6fbd20753c",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "\"\"\"Utilities for testing bazel.\"\"\"\n#\n# Copyright 2015 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### First, trivial tests that either always pass, always fail,\n### or sometimes pass depending on a trivial computation.",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "\"\"\"Return a success for an analysis test.\n\n    The test rule must have an executable output.\n\n    Args:\n      ctx: the Bazel rule context\n      msg: an informative message to display\n\n    Returns:\n      a suitable rule implementation struct(),\n      with actions that always succeed at execution time.\n    \"\"\"",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "\"\"\"Return a failure for an analysis test.\n\n    The test rule must have an executable output.\n\n    Args:\n      ctx: the Bazel rule context\n      msg: an informative message to display\n\n    Returns:\n      a suitable rule implementation struct(),\n      with actions that always fail at execution time.\n    \"\"\"",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "### fail(msg) ### <--- This would fail at analysis time.",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "### Second, general purpose utilities",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "\"\"\"Trivial assertion mechanism.\n\n    Args:\n      condition: a generalized boolean expected to be true\n      string: a format string for the error message should the assertion fail\n      *args: format arguments for the error message should the assertion fail\n\n    Returns:\n      None.\n\n    Raises:\n      an error if the condition isn't true.\n    \"\"\"",
        "Line" : 97,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "\"\"\"Turn expectation of result or error into a string.\"\"\"",
        "Line" : 124,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "\"\"\"See if actual computation results match expectations.\n\n    Args:\n      result: the result returned by the test if it ran to completion\n      failure: the failure message caught while testing, if any\n      expect: the expected result for a successful test, if no failure expected\n      expect_failure: the expected failure message for the test, if any\n\n    Returns:\n      a pair (tuple) of a boolean (true if success) and a message (string).\n    \"\"\"",
        "Line" : 131,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "\"\"\"issue load-time results of a test.\n\n    Args:\n      name: the name of the Bazel rule at load time.\n      result: the result returned by the test if it ran to completion\n      failure: the failure message caught while testing, if any\n      expect: the expected result for a successful test, if no failure expected\n      expect_failure: the expected failure message for the test, if any\n\n    Returns:\n      None, after issuing a rule that will succeed at execution time if\n      expectations were met.\n    \"\"\"",
        "Line" : 155,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "\"\"\"issue analysis-time results of a test.\n\n    Args:\n      ctx: the Bazel rule context\n      result: the result returned by the test if it ran to completion\n      failure: the failure message caught while testing, if any\n      expect: the expected result for a successful test, if no failure expected\n      expect_failure: the expected failure message for the test, if any\n\n    Returns:\n      a suitable rule implementation struct(),\n      with actions that succeed at execution time if expectation were met,\n      or fail at execution time if they didn't.\n    \"\"\"",
        "Line" : 178,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "### Simple tests",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "\"\"\"check that a rule generates the desired outputs and providers.\"\"\"",
        "Line" : 199,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Generate the proper prefix to remove from generated files.",
        "Line" : 204,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# Create a prefix that is correctly relative to the output of this rule.",
        "Line" : 208,
        "CharPositionInLine" : 12
      },
      "15" : {
        "Text" : "# If the prefix isn't empty, it needs a trailing slash.",
        "Line" : 217,
        "CharPositionInLine" : 12
      },
      "16" : {
        "Text" : "# TODO(bazel-team): Use set() instead of sorted() once\n# set comparison is implemented.\n# TODO(bazel-team): Use a better way to determine if two paths refer to\n# the same file.",
        "Line" : 220,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "\"\"\"check that a file has a given content.\"\"\"",
        "Line" : 269,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 18
    },
    "tools/build_rules/utilities.bzl" : {
      "ObjectId" : "bead355303d7927be5cf49402e463cb95cf23936",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2017 Google Inc. All Rights Reserved.\n# Copyright 2017 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\"This rule exposes the source jar of a java_*_library rule as a label.\"\"\"",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "\"\"\"Provides the source jars generated by a java_*_library rule.\"\"\"",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "tools/buildstamp/BUILD" : {
      "ObjectId" : "d22f21eba0934d9d4cccb7bb7fa6f977454c4c46",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "tools/coverage/BUILD" : {
      "ObjectId" : "2b8bb738acd1f913076df9f1f29f956aacb2cfa9",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "tools/cpp/BUILD" : {
      "ObjectId" : "d84818fc44adbc50fa73afeafcaffda9a7de0aaf",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2018 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apache 2.0",
        "Line" : 17,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "# The toolchain type used to distinguish cc toolchains.",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# It is frequently necessary to constrain platforms based on the cc compiler type.",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This is the entry point for --crosstool_top.  Toolchains are found\n# by lopping off the name of --crosstool_top and searching for\n# \"cc-compiler-${CPU}\" in this BUILD file, where CPU is the target CPU\n# specified in --cpu.\n#\n# This file group should include\n#   * all cc_toolchain targets supported\n#   * all file groups that said cc_toolchain might refer to",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Hardcoded toolchain, legacy behaviour.",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Target that can provide the CC_FLAGS variable based on the current\n# cc_toolchain.",
        "Line" : 427,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "tools/cpp/cc_configure.bzl" : {
      "ObjectId" : "b4ffa0f5fe607c3c00e1cac93360f6a18b65591d",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2016 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\"\"\"Rules for configuring the C++ toolchain (experimental).\"\"\"",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is defaulting to the static crosstool, we should eventually\n# autoconfigure this platform too.  Theorically, FreeBSD should be\n# straightforward to add but we cannot run it in a docker container so\n# skipping until we have proper tests for FreeBSD.",
        "Line" : 37,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# TODO(ibiryukov): overriden_tools are only supported in configure_unix_toolchain.\n# We might want to add that to Windows too(at least for msys toolchain).",
        "Line" : 44,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "\"\"\"A C++ configuration rules that generate the crosstool file.\"\"\"",
        "Line" : 90,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Use register_toolchain's target pattern expansion to register all toolchains in the package.",
        "Line" : 94,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 5
    },
    "tools/cpp/cc_flags_supplier.bzl" : {
      "ObjectId" : "418aa288a0986c31872985280e4833ab97048f80",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2018 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\"\"\"Rule that provides the CC_FLAGS Make variable.\"\"\"",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tools/cpp/cc_flags_supplier_lib.bzl" : {
      "ObjectId" : "a179fbf5313cb1417697e535980de15b41639187",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2018 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\"\"\"Library of functions that provide the CC_FLAGS Make variable.\"\"\"",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This should match the logic in CcCommon.computeCcFlags:",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "\"\"\"Determine the value for CC_FLAGS based on the given toolchain.\"\"\"",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Get default cc flags from toolchain's make_variables.",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Determine the sysroot flag.",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Flags from feature config.",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Combine the different sources, but only add the sysroot flag if nothing\n# else adds sysroot.\n# If added, it must appear before the feature config flags.",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "tools/cpp/cc_toolchain_config.bzl" : {
      "ObjectId" : "22d67d4e7c244ddbd038e29721239e6b9ac2e1d4",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2019 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\"A Starlark cc_toolchain configuration rule\"\"\"",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tools/cpp/cc_toolchain_config_lib.bzl" : {
      "ObjectId" : "48a855b354a4bc19e6a4bfb2ec8c81614912cb26",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2018 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\" A library of functions creating structs for CcToolchainConfigInfo.\"\"\"",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "\"\"\" A key/value pair to be added as an environment variable.\n\n    The returned EnvEntry provider finds its use in EnvSet creation through\n    the env_entries parameter of env_set(); EnvSet groups environment variables\n    that need to be expanded for specific actions.\n    The value of this pair is expanded in the same way as is described in\n    flag_group. The key remains an unexpanded string literal.\n\n    Args:\n        key: a string literal representing the name of the variable.\n        value: the value to be expanded.\n\n    Returns:\n        An EnvEntryInfo provider.\n    \"\"\"",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "\"\"\" Represents equality check between a variable and a certain value.\n\n    The returned provider finds its use through flag_group.expand_if_equal,\n    making the expansion of the flag_group conditional on the value of the\n    variable.\n\n    Args:\n        name: name of the variable.\n        value: the value the variable should be compared against.\n\n    Returns:\n        A VariableWithValueInfo provider.\n    \"\"\"",
        "Line" : 63,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "\"\"\" A make variable that is made accessible to rules.\"\"\"",
        "Line" : 87,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "\"\"\" A set of features.\n\n    Used to support logical 'and' when specifying feature requirements in a\n    feature.\n\n    Args:\n        features: A list of unordered feature names.\n\n    Returns:\n        A FeatureSetInfo provider.\n    \"\"\"",
        "Line" : 99,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "\"\"\" A set of positive and negative features.\n\n    This stanza will evaluate to true when every 'feature' is enabled, and\n    every 'not_feature' is not enabled.\n\n    Args:\n        features: A list of feature names that need to be enabled.\n        not_features: A list of feature names that need to not be enabled.\n\n    Returns:\n        A WithFeatureSetInfo provider.\n    \"\"\"",
        "Line" : 116,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "\"\"\" Groups a set of environment variables to apply for certain actions.\n\n    EnvSet providers are passed to feature() and action_config(), to be applied to\n    the actions they are specified for.\n\n    Args:\n        actions: A list of actions this env set applies to; each env set must\n            specify at least one action.\n        env_entries: A list of EnvEntry - the environment variables applied\n            via this env set.\n        with_features: A list of feature sets defining when this env set gets\n            applied. The env set will be applied when any one of the feature\n            sets evaluate to true. (That is, when when every 'feature' is\n            enabled, and every 'not_feature' is not enabled.)\n            If 'with_features' is omitted, the env set will be applied\n            unconditionally for every action specified.\n\n    Returns:\n        An EnvSetInfo provider.\n    \"\"\"",
        "Line" : 139,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "\"\"\" A group of flags. Supports parametrization via variable expansion.\n\n    To expand a variable of list type, flag_group has to be annotated with\n    `iterate_over` message. Then all nested flags or flag_groups will be\n    expanded repeatedly for each element of the list.\n    For example:\n       flag_group(\n         iterate_over = 'include_path',\n         flags = ['-I', '%{include_path}'],\n       )\n    ... will get expanded to -I /to/path1 -I /to/path2 ... for each\n    include_path /to/pathN.\n\n    To expand a variable of structure type, use dot-notation, e.g.:\n        flag_group(\n          iterate_over = \"libraries_to_link\",\n          flag_groups = [\n            flag_group(\n              iterate_over = \"libraries_to_link.libraries\",\n              flags = [\"-L%{libraries_to_link.libraries.directory}\"],\n            )\n          ]\n        )\n\n    Flag groups can be nested; if they are, the flag group must only contain\n    other flag groups (no flags) so the order is unambiguously specified.\n    In order to expand a variable of nested lists, 'iterate_over' can be used.\n    For example:\n       flag_group (\n         iterate_over = 'object_files',\n         flag_groups = [\n           flag_group (\n             flags = ['--start-lib'],\n           ),\n           flag_group (\n             iterate_over = 'object_files',\n             flags = ['%{object_files}'],\n           ),\n           flag_group (\n             flags = ['--end-lib'],\n           )\n        ]\n     )\n     ... will get expanded to\n       --start-lib a1.o a2.o ... --end-lib --start-lib b1.o b2.o .. --end-lib\n       with %{object_files} being a variable of nested list type\n       [['a1.o', 'a2.o', ...], ['b1.o', 'b2.o', ...], ...].\n\n    Args:\n        flags: a string list, representing flags. Only one of flags and\n            flag_groups can be set, as to avoid ambiguity.\n        flag_groups: a list of FlagGroup entries. Only one of flags and\n            flag_groups can be set, as to avoid ambiguity.\n        iterate_over: a string, representing a variable of list type.\n        expand_if_available: A build variable that needs to be available\n            in order to expand the flag_group.\n        expand_if_not_available: A build variable that needs to be\n            unavailable in order for this flag_group to be expanded.\n        expand_if_true: if set, this variable needs to evaluate to True in\n            order for the flag_group to be expanded.\n        expand_if_false: if set, this variable needs to evalate to False in\n            order for the flag_group to be expanded.\n        expand_if_equal: a VariableWithValue, the flag_group is expanded in\n           case of equality.\n\n    Returns:\n        A FlagGroupInfo provider.\n    \"\"\"",
        "Line" : 190,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "\"\"\" A set of flags to be expanded in the command line for specific actions.\n\n    Args:\n        actions: The actions this flag set applies to; each flag set must\n            specify at least one action.\n        with_features: A list of feature sets defining when this flag set gets\n            applied. The flag set will be applied when any one of the feature\n            sets evaluate to true. (That is, when when every 'feature' is\n            enabled, and every 'not_feature' is not enabled.)\n            If 'with_feature' is omitted, the flag set will be applied\n            unconditionally for every action specified.\n        flag_groups: A FlagGroup list - the flags applied via this flag set.\n\n    Returns:\n        A FlagSetInfo provider.\n    \"\"\"",
        "Line" : 299,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "\"\"\" Contains all flag specifications for one feature.\n\n    Args:\n        name: The feature's name. It is possible to introduce a feature without\n            a change to Bazel by adding a 'feature' section to the toolchain\n            and adding the corresponding string as feature in the BUILD file.\n        enabled: If 'True', this feature is enabled unless a rule type\n            explicitly marks it as unsupported.\n        flag_sets: A FlagSet list - If the given feature is enabled, the flag\n            sets will be applied for the actions are specified for.\n        env_sets: an EnvSet list - If the given feature is enabled, the env\n            sets will be applied for the actions they are specified for.\n        requires: A list of feature sets defining when this feature is\n            supported by the  toolchain. The feature is supported if any of the\n            feature sets fully apply, that is, when all features of a feature\n            set are enabled.\n            If 'requires' is omitted, the feature is supported independently of\n            which other features are enabled.\n            Use this for example to filter flags depending on the build mode\n            enabled (opt / fastbuild / dbg).\n        implies: A string list of features or action configs that are\n            automatically enabled when this feature is enabled. If any of the\n            implied features or action configs cannot be enabled, this feature\n            will (silently) not be enabled either.\n        provides: A list of names this feature conflicts with.\n            A feature cannot be enabled if:\n              - 'provides' contains the name of a different feature or action\n            config that we want to enable.\n              - 'provides' contains the same value as a 'provides' in a\n            different feature or action config that we want to enable.\n            Use this in order to ensure that incompatible features cannot be\n            accidentally activated at the same time, leading to hard to\n            diagnose compiler errors.\n\n    Returns:\n        A FeatureInfo provider.\n    \"\"\"",
        "Line" : 344,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "\"\"\" Tool locations.\n\n    Args:\n        name: Name of the tool.\n        path: Location of the tool; Can be absolute path (in case of non hermetic\n            toolchain), or path relative to the cc_toolchain's package.\n\n    Returns:\n        A ToolPathInfo provider.\n\n    Deprecated:\n         Prefer specifying an ActionConfig for the action that needs the tool.\n         TODO(b/27903698) migrate to ActionConfig.\n    \"\"\"",
        "Line" : 401,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "\"\"\" Describes a tool associated with a crosstool action config.\n\n    Args:\n        path: Location of the tool; Can be absolute path (in case of non hermetic\n            toolchain), or path relative to the cc_toolchain's package.\n        with_features: A list of feature sets defining when this tool is\n            applicable. The tool will used when any one of the feature sets\n            evaluate to true. (That is, when when every 'feature' is enabled,\n            and every 'not_feature' is not enabled.)\n            If 'with_feature' is omitted, the tool will apply for any feature\n            configuration.\n        execution_requirements: Requirements on the execution environment for\n            the execution of this tool, to be passed as out-of-band \"hints\" to\n            the execution backend.\n            Ex. \"requires-darwin\"\n\n    Returns:\n        A ToolInfo provider.\n    \"\"\"",
        "Line" : 422,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "\"\"\" Configuration of a Bazel action.\n\n    An action config corresponds to a Bazel action, and allows selection of\n    a tool based on activated features.\n    Action config activation occurs by the same semantics as features: a\n    feature can 'require' or 'imply' an action config in the same way that it\n    would another feature.\n\n    Args:\n        action_name: The name of the Bazel action that this config applies to,\n            ex. 'c-compile' or 'c-module-compile'.\n        enabled: If 'True', this action is enabled unless a rule type\n            explicitly marks it as unsupported.\n        tools: The tool applied to the action will be the first Tool with a\n            feature set that matches the feature configuration.  An error will\n            be thrown if no tool matches a provided feature configuration - for\n            that reason, it's a good idea to provide a default tool with an\n            empty feature set.\n        flag_sets: If the given action config is enabled, the flag sets will be\n            applied to the corresponding action.\n        implies: A list of features or action configs that are automatically\n            enabled when this action config is enabled. If any of the implied\n            features or action configs cannot be enabled, this action config\n            will (silently) not be enabled either.\n\n    Returns:\n        An ActionConfigInfo provider.\n    \"\"\"",
        "Line" : 467,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "\"\"\" The name for an artifact of a given category of input or output artifacts to an action.\n\n    Args:\n        category_name: The category of artifacts that this selection applies\n            to. This field is compared against a list of categories defined\n            in bazel. Example categories include \"linked_output\" or\n            \"debug_symbols\". An error is thrown if no category is matched.\n        prefix: The prefix for creating the artifact for this selection.\n            Together with the extension it is used to create an artifact name\n            based on the target name.\n        extension: The extension for creating the artifact for this selection.\n            Together with the prefix it is used to create an artifact name\n            based on the target name.\n\n    Returns:\n        An ArtifactNamePatternInfo provider\n    \"\"\"",
        "Line" : 517,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 15
    },
    "tools/cpp/compiler_flag.bzl" : {
      "ObjectId" : "4a8af3a737f9489afb4d61595234c6b7a598ce8a",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2018 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\"Rule that allows select() to differentiate between compilers.\"\"\"",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tools/cpp/lib_cc_configure.bzl" : {
      "ObjectId" : "db9a634cd1dc3a7fc6e33c7899305d65b0f4cd51",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# pylint: disable=g-bad-file-header\n# Copyright 2016 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\"\"\"Base library for configuring the C++ toolchain.\"\"\"",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\"Resolves a collection of labels to their paths.\n\n    Label resolution can cause the evaluation of Skylark functions to restart.\n    For functions with side-effects (like the auto-configuration functions, which\n    inspect the system and touch the file system), such restarts are costly.\n    We cannot avoid the restarts, but we can minimize their penalty by resolving\n    all labels upfront.\n\n    Among other things, doing less work on restarts can cut analysis times by\n    several seconds and may also prevent tickling kernel conditions that cause\n    build failures.  See https://github.com/bazelbuild/bazel/issues/5196 for\n    more details.\n\n    Args:\n      repository_ctx: The context with which to resolve the labels.\n      labels: Labels to be resolved expressed as a list of strings.\n\n    Returns:\n      A dictionary with the labels as keys and their paths as values.\n    \"\"\"",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "\"\"\"Escape percent sign (%) in the string so it can appear in the Crosstool.\"\"\"",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "\"\"\"Split string on the delimiter unless %-escaped.\n\n    Examples:\n      Basic usage:\n        split_escaped(\"a:b:c\", \":\") -> [ \"a\", \"b\", \"c\" ]\n\n      Delimeter that is not supposed to be splitten on has to be %-escaped:\n        split_escaped(\"a%:b\", \":\") -> [ \"a:b\" ]\n\n      Literal % can be represented by escaping it as %%:\n        split_escaped(\"a%%b\", \":\") -> [ \"a%b\" ]\n\n      Consecutive delimiters produce empty strings:\n        split_escaped(\"a::b\", \":\") -> [ \"a\", \"\", \"\", \"b\" ]\n\n    Args:\n      string: The string to be split.\n      delimiter: Non-empty string not containing %-sign to be used as a\n          delimiter.\n\n    Returns:\n      A list of substrings.\n    \"\"\"",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Iterate over the length of string since Skylark doesn't have while loops",
        "Line" : 82,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Append the last group still in accumulator",
        "Line" : 101,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "\"\"\"Output failure message when auto configuration fails.\"\"\"",
        "Line" : 106,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "\"\"\"Output warning message during auto configuration.\"\"\"",
        "Line" : 112,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "\"\"\"Find an environment variable in system path. Doesn't %-escape the value!\"\"\"",
        "Line" : 118,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "\"\"\"A wrapper around repository_ctx.which() to provide a fallback value. Doesn't %-escape the value!\"\"\"",
        "Line" : 128,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "\"\"\"Find cmd in PATH using repository_ctx.which() and fail if cannot find it. Doesn't %-escape the cmd!\"\"\"",
        "Line" : 133,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "\"\"\"Execute a command, return stdout if succeed and throw an error if it fails. Doesn't %-escape the result!\"\"\"",
        "Line" : 149,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "\"\"\"Compute the cpu_value based on the OS name. Doesn't %-escape the result!\"\"\"",
        "Line" : 178,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Use uname to figure out whether we are on x86_32 or x86_64",
        "Line" : 187,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "\"\"\"Returns True if CC_CONFIGURE_DEBUG is set to 1.\"\"\"",
        "Line" : 198,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "\"\"\"Convert `flags` to a string of flag fields.\"\"\"",
        "Line" : 203,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 16
    },
    "tools/cpp/osx_cc_configure.bzl" : {
      "ObjectId" : "b4b2e227e20904faae41a6744237a32548f0d011",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# pylint: disable=g-bad-file-header\n# Copyright 2016 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\"\"\"Configuring the C++ toolchain on macOS.\"\"\"",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\"Compute the list of default C++ include paths on Xcode-enabled darwin.\n\n    Args:\n      repository_ctx: The repository context.\n      cc: The default C++ compiler on the local system.\n      xcode_toolchains: A list containing the xcode toolchains available\n    Returns:\n      include_paths: A list of builtin include paths.\n    \"\"\"",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# TODO(cparsons): Falling back to the default C++ compiler builtin include\n# paths shouldn't be unnecessary once all actions are using xcrun.",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Assume that all paths that point to /Applications/ are built in include paths",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "\"\"\"Configure C++ toolchain on macOS.\"\"\"",
        "Line" : 53,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "tools/cpp/runfiles/BUILD" : {
      "ObjectId" : "3d9776257961278d148ae0dee8ab567e5e3c359f",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Rewrite the include path for runfiles.h in runfiles_src.cc, and create\n# \"generated_runfiles.{h,cc}\". These files are renamed to \"runfiles.{h,cc}\" as\n# part of creating the embedded tools of Bazel.\n#\n# We cannot just check in runfiles_src.{h,cc} as runfiles.{h,cc}, because it'd\n# cause a header check failure on Windows when building targets in the Bazel\n# source tree, if those targets depend on @bazel_tools//tools/cpp/runfiles,\n# because due to lack of sandboxing they would accidentally pick up runfiles.h\n# from //tools/cpp/runfiles.",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Keep this transformation logic in sync with the\n# //scripts/bootstrap/compile.sh",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "tools/cpp/toolchain_utils.bzl" : {
      "ObjectId" : "098cff7c9b4307db185fd63b61fe79dff5be0554",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# pylint: disable=g-bad-file-header\n# Copyright 2016 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\"\nFinds the c++ toolchain.\n\nReturns the toolchain if enabled, and falls back to a toolchain constructed from\nthe CppConfiguration.\n\"\"\"",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "\"\"\"\n    Finds the c++ toolchain.\n\n    If the c++ toolchain is in use, returns it.  Otherwise, returns a c++\n    toolchain derived from legacy toolchain selection.\n\n    Args:\n      ctx: The rule context for which to find a toolchain.\n\n    Returns:\n      A CcToolchainProvider.\n    \"\"\"",
        "Line" : 24,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Check the incompatible flag for toolchain resolution.",
        "Line" : 37,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Fall back to the legacy implicit attribute lookup.",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# We didn't find anything.",
        "Line" : 47,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "tools/cpp/unix_cc_configure.bzl" : {
      "ObjectId" : "50f25955253bacf019b7c4bfd4132ef57a54317c",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# pylint: disable=g-bad-file-header\n# Copyright 2016 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\"\"\"Configuring the C++ toolchain on Unix platforms.\"\"\"",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\"Returns properly indented top level crosstool field.\"\"\"",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "\"\"\"Remove duplicates from a list.\"\"\"",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "\"\"\"Resolve and sanitize include path before outputting it into the crosstool.\n\n    Args:\n      repo_ctx: repository_ctx object.\n      path: an include path to be sanitized.\n\n    Returns:\n      Sanitized include path that can be written to the crosstoot. Resulting path\n      is absolute if it is outside the repository and relative otherwise.\n    \"\"\"",
        "Line" : 46,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# We're on UNIX, so the path delimiter is '/'.",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "\"\"\"Convert `it` in serialized protobuf format.\"\"\"",
        "Line" : 67,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "\"\"\"Build the list of %-escaped tool_path for the CROSSTOOL file.\"\"\"",
        "Line" : 76,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "\"\"\"Build the list of %-escaped tool_path for the Starlark rule.\"\"\"",
        "Line" : 80,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "\"\"\"Find a tool for repository, taking overriden tools into account.\"\"\"",
        "Line" : 84,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "\"\"\"Compute the path to the various tools. Doesn't %-escape the result!\"\"\"",
        "Line" : 90,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "\"\"\"Use ${CPLUS_INCLUDE_PATH} to compute the %-escaped list of flags for cxxflag.\"\"\"",
        "Line" : 108,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Normalize the path",
        "Line" : 112,
        "CharPositionInLine" : 60
      },
      "12" : {
        "Text" : "# OSX add \" (framework directory)\" at the end of line, strip it.",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "\"\"\"Convert path returned by cc -E xc++ in a complete path. Doesn't %-escape the path!\"\"\"",
        "Line" : 125,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "\"\"\"Compute the list of default %-escaped C++ include directories.\"\"\"",
        "Line" : 132,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "\"\"\"Checks that `option` is supported by the C compiler. Doesn't %-escape the option.\"\"\"",
        "Line" : 155,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "\"\"\"Checks that `option` is supported by the C linker. Doesn't %-escape the option.\"\"\"",
        "Line" : 167,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "\"\"\"Checks that `gold` is supported by the C compiler.\"\"\"",
        "Line" : 178,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Some macos clang versions don't fail when setting -fuse-ld=gold, adding\n# these lines to force it to. This also means that we will not detect\n# gold when only a very old (year 2010 and older) is present.",
        "Line" : 184,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "\"\"\"Returns `[option]` if supported, `[]` otherwise. Doesn't %-escape the option.\"\"\"",
        "Line" : 194,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "\"\"\"Returns `[option]` if supported, `[]` otherwise. Doesn't %-escape the option.\"\"\"",
        "Line" : 198,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# If the compiler sometimes rewrites paths in the .d files without symlinks\n# (ie when they're shorter), it confuses Bazel's logic for verifying all\n# #included header files are listed as inputs to the action.",
        "Line" : 202,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# The '-fno-canonical-system-headers' should be enough, but clang does not\n# support it, so we also try '-no-canonical-prefixes' if first option does\n# not work.",
        "Line" : 206,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "\"\"\"Convert the environment in a list of export if in Homebrew. Doesn't %-escape the result!\"\"\"",
        "Line" : 223,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "\"\"\"flag_group (\n                    flags = [\"-fprofile-instr-generate\",  \"-fcoverage-mapping\"],\n                ),\"\"\"",
        "Line" : 242,
        "CharPositionInLine" : 24
      },
      "25" : {
        "Text" : "\"\"\"flag_group (flags = [\"-fprofile-instr-generate\"]),\"\"\"",
        "Line" : 245,
        "CharPositionInLine" : 21
      },
      "26" : {
        "Text" : "# gcc requires --coverage being passed for compilation and linking\n# https://gcc.gnu.org/onlinedocs/gcc/Instrumentation-Options.html#Instrumentation-Options",
        "Line" : 247,
        "CharPositionInLine" : 8
      },
      "27" : {
        "Text" : "\"\"\"flag_group (flags = [\"--coverage\"]),\"\"\"",
        "Line" : 249,
        "CharPositionInLine" : 24
      },
      "28" : {
        "Text" : "\"\"\"flag_group (flags = [\"--coverage\"]),\"\"\"",
        "Line" : 250,
        "CharPositionInLine" : 21
      },
      "29" : {
        "Text" : "# Note that we also set --coverage for c++-link-nodeps-dynamic-library. The\n# generated code contains references to gcov symbols, and the dynamic linker\n# can't resolve them unless the library is linked against gcov.",
        "Line" : 252,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "\"\"\"\n    coverage_feature = feature (\n        name = \"coverage\",\n        provides = [\"profile\"],\n        flag_sets = [\n            flag_set(\n                actions = [\n                    ACTION_NAMES.preprocess_assemble,\n                    ACTION_NAMES.c_compile,\n                    ACTION_NAMES.cpp_compile,\n                    ACTION_NAMES.cpp_header_parsing,\n                    ACTION_NAMES.cpp_module_compile,\n                ],\n                flag_groups = [\n                    \"\"\"",
        "Line" : 255,
        "CharPositionInLine" : 11
      },
      "31" : {
        "Text" : "\"\"\"\n                ],\n            ),\n            flag_set (\n                actions = [\n                    ACTION_NAMES.cpp_link_dynamic_library,\n                    ACTION_NAMES.cpp_link_nodeps_dynamic_library,\n                    ACTION_NAMES.cpp_link_executable,\n                ],\n                flag_groups = [\n                    \"\"\"",
        "Line" : 269,
        "CharPositionInLine" : 42
      },
      "32" : {
        "Text" : "\"\"\"\n                ],\n            ),\n        ],\n    )\n\"\"\"",
        "Line" : 279,
        "CharPositionInLine" : 39
      },
      "33" : {
        "Text" : "\"\"\"Find a generic C++ toolchain tool. Doesn't %-escape the result.\"\"\"",
        "Line" : 287,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# Absolute path, maybe we should make this suported by our which function.",
        "Line" : 301,
        "CharPositionInLine" : 8
      },
      "35" : {
        "Text" : "\"\"\"Configure C++ toolchain on Unix platforms.\"\"\"",
        "Line" : 321,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# cc is outside the repository, set -B",
        "Line" : 385,
        "CharPositionInLine" : 8
      },
      "37" : {
        "Text" : "# cc is inside the repository, don't set -B.",
        "Line" : 388,
        "CharPositionInLine" : 8
      },
      "38" : {
        "Text" : "# Security hardening requires optimization.\n# We need to undef it as some distributions now have it enabled by default.",
        "Line" : 425,
        "CharPositionInLine" : 20
      },
      "39" : {
        "Text" : "# All warnings are enabled. Maybe enable -Werror as well?",
        "Line" : 429,
        "CharPositionInLine" : 20
      },
      "40" : {
        "Text" : "# Enable a few more warnings that aren't part of -Wall.",
        "Line" : 431,
        "CharPositionInLine" : 20
      },
      "41" : {
        "Text" : "# Disable problematic warnings.",
        "Line" : 436,
        "CharPositionInLine" : 20
      },
      "42" : {
        "Text" : "# has false positives",
        "Line" : 438,
        "CharPositionInLine" : 20
      },
      "43" : {
        "Text" : "# Enable coloring even if there's no attached terminal. Bazel removes the\n# escape sequences if --nocolor is specified.",
        "Line" : 440,
        "CharPositionInLine" : 20
      },
      "44" : {
        "Text" : "# Keep stack frames for debugging, even in opt mode.",
        "Line" : 444,
        "CharPositionInLine" : 20
      },
      "45" : {
        "Text" : "# Gold linker only? Can we enable this by default?\n# \"-Wl,--warn-execstack\",\n# \"-Wl,--detect-odr-violations\"",
        "Line" : 467,
        "CharPositionInLine" : 20
      },
      "46" : {
        "Text" : "# Have gcc return the exit code from ld.",
        "Line" : 471,
        "CharPositionInLine" : 20
      },
      "47" : {
        "Text" : "# No debug symbols.\n# Maybe we should enable https://gcc.gnu.org/wiki/DebugFission for opt or\n# even generally? However, that can't happen here, as it requires special\n# handling in Bazel.",
        "Line" : 479,
        "CharPositionInLine" : 20
      },
      "48" : {
        "Text" : "# Conservative choice for -O\n# -O3 can increase binary size and even slow down the resulting binaries.\n# Profile first and / or use FDO if you need better performance than this.",
        "Line" : 485,
        "CharPositionInLine" : 20
      },
      "49" : {
        "Text" : "# Security hardening on by default.\n# Conservative choice; -D_FORTIFY_SOURCE=2 may be unsafe in some cases.",
        "Line" : 490,
        "CharPositionInLine" : 20
      },
      "50" : {
        "Text" : "# Disable assertions",
        "Line" : 494,
        "CharPositionInLine" : 20
      },
      "51" : {
        "Text" : "# Removal of unused code and data at link time (can this increase binary size in some cases?).",
        "Line" : 497,
        "CharPositionInLine" : 20
      },
      "52" : {
        "Text" : "# Make C++ compilation deterministic. Use linkstamping instead of these\n# compiler symbols.",
        "Line" : 512,
        "CharPositionInLine" : 20
      },
      "CommentCount" : 53
    },
    "tools/cpp/windows_cc_configure.bzl" : {
      "ObjectId" : "84f755b43ea4bb87128d5c1839153d79a7e97661",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# pylint: disable=g-bad-file-header\n# Copyright 2016 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\"\"\"Configuring the C++ toolchain on Windows.\"\"\"",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\"Output warning message when CC_CONFIGURE_DEBUG is enabled.\"\"\"",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "\"\"\"Return the content of msys cc toolchain rule.\"\"\"",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "\"\"\"Get System root path on Windows, default is C:\\\\\\Windows. Doesn't %-escape the result.\"\"\"",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "\"\"\"Running VCVARSALL.BAT and VCVARSQUERYREGISTRY.BAT need %SYSTEMROOT%\\\\\\\\system32 in PATH.\"\"\"",
        "Line" : 78,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "\"\"\"Find Visual C++ build tools install path. Doesn't %-escape the result.\"\"\"",
        "Line" : 85,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# 1. Check if BAZEL_VC or BAZEL_VS is already set by user.",
        "Line" : 87,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# 2. Check if VS%VS_VERSION%COMNTOOLS is set, if true then try to find and use\n# vcvarsqueryregistry.bat / VsDevCmd.bat to detect VC++.",
        "Line" : 96,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# 3. User might have purged all environment variables. If so, look for Visual C++ in registry.\n# Works for Visual Studio 2017 and older. (Does not work for Visual Studio 2019 Preview.)\n# TODO(laszlocsomor): check if \"16.0\" also has this registry key, after VS 2019 is released.",
        "Line" : 127,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# 4. Check default directories for VC installation",
        "Line" : 149,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "\"\"\"Check if the installed VS version is Visual Studio 2017.\"\"\"",
        "Line" : 176,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# In VS 2017 and 2019, the location of VC is like:\n# C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\BuildTools\\VC\\\n# In VS 2015 or older version, it is like:\n# C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\",
        "Line" : 178,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "\"\"\"Find vcvarsall.bat script. Doesn't %-escape the result.\"\"\"",
        "Line" : 185,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "\"\"\"Get environment variables set by VCVARSALL.BAT. Doesn't %-escape the result!\"\"\"",
        "Line" : 197,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "\"\"\"Find the exact path of a specific build tool in MSVC. Doesn't %-escape the result.\"\"\"",
        "Line" : 220,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# For VS 2017 and 2019, the tools are under a directory like:\n# C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\BuildTools\\VC\\Tools\\MSVC\\14.10.24930\\bin\\HostX64\\x64",
        "Line" : 223,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# Normally there should be only one child directory under %VC_PATH%\\TOOLS\\MSVC,\n# but iterate every directory to be more robust.",
        "Line" : 229,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# For VS 2015 and older version, the tools are under:\n# C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\bin\\amd64",
        "Line" : 236,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "\"\"\"Check if any required tool is missing under given VC path.\"\"\"",
        "Line" : 246,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "\"\"\"Run linker alone to see if it supports /DEBUG:FASTLINK.\"\"\"",
        "Line" : 258,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# LLVM's lld-link.exe doesn't support /DEBUG:FASTLINK.",
        "Line" : 260,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "\"\"\"Find LLVM install path.\"\"\"",
        "Line" : 266,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# 1. Check if BAZEL_LLVM is already set by user.",
        "Line" : 268,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# 2. Look for LLVM installation through registry.",
        "Line" : 275,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# 3. Check default directories for LLVM installation",
        "Line" : 291,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "\"\"\"Find the exact path of a specific build tool in LLVM. Doesn't %-escape the result.\"\"\"",
        "Line" : 305,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "\"\"\"Returns True if USE_CLANG_CL is set to 1.\"\"\"",
        "Line" : 314,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# Stderr should look like \"clang version X.X.X ...\"",
        "Line" : 322,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "\"\"\"Configure C++ toolchain on Windows.\"\"\"",
        "Line" : 326,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 29
    },
    "tools/def_parser/BUILD" : {
      "ObjectId" : "7070bebf00aae02f8c0278b74b1acb6d136712d5",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# cc_toolchain now implicitly depends on @bazel_tools//tools/def_parser:def_parser\n# We need to make sure @bazel_tools//tools/def_parser:def_parser is not\n# a cc_binary, because otherwise, we'll introduce a cycle in dependency graph:\n# .-> @bazel_tools//tools/def_parser:def_parser (cc_binary)\n# |   cc_toolchain\n# `-- @bazel_tools//tools/def_parser:def_parser (cc_binary)",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tools/defaults/BUILD" : {
      "ObjectId" : "fab37b3da72c365cbffb7e00405621108c97c5a5",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# At runtime, a package is synthesized in memory that corresponds\n# the command-line flag settings.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tools/genrule/BUILD" : {
      "ObjectId" : "880e55c1d7de3844f18cf943c071cf36fa295cde",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "tools/j2objc/BUILD" : {
      "ObjectId" : "351653a63c4e56e8058c681592222bffa86d4a36",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "tools/java/BUILD" : {
      "ObjectId" : "6b2351708bdf232d8b1781cf1a7e72836340ca42",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "tools/java/runfiles/BUILD" : {
      "ObjectId" : "938884132dff466b2240a7b862f2ab9b441d6a25",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# .swp files and such",
        "Line" : 10,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 1
    },
    "tools/java/runfiles/testing/BUILD" : {
      "ObjectId" : "007c58341dd02e99016ebf1a7295b9d176c5353a",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# .swp files and such",
        "Line" : 10,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 1
    },
    "tools/jdk/BUILD" : {
      "ObjectId" : "4ded20256b0f31496798101eec95c25302560b3d",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Used to distinguish toolchains used for Java development, ie the JavaToolchainProvider.",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Used to distinguish toolchains used for Java execution, ie the JavaRuntimeInfo.",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This exists to support the migration to toolchain resolution.\n# TODO(cushon): delete once the migration is complete.",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Used to set --host_javabase or --javabase to a local JDK without having to define\n# a custom java_runtime rule.\n# E.g.:\n# bazel build --host_javabase=@bazel_tools//tools/jdk:absolute_javabase \\\n#   --define=ABSOLUTE_JAVABASE=<path to JDK> ...",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This is necessary to get the *host* Java runtime. Depending on\n# //tools/jdk:current_java_runtime from an attribute with the host transition\n# does not work because the dependency is determined based on the configuration\n# *before* the transition.",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# On Windows, executables end in \".exe\", but the label we reach it through\n# must be platform-independent. Thus, we create a little filegroup that\n# contains the appropriate platform-dependent file.",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# On Windows, Java implementation of singlejar is used. We create a little\n# filegroup that contains the appropriate platform-dependent file.\n# Once https://github.com/bazelbuild/bazel/issues/2241 is fixed (that is,\n# the native singlejar is used on windows), this file group can be reused since\n# on Windows, executables end in \".exe\", but the label we reach it through\n# must be platform-independent.",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# TODO(cushon): this isn't compatible with JDK 9",
        "Line" : 255,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# TODO(cushon): migrate to extclasspath and delete",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Default to the Java 8 language level.\n# TODO(cushon): consider if/when we should increment this?",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# The 'vanilla' toolchain is an unsupported alternative to the default.\n#\n# It does not provider any of the following features:\n#   * Error Prone\n#   * Strict Java Deps\n#   * Header Compilation\n#   * Reduced Classpath Optimization\n#\n# It uses the version of javac from the `--host_javabase` instead of the\n# embedded javac, which may not be source- or bug-compatible with the embedded\n# javac.\n#\n# However it does allow using a wider range of `--host_javabase`s, including\n# versions newer than the current embedded JDK.",
        "Line" : 326,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Tools are build from the workspace for tests.",
        "Line" : 363,
        "CharPositionInLine" : 22
      },
      "12" : {
        "Text" : "# For java coverage",
        "Line" : 399,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Replacement for the embedded JDK as host javabase.",
        "Line" : 425,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# A JDK 10 for use as a --host_javabase.",
        "Line" : 442,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# A JDK 11 for use as a --host_javabase.",
        "Line" : 459,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "tools/jdk/default_java_toolchain.bzl" : {
      "ObjectId" : "3fdcfc1c7b540c4954468952dfd16cb11918e0f3",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2017 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\"Bazel rules for creating Java toolchains.\"\"\"",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# In JDK9 we have seen a ~30% slow down in JavaBuilder performance when using\n# G1 collector and having compact strings enabled.",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Allow JavaBuilder to access internal javac APIs.",
        "Line" : 26,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# override the javac in the JDK.",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# quiet warnings from com.google.protobuf.UnsafeUtil,\n# see: https://github.com/google/protobuf/issues/3781\n# and: https://github.com/bazelbuild/bazel/issues/5599",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Restrict protos to Java 7 so that they are compatible with Android.",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "\"\"\"Defines a remote java_toolchain with appropriate defaults for Bazel.\"\"\"",
        "Line" : 85,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "\"\"\"Copies the given sources out of the current Java runtime.\"\"\"",
        "Line" : 96,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# explicitly list output files instead of using TreeArtifact to work around\n# https://github.com/bazelbuild/bazel/issues/6203",
        "Line" : 114,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 10
    },
    "tools/jdk/java_toolchain_alias.bzl" : {
      "ObjectId" : "81b781206739331186c319036057bfbd34bd7d24",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2019 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\"Experimental re-implementations of Java toolchain aliases using toolchain resolution.\"\"\"",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "\"\"\"An experimental implementation of java_runtime_alias using toolchain resolution.\"\"\"",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# See b/65239471 for related discussion of handling toolchain runfiles/data.",
        "Line" : 29,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "\"\"\"An experimental implementation of java_host_runtime_alias using toolchain resolution.\"\"\"",
        "Line" : 47,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "\"\"\"An experimental implementation of java_toolchain_alias using toolchain resolution.\"\"\"",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Use the legacy provider syntax for compatibility with the native rules.",
        "Line" : 77,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Add aliases for the legacy native rules to allow referring to both versions in @bazel_tools//tools/jdk",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "tools/jdk/remote_java_tools_aliases.bzl" : {
      "ObjectId" : "3ea91f259e9c9390ab30b674f15637aad5791fcf",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2017 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\"A collection of macros that retrieve targets from the remote java tools.\"\"\"",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# On different platforms the linux repository can be used.\n# The deploy jars inside the linux repository are platform-agnostic.\n# The ijar target inside the repository identifies the different\n# platform and builds ijar from source instead of returning the\n# precompiled binary.",
        "Line" : 23,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 3
    },
    "tools/jdk/toolchain_utils.bzl" : {
      "ObjectId" : "fd7482a48f0a120379538f025d9e02811b0683a5",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2019 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\"\nFinds the Java toolchain.\n\nReturns the toolchain if enabled, and falls back to a toolchain constructed from\nlegacy toolchain selection.\n\"\"\"",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "\"\"\"\n    Finds the Java toolchain.\n\n    If the Java toolchain is in use, returns it.  Otherwise, returns a Java\n    toolchain derived from legacy toolchain selection.\n\n    Args:\n      ctx: The rule context for which to find a toolchain.\n      target: A java_toolchain target (for legacy toolchain resolution).\n\n    Returns:\n      A JavaToolchainInfo.\n    \"\"\"",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "\"\"\"\n    Finds the Java runtime.\n\n    If the Java toolchain is in use, returns it.  Otherwise, returns a Java\n    runtime derived from legacy toolchain selection.\n\n    Args:\n      ctx: The rule context for which to find a toolchain.\n      target: A java_runtime target (for legacy toolchain resolution).\n\n    Returns:\n      A JavaRuntimeInfo.\n    \"\"\"",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "tools/launcher/BUILD" : {
      "ObjectId" : "0158b255895c1fe3cfe1d199d90f85716e70c489",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "tools/objc/BUILD" : {
      "ObjectId" : "6b313ce320a0f3bceb0b6ee9e4174487f066e788",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Files which shouldn't be publicly visible and dependencies of all objc_* or ios_* rules shouldn't be in this package.",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Intentionally empty",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tools/osx/BUILD" : {
      "ObjectId" : "be32162b71bb3a57e70a04fa4f535a2786580bd1",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "\"\"\"\n  /usr/bin/xcrun clang -fobjc-arc -framework CoreServices \\\n      -framework Foundation -o $@ $<\n\"\"\"",
        "Line" : 12,
        "CharPositionInLine" : 39
      },
      "1" : {
        "Text" : "# TODO(cparsons): Consolidate with config_settings under //src",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tools/osx/alias_rules.bzl" : {
      "ObjectId" : "c1a5d27a53988162dfedf714b39f21022577e57b",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2017 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\"Rule that stubs out the xcode_config_alias rule if it is not supported.\"\"\"",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tools/osx/crosstool/BUILD" : {
      "ObjectId" : "bc7465188fa8a2aac9311bca17fdbf177a68ee72",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Files which shouldn't be publicly visible and dependencies of all objc_* or ios_* rules shouldn't be in this package.",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tools/osx/crosstool/osx_archs.bzl" : {
      "ObjectId" : "56a0e62cf5af38e204a913098bdea65c91c3cec2",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "\"\"\"Information regarding crosstool-supported architectures.\"\"\"\n# Copyright 2017 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# List of architectures supported by osx crosstool.",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tools/osx/xcode_configure.bzl" : {
      "ObjectId" : "6136bcd7b1f6a399c2706d5662fd6c67b3715dc4",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2016 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\"\"\"Repository rule to generate host xcode_config and xcode_version targets.\n\n   The xcode_config and xcode_version targets are configured for xcodes/SDKs\n   installed on the local host.\n\"\"\"",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\"Returns the substring between two given substrings of a larger string.\n\n    Args:\n      fullstring: The larger string to search.\n      prefix: The substring that should occur directly before the returned string.\n      suffix: The substring that should occur directly after the returned string.\n    Returns:\n      A string occurring in fullstring exactly prefixed by prefix, and exactly\n      terminated by suffix. For example, (\"hello goodbye\", \"lo \", \" bye\") will\n      return \"good\". If there is no such string, returns the empty string.\n    \"\"\"",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "\"\"\"Returns the sdk version given xcodebuild stdout and an sdkname.\"\"\"",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "\"\"\"Returns a string containing an xcode_version build target.\"\"\"",
        "Line" : 47,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "\"\"\"Generates xcode-locator from source and runs it.\n\n    Builds xcode-locator in the current repository directory.\n    Returns the standard output of running xcode-locator with -v, which will\n    return information about locally installed Xcode toolchains and the versions\n    they are associated with.\n\n    This should only be invoked on a darwin OS, as xcode-locator cannot be built\n    otherwise.\n\n    Args:\n      repository_ctx: The repository context.\n      xcode_locator_src_label: The label of the source file for xcode-locator.\n    Returns:\n      A 2-tuple containing:\n      output: A list representing installed xcode toolchain information. Each\n          element of the list is a struct containing information for one installed\n          toolchain. This is an empty list if there was an error building or\n          running xcode-locator.\n      err: An error string describing the error that occurred when attempting\n          to build and run xcode-locator, or None if the run was successful.\n    \"\"\"",
        "Line" : 93,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# xcode_dump is comprised of newlines with different installed xcode versions,\n# each line of the form <version>:<comma_separated_aliases>:<developer_dir>.",
        "Line" : 160,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "\"\"\"Evaluates local system state to create xcode_config and xcode_version targets.\"\"\"",
        "Line" : 175,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# \"xcodebuild -version\" failing may be indicative of no versions of xcode\n# installed, which is an acceptable machine configuration to have for using\n# bazel. Thus no print warning should be emitted here.",
        "Line" : 178,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "\"\"\"Implementation for the local_config_xcode repository rule.\n\n    Generates a BUILD file containing a root xcode_config target named 'host_xcodes',\n    which points to an xcode_version target for each version of xcode installed on\n    the local host machine. If no versions of xcode are present on the machine\n    (for instance, if this is a non-darwin OS), creates a stub target.\n\n    Args:\n      repository_ctx: The repository context.\n    \"\"\"",
        "Line" : 223,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "\"\"\"Generates a repository containing host xcode version information.\"\"\"",
        "Line" : 251,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 10
    },
    "tools/osx/xcode_version_flag.bzl" : {
      "ObjectId" : "4b1e2aa9fe4e55461f44f8fa4b51f4a289b679fb",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2017 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\"Rules that allows select() to differentiate between Apple OS versions.\"\"\"",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "\"\"\"Strip trailing characters that aren't digits or '.' from version names.\n\n    Some OS versions look like \"9.0gm\", which is not useful for select()\n    statements. Thus, we strip the trailing \"gm\" part.\n\n    Args:\n      version: the version string\n\n    Returns:\n      The version with trailing letters stripped.\n    \"\"\"",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "\"\"\"A rule that allows select() to differentiate between Xcode versions.\"\"\"",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "\"\"\"A rule that allows select() to select based on the iOS SDK version.\"\"\"",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "\"\"\"A rule that allows select() to select based on the tvOS SDK version.\"\"\"",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "\"\"\"A rule that allows select() to select based on the watchOS SDK version.\"\"\"",
        "Line" : 74,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "\"\"\"A rule that allows select() to select based on the macOS SDK version.\"\"\"",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "tools/platforms/BUILD" : {
      "ObjectId" : "da6f476adb8565a8f1a0d8793d765c8674adc602",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Standard constraint_setting and constraint_values to be used in platforms.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# These match values in //src/main/java/com/google/devtools/build/lib/util:CPU.java",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# These match values in //src/main/java/com/google/devtools/build/lib/util:OS.java",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# A default platform with nothing defined.",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# A default platform referring to the host system. This only exists for\n# internal build configurations, and so shouldn't be accessed by other packages.",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "tools/python/BUILD" : {
      "ObjectId" : "2bdfb3e04d8f80bbc8648283d583fa7a9344472d",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "tools/python/python_version.bzl" : {
      "ObjectId" : "aecad07e0223c9b6b40b889fcfa73369b56380f3",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2018 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\"Utilities for selecting the Python major version (Python 2 vs Python 3).\"\"\"",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Version is determined using the same logic as in PythonOptions#getPythonVersion:\n#\n#   1. Consult --python_version first, if present.\n#   2. Next fall back on --force_python, if present.\n#   3. Final fallback is on the hardcoded default.",
        "Line" : 24,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "\"\"\"Defines the target to expose the Python version to select().\n\n    For use only by @bazel_tools//tools/python:BUILD; see the documentation\n    comment there.\n\n    Args:\n        name: The name of the target to introduce. Must have value\n            \"python_version\". This param is present only to make the BUILD file\n            more readable.\n    \"\"\"",
        "Line" : 51,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Config settings for the underlying native flags we depend on:\n# --force_python, --python_version, and --incompatible_py3_is_default.",
        "Line" : 67,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "tools/python/runfiles/BUILD" : {
      "ObjectId" : "8ef28b35a4695d016bac6b895f71a7ea6fb92f8f",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "tools/python/srcs_version.bzl" : {
      "ObjectId" : "53fce79fa1391029624300a36ac5d446f909387e",
      "LastModified" : "2019-04-17T08:15:20Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2019 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\"Defines an aspect for finding constraints on the Python version.\"\"\"",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "\"\"\"\\\nPropagates information about the Python version constraints of transitive\ndependencies.\n\nCanonically speaking, a target is considered to be PY2-only if it returns the\n`py` provider with the `has_py2_only_sources` field set to `True`. Likewise, it\nis PY3-only if `has_py3_only_sources` is `True`. Unless something weird is going\non with how the transitive sources are aggregated, it is expected that if any\ntarget is PY2-only or PY3-only, then so are all of its reverse transitive deps.\n\nThe `py_library` rule becomes PY2-only or PY3-only when its `srcs_version`\nattribute is respectively set to `PY2ONLY` or to either `PY3` or `PY3ONLY`.\n(The asymmetry of not recongizing `PY2` is due to\n[#1393](https://github.com/bazelbuild/bazel/issues/1393) and will be moot once\nthe `PY2ONLY` and `PY3ONLY` names are retired.) Therefore, if the transitive\ndeps of the root target are all `py_library` targets, we can look at the\n`srcs_version` attribute to easily distinguish targets whose own sources\nrequire a given Python version, from targets that only require it due to their\ntransitive deps.\n\nIf on the other hand there are other rule types in the transitive deps that do\nnot define `srcs_version`, then the only general way to tell that a dep\nintroduces a requirement on Python 2 or 3 is if it returns true in the\ncorresponding provider field and none of its direct dependencies returns true\nin that field.\n\nThis `_TransitiveVersionInfo` provider reports transitive deps that satisfy\neither of these criteria. But of those deps, it only reports those that are\n\"top-most\" in relation to the root. The top-most deps are the ones that are\nreachable from the root target by a path that does not involve any other\ntop-most dep (though it's possible for one top-most dep to have a separate path\nto another). Reporting only the top-most deps ensures that we give the minimal\ninformation needed to understand how the root target depends on PY2-only or\nPY3-only targets.\n\"\"\"",
        "Line" : 21,
        "CharPositionInLine" : 10
      },
      "3" : {
        "Text" : "\"\"\"\\\nA `_DepsWithPathsInfo` object for transitive deps that are known to introduce a\nPY2-only requirement.\n\"\"\"",
        "Line" : 57,
        "CharPositionInLine" : 15
      },
      "4" : {
        "Text" : "\"\"\"\\\nA `_DepsWithPathsInfo` object for transitive deps that are known to introduce a\nPY3-only requirement.\n\"\"\"",
        "Line" : 61,
        "CharPositionInLine" : 15
      },
      "5" : {
        "Text" : "\"\"\"\\\nA list of labels of all top-most transitive deps known to introduce a version\nrequirement. The deps appear in left-to-right order.\n\"\"\"",
        "Line" : 70,
        "CharPositionInLine" : 19
      },
      "6" : {
        "Text" : "\"\"\"\\\nA dictionary that maps labels appearing in `topmost` to their paths from the\nroot. Paths are represented as depsets with `preorder` order.\n\"\"\"",
        "Line" : 74,
        "CharPositionInLine" : 17
      },
      "7" : {
        "Text" : "# It is technically possible for the depset keys to collide if the same\n# target appears multiple times in the build graph as different\n# configured targets, but this seems unlikely.",
        "Line" : 78,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "\"\"\"Returns a string representation of a `_TransitiveVersionInfo`.\"\"\"",
        "Line" : 91,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "\"\"\"\\\nPython 2-only deps:\n{py2_nodes}\n\nPython 3-only deps:\n{py3_nodes}\n\nPaths to these deps:\n{paths}\n\"\"\"",
        "Line" : 95,
        "CharPositionInLine" : 11
      },
      "10" : {
        "Text" : "\"\"\"Returns whether a target has a version requirement, as per its provider.\n\n    Args:\n        target: the `Target` object to check\n        version: either the string \"PY2\" or \"PY3\"\n\n    Returns:\n        `True` if `target` requires `version` according to the\n        `has_py<?>_only_sources` fields\n    \"\"\"",
        "Line" : 111,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "\"\"\"Returns whether a target introduces a PY2-only or PY3-only requirement.\n\n    A target that has a version requirement is considered to introduce this\n    requirement if either 1) its rule type has a `srcs_version` attribute and\n    the target sets it to `PY2ONLY` (PY2), or `PY3` or `PY3ONLY` (PY3); or 2)\n    none of its direct dependencies set `has_py2_only_sources` (PY2) or\n    `has_py3_only_sources` (PY3) to `True`. A target that does not actually have\n    the version requirement is never considered to introduce the requirement.\n\n    Args:\n        target: the `Target` object as passed to the aspect implementation\n            function\n        target_attr: the attribute struct as retrieved from `ctx.rule.attr` in\n            the aspect implementation function\n        version: either the string \"PY2\" or \"PY3\" indicating which constraint\n            to test for\n\n    Returns:\n        `True` if `target` introduces the requirement on `version`, as per the\n        above definition\n    \"\"\"",
        "Line" : 136,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# If we don't actually have the version requirement, we can't possibly\n# introduce it, regardless of our srcs_version or what our dependencies\n# return.",
        "Line" : 160,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Try the attribute, if present.",
        "Line" : 166,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# No good, check the direct deps' provider fields.",
        "Line" : 178,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "\"\"\"Initializes an empty `_DepsWithPathsInfo` object.\"\"\"",
        "Line" : 188,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "\"\"\"Initialize a new `_DepsWithPathsInfo` object.\n\n    The object will record just the given node as its sole entry.\n\n    Args:\n        node: a label\n\n    Returns:\n        a `_DepsWithPathsInfo` object\n    \"\"\"",
        "Line" : 192,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "\"\"\"Merge several `_DepsWithPathsInfo` objects and appends a path entry.\n\n    Args:\n        depswithpaths: a list of `_DepsWithPathsInfo` objects whose entries are\n            to be merged\n        node_to_append: a label to append to all the paths of the merged object\n\n    Returns:\n        a `_DepsWithPathsInfo` object\n    \"\"\"",
        "Line" : 208,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Determine whether this target introduces a requirement. If so, any deps\n# that introduce that requirement are not propagated, though they might\n# still be considered top-most if an alternate path exists.",
        "Line" : 238,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "\"\"\"\\\nThe aspect definition. Can be invoked on the command line as\n\n    bazel build //pkg:my_py_binary_target \\\n        --aspects=@bazel_tools//tools/python:srcs_version.bzl%find_requirements \\\n        --output_groups=pyversioninfo\n\"\"\"",
        "Line" : 280,
        "CharPositionInLine" : 10
      },
      "20" : {
        "Text" : "\"\"\"\\\nWrites the string output of `find_requirements` to a file.\n\nThis helper exists for the benefit of PythonSrcsVersionAspectTest.java. It is\nuseful because code outside this file cannot read the private\n`_TransitiveVersionInfo` provider, and `BuildViewTestCase` cannot easily access\nactions generated by an aspect.\n\"\"\"",
        "Line" : 299,
        "CharPositionInLine" : 10
      },
      "CommentCount" : 21
    },
    "tools/python/toolchain.bzl" : {
      "ObjectId" : "cb4f488d09497dda0df2e7da4332cb9c39ca0c25",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2019 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\"Definitions related to the Python toolchain.\"\"\"",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "\"\"\"\\\nThe runtime to use for Python 2 targets. Must have `python_version` set to\n`PY2`.\n\"\"\"",
        "Line" : 44,
        "CharPositionInLine" : 69
      },
      "3" : {
        "Text" : "\"\"\"\\\nThe runtime to use for Python 3 targets. Must have `python_version` set to\n`PY3`.\n\"\"\"",
        "Line" : 48,
        "CharPositionInLine" : 69
      },
      "4" : {
        "Text" : "\"\"\"\\\nA toolchain rule for Python.\n\nThis wraps up to two Python runtimes, one for Python 2 and one for Python 3.\nThe rule consuming this toolchain will choose which runtime is appropriate.\nEither runtime may be omitted, in which case the resulting toolchain will be\nunusable for building Python code using that version.\n\nUsually the wrapped runtimes are declared using the `py_runtime` rule, but any\nrule returning a `PyRuntimeInfo` provider may be used.\n\nThis rule returns a `platform_common.ToolchainInfo` provider with the following\nschema:\n\n```python\nplatform_common.ToolchainInfo(\n    py2_runtime = <PyRuntimeInfo or None>,\n    py3_runtime = <PyRuntimeInfo or None>,\n)\n```\n\nExample usage:\n\n```python\n# In your BUILD file...\n\nload(\"@bazel_tools//tools/python/toolchain.bzl\", \"py_runtime_pair\")\n\npy_runtime(\n    name = \"my_py2_runtime\",\n    interpreter_path = \"/system/python2\",\n    python_version = \"PY2\",\n)\n\npy_runtime(\n    name = \"my_py3_runtime\",\n    interpreter_path = \"/system/python3\",\n    python_version = \"PY3\",\n)\n\npy_runtime_pair(\n    name = \"my_py_runtime_pair\",\n    py2_runtime = \":my_py2_runtime\",\n    py3_runtime = \":my_py3_runtime\",\n)\n\ntoolchain(\n    name = \"my_toolchain\",\n    target_compatible_with = <...>,\n    toolchain = \":my_py_runtime_pair\",\n    toolchain_type = \"@bazel_tools//tools/python:toolchain_type\",\n)\n```\n\n```python\n# In your WORKSPACE...\n\nregister_toolchains(\"//my_pkg:my_toolchain\")\n```\n\"\"\"",
        "Line" : 53,
        "CharPositionInLine" : 10
      },
      "5" : {
        "Text" : "# TODO(#7844): Add support for a windows (.bat) version of the autodetecting\n# toolchain, based on the \"py\" wrapper (e.g. \"py -2\" and \"py -3\"). Use select()\n# in the template attr of the _generate_*wrapper targets.",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "\"\"\"Defines the autodetecting Python toolchain.\n\n    For use only by @bazel_tools//tools/python:BUILD; see the documentation\n    comment there.\n\n    Args:\n        name: The name of the toolchain to introduce. Must have value\n            \"autodetecting_toolchain\". This param is present only to make the\n            BUILD file more readable.\n        pywrapper_template: The label of the pywrapper_template.txt file.\n        windows_config_setting: The label of a config_setting that matches when\n            the platform is windows, in which case the toolchain is configured\n            in a way that triggers a workaround for #7844.\n    \"\"\"",
        "Line" : 123,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Note that the pywrapper script is a .sh file, not a sh_binary target. If\n# we needed to make it a proper shell target, e.g. because it needed to\n# access runfiles and needed to depend on the runfiles library, then we'd\n# have to use a workaround to allow it to be depended on by py_runtime. See\n# https://github.com/bazelbuild/bazel/issues/4286#issuecomment-475661317.",
        "Line" : 152,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# This is a dummy runtime whose interpreter_path triggers the native rule\n# logic to use the legacy behavior on Windows.\n# TODO(#7844): Remove this target.",
        "Line" : 172,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# If we're on windows, inject the sentinel to tell native rule logic\n# that we attempted to use the autodetecting toolchain and need to\n# switch back to legacy behavior.\n# TODO(#7844): Remove this hack.",
        "Line" : 185,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 10
    },
    "tools/python/utils.bzl" : {
      "ObjectId" : "9278e32efc67fd16339976203afcccba3873c350",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2019 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\"Utilities for the @bazel_tools//tools/python package.\n\nThis file does not access any Python-rules-specific logic, and is therefore\nless likely to be broken by Python-related changes. That in turn means this\nfile is less likely to cause bootstrapping issues.\n\"\"\"",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "\"\"\"\\\nThe output file produced by substituting \"%VERSION%\" with \"2\".\"\"\"",
        "Line" : 45,
        "CharPositionInLine" : 34
      },
      "3" : {
        "Text" : "\"\"\"\\\nThe output file produced by substituting \"%VERSION%\" with \"3\".\"\"\"",
        "Line" : 47,
        "CharPositionInLine" : 34
      },
      "4" : {
        "Text" : "\"\"\"\\\nGiven a template file, generates two expansions by replacing the substring\n\"%VERSION%\" with \"2\" and \"3\".\"\"\"",
        "Line" : 50,
        "CharPositionInLine" : 10
      },
      "CommentCount" : 5
    },
    "tools/runfiles/BUILD" : {
      "ObjectId" : "739336793ec9727c6842b4665e23cada0dc6fa9f",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# .swp files and such",
        "Line" : 7,
        "CharPositionInLine" : 27
      },
      "CommentCount" : 1
    },
    "tools/sh/BUILD" : {
      "ObjectId" : "66f710a92630ae69d58a911c06a184b0a2e7aac1",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "tools/sh/sh_configure.bzl" : {
      "ObjectId" : "6f3219f5a83f086a0b679bfd7e2fba82868615d9",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2018 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\"\"\"Configure the shell toolchain on the local machine.\"\"\"",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\"Returns true if the host OS is Windows.\"\"\"",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "\"\"\"sh_config rule implementation.\n\n    Detects the path of the shell interpreter on the local machine and\n    stores it in a sh_toolchain rule.\n\n    Args:\n      repository_ctx: the repository rule context object\n    \"\"\"",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# repository_ctx.which returns a path object, convert that to\n# string so we can call string.startswith on it.",
        "Line" : 34,
        "CharPositionInLine" : 16
      },
      "4" : {
        "Text" : "# When the Windows Subsystem for Linux is installed there's a\n# bash.exe under %WINDIR%\\system32\\bash.exe that launches Ubuntu\n# Bash which cannot run native Windows programs so it's not what\n# we want.",
        "Line" : 38,
        "CharPositionInLine" : 16
      },
      "5" : {
        "Text" : "\"\"\"\nload(\"@bazel_tools//tools/sh:sh_toolchain.bzl\", \"sh_toolchain\")\n\nsh_toolchain(\n    name = \"local_sh\",\n    path = \"{sh_path}\",\n    visibility = [\"//visibility:public\"],\n)\n\ntoolchain(\n    name = \"local_sh_toolchain\",\n    toolchain = \":local_sh\",\n    toolchain_type = \"@bazel_tools//tools/sh:toolchain_type\",\n)\n\"\"\"",
        "Line" : 56,
        "CharPositionInLine" : 33
      },
      "6" : {
        "Text" : "\"\"\"Detect the local shell interpreter and register its toolchain.\"\"\"",
        "Line" : 82,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "tools/sh/sh_toolchain.bzl" : {
      "ObjectId" : "2a3370469c2fbf9a359ceef8af11c60dac9816be",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Copyright 2018 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\"\"\"Define a toolchain rule for the shell.\"\"\"",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\"sh_toolchain rule implementation.\"\"\"",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Absolute path to the shell interpreter.",
        "Line" : 22,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 3
    },
    "tools/test/BUILD" : {
      "ObjectId" : "6deb7dde275004f88ec4dac2184e61d6152bba32",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Members of this filegroup shouldn't have duplicate basenames, otherwise\n# TestRunnerAction#getRuntimeArtifact() will get confused.\n# Deprecated, do not use.",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Test wrapper binary to run tests on Windows.\n# This target just wraps the actual code in \"tw_lib\" to make it into a binary.\n# See https://github.com/bazelbuild/bazel/issues/5508",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Test wrapper binary to run tests on Windows.\n# See https://github.com/bazelbuild/bazel/issues/5508",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# GetUserNameW",
        "Line" : 72,
        "CharPositionInLine" : 41
      },
      "CommentCount" : 4
    },
    "tools/test/CoverageOutputGenerator/java/com/google/devtools/coverageoutputgenerator/BUILD" : {
      "ObjectId" : "f19a6644d60e90f08fc3f9aaaa0159d24ac7d8aa",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache 2.0",
        "Line" : 7,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 1
    },
    "tools/test/CoverageOutputGenerator/javatests/com/google/devtools/coverageoutputgenerator/BUILD" : {
      "ObjectId" : "7f9fef128bf088f3bce3219a7f8bba8b47af0c7b",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Apache 2.0",
        "Line" : 3,
        "CharPositionInLine" : 22
      },
      "1" : {
        "Text" : "# TODO(laszlocsomor): fix on Windows or describe why it cannot pass.",
        "Line" : 45,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "tools/whitelists/BUILD" : {
      "ObjectId" : "150500d91cba39cf8119e2f13e93e94424d26745",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Whitelists for restricting access to Bazel features.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tools/whitelists/config_feature_flag/BUILD" : {
      "ObjectId" : "951777fbabf79aee48917fb13f7034b04dc065be",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Package groups for restricting access to config_feature_flag to specific\n#   packages, allowing for careful rollout as it is an experimental feature.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tools/whitelists/function_transition_whitelist/BUILD" : {
      "ObjectId" : "4e3f00ffd6836ddf2e79d34fda8ad56dfde1a349",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# Description:\n#   Package group restricting access to starlark-defined transitions, allowing for careful rollout as it is an experimental feature.",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tools/zip/BUILD" : {
      "ObjectId" : "a7c996e0075468913041f738508f95d07ef76f12",
      "LastModified" : "2019-04-16T17:14:35Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 19,
    "QMAKE" : 16,
    "MAKEFILE" : 18,
    "AUTOMAKE" : 8,
    "BAZEL" : 454,
    "ANT" : 1,
    "MAVEN" : 11
  },
  "ElapsedTime" : 29141
}