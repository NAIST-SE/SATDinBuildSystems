{
  "Repository" : "11306804",
  "Revision" : "HEAD",
  "ObjectId" : "2ea0d52bc2afb119727dc0d5aa249a6151338531",
  "CommitTime" : "2019-04-14T21:15:16Z",
  "Files" : {
    "Makefile.am" : {
      "ObjectId" : "b504bc94efa781532c7b5321ab68bf3647ef0463",
      "LastModified" : "2018-03-11T21:34:49Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# enable generating tags files in particular directories\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/Makefile.am" : {
      "ObjectId" : "2e4c95e06c712775f7a069ca33fd2f1dec831c18",
      "LastModified" : "2018-09-25T10:04:37Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# No action needed for this target.\n",
        "Line" : 330,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# vim: set tabstop=2 softtabstop=2 shiftwidth=2 noexpandtab :\n",
        "Line" : 382,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3,
      "Errorlog" : "line 337:74 token recognition error at: '\\x'\nline 337:98 token recognition error at: '\\x'\nline 339:75 token recognition error at: '\\x'\nline 339:90 token recognition error at: '\\x'\nline 339:114 token recognition error at: '\\x'\n"
    },
    "tests/Makefile" : {
      "ObjectId" : "2d38ce848d2afe78ca8165b9459ddf8a3b89a91e",
      "LastModified" : "2019-03-03T13:15:15Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Overview\n\n# --------\n\n#\n\n# This is a non-recursive Makefile for running vifm tests using stic.\n\n#\n\n# Vifm is built before running any tests as its object files are used for tests.\n\n# Necessary include and link directives are picked up from the main Makefile.\n\n#\n\n# Each test-suite (directory) is run in a separate sandbox directory.  During\n\n# compilation two defines are available:\n\n#  - TEST_DATA_PATH -- path to test-data/ directory (might be RO)\n\n#  - SANDBOX_PATH   -- path to sandbox for the suite (always RW)\n\n#\n\n# Test suites can be run concurrently.\n\n#\n\n# Usage\n\n# -----\n\n#\n\n# By default tests are built in release mode.\n\n#\n\n# make              -- builds and runs all tests\n\n# make build        -- builds all tests without running them\n\n# make check        -- builds all tests and then runs them\n\n# make <dir>        -- runs specific test suite\n\n# make <dir>.<name> -- runs specific fixture\n\n#\n\n# make DEBUG=1 ...        -- builds debug version\n\n# make DEBUG=gdb ...      -- builds debug version and loads suite into gdb\n\n# make DEBUG=rr ...       -- builds debug version and loads suite into rr\n\n# make DEBUG=valgrind ... -- builds debug version and runs it under valgrind\n\n#                            (see valgrind-report file after a run)\n\n#\n\n# make VERBOSE=1 ... -- enables verbose printing of commands\n\n#\n\n# make TEST_RUN_PREFIX=wine -- sets run command prefix\n\n#\n\n# make clean -- removes various build artifacts\n\n#\n\n# \"B\" variable might be set to build tree root to run tests out of the source\n\n# tree.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# determine kind of OS that is running\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# path to build tree\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# path to storage for intermediate build files\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# engine\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# io\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ui\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# everything else\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# these are built, but not automatically executed\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# obtain list of sources that are being tested\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# filter out generally non-testable or sources for another platform\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# make sure that there is one compile_info.c object file in the list\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# handling of verbosity (non-verbose by default)\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# redefine commands according to verbosity state\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# setup compile and link flags (partially depends on OS)\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# this part is in conditional of ../src/Makefile.win\n",
        "Line" : 156,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# clang is inconvenient with regard to this flag, don't do coverage with\n\n# it\n",
        "Line" : 168,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# don't precompile header with clang (on OS X gcc is likely to be a symlink to\n\n# clang) because it handles macros in a different way\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# check and build targets are defined mostly in suite_template\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# disable implicit rules to prevent compiling main sources here\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# this function of two arguments (array and element) returns index of the\n\n# element in the array\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# suite definition template, takes single argument: name of the suite\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# walk throw list of suites+apps and instantiate template for each one\n",
        "Line" : 331,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# extra dependencies between test fixtures\n",
        "Line" : 334,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# import dependencies calculated by the compiler\n",
        "Line" : 337,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 1,
    "AUTOMAKE" : 2
  },
  "ElapsedTime" : 2357
}