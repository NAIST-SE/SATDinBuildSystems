{
  "Repository" : "35348818",
  "Revision" : "HEAD",
  "ObjectId" : "945a28277f4e534763e5c1b2a2edaf4be62ccca9",
  "CommitTime" : "2019-04-13T21:11:10Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "46528bfc1d3baaedd1412b2887674cf5b87dbce1",
      "LastModified" : "2019-03-28T08:53:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# cmake configuration\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# for /MT on MSVC\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# project\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# GCC 4.8/4.9 ship with broken but present <regex>. meh.\n",
        "Line" : 52,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# common compiler flags\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# common dependencies\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# On Win32 and macOS we use vendored packages, since there is little to no benefit\n\n# to trying to find system versions. In particular, trying to link to libraries from\n\n# Homebrew or macOS system libraries into the .app file is highly likely to result\n\n# in incompatibilities after upgrades.\n",
        "Line" : 118,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# On Linux and BSDs we're a good citizen and link to system libraries.\n",
        "Line" : 165,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# GUI dependencies\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# code coverage\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# translations\n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# solvespace-only compiler flags\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Many versions of MSVC do not have the (C99) inline keyword, instead\n\n# they have their own __inline; this breaks `static inline` functions.\n\n# We do not want to care and so we fix this with a definition.\n",
        "Line" : 268,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Same for the (C99) __func__ special variable; we use it only in C++ code.\n",
        "Line" : 272,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# We rely on these /we flags. They correspond to the GNU-style flags below as\n\n# follows: /w4062=-Wswitch\n",
        "Line" : 275,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# We rely on these -Werror flags.\n",
        "Line" : 285,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# With -fexceptions, every call becomes a branch. While technically accurate,\n\n# this is not useful for us.\n",
        "Line" : 306,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# application components\n",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "bench/CMakeLists.txt" : {
      "ObjectId" : "26172f165535d736e3de7308f8498cb135116959",
      "LastModified" : "2016-11-29T04:01:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# benchmark runner\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/AddVendoredSubdirectory.cmake" : {
      "ObjectId" : "9d2edf61e2c0efbfb2b2f0fdb7c15b713bbc8385",
      "LastModified" : "2016-08-01T00:48:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Equivalent to add_subdirectory(... EXCLUDE_FROM_ALL), but also disables\n\n# all warnings.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/DisableWarnings.cmake" : {
      "ObjectId" : "b79ef9cd592cfd20f6ef59e432696ba5b406c437",
      "LastModified" : "2016-08-01T00:48:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Disables all warnings on MSVC and GNU-compatible compilers.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindSpaceWare.cmake" : {
      "ObjectId" : "fb6073c323c94f08e4941a5af5fc8c1ea50cd035",
      "LastModified" : "2018-07-18T01:05:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the libspnav library and header.\n\n#\n\n# Sets the usual variables expected for find_package scripts:\n\n#\n\n# SPACEWARE_INCLUDE_DIR - header location\n\n# SPACEWARE_LIBRARIES - library to link against\n\n# SPACEWARE_FOUND - true if libspnav was found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Support the REQUIRED and QUIET arguments, and set SPACEWARE_FOUND if found.\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "cmake/FindVendoredPackage.cmake" : {
      "ObjectId" : "6227f6c0cd840f696af826d7b9d08fedd31a9715",
      "LastModified" : "2018-07-18T01:05:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the given library in the system locations, or build in-tree if not found.\n\n#\n\n# Arguments:\n\n#   PKG_NAME - name of the package as passed to find_package\n\n#   PKG_PATH - name of the source tree relative to extlib/\n\n#\n\n# The rest of the arguments are VARIABLE VALUE pairs. If the library is not found,\n\n# every VARIABLE will be set to VALUE and find_package will be rerun with the REQUIRED flag.\n\n# Regardless of where the library was found, only the specified VARIABLEs that start with\n\n# ${PKG_NAME} will be set in the parent scope.\n\n#\n\n# All warnings in the in-tree package are disabled.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Now put everything we just discovered into the cache.\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "cmake/Toolchain-mingw32.cmake" : {
      "ObjectId" : "a8767fddd17625f25d6333cb2cd321498328620e",
      "LastModified" : "2016-08-01T00:48:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Toolchain-mingw64.cmake" : {
      "ObjectId" : "7f85f3553c7c760575621d65c62a9b0da6cbaa54",
      "LastModified" : "2016-08-01T00:48:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/c_flag_overrides.cmake" : {
      "ObjectId" : "b21f00e3e489190107f7e50265c073b495a8c584",
      "LastModified" : "2016-08-01T00:48:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/cxx_flag_overrides.cmake" : {
      "ObjectId" : "67e00433491ce88eb53137659b206f5fd40ff98f",
      "LastModified" : "2016-08-01T00:48:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "exposed/CMakeLists.txt" : {
      "ObjectId" : "bdc3fc39cfe7c13061ed71f81b61930a242f0e33",
      "LastModified" : "2016-08-01T00:48:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "res/CMakeLists.txt" : {
      "ObjectId" : "0b51b47e5a3db2eab7d2a042c153a94eae511bbb",
      "LastModified" : "2019-03-28T08:53:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# First, set up registration functions for the kinds of resources we handle.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMake doesn't track file dependencies across directories, so we force\n\n# a reconfigure (which changes the RC file because of the hash above)\n\n# every time a resource is changed.\n",
        "Line" : 28,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# Unix\n",
        "Line" : 86,
        "CharPositionInLine" : 7
      },
      "3" : {
        "Text" : "# Second, register all resources.\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Third, distribute the resources.\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "874e88db8358114dba4295a2a368c72bc100b943",
      "LastModified" : "2019-03-28T08:53:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# configuration\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# platform utilities\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# libslvs\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# solvespace dependencies\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# solvespace library\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# solvespace translations\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# en_US is a bit special; we pre-fill the msgstrs from msgids, instead of (as would normally\n\n# happen) leaving them empty.\n",
        "Line" : 277,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# solvespace graphical executable\n",
        "Line" : 316,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# solvespace headless library\n",
        "Line" : 342,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# solvespace command-line executable\n",
        "Line" : 365,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# solvespace unix package\n",
        "Line" : 385,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# solvespace macOS package\n",
        "Line" : 398,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "73d04406c2ec5833024514d136d5ddf2bfa79e86",
      "LastModified" : "2018-07-18T01:05:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# test suite\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# coverage reports\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# debug runner\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    }
  },
  "FileTypes" : {
    "CMAKE" : 14
  },
  "ElapsedTime" : 3365
}