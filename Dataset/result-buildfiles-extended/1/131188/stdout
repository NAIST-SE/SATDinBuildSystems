{
  "Repository" : "131188",
  "Revision" : "HEAD",
  "ObjectId" : "4e523f356791197f0cd6576e55f57101b641029e",
  "CommitTime" : "2019-04-16T12:47:16Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "34d5caa4279256ab9f6b0b262020db20a717524f",
      "LastModified" : "2019-04-04T05:52:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#\n\n#     Check for the compiler        #\n\n#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### Need to set rc ccompiler before enable language\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## \n\n## Check the C/C++ standard that we need\n\n##   See also tools/cmake/Flags.cmake that sets our paranoid warning flags\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Request full debugging flags\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## We need a decent support of the C++11 and C11 standards\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "### Check threading support\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "### Setup Options\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "### SMPI vs. Fortran\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# First unset the compiler in case we're re-running cmake over a previous\n\n# configuration where it was saved as smpiff\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Fortran compiler detected: save it, then replace by smpiff\n",
        "Line" : 66,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Set flags/libs to be used in smpiff\n",
        "Line" : 69,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# flang\n",
        "Line" : 78,
        "CharPositionInLine" : 58
      },
      "12" : {
        "Text" : "#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#\n\n#     Build the version number      #\n\n#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Extra words to add to version string (e.g. -rc1)\n",
        "Line" : 96,
        "CharPositionInLine" : 36
      },
      "14" : {
        "Text" : "# Year for copyright information\n",
        "Line" : 98,
        "CharPositionInLine" : 34
      },
      "15" : {
        "Text" : "### SET THE LIBRARY EXTENSION \n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "### Find programs and paths\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# tesh.py needs python 3 (or the module python-subprocess32 on python2.8+)\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "### Compute the include paths\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Only include public headers by default\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Compute the ones that should be added when compiling the library\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# library dependency cannot start with a space (CMP0004), so initialize it with something that is never desactivated.\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "### Determine the assembly flavor that we need today\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# 32 bits\n",
        "Line" : 181,
        "CharPositionInLine" : 34
      },
      "24" : {
        "Text" : "# But we do need the core of Boost\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# cmake before 3.13.1 does not know about stacktrace components. Fix it.\n\n# Usable components: https://www.boost.org/doc/libs/1_65_1/doc/html/stacktrace/configuration_and_build.html\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# When we want a minimal jarfile, don't even search for boost optional components\n",
        "Line" : 257,
        "CharPositionInLine" : 17
      },
      "27" : {
        "Text" : "# These components are optionals\n",
        "Line" : 261,
        "CharPositionInLine" : 21
      },
      "28" : {
        "Text" : "# Checks for header libraries functions.\n",
        "Line" : 284,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# for pthread_setaffinity_np() on FreeBSD\n",
        "Line" : 287,
        "CharPositionInLine" : 53
      },
      "30" : {
        "Text" : "# Use the GNU version of unusual modifiers like PRIx64\n",
        "Line" : 292,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# The detection of vasprintf fails on MinGW, assumingly because it's\n\n# defined as an inline function in stdio.h instead of a regular\n\n# function. So force the result to be 1 despite of the test.\n",
        "Line" : 318,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "#--------------------------------------------------------------------------------------------------\n\n### Check what context backends are available\n",
        "Line" : 409,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#If can have both context\n",
        "Line" : 422,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# Stack setup (size and address)\n",
        "Line" : 431,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# Stack growth direction (upward or downward). Used for the following contexts: SysV, raw, Boost\n",
        "Line" : 447,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# If the test ran well, remove the test binary\n",
        "Line" : 467,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#--------------------------------------------------------------------------------------------------\n",
        "Line" : 469,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "###############\n\n## GIT version check\n\n##\n",
        "Line" : 471,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Check for uncommitted changes\n",
        "Line" : 479,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "### Define source packages for Libs\n",
        "Line" : 493,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "### Setup gcc & clang flags (include after DefinePackage.cmake, and before generating header files)\n",
        "Line" : 496,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "### Generate the required headers and scripts\n\n#############################################\n",
        "Line" : 501,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Avoid triggering a (full) rebuild by touching the files if they did not really change\n",
        "Line" : 504,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# We need two versions of the SMPI scripts because they contain the path to the library\n\n# so, it depends of whether SimGrid is installed, or run from the sources (during the build)\n",
        "Line" : 515,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Definitions shared amongst all SMPI scripts, inlined in each of them\n",
        "Line" : 518,
        "CharPositionInLine" : 70
      },
      "46" : {
        "Text" : "### SMPI script used when simgrid is installed\n",
        "Line" : 520,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#configure mpif.f90 to build mpi.mod\n",
        "Line" : 534,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "### SMPI scripts used when compiling simgrid \n",
        "Line" : 548,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "### Build some Maintainer files\n",
        "Line" : 745,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "### Make Libs\n",
        "Line" : 748,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Python binding (with pybind11)\n\n################\n\n# Our usage of pybind11::overload_cast mandates C++14\n",
        "Line" : 759,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# Try to use a local copy of pybind11, if any\n",
        "Line" : 766,
        "CharPositionInLine" : 46
      },
      "53" : {
        "Text" : "# ON by default if dependencies are met\n",
        "Line" : 791,
        "CharPositionInLine" : 85
      },
      "54" : {
        "Text" : "### Make tests\n",
        "Line" : 817,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "### Define subdirectories\n",
        "Line" : 827,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "### Setup the distrib\n",
        "Line" : 833,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "### Build the docs if asked to\n",
        "Line" : 836,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "### Print the result of configuration\n",
        "Line" : 839,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# Pass the file header\n",
        "Line" : 845,
        "CharPositionInLine" : 53
      },
      "60" : {
        "Text" : "# Pass the file header\n",
        "Line" : 853,
        "CharPositionInLine" : 53
      },
      "CommentCount" : 61
    },
    "FindSimGrid.cmake" : {
      "ObjectId" : "051e29a0a7db579d0b0c240acd18f4d672a822bf",
      "LastModified" : "2019-01-07T12:05:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake find module to search for the SimGrid library. \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2016-2019. The SimGrid Team.\n\n#\n\n# This file is free software; you can redistribute it and/or modify it\n\n# under the terms of the license (GNU LGPL) which comes with this package.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# USERS OF PROGRAMS USING SIMGRID\n\n# -------------------------------\n\n#\n\n# If cmake does not find this file, add its path to CMAKE_PREFIX_PATH:\n\n#    CMAKE_PREFIX_PATH=\"/path/to/FindSimGrid.cmake:$CMAKE_PREFIX_PATH\"  cmake .\n\n#\n\n# If this file does not find SimGrid, define SimGrid_PATH:\n\n#    SimGrid_PATH=/path/to/simgrid  cmake .\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# DEVELOPERS OF PROGRAMS USING SIMGRID\n\n# ------------------------------------\n\n#\n\n#  1. Include this file in your own CMakeLists.txt (before defining any target)\n\n#     Either by copying it in your tree, or (recommended) by using the\n\n#     version automatically installed by SimGrid.\n\n#\n\n#  2. Afterward, if you have CMake >= 2.8.12, this will define a\n\n#     target called 'SimGrid::Simgrid'. Use it as:\n\n#       target_link_libraries(your-simulator SimGrid::SimGrid)\n\n#\n\n#    With older CMake (< 2.8.12), it simply defines several variables:\n\n#       SimGrid_INCLUDE_DIR - the SimGrid include directories\n\n#       SimGrid_LIBRARY - link your simulator against it to use SimGrid\n\n#    Use as:\n\n#      include_directories(\"${SimGrid_INCLUDE_DIR}\" SYSTEM)\n\n#      target_link_libraries(your-simulator ${SimGrid_LIBRARY})\n\n#\n\n#  In both cases, it also define a SimGrid_VERSION macro, that you\n\n#    can use to deal with API evolutions as follows:\n\n#\n\n#    #if SimGrid_VERSION < 31800\n\n#      (code to use if the installed version is lower than v3.18)\n\n#    #elif SimGrid_VERSION < 31900\n\n#      (code to use if we are using SimGrid v3.18.x)\n\n#    #else\n\n#      (code to use with SimGrid v3.19+)\n\n#    #endif\n\n#\n\n#  Since SimGrid header files require C++11, so we set CMAKE_CXX_STANDARD to 11.\n\n#    Change this variable in your own file if you need a later standard.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# \n\n# IMPROVING THIS FILE\n\n# -------------------\n\n#  - Use automatic SimGridConfig.cmake creation via export/install(EXPORT in main CMakeLists.txt:\n\n#    https://cliutils.gitlab.io/modern-cmake/chapters/exporting.html\n\n#    https://cmake.org/Wiki/CMake/Tutorials/How_to_create_a_ProjectConfig.cmake_file\n\n#    https://github.com/boostcon/cppnow_presentations_2017/blob/master/05-19-2017_friday/effective_cmake__daniel_pfeifer__cppnow_05-19-2017.pdf\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# search under the old name\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Concat the matches to MAJOR.MINOR.PATCH assuming they appear in this order\n",
        "Line" : 91,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# We need C++11, so check for it just in case the user removed it since compiling SimGrid\n",
        "Line" : 117,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# 3.8+ allows us to simply require C++11 (or higher)\n",
        "Line" : 119,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# 3.1+ is similar but for certain features. We pick just one\n",
        "Line" : 122,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Old CMake can't do much. Just check the CXX_FLAGS and inform the user when a C++11 feature does not work\n",
        "Line" : 125,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 11
    },
    "examples/deprecated/java/CMakeLists.txt" : {
      "ObjectId" : "c5a61b97b47219b2f48a0060fcaf1694a03395b3",
      "LastModified" : "2019-01-29T12:54:28Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/deprecated/msg/CMakeLists.txt" : {
      "ObjectId" : "0e62567023549f56ff82f5173ceea2ab19fe0921",
      "LastModified" : "2019-02-22T18:15:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# C examples\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/deprecated/msg/mc/CMakeLists.txt" : {
      "ObjectId" : "c9cc7ed9d8021c86952641952438c0ba8e092005",
      "LastModified" : "2019-03-14T15:57:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# liveness model-checking works only on 64bits (for now ...)\n",
        "Line" : 26,
        "CharPositionInLine" : 58
      },
      "1" : {
        "Text" : "# This test checks if the stack cleaner is making a difference:\n",
        "Line" : 32,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 2
    },
    "examples/deprecated/simdag/CMakeLists.txt" : {
      "ObjectId" : "089d2da0a6ce00dbe48825cd519be2e7655c08a6",
      "LastModified" : "2019-03-14T15:57:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/python/CMakeLists.txt" : {
      "ObjectId" : "30776402644c147dd50ce447a43b5dff8671b29b",
      "LastModified" : "2019-03-19T08:37:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# actor-lifetime\n",
        "Line" : 1,
        "CharPositionInLine" : 104
      },
      "1" : {
        "Text" : "# example broken so far\n",
        "Line" : 20,
        "CharPositionInLine" : 57
      },
      "CommentCount" : 2
    },
    "examples/s4u/CMakeLists.txt" : {
      "ObjectId" : "9596c01808b0abf48fbb751a353e78683725fce3",
      "LastModified" : "2019-03-17T18:50:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Regular examples: with only one source and tested with all factories\n\n######################################################################\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Multi-files examples\n\n######################\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# MASTERWORKERS EXAMPLE\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# CHORD EXAMPLE\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# KADEMLIA EXAMPLE\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# BITTORRENT EXAMPLE\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Examples not accepting factories\n\n##################################\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Examples accepting only thread factories\n\n##################################\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add all extra files to the archive\n\n####################################\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "examples/smpi/CMakeLists.txt" : {
      "ObjectId" : "f528907faa3539593cf42fa280efbaf50172254c",
      "LastModified" : "2019-03-14T15:57:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/smpi/NAS/CMakeLists.txt" : {
      "ObjectId" : "bec59f117d6b10353146eec21faf6b25be31373c",
      "LastModified" : "2019-01-11T20:52:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/smpi/energy/f77/CMakeLists.txt" : {
      "ObjectId" : "1f95dc76cda6986b4c7ede09bf2eb873cc3398eb",
      "LastModified" : "2019-01-11T20:52:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/smpi/energy/f90/CMakeLists.txt" : {
      "ObjectId" : "9a107d53f32d602faa2d241f3016bc1a33bc210d",
      "LastModified" : "2019-01-11T23:39:06Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/smpi/replay_multiple/CMakeLists.txt" : {
      "ObjectId" : "f0664250cefd3b2b5efa95a23d7e97f9c6949370",
      "LastModified" : "2019-01-11T20:52:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/smpi/replay_multiple_manual_deploy/CMakeLists.txt" : {
      "ObjectId" : "78728e5dfa47f0710b6246c19f3952063811d5e4",
      "LastModified" : "2019-01-11T20:52:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define a list of a tesh files\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "examples/smpi/smpi_msg_masterslave/CMakeLists.txt" : {
      "ObjectId" : "71bd37df5fa208715e7265af402748af27630f16",
      "LastModified" : "2019-01-11T20:52:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "teshsuite/java/CMakeLists.txt" : {
      "ObjectId" : "76c248efc9a67ec826af89d1bab5aad6102bd102",
      "LastModified" : "2019-01-11T20:52:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "teshsuite/lua/CMakeLists.txt" : {
      "ObjectId" : "a213e80910243b2e330c86fc0cdfc19d3f31b450",
      "LastModified" : "2019-03-14T15:57:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tests testing simulation from C but using lua for platform files. Executed like this\n\n# ~$ ./masterslave platform.lua deploy.lua\n",
        "Line" : 2,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "teshsuite/mc/CMakeLists.txt" : {
      "ObjectId" : "85fc94b2d0d7936c60ac08a61ce977fb9ea288df",
      "LastModified" : "2019-03-14T15:57:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ADD_TESH(tesh-mc-mutex-handling-dpor         --setenv bindir=${CMAKE_BINARY_DIR}/teshsuite/mc/mutex-handling --setenv srcdir=${CMAKE_HOME_DIRECTORY} --cd ${CMAKE_HOME_DIRECTORY}/teshsuite/mc/mutex-handling mutex-handling.tesh --cfg=model-check/reduction:dpor)\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "teshsuite/msg/CMakeLists.txt" : {
      "ObjectId" : "f3eb8efbf7b5c2abcd25610cabe8a5d3bfa97183",
      "LastModified" : "2019-03-14T15:57:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# C examples\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CPP examples\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "teshsuite/s4u/CMakeLists.txt" : {
      "ObjectId" : "a93c8f93648e0c9b4ba9a48e5108d4f940075d72",
      "LastModified" : "2019-03-14T15:57:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Add the tests.\n\n## Some need to be run with all factories, some need not tesh to run\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO: actor-autorestart is disabled for now\n",
        "Line" : 18,
        "CharPositionInLine" : 42
      },
      "2" : {
        "Text" : "# Manually add this file, but the test is broken and must be disabled for now (TODO)\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The output is not relevant\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "teshsuite/simdag/CMakeLists.txt" : {
      "ObjectId" : "53fb1687eb1df4bf06bc2cee4f0c97b2a79089ca",
      "LastModified" : "2019-04-02T14:51:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# test for code coverage\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# these tests need assertions. Exclude them from memcheck, as they normally die, leaving lots of unfree'd objects\n",
        "Line" : 94,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#These tests fail on Windows as the signal returned is not the same as Unix would send.\n",
        "Line" : 99,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 3
    },
    "teshsuite/simix/CMakeLists.txt" : {
      "ObjectId" : "26919a1b6c2537f64fde02f766ad4c1217db3e0d",
      "LastModified" : "2019-03-14T15:57:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Cannot use ADD_TESH() here since ${factory} is part of the tesh filename\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "teshsuite/smpi/CMakeLists.txt" : {
      "ObjectId" : "800ae86f93eeff973aa167d7c77d006694850101",
      "LastModified" : "2019-03-14T15:57:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Extra allreduce test: large automatic\n",
        "Line" : 127,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Extra allreduce test: cluster-types\n",
        "Line" : 131,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Extra pt2pt pingpong test: broken usage ti-tracing\n",
        "Line" : 134,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Simple privatization tests\n",
        "Line" : 138,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "teshsuite/smpi/isp/umpire/CMakeLists.txt" : {
      "ObjectId" : "5dc3cd1e479af9c899731c3e9de7e08bab5c963b",
      "LastModified" : "2019-04-14T17:49:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# See http://formalverification.cs.utah.edu/ISP_Tests/\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Passing (no deadlock) tests\n",
        "Line" : 35,
        "CharPositionInLine" : 3
      },
      "2" : {
        "Text" : "# These are supposed to deadlock but ISP does not find deadlock\n\n# and we don't either. What should be test here?\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# failing (deadlocking) tests\n",
        "Line" : 76,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# Compile but run those tests:\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# No deadlock detected by ISP unless MPI_Send blocking activated\n",
        "Line" : 95,
        "CharPositionInLine" : 18
      },
      "6" : {
        "Text" : "# problematic tests\n",
        "Line" : 96,
        "CharPositionInLine" : 3
      },
      "7" : {
        "Text" : "# These files are not listed on http://formalverification.cs.utah.edu/ISP_Tests/\n",
        "Line" : 98,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# Does not compile.\n",
        "Line" : 149,
        "CharPositionInLine" : 19
      },
      "9" : {
        "Text" : "# Add these files to the archive\n\n#################\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Build the tests\n\n#################\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# TODO, what should we do about ${umpire_tests_missed_deadlock}?\n",
        "Line" : 217,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Erase all tesh files on cleanup: they are generated anyway\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "teshsuite/smpi/mpich3-test/CMakeLists.txt" : {
      "ObjectId" : "b8c8967a968aeffab8ba6f893227a862b2991a31",
      "LastModified" : "2019-04-05T15:57:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#message(\"copy ${srcfile} to ${dstfile}\")\n",
        "Line" : 8,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "#build only once files used in each test (C version compiled here at root, F77 is in f77/util, and F90 in F90/util)\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "teshsuite/smpi/mpich3-test/attr/CMakeLists.txt" : {
      "ObjectId" : "5d6930f37e8bc29e2b5ad0d744b789bece3b2d70",
      "LastModified" : "2019-03-14T15:57:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#attric \n",
        "Line" : 13,
        "CharPositionInLine" : 85
      },
      "CommentCount" : 1
    },
    "teshsuite/smpi/mpich3-test/coll/CMakeLists.txt" : {
      "ObjectId" : "3fd1c540f945f8b66c4f47a69401dcb0f502a66a",
      "LastModified" : "2019-04-05T15:57:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# icallgather icallgatherv icallreduce\n\n# icalltoall icalltoallv icalltoallw icbarrier icbcast\n\n# icgather icgatherv icreduce icscatter icscatterv\n\n# opband opbor opbxor opland oplor oplxor opmax opmaxloc\n\n# opmin opminloc opprod opsum nonblocking3\n",
        "Line" : 18,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "# redscatinter\n",
        "Line" : 25,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# uoplong\n",
        "Line" : 27,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# These tests take 5 to 15 seconds to run, so we don't want to run them several times.\n\n# But at the same time, we'd like to check if they work for all factories and all privatization algorithm\n\n# Thus the current matrix\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Test default selector; default factory; default privatization\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Test OMPI selector: thread factory, dlopen privatization\n",
        "Line" : 71,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Test MPICH selector: boost factory, dlopen privatization\n",
        "Line" : 74,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Test MVAPICH2 selector: ucontext factory, mmap privatization\n",
        "Line" : 77,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Test IMPI selector: raw factory, mmap privatization\n",
        "Line" : 80,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 9
    },
    "teshsuite/smpi/mpich3-test/comm/CMakeLists.txt" : {
      "ObjectId" : "062941a4b3d4f5dbb71860490bb7f09d25783ce8",
      "LastModified" : "2019-04-05T15:57:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# not compiled files\n\n# comm_idup comm_idup_mul comm_idup_overlap  dupic ic1 ic2 iccreate icgroup icm icsplit probe-intercomm \n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "teshsuite/smpi/mpich3-test/datatype/CMakeLists.txt" : {
      "ObjectId" : "3a17173e2204ba44bb98958c1722af9d8d4c392c",
      "LastModified" : "2019-03-14T15:57:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# not compiled files\n\n# blockindexed-misc contents darray-cyclic darray-pack get-elements get-elements-pairtype getpartelm get-struct\n\n# hindexed-zeros indexed-misc large-count large_type large_type_sendrec lbub lots-of-type pairtype-pack\n\n# pairtype-size-extent segtest simple-pack-external simple-pack-external2 sizedtypes slice-pack slice-pack-external struct-empty-el\n\n# struct-no-real-type structpack2 subarray subarray-pack tmatchsize triangular-pack unusual-noncontigs\n\n# zero-blklen-vector\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "teshsuite/smpi/mpich3-test/f77/attr/CMakeLists.txt" : {
      "ObjectId" : "3a927daa70d5376c294765d0159b5772c561a969",
      "LastModified" : "2019-03-14T15:57:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "teshsuite/smpi/mpich3-test/f77/coll/CMakeLists.txt" : {
      "ObjectId" : "8deb66a050a84b4a907c5638760b3be8f643e260",
      "LastModified" : "2019-04-05T15:57:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "teshsuite/smpi/mpich3-test/f77/comm/CMakeLists.txt" : {
      "ObjectId" : "44b8e3ed16bb5b3b7c7dbc05760d63aa6683aadc",
      "LastModified" : "2019-04-05T15:57:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add_executable(commerrf EXCLUDE_FROM_ALL commerrf.f)\n",
        "Line" : 11,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# add_dependencies(tests commerrf)\n\n# target_link_libraries(commerrf simgrid mtest_f77)\n",
        "Line" : 15,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    },
    "teshsuite/smpi/mpich3-test/f77/datatype/CMakeLists.txt" : {
      "ObjectId" : "ea628372e0ad3cceef5332a9edd161e1bbf3a37a",
      "LastModified" : "2019-03-14T15:57:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# allctypesf hindex1f hindexed_blockf packef typecntsf\n\n# typem2f typename3f typenamef typesnamef\n",
        "Line" : 15,
        "CharPositionInLine" : 13
      },
      "CommentCount" : 1
    },
    "teshsuite/smpi/mpich3-test/f77/ext/CMakeLists.txt" : {
      "ObjectId" : "84ac36f620011698e61de55cc642cb2c8fe50dc1",
      "LastModified" : "2019-03-14T15:57:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  add_executable(allocmemf EXCLUDE_FROM_ALL allocmemf.f)\n\n#  add_executable(c2f2cf    EXCLUDE_FROM_ALL c2f2cf.f c2f2c.c)\n\n#  add_executable(ctypesinf EXCLUDE_FROM_ALL ctypesinf.f ctypesfromc.c)\n\n# add_dependencies(tests allocmemf c2f2cf ctypesinf)\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#  target_link_libraries(allocmemf simgrid mtest_f77)\n\n#  target_link_libraries(c2f2cf simgrid mtest_f77)\n\n#  target_link_libraries(ctypesinf simgrid mtest_f77)\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "teshsuite/smpi/mpich3-test/f77/info/CMakeLists.txt" : {
      "ObjectId" : "a8b8cdd5598c4ad84c4a355948bd4a070f56e0d4",
      "LastModified" : "2019-03-14T15:57:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "teshsuite/smpi/mpich3-test/f77/init/CMakeLists.txt" : {
      "ObjectId" : "6e51d8d9691e5313d45f57c78dd260811561c5ab",
      "LastModified" : "2019-03-14T15:57:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "teshsuite/smpi/mpich3-test/f77/pt2pt/CMakeLists.txt" : {
      "ObjectId" : "07fc59922cdc07d737be4c2e57647e58cea67991",
      "LastModified" : "2019-04-14T17:49:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  add_executable(mprobef  EXCLUDE_FROM_ALL mprobef.f)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# greqf mprobef\n",
        "Line" : 16,
        "CharPositionInLine" : 45
      },
      "2" : {
        "Text" : "#target_link_libraries(mprobef simgrid mtest_f77)\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "teshsuite/smpi/mpich3-test/f77/rma/CMakeLists.txt" : {
      "ObjectId" : "1cadf23029ea9b2ee61799ec4ea29142a7d7829b",
      "LastModified" : "2019-04-14T17:49:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# winscale2f winerrf\n",
        "Line" : 15,
        "CharPositionInLine" : 9
      },
      "CommentCount" : 1
    },
    "teshsuite/smpi/mpich3-test/f77/topo/CMakeLists.txt" : {
      "ObjectId" : "19223a34a83c06699b155217cf1a350b8ade860b",
      "LastModified" : "2019-03-14T15:57:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# dgraph_unwgtf dgraph_wgtf\n",
        "Line" : 12,
        "CharPositionInLine" : 13
      },
      "CommentCount" : 1
    },
    "teshsuite/smpi/mpich3-test/f77/util/CMakeLists.txt" : {
      "ObjectId" : "1387e60ec5aae7a0ac731e9671f63dd3dd0dda56",
      "LastModified" : "2019-03-14T15:57:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#F77 version of the mtest library\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "teshsuite/smpi/mpich3-test/f90/coll/CMakeLists.txt" : {
      "ObjectId" : "9651b8ecb0fdbb0e63e99cd044da5349097ccaac",
      "LastModified" : "2019-04-14T17:49:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "teshsuite/smpi/mpich3-test/f90/datatype/CMakeLists.txt" : {
      "ObjectId" : "5b2f44a0cd34c71f598cf0db54b1a97ee4c0d34b",
      "LastModified" : "2019-03-14T15:57:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# allctypesf90 createf90 get_elem_d get_elem_u\n",
        "Line" : 12,
        "CharPositionInLine" : 13
      },
      "1" : {
        "Text" : "# hindex1f90 hindexed_blockf90 \n",
        "Line" : 13,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "# packef90 sizeof structf trf90 typecntsf90 typem2f90 typename3f90\n\n# typenamef90 typesnamef90\n",
        "Line" : 15,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 3
    },
    "teshsuite/smpi/mpich3-test/f90/info/CMakeLists.txt" : {
      "ObjectId" : "0f3bd71c0f10f9c218c916128a0855d9e7685588",
      "LastModified" : "2019-03-14T15:57:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "teshsuite/smpi/mpich3-test/f90/init/CMakeLists.txt" : {
      "ObjectId" : "cd3e8f32ed24b902f0a12d44cea6bd762c05133e",
      "LastModified" : "2019-03-14T15:57:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "teshsuite/smpi/mpich3-test/f90/pt2pt/CMakeLists.txt" : {
      "ObjectId" : "5aa5cf9cdab0d6f41e7be3c44ed03f76f157fab2",
      "LastModified" : "2019-04-14T17:49:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# mprobef90 greqf90\n",
        "Line" : 12,
        "CharPositionInLine" : 15
      },
      "CommentCount" : 1
    },
    "teshsuite/smpi/mpich3-test/f90/rma/CMakeLists.txt" : {
      "ObjectId" : "44b91b15c7df17d480774beecb4a842900294fe6",
      "LastModified" : "2019-04-14T17:49:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# winerrf90\n",
        "Line" : 12,
        "CharPositionInLine" : 13
      },
      "1" : {
        "Text" : "# winscale2f90\n",
        "Line" : 16,
        "CharPositionInLine" : 9
      },
      "CommentCount" : 2
    },
    "teshsuite/smpi/mpich3-test/f90/util/CMakeLists.txt" : {
      "ObjectId" : "6f38ae4c5c90a00a017215386c4fcc9dc95dc2cf",
      "LastModified" : "2019-03-14T15:57:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#F90 version of the mtest library\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#fake dependency, to ensure mpi.mod is generated properly before\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "teshsuite/smpi/mpich3-test/group/CMakeLists.txt" : {
      "ObjectId" : "24a76deb090cad80ba4c1e2e3c5018de16b071f3",
      "LastModified" : "2019-03-14T15:57:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#groupnullincl glpid\n",
        "Line" : 12,
        "CharPositionInLine" : 69
      },
      "CommentCount" : 1
    },
    "teshsuite/smpi/mpich3-test/info/CMakeLists.txt" : {
      "ObjectId" : "69188228aa09e6f12cbadebbea851c4116baf219",
      "LastModified" : "2019-04-14T17:49:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "teshsuite/smpi/mpich3-test/init/CMakeLists.txt" : {
      "ObjectId" : "b589c1dcf04ccfc2da4a44dbb94a2336c46322c4",
      "LastModified" : "2019-03-14T15:57:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# not compiled files: attrself exitst3 timeout\n",
        "Line" : 12,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "teshsuite/smpi/mpich3-test/perf/CMakeLists.txt" : {
      "ObjectId" : "85e5185968d6c934b5d36d4adab1a7bdddf1f6a1",
      "LastModified" : "2019-03-14T15:57:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#not compiled files manyrma\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "teshsuite/smpi/mpich3-test/pt2pt/CMakeLists.txt" : {
      "ObjectId" : "50ad8f502c815cd50b488a2bf56970f32bd4b043",
      "LastModified" : "2019-04-14T17:49:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# not compiled files: big_count_status bsend1 bsend2 bsend3 bsend4 bsend5 bsendalign bsendfrag bsendpending mprobe\n\n# cancelrecv  icsend large_message pscancel  rqfreeb   sendself scancel_unmatch\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "teshsuite/smpi/mpich3-test/rma/CMakeLists.txt" : {
      "ObjectId" : "2e825777054ab8b0a08d73c35f90ed8a3b818535",
      "LastModified" : "2019-04-14T17:49:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# fence_shm fetchandadd_am fetchandadd fetchandadd_tree_am fetchandadd_tree \n\n#  linked_list_bench_lock_shr linked_list linked_list_fop linked_list_lockall \n\n#   mcs-mutex mixedsync mutex_bench lockcontention3 reqops\n\n# strided_getacc_indexed_shared rget-unlock \n\n# win_flavors win_shared_zerobyte win_shared_noncontig win_shared_noncontig_put \n\n# win_large_shm win_zero wintest  atomic_rmw_fop atomic_rmw_gacc  atomic_get atomic_rmw_cas\n\n# aint derived-acc-flush_local large-acc-flush_local\n\n#  win_shared_create win_shared_put_flush_get win_shared_rma_flush_load\n\n# wrma_flush_get\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "teshsuite/smpi/mpich3-test/topo/CMakeLists.txt" : {
      "ObjectId" : "f26f4e7f68615b821b8a57124eef353c8a334597",
      "LastModified" : "2019-03-14T15:57:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# not compiled files\n\n# cartmap1 dgraph_unwgt dims1 dims2 dims3 dims4 distgraph1 graphcr2 graphcr graphmap1 neighb_coll topodup topotest\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "teshsuite/surf/CMakeLists.txt" : {
      "ObjectId" : "ab86688c859fb4b540c7017370c4f862b8b48977",
      "LastModified" : "2019-03-14T15:57:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "teshsuite/xbt/CMakeLists.txt" : {
      "ObjectId" : "c966d5423d04ca207caf4569ea84d61180e85713",
      "LastModified" : "2019-03-14T15:57:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# 32 bits\n",
        "Line" : 49,
        "CharPositionInLine" : 34
      },
      "CommentCount" : 1
    },
    "tools/CMakeLists.txt" : {
      "ObjectId" : "821c0f21104e6fe43fd06e2d2c33fc184a7096fc",
      "LastModified" : "2019-03-14T15:57:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/cmake/CTestConfig.cmake" : {
      "ObjectId" : "3b87fa919ac41a019aeecb4dfa9b3a29e94db205",
      "LastModified" : "2019-03-14T15:57:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configure CTest. For details, see:\n\n# http://www.cmake.org/Wiki/CMake_Testing_With_CTest#Customizing_CTest\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#TIMEOUT FOR EACH TEST\n",
        "Line" : 14,
        "CharPositionInLine" : 34
      },
      "2" : {
        "Text" : "#TIMEOUT FOR EACH TEST\n",
        "Line" : 16,
        "CharPositionInLine" : 35
      },
      "CommentCount" : 3
    },
    "tools/cmake/CTestCustom.cmake" : {
      "ObjectId" : "868b4678962fa4547d3644f85e54174afe2ba119",
      "LastModified" : "2019-03-14T15:57:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/cmake/DefinePackages.cmake" : {
      "ObjectId" : "3e7a0a114b5f70dd2c000c3f57364a543559c7ba",
      "LastModified" : "2019-04-14T17:49:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### define source packages\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Boost context may not be available\n",
        "Line" : 413,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "### depend of some variables setted upper\n",
        "Line" : 779,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#ucontext\n",
        "Line" : 780,
        "CharPositionInLine" : 30
      },
      "4" : {
        "Text" : "# NOT ucontext\n",
        "Line" : 783,
        "CharPositionInLine" : 7
      },
      "5" : {
        "Text" : "### Simgrid Lib sources\n",
        "Line" : 788,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# these files get copied automatically to the html documentation\n",
        "Line" : 933,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# The list of cmake build directories is constructed from the following list.\n\n# Add your CMakeLists file here to see your subdir built.\n",
        "Line" : 970,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "tools/cmake/Distrib.cmake" : {
      "ObjectId" : "91b516c33cdb070934b3a26f4eb4e27c3a0f8aec",
      "LastModified" : "2019-03-14T15:57:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#########################################\n\n### Fill in the \"make install\" target ###\n\n#########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# doc\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# binaries\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# libraries\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# pkg-config files\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# include files\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# example files\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "###########################################\n\n### Fill in the \"make uninstall\" target ###\n\n###########################################\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "################################################################\n\n## Build a sain \"make dist\" target to build a source package ###\n\n##   containing only the files that I explicitely state      ###\n\n##   (instead of any cruft laying on my disk as CPack does)  ###\n\n################################################################\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# This is the complete list of what will be added to the source archive\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "##########################################\n\n### Fill in the \"make dist-dir\" target ###\n\n##########################################\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Doxygen, go away\n",
        "Line" : 201,
        "CharPositionInLine" : 85
      },
      "12" : {
        "Text" : "# Doxygen, you're getting annoying\n",
        "Line" : 202,
        "CharPositionInLine" : 86
      },
      "13" : {
        "Text" : "#message(${file})\n\n# This damn prefix is still set somewhere (seems to be in subdirs)\n",
        "Line" : 208,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Create the directory on need\n",
        "Line" : 212,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Actually copy the file\n",
        "Line" : 222,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "##########################################################\n\n### Link all sources to the bindir if srcdir != bindir ###\n\n##########################################################\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#message(${file})\n\n# This damn prefix is still set somewhere (seems to be in subdirs)\n",
        "Line" : 240,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Create the directory on need\n",
        "Line" : 244,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Actually copy the file\n",
        "Line" : 254,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "######################################\n\n### Fill in the \"make dist\" target ###\n\n######################################\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "###########################################\n\n### Fill in the \"make distcheck\" target ###\n\n###########################################\n",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Allow to test the \"make dist\"\n",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#######################################\n\n### Fill in the \"make check\" target ###\n\n#######################################\n",
        "Line" : 331,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#######################################\n\n### Fill in the \"make xxx-clean\" target ###\n\n#######################################\n",
        "Line" : 342,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "tools/cmake/Documentation.cmake" : {
      "ObjectId" : "61089c490ed0050b51c2db561ae6b963ab6d3f8a",
      "LastModified" : "2019-03-14T15:57:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###\n\n### Generate all parts of the documentation on non-Windows systems\n\n###\n\n###   - HTML with doxygen (reference and manual)\n\n###   - Javadoc (reference)\n\n###   - manpages (reference of tools)\n\n###\n\n###  This file is not loaded on windows\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### Generate the html documentation\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This is a workaround for older cmake versions (such as 2.8.7 on Ubuntu 12.04). These cmake versions do not provide\n\n# the DOXYGEN_VERSION variable and hence, building the documentation will always  fail. This code is the same as used\n\n# in the cmake library, version 3.\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "### Fill in the \"make gforge-sync\" target ###\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#### Generate the manpages\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "tools/cmake/Flags.cmake" : {
      "ObjectId" : "1d3262ba3555e01b439752a342ae0cf768b3eca8",
      "LastModified" : "2019-03-14T15:57:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n## This file is in charge of setting our paranoid flags with regard to warnings and optimization.\n\n##\n\n##   It is only used for gcc and clang. MSVC builds don't load this file.\n\n##\n\n##   These flags do break some classical CMake tests, so you don't\n\n##   want to do so before the very end of the configuration.\n\n##\n\n##   Other compiler flags (C/C++ standard version) are tested and set\n\n##   by the beginning of the configuration, directly in ~/CMakeList.txt\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ignore remark  #1418: external function definition with no prior declaration\n\n# 3179: deprecated conversion of string literal to char* (should be const char*)\n\n# 191: type qualifier is meaningless on cast type\n\n# 597: entity-kind \"entity\" will not be called for implicit or explicit conversions\n\n# 2330: argument of type \"type\" is incompatible with parameter of type \"type\" (dropping qualifiers)\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# don't care about class that become struct, avoid issue of empty C structs\n\n# size (coming from libunwind.h)\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# the one specific to C but refused by C++\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# NDEBUG gives a lot of \"initialized but unused variables\" errors. Don't die anyway.\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Activate the warnings on #if FOOBAR when FOOBAR has no value\n\n# It breaks on FreeBSD within Boost headers, so activate this only in Pure Hardcore debug mode.\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Se the optimisation flags\n\n# NOTE, we should CMAKE_BUILD_TYPE for this\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This is redundant (already in -03):\n",
        "Line" : 80,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Do not leak the current directory into the binaries\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Configure LTO\n\n# NOTE, cmake 3.0 has a INTERPROCEDURAL_OPTIMIZATION target\n\n#       property for this (http://www.cmake.org/cmake/help/v3.0/prop_tgt/INTERPROCEDURAL_OPTIMIZATION.html)\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# User wants LTO. Try if we can do that\n",
        "Line" : 100,
        "CharPositionInLine" : 15
      },
      "11" : {
        "Text" : "# On windows, we need 4.8 or higher to enable lto because of http://gcc.gnu.org/bugzilla/show_bug.cgi?id=50293\n\n#   We are experiencing assertion failures even with 4.8 on MinGW.\n\n#   Push the support forward: will see if 4.9 works when we test it.\n\n#\n\n# On Linux, we got the following with GCC 4.8.4 on Centos and Ubuntu\n\n#    lto1: internal compiler error: in output_die, at dwarf2out.c:8478\n\n#    Please submit a full bug report, with preprocessed source if appropriate.\n\n# So instead, we push the support forward\n",
        "Line" : 105,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# User wants LTO, and it seems usable. Go for it\n",
        "Line" : 135,
        "CharPositionInLine" : 15
      },
      "13" : {
        "Text" : "# See https://gcc.gnu.org/wiki/LinkTimeOptimizationFAQ#ar.2C_nm_and_ranlib:\n\n# \"Since version 4.9 gcc produces slim object files that only contain\n\n# the intermediate representation. In order to handle archives of\n\n# these objects you have to use the gcc wrappers:\n\n# gcc-ar, gcc-nm and gcc-ranlib.\"\n",
        "Line" : 137,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Forget it, do not optimize the code (because it confuses the MC):\n",
        "Line" : 150,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# But you can still optimize this:\n",
        "Line" : 152,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# honor parentheses when determining the order of expression evaluation.\n",
        "Line" : 166,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Try to make Mac a bit more complient to open source standards\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Avoid a failure seen with gcc 7.2.0 and ns3 3.27\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# http://stackoverflow.com/questions/10452262/create-64-bit-jni-under-windows\n\n# We don't want to ship libgcc_s_seh-1.dll nor libstdc++-6.dll\n",
        "Line" : 247,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# JNI searches for stdcalls\n",
        "Line" : 254,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# Specify the data model that we are using (yeah it may help Java)\n",
        "Line" : 260,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# 32 bits\n",
        "Line" : 261,
        "CharPositionInLine" : 34
      },
      "CommentCount" : 23
    },
    "tools/cmake/Java.cmake" : {
      "ObjectId" : "f9cee4947e4e04b4053dc19179bd14393380b00d",
      "LastModified" : "2019-03-14T15:57:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n## The Cmake definitions for the use of Java (and Scala)\n\n##   This file is loaded only if the Java option is activated\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Rules to build libsimgrid-java\n\n################################\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Rules to build simgrid.jar\n\n############################\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Files to include in simgrid.jar\n\n##\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Here is how to build simgrid.jar\n\n##\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "###\n\n### Pack the java libraries into the jarfile if asked to do so\n\n###\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Default arm (soft-float ABI)\n",
        "Line" : 114,
        "CharPositionInLine" : 55
      },
      "7" : {
        "Text" : "# There is no way to disable the dependency of mingw-64 on that lib, unfortunately nor to script cmake -E properly\n\n# So let's be brutal and copy it in any case (even on non-windows builds) from the location where appveyor provides it.\n\n# The copy is only expected to work on the appveyor builder, but that's all we need right now\n\n# since our users are directed to download that file as nightly build.\n",
        "Line" : 134,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# We need to fix the rpath of the simgrid-java library so that it\n\n#    searches the simgrid library in the right location\n\n#\n\n# Since we don't officially install the lib before copying it in\n\n# the jarfile, the lib is searched for where it was built. Given\n\n# how we unpack it, we need to instruct simgrid-java to forget\n\n# about the build path, and search in its current directory\n\n# instead.\n\n#\n\n# This has to be done with the classical Apple tools, as follows:\n",
        "Line" : 148,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 9
    },
    "tools/cmake/MaintainerMode.cmake" : {
      "ObjectId" : "4765bd44dfa1b434e25e0bb3ea3d0b8acfaac730",
      "LastModified" : "2019-04-14T17:49:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Change the following when we need a recent enough version of flexml to get the maintainer mode working\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Change the following when we need a recent enough version of flex to get the maintainer mode working.\n\n# Maintainer mode does NOT work with version 2.5.35!\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# the rest should only be changed if you understand what you're doing\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Let's generate header files required by SMPI when the call location tracing\n\n# has been activated.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Make sure there is no space after the redirection operator (>). I received\n\n# error messages in that case on my Debian system.\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#${CMAKE_HOME_DIRECTORY}/src/surf/xml/simgrid_dtd.l: ${CMAKE_HOME_DIRECTORY}/src/surf/xml/simgrid.dtd\n",
        "Line" : 178,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "#${CMAKE_HOME_DIRECTORY}/src/simdag/dax_dtd.l: ${CMAKE_HOME_DIRECTORY}/src/simdag/dax.dtd\n",
        "Line" : 185,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "#${CMAKE_HOME_DIRECTORY}/src/surf/xml/simgrid_dtd.h: ${CMAKE_HOME_DIRECTORY}/src/surf/xml/simgrid.dtd\n",
        "Line" : 191,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "#${CMAKE_HOME_DIRECTORY}/src/simdag/dax_dtd.h: ${CMAKE_HOME_DIRECTORY}/src/simdag/dax.dtd\n",
        "Line" : 199,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "#surf/xml/simgrid_dtd.c: surf/xml/simgrid_dtd.l\n",
        "Line" : 207,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "#simdag/dax_dtd.c: simdag/dax_dtd.l\n",
        "Line" : 213,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 11
    },
    "tools/cmake/MakeLib.cmake" : {
      "ObjectId" : "3d7d59f669e4a882990ec0dbbaf06feb4f094fa1",
      "LastModified" : "2019-03-14T15:57:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### Make Libs\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# On macOS, specify that rpath is useful to look for the dependencies\n\n# See https://gitlab.kitware.com/cmake/community/wikis/doc/cmake/RPATH-handling and Java.cmake\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# When installed, use system path\n",
        "Line" : 7,
        "CharPositionInLine" : 46
      },
      "3" : {
        "Text" : "# When executing from build tree, take the lib from the build path if exists\n\n# When executing from build tree, take the lib from the system path if exists\n",
        "Line" : 8,
        "CharPositionInLine" : 44
      },
      "4" : {
        "Text" : "# add the current location of libsimgrid-java.dynlib as a location for libsimgrid.dynlib\n\n# (useful when unpacking the native libraries from the jarfile)\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "###############################\n\n# Declare the library content #\n\n###############################\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Actually declare our libraries\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# The library can obviously use the internal headers\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# install that binary without breaking the rpath on Mac\n",
        "Line" : 36,
        "CharPositionInLine" : 29
      },
      "9" : {
        "Text" : "# Compute the dependencies of SimGrid\n\n#####################################\n\n# search for dlopen\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Compute the dependencies of SMPI\n\n##################################\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# for privatization\n",
        "Line" : 96,
        "CharPositionInLine" : 52
      },
      "12" : {
        "Text" : "# install that binary without breaking the rpath on Mac\n",
        "Line" : 103,
        "CharPositionInLine" : 27
      },
      "13" : {
        "Text" : "# install that binary without breaking the rpath on Mac\n",
        "Line" : 112,
        "CharPositionInLine" : 33
      },
      "14" : {
        "Text" : "# See https://github.com/HewlettPackard/foedus_code/blob/master/foedus-core/cmake/FindGccAtomic.cmake\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Fix a FTBFS on armel, mips, mipsel and friends (Debian's #872881)\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Dependencies from maintainer mode\n\n###################################\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "tools/cmake/MakeLibWin.cmake" : {
      "ObjectId" : "e7c5783059b4ee9c82a789c094cbafe5932b02ad",
      "LastModified" : "2019-03-14T15:57:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### Make Libs\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The library can obviously use the internal headers\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tools/cmake/Modules/FindGraphviz.cmake" : {
      "ObjectId" : "57f6771ea8c69906ff6ddaf79afc41a406a520ad",
      "LastModified" : "2019-03-14T15:57:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/cmake/Modules/FindLibdw.cmake" : {
      "ObjectId" : "9574bda8c0d1af3026c6567c08bf81a4ec12e388",
      "LastModified" : "2019-03-14T15:57:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/cmake/Modules/FindLibelf.cmake" : {
      "ObjectId" : "1e1af815ad5cdbafa77755f4e41235d443a900c7",
      "LastModified" : "2019-03-14T15:57:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/cmake/Modules/FindLibevent.cmake" : {
      "ObjectId" : "c55399591c02629cbd45d23b496e0e36a1970956",
      "LastModified" : "2019-03-14T15:57:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/cmake/Modules/FindLibunwind.cmake" : {
      "ObjectId" : "8ae23e59a5a7e4d11e5fe3d92c56744aec4de88e",
      "LastModified" : "2019-03-14T15:57:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Search for libunwind and components, both includes and libraries\n\n#\n\n# Copyright (C) 2003-2019 The SimGrid Team.\n\n# This is distributed under the LGPL licence but please contact us for\n\n# relicensing if you need. This is merely free software, no matter the licence.\n\n#\n\n#\n\n# Input environment variables:\n\n#    LIBUNWIND_HINT: path to libunwind installation (e.g., /usr)\n\n#                    (only needed for non-standard installs)\n\n#\n\n# You can tune the needed components here.\n\n# TODO: we should take this as a parameter if I knew how to do so.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# SimGrid needs unwind-ptrace on Linux and FreeBSD\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n#  Output variables:\n\n#     HAVE_LIBUNWIND     : if all components were found was found\n\n#     LIBUNWIND_LIBRARIES: List of all libraries to load (-lunwind -lunwind-x86_64 and such)\n\n#\n\n#  Other effects:\n\n#    - Calls include_directories() on where libunwind.h lives\n\n#    - Calls link_directories() on where the libs live\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Of course also need the core lib\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Let's assume we have it, and invalidate if parts are missing\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# Search for the header file\n\n#\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# Search for the library components\n\n#\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# message(\"     ${component}  ${PATH_LIBUNWIND_LIB_${component}}\")\n",
        "Line" : 69,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Apple forbids to link directly against its libunwind implementation\n\n# So let's comply to that stupid restriction and link against the System framework\n",
        "Line" : 75,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "#\n\n# Conclude and cleanup\n\n#\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "tools/cmake/Modules/FindLuaSimgrid.cmake" : {
      "ObjectId" : "00b9fb801b61194d06e3f773b4d90b1d86be20da",
      "LastModified" : "2019-03-14T15:57:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Search for the Lua 5.3 include files and libraries\n\n#\n\n#  Input variable:\n\n#     LUA_HINT: path to Lua installation -- only needed for non-standard installs\n\n#  Output variable:\n\n#     SIMGRID_HAVE_LUA         : if Lua was found\n\n#     LUA_LIBRARY      : the path to the dynamic library\n\n#     LUA_INCLUDE_DIR  : where to find lua.h\n\n#     LUA_VERSION_MAJOR: First part of the version (often, 5)\n\n#     LUA_VERSION_MINOR: Second part of the version (3 when we have 5.3)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Fink\n",
        "Line" : 19,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 20,
        "CharPositionInLine" : 13
      },
      "3" : {
        "Text" : "# Blastwave\n",
        "Line" : 21,
        "CharPositionInLine" : 11
      },
      "4" : {
        "Text" : "# I don't want a lua.a\n",
        "Line" : 26,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Extract the version info out of the header file\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Check that we have a sufficient version of Lua\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "tools/cmake/Modules/FindNS3.cmake" : {
      "ObjectId" : "1d5adfa3d9a31489d42d9970440dc09a469c7b78",
      "LastModified" : "2019-03-14T15:57:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find the NS3 library.\n\n#\n\n# The user can hint a path using the NS3_HINT option.\n\n#\n\n# Once done, the following will be defined:\n\n#\n\n#  NS3_INCLUDE_DIRS - the NS3 include directories\n\n#  NS3_LIBRARY_PATH - path to the libs\n\n#  NS3_LIBRARIES - link these to use NS3 (full path to libs)\n\n#\n\n# This could be improved in many ways (patches welcome):\n\n#  - No way to specify a minimal version (v3.10 is hardcoded).\n\n#  - No proper find_package() integration\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## ADDING A NS3 VERSION.\n\n#   - Add \"ns3.${version}-core ns3.${version}-core-debug ns3.${version}-core-optimized\" to the NAME line of the find_library below\n\n#   - Add \"include/ns3{version}\" to the PATH_SUFFIXES line of the find_path below\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Compute NS3_PATH\n",
        "Line" : 65,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "tools/cmake/Modules/FindPAPI.cmake" : {
      "ObjectId" : "e283f428cb29dfaceca94a9008ecfc8b118051d5",
      "LastModified" : "2019-03-14T15:57:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find PAPI headers and LIBRARY.\n\n#\n\n# Usage of this module as follows:\n\n#\n\n#     find_package(PAPI)\n\n#\n\n# Variables used by this module, they can change the default behaviour and need\n\n# to be set before calling find_package:\n\n#\n\n#  PAPI_PREFIX         Set this variable to the root installation of\n\n#                      libpapi if the module has problems finding the\n\n#                      proper installation path.\n\n#\n\n# Variables defined by this module:\n\n#\n\n#  PAPI_FOUND              System has PAPI LIBRARY and headers\n\n#  PAPI_LIBRARY          The PAPI library\n\n#  PAPI_INCLUDE_DIRS       The location of PAPI headers\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# HINTS gets searched before PATHS\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# HINTS gets searched before PATHS\n",
        "Line" : 46,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#include(FindPackageHandleStandardArgs)\n\n#find_package_handle_standard_args(PAPI DEFAULT_MSG\n\n#    PAPI_LIBRARY\n\n#    PAPI_INCLUDE_DIRS\n\n#)\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "tools/cmake/Modules/FindValgrind.cmake" : {
      "ObjectId" : "e2e0ba6f53691172ab0aae62efccd8b7a8ee3480",
      "LastModified" : "2019-03-14T15:57:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/cmake/Option.cmake" : {
      "ObjectId" : "d4956fa099cdfd7bf1d782c67b50b5696808ae0f",
      "LastModified" : "2019-04-14T17:49:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### ARGs use -D[var]=[ON/OFF] or [1/0] or [true/false](see below)\n\n### ex: cmake -Denable_java=ON -Denable_ns3=ON ./\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# How to build\n\n###\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Optional modules\n\n###\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# PAPI does not support windows (they did in 3.7, but not anymore in 5.x)\n\n# See http://icl.cs.utk.edu/papi/custom/index.html?lid=62&slid=96\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Internal targets used by jenkins\n\n###\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Cmake, Y U NO hide your garbage??\n\n###\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "tools/cmake/Tests.cmake" : {
      "ObjectId" : "f587730138668ce7d808dbaef6ac3573ffb25442",
      "LastModified" : "2019-04-14T17:49:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#    message(STATUS \"tesh wrapper: ${TESH_WRAPPER}\")\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#some tests may take forever on non futexes systems, using busy_wait with n cores < n workers\n\n# default to posix for these tests if futexes are not supported\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# remove name\n",
        "Line" : 57,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "# remove all factories\n",
        "Line" : 58,
        "CharPositionInLine" : 26
      },
      "4" : {
        "Text" : "# Always available, thanks to C++11 threads\n",
        "Line" : 62,
        "CharPositionInLine" : 43
      },
      "5" : {
        "Text" : "# remove name\n",
        "Line" : 73,
        "CharPositionInLine" : 25
      },
      "6" : {
        "Text" : "# remove all factories\n",
        "Line" : 74,
        "CharPositionInLine" : 26
      },
      "7" : {
        "Text" : "# Always available, thanks to C++11 threads\n",
        "Line" : 78,
        "CharPositionInLine" : 43
      },
      "8" : {
        "Text" : "# New tests should use the Catch Framework\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "tools/cmake/cross-mingw.cmake" : {
      "ObjectId" : "b82b5c52aa0a624658b7e4a61fba28e90e3b24ba",
      "LastModified" : "2019-03-14T15:57:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# cmake -DCMAKE_TOOLCHAIN_FILE=tools/cmake/cross-mingw.cmake ..\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tools/docker/Makefile" : {
      "ObjectId" : "06cc7a7c6a9cda4806c4a37f3dcb5cc3f87fce83",
      "LastModified" : "2019-03-14T15:57:45Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tools/graphicator/CMakeLists.txt" : {
      "ObjectId" : "724853c677f90085b011b909fb90a84f62a65c8c",
      "LastModified" : "2019-03-14T15:57:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Clean generated files\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tools/tesh/CMakeLists.txt" : {
      "ObjectId" : "ed44f8911ef2be0aca54c71944894422c0ee0890",
      "LastModified" : "2019-03-14T15:57:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 81,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 5861
}