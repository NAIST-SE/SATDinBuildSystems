{
  "Repository" : "6723731",
  "Revision" : "HEAD",
  "ObjectId" : "570b7a8325dab79fe2ceb162154fe02a356df1cc",
  "CommitTime" : "2019-01-27T14:19:18Z",
  "Files" : {
    "Makefile" : {
      "ObjectId" : "8244ab92cc3cd3a4bcf8e2085a50af5c57e86ac2",
      "LastModified" : "2017-07-09T10:49:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# This little makefile compiles the subprojects and installs their binaries\n\n# into the bin directory.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "bf2any/Makefile" : {
      "ObjectId" : "419181bdad9ec10bf2890187066ecbfd0bd80e69",
      "LastModified" : "2018-09-16T13:54:40Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# The real makefile is VERY GNU make specific, so here's a POSIX makefile\n\n# to forward the basic requests.\n\n# But don't actually label it because that will break a really old make.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "extras/Makefile" : {
      "ObjectId" : "0935d17293a75aa0a59c83506a34022590018f79",
      "LastModified" : "2017-07-09T10:49:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# The real makefile is VERY GNU make specific, so here's a POSIX makefile\n\n# to forward the basic requests.\n\n# But don't actually label it because that will break a really old make.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tritium/Makefile" : {
      "ObjectId" : "6d946aa6be69793b394183739564662ab89efb1d",
      "LastModified" : "2017-07-09T10:49:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# The real makefile is VERY GNU make specific, so here's a POSIX makefile\n\n# to forward the basic requests.\n\n# But don't actually label it because that will break a really old make.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If you don't have GNU make you can compile with a simple command:\n\n#     cc -O -o bfi *.c\n\n# \n\n# but without any of the big options.\n\n# \n\n# To do a more complex manual build you need:\n\n# \n\n# cc -DCNF -DVERSION='VS_S(Manual Build)' -o bfi *.c\n\n# \n\n# Plus maybe one or more of these\n\n#     -DDISABLE_DYNASM\n\n#     -DDISABLE_TCCLIB\n\n#     -DDISABLE_GNULIGHTNING\n\n#     -DDISABLE_DLOPEN\n\n#\n\n# For example:\n\n#\n\n# cc -DCNF -DVERSION='VS_S(Manual Build)' -DDISABLE_DYNASM -o bfi *.c -llightning -ltcc -ldl\n\n#\n\n# The DynASM is the most complex to build manually; see the GNU Makefile.\n\n# The other options should work fine given the necessary libraries,\n\n# which will have to be added to the command line.\n\n#\n\n# Note GNU Lightning V1 needs to be flagged with -DGNULIGHTv1\n\n#\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 4
  },
  "ElapsedTime" : 937
}