{
  "Repository" : "11438791",
  "Revision" : "HEAD",
  "ObjectId" : "a18483e1928e9d8d788f0a5172ac950558bc5883",
  "CommitTime" : "2019-02-07T18:27:26Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "b3f92032e28b0d2c03589074f5177c2749c0d849",
      "LastModified" : "2018-05-01T21:03:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This CMakeLists.txt is not meant to actually work!\n\n# It only serves as a dummy project to make CLion work properly when it comes to symbol resolution and all the nice\n\n# features dependent on that. Building must still be done on the command line using the automake build chain\n\n# If you load this project in CLion and would like to run/debug executables, make sure to remove the \"Build\" entry from\n\n# the run/debug configuration as otherwise CLion will try to build this project with cmake, failing horribly.\n\n# You'll also have to manually change the executable in the configuration to the correct path of the already built executable\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Makefile.am" : {
      "ObjectId" : "d0bcb77798548c2cfad92ff422185bbff2cae70c",
      "LastModified" : "2018-05-18T21:58:19Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#not installed\n",
        "Line" : 24,
        "CharPositionInLine" : 44
      },
      "1" : {
        "Text" : "# Syscoin: disable the test until upstream switches from convoluted comparison tool\n\n# Ref https://github.com/syscoin/syscoin/issues/4545\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## $(MKDIR_P) qa/tmp\n\n## @qa/pull-tester/run-syscoind-for-test.sh $(JAVA) -jar $(JAVA_COMPARISON_TOOL) qa/tmp/compTool $(COMPARISON_TOOL_REORG_TESTS) 2>&1\n",
        "Line" : 211,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 3
    },
    "contrib/syscoin-qt.pro" : {
      "ObjectId" : "48b56f33e3c43bd21c109c484f95f89c98cbf41d",
      "LastModified" : "2018-05-01T21:03:38Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "depends/Makefile" : {
      "ObjectId" : "8b67bce9d8468a83b6d3d236d3ee1390b9fc8591",
      "LastModified" : "2018-05-01T21:03:38Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "share/qt/protobuf.pri" : {
      "ObjectId" : "865fe865550ae21f2eec4bb7c8f8c1817bdf1bce",
      "LastModified" : "2018-05-01T21:03:38Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Based on: http://code.google.com/p/ostinato/source/browse/protobuf.pri\n\n#\n\n# Qt qmake integration with Google Protocol Buffers compiler protoc\n\n#\n\n# To compile protocol buffers with qt qmake, specify PROTOS variable and\n\n# include this file\n\n#\n\n# Example:\n\n# PROTOS = a.proto b.proto\n\n# include(protobuf.pri)\n\n#\n\n# Set PROTO_PATH if you need to set the protoc --proto_path search path\n\n# Set PROTOC to the path to the protoc compiler if it is not in your $PATH\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/Makefile.am" : {
      "ObjectId" : "eb8849160160799142d142ad48c6db876faef087",
      "LastModified" : "2018-08-23T21:25:55Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2013-2016 The Bitcoin Core developers\n\n# Copyright (c) 2014-2018 The Syscoin Core developers\n\n# Distributed under the MIT software license, see the accompanying\n\n# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Make is not made aware of per-object dependencies to avoid limiting building parallelization\n\n# But to build the less dependent modules first, we manually select their order here:\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# syscoin core #\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# server: shared between syscoind and syscoin-qt\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# wallet: shared between syscoind and syscoin-qt, but only linked\n\n# when wallet enabled\n",
        "Line" : 305,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# crypto primitives library\n",
        "Line" : 322,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# consensus: shared between all executables that validate any consensus rules.\n",
        "Line" : 346,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# common: shared between syscoind, and syscoin-qt and non-server tools\n",
        "Line" : 383,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# util: shared between all executables.\n\n# This library *must* be included to make sure that the glibc\n\n# backward-compatibility objects and their sanity checks are linked.\n",
        "Line" : 407,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# cli: shared between syscoin-cli and syscoin-qt\n",
        "Line" : 434,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\n",
        "Line" : 442,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# syscoind binary #\n",
        "Line" : 444,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# syscoin-cli binary #\n",
        "Line" : 470,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#\n",
        "Line" : 486,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# syscoin-tx binary #\n",
        "Line" : 488,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#\n",
        "Line" : 507,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# syscoinconsensus library #\n",
        "Line" : 509,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#\n",
        "Line" : 524,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "## FIXME: How to get the appropriate modulename_CPPFLAGS in here?\n",
        "Line" : 568,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 19
    },
    "src/leveldb/Makefile" : {
      "ObjectId" : "f7cc7d736c4f20d6cab6e760d43b76e880b80e95",
      "LastModified" : "2018-05-01T21:03:38Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n\n# Use of this source code is governed by a BSD-style license that can be\n\n# found in the LICENSE file. See the AUTHORS file for names of contributors.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------\n\n# Uncomment exactly one of the lines labelled (A), (B), and (C) below\n\n# to switch between compilation modes.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# (A) Production use (optimized mode)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# (B) Debug mode, w/ full line-level debugging symbols\n\n# OPT ?= -g2\n\n# (C) Profiling mode: opt, but w/debugging symbols\n\n# OPT ?= -O2 -g2 -DNDEBUG\n\n#-----------------------------------------------\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# detect what platform we're building on\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# this file is generated by the previous line to set build flags and sources\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Put the object files in a subdirectory, but the application at the top of the object dir.\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# On Linux may need libkyotocabinet-dev for dependency.\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Note: iOS should probably be using libtool, not ar.\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Should we build shared libraries?\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Many leveldb test apps use non-exported API's. Only build a subset for testing.\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Update db.h if you change these.\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# PLATFORM_SHARED_EXT\n",
        "Line" : 140,
        "CharPositionInLine" : 7
      },
      "13" : {
        "Text" : "# For iOS, create universal object libraries to be used on both the simulator and\n\n# a device.\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "src/secp256k1/Makefile.am" : {
      "ObjectId" : "6427dd38ca136916015cd261e2306f12d4a2f689",
      "LastModified" : "2018-05-01T21:03:38Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/univalue/Makefile.am" : {
      "ObjectId" : "6c1ec81e63fb7c75bb6ce4b7fefe63b7d6038b69",
      "LastModified" : "2018-05-01T21:03:38Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 1,
    "QMAKE" : 2,
    "MAKEFILE" : 2,
    "AUTOMAKE" : 4
  },
  "ElapsedTime" : 6567
}