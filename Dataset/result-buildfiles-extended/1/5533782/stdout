{
  "Repository" : "5533782",
  "Revision" : "HEAD",
  "ObjectId" : "3a01fefe1e7a10ca9f2358e5624a6d58dc5caa2c",
  "CommitTime" : "2019-04-19T03:38:21Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "47dadab82c06a9385333d31c46efe7e69cfae04e",
      "LastModified" : "2019-04-06T13:35:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# In case of both legacy and glvnd OpenGL libraries found. Prefer GLVND\n",
        "Line" : 4,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Qt path set by user or env var\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Dependencies path set by user or env var\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Must be a string in the format of \"x.x.x-rcx\"\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Binary Versioning for Windows\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Disable pointless constant condition warnings\n",
        "Line" : 99,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 6
    },
    "UI/CMakeLists.txt" : {
      "ObjectId" : "8e88ff2d213ca2548cec3d3653a682a146c21303",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ----------------------------------------------------------------------------\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "UI/frontend-plugins/CMakeLists.txt" : {
      "ObjectId" : "908b5c768bbc48902ace1a6823996b1958e51cd5",
      "LastModified" : "2019-04-06T13:35:08Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "UI/frontend-plugins/decklink-output-ui/CMakeLists.txt" : {
      "ObjectId" : "106c8cb6805cec27e9540fd68d025168f65f5be2",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "UI/frontend-plugins/frontend-tools/CMakeLists.txt" : {
      "ObjectId" : "a3d5d501302504e296006ff015e024457c4a4db5",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "UI/obs-frontend-api/CMakeLists.txt" : {
      "ObjectId" : "1d5ca9a8ec6875b31b03c82cdffd5a6500d68ae0",
      "LastModified" : "2016-10-16T07:08:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "UI/win-update/updater/CMakeLists.txt" : {
      "ObjectId" : "917144d1d6d99483fac83da6a9514b381b599b67",
      "LastModified" : "2019-04-06T13:35:08Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "UI/xdg-data/CMakeLists.txt" : {
      "ObjectId" : "9acd14e835a26471281bf8f71b12e5fb7461b5c6",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Modules/CopyMSVCBins.cmake" : {
      "ObjectId" : "d5c67cc67ff363eef11395664ed05a0fee52fef5",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Doesn't realy make sense anywhere else\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Internal variable to avoid copying more than once\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Modules/FindAppKit.cmake" : {
      "ObjectId" : "1cc1e84514b73e85e28b7a67601848ee8495de4c",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Once done these will be defined:\n\n#\n\n#  APPKIT_FOUND\n\n#  APPKIT_LIBRARIES\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindCXX11.cmake" : {
      "ObjectId" : "a62777558faf823716ea6dfe1ad0a2aaf061f071",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Finds if the compiler has C++11 support\n\n# This module can be used to detect compiler flags for using C++11, and checks\n\n# a small subset of the language.\n\n#\n\n# The following variables are set:\n\n#   CXX11_FLAGS - flags to add to the CXX compiler for C++11 support\n\n#   CXX11_FOUND - true if the compiler supports C++11\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#gcc\n",
        "Line" : 23,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "#Gnu and Intel Linux\n",
        "Line" : 26,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "#Microsoft Visual Studio, and everything that automatically accepts C++11\n",
        "Line" : 29,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "#Intel windows\n",
        "Line" : 31,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 5
    },
    "cmake/Modules/FindDBus.cmake" : {
      "ObjectId" : "036695841270f798db66fe41f9ef07101273759c",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Once done these will be defined:\n\n#\n\n#  DBUS_FOUND\n\n#  DBUS_INCLUDE_DIRS\n\n#  DBUS_LIBRARIES\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindFFmpeg.cmake" : {
      "ObjectId" : "520669588bc785245018bef1033ca57481d7296d",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# This module defines the following variables:\n\n#\n\n#  FFMPEG_FOUND - All required components and the core library were found\n\n#  FFMPEG_INCLUDE_DIRS - Combined list of all components include dirs\n\n#  FFMPEG_LIBRARIES - Combined list of all componenets libraries\n\n#  FFMPEG_VERSION_STRING - Version of the first component requested\n\n#\n\n# For each requested component the following variables are defined:\n\n#\n\n#  FFMPEG_<component>_FOUND - The component was found\n\n#  FFMPEG_<component>_INCLUDE_DIRS - The components include dirs\n\n#  FFMPEG_<component>_LIBRARIES - The components libraries\n\n#  FFMPEG_<component>_VERSION_STRING - The components version string\n\n#  FFMPEG_<component>_VERSION_MAJOR - The components major version\n\n#  FFMPEG_<component>_VERSION_MINOR - The components minor version\n\n#  FFMPEG_<component>_VERSION_MICRO - The components micro version\n\n#\n\n# <component> is the uppercase name of the component\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindFontconfig.cmake" : {
      "ObjectId" : "205a9f51b837835efc8fa74d6212e7a5bbe7b55a",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Once done these will be defined:\n\n#\n\n#  FONTCONFIG_FOUND\n\n#  FONTCONFIG_INCLUDE_DIRS\n\n#  FONTCONFIG_LIBRARIES\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindFreetype.cmake" : {
      "ObjectId" : "f1223f69a1097fc3e04707190fd46e4bc284d886",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Once done these will be defined:\n\n#\n\n#  FREETYPE_FOUND\n\n#  FREETYPE_INCLUDE_DIRS\n\n#  FREETYPE_LIBRARIES\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindIconv.cmake" : {
      "ObjectId" : "7a2c9a2189b58af257abaf1ab11de673b110e152",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Once done these will be defined:\n\n#\n\n#  ICONV_FOUND\n\n#  ICONV_INCLUDE_DIRS\n\n#  ICONV_LIBRARIES\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindJack.cmake" : {
      "ObjectId" : "4bdfe0a7e7b87c438e07e8ac45f8a90c79ccd13e",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find jack-2.6\n\n# Once done this will define\n\n#\n\n#  JACK_FOUND - system has jack\n\n#  JACK_INCLUDE_DIRS - the jack include directory\n\n#  JACK_LIBRARIES - Link these to use jack\n\n#  JACK_DEFINITIONS - Compiler switches required for using jack\n\n#\n\n#  Copyright (c) 2008 Andreas Schneider <mail@cynapses.org>\n\n#  Modified for other libraries by Lasse Kärkkäinen <tronic>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# show the JACK_INCLUDE_DIRS and JACK_LIBRARIES variables only in the advanced view\n",
        "Line" : 78,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "cmake/Modules/FindJansson.cmake" : {
      "ObjectId" : "8e9b3543acf49a7356f1ebd4f51bbaec877842a3",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Once done these will be defined:\n\n#\n\n#  JANSSON_FOUND\n\n#  JANSSON_INCLUDE_DIRS\n\n#  JANSSON_LIBRARIES\n\n#  JANSSON_VERSION\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindLibUDev.cmake" : {
      "ObjectId" : "7731ec0eba0d373b88ed5ef8fe4308a15c7694ad",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Once done these will be defined:\n\n#\n\n#  UDEV_FOUND\n\n#  UDEV_INCLUDE_DIRS\n\n#  UDEV_LIBRARIES\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindLibVLC.cmake" : {
      "ObjectId" : "c8cb555b9fc425ba450070edb558cf3421f1f7ca",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Once done these will be defined:\n\n#\n\n#  LIBVLC_FOUND\n\n#  LIBVLC_INCLUDE_DIRS\n\n#  LIBVLC_LIBRARIES\n\n#\n\n# For use in OBS: \n\n#\n\n#  VLC_INCLUDE_DIR\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindLibcurl.cmake" : {
      "ObjectId" : "5d4906a5ea4602978fc63c7778db2ca59b9ba6cc",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Once done these will be defined:\n\n#\n\n#  LIBCURL_FOUND\n\n#  LIBCURL_INCLUDE_DIRS\n\n#  LIBCURL_LIBRARIES\n\n#\n\n# For use in OBS:\n\n#\n\n#  CURL_INCLUDE_DIR\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindLibfdk.cmake" : {
      "ObjectId" : "4930d81efb3c792c37d98839fe9315c052eb680e",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Once done these will be defined:\n\n#\n\n#  LIBFDK_FOUND\n\n#  LIBFDK_INCLUDE_DIRS\n\n#  LIBFDK_LIBRARIES\n\n#\n\n# For use in OBS: \n\n#\n\n#  Libfdk_INCLUDE_DIR\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindLibspeexdsp.cmake" : {
      "ObjectId" : "be1d9726520dbb5b9e5250ff12115a054c7de0e2",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Once done these will be defined:\n\n#\n\n#  LIBSPEEXDSP_FOUND\n\n#  LIBSPEEXDSP_INCLUDE_DIRS\n\n#  LIBSPEEXDSP_LIBRARIES\n\n#\n\n# For use in OBS:\n\n#\n\n#  SPEEXDSP_INCLUDE_DIR\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindLibsysinfo.cmake" : {
      "ObjectId" : "b1b176e8c7022c1f96ed70e8e6ea0ee0c0a9f806",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Once done these will be defined:\n\n#\n\n#  SYSINFO_FOUND\n\n#  SYSINFO_INCLUDE_DIRS\n\n#  SYSINFO_LIBRARIES\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindLibv4l2.cmake" : {
      "ObjectId" : "bffa24f8258e05c901c82da9f70fa564d78294ff",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Once done these will be defined:\n\n#\n\n#  LIBV4L2_FOUND\n\n#  LIBV4L2_INCLUDE_DIRS\n\n#  LIBV4L2_LIBRARIES\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindLibx264.cmake" : {
      "ObjectId" : "a968b3452839f9d06fd132a4b67b08720c856422",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Once done these will be defined:\n\n#\n\n#  LIBX264_FOUND\n\n#  LIBX264_INCLUDE_DIRS\n\n#  LIBX264_LIBRARIES\n\n#\n\n# For use in OBS: \n\n#\n\n#  X264_INCLUDE_DIR\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindLuajit.cmake" : {
      "ObjectId" : "ddd094803a8fc29b6290e9591b75a0afbc48d1b0",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Once done these will be defined:\n\n#\n\n#  LUAJIT_FOUND\n\n#  LUAJIT_INCLUDE_DIRS\n\n#  LUAJIT_LIBRARIES\n\n#\n\n# For use in OBS: \n\n#\n\n#  LUAJIT_INCLUDE_DIR\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindMbedTLS.cmake" : {
      "ObjectId" : "954df18e8a2943a2d89d637aaed550bebe553b0f",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Once done these will be defined:\n\n#\n\n#  LIBMBEDTLS_FOUND\n\n#  LIBMBEDTLS_INCLUDE_DIRS\n\n#  LIBMBEDTLS_LIBRARIES\n\n#\n\n# For use in OBS:\n\n#\n\n#  MBEDTLS_INCLUDE_DIR\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If we're on MacOS or Linux, please try to statically-link mbedtls.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Sometimes mbedtls is split between three libs, and sometimes it isn't.\n\n# If it isn't, let's check if the symbols we need are all in MBEDTLS_LIB.\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If we find all three libraries, then go ahead.\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Otherwise, if we find MBEDTLS_LIB, and it has both CRYPTO and x509\n\n# within the single lib (i.e. a windows build environment), then also\n\n# feel free to go ahead.\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Now we've accounted for the 3-vs-1 library case:\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/Modules/FindPythonDeps.cmake" : {
      "ObjectId" : "8d1a53b3c1a3d437d67fa4c65357f05df25c3c0c",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Once done these will be defined:\n\n#\n\n#  PYTHON_FOUND\n\n#  PYTHON_INCLUDE_DIRS\n\n#  PYTHON_LIBRARIES\n\n#\n\n# For use in OBS:\n\n#\n\n#  PYTHON_INCLUDE_DIR\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindRSSDK.cmake" : {
      "ObjectId" : "bd008dbcbd8fdbe1cb5169920c08965bd2d20c2a",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Once done these will be defined:\n\n#\n\n#  RSSDK_FOUND\n\n#  RSSDK_INCLUDE_DIRS\n\n#  RSSDK_LIBRARIES\n\n#\n\n# For use in OBS:\n\n#\n\n#  RSSDK_INCLUDE_DIR\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindSwigDeps.cmake" : {
      "ObjectId" : "95a83cfc6b817fab5fa3224cfb4c760530e1fea4",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Modules/FindThreads.cmake" : {
      "ObjectId" : "d071ff58fa1580624f58f0044a84e5df89b262f8",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindThreads\n\n# -----------\n\n#\n\n# This module determines the thread library of the system.\n\n#\n\n# The following import target is created\n\n#\n\n# ::\n\n#\n\n#   CMake::Threads\n\n#\n\n# The following variables are set\n\n#\n\n# ::\n\n#\n\n#   THREADS_FOUND\n\n#   THREADS_LIBRARIES\n\n#   THREADS_DEFINITIONS\n\n#\n\n# Legacy variables\n\n#\n\n# ::\n\n#\n\n#   CMAKE_THREAD_LIBS_INIT     - the thread library\n\n#   CMAKE_THREAD_DEFS_INIT     - the thread compile definitions\n\n#   CMAKE_USE_SPROC_INIT       - are we using sproc?\n\n#   CMAKE_USE_WIN32_THREADS_INIT - using WIN32 threads?\n\n#   CMAKE_USE_PTHREADS_INIT    - are we using pthreads\n\n#   CMAKE_HP_PTHREADS_INIT     - are we using hp pthreads\n\n#\n\n# For systems with multiple thread libraries, caller can set\n\n#\n\n# ::\n\n#\n\n#   CMAKE_THREAD_PREFER_PTHREAD\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2002-2014 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Do we have sproc?\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# We have sproc\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Do we have pthreads?\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#\n\n# We have pthread.h\n\n# Let's check for the library now.\n\n#\n",
        "Line" : 72,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Check if pthread functions are in normal C library\n",
        "Line" : 79,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Do we have -lpthreads\n",
        "Line" : 122,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# Ok, how about -lpthread\n",
        "Line" : 130,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# On sun also check for -lthread\n",
        "Line" : 139,
        "CharPositionInLine" : 10
      },
      "10" : {
        "Text" : "# Use libcma if it exists and can be used.  It provides more\n\n# symbols than the plain pthread library.  CMA threads\n\n# have actually been deprecated:\n\n#   http://docs.hp.com/en/B3920-90091/ch12s03.html#d0e11395\n\n#   http://docs.hp.com/en/947/d8.html\n\n# but we need to maintain compatibility here.\n\n# The CMAKE_HP_PTHREADS setting actually indicates whether CMA threads\n\n# are available.\n",
        "Line" : 165,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 11
    },
    "cmake/Modules/FindX11_XCB.cmake" : {
      "ObjectId" : "7611b088820475156284556be9d0ae77e4d39e73",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find libX11-xcb\n\n# Once done this will define\n\n#\n\n# X11_XCB_FOUND - system has libX11-xcb\n\n# X11_XCB_LIBRARIES - Link these to use libX11-xcb\n\n# X11_XCB_INCLUDE_DIR - the libX11-xcb include dir\n\n# X11_XCB_DEFINITIONS - compiler switches required for using libX11-xcb\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2011 Fredrik Höglund <fredrik@kde.org>\n\n# Copyright (c) 2008 Helio Chissini de Castro, <helio@kde.org>\n\n# Copyright (c) 2007 Matthias Kretz, <kretz@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/Modules/FindXCB.cmake" : {
      "ObjectId" : "7f948bc7c1afac72d80e563187cdbb4bbec4273c",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find XCB on a Unix system\n\n#\n\n# This will define:\n\n#\n\n#   XCB_FOUND        - True if xcb is available\n\n#   XCB_LIBRARIES    - Link these to use xcb\n\n#   XCB_INCLUDE_DIRS - Include directory for xcb\n\n#   XCB_DEFINITIONS  - Compiler flags for using xcb\n\n#\n\n# In addition the following more fine grained variables will be defined:\n\n#\n\n#   XCB_XCB_FOUND        XCB_XCB_INCLUDE_DIR        XCB_XCB_LIBRARY\n\n#   XCB_UTIL_FOUND       XCB_UTIL_INCLUDE_DIR       XCB_UTIL_LIBRARY\n\n#   XCB_COMPOSITE_FOUND  XCB_COMPOSITE_INCLUDE_DIR  XCB_COMPOSITE_LIBRARY\n\n#   XCB_DAMAGE_FOUND     XCB_DAMAGE_INCLUDE_DIR     XCB_DAMAGE_LIBRARY\n\n#   XCB_XFIXES_FOUND     XCB_XFIXES_INCLUDE_DIR     XCB_XFIXES_LIBRARY\n\n#   XCB_RENDER_FOUND     XCB_RENDER_INCLUDE_DIR     XCB_RENDER_LIBRARY\n\n#   XCB_RANDR_FOUND      XCB_RANDR_INCLUDE_DIR      XCB_RANDR_LIBRARY\n\n#   XCB_SHAPE_FOUND      XCB_SHAPE_INCLUDE_DIR      XCB_SHAPE_LIBRARY\n\n#   XCB_DRI2_FOUND       XCB_DRI2_INCLUDE_DIR       XCB_DRI2_LIBRARY\n\n#   XCB_GLX_FOUND        XCB_GLX_INCLUDE_DIR        XCB_GLX_LIBRARY\n\n#   XCB_SHM_FOUND        XCB_SHM_INCLUDE_DIR        XCB_SHM_LIBRARY\n\n#   XCB_XV_FOUND         XCB_XV_INCLUDE_DIR         XCB_XV_LIBRARY\n\n#   XCB_XINPUT_FOUND     XCB_XINPUT_INCLUDE_DIR     XCB_XINPUT_LIBRARY\n\n#   XCB_SYNC_FOUND       XCB_SYNC_INCLUDE_DIR       XCB_SYNC_LIBRARY\n\n#   XCB_XTEST_FOUND      XCB_XTEST_INCLUDE_DIR      XCB_XTEST_LIBRARY\n\n#   XCB_ICCCM_FOUND      XCB_ICCCM_INCLUDE_DIR      XCB_ICCCM_LIBRARY\n\n#   XCB_EWMH_FOUND       XCB_EWMH_INCLUDE_DIR       XCB_EWMH_LIBRARY\n\n#   XCB_IMAGE_FOUND      XCB_IMAGE_INCLUDE_DIR      XCB_IMAGE_LIBRARY\n\n#   XCB_RENDERUTIL_FOUND XCB_RENDERUTIL_INCLUDE_DIR XCB_RENDERUTIL_LIBRARY\n\n#   XCB_KEYSYMS_FOUND    XCB_KEYSYMS_INCLUDE_DIR    XCB_KEYSYMS_LIBRARY\n\n#\n\n# Copyright (c) 2011 Fredrik Höglund <fredrik@kde.org>\n\n# Copyright (c) 2013 Martin Gräßlin <mgraesslin@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# iterate through the list of requested components, and check that we know them all.\n\n# If not, fail.\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# compatibility for old variable naming\n",
        "Line" : 224,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 231,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# compatibility for old variable naming\n",
        "Line" : 248,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "cmake/Modules/FindZLIB.cmake" : {
      "ObjectId" : "a7b23d3dbc690698c8e54841e73f31ea5ea1c6a4",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Once done these will be defined:\n\n#\n\n#  ZLIB_FOUND\n\n#  ZLIB_INCLUDE_DIRS\n\n#  ZLIB_LIBRARIES\n\n#\n\n# For use in OBS: \n\n#\n\n#  ZLIB_INCLUDE_DIR\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/IDLFileHelper.cmake" : {
      "ObjectId" : "059a08c9705b9a12dc57ee19bbf0cddda8b8598b",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Modules/ObsCpack.cmake" : {
      "ObjectId" : "d9564b92cfa0eeba2b0d5fddcf955815678e2afc",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Modules/ObsHelpers.cmake" : {
      "ObjectId" : "627aadf5bab430ecb17654248295dbbd91d54cc8",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/copy_helper.cmake" : {
      "ObjectId" : "d76e821eaefde0efb08c6df610a31ee54a9a96ed",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/copy_on_debug_helper.cmake" : {
      "ObjectId" : "dc28b9eac2ca57ca90d2c6d1b1c68c80d6b67633",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/external/FindLibobs.cmake" : {
      "ObjectId" : "ab0a3deafe3c11655a99b4e345ddad1cf5b34b33",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This module can be copied and used by external plugins for OBS\n\n#\n\n# Once done these will be defined:\n\n#\n\n#  LIBOBS_FOUND\n\n#  LIBOBS_INCLUDE_DIRS\n\n#  LIBOBS_LIBRARIES\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# base repo non-msvc-specific search paths\n",
        "Line" : 64,
        "CharPositionInLine" : 3
      },
      "2" : {
        "Text" : "# base repo msvc-specific search paths on windows\n",
        "Line" : 69,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "# allows external plugins to easily use/share common dependencies that are often included with libobs (such as FFmpeg)\n",
        "Line" : 100,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 4
    },
    "cmake/external/ObsPluginHelpers.cmake" : {
      "ObjectId" : "b0651dc3b2b4377248aa39c62cd863472a5cb287",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Functions for generating external plugins\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Fix XCode includes to ignore warnings on system includes\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Installs data\n\n# 'target' is the destination target project being installed to\n\n# 'data_loc' specifies the directory of the data\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Installs data in an architecture-specific data directory on windows/linux (data/32bit or data/64bit).  Does not apply for mac.\n\n# 'target' is the destination target project being installed to\n\n# 'data_loc' specifies the directory of the data being installed\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Installs data in the target's bin directory\n\n# 'target' is the destination target project being installed to\n\n# 'data_loc' specifies the directory of the data being installed\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Installs an additional binary to a target\n\n# 'target' is the destination target project being installed to\n\n# 'additional_target' specifies the additional binary\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Installs the binary of the target\n\n# 'target' is the target project being installed\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Installs the binary and data of the target\n\n# 'target' is the destination target project being installed to\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Installs an additional binary to the data of a target\n\n# 'target' is the destination target project being installed to\n\n# 'additional_target' specifies the additional binary\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Installs an additional binary in an architecture-specific data directory on windows/linux (data/32bit or data/64bit).  Does not apply for mac.\n\n# 'target' is the destination target project being installed to\n\n# 'additional_target' specifies the additional binary\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Installs an additional file in an architecture-specific data directory on windows/linux (data/32bit or data/64bit).  Does not apply for mac.\n\n# 'target' is the destination target project being installed to\n\n# 'additional_target' specifies the additional binary\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "cmake/helper_subdir/CMakeLists.txt" : {
      "ObjectId" : "d644c9f19cc636d441c0bd04ef2c43404f48f129",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/CMakeLists.txt" : {
      "ObjectId" : "333dc6a3bfa1e1b083c298d3f859c87dc7aca2ad",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/blake2/CMakeLists.txt" : {
      "ObjectId" : "f73ead78c1fa00ceb6dbd7e71e9ff53ee6877d34",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/file-updater/CMakeLists.txt" : {
      "ObjectId" : "f4d1a8bd0964144f1f3df6e2c8dddb9396424256",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/glad/CMakeLists.txt" : {
      "ObjectId" : "79c4d3b3ccdcd6167195bbe486b4daa98790b57c",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# only link to libdl on linux\n",
        "Line" : 55,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "deps/ipc-util/CMakeLists.txt" : {
      "ObjectId" : "ac6103957b34de036118cb5c74ddef4906d13564",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO: Add posix support\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/jansson/CMakeLists.txt" : {
      "ObjectId" : "885917f9e4e4b82f2694689fb62d8aa0548f9d1f",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Notes:\n\n#\n\n# Author: Paul Harris, June 2012\n\n# Additions: Joakim Soderberg, Febuary 2013\n\n#\n\n# Supports: building static/shared, release/debug/etc, can also build html docs\n\n# and some of the tests.\n\n# Note that its designed for out-of-tree builds, so it will not pollute your\n\n# source tree.\n\n#\n\n# TODO 1: Finish implementing tests. api tests are working, but the valgrind\n\n# variants are not flagging problems.\n\n#\n\n# TODO 2: There is a check_exports script that would try and incorporate.\n\n#\n\n# TODO 3: Consolidate version numbers, currently the version number is written\n\n# into: * cmake (here) * autotools (the configure) * source code header files.\n\n# Should not be written directly into header files, autotools/cmake can do\n\n# that job.\n\n#\n\n# Brief intro on how to use cmake:\n\n# > mkdir build (somewhere - we do out-of-tree builds)\n\n# > use cmake, ccmake, or cmake-gui to configure the project. for linux, you\n\n# can only choose one variant: release,debug,etc... and static or shared.\n\n# >> example:\n\n# >> cd build\n\n# >> ccmake -i ../path_to_jansson_dir\n\n# >>  inside, configure your options. press C until there are no lines\n\n#     with * next to them.\n\n# >>  note, I like to configure the 'install' path to ../install, so I get\n\n#     self-contained clean installs I can point other projects to.\n\n# >>  press G to 'generate' the project files.\n\n# >> make (to build the project)\n\n# >> make install\n\n# >> make test (to run the tests, if you enabled them)\n\n#\n\n# Brief description on how it works:\n\n# There is a small heirachy of CMakeLists.txt files which define how the\n\n# project is built.\n\n# Header file detection etc is done, and the results are written into config.h\n\n# and jansson_config.h, which are generated from the corresponding\n\n# config.h.cmake and jansson_config.h.cmake template files.\n\n# The generated header files end up in the build directory - not in\n\n# the source directory.\n\n# The rest is down to the usual make process.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# required for exports? cmake_minimum_required (VERSION 2.8.6)\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Options\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This option must match the settings used in your program, in particular if you\n",
        "Line" : 59,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# are linking statically\n",
        "Line" : 60,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# Disabled by OBS\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set some nicer output dirs.\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Give the debug version a different postfix for windows,\n\n# so both the debug and release version can be built in the\n\n# same build-tree on Windows (MSVC).\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# This is how I thought it should go\n\n# set (JANSSON_VERSION \"2.3.1\")\n\n# set (JANSSON_SOVERSION 2)\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# This is what is required to match the same numbers as automake's\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# for CheckFunctionKeywords\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Turn off Microsofts \"security\" warnings.\n",
        "Line" : 106,
        "CharPositionInLine" : 3
      },
      "12" : {
        "Text" : "# Disabled by OBS, options already set by top level CMakeLists\n",
        "Line" : 109,
        "CharPositionInLine" : 3
      },
      "13" : {
        "Text" : "# Coverage only works with GCC for a debug build.\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# This adds coverage arguments to gcc/clang.\n",
        "Line" : 134,
        "CharPositionInLine" : 3
      },
      "15" : {
        "Text" : "# Check for the int-type includes\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Check our 64 bit integer sizes\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Check our 32 bit integer sizes\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Check for ssize_t and SSIZE_T existance.\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Check for all the variants of strtoll\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Figure out what variant we should use\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# fallback to strtol (32 bit)\n\n# this will set all the required variables\n",
        "Line" : 246,
        "CharPositionInLine" : 3
      },
      "22" : {
        "Text" : "# if we haven't defined JSON_INT_T, then we have a 64 bit conversion function.\n\n# detect what to use for the 64 bit type.\n\n# Note: I will prefer long long if I can get it, as that is what the automake system aimed for.\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Apparently, Borland BCC and MSVC wants I64d,\n\n# Borland BCC could also accept LD\n\n# and gcc wants ldd,\n\n# I am not sure what cygwin will want, so I will assume I64d\n",
        "Line" : 267,
        "CharPositionInLine" : 3
      },
      "24" : {
        "Text" : "# matches both msvc and cygwin\n",
        "Line" : 272,
        "CharPositionInLine" : 14
      },
      "25" : {
        "Text" : "# If locale.h and localeconv() are available, define to 1, otherwise to 0.\n",
        "Line" : 280,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# check if we have setlocale\n",
        "Line" : 290,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Check what the inline keyword is.\n\n# Note that the original JSON_INLINE was always set to just 'inline', so this goes further.\n",
        "Line" : 293,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# no inline on this platform\n",
        "Line" : 306,
        "CharPositionInLine" : 3
      },
      "29" : {
        "Text" : "# configure the public config file\n",
        "Line" : 315,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Copy the jansson.h file to the public include folder\n",
        "Line" : 319,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# configure the private config file\n",
        "Line" : 325,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# and tell the source code to include it\n",
        "Line" : 329,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Add the lib sources.\n",
        "Line" : 335,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# For building Documentation (uses Sphinx)\n\n# Disabled by OBS\n",
        "Line" : 375,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# configured documentation tools and intermediate build results\n",
        "Line" : 392,
        "CharPositionInLine" : 6
      },
      "36" : {
        "Text" : "# Sphinx cache with pickled ReST documents\n",
        "Line" : 395,
        "CharPositionInLine" : 6
      },
      "37" : {
        "Text" : "# CMake could be used to build the conf.py file too,\n\n# eg it could automatically write the version of the program or change the theme.\n\n# if(NOT DEFINED SPHINX_THEME)\n\n#    set(SPHINX_THEME default)\n\n# endif()\n\n#\n\n# if(NOT DEFINED SPHINX_THEME_DIR)\n\n#    set(SPHINX_THEME_DIR)\n\n# endif()\n\n#\n\n# configure_file(\n\n#    \"${CMAKE_CURRENT_SOURCE_DIR}/conf.py.in\"\n\n#    \"${BINARY_BUILD_DIR}/conf.py\"\n\n#    @ONLY)\n",
        "Line" : 398,
        "CharPositionInLine" : 6
      },
      "38" : {
        "Text" : "# TODO: Add support for all sphinx builders: http://sphinx-doc.org/builders.html\n",
        "Line" : 413,
        "CharPositionInLine" : 6
      },
      "39" : {
        "Text" : "# Add documentation targets.\n",
        "Line" : 415,
        "CharPositionInLine" : 6
      },
      "40" : {
        "Text" : "# The doc target will build all documentation targets.\n",
        "Line" : 441,
        "CharPositionInLine" : 6
      },
      "41" : {
        "Text" : "# -q   # Enable for quiet mode\n",
        "Line" : 447,
        "CharPositionInLine" : 12
      },
      "42" : {
        "Text" : "# -c \"${BINARY_BUILD_DIR}\" # enable if using cmake-generated conf.py\n",
        "Line" : 450,
        "CharPositionInLine" : 12
      },
      "43" : {
        "Text" : "# Disabled by OBS\n",
        "Line" : 462,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# TODO: Add FindValgrind.cmake instead of having a hardcoded path.\n",
        "Line" : 471,
        "CharPositionInLine" : 6
      },
      "45" : {
        "Text" : "# enable valgrind\n",
        "Line" : 475,
        "CharPositionInLine" : 6
      },
      "46" : {
        "Text" : "#\n\n# Test suites.\n\n#\n",
        "Line" : 485,
        "CharPositionInLine" : 3
      },
      "47" : {
        "Text" : "# Doing arithmetic on void pointers is not allowed by Microsofts compiler\n\n# such as secure_malloc and secure_free is doing, so exclude it for now.\n",
        "Line" : 506,
        "CharPositionInLine" : 3
      },
      "48" : {
        "Text" : "# Helper macro for building and linking a test program.\n",
        "Line" : 512,
        "CharPositionInLine" : 3
      },
      "49" : {
        "Text" : "# Create executables and tests/valgrind tests for API tests.\n",
        "Line" : 519,
        "CharPositionInLine" : 3
      },
      "50" : {
        "Text" : "# Test harness for the suites tests.\n",
        "Line" : 534,
        "CharPositionInLine" : 3
      },
      "51" : {
        "Text" : "# Coverage make target \"make coverage\".\n\n# Name of output directory.\n\n# Name of test runner executable.\n\n# Arguments to the test runner above (make test).\n",
        "Line" : 569,
        "CharPositionInLine" : 33
      },
      "52" : {
        "Text" : "# Enable using \"make check\" just like the autotools project.\n\n# By default cmake creates a target \"make test\"\n",
        "Line" : 580,
        "CharPositionInLine" : 3
      },
      "53" : {
        "Text" : "#\n\n# Installation preparation.\n\n#\n",
        "Line" : 586,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# Allow the user to override installation directories.\n",
        "Line" : 590,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# Create pkg-conf file.\n\n# (We use the same files as ./configure does, so we\n\n#  have to defined the same variables used there).\n",
        "Line" : 603,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# Make sure the paths are absolute.\n",
        "Line" : 613,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# Export targets (This is used for other CMake projects to easily find the libraries and include files).\n",
        "Line" : 621,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# Generate the config file for the build-tree.\n",
        "Line" : 626,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# Generate the config file for the installation tree.\n",
        "Line" : 635,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# Calculate the relative directory from the Cmake dir.\n",
        "Line" : 639,
        "CharPositionInLine" : 38
      },
      "61" : {
        "Text" : "# Note the EVENT_CMAKE_DIR is defined in JanssonConfig.cmake.in, \n\n# we escape it here so it's evaluated when it is included instead\n\n# so that the include dirs are given relative to where the \n\n# config file is located.\n",
        "Line" : 641,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Generate version info for both build-tree and install-tree.\n",
        "Line" : 651,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# Define the public headers.\n",
        "Line" : 656,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "#TODO: fix this.\n",
        "Line" : 658,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "#\n\n# Install targets.\n\n#\n\n# Disabled by OBS\n",
        "Line" : 660,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# Windows DLLs\n",
        "Line" : 670,
        "CharPositionInLine" : 71
      },
      "67" : {
        "Text" : "# Install the pkg-config.\n",
        "Line" : 673,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# Install the configs.\n",
        "Line" : 678,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# Install exports for the install-tree.\n",
        "Line" : 684,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# For use when simply using add_library from a parent project to build jansson.\n",
        "Line" : 689,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 71
    },
    "deps/jansson/Makefile.am" : {
      "ObjectId" : "0de2ac16d93c2f3a47846a0e638f3c4af2be938c",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# \"make distcheck\" builds the dvi target, so use it to check that the\n\n# documentation is built correctly.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/jansson/cmake/CheckFunctionKeywords.cmake" : {
      "ObjectId" : "44601fd4e9fa15f0d9a26481d84ebf0662316131",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#      break()\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/jansson/cmake/CodeCoverage.cmake" : {
      "ObjectId" : "402f6366c15d73ae9a6daf323e0e60a98b5dcf21",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Boost Software License - Version 1.0 - August 17th, 2003\n\n#\n\n# Permission is hereby granted, free of charge, to any person or organization\n\n# obtaining a copy of the software and accompanying documentation covered by\n\n# this license (the \"Software\") to use, reproduce, display, distribute,\n\n# execute, and transmit the Software, and to prepare derivative works of the\n\n# Software, and to permit third-parties to whom the Software is furnished to\n\n# do so, all subject to the following:\n\n# \n\n# The copyright notices in the Software and this entire statement, including\n\n# the above license grant, this restriction and the following disclaimer,\n\n# must be included in all copies of the Software, in whole or in part, and\n\n# all derivative works of the Software, unless such copies or derivative\n\n# works are solely in the form of machine-executable object code generated by\n\n# a source language processor.\n\n# \n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT\n\n# SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE\n\n# FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,\n\n# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n\n# DEALINGS IN THE SOFTWARE.\n\n#\n\n# 2012-01-31, Lars Bilke\n\n# - Enable Code Coverage\n\n#\n\n# 2013-09-17, Joakim Söderberg\n\n# - Added support for Clang.\n\n# - Some additional usage instructions.\n\n#\n\n# USAGE:\n\n# 1. Copy this file into your cmake modules path.\n\n#\n\n# 2. Add the following line to your CMakeLists.txt:\n\n#      INCLUDE(CodeCoverage)\n\n#\n\n# 3. Set compiler flags to turn off optimization and enable coverage: \n\n#    SET(CMAKE_CXX_FLAGS \"-g -O0 -fprofile-arcs -ftest-coverage\")\n\n#\t SET(CMAKE_C_FLAGS \"-g -O0 -fprofile-arcs -ftest-coverage\")\n\n#  \n\n# 3. Use the function SETUP_TARGET_FOR_COVERAGE to create a custom make target\n\n#    which runs your test executable and produces a lcov code coverage report:\n\n#    Example:\n\n#\t SETUP_TARGET_FOR_COVERAGE(\n\n#\t\t\t\tmy_coverage_target  # Name for custom target.\n\n#\t\t\t\ttest_driver         # Name of the test driver executable that runs the tests.\n\n#\t\t\t\t\t\t\t\t\t# NOTE! This should always have a ZERO as exit code\n\n#\t\t\t\t\t\t\t\t\t# otherwise the coverage generation will not complete.\n\n#\t\t\t\tcoverage            # Name of output directory.\n\n#\t\t\t\t)\n\n#\n\n# 4. Build a Debug build:\n\n#\t cmake -DCMAKE_BUILD_TYPE=Debug ..\n\n#\t make\n\n#\t make my_coverage_target\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check prereqs\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# NOT GCOV_PATH\n",
        "Line" : 69,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Clang version 3.0.0 and greater now supports gcov as well.\n",
        "Line" : 72,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# NOT CMAKE_COMPILER_IS_GNUCXX\n",
        "Line" : 78,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# NOT CMAKE_BUILD_TYPE STREQUAL \"Debug\"\n",
        "Line" : 82,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Param _targetname     The name of new the custom make target\n\n# Param _outputname     lcov output is generated as _outputname.info\n\n#                       HTML report is generated in _outputname/index.html\n\n# Param _testrunner     The name of the target which runs the tests.\n\n#\t\t\t\t\t\tMUST return ZERO always, even on errors. \n\n#\t\t\t\t\t\tIf not, no coverage report will be created!\n\n# Optional fourth parameter is passed as arguments to _testrunner\n\n#   Pass them in list form, e.g.: \"-j;2\" for -j 2\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# NOT LCOV_PATH\n",
        "Line" : 97,
        "CharPositionInLine" : 9
      },
      "8" : {
        "Text" : "# NOT GENHTML_PATH\n",
        "Line" : 101,
        "CharPositionInLine" : 9
      },
      "9" : {
        "Text" : "# Setup target\n",
        "Line" : 103,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# Cleanup lcov\n",
        "Line" : 106,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Run tests\n",
        "Line" : 109,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Capturing lcov counters and generating report\n",
        "Line" : 112,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Show info where to find the report\n",
        "Line" : 122,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# SETUP_TARGET_FOR_COVERAGE\n",
        "Line" : 128,
        "CharPositionInLine" : 14
      },
      "15" : {
        "Text" : "# Param _targetname     The name of new the custom make target\n\n# Param _testrunner     The name of the target which runs the tests\n\n# Param _outputname     cobertura output is generated as _outputname.xml\n\n# Optional fourth parameter is passed as arguments to _testrunner\n\n#   Pass them in list form, e.g.: \"-j;2\" for -j 2\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# NOT PYTHON_EXECUTABLE\n",
        "Line" : 139,
        "CharPositionInLine" : 9
      },
      "17" : {
        "Text" : "# NOT GCOVR_PATH\n",
        "Line" : 143,
        "CharPositionInLine" : 9
      },
      "18" : {
        "Text" : "# Run tests\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Running gcovr\n",
        "Line" : 150,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Show info where to find the report\n",
        "Line" : 156,
        "CharPositionInLine" : 1
      },
      "21" : {
        "Text" : "# SETUP_TARGET_FOR_COVERAGE_COBERTURA\n",
        "Line" : 162,
        "CharPositionInLine" : 14
      },
      "CommentCount" : 22
    },
    "deps/jansson/cmake/Coveralls.cmake" : {
      "ObjectId" : "29221c91739f9bfa6152913b4f069ea9c56a25c4",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n\n#\n\n# Copyright (C) 2014 Joakim Söderberg <joakim.soderberg@gmail.com>\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Param _COVERAGE_SRCS\tA list of source files that coverage should be collected for.\n\n# Param _COVERALLS_UPLOAD Upload the result to coveralls?\n\n#\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# When passing a CMake list to an external process, the list\n\n# will be converted from the format \"1;2;3\" to \"1 2 3\".\n\n# This means the script we're calling won't see it as a list\n\n# of sources, but rather just one long path. We remedy this\n\n# by replacing \";\" with \"*\" and then reversing that in the script\n\n# that we're calling.\n\n# http://cmake.3232098.n2.nabble.com/Passing-a-CMake-list-quot-as-is-quot-to-a-custom-target-td6505681.html\n",
        "Line" : 29,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "#message(\"Coverage sources: ${COVERAGE_SRCS}\")\n",
        "Line" : 42,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# Zero the coverage counters.\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Run regress tests.\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Generate Gcov and translate it into coveralls JSON.\n\n# We do this by executing an external CMake script.\n\n# (We don't want this to run at CMake generation time, but after compilation and everything has run).\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# TODO: This is passed like: \"a b c\", not \"a;b;c\"\n",
        "Line" : 58,
        "CharPositionInLine" : 39
      },
      "8" : {
        "Text" : "# Upload the JSON to coveralls.\n",
        "Line" : 78,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 9
    },
    "deps/jansson/cmake/CoverallsClear.cmake" : {
      "ObjectId" : "eb68695a2b1fce4ea197f5be588379d13e3c2fb7",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n\n#\n\n# Copyright (C) 2014 Joakim Söderberg <joakim.soderberg@gmail.com>\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/jansson/cmake/CoverallsGenerateGcov.cmake" : {
      "ObjectId" : "0c4c2b0c1569ea36dcec290ef227eac3408c3662",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n\n#\n\n# Copyright (C) 2014 Joakim Söderberg <joakim.soderberg@gmail.com>\n\n#\n\n# This is intended to be run by a custom target in a CMake project like this.\n\n# 0. Compile program with coverage support.\n\n# 1. Clear coverage data. (Recursively delete *.gcda in build dir)\n\n# 2. Run the unit tests.\n\n# 3. Run this script specifying which source files the coverage should be performed on.\n\n#\n\n# This script will then use gcov to generate .gcov files in the directory specified\n\n# via the COV_PATH var. This should probably be the same as your cmake build dir.\n\n#\n\n# It then parses the .gcov files to convert them into the Coveralls JSON format:\n\n# https://coveralls.io/docs/api\n\n#\n\n# Example for running as standalone CMake script from the command line:\n\n# (Note it is important the -P is at the end...)\n\n# $ cmake -DCOV_PATH=$(pwd) \n\n#         -DCOVERAGE_SRCS=\"catcierge_rfid.c;catcierge_timer.c\" \n\n#         -P ../cmake/CoverallsGcovUpload.cmake\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Make sure we have the needed arguments.\n\n#\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Since it's not possible to pass a CMake list properly in the\n\n# \"1;2;3\" format to an external process, we have replaced the\n\n# \";\" with \"*\", so reverse that here so we get it back into the\n\n# CMake list format.\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# TODO: Add these git things to the coveralls json.\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Branch.\n",
        "Line" : 78,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "############################# Macros #########################################\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# This macro converts from the full path format gcov outputs:\n\n#\n\n#    /path/to/project/root/build/#path#to#project#root#subdir#the_file.c.gcov\n\n#\n\n# to the original source file path the .gcov is for:\n\n#\n\n#   /path/to/project/root/subdir/the_file.c\n\n#\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# /path/to/project/root/build/#path#to#project#root#subdir#the_file.c.gcov \n\n# -> \n\n# #path#to#project#root#subdir#the_file.c.gcov   \n",
        "Line" : 124,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# #path#to#project#root#subdir#the_file.c.gcov -> /path/to/project/root/subdir/the_file.c\n",
        "Line" : 129,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "##############################################################################\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Get the coverage data.\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Get a list of all the object directories needed by gcov\n\n# (The directories the .gcda files and .o files are found in)\n\n# and run gcov on those.\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#\n\n# The -p below refers to \"Preserve path components\",\n\n# This means that the generated gcov filename of a source file will\n\n# keep the original files entire filepath, but / is replaced with #.\n\n# Example:\n\n#\n\n# /path/to/project/root/build/CMakeFiles/the_file.dir/subdir/the_file.c.gcda\n\n# ------------------------------------------------------------------------------\n\n# File '/path/to/project/root/subdir/the_file.c'\n\n# Lines executed:68.34% of 199\n\n# /path/to/project/root/subdir/the_file.c:creating '#path#to#project#root#subdir#the_file.c.gcov'\n\n#\n\n# If -p is not specified then the file is named only \"the_file.c.gcov\"\n\n#\n",
        "Line" : 149,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# TODO: Make these be absolute path\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Get only the filenames to use for filtering.\n\n#set(COVERAGE_SRCS_NAMES \"\")\n\n#foreach (COVSRC ${COVERAGE_SRCS})\n\n#\tget_filename_component(COVSRC_NAME ${COVSRC} NAME)\n\n#\tmessage(\"${COVSRC} -> ${COVSRC_NAME}\")\n\n#\tlist(APPEND COVERAGE_SRCS_NAMES \"${COVSRC_NAME}\")\n\n#endforeach()\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#\n\n# Filter out all but the gcov files we want.\n\n#\n\n# We do this by comparing the list of COVERAGE_SRCS filepaths that the\n\n# user wants the coverage data for with the paths of the generated .gcov files,\n\n# so that we only keep the relevant gcov files.\n\n#\n\n# Example:\n\n# COVERAGE_SRCS =\n\n#\t\t\t\t/path/to/project/root/subdir/the_file.c\n\n#\n\n# ALL_GCOV_FILES =\n\n#\t\t\t\t/path/to/project/root/build/#path#to#project#root#subdir#the_file.c.gcov\n\n#\t\t\t\t/path/to/project/root/build/#path#to#project#root#subdir#other_file.c.gcov\n\n# \n\n# Result should be:\n\n# GCOV_FILES = \n\n#\t\t\t\t/path/to/project/root/build/#path#to#project#root#subdir#the_file.c.gcov\n\n#\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#message(\"Look in coverage sources: ${COVERAGE_SRCS}\")\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#\n\n# /path/to/project/root/build/#path#to#project#root#subdir#the_file.c.gcov \n\n# -> \n\n# /path/to/project/root/subdir/the_file.c \n",
        "Line" : 208,
        "CharPositionInLine" : 1
      },
      "18" : {
        "Text" : "# Is this in the list of source files?\n\n# TODO: We want to match against relative path filenames from the source file root...\n",
        "Line" : 214,
        "CharPositionInLine" : 1
      },
      "19" : {
        "Text" : "# We remove it from the list, so we don't bother searching for it again.\n\n# Also files left in COVERAGE_SRCS_REMAINING after this loop ends should\n\n# have coverage data generated from them (no lines are covered).\n",
        "Line" : 222,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# TODO: Enable setting these\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Read the GCOV files line by line and get the coverage data.\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Loads the gcov file as a list of lines.\n",
        "Line" : 262,
        "CharPositionInLine" : 1
      },
      "23" : {
        "Text" : "# Instead of trying to parse the source from the\n\n# gcov file, simply read the file contents from the source file.\n\n# (Parsing it from the gcov is hard because C-code uses ; in many places\n\n#  which also happens to be the same as the CMake list delimeter).\n",
        "Line" : 265,
        "CharPositionInLine" : 1
      },
      "24" : {
        "Text" : "# According to http://json.org/ these should be escaped as well.\n\n# Don't know how to do that in CMake however...\n\n#string(REPLACE \"\\b\" \"\\\\\\\\b\" GCOV_FILE_SOURCE \"${GCOV_FILE_SOURCE}\")\n\n#string(REPLACE \"\\f\" \"\\\\\\\\f\" GCOV_FILE_SOURCE \"${GCOV_FILE_SOURCE}\")\n\n#string(REGEX REPLACE \"\\u([a-fA-F0-9]{4})\" \"\\\\\\\\u\\\\1\" GCOV_FILE_SOURCE \"${GCOV_FILE_SOURCE}\")\n",
        "Line" : 276,
        "CharPositionInLine" : 1
      },
      "25" : {
        "Text" : "# We want a json array of coverage data as a single string\n\n# start building them from the contents of the .gcov\n",
        "Line" : 282,
        "CharPositionInLine" : 1
      },
      "26" : {
        "Text" : "# Example of what we're parsing:\n\n# Hitcount  |Line | Source\n\n# \"        8:   26:        if (!allowed || (strlen(allowed) == 0))\"\n",
        "Line" : 287,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# Lines with 0 line numbers are metadata and can be ignored.\n",
        "Line" : 305,
        "CharPositionInLine" : 3
      },
      "28" : {
        "Text" : "# Translate the hitcount into valid JSON values.\n",
        "Line" : 308,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# TODO: Look for LCOV_EXCL_LINE in SOURCE to get rid of false positives.\n",
        "Line" : 316,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# Advanced way of removing the trailing comma in the JSON array.\n\n# \"[1, 2, 3, \" -> \"[1, 2, 3\"\n",
        "Line" : 323,
        "CharPositionInLine" : 1
      },
      "31" : {
        "Text" : "# Append the trailing ] to complete the JSON array.\n",
        "Line" : 327,
        "CharPositionInLine" : 1
      },
      "32" : {
        "Text" : "# Generate the final JSON for this file.\n",
        "Line" : 330,
        "CharPositionInLine" : 1
      },
      "33" : {
        "Text" : "# Loop through all files we couldn't find any coverage for\n\n# as well, and generate JSON for those as well with 0% coverage.\n",
        "Line" : 337,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Loads the source file as a list of lines.\n",
        "Line" : 341,
        "CharPositionInLine" : 1
      },
      "35" : {
        "Text" : "# Remove trailing comma, and complete JSON array with ]\n",
        "Line" : 357,
        "CharPositionInLine" : 1
      },
      "36" : {
        "Text" : "# Generate the final JSON for this file.\n",
        "Line" : 361,
        "CharPositionInLine" : 1
      },
      "37" : {
        "Text" : "# Get rid of trailing comma.\n",
        "Line" : 367,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Generate the final complete JSON!\n",
        "Line" : 371,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 39
    },
    "deps/jansson/cmake/FindSphinx.cmake" : {
      "ObjectId" : "55539d42c6462babd4fdf30691d613998a61a602",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# PART B. DOWNLOADING AGREEMENT - LICENSE FROM SBIA WITH RIGHT TO SUBLICENSE (\"SOFTWARE LICENSE\").\n\n#  ------------------------------------------------------------------------------------------------\n\n#\n\n#  1. As used in this Software License, \"you\" means the individual downloading and/or\n\n#     using, reproducing, modifying, displaying and/or distributing the Software and\n\n#     the institution or entity which employs or is otherwise affiliated with such\n\n#     individual in connection therewith. The Section of Biomedical Image Analysis,\n\n#     Department of Radiology at the Universiy of Pennsylvania (\"SBIA\") hereby grants\n\n#     you, with right to sublicense, with respect to SBIA's rights in the software,\n\n#     and data, if any, which is the subject of this Software License (collectively,\n\n#     the \"Software\"), a royalty-free, non-exclusive license to use, reproduce, make\n\n#     derivative works of, display and distribute the Software, provided that:\n\n#     (a) you accept and adhere to all of the terms and conditions of this Software\n\n#     License; (b) in connection with any copy of or sublicense of all or any portion\n\n#     of the Software, all of the terms and conditions in this Software License shall\n\n#     appear in and shall apply to such copy and such sublicense, including without\n\n#     limitation all source and executable forms and on any user documentation,\n\n#     prefaced with the following words: \"All or portions of this licensed product\n\n#     (such portions are the \"Software\") have been obtained under license from the\n\n#     Section of Biomedical Image Analysis, Department of Radiology at the University\n\n#     of Pennsylvania and are subject to the following terms and conditions:\"\n\n#     (c) you preserve and maintain all applicable attributions, copyright notices\n\n#     and licenses included in or applicable to the Software; (d) modified versions\n\n#     of the Software must be clearly identified and marked as such, and must not\n\n#     be misrepresented as being the original Software; and (e) you consider making,\n\n#     but are under no obligation to make, the source code of any of your modifications\n\n#     to the Software freely available to others on an open source basis.\n\n#\n\n#  2. The license granted in this Software License includes without limitation the\n\n#     right to (i) incorporate the Software into proprietary programs (subject to\n\n#     any restrictions applicable to such programs), (ii) add your own copyright\n\n#     statement to your modifications of the Software, and (iii) provide additional\n\n#     or different license terms and conditions in your sublicenses of modifications\n\n#     of the Software; provided that in each case your use, reproduction or\n\n#     distribution of such modifications otherwise complies with the conditions\n\n#     stated in this Software License.\n\n#\n\n#  3. This Software License does not grant any rights with respect to third party\n\n#     software, except those rights that SBIA has been authorized by a third\n\n#     party to grant to you, and accordingly you are solely responsible for\n\n#     (i) obtaining any permissions from third parties that you need to use,\n\n#     reproduce, make derivative works of, display and distribute the Software,\n\n#     and (ii) informing your sublicensees, including without limitation your\n\n#     end-users, of their obligations to secure any such required permissions.\n\n#\n\n#  4. The Software has been designed for research purposes only and has not been\n\n#     reviewed or approved by the Food and Drug Administration or by any other\n\n#     agency. YOU ACKNOWLEDGE AND AGREE THAT CLINICAL APPLICATIONS ARE NEITHER\n\n#     RECOMMENDED NOR ADVISED. Any commercialization of the Software is at the\n\n#     sole risk of the party or parties engaged in such commercialization.\n\n#     You further agree to use, reproduce, make derivative works of, display\n\n#     and distribute the Software in compliance with all applicable governmental\n\n#     laws, regulations and orders, including without limitation those relating\n\n#     to export and import control.\n\n#\n\n#  5. The Software is provided \"AS IS\" and neither SBIA nor any contributor to\n\n#     the software (each a \"Contributor\") shall have any obligation to provide\n\n#     maintenance, support, updates, enhancements or modifications thereto.\n\n#     SBIA AND ALL CONTRIBUTORS SPECIFICALLY DISCLAIM ALL EXPRESS AND IMPLIED\n\n#     WARRANTIES OF ANY KIND INCLUDING, BUT NOT LIMITED TO, ANY WARRANTIES OF\n\n#     MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.\n\n#     IN NO EVENT SHALL SBIA OR ANY CONTRIBUTOR BE LIABLE TO ANY PARTY FOR\n\n#     DIRECT, INDIRECT, SPECIAL, INCIDENTAL, EXEMPLARY OR CONSEQUENTIAL DAMAGES\n\n#     HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY ARISING IN ANY WAY RELATED\n\n#     TO THE SOFTWARE, EVEN IF SBIA OR ANY CONTRIBUTOR HAS BEEN ADVISED OF THE\n\n#     POSSIBILITY OF SUCH DAMAGES. TO THE MAXIMUM EXTENT NOT PROHIBITED BY LAW OR\n\n#     REGULATION, YOU FURTHER ASSUME ALL LIABILITY FOR YOUR USE, REPRODUCTION,\n\n#     MAKING OF DERIVATIVE WORKS, DISPLAY, LICENSE OR DISTRIBUTION OF THE SOFTWARE\n\n#     AND AGREE TO INDEMNIFY AND HOLD HARMLESS SBIA AND ALL CONTRIBUTORS FROM\n\n#     AND AGAINST ANY AND ALL CLAIMS, SUITS, ACTIONS, DEMANDS AND JUDGMENTS ARISING\n\n#     THEREFROM.\n\n#\n\n#  6. None of the names, logos or trademarks of SBIA or any of SBIA's affiliates\n\n#     or any of the Contributors, or any funding agency, may be used to endorse\n\n#     or promote products produced in whole or in part by operation of the Software\n\n#     or derived from or based on the Software without specific prior written\n\n#     permission from the applicable party.\n\n#\n\n#  7. Any use, reproduction or distribution of the Software which is not in accordance\n\n#     with this Software License shall automatically revoke all rights granted to you\n\n#     under this Software License and render Paragraphs 1 and 2 of this Software\n\n#     License null and void.\n\n#\n\n#  8. This Software License does not grant any rights in or to any intellectual\n\n#     property owned by SBIA or any Contributor except those rights expressly\n\n#     granted hereunder.\n\n#\n\n#\n\n#  PART C. MISCELLANEOUS\n\n#  ---------------------\n\n#\n\n#  This Agreement shall be governed by and construed in accordance with the laws\n\n#  of The Commonwealth of Pennsylvania without regard to principles of conflicts\n\n#  of law. This Agreement shall supercede and replace any license terms that you\n\n#  may have agreed to previously with respect to Software from SBIA.\n\n#\n\n##############################################################################\n\n# @file  FindSphinx.cmake\n\n# @brief Find Sphinx documentation build tools.\n\n#\n\n# @par Input variables:\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp @b Sphinx_DIR @endtp\n\n#     <td>Installation directory of Sphinx tools. Can also be set as environment variable.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b SPHINX_DIR @endtp\n\n#     <td>Alternative environment variable for @c Sphinx_DIR.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b Sphinx_FIND_COMPONENTS @endtp\n\n#     <td>Sphinx build tools to look for, i.e., 'apidoc' and/or 'build'.</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @par Output variables:\n\n# <table border=\"0\">\n\n#   <tr>\n\n#     @tp @b Sphinx_FOUND @endtp\n\n#     <td>Whether all or only the requested Sphinx build tools were found.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b SPHINX_FOUND @endtp\n\n#     <td>Alias for @c Sphinx_FOUND.<td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b SPHINX_EXECUTABLE @endtp\n\n#     <td>Non-cached alias for @c Sphinx-build_EXECUTABLE.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b Sphinx_PYTHON_EXECUTABLE @endtp\n\n#     <td>Python executable used to run sphinx-build. This is either the\n\n#         by default found Python interpreter or a specific version as\n\n#         specified by the shebang (#!) of the sphinx-build script.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b Sphinx_PYTHON_OPTIONS @endtp\n\n#     <td>A list of Python options extracted from the shebang (#!) of the\n\n#         sphinx-build script. The -E option is added by this module\n\n#         if the Python executable is not the system default to avoid\n\n#         problems with a differing setting of the @c PYTHONHOME.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b Sphinx-build_EXECUTABLE @endtp\n\n#     <td>Absolute path of the found sphinx-build tool.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b Sphinx-apidoc_EXECUTABLE @endtp\n\n#     <td>Absolute path of the found sphinx-apidoc tool.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b Sphinx_VERSION_STRING @endtp\n\n#     <td>Sphinx version found e.g. 1.1.2.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b Sphinx_VERSION_MAJOR @endtp\n\n#     <td>Sphinx major version found e.g. 1.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b Sphinx_VERSION_MINOR @endtp\n\n#     <td>Sphinx minor version found e.g. 1.</td>\n\n#   </tr>\n\n#   <tr>\n\n#     @tp @b Sphinx_VERSION_PATCH @endtp\n\n#     <td>Sphinx patch version found e.g. 2.</td>\n\n#   </tr>\n\n# </table>\n\n#\n\n# @ingroup CMakeFindModules\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# initialize search\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# default components to look for\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# find components, i.e., build tools\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# determine Python executable used by Sphinx\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# extract python executable from shebang of sphinx-build\n",
        "Line" : 220,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# does not match \"#!/usr/bin/env python\" !\n",
        "Line" : 225,
        "CharPositionInLine" : 45
      },
      "7" : {
        "Text" : "# this is done to avoid problems with multiple Python versions being installed\n\n# remember: CMake command if(STR EQUAL STR) is bad and may cause many troubles !\n",
        "Line" : 232,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# determine Sphinx version\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# intentionally use invalid -h option here as the help that is shown then\n\n# will include the Sphinx version information\n",
        "Line" : 245,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# The sphinx version can also contain a \"b\" instead of the last dot.\n\n# For example \"Sphinx v1.2b1\" so we cannot just split on \".\"\n",
        "Line" : 261,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# v1.2.0 -> v1.2\n",
        "Line" : 269,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# compatibility with FindPythonInterp.cmake and FindPerl.cmake\n",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# handle the QUIETLY and REQUIRED arguments and set SPHINX_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 280,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#  VERSION_VAR # This isn't available until CMake 2.8.8 so don't use it.\n",
        "Line" : 288,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# set Sphinx_DIR\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "deps/jansson/cmake/jansson_config.h.cmake" : {
      "ObjectId" : "f703dcb052178e84e457365e1a3fda165ef99896",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/*\n * Copyright (c) 2010-2016 Petri Lehtinen <petri@digip.org>\n *\n * Jansson is free software; you can redistribute it and/or modify\n * it under the terms of the MIT license. See LICENSE for details.\n *\n *\n * This file specifies a part of the site-specific configuration for\n * Jansson, namely those things that affect the public API in\n * jansson.h.\n *\n * The CMake system will generate the jansson_config.h file and\n * copy it to the build and install directories.\n */",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/* Define this so that we can disable scattered automake configuration in source files */",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/* Note: when using cmake, JSON_INTEGER_IS_LONG_LONG is not defined nor used,\n * as we will also check for __int64 etc types.\n * (the definition was used in the automake system) */",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* Bring in the cmake-detected defines */",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/* Include our standard type header for the integer typedef */",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/* If your compiler supports the inline keyword in C, JSON_INLINE is\n   defined to `inline', otherwise empty. In C++, the inline is always\n   supported. */",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/* If locale.h and localeconv() are available, define to 1, otherwise to 0. */",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "/* Maximum recursion depth for parsing JSON input.\n   This limits the depth of e.g. array-within-array constructions. */",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "deps/jansson/cmake/jansson_private_config.h.cmake" : {
      "ObjectId" : "b7c4514974eaab0451a53e05d0bbe5bc78d48a6c",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKESOURCE",
      "CommentCount" : 0
    },
    "deps/jansson/doc/Makefile.am" : {
      "ObjectId" : "5069623fa39866121748b7d58f893daa269b6eb0",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "deps/jansson/src/Makefile.am" : {
      "ObjectId" : "5a0c868e55e00d674a8e7744c8ec08da29030e79",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "deps/jansson/test/Makefile.am" : {
      "ObjectId" : "86d1614e06a88ed49c42678ca59745cd63022d11",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "deps/jansson/test/bin/Makefile.am" : {
      "ObjectId" : "63b6dce7e259f62ab5bf85be0c5165ef522886c9",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# for speed and Valgrind\n",
        "Line" : 4,
        "CharPositionInLine" : 19
      },
      "CommentCount" : 1
    },
    "deps/jansson/test/suites/Makefile.am" : {
      "ObjectId" : "a53eb07f13c81c52b6c73c1ba26b1be83ef61e38",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "deps/jansson/test/suites/api/Makefile.am" : {
      "ObjectId" : "1dbdd2b8968f9abb8d9a5c88c4b67bd2220299d7",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# for speed and Valgrind\n",
        "Line" : 33,
        "CharPositionInLine" : 19
      },
      "CommentCount" : 1
    },
    "deps/libcaption/CMakeLists.txt" : {
      "ObjectId" : "8d2190e918123fba42289127c8930858e4b77b06",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Don't need to prefix local includes with \"caption/*\"\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/libff/CMakeLists.txt" : {
      "ObjectId" : "c1413c091b939590fc9788f9ab507f2300807746",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n",
        "Line" : 23,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "#\n",
        "Line" : 25,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "#\n",
        "Line" : 35,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "#\n",
        "Line" : 37,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 4
    },
    "deps/lzma/CMakeLists.txt" : {
      "ObjectId" : "6908cd23e81932cdad8a21de0b5f46fbf7785273",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/media-playback/CMakeLists.txt" : {
      "ObjectId" : "3accdd8649f7b405429cc0ac6cf818a9818710a8",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/obs-scripting/CMakeLists.txt" : {
      "ObjectId" : "92fb1b9e136b1185a5bcd185f8954d8106a593c3",
      "LastModified" : "2019-04-15T10:30:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/obs-scripting/obslua/CMakeLists.txt" : {
      "ObjectId" : "eb30a88c6e1e18d09f73da195cd6332155fb7e3f",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/obs-scripting/obspython/CMakeLists.txt" : {
      "ObjectId" : "f5475e9944b04f022e7bac2e225d01c80561b549",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_definitions( -DSWIG_TYPE_TABLE=libobs )\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "deps/w32-pthreads/CMakeLists.txt" : {
      "ObjectId" : "992ec69d6fb27d49da06f533fe0435f216d66263",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/w32-pthreads/Makefile" : {
      "ObjectId" : "472969cf9b9e099b7ce3a3df79a1fc4f835f075e",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This makefile is compatible with MS nmake and can be used as a\n\n# replacement for buildlib.bat. I've changed the target from an ordinary dll\n\n# (/LD) to a debugging dll (/LDd).\n\n# \n\n# The variables $DLLDEST and $LIBDEST hold the destination directories for the\n\n# dll and the lib, respectively. Probably all that needs to change is $DEVROOT.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# DLL_VER:\n\n# See pthread.h and README - This number is computed as 'current - age'\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Uncomment this if config.h defines RETAIN_WSALASTERROR\n\n#XLIBS = wsock32.lib\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Default cleanup style\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# C++ Exceptions\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#Structured Exceptions\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#C cleanup code\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Aggregate modules for inlinability\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Separate modules for minimising the size of statically linked images\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#\n\n# The so-called inlined DLL is just a single translation unit with\n\n# inlining optimisation turned on.\n\n#\n",
        "Line" : 425,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# TARGET_CPU is an environment variable set by Visual Studio Command Prompt\n\n# as provided by the SDK\n",
        "Line" : 491,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11,
      "Errorlog" : "line 14:12 token recognition error at: '\\p'\nline 16:20 token recognition error at: '\\d'\nline 17:20 token recognition error at: '\\l'\nline 18:20 token recognition error at: '\\i'\n"
    },
    "deps/w32-pthreads/tests/Makefile" : {
      "ObjectId" : "55991f175033dbfc0cf18978906dc4e6e0434d42",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for the pthreads test suite.\n\n# If all of the .pass files can be created, the test suite has passed.\n\n#\n\n# --------------------------------------------------------------------------\n\n#\n\n#      Pthreads-win32 - POSIX Threads Library for Win32\n\n#      Copyright(C) 1998 John E. Bossom\n\n#      Copyright(C) 1999,2005 Pthreads-win32 contributors\n\n# \n\n#      Contact Email: rpj@callisto.canberra.edu.au\n\n# \n\n#      The current list of contributors is contained\n\n#      in the file CONTRIBUTORS included with the source\n\n#      code distribution. The list can also be seen at the\n\n#      following World Wide Web location:\n\n#      http://sources.redhat.com/pthreads-win32/contributors.html\n\n# \n\n#      This library is free software; you can redistribute it and/or\n\n#      modify it under the terms of the GNU Lesser General Public\n\n#      License as published by the Free Software Foundation; either\n\n#      version 2 of the License, or (at your option) any later version.\n\n# \n\n#      This library is distributed in the hope that it will be useful,\n\n#      but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n#      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n\n#      Lesser General Public License for more details.\n\n# \n\n#      You should have received a copy of the GNU Lesser General Public\n\n#      License along with this library in the file COPYING.LIB;\n\n#      if not, write to the Free Software Foundation, Inc.,\n\n#      51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The next path is relative to $BUILD_DIR\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ..\\QueueUserAPCEx\\User\\quserex.dll\n",
        "Line" : 44,
        "CharPositionInLine" : 7
      },
      "3" : {
        "Text" : "# C++ Exceptions\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Structured Exceptions\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# C cleanup code\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# C++ Exceptions in application - using VC version of pthreads dll\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Defaults\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# If a test case returns a non-zero exit code to the shell, make will\n\n# stop.\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# This allows an individual test application to be made using the default lib.\n\n# e.g. nmake clean test cancel3.exe\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "docs/sphinx/Makefile" : {
      "ObjectId" : "6a2b50199d3f765b6244792aed429a0f85978971",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Minimal makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Put it first so that \"make\" without argument is like \"make help\".\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Catch-all target: route all unknown targets to Sphinx using the new\n\n# \"make mode\" option.  $(O) is meant as a shortcut for $(SPHINXOPTS).\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "libobs-d3d11/CMakeLists.txt" : {
      "ObjectId" : "34543c716db5465674cb8de8fa4f91e56a2e3d16",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libobs-opengl/CMakeLists.txt" : {
      "ObjectId" : "a116c992d8921655f5a5170ab571b0585a2aef37",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#This needs to change to be more specific to get ready for Wayland\n",
        "Line" : 32,
        "CharPositionInLine" : 7
      },
      "CommentCount" : 1
    },
    "libobs/CMakeLists.txt" : {
      "ObjectId" : "fed3e694927604ef79323522cbd2ae6ca58a957c",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# use the sysinfo compatibility library on bsd\n",
        "Line" : 226,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "plugins/CMakeLists.txt" : {
      "ObjectId" : "537ed219eb196e0fa4773de78ad8c660c8f4a490",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/coreaudio-encoder/CMakeLists.txt" : {
      "ObjectId" : "e6dd2b495e05dbff50a1c050864ed2ef45f76b7c",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/decklink/linux/CMakeLists.txt" : {
      "ObjectId" : "4f006ec4eefbfa0ec43fa3594843f50de3c5c2b4",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/decklink/mac/CMakeLists.txt" : {
      "ObjectId" : "04a2a1a0c37cdd063f7a677590054ecf44c31850",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/decklink/win/CMakeLists.txt" : {
      "ObjectId" : "005dbb845f40c5982ffd54b5a52aa524b760af23",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/image-source/CMakeLists.txt" : {
      "ObjectId" : "56eb5fc1785b9ccff88f6ca95afc4a3b9e47e497",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/linux-alsa/CMakeLists.txt" : {
      "ObjectId" : "226a4e78b0ee7d25aabeff4da0320a3ec146e116",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/linux-capture/CMakeLists.txt" : {
      "ObjectId" : "70803461f92b7cf6616c601a7790c5acc9886513",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/linux-jack/CMakeLists.txt" : {
      "ObjectId" : "aac7a8db6d409127fac4ddb051035258c4649e4f",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/linux-pulseaudio/CMakeLists.txt" : {
      "ObjectId" : "ae9ad805ca93525915565db74a0ffb71506d30d4",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/linux-v4l2/CMakeLists.txt" : {
      "ObjectId" : "a310d5def6055dc1405d6a57c0135a882df5ac48",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/mac-avcapture/CMakeLists.txt" : {
      "ObjectId" : "8cb6ef6a752084f1760d80f9b01fc8c683c5cf2a",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/mac-capture/CMakeLists.txt" : {
      "ObjectId" : "50e34f69c33f86afed72dfe5e233d924d72883fb",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/mac-syphon/CMakeLists.txt" : {
      "ObjectId" : "66ca8aed59c1230c1942fe8cedd3b40cfb5e637b",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/mac-vth264/CMakeLists.txt" : {
      "ObjectId" : "ce223916307614be814c52936979fbdb8e5f1311",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/obs-ffmpeg/CMakeLists.txt" : {
      "ObjectId" : "34d08b005b61ed9f24832ada81b3cf8562dfb252",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/obs-ffmpeg/ffmpeg-mux/CMakeLists.txt" : {
      "ObjectId" : "8c564d8d192e15369eff4c856d3e7ff7f7bda180",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/obs-filters/CMakeLists.txt" : {
      "ObjectId" : "d6cf13c28d0610a1f11eb3f545aea42ea4d0da39",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/obs-libfdk/CMakeLists.txt" : {
      "ObjectId" : "f804d01248628ba1217a7078da52b19dd232546e",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/obs-outputs/CMakeLists.txt" : {
      "ObjectId" : "0c373cdb378a680cb5ad877a0d19e176f1588d87",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/obs-qsv11/CMakeLists.txt" : {
      "ObjectId" : "71ce3fb829df31c59cb16916e7eb43880b39970f",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/obs-text/CMakeLists.txt" : {
      "ObjectId" : "973f2a7ee20e90f9bd316c8b8898cdecceccef2a",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/obs-transitions/CMakeLists.txt" : {
      "ObjectId" : "16e471bf2f7b8320af907d463d9a79d0e2afdda4",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/obs-x264/CMakeLists.txt" : {
      "ObjectId" : "7d4ea8b3dba8058727f8d13c5bfbb186a6a9cc8e",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/rtmp-services/CMakeLists.txt" : {
      "ObjectId" : "07e7250766274ad9849cbbdea910c336c9039f57",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/text-freetype2/CMakeLists.txt" : {
      "ObjectId" : "26af5492316d8aeb5e4b3c9eb6599197c228a4df",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/vlc-video/CMakeLists.txt" : {
      "ObjectId" : "bcc95fdef054f522796970c22d8c3f085e148c84",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/win-capture/CMakeLists.txt" : {
      "ObjectId" : "a0965bd9339af63ee7839e9dfbb345a2409d856b",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/win-capture/get-graphics-offsets/CMakeLists.txt" : {
      "ObjectId" : "55894071143e46dec1cf26168e7ae9c86b09ff14",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/win-capture/graphics-hook/CMakeLists.txt" : {
      "ObjectId" : "f8bf6309f035bdf42296e9c2b61bf6932d2b95e3",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/win-capture/inject-helper/CMakeLists.txt" : {
      "ObjectId" : "5213e177a530e36ffcb647305e4abfc249692d85",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/win-dshow/CMakeLists.txt" : {
      "ObjectId" : "4a9f6f87ea2718be4204e91142ef5a14ea24462a",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/win-ivcam/CMakeLists.txt" : {
      "ObjectId" : "6b6e05adb9e981d7f1b350ac15d5a0b7dfb0a76f",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/win-ivcam/seg_service/CMakeLists.txt" : {
      "ObjectId" : "f74763983424c16c7bf5820a2a228f047645741f",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/win-mf/CMakeLists.txt" : {
      "ObjectId" : "4df6dd70c581d787b376464d8e2ab8a9cf05401d",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/win-wasapi/CMakeLists.txt" : {
      "ObjectId" : "04a0751dad2e2d2d71ec6c5e44be45401c80a5c0",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "afcbf5ec0d7def3da952697515959b604500342d",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/osx/CMakeLists.txt" : {
      "ObjectId" : "6cf3546f4f489a58b3197c73b26e3a6c4d92354a",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/test-input/CMakeLists.txt" : {
      "ObjectId" : "31e26aee6474eb53b28558eb5aa421bc2c3c85f5",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/win/CMakeLists.txt" : {
      "ObjectId" : "fd1ba9541152ca37cf9d4d95aff3a3548bffbdd6",
      "LastModified" : "2019-04-14T20:58:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 106,
    "CMAKESOURCE" : 2,
    "MAKEFILE" : 3,
    "AUTOMAKE" : 7
  },
  "ElapsedTime" : 4373
}