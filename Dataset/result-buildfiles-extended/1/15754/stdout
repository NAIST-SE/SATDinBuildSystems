{
  "Repository" : "15754",
  "Revision" : "HEAD",
  "ObjectId" : "6ec51273b9cbf6b127751c61565e6a27178c92e5",
  "CommitTime" : "2019-03-20T09:09:39Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "7e4fb4e456dbdd75c48e551603ad05fefdf38507",
      "LastModified" : "2019-03-10T00:02:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##########   OPTIONS\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Project name\n",
        "Line" : 29,
        "CharPositionInLine" : 16
      },
      "2" : {
        "Text" : "#Enable build of test executables and 'make test' command\n",
        "Line" : 32,
        "CharPositionInLine" : 17
      },
      "3" : {
        "Text" : "######################################################################\n\n########## Packaging\n\n######################################################################\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Get Debian packages to automatically figure out the dependencies\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#Enable build of packages\n",
        "Line" : 72,
        "CharPositionInLine" : 15
      },
      "6" : {
        "Text" : "##########   RELEASE MODE\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#MSVC has crazy warnings for -Wall, we'll build up support to the higher warning levels\n",
        "Line" : 78,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#Enable the math defines (like M_PI!)\n",
        "Line" : 80,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#MSVC Crazily has \"min\" and \"max\" (yes, lowercase!) Macros defined\n\n#which conflict with the C++ standard algorithms! This define\n\n#instructs the compiler to not be an idiot and define those macros\n",
        "Line" : 82,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "##########   DEBUG MODE\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#  -D_GLIBCXX_DEBUG <- Not compatible with boost program_options\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "######################################################################\n\n########## COMPILER C++11/C++0x SUPPORT TESTS\n\n######################################################################\n\n### First check if the compiler supports C++11 or C++0x at all\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "######################################################################\n\n# Stack trace support\n\n######################################################################\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "######################################################################\n\n# Test for libbz2 (for compressed files)\n\n######################################################################\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "######################################################################\n\n##########  Boost support\n\n######################################################################\n\n#if(WIN32)\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#endif()\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "######################################################################\n\n# Determine the supported system thread library and link to it\n\n######################################################################\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "######################################################################\n\n# Test for libjudy requirements\n\n######################################################################\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "######################################################################\n\n# Visualiser support\n\n######################################################################\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#visualiser_dependency(GLX_FOUND \"GLX library\")\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "######################################################################\n\n########## HEADER DIRECTORIES\n\n######################################################################\n",
        "Line" : 257,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "######################################################################\n\n######### TARGETS\n\n######################################################################\n\n### Magnet library\n",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#Registers a magnet unit-test\n",
        "Line" : 269,
        "CharPositionInLine" : 27
      },
      "24" : {
        "Text" : "#magnet_test(scan_test : tests/scan_test.cpp magnet /opencl//OpenCL)\n\n#magnet_test(radixsort_NVIDIA_test : tests/radixsort_NVIDIA_test.cpp magnet /opencl//OpenCL scan_test ;\n\n#magnet_test(radixsort_AMD_test : tests/radixsort_AMD_test.cpp magnet /opencl//OpenCL scan_test ;\n\n#magnet_test(bitonicsort_test : tests/bitonicsort_test.cpp magnet /opencl//OpenCL ;\n\n#magnet_test(heapsort_test : tests/heapsort_test.cpp magnet /opencl//OpenCL ;\n\n#magnet_test(sorter_test : tests/sorter_test.cpp magnet /opencl//OpenCL ;\n",
        "Line" : 275,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#SET_TARGET_PROPERTIES(magnet_threadpool_test_exe PROPERTIES LINK_FLAGS -Wl,--no-as-needed) #Fix for a bug in gcc\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "### Coil\n\n# configuration\n",
        "Line" : 315,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Coil library\n",
        "Line" : 320,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "### DynamO\n",
        "Line" : 329,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#Registers a dynamo executable given the source file name\n",
        "Line" : 334,
        "CharPositionInLine" : 26
      },
      "30" : {
        "Text" : "#dynamo_exe(dynacollide)\n",
        "Line" : 342,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#Can't use dynamo_exe here, as we just need to compile \"dynarun.cpp\" differently\n",
        "Line" : 344,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# scripts\n",
        "Line" : 350,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# unit tests\n",
        "Line" : 369,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#Registers a unit test of DynamO\n",
        "Line" : 370,
        "CharPositionInLine" : 27
      },
      "CommentCount" : 35
    },
    "CTestConfig.cmake" : {
      "ObjectId" : "82ca42b4a99f86359ff6106b18ce1c6ff0420cbe",
      "LastModified" : "2014-11-07T20:26:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## This file should be placed in the root directory of your project.\n\n## Then modify the CMakeLists.txt file in the root directory of your\n\n## project to incorporate the testing dashboard.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindAVCodec.cmake" : {
      "ObjectId" : "618e5d6f84e9f141253b4b404153497ac2d141b4",
      "LastModified" : "2014-09-30T11:10:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find FFMPEG libavcodec\n\n# Once done, this will define\n\n#\n\n#  AVCodec_FOUND - the library is available\n\n#  AVCodec_INCLUDE_DIRS - the include directories\n\n#  AVCodec_LIBRARIES - the libraries\n\n#  AVCodec_INCLUDE - the file to #include (may be used in config.h)\n\n#\n\n# See documentation on how to write CMake scripts at\n\n# http://www.cmake.org/Wiki/CMake:How_To_Find_Libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO: pkg-config extra deps: libraw1394 theora vorbisenc\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Modules/FindAVUtil.cmake" : {
      "ObjectId" : "fbf2bd448fbed34d53ec8905223ee746420c0532",
      "LastModified" : "2014-09-30T11:10:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find FFMPEG libavutil\n\n# Once done, this will define\n\n#\n\n#  AVUtil_FOUND - the library is available\n\n#  AVUtil_INCLUDE_DIRS - the include directories\n\n#  AVUtil_LIBRARIES - the libraries\n\n#  AVUtil_INCLUDE - the file to #include (may be used in config.h)\n\n#\n\n# See documentation on how to write CMake scripts at\n\n# http://www.cmake.org/Wiki/CMake:How_To_Find_Libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindGLEW.cmake" : {
      "ObjectId" : "cca1dfedaed4bb1310579e79449d425a32bf9834",
      "LastModified" : "2015-03-20T09:43:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find the OpenGL Extension Wrangler Library (GLEW)\n\n# This module defines the following variables:\n\n#  GLEW_INCLUDE_DIRS - include directories for GLEW\n\n#  GLEW_LIBRARIES - libraries to link against GLEW\n\n#  GLEW_FOUND - true if GLEW has been found and can be used\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2012 Benjamin Eikel\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Modules/FindGLX.cmake" : {
      "ObjectId" : "fd641578d82d8b30c4abd4b6415cf793b14686c8",
      "LastModified" : "2016-06-20T16:00:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# FindGLX.txt\n\n# Copyright (C) 2014  Belledonne Communications, Grenoble France\n\n#\n\n############################################################################\n\n#\n\n# This program is free software; you can redistribute it and/or\n\n# modify it under the terms of the GNU General Public License\n\n# as published by the Free Software Foundation; either version 2\n\n# of the License, or (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; if not, write to the Free Software\n\n# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n\n#\n\n############################################################################\n\n#\n\n# - Find the GLX include file and library\n\n#\n\n#  GLX_FOUND - system has GLX\n\n#  GLX_INCLUDE_DIRS - the GLX include directory\n\n#  GLX_LIBRARIES - The libraries needed to use GLX\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO: check symbols in gl and glew\n",
        "Line" : 59,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    },
    "cmake/Modules/FindNumPy.cmake" : {
      "ObjectId" : "f14142f18652c1081f098319b47bf123329352de",
      "LastModified" : "2016-06-20T16:00:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find the NumPy libraries\n\n# This module finds if NumPy is installed, and sets the following variables\n\n# indicating where it is.\n\n#\n\n# TODO: Update to provide the libraries and paths for linking npymath lib.\n\n#\n\n#  NUMPY_FOUND               - was NumPy found\n\n#  NUMPY_VERSION             - the version of NumPy found as a string\n\n#  NUMPY_VERSION_MAJOR       - the major version number of NumPy\n\n#  NUMPY_VERSION_MINOR       - the minor version number of NumPy\n\n#  NUMPY_VERSION_PATCH       - the patch version number of NumPy\n\n#  NUMPY_VERSION_DECIMAL     - e.g. version 1.6.1 is 10601\n\n#  NUMPY_INCLUDE_DIRS        - path to the NumPy include files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#============================================================================\n\n# Copyright 2012 Continuum Analytics, Inc.\n\n#\n\n# MIT License\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining\n\n# a copy of this software and associated documentation files\n\n# (the \"Software\"), to deal in the Software without restriction, including\n\n# without limitation the rights to use, copy, modify, merge, publish,\n\n# distribute, sublicense, and/or sell copies of the Software, and to permit\n\n# persons to whom the Software is furnished to do so, subject to\n\n# the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included\n\n# in all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\n# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n\n# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR\n\n# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n\n# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\n# OTHER DEALINGS IN THE SOFTWARE.\n\n#\n\n#============================================================================\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Finding NumPy involves calling the Python interpreter\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Convert the process output into a list\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Just in case there is unexpected output from the Python command.\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The output from Python was unexpected. Raise an error always\n\n# here, because we found NumPy, but it appears to be corrupted somehow.\n",
        "Line" : 78,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Make sure all directory separators are '/'\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Get the major and minor version numbers\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cmake/Modules/FindOpenVR.cmake" : {
      "ObjectId" : "89c74c2801cc62ce2b23fd026441df828e4c4bd4",
      "LastModified" : "2017-11-03T01:15:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find the OpenVR SDK - currently designed for the version on GitHub.\n\n#\n\n# Cache Variables: (probably not for direct use in your scripts)\n\n#  OPENVR_INCLUDE_DIR\n\n#\n\n# Non-cache variables you might use in your CMakeLists.txt:\n\n#  OPENVR_FOUND\n\n#  OPENVR_INCLUDE_DIRS\n\n#  OPENVR_PLATFORM - something like Win32, Win64, etc.\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Original Author:\n\n# 2015 Ryan A. Pavlik <ryan@sensics.com>\n\n#\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# todo fails for universal builds\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Calculate which library path to use\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# SteamVR only supports 32-bit on OS X\n",
        "Line" : 53,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# TODO Massive hack!\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#message(WARNING \"${_root_dirs}, ${_libpath}, ${OPENVR_LIBRARY}\")\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#message(WARNING ${OPENVR_INCLUDE_DIR})\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cmake/Modules/GetGitRevisionDescription.cmake" : {
      "ObjectId" : "90c4f4b5b5fd14df0c66e52f941b7718ff27ef1f",
      "LastModified" : "2016-06-20T16:00:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Returns a version string from Git\n\n#\n\n# These functions force a re-configure on each git commit so that you can\n\n# trust the values of the variables in your build system.\n\n#\n\n#  get_git_head_revision(<refspecvar> <hashvar> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the refspec and sha hash of the current head revision\n\n#\n\n#  git_describe(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe on the source tree, and adjusting\n\n# the output so that it tests false if an error occurs.\n\n#\n\n#  git_get_exact_tag(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe --exact-match on the source tree,\n\n# and adjusting the output so that it tests false if there was no exact\n\n# matching tag.\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We must run the following at \"include\" time, not at function call time,\n\n# to find the path to this module rather than the path to a calling list file\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# .git dir not found, search parent directories\n",
        "Line" : 45,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "# We have reached the root directory, we are not in git\n",
        "Line" : 49,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# check if this is a submodule\n",
        "Line" : 56,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# TODO sanitize\n\n#if((${ARGN}\" MATCHES \"&&\") OR\n\n#\t(ARGN MATCHES \"||\") OR\n\n#\t(ARGN MATCHES \"\\\\;\"))\n\n#\tmessage(\"Please report the following error to the project!\")\n\n#\tmessage(FATAL_ERROR \"Looks like someone's doing something nefarious with git_describe! Passed arguments ${ARGN}\")\n\n#endif()\n",
        "Line" : 97,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "#message(STATUS \"Arguments to execute_process: ${ARGN}\")\n",
        "Line" : 105,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 7
    },
    "cmake/Modules/LibFindMacros.cmake" : {
      "ObjectId" : "69975c51be3f9c5e0ff372a4424f8de3b580ee88",
      "LastModified" : "2016-06-20T16:00:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Works the same as find_package, but forwards the \"REQUIRED\" and \"QUIET\" arguments\n\n# used for the current package. For this to work, the first parameter must be the\n\n# prefix of the current package, then the prefix of the new package etc, which are\n\n# passed to find_package.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMake developers made the UsePkgConfig system deprecated in the same release (2.6)\n\n# where they added pkg_check_modules. Consequently I need to support both in my scripts\n\n# to avoid those deprecated warnings. Here's a helper that does just that.\n\n# Works identically to pkg_check_modules, except that no checks are needed prior to use.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Do the final processing once the paths have been detected.\n\n# If include dirs are needed, ${PREFIX}_PROCESS_INCLUDES should be set to contain\n\n# all the variables, each of which contain one include directory.\n\n# Ditto for ${PREFIX}_PROCESS_LIBS and library files.\n\n# Will set ${PREFIX}_FOUND, ${PREFIX}_INCLUDE_DIRS and ${PREFIX}_LIBRARIES.\n\n# Also handles errors in case library detection was required, etc.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Skip processing if already processed during this run\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Start with the assumption that the library was found\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Process all includes and set _FOUND to false if any are missing\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Process all libraries and set _FOUND to false if any are missing\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Print message and/or exit on fatal error\n",
        "Line" : 64,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "cmake/Modules/SystemInformation.cmake" : {
      "ObjectId" : "86e7fd9ffeafce410d9698a8abe753e6f92ce6f4",
      "LastModified" : "2017-03-31T06:23:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# define a set of string with may-be useful readable name\n\n# this file is meant to be included in a CMakeLists.txt\n\n# not as a standalone CMake script\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# remove trailing quote that got globbed by the wildcard (greedy match)\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# In the WIN32 case try to guess a \"readable system name\"\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# information taken from\n\n# http://www.codeguru.com/cpp/w-p/system/systeminformation/article.php/c8973/\n\n# Win9x series\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# WinNTyyy series\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Win2000/XP series\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# WinVista/7/8 series\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Cross-compiling\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Compilers\n\n# taken from http://sourceforge.net/p/predef/wiki/Compilers/\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#Visual Studio 2003\n",
        "Line" : 80,
        "CharPositionInLine" : 50
      },
      "10" : {
        "Text" : "#Visual Studio 2005\n",
        "Line" : 83,
        "CharPositionInLine" : 50
      },
      "11" : {
        "Text" : "#Visual Studio 2008\n",
        "Line" : 86,
        "CharPositionInLine" : 50
      },
      "12" : {
        "Text" : "#Visual Studio 2010\n",
        "Line" : 89,
        "CharPositionInLine" : 51
      },
      "13" : {
        "Text" : "#Visual Studio 2012\n",
        "Line" : 92,
        "CharPositionInLine" : 51
      },
      "14" : {
        "Text" : "#Visual Studio 2013\n",
        "Line" : 95,
        "CharPositionInLine" : 51
      },
      "15" : {
        "Text" : "# In the Linux case try to guess the distro name/type\n\n# using either lsb_release program or fallback\n\n# to the content of the /etc/issue file\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#We prefer os-release as it is well formatted and\n\n#standardised. Also, /etc/issue contains no version info on\n\n#modern distros (e.g. CentOS7)\n",
        "Line" : 115,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "#If /etc/os-release does not exist, we fall back to parsing\n\n#/etc/issue, which is pretty popular.\n",
        "Line" : 121,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "#CentOS case\n",
        "Line" : 125,
        "CharPositionInLine" : 6
      },
      "19" : {
        "Text" : "# FIXME can we find that in /etc/issue\n",
        "Line" : 130,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "#Scientific Linux\n",
        "Line" : 133,
        "CharPositionInLine" : 6
      },
      "21" : {
        "Text" : "# FIXME can we find that in /etc/issue\n",
        "Line" : 138,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# Fedora case\n",
        "Line" : 141,
        "CharPositionInLine" : 6
      },
      "23" : {
        "Text" : "# FIXME can we find that in /etc/issue\n",
        "Line" : 146,
        "CharPositionInLine" : 8
      },
      "24" : {
        "Text" : "# Ubuntu case\n",
        "Line" : 149,
        "CharPositionInLine" : 6
      },
      "25" : {
        "Text" : "# FIXME can we find that in /etc/issue\n",
        "Line" : 154,
        "CharPositionInLine" : 8
      },
      "26" : {
        "Text" : "# Debian case\n",
        "Line" : 157,
        "CharPositionInLine" : 6
      },
      "27" : {
        "Text" : "# Open SuSE case\n",
        "Line" : 165,
        "CharPositionInLine" : 6
      },
      "28" : {
        "Text" : "# Mandriva case\n\n# TODO\n",
        "Line" : 172,
        "CharPositionInLine" : 6
      },
      "29" : {
        "Text" : "# Now mangle some names\n",
        "Line" : 176,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 30
    }
  },
  "FileTypes" : {
    "CMAKE" : 11
  },
  "ElapsedTime" : 2346
}