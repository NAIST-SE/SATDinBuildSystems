{
  "Repository" : "21984433",
  "Revision" : "HEAD",
  "ObjectId" : "edf99d8469566fa869d871efbd5bf6cd28c84832",
  "CommitTime" : "2019-04-15T21:04:38Z",
  "Files" : {
    "lib/boost_1.69.0/boost/safe_numerics/CMakeLists.txt" : {
      "ObjectId" : "cd94725f5d96d4d1477ec4772e1ade6ea783400f",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "####################\n\n# add include headers to IDE\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# end headers in IDE\n\n####################\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "lib/boost_1.69.0/boost/safe_numerics/concept/CMakeLists.txt" : {
      "ObjectId" : "dd2832baecb8287613b8cbf78581a1003bba1e3c",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "####################\n\n# add include headers to IDE\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# end headers in IDE\n\n####################\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "lib/boost_1.69.0/libs/align/CMakeLists.txt" : {
      "ObjectId" : "e07cf8da69db834b250e934841f5d50f983724c5",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2018 Glen Joseph Fernandes\n\n# (glenjofe@gmail.com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/assert/CMakeLists.txt" : {
      "ObjectId" : "25a2f4650f77b720b721c92d8c257adbd1519cd3",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2018 Mike Dev\n\n# Copyright 2018 Peter Dimov\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Partial (add_subdirectory only) and experimental CMake support\n\n# Subject to change; please do not rely on the contents of this file yet\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# `function` confuses FetchContent, sees empty CMAKE_CURRENT_LIST_DIR\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "lib/boost_1.69.0/libs/assert/test/CMakeLists.txt" : {
      "ObjectId" : "d91307fac93896cb58cad37e501c5a95a134cf05",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2018 Peter Dimov\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/CMakeLists.txt" : {
      "ObjectId" : "a4137229159a673c2a53abf106bdc6b00bb4c6d9",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# large object file format\n\n# strict C++\n",
        "Line" : 26,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "#/wd4503      # decorated name length exceeded, name was truncated\n",
        "Line" : 28,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# enable all warnings\n\n# Multi-processor compilation\n",
        "Line" : 29,
        "CharPositionInLine" : 22
      },
      "4" : {
        "Text" : "# for RelWithDebInfo builds, disable incremental linking\n\n# since CMake sets it ON by default for that build type and it\n\n# causes warnings\n\n#\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Must come before Boost includes, otherwise the\n\n# IDE sees the wrong file due to boost/ symlinks.\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Boost\n\n#\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# VFALCO I want static but \"b2 stage\" builds a minimal set which excludes static\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Some of the tests use deprecated APIs\n\n#add_definitions (-DBOOST_ASIO_NO_DEPRECATED=1)\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# OpenSSL\n\n#\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Tests and examples\n\n#\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "lib/boost_1.69.0/libs/beast/example/CMakeLists.txt" : {
      "ObjectId" : "c270400712e0665a81cc0454aca65148388e045b",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2013-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/example/advanced/CMakeLists.txt" : {
      "ObjectId" : "af83e043bab85fb75a962afe11a548e0ee539f71",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2013-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/example/advanced/server-flex/CMakeLists.txt" : {
      "ObjectId" : "981ce6b57ddb0346bb5332d14e470efc7435053d",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/example/advanced/server/CMakeLists.txt" : {
      "ObjectId" : "5d0b710cced47ab9fa0325192eff9268554091bc",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/example/cppcon2018/CMakeLists.txt" : {
      "ObjectId" : "c4d938e8b8a63f3f6520aeebe45e111ad1edb7d9",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/example/echo-op/CMakeLists.txt" : {
      "ObjectId" : "2f01a60179c95123857fad9de17d5db451768382",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/example/http/CMakeLists.txt" : {
      "ObjectId" : "d38604dd0fa09ddba79f81e8546a5ba1c4c2a771",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2013-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/example/http/client/CMakeLists.txt" : {
      "ObjectId" : "a8c09df0d9621b59cf20ec4b7ebbe6fcf7446397",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2013-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/example/http/client/async-ssl/CMakeLists.txt" : {
      "ObjectId" : "87eb2fedca86fa78ffacb09f0bffc149ec54373d",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/example/http/client/async/CMakeLists.txt" : {
      "ObjectId" : "6bde0bf495fe2ffb1b82ad85db6d0e2ad99ada3c",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/example/http/client/coro-ssl/CMakeLists.txt" : {
      "ObjectId" : "3ff783601ed6c609e94ab3b8654549a7ec520f35",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/example/http/client/coro/CMakeLists.txt" : {
      "ObjectId" : "073cce5d70d7f137c595c066918c947b71a97044",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/example/http/client/crawl/CMakeLists.txt" : {
      "ObjectId" : "dc87484c72831acafa88ba7eb75ef309fb2dc497",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/example/http/client/sync-ssl/CMakeLists.txt" : {
      "ObjectId" : "9683e62d01a2df3392ee538a124f5e0bbbca9db5",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/example/http/client/sync/CMakeLists.txt" : {
      "ObjectId" : "399e61cee58038f6e144d361e56c351f736ba9c7",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/example/http/server/CMakeLists.txt" : {
      "ObjectId" : "350b465a7bd2a91fe687e373d5fdbc29190301c1",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2013-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/example/http/server/async-ssl/CMakeLists.txt" : {
      "ObjectId" : "130f45502031075ba5c9e3956f620a895ee4f93b",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/example/http/server/async/CMakeLists.txt" : {
      "ObjectId" : "dda889b7f3c3f82c13330f7254d9a76df46ac49d",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/example/http/server/coro-ssl/CMakeLists.txt" : {
      "ObjectId" : "b578745931880fbf127efdb29f55283a94fd6ba7",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/example/http/server/coro/CMakeLists.txt" : {
      "ObjectId" : "46d3c2356f86030f0100d8822f701195d81f5b7f",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/example/http/server/fast/CMakeLists.txt" : {
      "ObjectId" : "f041eb404a355ce49c4f184a54ac68425696bb6a",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/example/http/server/flex/CMakeLists.txt" : {
      "ObjectId" : "3011e6df97a2213d48a506bff45e21b6e1c6f811",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/example/http/server/small/CMakeLists.txt" : {
      "ObjectId" : "b6eb7f2550321a618f9b7ca63b4629a51f1e7dfe",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/example/http/server/stackless-ssl/CMakeLists.txt" : {
      "ObjectId" : "edf313388ed0f6c304a69596acb95ae854b84697",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/example/http/server/stackless/CMakeLists.txt" : {
      "ObjectId" : "c1ee6ecbf14861537bcbf0f90f2ea41679c9cab1",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/example/http/server/sync-ssl/CMakeLists.txt" : {
      "ObjectId" : "792cef82329718a40b5a638539d72a29c20df5c6",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/example/http/server/sync/CMakeLists.txt" : {
      "ObjectId" : "ced30da89b81f10a4a924047fa95f8431a1d40a1",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/example/websocket/CMakeLists.txt" : {
      "ObjectId" : "d38604dd0fa09ddba79f81e8546a5ba1c4c2a771",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2013-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/example/websocket/client/CMakeLists.txt" : {
      "ObjectId" : "5955ca18fd8fb30d10fed653c121faf724b489fe",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2013-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/example/websocket/client/async-ssl/CMakeLists.txt" : {
      "ObjectId" : "c02f4d065ad502dcf36a2a957262d3438513f6a3",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/example/websocket/client/async/CMakeLists.txt" : {
      "ObjectId" : "73f2c07b5f0f627287edeb7effc3a6d7977dc327",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/example/websocket/client/coro-ssl/CMakeLists.txt" : {
      "ObjectId" : "7b9f167aff8e22353efe4f775da66e631b17e4e3",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/example/websocket/client/coro/CMakeLists.txt" : {
      "ObjectId" : "1bdcf6c671d62466513ebb88d60bcc72ceefa02e",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/example/websocket/client/sync-ssl/CMakeLists.txt" : {
      "ObjectId" : "11c5f030c7df09a45005751c72465cbb57b9e1fa",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/example/websocket/client/sync/CMakeLists.txt" : {
      "ObjectId" : "8196f0da3c42c85054e3cfd2c313e2cf62d7bbaf",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/example/websocket/server/CMakeLists.txt" : {
      "ObjectId" : "23a8bdf1814f6ffd9a5c0c8f58a9078dc2202e50",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2013-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/example/websocket/server/async-ssl/CMakeLists.txt" : {
      "ObjectId" : "09496800b1ee1915263a69dc7e469720a5aee550",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/example/websocket/server/async/CMakeLists.txt" : {
      "ObjectId" : "d9fb1093abbfe84fe0d55f6dbb19a6d01a9e0bac",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/example/websocket/server/coro-ssl/CMakeLists.txt" : {
      "ObjectId" : "2d9d7120d4dc58d8d01e657532b75cdf81f17020",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/example/websocket/server/coro/CMakeLists.txt" : {
      "ObjectId" : "bf4c5a363fa19669a74b9d6602c474c6e64d5d7e",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/example/websocket/server/fast/CMakeLists.txt" : {
      "ObjectId" : "df44e5e92189013471817fe6bd606500eddec22d",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/example/websocket/server/stackless-ssl/CMakeLists.txt" : {
      "ObjectId" : "bd0e882827de8da81554701b07779f328008a7ca",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/example/websocket/server/stackless/CMakeLists.txt" : {
      "ObjectId" : "b5f51b21e917ec5e8c72d0dbf4bd96ae9e0464d2",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/example/websocket/server/sync-ssl/CMakeLists.txt" : {
      "ObjectId" : "3a7e32fe584d226897ba3eddd4019ec02cdb6471",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/example/websocket/server/sync/CMakeLists.txt" : {
      "ObjectId" : "357a3b6a702e696dba9efae8adc4641a78bb4d1d",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/test/CMakeLists.txt" : {
      "ObjectId" : "16cef92add979cf6016cb839500c0572947a71c0",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/test/beast/CMakeLists.txt" : {
      "ObjectId" : "ab0de8030ad00e06a71bca0124fb4724498bc837",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/test/beast/core/CMakeLists.txt" : {
      "ObjectId" : "abb40c533582fb9eef951f4ce01673dafa646860",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/test/beast/experimental/CMakeLists.txt" : {
      "ObjectId" : "45d36c741e523dad1e85c39297dea2cb3f02b714",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/test/beast/http/CMakeLists.txt" : {
      "ObjectId" : "8837355d6e7c277a0cca6137dabfe47f66d52fd0",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/test/beast/websocket/CMakeLists.txt" : {
      "ObjectId" : "4a26989370a84ac05558f01bb529819d4ffd2a76",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/test/beast/zlib/CMakeLists.txt" : {
      "ObjectId" : "31da3e5946dd671f2b2002ecdb1817f3d7e294c7",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/test/bench/CMakeLists.txt" : {
      "ObjectId" : "849f032a9c492aebe8f5dd15dc0960fc67d3e1ed",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/test/bench/buffers/CMakeLists.txt" : {
      "ObjectId" : "7609b6ef633a05d278dc5051019de4e30ce47a5d",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/test/bench/parser/CMakeLists.txt" : {
      "ObjectId" : "7141000af422276cb4f903fa8db79528daebd8a8",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/test/bench/utf8_checker/CMakeLists.txt" : {
      "ObjectId" : "6b0f27d358d3c6fa0b875c2cca91bccd22ef0e3a",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/test/bench/wsload/CMakeLists.txt" : {
      "ObjectId" : "4976c2e2007695c94ebc55223328e49d4ed55784",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/test/bench/zlib/CMakeLists.txt" : {
      "ObjectId" : "802b06277f7c68a0e282b0fa36f2f919b26a9c28",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/test/doc/CMakeLists.txt" : {
      "ObjectId" : "e700b10623e2284885450bd94340e6f9b2156e7a",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/test/example/CMakeLists.txt" : {
      "ObjectId" : "00d48e8ee7e79e33a01c8576bb60e28cb3ef3bd8",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/test/example/common/CMakeLists.txt" : {
      "ObjectId" : "7b320f083e3637ad866ba3449cd240dc0edaa383",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Official repository: https://github.com/boostorg/beast\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/test/extern/zlib-1.2.11/CMakeLists.txt" : {
      "ObjectId" : "0fe939df689306f1d0c7c657cb64dd0f0dedc134",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Check to see if we have large file support\n\n#\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We add these other definitions here because CheckTypeSize.cmake\n\n# in CMake 2.4.x does not automatically do so and we want\n\n# compatibility with CMake 2.4.x.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# clear variable\n",
        "Line" : 47,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "#\n\n# Check for fseeko\n\n#\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Check for unistd.h\n\n#\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If we're doing an out of source build and the user has a zconf.h\n\n# in their source tree...\n",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#============================================================================\n\n# zlib\n\n#============================================================================\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# If present will override custom build rule below.\n",
        "Line" : 128,
        "CharPositionInLine" : 23
      },
      "8" : {
        "Text" : "# parse the full version number from zlib.h and include in ZLIB_FULL_VERSION\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# This gets us DLL resource information when compiling on MinGW.\n",
        "Line" : 171,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# This property causes shared libraries on Linux to have the full version\n\n# encoded into their final filename.  We disable this on Cygwin because\n\n# it causes cygz-${ZLIB_FULL_VERSION}.dll to be created when cygz.dll\n\n# seems to be the default.\n\n#\n\n# This has no effect with MSVC, on that platform the version info for\n\n# the DLL comes from the resource file win32/zlib1.rc\n",
        "Line" : 192,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# On unix-like platforms the library is almost always called libz\n",
        "Line" : 203,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Creates zlib1.dll when building shared library version\n",
        "Line" : 209,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "#============================================================================\n\n# Example binaries\n\n#============================================================================\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "lib/boost_1.69.0/libs/beast/test/extern/zlib-1.2.11/Makefile" : {
      "ObjectId" : "6bba86c73fca2abda416baa1a7cf883b3494fb29",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "lib/boost_1.69.0/libs/beast/test/extern/zlib-1.2.11/contrib/blast/Makefile" : {
      "ObjectId" : "9be80bafe050eed57029ef2e690f36677a3003c0",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "lib/boost_1.69.0/libs/beast/test/extern/zlib-1.2.11/contrib/minizip/Makefile" : {
      "ObjectId" : "84eaad20d4fb19b00965268dd75d7e9b66c8cc21",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "lib/boost_1.69.0/libs/beast/test/extern/zlib-1.2.11/contrib/minizip/Makefile.am" : {
      "ObjectId" : "d343011ebc3b3fd78d2bc3a29801a083c038cf0c",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "lib/boost_1.69.0/libs/beast/test/extern/zlib-1.2.11/contrib/puff/Makefile" : {
      "ObjectId" : "0e2594c80885c0dbea13c6d22b2e60e9fb82b51f",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# puff full coverage test (should say 100%)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/beast/test/extern/zlib-1.2.11/contrib/untgz/Makefile" : {
      "ObjectId" : "b54266fba20a167a1d83b7afd503dfd2f849ca57",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "lib/boost_1.69.0/libs/beast/test/extern/zlib-1.2.11/nintendods/Makefile" : {
      "ObjectId" : "21337d01ab2fe20743682125994666e20af6b7e7",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# TARGET is the name of the output\n\n# BUILD is the directory where object files & intermediate files will be placed\n\n# SOURCES is a list of directories containing source code\n\n# DATA is a list of directories containing data files\n\n# INCLUDES is a list of directories containing header files\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# options for code generation\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# list of directories containing libraries, this must be the top level containing\n\n# include and lib\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# no real need to edit anything past this point unless you need to add additional\n\n# rules for different file extensions\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# use CXX for linking C++ projects, CC for standard C\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# main targets\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#---------------------------------------------------------------------------------------\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#---------------------------------------------------------------------------------------\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "lib/boost_1.69.0/libs/callable_traits/CMakeLists.txt" : {
      "ObjectId" : "970dcf31d37362f88baf50dd1079f48b75c354ac",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright Louis Dionne 2015\n\n# Modified Work Copyright Barrett Adair 2015-2017\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Defaults to C++14 if not set:\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Setting up CMake options and compiler flags (more flags can be set on a per-target basis or in subdirectories)\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# enable all warnings and treat them all as errors\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# MSVC/Clang-cl builds need -Qunused-arguments\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# for better template error debugging\n",
        "Line" : 46,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# enforce strict standards compliance\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# use the most recent C++ standard available\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# transactional memory - currently only available in GCC 6 and later\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#\n\n#find_package(Doxygen)\n\n##find_package(Meta)\n\n#find_package(PythonInterp 2.7)\n\n#find_package(Ruby 2.1)\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "##############################################################################\n\n# callable_traits_target_name_for(<output variable> <source file> [ext])\n\n# Returns the target name associated to a source file. If the path of the\n\n# source file relative from the root of callable_traits is `path/to/source/file.ext`,\n\n# the target name associated to it will be `path.to.source.file`.\n\n#\n\n# The extension of the file should be specified as a last argument. If no\n\n# extension is specified, the `.cpp` extension is assumed.\n\n##############################################################################\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\n\n# callable_traits_add_test(<name> <command> [<arg>...])\n\n# Creates a test called `name`, which runs the given `command` with the given args.\n\n##############################################################################\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\n\n# Setup the `check` target to build and then run all the tests and examples.\n\n##############################################################################\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "##############################################################################\n\n# Setup the 'install' target and the package config file.\n\n##############################################################################\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "lib/boost_1.69.0/libs/callable_traits/example/CMakeLists.txt" : {
      "ObjectId" : "7e9266c1ff90728ff13d302cdb93033ba92c3fdf",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright Louis Dionne 2015\n\n# Modified Work Copyright Barrett Adair 2015-2017\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/callable_traits/test/CMakeLists.txt" : {
      "ObjectId" : "87360fb772af39cc29041ec2345ae6168880f68a",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright Louis Dionne 2015\n\n# Modified Work Copyright Barrett Adair 2015-2017\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n#   callable_traits_add_unit_test(<name> ...)\n\n#\n\n# Equivalent to `callable_traits_add_test`, except the test is also added as a\n\n# dependency of the `tests` target.\n\n##############################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "lib/boost_1.69.0/libs/circular_buffer/CMakeLists.txt" : {
      "ObjectId" : "1926e73000ce3bb9abd14b83ffe7ea2f4668fbd9",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2018 Glen Joseph Fernandes\n\n# (glenjofe@gmail.com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/compute/CMakeLists.txt" : {
      "ObjectId" : "71e7722e00eade7f50e76d9beb8c958744623955",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n#  Copyright (c) 2013 Kyle Lutz <kyle.r.lutz@gmail.com>\n\n#\n\n#  Distributed under the Boost Software License, Version 1.0\n\n#  See accompanying file LICENSE_1_0.txt or copy at\n\n#  http://www.boost.org/LICENSE_1_0.txt\n\n#\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# find OpenCL\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# find Boost\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# optional support for c++11\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# optional support for offline-caching\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# thread-safety options\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# optional third-party libraries\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# optional support for boost dynamic libraries\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# for default use statis libs\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# compiler options\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Visual Studio C++\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Not enough actual parameters for a BOOST_PP macro\n\n# Warning C4244: 'initializing': conversion from 'double' to 'int', possible loss of data\n\n# Warning C4305: 'initializing': truncation from 'double' to 'float'\n\n# Warning C4800: 'uint32_t' : forcing value to bool 'true' or 'false' (performance warning)\n\n# Warning C4838: conversion from 'double' to 'float' requires a narrowing conversion\n",
        "Line" : 92,
        "CharPositionInLine" : 52
      },
      "12" : {
        "Text" : "# configure cmake config file\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# install cmake config file\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# install header files\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "lib/boost_1.69.0/libs/compute/cmake/FindBolt.cmake" : {
      "ObjectId" : "0820de0d073aa8ac45e7842fe8722efa7749a5a5",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################                                                                                     \n\n#   © 2012,2014 Advanced Micro Devices, Inc. All rights reserved.                                     \n\n#                                                                                    \n\n#   Licensed under the Apache License, Version 2.0 (the \"License\");   \n\n#   you may not use this file except in compliance with the License.                 \n\n#   You may obtain a copy of the License at                                          \n\n#                                                                                    \n\n#       http://www.apache.org/licenses/LICENSE-2.0                      \n\n#                                                                                    \n\n#   Unless required by applicable law or agreed to in writing, software              \n\n#   distributed under the License is distributed on an \"AS IS\" BASIS,              \n\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.         \n\n#   See the License for the specific language governing permissions and              \n\n#   limitations under the License.                                                   \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "############################################################################                                                                                     \n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Locate an BOLT implementation.\n\n#\n\n# Defines the following variables:\n\n#\n\n#   BOLT_FOUND - Found an Bolt imlementation\n\n#\n\n# Also defines the library variables below as normal\n\n# variables.\n\n#\n\n#   BOLT_LIBRARIES - These contain debug/optimized keywords when a debugging library is found\n\n#   BOLT_INCLUDE_DIRS - All relevant Bolt include directories\n\n#\n\n# Accepts the following variables as input:\n\n#\n\n#   BOLT_ROOT - (as a CMake or environment variable)\n\n#                The root directory of an BOLT installation\n\n#\n\n#   FIND_LIBRARY_USE_LIB64_PATHS - Global property that controls whether FindBOLT should search for \n\n#                              64bit or 32bit libs\n\n#\n\n#-----------------------\n\n# Example Usage:\n\n#\n\n#    find_package(BOLT REQUIRED)\n\n#    include_directories(${BOLT_INCLUDE_DIRS})\n\n#\n\n#    add_executable(foo foo.cc)\n\n#    target_link_libraries(foo ${BOLT_LIBRARIES})\n\n#\n\n#-----------------------\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This module helps to use BOLT_FIND_COMPONENTS, BOLT_FIND_REQUIRED, BOLT_FIND_QUIETLY\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Search for 64bit libs if FIND_LIBRARY_USE_LIB64_PATHS is set to true in the global environment, 32bit libs else\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Debug print statements\n\n#message( \"BOLT_LIBRARY_PATH_SUFFIXES: ${BOLT_LIBRARY_PATH_SUFFIXES}\" )\n\n#message( \"ENV{BOLT_ROOT}: $ENV{BOLT_ROOT}\" )\n\n#message( \"BOLT_FIND_COMPONENTS: ${BOLT_FIND_COMPONENTS}\" )\n\n#message( \"BOLT_FIND_REQUIRED: ${BOLT_FIND_REQUIRED}\" )\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set the component to find if the user does not specify explicitely\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Eventually, Bolt may support multiple backends, but for now it only supports CL\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Find and set the location of main BOLT static lib file\n",
        "Line" : 94,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Find and set the location of main BOLT static lib file\n",
        "Line" : 105,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 10
    },
    "lib/boost_1.69.0/libs/compute/cmake/FindEigen.cmake" : {
      "ObjectId" : "2cd3e12c0c243a6cc745bf787b7d765c3198ff59",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Ceres Solver - A fast non-linear least squares minimizer\n\n# Copyright 2013 Google Inc. All rights reserved.\n\n# http://code.google.com/p/ceres-solver/\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright notice,\n\n#   this list of conditions and the following disclaimer.\n\n# * Redistributions in binary form must reproduce the above copyright notice,\n\n#   this list of conditions and the following disclaimer in the documentation\n\n#   and/or other materials provided with the distribution.\n\n# * Neither the name of Google Inc. nor the names of its contributors may be\n\n#   used to endorse or promote products derived from this software without\n\n#   specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n# Author: alexs.mac@gmail.com (Alex Stewart)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FindEigen.cmake - Find Eigen library, version >= 3.\n\n#\n\n# This module defines the following variables:\n\n#\n\n# EIGEN_FOUND: TRUE iff Eigen is found.\n\n# EIGEN_INCLUDE_DIRS: Include directories for Eigen.\n\n#\n\n# EIGEN_VERSION: Extracted from Eigen/src/Core/util/Macros.h\n\n# EIGEN_WORLD_VERSION: Equal to 3 if EIGEN_VERSION = 3.2.0\n\n# EIGEN_MAJOR_VERSION: Equal to 2 if EIGEN_VERSION = 3.2.0\n\n# EIGEN_MINOR_VERSION: Equal to 0 if EIGEN_VERSION = 3.2.0\n\n#\n\n# The following variables control the behaviour of this module:\n\n#\n\n# EIGEN_INCLUDE_DIR_HINTS: List of additional directories in which to\n\n#                          search for eigen includes, e.g: /timbuktu/eigen3.\n\n#\n\n# The following variables are also defined by this module, but in line with\n\n# CMake recommended FindPackage() module style should NOT be referenced directly\n\n# by callers (use the plural variables detailed above instead).  These variables\n\n# do however affect the behaviour of the module via FIND_[PATH/LIBRARY]() which\n\n# are NOT re-called (i.e. search for library is not repeated) if these variables\n\n# are set with valid values _in the CMake cache_. This means that if these\n\n# variables are set directly in the cache, either by the user in the CMake GUI,\n\n# or by the user passing -DVAR=VALUE directives to CMake when called (which\n\n# explicitly defines a cache variable), then they will be used verbatim,\n\n# bypassing the HINTS variables and other hard-coded search locations.\n\n#\n\n# EIGEN_INCLUDE_DIR: Include directory for CXSparse, not including the\n\n#                    include directory of any dependencies.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Called if we failed to find Eigen or any of it's required dependencies,\n\n# unsets all public (designed to be used externally) variables and reports\n\n# error message at priority depending upon [REQUIRED/QUIET/<NONE>] argument.\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make results of search visible in the CMake GUI if Eigen has not\n\n# been found so that user does not have to toggle to advanced view.\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Note <package>_FIND_[REQUIRED/QUIETLY] variables defined by FindPackage()\n\n# use the camelcase library name, not uppercase.\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Neither QUIETLY nor REQUIRED, use no priority which emits a message\n\n# but continues configuration and allows generation.\n",
        "Line" : 79,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Search user-installed locations first, so that we prefer user installs\n\n# to system installs where both exist.\n\n#\n\n# TODO: Add standard Windows search locations for Eigen.\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Mac OS X\n",
        "Line" : 91,
        "CharPositionInLine" : 37
      },
      "8" : {
        "Text" : "# Mac OS X.\n",
        "Line" : 92,
        "CharPositionInLine" : 42
      },
      "9" : {
        "Text" : "# Search supplied hint directories first if supplied.\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Mark internally as found, then verify. EIGEN_REPORT_NOT_FOUND() unsets\n\n# if called.\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Extract Eigen version from Eigen/src/Core/util/Macros.h\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# This is on a single line s/t CMake does not interpret it as a list of\n\n# elements and insert ';' separators which would result in 3.;2.;0 nonsense.\n",
        "Line" : 139,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Set standard CMake FindPackage variables if found.\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Handle REQUIRED / QUIET optional arguments and version.\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Only mark internal variables as advanced if we found Eigen, otherwise\n\n# leave it visible in the standard GUI for the user to set manually.\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "lib/boost_1.69.0/libs/compute/cmake/FindTBB.cmake" : {
      "ObjectId" : "d299fd140487a450b6565a562f14bceb293336a6",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate Intel Threading Building Blocks include paths and libraries\n\n# FindTBB.cmake can be found at https://code.google.com/p/findtbb/\n\n# Written by Hannes Hofmann <hannes.hofmann _at_ informatik.uni-erlangen.de>\n\n# Improvements by Gino van den Bergen <gino _at_ dtecta.com>,\n\n#   Florian Uhlig <F.Uhlig _at_ gsi.de>,\n\n#   Jiri Marsik <jiri.marsik89 _at_ gmail.com>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The MIT License\n\n#\n\n# Copyright (c) 2011 Hannes Hofmann\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in\n\n# all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\n# THE SOFTWARE.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# GvdB: This module uses the environment variable TBB_ARCH_PLATFORM which defines architecture and compiler.\n\n#   e.g. \"ia32/vc8\" or \"em64t/cc4.1.0_libc2.4_kernel2.6.16.21\"\n\n#   TBB_ARCH_PLATFORM is set by the build script `tbbvars[.bat|.sh|.csh], which can be found\n\n#   in the TBB installation directory (TBB_INSTALL_DIR).\n\n#\n\n# GvdB: Mac OS X distribution places libraries directly in lib directory.\n\n#\n\n# For backwards compatibility, you may explicitely set the CMake variables TBB_ARCHITECTURE and TBB_COMPILER.\n\n# TBB_ARCHITECTURE [ ia32 | em64t | itanium ]\n\n#   which architecture to use\n\n# TBB_COMPILER e.g. vc9 or cc3.2.3_libc2.3.2_kernel2.4.21 or cc4.0.1_os10.4.9\n\n#   which compiler to use (detected automatically on Windows)\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This module respects\n\n# TBB_INSTALL_DIR or $ENV{TBB21_INSTALL_DIR} or $ENV{TBB_INSTALL_DIR}\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This module defines\n\n# TBB_INCLUDE_DIRS, where to find task_scheduler_init.h, etc.\n\n# TBB_LIBRARY_DIRS, where to find libtbb, libtbbmalloc\n\n# TBB_DEBUG_LIBRARY_DIRS, where to find libtbb_debug, libtbbmalloc_debug\n\n# TBB_INSTALL_DIR, the base TBB install directory\n\n# TBB_LIBRARIES, the libraries to link against to use TBB.\n\n# TBB_DEBUG_LIBRARIES, the libraries to link against to use TBB with debug symbols.\n\n# TBB_FOUND, If false, don't try to use TBB.\n\n# TBB_INTERFACE_VERSION, as defined in tbb/tbb_stddef.h\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# has em64t/vc8 em64t/vc9\n\n# has ia32/vc7.1 ia32/vc8 ia32/vc9\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Todo: add other Windows compilers such as ICL.\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# MAC\n",
        "Line" : 83,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# libs: libtbb.dylib, libtbbmalloc.dylib, *_debug\n",
        "Line" : 85,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# default flavor on apple: ia32/cc4.0.1_os10.4.9\n\n# Jiri: There is no reason to presume there is only one flavor and\n\n#       that user's setting of variables should be ignored.\n",
        "Line" : 90,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# LINUX\n",
        "Line" : 104,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# has em64t/cc3.2.3_libc2.3.2_kernel2.4.21 em64t/cc3.3.3_libc2.3.3_kernel2.6.5 em64t/cc3.4.3_libc2.3.4_kernel2.6.9 em64t/cc4.1.0_libc2.4_kernel2.6.16.21\n\n# has ia32/*\n\n# has itanium/*\n",
        "Line" : 110,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# SUN\n\n# not yet supported\n\n# has em64t/cc3.4.3_kernel5.10\n\n# has ia32/*\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#-- Clear the public variables\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#-- Find TBB install dir and set ${_TBB_INSTALL_DIR} and cached ${TBB_INSTALL_DIR}\n\n# first: use CMake variable TBB_INSTALL_DIR\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# second: use environment variable\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Intel recommends setting TBB21_INSTALL_DIR\n",
        "Line" : 140,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# third: try to find path automatically\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# sanity check\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# finally: set the cached CMake variable TBB_INSTALL_DIR\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#-- A macro to rewrite the paths of the library. This is necessary, because\n\n#   find_library() always found the em64t/vc9 version of the TBB libs\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#    if (NOT \"${_TBB_ARCHITECTURE}\" STREQUAL \"em64t\")\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#    endif (NOT \"${_TBB_ARCHITECTURE}\" STREQUAL \"em64t\")\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#-- Look for include directory and set ${TBB_INCLUDE_DIR}\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Jiri: tbbvars now sets the CPATH environment variable to the directory\n\n#       containing the headers.\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#-- Look for libraries\n\n# GvdB: $ENV{TBB_ARCH_PLATFORM} is set by the build script tbbvars[.bat|.sh|.csh]\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Jiri: This block isn't mutually exclusive with the previous one\n\n#       (hence no else), instead I test if the user really specified\n\n#       the variables in question.\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# HH: deprecated\n",
        "Line" : 205,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# Jiri: It doesn't hurt to look in more places, so I store the hints from\n\n#       ENV{TBB_ARCH_PLATFORM} and the TBB_ARCHITECTURE and TBB_COMPILER\n\n#       variables and search them both.\n",
        "Line" : 207,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# GvdB: Mac OS X distribution places libraries directly in lib directory.\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Jiri: No reason not to check the default paths. From recent versions,\n\n#       tbbvars has started exporting the LIBRARY_PATH and LD_LIBRARY_PATH\n\n#       variables, which now point to the directories of the lib files.\n\n#       It all makes more sense to use the ${_TBB_LIBRARY_DIR} as a HINTS\n\n#       argument instead of the implicit PATHS as it isn't hard-coded\n\n#       but computed by system introspection. Searching the LIBRARY_PATH\n\n#       and LD_LIBRARY_PATH environment variables is now even more important\n\n#       that tbbvars doesn't export TBB_ARCH_PLATFORM and it facilitates\n\n#       the use of TBB built from sources.\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#Extract path from TBB_LIBRARY name\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#TBB_CORRECT_LIB_DIR(TBB_LIBRARY)\n\n#TBB_CORRECT_LIB_DIR(TBB_MALLOC_LIBRARY)\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#-- Look for debug libraries\n\n# Jiri: Changed the same way as for the release libraries.\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Jiri: Self-built TBB stores the debug libraries in a separate directory.\n\n#       Extract path from TBB_LIBRARY_DEBUG name\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#TBB_CORRECT_LIB_DIR(TBB_LIBRARY_DEBUG)\n\n#TBB_CORRECT_LIB_DIR(TBB_MALLOC_LIBRARY_DEBUG)\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Jiri: Self-built TBB stores the debug libraries in a separate directory.\n",
        "Line" : 260,
        "CharPositionInLine" : 8
      },
      "37" : {
        "Text" : "# do only throw fatal, if this pkg is REQUIRED\n",
        "Line" : 270,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 38
    },
    "lib/boost_1.69.0/libs/compute/cmake/opencl/FindOpenCL.cmake" : {
      "ObjectId" : "0a60e8d15eab2828fb7e9e18b380a9cd318bd097",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find OpenCL\n\n# This module tries to find an OpenCL implementation on your system. It supports\n\n# AMD / ATI, Apple and NVIDIA implementations.\n\n#\n\n# To set the paths manually, define these environment variables:\n\n# OpenCL_INCPATH    - Include path (e.g. OpenCL_INCPATH=/opt/cuda/4.0/cuda/include)\n\n# OpenCL_LIBPATH    - Library path (e.h. OpenCL_LIBPATH=/usr/lib64/nvidia)\n\n#\n\n# Once done this will define\n\n#  OpenCL_FOUND         - system has OpenCL\n\n#  OpenCL_INCLUDE_DIRS  - the OpenCL include directory\n\n#  OpenCL_LIBRARIES     - link these to use OpenCL\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The AMD SDK currently installs both x86 and x86_64 libraries\n\n# This is only a hack to find out architecture\n",
        "Line" : 30,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# On Win32 search relative to the library\n",
        "Line" : 43,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# Unix style platforms\n",
        "Line" : 51,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# The AMD SDK currently does not place its headers\n\n# in /usr/include, therefore also search relative\n\n# to the library\n",
        "Line" : 59,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# for Mali GPUs, libmali must be linked\n",
        "Line" : 64,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# This is often the same, so clean up\n",
        "Line" : 80,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "lib/boost_1.69.0/libs/compute/example/CMakeLists.txt" : {
      "ObjectId" : "a5708cb0cc86e588e14b0c397b5ae834749e21d6",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n#  Copyright (c) 2013-2014 Kyle Lutz <kyle.r.lutz@gmail.com>\n\n#\n\n#  Distributed under the Boost Software License, Version 1.0\n\n#  See accompanying file LICENSE_1_0.txt or copy at\n\n#  http://www.boost.org/LICENSE_1_0.txt\n\n#\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# boost library link dependencies\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add example program to list of tests (if testing is enabled)\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# opencl test example\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# eigen examples\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# opencv examples\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# opengl/vtk examples\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# qt examples\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# look for Qt4 in the first place\n",
        "Line" : 117,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# build with Qt4\n",
        "Line" : 121,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# look for Qt5\n",
        "Line" : 127,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# build with Qt5\n",
        "Line" : 131,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# no valid Qt framework found\n",
        "Line" : 139,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# required by both versions\n",
        "Line" : 144,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# add examples\n",
        "Line" : 148,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 15
    },
    "lib/boost_1.69.0/libs/compute/perf/CMakeLists.txt" : {
      "ObjectId" : "b04429e9d3c0dc4eed6583c2ff9d5c19ab49c7de",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n#  Copyright (c) 2013 Kyle Lutz <kyle.r.lutz@gmail.com>\n\n#\n\n#  Distributed under the Boost Software License, Version 1.0\n\n#  See accompanying file LICENSE_1_0.txt or copy at\n\n#  http://www.boost.org/LICENSE_1_0.txt\n\n#\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# stl benchmarks (for comparison)\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# stl benchmarks which require c++11\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# cuda/thrust benchmarks (for comparison)\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# intel tbb benchmarks (for comparison)\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# bolt c++ template lib benchmarks (for comparison)\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "lib/boost_1.69.0/libs/compute/test/CMakeLists.txt" : {
      "ObjectId" : "a0ca0cf1b4100d3591316905a6a52b32d8ec9a35",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n#  Copyright (c) 2013 Kyle Lutz <kyle.r.lutz@gmail.com>\n\n#\n\n#  Distributed under the Boost Software License, Version 1.0\n\n#  See accompanying file LICENSE_1_0.txt or copy at\n\n#  http://www.boost.org/LICENSE_1_0.txt\n\n#\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# allow tests to use C++11 features\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# enable automatic kernel compilation error messages for tests\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# enable code coverage generation (only with GCC for now)\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# add path to test data dir\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# link with coverage library\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# miscellaneous tests\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# extra tests (interop tests, linkage tests, etc.)\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "lib/boost_1.69.0/libs/compute/test/extra/CMakeLists.txt" : {
      "ObjectId" : "2fb58a2843dd65ee5d3d997fe81bd72619da2966",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n#  Copyright (c) 2015 Kyle Lutz <kyle.r.lutz@gmail.com>\n\n# \n\n#  Distributed under the Boost Software License, Version 1.0\n\n#  See accompanying file LICENSE_1_0.txt or copy at\n\n#  http://www.boost.org/LICENSE_1_0.txt\n\n#\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# include local test headers\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check for linkage problems\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# link with coverage library\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# eigen interop tests\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# opencv interop tests\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# qt interop tests\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# look for Qt4 in the first place\n",
        "Line" : 45,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# look for Qt5\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# no valid Qt framework found\n",
        "Line" : 62,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# the opengl interop test depends on qt to create the opengl context\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# vtk interop tests\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "lib/boost_1.69.0/libs/concept_check/CMakeLists.txt" : {
      "ObjectId" : "0cc25427c7e2a0bd1a3cc1902ee9864286cb6964",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2018 Glen Joseph Fernandes\n\n# (glenjofe@gmail.com)\n\n#\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/config/CMakeLists.txt" : {
      "ObjectId" : "09fec397d381fda3a0416922719dbda86c99d406",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2018 Mike Dev\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt\n\n#\n\n#  CAUTION!!!!\n\n#\n\n# This addition to Boost.Config should be considered experimental and is part\n\n# of an ongoing effort to add CMake support Boost-wide.\n\n#\n\n# IT IS HIGHLY LIKELY THAT THIS FILE WILL CHANGE WITHOUT NOTICE!!!\n\n#\n\n# DO NOT REPLY ON THE CONTENTS OF THIS FILE!!!\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/config/test/CMakeLists.txt" : {
      "ObjectId" : "96511ddd519d1ccf400815c40bdfa0b25f30376e",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2018 John Maddock\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt\n\n#\n\n#  CAUTION!!!!\n\n#\n\n# This addition to Boost.Config should be considered experimental and is part\n\n# of an ongoing effort to add CMake support Boost-wide.\n\n#\n\n# IT IS HIGHLY LIKELY THAT THIS FILE WILL CHANGE WITHOUT NOTICE!!!\n\n#\n\n# DO NOT REPLY ON THE CONTENTS OF THIS FILE!!!\n\n#\n\n# In particular this is not a comprehensive test suite, just a quick check\n\n# that the root CMakeLists.txt works OK, and a convenience for folks who\n\n# want to import these projects into their IDE.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/core/CMakeLists.txt" : {
      "ObjectId" : "942c912280b9412a69527267b1c98f7237c8a7d5",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2018 Peter Dimov\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Partial (add_subdirectory only) and experimental CMake support\n\n# Subject to change; please do not rely on the contents of this file yet\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "lib/boost_1.69.0/libs/fiber/examples/cuda/Makefile" : {
      "ObjectId" : "60a3098e88a642019fee0a48bf87f6f9de4bdb01",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "lib/boost_1.69.0/libs/fiber/examples/hip/Makefile" : {
      "ObjectId" : "d40e8c1a5035a9607f64388bd2c509c384c96ed7",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "lib/boost_1.69.0/libs/fusion/test/compile_time/Makefile" : {
      "ObjectId" : "4887cf248e9c989fccd99d2515076f8bd2b1285e",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#=============================================================================\n\n#    Copyright (c) 2008 Dan Marsden\n\n#  \n\n#    Use modification and distribution are subject to the Boost Software \n\n#    License, Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at\n\n#    http://www.boost.org/LICENSE_1_0.txt).\n\n#==============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/gil/CMakeLists.txt" : {
      "ObjectId" : "7561ee5af60ac80871d72b720d78cbeb8b0c4d86",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2017-2018 Mateusz Loskot <mateusz at loskot dot net>\n\n#\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FIXME: Switch to ON after https://github.com/boostorg/gil/issues/40\n",
        "Line" : 17,
        "CharPositionInLine" : 52
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Dependency: Boost\n\n# - look for stage Build\n\n# - look for default installation location\n\n# - look for location specified with BOOST_ROOT\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#set(Boost_DEBUG ON)\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The boostorg/gil repository includes must come first,\n\n# before Boost includes from cloned Boost superproject or installed distribution.\n\n# Otherwise the IDE sees the wrong file (ie. due to boost/ symlinks or\n\n# GIL headers from installed Boost instead of this clone of boostog/gil).\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# GIL header gil_test_common.hpp shared between tests\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Dependency: libpng, libjpeg, libtiff via Vcpkg or Conan\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Download automatically, you can also just copy the conan.cmake file\n",
        "Line" : 88,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# NOTE: See RelWithDebInfo for Release builds, http://docs.conan.io/en/latest/howtos/vs2017_cmake.html\n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Typically, Linux packages provide C++ stream interface for TIFF\n",
        "Line" : 111,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Compiler\n\n#\n\n# Follows https://svn.boost.org/trac10/wiki/Guidelines/WarningsGuidelines\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Need absolute path for __FILE__ used in tests\n",
        "Line" : 128,
        "CharPositionInLine" : 27
      },
      "12" : {
        "Text" : "# Assumes compilers which recognize GCC and clang speak\n",
        "Line" : 137,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Headers\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Tests\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Examples\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "lib/boost_1.69.0/libs/gil/doc/Makefile" : {
      "ObjectId" : "41aa56fb0ee7df49152a221110989ac0785e7de5",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Internal variables.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "lib/boost_1.69.0/libs/gil/example/CMakeLists.txt" : {
      "ObjectId" : "dc2808dc7d37c1263ff940b7620a2c8f70d576fd",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2017 Mateusz Loskot <mateusz at loskot dot net>\n\n# All rights reserved.\n\n#\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Unfortunately, ALIAS of imported target is not supported\n\n# see https://github.com/conan-io/conan/issues/2125\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "lib/boost_1.69.0/libs/gil/example/Makefile" : {
      "ObjectId" : "ca3d3d790659d97dd06c90a6d07bcd6035763e97",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright 2008 Lubomir Bourdev and Hailin Jin\n\n#\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#CXX=/usr/local/gcc-411/bin/g++\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "lib/boost_1.69.0/libs/gil/io/test/CMakeLists.txt" : {
      "ObjectId" : "e9b9d074b37099450da6dfeb3201b9158af3e905",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2017 Mateusz Loskot <mateusz at loskot dot net>\n\n# All rights reserved.\n\n#\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Unfortunately, ALIAS of imported target is not supported\n\n# see https://github.com/conan-io/conan/issues/2125\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "lib/boost_1.69.0/libs/gil/numeric/test/CMakeLists.txt" : {
      "ObjectId" : "f8e811ad1cd666b7ba30ac72a1f988515719350d",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2017 Mateusz Loskot <mateusz at loskot dot net>\n\n# All rights reserved.\n\n#\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/gil/test/CMakeLists.txt" : {
      "ObjectId" : "ffb07db5f20ebebccb265c708cd60db7006b235d",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2017 Mateusz Loskot <mateusz at loskot dot net>\n\n#\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/gil/test/algorithm/CMakeLists.txt" : {
      "ObjectId" : "8e649e7c90596fca28f60f3c7c0ebf572a2461f4",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2018 Mateusz Loskot <mateusz at loskot dot net>\n\n#\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/gil/test/channel/CMakeLists.txt" : {
      "ObjectId" : "85955d0f92331739f4d403ed6c5db354555f0244",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2018 Mateusz Loskot <mateusz at loskot dot net>\n\n#\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/gil/test/image_view/CMakeLists.txt" : {
      "ObjectId" : "205a6665e37b10457d04689d730b21a28e0c3c48",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2018 Mateusz Loskot <mateusz at loskot dot net>\n\n#\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/gil/test/point/CMakeLists.txt" : {
      "ObjectId" : "177248cba3c681db96ff8132c774726143ce600d",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2018 Mateusz Loskot <mateusz at loskot dot net>\n\n#\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/gil/toolbox/test/CMakeLists.txt" : {
      "ObjectId" : "67e4e5db545ac906fca36dedb83ef2a7f4363cd6",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2017 Mateusz Loskot <mateusz at loskot dot net>\n\n# All rights reserved.\n\n#\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/graph/doc/Makefile" : {
      "ObjectId" : "2aa2fef81f0cc30035d9bf23bae17439102908ac",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (c) 2002 Trustees of Indiana University\n\n#\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#OPT\t\t= +K2 --display_error_number --diag_suppress=186\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#isomorphism-impl.dvi: $(EPS_GEN) $(WEBTEX)\n\n#isomorphism-impl.ps: isomorphism-impl.dvi\n\n#isomorphism-impl.pdf: $(EPS_GEN) $(PDFPICT) $(WEBTEX)\n\n#isomorphism.hpp: isomorphism-impl.w isomorphism-impl.tex\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "lib/boost_1.69.0/libs/graph/doc/figs/Makefile" : {
      "ObjectId" : "7c63524e9637f27cdcc2f5503e5fea7539dc91dd",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# -*- makefile -*-\n\n# Copyright (c) 2002 Trustees of Indiana University\n\n#\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/hana/CMakeLists.txt" : {
      "ObjectId" : "1483020d835830ada7d70b5b1ecd59cb6d75669a",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright Louis Dionne 2013-2017\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# Setup CMake options\n\n##############################################################################\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##############################################################################\n\n# Setup project\n\n#\n\n# We parse the canonical version number located in <boost/hana/version.hpp>.\n\n# This is done to allow the library to be used without requiring a proper\n\n# installation during which the version would be written to this header.\n\n##############################################################################\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Perform checks to make sure we support the current compiler\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##############################################################################\n\n# Setup the 'hana' header-only library target, along with its install target\n\n# and exports.\n\n##############################################################################\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Export the `hana` library into a HanaConfig.cmake file\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Also install an optional pkg-config file\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "##############################################################################\n\n# Function to setup common compiler flags on tests and examples\n\n##############################################################################\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# GCC pretends to have the flag, but produces a \"unrecognized command line option\"\n\n# warning when we use it.\n",
        "Line" : 111,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "##############################################################################\n\n# Look for the rest of Boost, which is an optional dependency of some tests.\n\n##############################################################################\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "##############################################################################\n\n# Setup custom functions to ease the creation of targets\n\n##############################################################################\n\n#   boost_hana_target_name_for(<output variable> <source file> [ext])\n\n#\n\n# Return the target name associated to a source file. If the path of the\n\n# source file relative from the root of Hana is `path/to/source/file.ext`,\n\n# the target name associated to it will be `path.to.source.file`.\n\n#\n\n# The extension of the file should be specified as a last argument. If no\n\n# extension is specified, the `.cpp` extension is assumed.\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################################\n\n# Setup the `check` target to build and then run all the tests and examples.\n\n##############################################################################\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\n\n# Setup subdirectories and testing\n\n##############################################################################\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "lib/boost_1.69.0/libs/hana/benchmark/CMakeLists.txt" : {
      "ObjectId" : "212454563153f75086bde4bf6ad5a24423be286e",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright Louis Dionne 2013-2017\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# Required packages, gems and caveats\n\n##############################################################################\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check for the 'ruby-progressbar' and 'tilt' gems\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Some benchmarks depend on those libraries\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##############################################################################\n\n# Configure the measure.rb script\n\n##############################################################################\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#input\n\n#output\n",
        "Line" : 36,
        "CharPositionInLine" : 57
      },
      "6" : {
        "Text" : "##############################################################################\n\n# Add the benchmarks\n\n##############################################################################\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "lib/boost_1.69.0/libs/hana/cmake/CheckCxxCompilerSupport.cmake" : {
      "ObjectId" : "78f1b5fd462f2206c34fb502bbcd2815e3da220d",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright Louis Dionne 2013-2017\n\n# Copyright Markus J. Weber 2015\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)\n\n#\n\n#\n\n# This CMake module checks whether the current compiler is supported, and\n\n# provides friendly hints to the user.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/hana/cmake/FindMPL11.cmake" : {
      "ObjectId" : "5b8b3c4e0391a37b087b098f906dbdf504030167",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright Louis Dionne 2013-2017\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)\n\n#\n\n#\n\n# This CMake module finds the MPL11 include directory. This module sets the\n\n# following CMake variables:\n\n#\n\n# MPL11_FOUND\n\n#   Set to 1 when the MPL11 include directory is found, 0 otherwise.\n\n#\n\n# MPL11_INCLUDE_DIR\n\n#   If the MPL11 include directory is found, this is set to the path of that\n\n#   directory. Otherwise, this is not set.\n\n#\n\n#\n\n# The following variables can be used to customize the behavior of the module:\n\n#\n\n# MPL11_INCLUDE_DIR\n\n#   The path to the MPL11 include directory. When set, this will be used as-is.\n\n#\n\n# MPL11_CLONE_IF_MISSING\n\n#   If the MPL11 include directory can't be found and this is set to true,\n\n#   the MPL11 project will be cloned locally.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Disable build step\n\n# Disable install step\n\n# Disable test step\n",
        "Line" : 38,
        "CharPositionInLine" : 27
      },
      "CommentCount" : 2
    },
    "lib/boost_1.69.0/libs/hana/cmake/FindMeta.cmake" : {
      "ObjectId" : "0a532062bb0fc3733f518c26105178399396fb02",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright Louis Dionne 2013-2017\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)\n\n#\n\n# This file was adapted from FindMeta.cmake at https://github.com/ericniebler/meta.\n\n#\n\n#\n\n# This CMake module finds the Meta include directory. This module sets the\n\n# following CMake variables:\n\n#\n\n# Meta_FOUND\n\n#   Set to 1 when the Meta include directory is found, 0 otherwise.\n\n#\n\n# Meta_INCLUDE_DIR\n\n#   If the Meta include directory is found, this is set to the path of that\n\n#   directory. Otherwise, this is not set.\n\n#\n\n#\n\n# The following variables can be used to customize the behavior of the module:\n\n#\n\n# Meta_INCLUDE_DIR\n\n#   The path to the Meta include directory. When set, this will be used as-is.\n\n#\n\n# Meta_CLONE_IF_MISSING\n\n#   If the Meta include directory can't be found and this is set to true,\n\n#   the Meta project will be cloned locally.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Disable build step\n\n# Disable install step\n\n# Disable test step\n",
        "Line" : 40,
        "CharPositionInLine" : 27
      },
      "CommentCount" : 2
    },
    "lib/boost_1.69.0/libs/hana/cmake/TestHeaders.cmake" : {
      "ObjectId" : "663c9f4e883b986b77a3796826ef6ef12fa83d28",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright Louis Dionne 2013-2017\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)\n\n#\n\n#\n\n# This CMake module provides a function generating a unit test to make sure\n\n# that every public header can be included on its own.\n\n#\n\n# When a C++ library or application has many header files, it can happen that\n\n# a header does not include all the other headers it depends on. When this is\n\n# the case, it can happen that including that header file on its own will\n\n# break the compilation. This CMake module generates a dummy executable\n\n# comprised of many .cpp files, each of which includes a header file that\n\n# is part of the public API. In other words, the executable is comprised\n\n# of .cpp files of the form:\n\n#\n\n#   #include <the/public/header.hpp>\n\n#\n\n# and then exactly one `main` function. If this succeeds to compile, it means\n\n# that the header can be included on its own, which is what clients expect.\n\n# Otherwise, you have a problem. Since writing these dumb unit tests by hand\n\n# is tedious and repetitive, you can use this CMake module to automate this\n\n# task.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#   add_header_test(<target> [EXCLUDE_FROM_ALL] [EXCLUDE excludes...] HEADERS headers...)\n\n#\n\n# Generates header-inclusion unit tests for all the specified headers.\n\n#\n\n# This function creates a target which builds a dummy executable including\n\n# each specified header file individually. If this target builds successfully,\n\n# it means that all the specified header files can be included individually.\n\n#\n\n# Parameters\n\n# ----------\n\n# <target>:\n\n#   The name of the target to generate.\n\n#\n\n# HEADERS headers:\n\n#   A list of header files to generate the inclusion tests for. All headers\n\n#   in this list must be represented as relative paths from the root of the\n\n#   include directory added to the compiler's header search path. In other\n\n#   words, it should be possible to include all headers in this list as\n\n#\n\n#       #include <${header}>\n\n#\n\n#   For example, for a library with the following structure:\n\n#\n\n#       project/\n\n#           doc/\n\n#           test/\n\n#           ...\n\n#           include/\n\n#               boost/\n\n#                   hana.hpp\n\n#                   hana/\n\n#                       transform.hpp\n\n#                       tuple.hpp\n\n#                       pair.hpp\n\n#                       ...\n\n#\n\n#   When building the unit tests for that library, we'll add `-I project/include'\n\n#   to the compiler's arguments. The list of public headers should therefore contain\n\n#\n\n#       boost/hana.hpp\n\n#       boost/hana/transform.hpp\n\n#       boost/hana/tuple.hpp\n\n#       boost/hana/pair.hpp\n\n#       ...\n\n#\n\n#   Usually, all the 'public' header files of a library should be tested for\n\n#   standalone inclusion. A header is considered 'public' if a client should\n\n#   be able to include that header on its own.\n\n#\n\n# [EXCLUDE excludes]:\n\n#   An optional list of headers or regexes for which no unit test should be\n\n#   generated. Basically, any header in the list specified by the `HEADERS`\n\n#   argument that matches anything in `EXCLUDE` will be skipped.\n\n#\n\n# [EXCLUDE_FROM_ALL]:\n\n#   If provided, the generated target is excluded from the 'all' target.\n\n#\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# options\n\n# 1 value args\n\n# multivalued args\n",
        "Line" : 83,
        "CharPositionInLine" : 62
      },
      "CommentCount" : 3
    },
    "lib/boost_1.69.0/libs/hana/doc/CMakeLists.txt" : {
      "ObjectId" : "66406606cc98d0bc44ca62a67f70599b37745bf9",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright Louis Dionne 2013-2017\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/hana/example/CMakeLists.txt" : {
      "ObjectId" : "0464c0960d770d385ab465c047eec4c53b388590",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright Louis Dionne 2013-2017\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# Take note of files that depend on Boost\n\n##############################################################################\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##############################################################################\n\n# Caveats: Take note of examples that are not supported.\n\n##############################################################################\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##############################################################################\n\n# Add all the examples\n\n##############################################################################\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Several examples have unused parameters because the name of the parameters\n\n# are useful for illustration, even if the implementation is not actually\n\n# presented. We don't want to generate warnings for that or need to comment\n\n# out all unused parameter names.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "lib/boost_1.69.0/libs/hana/example/cmake_integration/CMakeLists.txt" : {
      "ObjectId" : "000d03dd8a10f1f2a911a28ee50d6da0c57d1609",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright Louis Dionne 2013-2017\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# [snip]\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# [snip]\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "lib/boost_1.69.0/libs/hana/test/CMakeLists.txt" : {
      "ObjectId" : "52ee6c4aa5b08b61eef46955d631914a50bd7547",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright Louis Dionne 2013-2017\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# Take note of files that depend on Boost\n\n##############################################################################\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##############################################################################\n\n# Caveats: Take note of public headers and tests that are not supported.\n\n##############################################################################\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The experimental::type_name test is only supported on Clang >= 3.6 and\n\n# AppleClang >= 7.0\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# On Windows, Clang-cl emulates a MSVC bug that causes EBO not to be applied\n\n# properly. We disable the tests that check for EBO.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "##############################################################################\n\n# Generate tests that include each public header.\n\n# The headers that were excluded above due to caveats are ignored here.\n\n##############################################################################\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "##############################################################################\n\n# Check for ODR violations when linking several translation units\n\n# (GitHub issue 75)\n\n##############################################################################\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "##############################################################################\n\n# Add all the remaining unit tests\n\n##############################################################################\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\n\n# Add the deployment test, which checks that we can indeed install `hana` and\n\n# then use the provided `HanaConfig.cmake` config file to use `hana` from an\n\n# external project.\n\n##############################################################################\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Disable test step\n\n# Disable source work-tree update\n",
        "Line" : 129,
        "CharPositionInLine" : 23
      },
      "CommentCount" : 10
    },
    "lib/boost_1.69.0/libs/hana/test/deploy/CMakeLists.txt" : {
      "ObjectId" : "186d5def73951e4b3f312522ad53a3f80909f224",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright Louis Dionne 2013-2017\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/hof/CMakeLists.txt" : {
      "ObjectId" : "2ba06272e6d4bae9fc22e072d7bfc42028570279",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n#    Copyright (c) 2017 Paul Fultz II\n\n#    CMakeLists.txt\n\n#    Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n#    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#==============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/hof/cmake/BCMTest.cmake" : {
      "ObjectId" : "a7215f9c0e0aff3065ee2a4406b4173f7ad7f85d",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO: Check if name exists\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/hof/cmake/SphinxDoc.cmake" : {
      "ObjectId" : "6cedf77bbb74748b7982bb63e9eadca48c333895",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Sphinx cache with pickled ReST documents\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# HTML output directory\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "lib/boost_1.69.0/libs/hof/doc/Makefile" : {
      "ObjectId" : "2ccdfb5ad58b99f5fd3dc77be5622d3a4e26eda6",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#=============================================================================\n\n#    Copyright (c) 2017 Paul Fultz II\n\n#    requirements.txt\n\n#    Distributed under the Boost Software License, Version 1.0. (See accompanying\n\n#    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#==============================================================================\n\n# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Internal variables.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "lib/boost_1.69.0/libs/lambda/test/Makefile" : {
      "ObjectId" : "f25b5e4ffb984efce9640aa047b9be3d2d29ce9b",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#CXX\t\t= KCC \n\n#EXTRAFLAGS \t= --strict --display_error_number --diag_suppress 450 --max_pending_instantiations 50\n\n#LIBS\t\t=\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create lists of object files from the source file lists.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2,
      "Errorlog" : "line 57:26 token recognition error at: '\\1'\n"
    },
    "lib/boost_1.69.0/libs/mp11/CMakeLists.txt" : {
      "ObjectId" : "799f9c0849eaf90fba86a4315dfae85ff70fb5c2",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2018 Peter Dimov\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# --target check\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# `function` confuses FetchContent, sees empty CMAKE_CURRENT_LIST_DIR\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# --target install\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Mp11 is independent of 32/64, so this hack makes BoostMp11ConfigVersion.cmake skip the check\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#export(EXPORT ${PROJECT_NAME}Targets NAMESPACE Boost:: FILE ${PROJECT_NAME}Config.cmake)\n",
        "Line" : 64,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "lib/boost_1.69.0/libs/mp11/test/CMakeLists.txt" : {
      "ObjectId" : "79bb4539ee6b1c9c3c954053681d22740e089573",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2018 Peter Dimov\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/mp11/test/cmake_install_test/CMakeLists.txt" : {
      "ObjectId" : "1a3a449ebfff48551a30eec9d4cddb2fb321716e",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2018 Peter Dimov\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/mp11/test/cmake_subdir_test/CMakeLists.txt" : {
      "ObjectId" : "a2007eaf24b2dd0ada19bdb81a36be51c5afac87",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2018 Peter Dimov\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/multiprecision/test/coverage/Makefile" : {
      "ObjectId" : "d3825ea7596a1a7b31dcb9d0a38daef314c66a12",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# copyright John Maddock 2012\n\n# Distributed under the Boost Software License, Version 1.0. \n\n# (See accompanying file LICENSE_1_0.txt or copy at \n\n# http://www.boost.org/LICENSE_1_0.txt.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/numeric/odeint/examples/gmpxx/Makefile" : {
      "ObjectId" : "0a9f7cb014adc5f0a5c643804d69f1db330f36b6",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "lib/boost_1.69.0/libs/numeric/odeint/examples/thrust/Makefile" : {
      "ObjectId" : "5a33bdb323862262e89084853f8cb9bce46f542f",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright 2011-2014 Mario Mulansky\n\n# Copyright 2011-2012 Karsten Ahnert\n\n#\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or\n\n# copy at http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# make sure BOOST_ROOT is pointing to your boost directory\n\n# otherwise, set it here:\n\n# BOOST_ROOT = /path/to/boost\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# path to the cuda installation\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# target architecture\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "lib/boost_1.69.0/libs/numeric/odeint/performance/Makefile" : {
      "ObjectId" : "641cb0313d1fbe75fcea70f1e0d93dc6ec8f7d48",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright 2011-2014 Mario Mulansky\n\n# Copyright 2011-2014 Karsten Ahnert\n\n#\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or\n\n# copy at http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# make sure BOOST_ROOT is pointing to your boost directory\n\n# otherwise, set it here:\n\n# BOOST_ROOT = /path/to/boost\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# disabling -ffast-math might give slightly better performance\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Possible options: -fp-model source -no-fma\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "lib/boost_1.69.0/libs/numeric/odeint/performance/SIMD/Makefile" : {
      "ObjectId" : "811acd98822cc1df522eb8c341411869e4a57105",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright 2014 Mario Mulansky\n\n#\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or\n\n# copy at http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# make sure BOOST_ROOT is pointing to your boost directory\n\n# otherwise, set it here:\n\n# BOOST_ROOT = /path/to/boost\n\n# you also need NT2s SIMD libary available set the include path here:\n\n# SIMD_INCLUDE = /path/to/simd/include\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# INTEL COMPILER\n\n# change this if you want to cross-compile\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ARCH = AVX\n\n# ARCH = SSE4.2\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# -ip\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# GCC COMPILER\n\n# change this if you want to cross-compile\n\n# ARCH = native\n\n# # ARCH = core-avx-i\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# CXX = g++\n\n# CC = g++\n\n# CXXFLAGS = -O3 -ffast-math -mtune=${ARCH} -march=${ARCH} -std=c++0x -DNDEBUG ${INCLUDES}\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "lib/boost_1.69.0/libs/numeric/odeint/test_external/thrust/Makefile" : {
      "ObjectId" : "49d9cd71a2819a4fb5e0f9aeeb77ae99b0649d67",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright 2010-2014 Mario Mulansky\n\n# Copyright 2010-2012 Karsten Ahnert\n\n#\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or\n\n# copy at http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# make sure BOOST_ROOT is pointing to your boost directory\n\n# otherwise, set it here:\n\n# BOOST_ROOT = /path/to/boost\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# path to the cuda installation\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# target architecture\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "lib/boost_1.69.0/libs/numeric/ublas/IDEs/qtcreator/benchmarks/bench1/bench1.pro" : {
      "ObjectId" : "685802b31800859c02cfea45be0d85d1959e0cb9",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "lib/boost_1.69.0/libs/numeric/ublas/IDEs/qtcreator/benchmarks/bench2/bench2.pro" : {
      "ObjectId" : "b667a3fd40000f39d51a1e2d8fe5f63c5d6a9f15",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "lib/boost_1.69.0/libs/numeric/ublas/IDEs/qtcreator/benchmarks/bench3/bench3.pro" : {
      "ObjectId" : "21f561fc68a14842a3a166ee42989db1150fc57f",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "lib/boost_1.69.0/libs/numeric/ublas/IDEs/qtcreator/benchmarks/bench4/bench4.pro" : {
      "ObjectId" : "354bb478b900721558e7fb494e8b5a528bfff8fd",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "lib/boost_1.69.0/libs/numeric/ublas/IDEs/qtcreator/benchmarks/bench5/bench5.pro" : {
      "ObjectId" : "e450911f0c578cf4e1f6eab672e12ff035beb75d",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "lib/boost_1.69.0/libs/numeric/ublas/IDEs/qtcreator/benchmarks/benchmarks.pro" : {
      "ObjectId" : "4acf2d6933796f2778f1d5b79e1ae77c5308822f",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "lib/boost_1.69.0/libs/numeric/ublas/IDEs/qtcreator/benchmarks/configuration.pri" : {
      "ObjectId" : "07ffcae1c2f0c635caf10f82aaef4879a64f299e",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# ublas include directory\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If ublas tests are build with boost source code then,\n\n# then boost headers and boost libraries should be used.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#LIBS += -L../../../../../../../stage/lib\n",
        "Line" : 12,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "lib/boost_1.69.0/libs/numeric/ublas/IDEs/qtcreator/include/detail/detail.pri" : {
      "ObjectId" : "711972db4190df2ecb105dbbd7d179b11b292fba",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "lib/boost_1.69.0/libs/numeric/ublas/IDEs/qtcreator/include/experimental/experimental.pri" : {
      "ObjectId" : "41dc6c46b652fea26ad694903a5930ae3e53b7a4",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "lib/boost_1.69.0/libs/numeric/ublas/IDEs/qtcreator/include/include.pro" : {
      "ObjectId" : "5815a01fe838c154dd77797db3dafb36d44e07dd",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "lib/boost_1.69.0/libs/numeric/ublas/IDEs/qtcreator/include/operation/operation.pri" : {
      "ObjectId" : "519c4f4a6d454b70272873f85024babba79efff3",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "lib/boost_1.69.0/libs/numeric/ublas/IDEs/qtcreator/include/traits/traits.pri" : {
      "ObjectId" : "de327dc6822a7ed7679011333e9e3957610a1ca2",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "lib/boost_1.69.0/libs/numeric/ublas/IDEs/qtcreator/test/begin_end.pro" : {
      "ObjectId" : "03c4c6276517f2318fb706a595b3ede98754b9e3",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "lib/boost_1.69.0/libs/numeric/ublas/IDEs/qtcreator/test/comp_mat_erase.pro" : {
      "ObjectId" : "63960aefeb66ccfe23529cd56b934913118b7231",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "lib/boost_1.69.0/libs/numeric/ublas/IDEs/qtcreator/test/concepts.pro" : {
      "ObjectId" : "c4c0bca9fecf186be88a6402e595014f67a68705",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# INTERAL\n\n# SKIP_BAD\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/numeric/ublas/IDEs/qtcreator/test/configuration.pri" : {
      "ObjectId" : "3fdb4aa528beaa77acce0f9df057c6262e58cfbe",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Create a directory for each test.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# USE_RANGE USE_SLICE        # Too complex for regression testing\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#Visual age IBM\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ublas include and test directory are included\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# If ublas tests are build with boost source code then,\n\n# then boost headers and boost libraries should be used.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Execute test once compiled.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "lib/boost_1.69.0/libs/numeric/ublas/IDEs/qtcreator/test/num_columns.pro" : {
      "ObjectId" : "8a28199c6dc3e0faefdc76115807042bb668b698",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "lib/boost_1.69.0/libs/numeric/ublas/IDEs/qtcreator/test/num_rows.pro" : {
      "ObjectId" : "dc0a2290467f1e78239820eaa45fe330364cc377",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "lib/boost_1.69.0/libs/numeric/ublas/IDEs/qtcreator/test/placement_new.pro" : {
      "ObjectId" : "d19a747436a752417749d1de41243d081384d490",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "lib/boost_1.69.0/libs/numeric/ublas/IDEs/qtcreator/test/size.pro" : {
      "ObjectId" : "59a04033424afb62bb250e33d048abd80c3c2d03",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "lib/boost_1.69.0/libs/numeric/ublas/IDEs/qtcreator/test/sparse_view_test.pro" : {
      "ObjectId" : "02b3eb089016efe5b84a01a63f7b6185c1bdd74f",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "lib/boost_1.69.0/libs/numeric/ublas/IDEs/qtcreator/test/test1.pro" : {
      "ObjectId" : "d1123c44e4176a0e4de36a7b310e3ca4672c1b85",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "lib/boost_1.69.0/libs/numeric/ublas/IDEs/qtcreator/test/test2.pro" : {
      "ObjectId" : "00fb53f54446ff84bd6cd01efeb0a29e6758b988",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "lib/boost_1.69.0/libs/numeric/ublas/IDEs/qtcreator/test/test3.pro" : {
      "ObjectId" : "f4fd021fa87e80e683d284e02aefaa5a6dd787db",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "lib/boost_1.69.0/libs/numeric/ublas/IDEs/qtcreator/test/test3_coo.pro" : {
      "ObjectId" : "27e3ca384d3f88f16aad3315c865988c8a0a52fb",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "lib/boost_1.69.0/libs/numeric/ublas/IDEs/qtcreator/test/test3_mvov.pro" : {
      "ObjectId" : "f0a46dcd28083715a4165513bb96b73f738adfdb",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "lib/boost_1.69.0/libs/numeric/ublas/IDEs/qtcreator/test/test4.pro" : {
      "ObjectId" : "19da3f872c1ff25605faaa218808e866245fdaa0",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "lib/boost_1.69.0/libs/numeric/ublas/IDEs/qtcreator/test/test5.pro" : {
      "ObjectId" : "3f27384ec589806be163ef53203cae5a0ec82540",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "lib/boost_1.69.0/libs/numeric/ublas/IDEs/qtcreator/test/test6.pro" : {
      "ObjectId" : "0664ce4548aee3ea3cb3e3d14d8d3e1ba06e68ba",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "lib/boost_1.69.0/libs/numeric/ublas/IDEs/qtcreator/test/test7.pro" : {
      "ObjectId" : "5410184926c71d0cfc49cef83b988165d0cf81aa",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "lib/boost_1.69.0/libs/numeric/ublas/IDEs/qtcreator/test/test_assignment.pro" : {
      "ObjectId" : "1ad6ca391323deaadfb8f3b2fa41187c64ae301f",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "lib/boost_1.69.0/libs/numeric/ublas/IDEs/qtcreator/test/test_banded_storage_layout.pro" : {
      "ObjectId" : "78a96dc42c8a7b55de6aee5df6e0bea6bc467cec",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "lib/boost_1.69.0/libs/numeric/ublas/IDEs/qtcreator/test/test_complex_norms.pro" : {
      "ObjectId" : "e7c431e4a84927197075e421c5422c27429d7c1c",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "lib/boost_1.69.0/libs/numeric/ublas/IDEs/qtcreator/test/test_coordinate_matrix_always_do_full_sort.pro" : {
      "ObjectId" : "0c93dd04b8162659771dd99fcde31d86a821803a",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "lib/boost_1.69.0/libs/numeric/ublas/IDEs/qtcreator/test/test_coordinate_matrix_inplace_merge.pro" : {
      "ObjectId" : "0dee5eb39feaa6764ac87e7bbb844ee2cc3db866",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "lib/boost_1.69.0/libs/numeric/ublas/IDEs/qtcreator/test/test_coordinate_matrix_sort.pro" : {
      "ObjectId" : "ea94561d1bb8a0646368de55ba136032dda97794",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "lib/boost_1.69.0/libs/numeric/ublas/IDEs/qtcreator/test/test_coordinate_vector_inplace_merge.pro" : {
      "ObjectId" : "a86ce2aeb03b61bd035132f714fcba963fb91e6e",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "lib/boost_1.69.0/libs/numeric/ublas/IDEs/qtcreator/test/test_fixed_containers.pro" : {
      "ObjectId" : "60127482fc76b7c90331e04c53fe3647d2fa213a",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "lib/boost_1.69.0/libs/numeric/ublas/IDEs/qtcreator/test/test_inplace_solve_basic.pro" : {
      "ObjectId" : "42bc3db6f760e416f581aaafea89146a5c0b9fe7",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "lib/boost_1.69.0/libs/numeric/ublas/IDEs/qtcreator/test/test_inplace_solve_mvov.pro" : {
      "ObjectId" : "a1d1316d62393861f9d976526d4f0095945deef0",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "lib/boost_1.69.0/libs/numeric/ublas/IDEs/qtcreator/test/test_inplace_solve_sparse.pro" : {
      "ObjectId" : "9f9a32a09b7861ea6064078f10de1f903dbdd6be",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "lib/boost_1.69.0/libs/numeric/ublas/IDEs/qtcreator/test/test_lu.pro" : {
      "ObjectId" : "0f203397187216447cecb65cc90699e6d8b611c5",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "lib/boost_1.69.0/libs/numeric/ublas/IDEs/qtcreator/test/test_matrix_vector.pro" : {
      "ObjectId" : "d61b70bfb02685855b3b480a1ce90b8cd1cd40bc",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "lib/boost_1.69.0/libs/numeric/ublas/IDEs/qtcreator/test/test_ticket7296.pro" : {
      "ObjectId" : "98752cf75fa966e44741bdf186e3db113cb960ab",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "lib/boost_1.69.0/libs/numeric/ublas/IDEs/qtcreator/test/test_triangular.pro" : {
      "ObjectId" : "15c8ce1102b56d466e134976b86282d69525e2ea",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "lib/boost_1.69.0/libs/numeric/ublas/IDEs/qtcreator/test/triangular_access.pro" : {
      "ObjectId" : "98a87063b7b810db541a4370d5d327af29bead12",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "lib/boost_1.69.0/libs/numeric/ublas/IDEs/qtcreator/test/triangular_layout.pro" : {
      "ObjectId" : "dcfd36f6f3ced95452e38468254018a689e08607",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "lib/boost_1.69.0/libs/numeric/ublas/IDEs/qtcreator/tests.pri" : {
      "ObjectId" : "6ece4acd55986a02cf3f71913f0c2b0a94f2f08a",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "lib/boost_1.69.0/libs/numeric/ublas/IDEs/qtcreator/ublas_develop.pro" : {
      "ObjectId" : "7364283a930db21c2865cd73c214a5021d2ca74f",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "lib/boost_1.69.0/libs/preprocessor/CMakeLists.txt" : {
      "ObjectId" : "c0f41f99fc7286937c969bd1e21ccf2c8542d438",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2018 Mike Dev\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/preprocessor/test/CMakeLists.txt" : {
      "ObjectId" : "b56c870f113af06a99fc1a6277927e9fe0f6afd9",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2018 Mike Dev\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt\n\n#\n\n# NOTE: This does NOT run the unit tests for Boost.Preprocessor (yet).\n\n#       It only tests, if the CMakeLists.txt file works as expected\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/python/doc/numpy/Makefile" : {
      "ObjectId" : "f0ffaaea5f9ae2937d494f6be771a9ce5421b4f7",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Internal variables.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "lib/boost_1.69.0/libs/regex/test/profile/Makefile" : {
      "ObjectId" : "f1b3def7b37773c389b331af85e2a778708bc19a",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# copyright John Maddock 2003\n\n# Distributed under the Boost Software License, Version 1.0. \n\n# (See accompanying file LICENSE_1_0.txt or copy at \n\n# http://www.boost.org/LICENSE_1_0.txt.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/safe_numerics/CMakeLists.txt" : {
      "ObjectId" : "54138f75ea2a58045d0e633669fd0ba0c3ec1978",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake build control file for safe numerics Library Examples\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########################################################\n\n# Compiler settings - special settings for known compilers\n\n#\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Project settings\n\n#\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#use folders in organization of the IDE\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###########################\n\n# testing and submitting test results to the test dashboard\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Create a file named CTestConfig.cmake adjacent to the current file.\n\n## This new file should contain the following:\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# set(CTEST_DROP_LOCATION \"/cdash/submit.php?project=MyProject\")\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add failing-to-compile targets\n",
        "Line" : 78,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Avoid building these targets normally\n",
        "Line" : 81,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Add the tests.  These invoke \"cmake --build ...\" which is a\n\n# cross-platform way of building the given target.\n",
        "Line" : 87,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Expect these tests to fail\n\n# (i.e. cmake --build should return a non-zero value)\n",
        "Line" : 94,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "########################################################\n\n# End Compiler settings\n\n#\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "lib/boost_1.69.0/libs/safe_numerics/example/CMakeLists.txt" : {
      "ObjectId" : "d4d8bc780a5b5155897cb3269dea00c630473efa",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake build control file for safe numerics Library Examples\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###########################\n\n# examples\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# test_run_pass_example(example81) # requires console input\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# test_run_pass_example(example84) # requires console input\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# end examples targets\n\n####################\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "###########################\n\n# add misc files to IDE\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# end headers in IDE\n\n####################\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "lib/boost_1.69.0/libs/safe_numerics/test/CMakeLists.txt" : {
      "ObjectId" : "4e789371f18532db5652d25e39d08ecb310c79f0",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake build control file for safe numerics Library tests\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###########################\n\n# test targets\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CMake doesn't work well for some tests\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# end test targets\n\n####################\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###########################\n\n# add headers to IDE\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# end headers in IDE\n\n####################\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "lib/boost_1.69.0/libs/serialization/CMake/CMakeLists.txt" : {
      "ObjectId" : "f077dac8f2b4bd00c19422dbfcb96936975bc4be",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake build control file for Serialization Library tests\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Compiler settings\n\n#\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# we use gcc to test for C++03 compatibility\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++11\")\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#\n\n# Locate Project Prerequisites \n\n#\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Boost\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# note: we're assuming that boost has been built with:\n\n# ./b2 —-layout=versioned toolset=clang-darwin link=static,shared variant=debug,release stage\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "###########################\n\n# special notes for Xcode.\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# these three should result in CMake setting the variables\n\n# Boost_SERIALIZATION_LIBRARY_DEBUG … to the correct values.  \n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# But my current version of CMake doesn't automatically set the library names\n\n# to point to the the libraries to be used.  The variables are created\n\n# but they are not initialized.  So be prepared to set these variables by hand.\n\n# If you want to use the static libraries - point to the boost libraries ending\n\n# in \".a\".  If you want to use the shared boost libraries - point to the libraries\n\n# ending in \".dylib\".\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# But wait - there's more.\n\n# if both lib.a and lib.dylib both exist in the library directory, Xcode will\n\n# automatically chose the *.dylib one - and there's nothing you can do to fix this.\n\n# So my recommendation is \n\n# a) to place the compiled libraries in two different directories\n\n#    - e.g. stage/lib-static/*.a and stage/lib-shared/*.dylib\n\n#    and set the CMake variable Boost_LIBRARY_DIR to point to one or the other\n\n# b) create two different CMake build directories - build-static and build-shared\n\n#    and switch between projects as desired.  I like to test both since\n\n#    there are things like dead code elimination and visibility which vary\n\n#    between the two environments.\n\n#\n\n#    caveat - as I write this, I've been unable to get the tests on the shared\n\n#    library to function. Problem is that one needs to either put the shared\n\n#    libraries in a special known place or set an environmental\n\n#    variable which points to the shared library directory.  I prefer the latter\n\n#    but I've been unable to figure out how to get Xcode to do on a global basis\n\n#    and it's not practical to do this for 247 test targets one at a time.\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# c) The targets in the project will by default be built as universal 32/64 binaries\n\n#    I have yet to experiment with these yet so I just set the target to 64 bit.\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# end special note for Xcode\n\n############################\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#\n\n# IDE settings\n\n#\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# list of archive names for which tests should be generated\n\n#set(archive_list text_archive text_warchive binary_archive xml_archive xml_warchive)\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# list of tests generated by each function call\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "###########################\n\n# library builds\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# doesn't show up in \"Source Files\" in Xcode\"'\n",
        "Line" : 175,
        "CharPositionInLine" : 31
      },
      "18" : {
        "Text" : "# doesn't show up in \"Source Files\" in Xcode\"'\n",
        "Line" : 187,
        "CharPositionInLine" : 31
      },
      "19" : {
        "Text" : "# end library build\n\n###########################\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# or STATIC instead of SHARED\n",
        "Line" : 195,
        "CharPositionInLine" : 48
      },
      "21" : {
        "Text" : "###########################\n\n# test targets\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# compile test_dll_plugin.cpp\n\n# Running the following test requires that the test know the directory \n\n# in which the dll is stored. I don't know how to extract this from bjam\n\n# serialization(test_dll_plugin : : dll_polymorphic_derived2_lib)\n",
        "Line" : 279,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# end test targets\n\n####################\n",
        "Line" : 395,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "####################\n\n# add headers in IDE\n",
        "Line" : 398,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# for serialization\n",
        "Line" : 401,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# for wserialization\n",
        "Line" : 445,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# end headers in IDE\n\n####################\n",
        "Line" : 454,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#####################\n\n# add test project to run misc tests\n",
        "Line" : 457,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# end test project\n\n#####################\n",
        "Line" : 463,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 30
    },
    "lib/boost_1.69.0/libs/spirit/doc/refcard/Makefile" : {
      "ObjectId" : "1034b2539d9c88bfa3227af5d4c8e9a643706568",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "lib/boost_1.69.0/libs/test/build/CMakeLists.txt" : {
      "ObjectId" : "ac35db11d733580bc17bce08752510895ad9cf05",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2014, Raffi Enficiaud\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use, modification, and distribution are subject to the\n\n# Boost Software License, Version 1.0. (See accompanying file\n\n# LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# See http://www.boost.org/libs/test for the library home page.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# build type, by default to release (with optimisations)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set the possible values of build type for cmake-gui\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# ctest sets BUILD_TESTING automatically, but does not seem to serve its purpose.\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# c++11 options\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++0x\")\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# global path\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# global include on boost\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# include globs\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# organize files\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#target_compile_definitions(boost_test_framework PUBLIC \"-DBOOST_TEST_DYN_LINK=0\")\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "####\n\n# Documentation files (files only, no target)\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "####\n\n# Unit tests\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# documentation tests\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# unit tests folder\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# datasets\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#target_compile_definitions(boost_test_datasets PUBLIC \"BOOST_TEST_DYN_LINK=0\")\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "####\n\n# TS writing-test-ts\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#get_filename_component(_v \"${_v}\" DIRECTORY)\n",
        "Line" : 192,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# test suite\n",
        "Line" : 203,
        "CharPositionInLine" : 13
      },
      "CommentCount" : 21
    },
    "lib/boost_1.69.0/libs/test/doc/snippet/dataset_1/CMakeLists.txt" : {
      "ObjectId" : "ce21a40a579fad6093fc62a62b0886010ebe5f3e",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  (C) Copyright Raffi Enficiaud 2014.\n\n#  Distributed under the Boost Software License, Version 1.0.\n\n#  (See accompanying file LICENSE_1_0.txt or copy at\n\n#  http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n#  See http://www.boost.org/libs/test for the library home page.\n\n#\n\n#  trivial cmake script for running the dataset\n\n# ***************************************************************************\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# not meant to be included in the documentation\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# creates the executable\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# indicates the include paths\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# indicates the link paths\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# declares a test with our executable\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "lib/boost_1.69.0/libs/throw_exception/CMakeLists.txt" : {
      "ObjectId" : "c44cebad93ce92766fe5df95d7d6343373877d19",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2018 Mike Dev\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Partial (add_subdirectory only) and experimental CMake support\n\n# Subject to change; please do not rely on the contents of this file yet\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "lib/boost_1.69.0/libs/vmd/CMakeLists.txt" : {
      "ObjectId" : "aeacbc2914a4eb623b9947150831f213fb4878c6",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2018 Mike Dev\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/vmd/test/test_cmake/CMakeLists.txt" : {
      "ObjectId" : "dc0d420b7ca7c9a616f85084a390c852ca7ab8b5",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2018 Mike Dev\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt\n\n#\n\n# NOTE: This does NOT run the unit tests for Boost.Vmd.\n\n#       It only tests, if the CMakeLists.txt file in it's root works as expected\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/libs/yap/CMakeLists.txt" : {
      "ObjectId" : "98a23b2f2c6df4676716f5aad6e42401e930d823",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################## \n\n# C++ standard version selection\n\n################################################## \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##################################################\n\n# Sanitizers\n\n##################################################\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##################################################\n\n# Code coverage\n\n##################################################\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##################################################\n\n# Clang+Linux support\n\n##################################################\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##################################################\n\n# Dependencies\n\n##################################################\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "##################################################\n\n# yap library\n\n##################################################\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Doesn't build docs, just the snippets files.\n",
        "Line" : 120,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 7
    },
    "lib/boost_1.69.0/libs/yap/cmake/Disassemble.cmake" : {
      "ObjectId" : "93f6e9a5be90b82e051b0c549fa4ad2212dd8de8",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright Louis Dionne 2016\n\n# Copyright Zach Laine 2016\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)\n\n#\n\n#\n\n# This CMake module provides a way to get the disassembly of a function within\n\n# an executable created with `add_executable`. The module provides a `disassemble`\n\n# function that creates a target which, when built, outputs the disassembly of\n\n# the given function within an executable to standard output.\n\n#\n\n# Parameters\n\n# ----------\n\n# target:\n\n#   The name of the target to create. Building this target will generate the\n\n#   requested disassembly.\n\n#\n\n# EXECUTABLE executable:\n\n#   The name of an executable to disassemble. This must be the name of a valid\n\n#   executable that was created with `add_executable`. The disassembly target\n\n#   thus created will be made dependent on the executable, so that it is built\n\n#   automatically when the disassembly is requested.\n\n#\n\n# FUNCTION function-name:\n\n#   The name of the function to disassemble in the executable.\n\n#\n\n# [ALL]:\n\n#   If provided, the generated target is included in the 'all' target.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# options\n\n# 1 value args\n\n# multivalued args\n",
        "Line" : 31,
        "CharPositionInLine" : 51
      },
      "CommentCount" : 2
    },
    "lib/boost_1.69.0/libs/yap/cmake/dependencies.cmake" : {
      "ObjectId" : "b246e887774362428761492c59f6e57c0784c1cd",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright Louis Dionne 2016\n\n# Copyright Zach Laine 2016\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################################################\n\n# Boost\n\n###############################################################################\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###############################################################################\n\n# Google Benchmark\n\n###############################################################################\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###############################################################################\n\n# Autodiff (see https://github.com/fqiang/autodiff_library)\n\n###############################################################################\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "lib/boost_1.69.0/libs/yap/doc/CMakeLists.txt" : {
      "ObjectId" : "435ccdd2975245256006656b8323ed97030c17ea",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/boost_1.69.0/libs/yap/example/CMakeLists.txt" : {
      "ObjectId" : "7527c2f4ee91c80069262d7096acf5f76c39c167",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/boost_1.69.0/libs/yap/perf/CMakeLists.txt" : {
      "ObjectId" : "9c2614918208bd6fa6e54190e8616e017de6ed7d",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/boost_1.69.0/libs/yap/test/CMakeLists.txt" : {
      "ObjectId" : "0188b8069de1230f2580989c2255bfffc79d935c",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#message(\"foo=${foo}\")\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/tools/boostdep/CMakeLists.txt" : {
      "ObjectId" : "0bc583477aa491a7b2867887437efe81d61e1772",
      "LastModified" : "2018-12-12T22:00:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2018 Mike Dev\n\n# Copyright 2018 Peter Dimov\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/boost_1.69.0/tools/build/example/make/main_cpp.pro" : {
      "ObjectId" : "ebedb6efecdd50aad86a0d7e91660a4047b5ef60",
      "LastModified" : "2018-12-16T17:43:24Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "lib/boost_1.69.0/tools/build/src/engine/boehm_gc/Makefile.am" : {
      "ObjectId" : "033cb30b0e58b707e34e7f1c973e6ca7b292599f",
      "LastModified" : "2018-12-16T17:43:24Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Copyright (c) 1999-2001 by Red Hat, Inc. All rights reserved.\r\n\n# \r\n\n# THIS MATERIAL IS PROVIDED AS IS, WITH ABSOLUTELY NO WARRANTY EXPRESSED\r\n\n# OR IMPLIED.  ANY USE IS AT YOUR OWN RISK.\r\n\n# \r\n\n# Permission is hereby granted to use or copy this program\r\n\n# for any purpose,  provided the above notices are retained on all copies.\r\n\n# Permission to modify the code and to distribute modified code is granted,\r\n\n# provided the above notices are retained, and a notice that the code was\r\n\n# modified is included with the above copyright notice.\r\n\n#\r\n\n# Original author: Tom Tromey\r\n\n# Severely truncated by Hans-J. Boehm\r\n\n# Modified by: Grzegorz Jakacki <jakacki at acm dot org>\r\n\n# Modified by: Petter Urkedal <petter.urkedal@nordita.dk> (2005-04)\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Process this file with automake to produce Makefile.in.\r\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## FIXME: `make distcheck' in this directory will not currently work.\r\n\n##     This is most likely to the explicit flags passed to submakes.\r\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# We currently use the source files directly from libatomic_ops, if we\r\n\n# use the internal version.  This is done since libatomic_ops doesn't\r\n\n# use libtool, since it has no real use for it.  But that seems to make\r\n\n# it hard to use either the resulting object files or libraries.\r\n\n# Thus there seems too be no real reason to recusively build in the\r\n\n# libatomic_ops directory.\r\n\n# if USE_INTERNAL_LIBATOMICS_OPS\r\n\n# SUBDIRS = @maybe_libatomic_ops@\r\n\n# else\r\n\n# SUBDIRS =\r\n\n# endif\r\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Initialize variables so that we can declare files locally.\r\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# C Library\r\n\n# ---------\r\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# C Library: Architecture Dependent\r\n\n# ---------------------------------\r\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Include THREADDLLIBS here to ensure that the correct versions of\r\n\n# linuxthread semaphore functions get linked:\r\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# C++ Interface\r\n\n# -------------\r\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# FIXME: If Visual C++ users use Makefile.am, this should go into\r\n\n# pkginclude_HEADERS with proper AM_CONDITIONALization.  Otherwise\r\n\n# delete this comment.\r\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Misc\r\n\n# ----\r\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## FIXME: relies on internal code generated by automake.\r\n\n## FIXME: ./configure --enable-dependency-tracking should be used \r\n\n#all_objs = @addobjs@ $(libgc_la_OBJECTS)\r\n\n#$(all_objs) : include/private/gcconfig.h include/private/gc_priv.h \\\r\n#include/private/gc_hdrs.h include/gc.h include/gc_gcj.h \\\r\n#include/gc_pthread_redirects.h include/gc_config_macros.h \\\r\n#include/private/thread_local_alloc.h include/private_support.h \\\r\n#include/private/pthread_stop_world.h \\\r\n#include/gc_mark.h @addincludes@\r\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## FIXME: we shouldn't have to do this, but automake forces us to.\r\n\n## We use -Wp,-P to strip #line directives.  Irix `as' chokes on\r\n\n## these.\r\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## XLC neither requires nor tolerates the unnecessary assembler goop\r\n",
        "Line" : 131,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "## We use -Wp,-P to strip #line directives.  Irix `as' chokes on\r\n\n## these.\r\n",
        "Line" : 134,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "## We need to add DEFS to assembler flags\r\n\n## :FIXME: what if assembler does not accept -D... ?\r\n\n##     (use Autoconf to prepare ASDEFS ???)\r\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## callprocs --- used by Makefile.{dj,direct}\r\n\n## configure.host --- used by Makefile.{am,dj,direct}\r\n",
        "Line" : 151,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# headers which are not installed\r\n\n# (see include/include.am for more)\r\n\n#\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# documentation which is not installed\r\n\n#\r\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# other makefiles\r\n\n# :GOTCHA: deliberately we do not include 'Makefile'\r\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# files used by makefiles other than Makefile.am\r\n\n#\r\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# The libatomic_ops library.  This is not ideal, since we pick up junk from\r\n\n# there.  The hard-coded version number should also go.\r\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# this is an auxiliary shell file used by Makefile and Makefile.direct\r\n\n#\r\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# :FIXME: why do we distribute this one???\r\n\n#\r\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\r\n\n# :GOTCHA: GNU make rule for making .s out of .S is flawed, \r\n\n# it will not remove dest if building fails\r\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Putting these at the top causes cord to be built first, and not find libgc.a\r\n\n# on HP/UX.  There may be a better fix.\r\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 26
    },
    "lib/eigen_3.3.3/Eigen/CMakeLists.txt" : {
      "ObjectId" : "9eb502b792d4a9607e2d323f2d8114939b43c209",
      "LastModified" : "2018-12-16T17:43:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/eigen_3.3.3/unsupported/CMakeLists.txt" : {
      "ObjectId" : "4fef40a86c6d17dd8cc792a5e4f9e8d65abcdf58",
      "LastModified" : "2018-12-16T17:43:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# can't do EXCLUDE_FROM_ALL here, breaks CTest\n",
        "Line" : 4,
        "CharPositionInLine" : 25
      },
      "CommentCount" : 1
    },
    "lib/eigen_3.3.3/unsupported/Eigen/CMakeLists.txt" : {
      "ObjectId" : "631a060145bd633e573e65e2db885cf78a970a01",
      "LastModified" : "2018-12-16T17:43:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/eigen_3.3.3/unsupported/Eigen/CXX11/CMakeLists.txt" : {
      "ObjectId" : "385ed240c20773bf47cdfd6765ad6227508a9ae8",
      "LastModified" : "2018-12-16T17:43:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/eigen_3.3.3/unsupported/Eigen/src/EulerAngles/CMakeLists.txt" : {
      "ObjectId" : "40af550e8a92987c7846e53e22d30c180a368492",
      "LastModified" : "2018-12-16T17:43:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/eigen_3.3.3/unsupported/doc/CMakeLists.txt" : {
      "ObjectId" : "9e9ab98007eb189f2625f7fdd3c232c2d3da4e3b",
      "LastModified" : "2018-12-16T17:43:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/eigen_3.3.3/unsupported/doc/examples/CMakeLists.txt" : {
      "ObjectId" : "c47646dfca9d76e45cf929d74508e32698d96ee3",
      "LastModified" : "2018-12-16T17:43:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/eigen_3.3.3/unsupported/doc/snippets/CMakeLists.txt" : {
      "ObjectId" : "f0c5cc2a84dd65edd575963bf648a1481f9b1dde",
      "LastModified" : "2018-12-16T17:43:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/eigen_3.3.3/unsupported/test/CMakeLists.txt" : {
      "ObjectId" : "b5fa1c84543c9b03f7dba2884ec8731d82b2ddb3",
      "LastModified" : "2018-12-16T17:43:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# generate split test header file only if it does not yet exist\n\n# in order to prevent a rebuild everytime cmake is configured\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# this test seems to never have been successful on x87, so is considered to contain a FP-related bug.\n\n# see thread: \"non-linear optimization test summary\"\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO: The following test names are prefixed with the cxx11 string, since historically\n\n# the tests depended on c++11. This isn't the case anymore so we ought to rename them.\n\n# FIXME: Old versions of MSVC fail to compile this code, so we just disable these tests\n\n# when using visual studio. We should make the check more strict to enable the tests for\n\n# newer versions of MSVC.\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This test requires __uint128_t which is only available on 64bit systems\n",
        "Line" : 137,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# It should be safe to always run these tests as there is some fallback code for\n\n# older compiler that don't support cxx11.\n",
        "Line" : 150,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#  ei_add_test(cxx11_tensor_symmetry)\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# These tests needs nvcc\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Make sure to compile without the -pedantic, -Wundef, -Wnon-virtual-dtor\n\n# and -fno-check-new flags since they trigger thousands of compilation warnings\n\n# in the CUDA runtime\n\n# Also remove -ansi that is incompatible with std=c++11.\n",
        "Line" : 200,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# otherwise the flag has already been added because of the above set(CMAKE_CXX_STANDARD 11)\n",
        "Line" : 227,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Contractions require arch 3.0 or higher\n",
        "Line" : 242,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# The random number generation code requires arch 3.5 or greater.\n",
        "Line" : 250,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 11
    }
  },
  "FileTypes" : {
    "CMAKE" : 141,
    "QMAKE" : 50,
    "MAKEFILE" : 24,
    "AUTOMAKE" : 2
  },
  "ElapsedTime" : 15166
}