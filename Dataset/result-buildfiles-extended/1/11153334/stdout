{
  "Repository" : "11153334",
  "Revision" : "HEAD",
  "ObjectId" : "8b198ba40dc57da5c8b46a2f24ce9bb7d8f634d6",
  "CommitTime" : "2019-04-13T16:04:49Z",
  "Files" : {
    "Makefile" : {
      "ObjectId" : "9e2839752c48682c4b6af1ab5aec6ed6d73d79bc",
      "LastModified" : "2018-12-21T13:34:38Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0,
      "Errorlog" : "line 4:84 token recognition error at: '\"\\0'\nline 4:98 token recognition error at: '\\0'\nline 4:110 token recognition error at: '\", $$1, $$2}'\\n\\ninstall: ## Globally install a prebuilt version of kresus.\\n\\tnpm -g install kresus\\n\\nprod: ## Builds in prod mode. Transpiles ES6 files to ES5, moves files and concatenate them to obtain a usable build.\\n\\tyarn run build:prod\\n\\nbuild: ## Builds in dev mode. Transpiles ES6 files to ES5, moves files and concatenate them to obtain a usable build.\\n\\tyarn run build:dev\\n\\nwatch: ## As build, but retriggers incremental compilation as the files are changed on disk.\\n\\tyarn run watch\\n\\ndev: ## Runs servers that get relaunched whenever a built file changes.\\n\\tyarn run dev\\n\\npretty:\\n\\tyarn run fix:lint\\n\\nconfig: ## Creates an example configuration file that's up to date.\\n\\tyarn run fix:config\\n\\nlint: ## Runs the linter for the server and the client, without warnings.\\n\\tyarn run check:lint\\n\\ntest: ## Runs all the tests.\\n\\tyarn run check:test\\n\\ncheck: ## Runs all tests and style checks.\\n\\tyarn run check\\n\\nrelease: ## Prepares for a release. To be done only on the `builds` branch.\\n\\tyarn run release\\n\\ndocker-release: ## Prepares for a Docker release. Must be done after make release.\\n\\tdocker build -t bnjbvr/kresus -f docker/Dockerfile-stable .\\n\\ndocker-nightly: ## Prepares for a Docker nightly image.\\n\\tdocker build -t bnjbvr/kresus-nightly -f docker/Dockerfile-nightly ./docker\\n\u0000'\n"
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 1587
}