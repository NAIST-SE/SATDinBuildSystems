{
  "Repository" : "26549405",
  "Revision" : "HEAD",
  "ObjectId" : "5e696b800d7796263dc7cf8d5696aede41f633de",
  "CommitTime" : "2019-04-08T11:37:10Z",
  "Files" : {
    "FieldOpt/CMakeLists.txt" : {
      "ObjectId" : "f68875220c90f0cf7379e38646ede51cc3f68657",
      "LastModified" : "2019-03-13T12:55:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ----------------------------------------------------------\n\n# ╔═╗╔╦╗╔═╗╦╔═╔═╗\n\n# ║  ║║║╠═╣╠╩╗║╣\n\n# ╚═╝╩ ╩╩ ╩╩ ╩╚═╝\n\n# ----------------------------------------------------------\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# General config ===========================================\n\n# CMAKE_MODULE_PATH: Commands like include() and find_package() search\n\n# for files in directories listed by this variable before checking the\n\n# default modules that come with CMake.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Compile options ==========================================\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# set(CMAKE_VERBOSE_MAKEFILE ON)\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Sanitizing ===============================================\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#  https://github.com/google/sanitizers\n\n#  Sanitizing is a feature built into more recent versions of GCC (>4.7).\n\n#  It add additional (better) error traces for memory-related problems.\n\n#  AddressSanitizer (detects addressability issues) and LeakSanitizer (detects memory leaks) [address] [leak]\n\n#  ThreadSanitizer (detects data races and deadlocks) for C++ and Go                         [thread]\n\n#  MemorySanitizer (detects use of uninitialized memory)                                     [memory]\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#CMAKE_C_FLAGS:STRING=-fsanitize=address  -fsanitize=leak -g\n\n#CMAKE_EXE_LINKER_FLAGS:STRING=-fsanitize=address  -fsanitize=leak\n\n#CMAKE_MODULE_LINKER_FLAGS:STRING=-fsanitize=address  -fsanitize=leak\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Build dirs ===============================================\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Include dirs =============================================\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ----------------------------------------------------------\n\n# ╦═╗╔═╗╔═╗╦╔╗╔╔═╗╦╔═╗╦ ╦╔╦╗\n\n# ╠╦╝║╣ ╚═╗║║║║╚═╗║║ ╦╠═╣ ║\n\n# ╩╚═╚═╝╚═╝╩╝╚╝╚═╝╩╚═╝╩ ╩ ╩\n\n# ----------------------------------------------------------\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ResInsight ===============================================\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# ----------------------------------------------------------\n\n# ╔═╗╦═╗╔╦╗   ╔═╗╔═╗╦\n\n# ║╣ ╠╦╝ ║    ║╣ ║  ║\n\n# ╚═╝╩╚═ ╩────╚═╝╚═╝╩═╝\n\n# ----------------------------------------------------------\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# ----------------------------------------------------------\n\n# ╦  ╔═╗╔═╗╔═╗╦    ╦  ╦╔╗ ╔═╗\n\n# ║  ║ ║║  ╠═╣║    ║  ║╠╩╗╚═╗\n\n# ╩═╝╚═╝╚═╝╩ ╩╩═╝  ╩═╝╩╚═╝╚═╝\n\n# ----------------------------------------------------------\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Set bundled dependencies first in package search path\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Add local third party include dirs\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# ----------------------------------------------------------\n\n# ╦ ╦╔╗╔╦╔╦╗  ╔╦╗╔═╗╔═╗╔╦╗\n\n# ║ ║║║║║ ║    ║ ║╣ ╚═╗ ║\n\n# ╚═╝╝╚╝╩ ╩    ╩ ╚═╝╚═╝ ╩\n\n# ----------------------------------------------------------\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Enable unit tests + example dir ==========================\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# ----------------------------------------------------------\n\n# ╔═╗╔╦╗╔═╗╔═╗╦═╗╔═╗  ╦  ╦╔╗\n\n# ╠═╣ ║║║ ╦╠═╝╠╦╝╚═╗  ║  ║╠╩╗\n\n# ╩ ╩═╩╝╚═╝╩  ╩╚═╚═╝  ╩═╝╩╚═╝\n\n# ----------------------------------------------------------\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Enable compilation of WIC as standalone executable and/or lib ========\n\n# NOTE: only one of the following two options should be ON at same time\n\n# [1] Build standalone well index calculator executable\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# [2] Build OS-dependent well index calculator (shared) library:\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# ----------------------------------------------------------\n\n# ╔╦╗╔═╗╦ ╦╦═╗\n\n# ║║║╠═╣║ ║╠╦╝\n\n# ╩ ╩╩ ╩╚═╝╩╚═\n\n# ----------------------------------------------------------\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Build executable for WI benchmarktests ===================\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# ----------------------------------------------------------\n\n# ╔═╗╦╔═╗╔═╗╔╗╔\n\n# ║╣ ║║ ╦║╣ ║║║\n\n# ╚═╝╩╚═╝╚═╝╝╚╝\n\n# ----------------------------------------------------------\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Include Eigen: Options ===================================\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#  set(Eigen3_DIR ${CMAKE_SOURCE_DIR}/ThirdParty/Eigen3)\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# ----------------------------------------------------------\n\n# ╔═╗╔═╗\n\n# ║ ╦╠═╝\n\n# ╚═╝╩\n\n# ╦ ╦╔╦╗╔═╗\n\n# ╠═╣ ║║╠╣\n\n# ╩ ╩═╩╝╚\n\n# ----------------------------------------------------------\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Build WIC executable  and/or WIC ADGPRS lib ==============\n\n# Include HDF5 + Qt5 + GP + ECL ============================\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# ----------------------------------------------------------\n\n# ╔═╗╔╦╗\n\n# ║═╬╗║\n\n# ╚═╝╚╩\n\n# ----------------------------------------------------------\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ----------------------------------------------------------\n\n# ╦═╗╔═╗╔═╗╦ ╦ ╦╔═╗╔═╗╦ ╦ ╦\n\n# ╠╦╝╠═╝║ ║║ ╚╦╝╠═╝║ ║║ ╚╦╝\n\n# ╩╚═╩  ╚═╝╩═╝╩ ╩  ╚═╝╩═╝╩\n\n# ----------------------------------------------------------\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Include RpolyPlusPlus: Options ===========================\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#  find_library(RpolyPlusPlus\n\n#      NAMES rpoly_plus_plus\n\n#      NO_CMAKE_PATH\n\n#      REQUIRED)\n",
        "Line" : 223,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "#  set(RpolyPlusPlus /usr/lib/librpoly_plus_plus.so)\n\n#  set(RpolyPlusPlus_LIBRARY \"${RpolyPlusPlus}\")\n\n#  set(RpolyPlusPlus_LIBRARIES \"${RpolyPlusPlus}\")\n",
        "Line" : 228,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "#  set(RpolyPlusPlus_INCLUDE_DIR /usr/include/RpolyPlusPlus)\n\n#  include_directories(${CMAKE_SOURCE_DIR} ${RpolyPlusPlus_INCLUDE_DIR})\n",
        "Line" : 232,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# NOT WORKING:\n\n#  find_library(RpolyPlusPlus\n\n#      NAMES rpoly_plus_plus\n\n#      NO_DEFAULT_PATH\n\n#      REQUIRED)\n",
        "Line" : 237,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# Lib\n",
        "Line" : 243,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# Include\n",
        "Line" : 250,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# ----------------------------------------------------------\n\n# ╔╗ ╔═╗╔═╗╔═╗╔╦╗\n\n# ╠╩╗║ ║║ ║╚═╗ ║\n\n# ╚═╝╚═╝╚═╝╚═╝ ╩\n\n# ----------------------------------------------------------\n",
        "Line" : 261,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Boost libraries: default-settings ========================\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# 1.63\n",
        "Line" : 269,
        "CharPositionInLine" : 29
      },
      "39" : {
        "Text" : "# enable dynamic linking\n\n# enable multithreading\n",
        "Line" : 273,
        "CharPositionInLine" : 31
      },
      "40" : {
        "Text" : "# Boost libraries: option-dependent settings ===============\n",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Implementation of BUILD_WIC_ADGPRS option\n",
        "Line" : 277,
        "CharPositionInLine" : 23
      },
      "42" : {
        "Text" : "# enable dynamic linking\n",
        "Line" : 279,
        "CharPositionInLine" : 33
      },
      "43" : {
        "Text" : "# CMAKE_EXE_LINKER_FLAGS --> TODO: Double-check if absolutely necessary\n",
        "Line" : 281,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# CMAKE_SHARED_LINKER_FLAGS --> TODO: Double-check if absolutely necessary\n",
        "Line" : 285,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "# This is opposite of default settings --> TODO: Double-check if necessary\n",
        "Line" : 289,
        "CharPositionInLine" : 2
      },
      "46" : {
        "Text" : "# Enable multithreading\n",
        "Line" : 290,
        "CharPositionInLine" : 36
      },
      "47" : {
        "Text" : "# Linking options\n",
        "Line" : 292,
        "CharPositionInLine" : 2
      },
      "48" : {
        "Text" : "# Enable static linking to c++ runtime\n",
        "Line" : 293,
        "CharPositionInLine" : 36
      },
      "49" : {
        "Text" : "# Only needed for WIN32 option?\n",
        "Line" : 294,
        "CharPositionInLine" : 29
      },
      "50" : {
        "Text" : "# Find packages\n",
        "Line" : 296,
        "CharPositionInLine" : 2
      },
      "51" : {
        "Text" : "# Building WIC executable with dependencies only\n",
        "Line" : 300,
        "CharPositionInLine" : 24
      },
      "52" : {
        "Text" : "# Building all FieldOpt sources\n",
        "Line" : 304,
        "CharPositionInLine" : 7
      },
      "53" : {
        "Text" : "# ----------------------------------------------------------\n\n# ╔╦╗╔╗ ╔═╗\n\n#  ║║╠╩╗║ ╦\n\n# ═╩╝╚═╝╚═╝\n\n# ----------------------------------------------------------\n",
        "Line" : 309,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# Pring debug info: include dirs + source dirs =============\n",
        "Line" : 315,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "## ADDED\n\n## Set this directory as the root dir\n",
        "Line" : 318,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# ----------------------------------------------------------\n\n# ╔═╗╔╗╔╔═╗╔═╗╔╦╗\n\n# ╚═╗║║║║ ║╠═╝ ║\n\n# ╚═╝╝╚╝╚═╝╩   ╩\n\n# ----------------------------------------------------------\n",
        "Line" : 322,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "## SNOPT ===================================================\n\n#include_directories(${CMAKE_SOURCE_DIR}/FieldOpt-3rdPartySolvers/include/snopt)\n\n#include_directories(${CMAKE_SOURCE_DIR}/FieldOpt-3rdPartySolvers/handlers)\n",
        "Line" : 328,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# ----------------------------------------------------------\n\n# ╦ ╦╔╗╔╦╔╦╗  ╔╦╗╔═╗╔═╗╔╦╗╔═╗\n\n# ║ ║║║║║ ║    ║ ║╣ ╚═╗ ║ ╚═╗\n\n# ╚═╝╝╚╝╩ ╩    ╩ ╚═╝╚═╝ ╩ ╚═╝\n\n# ----------------------------------------------------------\n",
        "Line" : 332,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# Enable testing ===========================================\n",
        "Line" : 338,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# Compile FieldOpt sources =================================\n",
        "Line" : 354,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "#  add_subdirectory(FieldOpt-3rdPartySolvers)\n",
        "Line" : 368,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Copy execution scripts\n",
        "Line" : 370,
        "CharPositionInLine" : 2
      },
      "63" : {
        "Text" : "## Copy the test driver file into the build dir\n",
        "Line" : 376,
        "CharPositionInLine" : 2
      },
      "64" : {
        "Text" : "## Create an empty directory for test output\n",
        "Line" : 385,
        "CharPositionInLine" : 2
      },
      "65" : {
        "Text" : "# Compile options ==========================================\n",
        "Line" : 390,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# Copy example files =======================================\n",
        "Line" : 393,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "## Copy the examples into the build dir\n",
        "Line" : 395,
        "CharPositionInLine" : 2
      },
      "68" : {
        "Text" : "# ==========================================================\n",
        "Line" : 400,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 69
    },
    "FieldOpt/ConstraintMath/CMakeLists.txt" : {
      "ObjectId" : "1c5973f3fab187e3f90bfdc989422f28ee097b6c",
      "LastModified" : "2019-01-11T13:56:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Unit tests\n",
        "Line" : 24,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "FieldOpt/ConstraintMath/Sources.cmake" : {
      "ObjectId" : "365ac1a2a84e2a27dbc60007f90913283f18a08b",
      "LastModified" : "2019-01-11T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "FieldOpt/DebugMsg.cmake" : {
      "ObjectId" : "9054ad5992ab65206457e0cb47f4281ceeb0d9c7",
      "LastModified" : "2019-01-11T13:56:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Debug: include dirs ==================================================\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Debug: Source dir ====================================================\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "FieldOpt/ERTWrapper/CMakeLists.txt" : {
      "ObjectId" : "7ac77a43596f699c2181d2551eaacd9b4b2e5d34",
      "LastModified" : "2019-01-11T13:56:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enable position independent code when compiling lib, so that\n\n# shared library libwellindexcalculator.so may be linked with\n\n# static reservoir and ertwrapper libraries\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Unit tests\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "FieldOpt/ERTWrapper/Sources.cmake" : {
      "ObjectId" : "afe9049b064918bd008f14f2b98068f22b28cfcf",
      "LastModified" : "2019-01-11T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "FieldOpt/GetSysInfo.cmake" : {
      "ObjectId" : "02d44002f91a448fb948f9b7d0e449ea04db86f1",
      "LastModified" : "2019-01-11T13:56:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# System info ==========================================================\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "FieldOpt/Hdf5SummaryReader/CMakeLists.txt" : {
      "ObjectId" : "30e84a0edef6148595b3919f3a620060db63b13e",
      "LastModified" : "2019-03-13T12:55:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Unit tests\n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "FieldOpt/Hdf5SummaryReader/Sources.cmake" : {
      "ObjectId" : "e12f1db39803539c53369e0d34c84eacf3657086",
      "LastModified" : "2019-01-11T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "FieldOpt/InclDirDbg.cmake" : {
      "ObjectId" : "58d8ecfb2c51149fe2bf9393ff79c3b82a760ab2",
      "LastModified" : "2019-01-11T13:56:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Debug: include dirs ======================================\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "FieldOpt/MaurConfig.cmake" : {
      "ObjectId" : "3e94058d7bf1ea8b3c7e9b875501bff450c7db8d",
      "LastModified" : "2019-01-11T13:56:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Compilation at Maur ==================================================\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Maur =================================================================\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# RPOLYPOLY\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# QT\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# EIGEN\n",
        "Line" : 26,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# ERT\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "FieldOpt/Model/CMakeLists.txt" : {
      "ObjectId" : "b1e894682362f3576dd6af1e272785637b46bb33",
      "LastModified" : "2019-01-11T13:56:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Unit tests\n",
        "Line" : 27,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "FieldOpt/Model/Sources.cmake" : {
      "ObjectId" : "2b049c3bbec7683b860518cf6cb0976e5823bd7f",
      "LastModified" : "2019-03-13T12:55:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "FieldOpt/Optimization/CMakeLists.txt" : {
      "ObjectId" : "5af32c4c4fe16e09fb72d880708f9aacb2bbfaff",
      "LastModified" : "2019-03-13T12:55:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Unit tests\n",
        "Line" : 27,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "FieldOpt/Optimization/Sources.cmake" : {
      "ObjectId" : "51c676e972d914d6a430d002128e38123520f513",
      "LastModified" : "2019-04-01T16:02:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "FieldOpt/Reservoir/CMakeLists.txt" : {
      "ObjectId" : "c0f9be136667be9c16b9c264b10ee08d9a636f7c",
      "LastModified" : "2019-01-11T13:56:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enable position independent code when compiling lib, so that\n\n# shared library libwellindexcalculator.so may be linked with\n\n# static reservoir and ertwrapper libraries\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Unit tests\n",
        "Line" : 26,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "FieldOpt/Reservoir/Sources.cmake" : {
      "ObjectId" : "2299bf71742644ca2bf7f9acdbd9e871cf64aa69",
      "LastModified" : "2019-01-11T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "FieldOpt/Runner/CMakeLists.txt" : {
      "ObjectId" : "77b61a9040cdc63b0476f81e0e684372e8c549a6",
      "LastModified" : "2019-01-11T13:56:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Unit tests\n",
        "Line" : 63,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "FieldOpt/Runner/Sources.cmake" : {
      "ObjectId" : "4eb481b1ecc9b394d0bca8a55c80a1810a447324",
      "LastModified" : "2019-01-11T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "FieldOpt/Settings/CMakeLists.txt" : {
      "ObjectId" : "81f236fb5b38a89c0a3a4d6ec2ff25f89739ea08",
      "LastModified" : "2019-01-11T13:56:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#        PUBLIC ${ERTLIB}\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Unit tests\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "FieldOpt/Settings/Sources.cmake" : {
      "ObjectId" : "be458c0cf84f0872d4c50317c146af4e251d5d07",
      "LastModified" : "2019-03-13T12:55:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "FieldOpt/Simulation/CMakeLists.txt" : {
      "ObjectId" : "d509bb2f02ec181436cdb64682cccdabda03e4fa",
      "LastModified" : "2019-01-11T13:56:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Unit tests\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "FieldOpt/Simulation/Sources.cmake" : {
      "ObjectId" : "42bd98a22ddb3995f1d0e6eed05f1a8935c13f6c",
      "LastModified" : "2019-03-13T12:55:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "FieldOpt/ThirdParty/CMakeLists.txt" : {
      "ObjectId" : "3e2eda2222d1755a6e3fa4c9278bdca51128aed0",
      "LastModified" : "2019-03-13T12:55:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# This CMake project builds all the third party dependencies needed by\n\n# FieldOpt.\n\n#\n\n# You don't stricly need to build this. It is provided mainly as a\n\n# convenience for building on systems where you don't have access (or\n\n# permission to use) a package manager. If these libraries are not\n\n# built, FieldOpt will use the libraries installed on the system.\n\n#\n\n# All the dependencies are found in this directory as git submodules.\n\n# Note that these need to be initialized _before_ running the build.\n\n#\n\n# The libraries built here are:\n\n#   - Qt5 (Core module)\n\n#   - Boost (modules: program_options, serialization, mpi, system,\n\n#                     filesystem, random)\n\n#   - Eigen3\n\n#   - RpolyPlusPlus\n\n#   - libecl (ERT)\n\n#   - libgp\n\n#   - Google Test framework\n\n########################################################################\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(HDF5_EXPORTED_TARGETS \"\")\n\n#set(HDF5_EXTERNAL_LIB_PREFIX \"tp\")\n",
        "Line" : 78,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#OUTPUT_QUIET\n",
        "Line" : 139,
        "CharPositionInLine" : 16
      },
      "CommentCount" : 3
    },
    "FieldOpt/ThirdParty/libecl/CMakeLists.txt" : {
      "ObjectId" : "d6e7e62e3dc5e973630639dfa3acff02855168a4",
      "LastModified" : "2019-01-11T13:56:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Remember to update release notes whenever\n\n# you change the ERT_VERSION_MINOR or MAJOR\n\n# with \"new in Ert Version X.X.X\"!\n",
        "Line" : 12,
        "CharPositionInLine" : 29
      },
      "2" : {
        "Text" : "# If the micro version is not integer, that should be interpreted as a\n\n# development version leading towards version MAJOR.MINOR.0\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-----------------------------------------------------------------\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# output libs to some lib/ path for testing\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set the possible values of build type for cmake-gui\n",
        "Line" : 106,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "# Treat warnings as errors if not on Windows\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#-----------------------------------------------------------------\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# create targets for (required and optional) dependencies to link to\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# when cmake can be upgraded to >= 3.0, dependencies should be implemented\n\n# either via target-providing FindLib.cmake:\n\n# ```\n\n# find_package(Threads)\n\n# target_link_libraries(lib Threads::Threads)\n\n# ```\n\n#\n\n# or via INTERFACE libraries:\n\n# add_library(m INTERFACE)\n\n# find_library(M_LIBRARY NAMES m)\n\n# if (M_LIBRARY)\n\n#    target_link_libraries(m ${M_LIBRARY})\n\n# endif ()\n\n# target_link_libraries(m ${M_LIBRARY})\n\n#\n\n# These targets can then be exported along with targets provided by this\n\n# project. Linking against cmake interface targets will handle include\n\n# directories better than raw names given to target_link_libraries\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#-----------------------------------------------------------------\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# feature tests\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Portability checks; look for htons function\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Linux or Darwin\n",
        "Line" : 318,
        "CharPositionInLine" : 7
      },
      "14" : {
        "Text" : "#-----------------------------------------------------------------\n",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# If finding the Python interpreter and required packages\n\n# fails in the python/CMakeLists.txt file the BUILD_PYTHON\n\n# will be set to OFF.\n",
        "Line" : 349,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 16
    },
    "FieldOpt/ThirdParty/libecl/applications/CMakeLists.txt" : {
      "ObjectId" : "318197a204b5863c490ab218768c2caf9cae1a36",
      "LastModified" : "2019-01-11T13:56:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The stupid .x extension creates problems on windows\n",
        "Line" : 28,
        "CharPositionInLine" : 12
      },
      "1" : {
        "Text" : "# The stupid .x extension creates problems on windows\n",
        "Line" : 38,
        "CharPositionInLine" : 12
      },
      "2" : {
        "Text" : "# This minor eclipse application depends on the config parser library\n\n# and should be moved to the libres repository - it can not be\n\n# built here.\n",
        "Line" : 47,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "FieldOpt/ThirdParty/libecl/cmake/Modules/FindCXX11Features.cmake" : {
      "ObjectId" : "13b25e38568165f07be7778959e83b3eaf65ee70",
      "LastModified" : "2019-01-11T13:56:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Module that checks for supported C++11 (former C++0x) features.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "FieldOpt/ThirdParty/libecl/cmake/Modules/FindSphinx.cmake" : {
      "ObjectId" : "e4f6d45c27a33c7c785a8942296a5b810ac27dc3",
      "LastModified" : "2019-01-11T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "FieldOpt/ThirdParty/libecl/cmake/Modules/UseMultiArch.cmake" : {
      "ObjectId" : "538051b29d61b752573548c84ab5bdd39c6117db",
      "LastModified" : "2019-01-11T13:56:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Multiarch support in object code library directories\n\n#\n\n# This module sets the following variable\n\n#       CMAKE_INSTALL_LIBDIR         to lib, lib64 or lib/x86_64-linux-gnu\n\n#                                    depending on the platform; use this path\n\n#                                    for platform-specific binaries.\n\n#\n\n#       CMAKE_INSTALL_LIBDIR_NOARCH  to lib or lib64 depending on the platform;\n\n#                                    use this path for architecture-independent\n\n#                                    files.\n\n#\n\n# Note that it will override the results of GNUInstallDirs if included after\n\n# that module.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Fedora uses lib64/ for 64-bit systems, Debian uses lib/x86_64-linux-gnu;\n\n# Fedora put module files in lib64/ too, but Debian uses lib/ for that\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Debian or Ubuntu?\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# 64-bit system?\n",
        "Line" : 23,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# let the user override if somewhere else is desirable\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "FieldOpt/ThirdParty/libecl/cmake/ert_api_check.cmake" : {
      "ObjectId" : "4e0fbe9d74397108365397dfb738dad007fcf55f",
      "LastModified" : "2019-01-11T13:56:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file contains feature checks which affect the API of the final\n\n# product; i.e. if the test for zlib fails the function\n\n# buffer_fwrite_compressed() will not be available in the final\n\n# installation.\n\n# \n\n# The results of these tests will be assembled in the\n\n# ert/util/ert_api_config.h header; all the symbols in that header will\n\n# have a ERT_ prefix. The generated header is part of the api and can be\n\n# included by other header files in the ert source.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "FieldOpt/ThirdParty/libecl/cmake/ert_build_check.cmake" : {
      "ObjectId" : "14a2e474c36e45bbdb33ef16f66a49cc2aabe608",
      "LastModified" : "2019-01-11T13:56:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file contains checks which are used to implement portable\n\n# utility functions. The results of these check are assembled in the\n\n# generated header \"ert/util/build_config.h\" - that header is NOT part\n\n# of the public api and it should only be included from source files\n\n# as part of the compilation.\n\n#\n\n# Check which affect the final api are implemented in the\n\n# ert_api_check.cmake file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "FieldOpt/ThirdParty/libecl/cmake/ert_lib_check.cmake" : {
      "ObjectId" : "e8418d65ce1fcf923f2d44b9545a0f6f2a449351",
      "LastModified" : "2019-01-11T13:56:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file contains various checks which will append to the list\n\n# $ERT_EXTERNAL_UTIL_LIBS which should contain all the external library\n\n# dependencies. Observe that all library dependencies go transitively\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "FieldOpt/ThirdParty/libecl/cmake/ert_link.cmake" : {
      "ObjectId" : "3194bf43ca3ecb34670bd6eac70eb0165c08407c",
      "LastModified" : "2019-01-11T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "FieldOpt/ThirdParty/libecl/cmake/ert_module_name.cmake" : {
      "ObjectId" : "84dd438225706a9a26c29988f9e1cdeea651520a",
      "LastModified" : "2019-01-11T13:56:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "FieldOpt/ThirdParty/libecl/lib/CMakeLists.txt" : {
      "ObjectId" : "5f477cba2513d45548fa55a8f335311cce4ef6a5",
      "LastModified" : "2019-01-11T13:56:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The block_fs filesystem is so heavily dependant on pthreads that it is\n\n# not built if de not have pthreads.\n",
        "Line" : 5,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "#\n\n# ecl\n\n#\n",
        "Line" : 371,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The ecl_win64 application is not built as a proper test integrated\n\n# into the CTEST system. Should be invoked manually on Windows.\n",
        "Line" : 441,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# geometry\n\n#\n",
        "Line" : 448,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# ecl\n\n#\n",
        "Line" : 486,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The grid volume test fails miserably on the test case given as example five; looking at\n\n# the failures one could actually suspect that the ECLIPSE algorithm for PORV calculations\n\n# has been different in this file - i.e. that the absolute value of the individual\n\n# tetrahedron parts have been taken during the sum, and not at the end. At least the ert\n\n# algorithm gets volumes ~ 0 whereas ECLIPSE reports ~10^9 for the same cell.\n\n# add_test( ecl_grid_volume5 ${EXECUTABLE_OUTPUT_PATH}/ecl_grid_volume ${_eclpath}/Heidrun/Summary/FF12_2013B3_CLEAN_RS)\n",
        "Line" : 609,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# geometry\n\n#\n",
        "Line" : 786,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "FieldOpt/Utilities/CMakeLists.txt" : {
      "ObjectId" : "1f0106389290432be7262bbf3f334ff39afdbdcb",
      "LastModified" : "2019-01-11T13:56:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Unit tests\n",
        "Line" : 10,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "FieldOpt/Utilities/Sources.cmake" : {
      "ObjectId" : "c553ec8c5e7cde71f677fe52f9adf7e1deec338c",
      "LastModified" : "2019-03-13T12:55:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "FieldOpt/WellIndexCalculation/CMakeLists.txt" : {
      "ObjectId" : "8d05548eea6abff6cd6fb9f2020fadd6f31a64e8",
      "LastModified" : "2019-03-13T12:55:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Dbg ==================================================================\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Options ==============================================================\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ResInsight ===========================================================\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Include: Qt ==========================================================\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Compile options ======================================================\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# controls ricasedata delete\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Testing ==============================================================\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Unit tests\n",
        "Line" : 79,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Debug: include dirs ==================================================\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "FieldOpt/WellIndexCalculation/Sources.cmake" : {
      "ObjectId" : "6e36907b143a6160a5f533dff06a63d6998abbbf",
      "LastModified" : "2019-03-13T12:55:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "FieldOpt/WellIndexCalculation/resinxx.cmake" : {
      "ObjectId" : "bd8a35c13aabb8e16ce9f0f383e346f05c8a798e",
      "LastModified" : "2019-03-13T12:55:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# RESINXX DIRS =========================================================\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# MAIN RESINXX FILES ===================================================\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# GRID FILES ===========================================================\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# APP FWK FILES ========================================================\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# CORE GEOM FILES ======================================================\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# RES MOD FILES ========================================================\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# PRJ MOD FILES ========================================================\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#${RESINXX_PRJ_VIZ}/cvfDrawable.cpp\n\n#${RESINXX_PRJ_VIZ}/cvfDrawableGeo.cpp\n\n#${RESINXX_PRJ_VIZ}/cvfPrimitiveSet.cpp\n\n#${RESINXX_PRJ_VIZ}/cvfPrimitiveSetIndexedUInt.cpp\n\n#${RESINXX_PRJ_VIZ}/cvfPrimitiveSetIndexedUIntScoped.cpp\n\n#${RESINXX_PRJ_VIZ}/cvfPrimitiveSetIndexedUShort.cpp\n\n#${RESINXX_PRJ_VIZ}/cvfPrimitiveSetIndexedUShortScoped.cpp\n\n#${RESINXX_PRJ_VIZ}/cvfVertexAttribute.cpp\n\n#${RESINXX_PRJ_VIZ}/cvfVertexBundle.cpp\n\n#${RESINXX_PRJ_VIZ}/cvfVertexWelder.cpp\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# ALL ==================================================================\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "FieldOpt/cmake/Modules/FindEigen3.cmake" : {
      "ObjectId" : "774ddac644bb1e709be85e99efa166235d4bfb47",
      "LastModified" : "2019-03-13T12:55:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Eigen3 lib\n\n#\n\n# This module supports requiring a minimum version, e.g. you can do\n\n#   find_package(Eigen3 3.1.2)\n\n# to require version 3.1.2 or newer of Eigen3.\n\n#\n\n# Once done this will define\n\n#\n\n#  EIGEN3_FOUND - system has eigen lib with correct version\n\n#  EIGEN3_INCLUDE_DIR - the eigen include directory\n\n#  EIGEN3_VERSION - eigen version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>\n\n# Copyright (c) 2009 Benoit Jacob <jacob.benoit.1@gmail.com>\n\n# Redistribution and use is allowed according to the terms of the 2-clause BSD license.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 61,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# specific additional paths for some OS\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "FieldOpt/cmake/Modules/FindRpolyPlusPlus.cmake" : {
      "ObjectId" : "083e84f23faa33d409e8c1daf91e0dda307a75c5",
      "LastModified" : "2019-03-13T12:55:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find RpolyPlusPlus\n\n# Once done, this will define\n\n#\n\n#  RpolyPlusPlus_FOUND - system has RpolyPlusPlus\n\n#  RpolyPlusPlus_INCLUDE_DIRS - the RpolyPlusPlus include directories\n\n#  RpolyPlusPlus_LIBRARIES - link these to use RpolyPlusPlus\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Dependencies\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Use pkg-config to get hints about paths\n\n##libfind_pkg_check_modules(Magick++_PKGCONF ImageMagick++)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Include dir\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Finally the library itself\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "FieldOpt/cmake/Modules/Findecl.cmake" : {
      "ObjectId" : "1ff6f06344fdb8c8609a00a996c2cfa6d09cdad4",
      "LastModified" : "2019-03-13T12:55:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find ecl\n\n# Once done, this will define\n\n#\n\n#  ecl_FOUND - system has ecl\n\n#  ecl_INCLUDE_DIRS - the ecl include directories\n\n#  ecl_LIBRARIES - link these to use ecl\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Include dir\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Finally the library itself\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "FieldOpt/cmake/Modules/Findopm-common.cmake" : {
      "ObjectId" : "c160e55ff874a7a787ade739cb0261f9ce4dcf35",
      "LastModified" : "2019-03-13T12:55:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find opm-common\n\n# Once done, this will define\n\n#\n\n#  opm-common_FOUND - system has opm-common\n\n#  opm-common_INCLUDE_DIRS - the opm-common include directories\n\n#  opm-common_LIBRARIES - link these to use opm-common\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Include dir\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Finally the library itself\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "FieldOpt/cmake/Modules/LibFindMacros.cmake" : {
      "ObjectId" : "f253ffb80fcbb72fe5738d88aafaddcbb72a497f",
      "LastModified" : "2019-03-13T12:55:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Version 2.2\n\n# Public Domain, originally written by Lasse Kärkkäinen <tronic>\n\n# Maintained at https://github.com/Tronic/cmake-modules\n\n# Please send your improvements as pull requests on Github.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find another package and make it a dependency of the current package.\n\n# This also automatically forwards the \"REQUIRED\" argument.\n\n# Usage: libfind_package(<prefix> <another package> [extra args to find_package])\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# A simple wrapper to make pkg-config searches a bit easier.\n\n# Works the same as CMake's internal pkg_check_modules but is always quiet.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Avoid useless copy&pasta by doing what most simple libraries do anyway:\n\n# pkg-config, find headers, find library.\n\n# Usage: libfind_pkg_detect(<prefix> <pkg-config args> FIND_PATH <name> [other args] FIND_LIBRARY <name> [other args])\n\n# E.g. libfind_pkg_detect(SDL2 sdl2 FIND_PATH SDL.h PATH_SUFFIXES SDL2 FIND_LIBRARY SDL2)\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Parse arguments\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Find library\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Extracts a version #define from a version.h file, output stored to <PREFIX>_VERSION.\n\n# Usage: libfind_version_header(Foobar foobar/version.h FOOBAR_VERSION_STR)\n\n# Fourth argument \"QUIET\" may be used for silently testing different define names.\n\n# This function does nothing if the version variable is already defined.\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Skip processing if we already have a version or if the include dir was not found\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Process optional arguments\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Read the header and parse for version number\n",
        "Line" : 75,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# No regex match?\n",
        "Line" : 85,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Export the version string\n",
        "Line" : 92,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Do the final processing once the paths have been detected.\n\n# If include dirs are needed, ${PREFIX}_PROCESS_INCLUDES should be set to contain\n\n# all the variables, each of which contain one include directory.\n\n# Ditto for ${PREFIX}_PROCESS_LIBS and library files.\n\n# Will set ${PREFIX}_FOUND, ${PREFIX}_INCLUDE_DIRS and ${PREFIX}_LIBRARIES.\n\n# Also handles errors in case library detection was required, etc.\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Skip processing if already processed during this configuration run\n",
        "Line" : 103,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Start with the assumption that the package was found\n",
        "Line" : 108,
        "CharPositionInLine" : 19
      },
      "15" : {
        "Text" : "# Did we find any files? Did we miss includes? These are for formatting better error messages.\n",
        "Line" : 110,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Shorthands for some variables that we need often\n",
        "Line" : 114,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Lists of config option names (all, includes, libs)\n",
        "Line" : 121,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Process deps to add to \n",
        "Line" : 126,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# The package seems to export option lists that we can use, woohoo!\n",
        "Line" : 129,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "# If plural forms don't exist or they equal singular forms\n",
        "Line" : 133,
        "CharPositionInLine" : 6
      },
      "21" : {
        "Text" : "# Singular forms can be used\n",
        "Line" : 136,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# Oh no, we don't know the option names\n",
        "Line" : 144,
        "CharPositionInLine" : 8
      },
      "23" : {
        "Text" : "# Include/library names separated by spaces (notice: not CMake lists)\n",
        "Line" : 163,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Process all includes and set found false if any are missing\n",
        "Line" : 167,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Process all libraries and set found false if any are missing\n",
        "Line" : 178,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Version checks\n",
        "Line" : 188,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# If all-OK, hide all config options, export variables, print status and exit\n",
        "Line" : 198,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# Format messages for debug info and the type of error\n",
        "Line" : 221,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# Fatal error out if REQUIRED\n",
        "Line" : 256,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# Otherwise just print a nasty warning\n",
        "Line" : 261,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 31
    }
  },
  "FileTypes" : {
    "CMAKE" : 45
  },
  "ElapsedTime" : 1734
}