{
  "Repository" : "30211471",
  "Revision" : "HEAD",
  "ObjectId" : "9d6ea8bd7a7797db47ad6852699be530b2bd3020",
  "CommitTime" : "2019-04-16T01:37:08Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "3e13e99734dff2dcf4d8fd35f985b2cf6aa6765a",
      "LastModified" : "2019-03-10T14:26:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###################################################################################\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(CMAKE_BUILD_TYPE DEBUG)\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# windows platform\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#set(CMAKE_ASM_SOURCE_FILE_EXTENSIONS asm)\n\n#file(COPY ${PROJECT_SOURCE_DIR}/third_party/boost.context/libs/context/src/asm/make_x86_64_ms_pe_masm.asm DESTINATION ${PROJECT_SOURCE_DIR}/libgo/context)\n\n#file(COPY ${PROJECT_SOURCE_DIR}/third_party/boost.context/libs/context/src/asm/jump_x86_64_ms_pe_masm.asm DESTINATION ${PROJECT_SOURCE_DIR}/libgo/context)\n",
        "Line" : 65,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#PATTERN \"windows\" EXCLUDE\n",
        "Line" : 112,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "#message(\"PROFILE_FLAGS: ${PROFILE_FLAGS}\")\n",
        "Line" : 140,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "test/asio/CMakeLists.txt" : {
      "ObjectId" : "9640349e480bda8ed3ec764556f14400740ec6d5",
      "LastModified" : "2019-03-10T14:26:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###################################################################################\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(CMAKE_BUILD_TYPE DEBUG)\n",
        "Line" : 9,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "test/bench/CMakeLists.txt" : {
      "ObjectId" : "96b658d160076e8114a61001a1ef05500ade4cf7",
      "LastModified" : "2019-03-10T14:26:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###################################################################################\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(CMAKE_BUILD_TYPE DEBUG)\n",
        "Line" : 9,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "test/gtest_unit/CMakeLists.txt" : {
      "ObjectId" : "8ae0ad3f1944b7c94ba010d5fe7c81bb17e9dc11",
      "LastModified" : "2019-03-10T14:26:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###################################################################################\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(CMAKE_BUILD_TYPE DEBUG)\n",
        "Line" : 9,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# windows platform\n\n#add_definitions(-D_CRT_SECURE_NO_WARNINGS)\n\n#set(CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG} /MDd\")\n\n#set(CMAKE_CXX_FLAGS_RELEASE \"${CMAKE_CXX_FLAGS_RELEASE} /MD\")\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#set(STATIC_LINK_ARG -Wl,--whole-archive -lpthread -Wl,--no-whole-archive -static)\n",
        "Line" : 53,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#message(\"${TEST_LINK_FLAGS}\")\n",
        "Line" : 80,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#add_executable(s_${tgt}.t ${var})\n\n#target_link_libraries(s_${tgt}.t ${TEST_LINK_FLAGS} ${LINK_ARGS} ${STATIC_LINK_ARG})\n\n#if (WIN32)\n\n#    set_target_properties(s_${tgt}.t PROPERTIES COMPILE_FLAGS \"/wd4819 /wd4267 /wd4996\")\n\n#elseif (UNIX)\n\n#    set_target_properties(s_${tgt}.t PROPERTIES LINK_FLAGS \" -Wl,--whole-archive -lstatic_hook -lc -lpthread -Wl,--no-whole-archive\")\n\n#endif()\n",
        "Line" : 91,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "test/gtest_unit/Makefile" : {
      "ObjectId" : "3b89adfcbd2fcbed0c4906f32058ab84c211972a",
      "LastModified" : "2019-03-10T14:26:52Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "test/gtest_unit/boost.cmake" : {
      "ObjectId" : "e2335b7abbd9abe3726f934f89baf21952558042",
      "LastModified" : "2019-03-10T14:26:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/test/Makefile" : {
      "ObjectId" : "cbe532bf4438cddd7973389332f36c126795326c",
      "LastModified" : "2019-03-10T14:26:52Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "test/third_libs/CMakeLists.txt" : {
      "ObjectId" : "4c19569b7c9bf7c494b7e7cfad2bc1203281a48d",
      "LastModified" : "2019-03-10T14:26:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###################################################################################\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(CMAKE_BUILD_TYPE RELEASE)\n",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# windows platform\n\n#add_definitions(-D_CRT_SECURE_NO_WARNINGS)\n\n#set(CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG} /MDd\")\n\n#set(CMAKE_CXX_FLAGS_RELEASE \"${CMAKE_CXX_FLAGS_RELEASE} /MD\")\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#find_package(CURL REQUIRED)\n\n#target_link_libraries(main PRIVATE ${CURL_LIBRARIES})\n\n#include_directories(main PRIVATE ${CURL_INCLUDE_DIRS})\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "third_party/boost.context/libs/test/build/CMakeLists.txt" : {
      "ObjectId" : "9b91e05f3ab644cdf5ca5eb8aa1e21da9b848802",
      "LastModified" : "2019-03-10T14:26:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2001, Raffi Enficiaud\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use, modification, and distribution are subject to the\n\n# Boost Software License, Version 1.0. (See accompanying file\n\n# LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# See http://www.boost.org/libs/test for the library home page.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# build type, by default to release (with optimisations) \n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set the possible values of build type for cmake-gui\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# ctest sets BUILD_TESTING automatically, but does not seem to serve its purpose.\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# c++11 options\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++0x\")\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# global path\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# global include on boost\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# include globs\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# organize files\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "####\n\n# Documentation files (files only, no target)\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "####\n\n# Unit tests\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# documentation tests\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# unit tests folder\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# datasets\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "####\n\n# TS writing-test-ts\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#get_filename_component(_v \"${_v}\" DIRECTORY)\n",
        "Line" : 188,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# test suite\n",
        "Line" : 198,
        "CharPositionInLine" : 13
      },
      "CommentCount" : 19
    },
    "third_party/boost.context/tools/build/example/make/main_cpp.pro" : {
      "ObjectId" : "237c8ce181774d991a9dbdd8cacf1a5fb9f199f1",
      "LastModified" : "2019-03-10T14:26:52Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "third_party/boost.context/tools/build/src/engine/boehm_gc/Makefile.am" : {
      "ObjectId" : "e632864df2b7bf33a97469b112be0e104bc15b5e",
      "LastModified" : "2019-03-10T14:26:52Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Copyright (c) 1999-2001 by Red Hat, Inc. All rights reserved.\n\n# \n\n# THIS MATERIAL IS PROVIDED AS IS, WITH ABSOLUTELY NO WARRANTY EXPRESSED\n\n# OR IMPLIED.  ANY USE IS AT YOUR OWN RISK.\n\n# \n\n# Permission is hereby granted to use or copy this program\n\n# for any purpose,  provided the above notices are retained on all copies.\n\n# Permission to modify the code and to distribute modified code is granted,\n\n# provided the above notices are retained, and a notice that the code was\n\n# modified is included with the above copyright notice.\n\n#\n\n# Original author: Tom Tromey\n\n# Severely truncated by Hans-J. Boehm\n\n# Modified by: Grzegorz Jakacki <jakacki at acm dot org>\n\n# Modified by: Petter Urkedal <petter.urkedal@nordita.dk> (2005-04)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Process this file with automake to produce Makefile.in.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## FIXME: `make distcheck' in this directory will not currently work.\n\n##     This is most likely to the explicit flags passed to submakes.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# We currently use the source files directly from libatomic_ops, if we\n\n# use the internal version.  This is done since libatomic_ops doesn't\n\n# use libtool, since it has no real use for it.  But that seems to make\n\n# it hard to use either the resulting object files or libraries.\n\n# Thus there seems too be no real reason to recusively build in the\n\n# libatomic_ops directory.\n\n# if USE_INTERNAL_LIBATOMICS_OPS\n\n# SUBDIRS = @maybe_libatomic_ops@\n\n# else\n\n# SUBDIRS =\n\n# endif\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Initialize variables so that we can declare files locally.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# C Library\n\n# ---------\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# C Library: Architecture Dependent\n\n# ---------------------------------\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Include THREADDLLIBS here to ensure that the correct versions of\n\n# linuxthread semaphore functions get linked:\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# C++ Interface\n\n# -------------\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# FIXME: If Visual C++ users use Makefile.am, this should go into\n\n# pkginclude_HEADERS with proper AM_CONDITIONALization.  Otherwise\n\n# delete this comment.\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Misc\n\n# ----\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## FIXME: relies on internal code generated by automake.\n\n## FIXME: ./configure --enable-dependency-tracking should be used \n\n#all_objs = @addobjs@ $(libgc_la_OBJECTS)\n\n#$(all_objs) : include/private/gcconfig.h include/private/gc_priv.h \\\n#include/private/gc_hdrs.h include/gc.h include/gc_gcj.h \\\n#include/gc_pthread_redirects.h include/gc_config_macros.h \\\n#include/private/thread_local_alloc.h include/private_support.h \\\n#include/private/pthread_stop_world.h \\\n#include/gc_mark.h @addincludes@\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## FIXME: we shouldn't have to do this, but automake forces us to.\n\n## We use -Wp,-P to strip #line directives.  Irix `as' chokes on\n\n## these.\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## XLC neither requires nor tolerates the unnecessary assembler goop\n",
        "Line" : 131,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "## We use -Wp,-P to strip #line directives.  Irix `as' chokes on\n\n## these.\n",
        "Line" : 134,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "## We need to add DEFS to assembler flags\n\n## :FIXME: what if assembler does not accept -D... ?\n\n##     (use Autoconf to prepare ASDEFS ???)\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## callprocs --- used by Makefile.{dj,direct}\n\n## configure.host --- used by Makefile.{am,dj,direct}\n",
        "Line" : 151,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# headers which are not installed\n\n# (see include/include.am for more)\n\n#\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# documentation which is not installed\n\n#\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# other makefiles\n\n# :GOTCHA: deliberately we do not include 'Makefile'\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# files used by makefiles other than Makefile.am\n\n#\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# The libatomic_ops library.  This is not ideal, since we pick up junk from\n\n# there.  The hard-coded version number should also go.\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# this is an auxiliary shell file used by Makefile and Makefile.direct\n\n#\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# :FIXME: why do we distribute this one???\n\n#\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\n\n# :GOTCHA: GNU make rule for making .s out of .S is flawed, \n\n# it will not remove dest if building fails\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Putting these at the top causes cord to be built first, and not find libgc.a\n\n# on HP/UX.  There may be a better fix.\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 26
    },
    "third_party/gtest/CMakeLists.txt" : {
      "ObjectId" : "433a813ad4cef161a4857350c6454b1888a4f02b",
      "LastModified" : "2019-03-10T14:26:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# CMake build script for Google Test.\n\n#\n\n# To run the tests for Google Test itself on Linux, use 'make test' or\n\n# ctest.  You can select which tests to run using 'ctest -R regex'.\n\n# For more options, run 'ctest --help'.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BUILD_SHARED_LIBS is a standard CMake variable, but we declare it here to\n\n# make it prominent in the GUI.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# When other libraries are using a shared version of runtime libraries,\n\n# Google Test also has to use one.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Defines pre_project_set_up_hermetic_build() and set_up_hermetic_build().\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "########################################################################\n\n#\n\n# Project-wide settings\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Name of the project.\n\n#\n\n# CMake files in this project can refer to the root source directory\n\n# as ${gtest_SOURCE_DIR} and to the root binary directory as\n\n# ${gtest_BINARY_DIR}.\n\n# Language \"C\" is required for find_package(Threads).\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define helper functions and macros used by Google Test.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Defined in internal_utils.cmake.\n",
        "Line" : 62,
        "CharPositionInLine" : 30
      },
      "8" : {
        "Text" : "# Where Google Test's .h files can be found.\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Where Google Test's libraries can be found.\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Summary of tuple support for Microsoft Visual Studio:\n\n# Compiler    version(MS)  version(cmake)  Support\n\n# ----------  -----------  --------------  -----------------------------\n\n# <= VS 2010  <= 10        <= 1600         Use Google Tests's own tuple.\n\n# VS 2012     11           1700            std::tr1::tuple + _VARIADIC_MAX=10\n\n# VS 2013     12           1800            std::tr1::tuple\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "########################################################################\n\n#\n\n# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Google Test libraries.  We build them using more strict warnings than what\n\n# are used for other targets, to ensure that gtest can be compiled by a user\n\n# aggressive about warnings.\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "########################################################################\n\n#\n\n# Samples on how to link user tests with gtest or gtest_main.\n\n#\n\n# They are not built by default.  To build them, set the\n\n# gtest_build_samples option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_samples=ON flag when running cmake.\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "########################################################################\n\n#\n\n# Google Test's own tests.\n\n#\n\n# You can skip this section if you aren't interested in testing\n\n# Google Test itself.\n\n#\n\n# The tests are not built by default.  To build them, set the\n\n# gtest_build_tests option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_tests=ON flag when running cmake.\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# This must be set in the root directory for the tests to be run by\n\n# 'make test' or ctest.\n",
        "Line" : 127,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "############################################################\n\n# C++ tests built with standard compiler flags.\n",
        "Line" : 131,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "############################################################\n\n# C++ tests built with non-standard compiler flags.\n",
        "Line" : 162,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 165,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# 1600 is Visual Studio 2010.\n",
        "Line" : 194,
        "CharPositionInLine" : 43
      },
      "20" : {
        "Text" : "# Visual Studio 2010, 2012, and 2013 define symbols in std::tr1 that\n\n# conflict with our own definitions. Therefore using our own tuple does not\n\n# work on those compilers.\n",
        "Line" : 195,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "############################################################\n\n# Python tests.\n",
        "Line" : 209,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# Visual Studio .NET 2003 does not support STL with exceptions disabled.\n",
        "Line" : 215,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# 1310 is Visual Studio .NET 2003\n",
        "Line" : 216,
        "CharPositionInLine" : 46
      },
      "24" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 252,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 25
    },
    "third_party/gtest/Makefile.am" : {
      "ObjectId" : "29797e4e9de4e1d5e5f93bba14288de87f623946",
      "LastModified" : "2019-03-10T14:26:52Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Automake file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Nonstandard package files for distribution\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# gtest source files that we don't compile directly.  They are\n\n# #included by gtest-all.cc.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Sample files that we don't compile.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# C++ test files that we don't compile directly.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Python tests that we don't run.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# CMake script\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# MSVC project files\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# xcode project files\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# xcode sample files\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# C++Builder project files\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Distribute and install M4 macro\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# We define the global AM_CPPFLAGS as everything we compile includes from these\n\n# directories.\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Modifies compiler and linker flags for pthreads compatibility.\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Build rules for libraries.\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Bulid rules for samples and tests. Automake's naming for some of\n\n# these variables isn't terribly obvious, so this is a brief\n\n# reference:\n\n#\n\n# TESTS -- Programs run automatically by \"make check\"\n\n# check_PROGRAMS -- Programs built by \"make check\" but not necessarily run\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# A simple sample on using gtest.\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Another sample.  It also verifies that libgtest works.\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# This tests most constructs of gtest and verifies that libgtest_main\n\n# and libgtest work.\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Tests that fused gtest files compile and work.\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Build rules for putting fused Google Test files into the distribution\n\n# package. The user can also create those files by manually running\n\n# scripts/fuse_gtest_files.py.\n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Death tests may produce core dumps in the build directory. In case\n\n# this happens, clean them to keep distcleancheck happy.\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Disables 'make install' as installing a compiled version of Google\n\n# Test can lead to undefined behavior due to violation of the\n\n# One-Definition Rule.\n",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "third_party/gtest/cmake/internal_utils.cmake" : {
      "ObjectId" : "ea65d1f53cb95a1b1941f17e2f629fa6429fa539",
      "LastModified" : "2019-03-10T14:26:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Defines functions and macros useful for building Google Test and\n\n# Google Mock.\n\n#\n\n# Note:\n\n#\n\n# - This file will be run twice when building Google Mock (once via\n\n#   Google Test's CMakeLists.txt, and once via Google Mock's).\n\n#   Therefore it shouldn't have any side effects other than defining\n\n#   the functions and macros.\n\n#\n\n# - The functions/macros defined in this file may depend on Google\n\n#   Test and Google Mock's option() definitions, and thus must be\n\n#   called *after* the options have been defined.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Tweaks CMake's default compiler/linker settings to suit Google Test's needs.\n\n#\n\n# This must be a macro(), as inside a function string() can only\n\n# update variables in the function scope.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For MSVC, CMake sets certain flags to defaults we want to override.\n\n# This replacement code is taken from sample in the CMake Wiki at\n\n# http://www.cmake.org/Wiki/CMake_FAQ#Dynamic_Replace.\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# When Google Test is built as a shared library, it should also use\n\n# shared runtime libraries.  Otherwise, it may end up with multiple\n\n# copies of runtime library data in different modules, resulting in\n\n# hard-to-find crashes. When it is built as a static library, it is\n\n# preferable to use CRT as static libraries, as we don't have to rely\n\n# on CRT DLLs being available. CMake always defaults to using shared\n\n# CRT libraries, so we override that default here.\n",
        "Line" : 28,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# We prefer more strict warning checking for building Google Test.\n\n# Replaces /W3 with /W4 in defaults.\n",
        "Line" : 38,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Defines the compiler/linker flags used to build Google Test and\n\n# Google Mock.  You can tweak these definitions to suit your need.  A\n\n# variable's value is empty before it's explicitly assigned to.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Defines CMAKE_USE_PTHREADS_INIT and CMAKE_THREAD_LIBS_INIT.\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Newlines inside flags variables break CMake's NMake generator.\n\n# TODO(vladl@google.com): Add -RTCs and -RTCu to debug builds.\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# 1400 is Visual Studio 2005\n",
        "Line" : 59,
        "CharPositionInLine" : 33
      },
      "9" : {
        "Text" : "# Suppress spurious warnings MSVC 7.1 sometimes issues.\n\n# Forcing value to bool.\n",
        "Line" : 60,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# Copy constructor and assignment operator could not be generated.\n",
        "Line" : 63,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# Compatibility warnings not applicable to Google Test.\n\n# Resolved overload was found by argument-dependent lookup.\n",
        "Line" : 65,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# 1500 is Visual Studio 2008\n",
        "Line" : 69,
        "CharPositionInLine" : 33
      },
      "13" : {
        "Text" : "# Conditional expression is constant.\n\n# When compiling with /W4, we get several instances of C4127\n\n# (Conditional expression is constant). In our code, we disable that\n\n# warning on a case-by-case basis. However, on Visual Studio 2005,\n\n# the warning fires on std::list. Therefore on that compiler and earlier,\n\n# we disable the warning project-wide.\n",
        "Line" : 70,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# 1700 is Visual Studio 2012.\n",
        "Line" : 78,
        "CharPositionInLine" : 39
      },
      "15" : {
        "Text" : "# Suppress \"unreachable code\" warning on VS 2012 and later.\n\n# http://stackoverflow.com/questions/3232669 explains the issue.\n",
        "Line" : 79,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# Until version 4.3.2, GCC doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 93,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Sun Pro doesn't provide macros to indicate whether exceptions and\n\n# RTTI are enabled, so we define GTEST_HAS_* explicitly.\n",
        "Line" : 101,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# CMake 2.8 changes Visual Age's compiler ID to \"XL\".\n",
        "Line" : 107,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Until version 9.0, Visual Age doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 110,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# RTTI can not be disabled in HP aCC compiler.\n",
        "Line" : 118,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# The pthreads library is available and allowed.\n",
        "Line" : 122,
        "CharPositionInLine" : 32
      },
      "22" : {
        "Text" : "# For building gtest's own tests and samples.\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# For building the gtest libraries.\n",
        "Line" : 136,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# type can be either STATIC or SHARED to denote a static or shared library.\n\n# ARGN refers to additional arguments after 'cxx_flags'.\n",
        "Line" : 143,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "########################################################################\n\n#\n\n# Helper functions for creating build targets.\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# cxx_executable_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ executable that depends on the given libraries and\n\n# is built from the given source files with the given compiler flags.\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# To support mixing linking in static and dynamic libraries, link each\n\n# library in with an extra call to target_link_libraries.\n",
        "Line" : 187,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# cxx_executable(name dir lib srcs...)\n\n#\n\n# creates a named target that depends on the given libs and is built\n\n# from the given source files.  dir/name.cc is implicitly included in\n\n# the source file list.\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Sets PYTHONINTERP_FOUND and PYTHON_EXECUTABLE.\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# cxx_test_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ test that depends on the given libs and is built\n\n# from the given source files with the given compiler flags.\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# cxx_test(name libs srcs...)\n\n#\n\n# creates a named test target that depends on the given libs and is\n\n# built from the given source files.  Unlike cxx_test_with_flags,\n\n# test/name.cc is already implicitly included in the source file list.\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# py_test(name)\n\n#\n\n# creates a Python test with the given name whose main module is in\n\n# test/name.py.  It does nothing if Python is not installed.\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# We are not supporting Python tests on Linux yet as they consider\n\n# all Linux environments to be google3 and try to use google3 features.\n",
        "Line" : 231,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# ${CMAKE_BINARY_DIR} is known at configuration time, so we can\n\n# directly bind it from cmake. ${CTEST_CONFIGURATION_TYPE} is known\n\n# only at ctest runtime (by calling ctest -c <Configuration>), so\n\n# we have to escape $ to delay variable substitution here.\n",
        "Line" : 234,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 36
    },
    "third_party/gtest/make/Makefile" : {
      "ObjectId" : "9ac74493ba55246597e90b898fae847ae358eab5",
      "LastModified" : "2019-03-10T14:26:52Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# A sample Makefile for building Google Test and using it in user\n\n# tests.  Please tweak it to suit your environment and project.  You\n\n# may want to move it to your project's root directory.\n\n#\n\n# SYNOPSIS:\n\n#\n\n#   make [all]  - makes everything.\n\n#   make TARGET - makes the given target.\n\n#   make clean  - removes all files generated by make.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Please tweak the following variable definitions as needed by your\n\n# project, except GTEST_HEADERS, which you can use in your own targets\n\n# but shouldn't modify.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Points to the root of Google Test, relative to where this file is.\n\n# Remember to tweak this if you move this file.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Where to find user code.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Flags passed to the preprocessor.\n\n# Set Google Test's header directory as a system directory, such that\n\n# the compiler doesn't generate warnings in Google Test headers.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Flags passed to the C++ compiler.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# All tests produced by this Makefile.  Remember to add new tests you\n\n# created to the list.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# All Google Test headers.  Usually you shouldn't change this\n\n# definition.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# House-keeping build targets.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Builds gtest.a and gtest_main.a.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Usually you shouldn't tweak such internal variables, indicated by a\n\n# trailing _.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# For simplicity and to avoid depending on Google Test's\n\n# implementation details, the dependencies specified below are\n\n# conservative and not optimized.  This is fine as Google Test\n\n# compiles fast and for ordinary users its source rarely changes.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Builds a sample test.  A test should link with either gtest.a or\n\n# gtest_main.a, depending on whether it defines its own main()\n\n# function.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "third_party/gtest/scripts/test/Makefile" : {
      "ObjectId" : "cdff584637b7a6e9df1fa43ce8f588c43815e561",
      "LastModified" : "2019-03-10T14:26:52Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# A Makefile for fusing Google Test and building a sample test against it.\n\n#\n\n# SYNOPSIS:\n\n#\n\n#   make [all]  - makes everything.\n\n#   make TARGET - makes the given target.\n\n#   make check  - makes everything and runs the built sample test.\n\n#   make clean  - removes all files generated by make.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Points to the root of fused Google Test, relative to where this file is.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Paths to the fused gtest files.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Where to find the sample test.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Where to find gtest_main.cc.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Flags passed to the preprocessor.\n\n# We have no idea here whether pthreads is available in the system, so\n\n# disable its use.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Flags passed to the C++ compiler.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "tutorial/CMakeLists.txt" : {
      "ObjectId" : "3bd4df7509a1252e623f6c199667b3ff6e2655fe",
      "LastModified" : "2019-03-10T14:26:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###################################################################################\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(CMAKE_BUILD_TYPE RELEASE)\n",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# windows platform\n\n#add_definitions(-D_CRT_SECURE_NO_WARNINGS)\n\n#set(CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG} /MDd\")\n\n#set(CMAKE_CXX_FLAGS_RELEASE \"${CMAKE_CXX_FLAGS_RELEASE} /MD\")\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#find_package(CURL REQUIRED)\n\n#target_link_libraries(main PRIVATE ${CURL_LIBRARIES})\n\n#include_directories(main PRIVATE ${CURL_INCLUDE_DIRS})\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#set(LINK_ARGS libgo ${Boost_LIBRARIES} pthread dl)\n",
        "Line" : 68,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "#    add_executable(s_${tgt}.t ${var})\n\n#    if (WIN32)\n\n#        set_target_properties(s_${tgt}.t PROPERTIES COMPILE_FLAGS \"/wd4819 /wd4267\")\n\n#        set(LINK_ARGS libgo libgo_main ${Boost_LIBRARIES} ws2_32)\n\n#    elseif (UNIX)\n\n#        set(LINK_ARGS libgo libgo_main ${Boost_LIBRARIES} -Wl,--whole-archive -lstatic_hook -lc -lpthread -Wl,--no-whole-archive -static)\n\n#    endif()\n\n#    target_link_libraries(s_${tgt}.t ${TEST_LINK_FLAGS} ${LINK_ARGS})\n",
        "Line" : 72,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "tutorial/boost.cmake" : {
      "ObjectId" : "e2335b7abbd9abe3726f934f89baf21952558042",
      "LastModified" : "2019-03-10T14:26:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 11,
    "QMAKE" : 1,
    "MAKEFILE" : 4,
    "AUTOMAKE" : 2
  },
  "ElapsedTime" : 1936
}