{
  "Repository" : "69079955",
  "Revision" : "HEAD",
  "ObjectId" : "19a105352aad9c0c482d7b81917c1c19f5cd6e71",
  "CommitTime" : "2019-04-18T08:41:22Z",
  "Files" : {
    "platform/binning_test/Makefile" : {
      "ObjectId" : "8339bc8d28f9fa09e8fe9180d9ef5c9181e5c864",
      "LastModified" : "2017-07-20T19:16:03Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#clueless at makefiles...\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Name of app\r\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Compiler name\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Get OS name\r\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# To compile on Windows use mingw32-fdfw64 thing\r\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Append '.exe' if windows\r\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# List of all objects to link\r\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Flags for link and objects\r\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#-Werror # no debugging\r\n",
        "Line" : 25,
        "CharPositionInLine" : 34
      },
      "9" : {
        "Text" : "# Minimum OSX version if mac\r\n",
        "Line" : 27,
        "CharPositionInLine" : 24
      },
      "10" : {
        "Text" : "# AMaZE seems to fit no standards I try\r\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Link all objects with main flags\r\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Making all objects...\r\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# 'make clean' to remove ugly .o files\r\n\n# !working on Windows(mingw32) for some reason\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Removes the program and object files \r\n",
        "Line" : 70,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 15
    },
    "platform/cocoa/Makefile" : {
      "ObjectId" : "92de5770eb2f871c176257ae70e81d30fb868262",
      "LastModified" : "2018-05-28T09:07:11Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Name of app in variable for easy changing\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# List of all objects to link\r\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# All macOS frameworks for the link\r\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Compilers\r\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# C\r\n",
        "Line" : 18,
        "CharPositionInLine" : 11
      },
      "5" : {
        "Text" : "# Objective C\r\n",
        "Line" : 19,
        "CharPositionInLine" : 12
      },
      "6" : {
        "Text" : "# Flags for link and objects\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Run some cheeky compiletime code to generate window title with hostname\r\n\n# Then call the build rule to actually build it\r\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# run 'make app' to get a .app bundle\r\n\n# we steal masc's Qt ffmpeg :) (remember, ffmpeg is temporary in Cocoa app)\r\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Actual linking and compiling happens here\r\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Cocoa app part (Objective C)\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# MLV and processing\r\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Type 'make clean' to remove mess\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Removes the program and object files \r\n",
        "Line" : 127,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 14
    },
    "platform/qt/MLVApp.pro" : {
      "ObjectId" : "e28842f3db30888f92286c2d135fb53d2314331b",
      "LastModified" : "2019-03-15T18:27:01Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2017-07-12T15:09:32\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The following define makes your compiler emit warnings if you use\n\n# any feature of Qt which as been marked as deprecated (the exact warnings\n\n# depend on your compiler). Please consult the documentation of the\n\n# deprecated API in order to know how to port your code away from it.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# You can also make your code fail to compile if you use deprecated APIs.\n\n# In order to do so, uncomment the following line.\n\n# You can also select to disable deprecated APIs only up to a certain version of Qt.\n\n#DEFINES += QT_DISABLE_DEPRECATED_BEFORE=0x060000    # disables all the APIs deprecated before Qt 6.0.0\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##############\n\n# Silent Mode, deactivate for more debug info\n\n##############\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##############\n\n# Compiler flags\n\n##############\n\n# OSX\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#OpenMP on macOS: first install llvm via brew, setup llvm kit & compiler in Qt settings!\n\n#macx{\n\n#    QMAKE_CC = /usr/local/opt/llvm/bin/clang\n\n#    QMAKE_CXX = /usr/local/opt/llvm/bin/clang++\n\n#    QMAKE_LINK = /usr/local/opt/llvm/bin/clang++\n\n#    QMAKE_CFLAGS += -fopenmp\n\n#    QMAKE_CXXFLAGS += -fopenmp\n\n#    INCLUDEPATH += -I/usr/local/opt/llvm/include\n\n#    LIBS += -L/usr/local/opt/llvm/lib -lgomp\n\n#    QMAKE_MACOSX_DEPLOYMENT_TARGET = 10.8\n\n#}\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Windows\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Linux\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#win32{\n\n#    RC_ICONS = MLVAPP.ico\n\n#    QMAKE_TARGET_COMPANY = magiclantern\n\n#    QMAKE_TARGET_DESCRIPTION = \"Processing and converting tool for MLV files\"\n\n#    QMAKE_TARGET_PRODUCT = MLVApp\n\n#    VERSION = 0.17.0\n\n#    RC_CODEPAGE = 1252\n\n#}\n",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#unpack & install ffmpeg on OSX\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#for using the compiled version\n",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#for using linuxdeployqt\n\n#->run \"make INSTALL_ROOT=. -j$(nproc) install\" (is possible via QtCreators Project tab, add build step (make))\n\n#->run via terminal \"linuxdeployqt-continuous-x86_64.AppImage path/to/appdir/usr/share/applications/mlvapp.desktop -appimage -qmake=pathToQmake/qmake\"\n\n#linux-g++ {\n\n#    DEFINES += APP_IMAGE\n",
        "Line" : 302,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#    QMAKE_POST_LINK += tar -C ../qt/FFmpeg/ -xvJf ../qt/FFmpeg/ffmpegLinux.tar.xz --strip=1 --wildcards */ffmpeg $$escape_expand(\\n\\t)\n\n#    QMAKE_POST_LINK += chmod a+x ../qt/FFmpeg/ffmpeg\n",
        "Line" : 308,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#    isEmpty(PREFIX) {\n\n#        PREFIX = /usr\n\n#    }\n\n#    target.path = $$PREFIX/bin\n\n#    ffmpegSt.path = $$PREFIX/bin\n\n#    ffmpegSt.files += FFmpeg/ffmpeg\n\n#    desktop.path = $$PREFIX/share/applications\n\n#    desktop.files += mlvapp.desktop\n\n#    icon512.path = $$PREFIX/share/icons/hicolor/512x512/apps\n\n#    icon512.files += RetinaIMG/MLVAPP.png\n\n#    INSTALLS += ffmpegSt\n\n#    INSTALLS += icon512\n\n#    INSTALLS += desktop\n\n#    INSTALLS += target\n\n#}\n",
        "Line" : 311,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    }
  },
  "FileTypes" : {
    "QMAKE" : 1,
    "MAKEFILE" : 2
  },
  "ElapsedTime" : 2479
}