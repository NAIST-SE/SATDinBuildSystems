{
  "Repository" : "44674778",
  "Revision" : "HEAD",
  "ObjectId" : "7316ab18f6f3deba34135180638409d24610c039",
  "CommitTime" : "2019-04-17T09:45:34Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "f5a26d500e43bb3b2faff37e3cc84090f690dd4d",
      "LastModified" : "2018-08-23T19:56:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Determine if we're built as a subproject (using add_subdirectory)\n\n# or if this is the master project.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Dynarmic project options\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Default to a Release build\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set hard requirements for C++\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Warn on CMake API deprecations\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Disable in-source builds\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add the module directory to the list of paths\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Compiler flags\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# CMAKE_CXX_STANDARD as no effect on MSVC until CMake 3.10.\n",
        "Line" : 46,
        "CharPositionInLine" : 23
      },
      "9" : {
        "Text" : "# Non-virtual member function hides base class virtual function\n\n# Class has virtual functions, but destructor is not virtual\n\n# Declaration of 'var' hides previous local declaration\n\n# Declaration of 'var' hides function parameter\n\n# Declaration of 'var' hides class member\n\n# Declaration of 'var' hides global definition\n\n# Reinterpret-cast between related types\n\n# Symbol will be dynamically initialized (implementation limitation)\n",
        "Line" : 48,
        "CharPositionInLine" : 16
      },
      "10" : {
        "Text" : "# Stricter C++ standards conformance\n",
        "Line" : 56,
        "CharPositionInLine" : 21
      },
      "11" : {
        "Text" : "# Assumes new never returns null\n",
        "Line" : 61,
        "CharPositionInLine" : 24
      },
      "12" : {
        "Text" : "# Omits inline functions from object-file output\n",
        "Line" : 62,
        "CharPositionInLine" : 19
      },
      "13" : {
        "Text" : "# Arch detection\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Include Boost\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Enable unit-testing.\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Include LLVM\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Pull in externals CMakeLists for libs where available\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Dynarmic project files\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "CMakeModules/CreateDirectoryGroups.cmake" : {
      "ObjectId" : "175899e7dd9205f81ddf2bfe85c36a65fd1624fc",
      "LastModified" : "2017-11-26T11:39:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This function should be passed a name of an existing target. It will automatically generate\n\n# file groups following the directory hierarchy, so that the layout of the files in IDEs matches the\n\n# one in the filesystem.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Place any files that aren't in the source list in a separate group so that they don't get in\n\n# the way.\n",
        "Line" : 5,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Group names use '\\' as a separator even though the entire rest of CMake uses '/'...\n",
        "Line" : 13,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 3
    },
    "CMakeModules/DetectArchitecture.cmake" : {
      "ObjectId" : "e984c6b8db69ff8ca12d5318e84a580b6dec594f",
      "LastModified" : "2016-08-22T14:55:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The output variable needs to be unique across invocations otherwise\n\n# CMake's crazy scope rules will keep it defined\n",
        "Line" : 8,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 1
    },
    "CMakeModules/FindUnicorn.cmake" : {
      "ObjectId" : "1383bacbf50e777419cacc29df9d8ae2de8457ad",
      "LastModified" : "2018-04-18T22:59:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Exports:\n\n#\n\n# Variables:\n\n#  LIBUNICORN_FOUND\n\n#  LIBUNICORN_INCLUDE_DIR\n\n#  LIBUNICORN_LIBRARY\n\n#\n\n# Target:\n\n#  Unicorn::Unicorn\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "externals/CMakeLists.txt" : {
      "ObjectId" : "db846225b18d1f7ae5f231b446b4deaae9e54f87",
      "LastModified" : "2018-04-18T22:59:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# For libraries that already come with a CMakeLists file,\n\n# simply add the directory to that file as a subdirectory\n\n# to have CMake automatically recognize them.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# fmtlib formatting library\n",
        "Line" : 6,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "externals/fmt/CMakeLists.txt" : {
      "ObjectId" : "ce9dbf95ecc07b57f22ed7357df2a28d8b950c64",
      "LastModified" : "2019-03-29T16:34:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use newer policies if available, up to most recent tested version of CMake.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Determine if fmt is built as a subproject (using add_subdirectory)\n\n# or if it is the master project.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Joins arguments and places the results in ${result_var}.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set the default CMAKE_BUILD_TYPE to Release.\n\n# This should be done before the project command since the latter can set\n\n# CMAKE_BUILD_TYPE itself (it does so for nmake).\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Options that control generation of various targets.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Get version from core.h\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Use math to skip leading zeros if any.\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# If Microsoft SDK is installed create script run-msbuild.bat that\n\n# calls SetEnv.cmd to set up build environment and runs msbuild.\n\n# It is useful when building Visual Studio projects with the SDK\n\n# toolchain rather than Visual Studio.\n",
        "Line" : 111,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Set FrameworkPathOverride to get rid of MSB3644 warnings.\n",
        "Line" : 119,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Define the fmt library, its includes and the needed defines.\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Fix rpmlint warning:\n\n# unused-direct-shlib-dependency /usr/lib/libformat.so.1.1.0 /lib/libm.so.6.\n",
        "Line" : 170,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Install targets.\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Generate the version, config and target files into the build directory.\n",
        "Line" : 211,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Use a namespace because CMake provides better diagnostics for namespaced\n\n# imported targets.\n",
        "Line" : 224,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Install version, config and target files.\n",
        "Line" : 229,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Install the library and headers.\n",
        "Line" : 236,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Get the list of ignored files from .gitignore.\n",
        "Line" : 256,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 17
    },
    "externals/fmt/doc/CMakeLists.txt" : {
      "ObjectId" : "c16427a9b1769093888374f0a89aa3defb5719b5",
      "LastModified" : "2018-10-02T20:24:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "externals/fmt/support/cmake/FindSetEnv.cmake" : {
      "ObjectId" : "4e2da5408ac3c54975ff9acc7091ffdbb6c83b0d",
      "LastModified" : "2017-11-26T11:39:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# A CMake script to find SetEnv.cmd.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "externals/fmt/support/cmake/cxx14.cmake" : {
      "ObjectId" : "1866cdcc5f2c5df23a7492c99a8c5a03e52c7c35",
      "LastModified" : "2018-10-02T20:24:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# C++14 feature support detection\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check if variadic templates are working and not affected by GCC bug 39653:\n\n# https://gcc.gnu.org/bugzilla/show_bug.cgi?id=39653\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check if initializer lists are supported.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Check if enum bases are available\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Check if type traits are available\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Check if user-defined literals are available\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "externals/fmt/support/fmt.pro" : {
      "ObjectId" : "c555d0b4aeb6916897ef2c936c57600ba48a9790",
      "LastModified" : "2018-10-02T20:24:56Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Staticlib configuration for qmake builds\n\n# For some reason qmake 3.1 fails to identify source dependencies and excludes format.cc and printf.cc\n\n# from compilation so it _MUST_ be called as qmake -nodepend\n\n# A workaround is implemented below: a custom compiler is defined which does not track dependencies\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# QMAKE_RUN_CXX will not be expanded\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "externals/fmt/test/CMakeLists.txt" : {
      "ObjectId" : "70e19db77aab4161584492590ec69cc4c82f4f02",
      "LastModified" : "2019-03-29T16:34:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Build the google test library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We compile Google Test ourselves instead of using pre-compiled libraries.\n\n# See the Google Test FAQ \"Why is it not recommended to install a\n\n# pre-compiled copy of Google Test (for example, into /usr/local)?\"\n\n# at http://code.google.com/p/googletest/wiki/FAQ for more details.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Workaround a bug in implementation of variadic templates in MSVC11.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# GTest doesn't detect <tuple> with clang.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Silence MSVC tr1 deprecation warning in gmock.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Build the actual library tests\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Workaround GTest bug https://github.com/google/googletest/issues/705.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Use less strict pedantic flags for the tests because GMock doesn't compile\n\n# cleanly with -pedantic and -std=c++98.\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#set(PEDANTIC_COMPILE_FLAGS -Wall -Wextra -Wno-long-long -Wno-variadic-macros)\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Adds a test.\n\n# Usage: add_fmt_test(name srcs...)\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Define if certain C++ features can be used.\n",
        "Line" : 76,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Test that the library can be compiled with exceptions disabled.\n\n# -fno-exception is broken in icc: https://github.com/fmtlib/fmt/issues/822.\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Test that the library compiles without windows.h.\n",
        "Line" : 148,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# These tests are disabled on Windows because they take too long.\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Test if the targets are found from the build directory.\n",
        "Line" : 176,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Test if the targets are found when add_subdirectory is used.\n",
        "Line" : 191,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 16
    },
    "externals/fmt/test/add-subdirectory-test/CMakeLists.txt" : {
      "ObjectId" : "db7054bd8f992b4b2449933598906ed4a5423b9d",
      "LastModified" : "2018-10-02T20:24:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "externals/fmt/test/compile-test/CMakeLists.txt" : {
      "ObjectId" : "75a0c5a5e5e477ce8d233a19a393da09b93a44ad",
      "LastModified" : "2018-10-02T20:24:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test if compile errors are produced where necessary.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Unset the CMake cache variable compiles. Otherwise the compile test will\n\n# just use cached information next time it runs.\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Unset the CMake cache variable compiles. Otherwise the compile test will\n\n# just use cached information next time it runs.\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# check if the source file skeleton compiles\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Formatting a wide character with a narrow format string is forbidden.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Formatting a wide string with a narrow format string is forbidden.\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Formatting a narrow string with a wide format string is forbidden because\n\n# mixing UTF-8 with UTF-16/32 can result in an invalid output.\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Formatting a wide string with a narrow format string is forbidden.\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Make sure that compiler features detected in the header\n\n# match the features detected in CMake.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "externals/fmt/test/find-package-test/CMakeLists.txt" : {
      "ObjectId" : "513575570bb72b9517977213133d99dae0ca79bb",
      "LastModified" : "2018-10-02T20:24:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "externals/xbyak/CMakeLists.txt" : {
      "ObjectId" : "be131b14418196b8d6cbc22683914a333f5202e2",
      "LastModified" : "2018-10-02T20:24:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "externals/xbyak/Makefile" : {
      "ObjectId" : "a7850a2273a9dfcc9fe7a855aa3dd230057fdf17",
      "LastModified" : "2018-10-02T20:24:56Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "externals/xbyak/gen/Makefile" : {
      "ObjectId" : "53d1a948c16d9ff9e6587ca64812f6f0fa7ac2a1",
      "LastModified" : "2018-10-02T20:24:56Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "externals/xbyak/sample/Makefile" : {
      "ObjectId" : "da21f204a0487b5f2c076cf89f3d4ef87996bf98",
      "LastModified" : "2018-10-02T20:24:56Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#calc2_64\n",
        "Line" : 32,
        "CharPositionInLine" : 17
      },
      "1" : {
        "Text" : "#calc2\n",
        "Line" : 37,
        "CharPositionInLine" : 15
      },
      "CommentCount" : 2
    },
    "externals/xbyak/test/Makefile" : {
      "ObjectId" : "37a678cbd732c5d8882d062583f201aced480eb9",
      "LastModified" : "2019-04-15T15:18:43Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#-std=c++0x\n",
        "Line" : 16,
        "CharPositionInLine" : 84
      },
      "CommentCount" : 1
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "f460f7422cac814445e73d9cce323a6abebaacce",
      "LastModified" : "2019-04-15T15:18:43Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "92d15ffdfb92818c03bac75805fa230093f15d81",
      "LastModified" : "2018-10-02T20:24:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 16,
    "QMAKE" : 1,
    "MAKEFILE" : 4
  },
  "ElapsedTime" : 1914
}