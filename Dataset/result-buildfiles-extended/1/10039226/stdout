{
  "Repository" : "10039226",
  "Revision" : "HEAD",
  "ObjectId" : "a8526b4c91a2eaad0f915a59f420c513d40aa1ac",
  "CommitTime" : "2019-04-15T20:54:53Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "ca33c36be292e6818f98bcb9bc17ccf340a8c4f1",
      "LastModified" : "2019-03-13T19:42:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Compiler configuration\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Required to avoid warnings when setting visibility\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# -Wno-error=unused-command-line-argument is required due to https://llvm.org/bugs/show_bug.cgi?id=7798\n",
        "Line" : 94,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# https://svn.boost.org/trac/boost/ticket/9240\n",
        "Line" : 114,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Technique from https://crascit.com/2016/04/09/using-ccache-with-cmake/\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set Xcode project attributes to route compilation and linking through our scripts\n\n# Xcode doesn't include the path to the compiler/linker by default, so we'll have to add it.\n",
        "Line" : 128,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Support Unix Makefiles and Ninja\n",
        "Line" : 138,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# ccache splits up the compile steps, so we end up with unused arguments in some steps.\n\n# Clang also thinks that ccache isn't interactive, so we explicitly need to enable color.\n",
        "Line" : 149,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# clcache doesn't work with external pdb files\n\n# https://github.com/frerich/clcache/issues/30\n",
        "Line" : 156,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 9
    },
    "Makefile" : {
      "ObjectId" : "df476fd677060402b994d5079cb272650fa7416c",
      "LastModified" : "2019-04-02T20:44:02Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#### macOS targets ##############################################################\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### iOS targets ##############################################################\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#### Linux targets #####################################################\n",
        "Line" : 306,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Ninja generator already outputs the file at the right location\n",
        "Line" : 383,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "#### Qt targets #####################################################\n",
        "Line" : 395,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#### Node targets ##############################################################\n",
        "Line" : 493,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#### Android targets ###########################################################\n",
        "Line" : 507,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Lists all devices, and extracts the identifiers, then obtains the ABI for every one.\n\n# Some devices return \\r\\n, so we'll have to remove the carriage return before concatenating.\n",
        "Line" : 524,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Generate code based on the style specification\n",
        "Line" : 528,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Configuration file for running CMake from Gradle within Android Studio.\n",
        "Line" : 534,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# $1 = arm-v7 (short arch)\n\n# $2 = armeabi-v7a (internal arch)\n",
        "Line" : 539,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Build SDK for for specified abi\n",
        "Line" : 550,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Build test app and SDK for for specified abi\n",
        "Line" : 555,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Build the core test for specified abi\n",
        "Line" : 560,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Compile main sources and extract the classes (using the test app to get all transitive dependencies in one place)\n",
        "Line" : 563,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "# Ensure clean state on the device\n",
        "Line" : 568,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "# Push all needed files to the device\n",
        "Line" : 571,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "# Create gtest filter for skipped tests.\n",
        "Line" : 578,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Kick off the tests\n",
        "Line" : 581,
        "CharPositionInLine" : 1
      },
      "19" : {
        "Text" : "# Gather the results and unpack them\n",
        "Line" : 584,
        "CharPositionInLine" : 1
      },
      "20" : {
        "Text" : "# Run the core test for specified abi\n",
        "Line" : 590,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Run benchmarks for specified abi\n",
        "Line" : 594,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Delete old test folder and create new one\n",
        "Line" : 602,
        "CharPositionInLine" : 1
      },
      "23" : {
        "Text" : "# Push compiled java sources, test data and executable to device\n",
        "Line" : 605,
        "CharPositionInLine" : 1
      },
      "24" : {
        "Text" : "# Run benchmark. Number of benchmark iterations can be set by run-android-benchmark-N parameter.\n",
        "Line" : 612,
        "CharPositionInLine" : 1
      },
      "25" : {
        "Text" : "# Pull results.json from the device\n",
        "Line" : 615,
        "CharPositionInLine" : 1
      },
      "26" : {
        "Text" : "# Run the test app on connected android device with specified abi\n",
        "Line" : 619,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Build test app instrumentation tests apk and test app apk for specified abi\n",
        "Line" : 625,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Run test app instrumentation tests on a connected android device or emulator with specified abi\n",
        "Line" : 630,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Run Java Instrumentation tests on a connected android device or emulator with specified abi and test filter\n",
        "Line" : 636,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Symbolicate native stack trace with the specified abi\n",
        "Line" : 641,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Run render tests with pixelmatch\n",
        "Line" : 646,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# delete old test results\n",
        "Line" : 650,
        "CharPositionInLine" : 1
      },
      "33" : {
        "Text" : "# copy test definitions & ignore file to test app assets folder, clear old ones first\n",
        "Line" : 652,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# run RenderTest.java to generate static map images\n",
        "Line" : 656,
        "CharPositionInLine" : 1
      },
      "35" : {
        "Text" : "# pull generated images from the device\n",
        "Line" : 658,
        "CharPositionInLine" : 1
      },
      "36" : {
        "Text" : "# copy expected result and run pixelmatch\n",
        "Line" : 660,
        "CharPositionInLine" : 1
      },
      "37" : {
        "Text" : "# remove test definitions from assets\n",
        "Line" : 662,
        "CharPositionInLine" : 1
      },
      "38" : {
        "Text" : "# Explodes the arguments into individual variables\n",
        "Line" : 667,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Build the Android SDK and test app with abi set to arm-v7\n",
        "Line" : 674,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Build the Android SDK with abi set to arm-v7\n",
        "Line" : 678,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Run the test app on connected android device with abi set to arm-v7\n",
        "Line" : 682,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Run Java Instrumentation tests on a connected android device or emulator with abi set to arm-v7\n",
        "Line" : 686,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Run Java Unit tests on the JVM of the development machine executing this\n",
        "Line" : 691,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Run unit test and build a coverage report from .exec file generated by unit tests and .ec file generated by instrumentation tests\n",
        "Line" : 698,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Parse merged jacoco report and send it to S3\n",
        "Line" : 703,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Builds a release package of the Android SDK\n",
        "Line" : 708,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Build test app instrumentation tests apk and test app apk for all abi's\n",
        "Line" : 714,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# Uploads the compiled Android SDK to Bintray\n",
        "Line" : 719,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Uploads the compiled Android SDK SNAPSHOT to oss.jfrog.org\n",
        "Line" : 724,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Dump system graphics information for the test app\n",
        "Line" : 729,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Generates Activity sanity tests\n",
        "Line" : 734,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# Runs checkstyle and lint on the Android code\n",
        "Line" : 739,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# Runs checkstyle on the Android code\n",
        "Line" : 743,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# Runs lint on the Android SDK code\n",
        "Line" : 748,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# Runs lint on the Android test app code\n",
        "Line" : 753,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# Generates javadoc from the Android SDK\n",
        "Line" : 758,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# Generates platform/android/LICENSE.md file based on all Android project dependencies\n",
        "Line" : 763,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# Symbolicate ndk stack traces for the arm-v7 abi\n",
        "Line" : 769,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# Open Android Studio if machine is macos\n",
        "Line" : 773,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# Creates the configuration needed to build with Android Studio\n",
        "Line" : 780,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# Updates Android's vendor submodules\n",
        "Line" : 785,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Run android nitpick script\n",
        "Line" : 790,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# Creates a dependency graph using Graphviz\n",
        "Line" : 795,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "#### Miscellaneous targets #####################################################\n",
        "Line" : 800,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 65
    },
    "cmake/benchmark.cmake" : {
      "ObjectId" : "a944c64d0554f4ae5e7f0d6b07f1333bcb81f42c",
      "LastModified" : "2019-01-09T09:26:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Run scripts/generate-file-lists.js to change the source files for this target.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/core.cmake" : {
      "ObjectId" : "1971352c3714a8439f831638af8a41de750aad78",
      "LastModified" : "2019-01-09T09:26:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# scripts/generate-file-lists.js to change the source files for this target.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FIXME: We should not leak these many\n\n# libraries in our public interface.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/doxygen.cmake" : {
      "ObjectId" : "b61e878f888dd82393d1d6565c80ec8423329997",
      "LastModified" : "2019-03-13T19:42:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/filesource.cmake" : {
      "ObjectId" : "ff9fa360f6d29b098e1c92c2d2329586b85d577a",
      "LastModified" : "2019-01-09T09:26:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Modify platform/default/filesource-files.json to change the source files for this target.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/glfw.cmake" : {
      "ObjectId" : "a4d9c30477cca8693fcf555c28799dfed127fe3d",
      "LastModified" : "2019-04-05T09:49:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/loop-darwin.cmake" : {
      "ObjectId" : "46d8f9edc0394bec2705dddfb27f7b981c67358f",
      "LastModified" : "2019-04-05T09:49:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Modify platform/darwin/loop-files.json to change the source files for this target.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/loop-uv.cmake" : {
      "ObjectId" : "320545b3c30cffad21cb579bf9eb1207f11bc857",
      "LastModified" : "2019-01-09T09:26:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/mason-dependencies.cmake" : {
      "ObjectId" : "a6ef7a3a534b68c3c52e113c099d6937471eadec",
      "LastModified" : "2019-04-05T09:49:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# All dependencies in a single separate file so its checksum can be used in a CI cache key name\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# noop\n",
        "Line" : 4,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# noop\n",
        "Line" : 6,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "cmake/mason.cmake" : {
      "ObjectId" : "c0795d962c09bbe71be1501b8400ad501a9cbb7f",
      "LastModified" : "2019-01-09T09:26:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Mason CMake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Determine platform\n",
        "Line" : 6,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# we call uname -s manually here since\n\n# CMAKE_HOST_SYSTEM_NAME will not be defined before the project() call\n",
        "Line" : 8,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Determine platform version string\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Android Studio only passes ANDROID_ABI, but we need to adjust that to the Mason\n",
        "Line" : 24,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Check that the previous invocation of mason_use didn't select another version of this package\n",
        "Line" : 65,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Download the package\n",
        "Line" : 83,
        "CharPositionInLine" : 16
      },
      "7" : {
        "Text" : "# We downloaded to a temporary file to prevent half-finished downloads\n",
        "Line" : 97,
        "CharPositionInLine" : 20
      },
      "8" : {
        "Text" : "# Unpack the package\n",
        "Line" : 102,
        "CharPositionInLine" : 12
      },
      "9" : {
        "Text" : "# Error out if there is no config file.\n",
        "Line" : 110,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# Load the configuration from the ini file\n",
        "Line" : 118,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# Trim trailing commas\n",
        "Line" : 125,
        "CharPositionInLine" : 67
      },
      "12" : {
        "Text" : "# Compare version in the package to catch errors early on\n",
        "Line" : 139,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# Concatenate the static libs and libraries\n",
        "Line" : 158,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# Store invocation ID to prevent different versions of the same package in one invocation\n",
        "Line" : 171,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# Setup\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Read environment variables if CMake is run in command mode\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Directory where Mason packages are located; typically ends with mason_packages\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# URL prefix of where packages are located.\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Execute commands if CMake is run in command mode\\\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Collect remaining arguments for passing to mason_use\n",
        "Line" : 213,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Install the package\n",
        "Line" : 219,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Optionally print variables\n",
        "Line" : 222,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# CMake can't write to stdout with message()\n",
        "Line" : 224,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 24
    },
    "cmake/mbgl.cmake" : {
      "ObjectId" : "ef948e6cafb42633e8dda4468ea4d853181b01f8",
      "LastModified" : "2019-04-05T09:49:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Run submodule update\n",
        "Line" : 67,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Symlink mapbox-gl-js/node_modules so that the modules that are\n\n# about to be installed get cached between CI runs.\n",
        "Line" : 82,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# Add target for running submodule update during builds\n",
        "Line" : 89,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Run npm install for both directories, and add custom commands, and a target that depends on them.\n",
        "Line" : 98,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Generate source groups so the files are properly sorted in IDEs like Xcode.\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Note: this isn't really parsing JSON, but it's good enough for our purposes.\n",
        "Line" : 128,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Creates a library target for a vendored dependency\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This little macro lets you set any XCode specific property\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Create a list of linked libraries for use in the xcconfig generation script.\n",
        "Line" : 173,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Remove target names from the list of linker flags, since Xcode can't deal with them.\n",
        "Line" : 176,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Set Xcode project build settings to be consistent with the CXX flags we're\n\n# using. (Otherwise, Xcode's defaults may override some of these.)\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# -Wall\n",
        "Line" : 191,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# -Wextra\n",
        "Line" : 200,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# -Wshadow\n",
        "Line" : 204,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# -Wnon-virtual-dtor\n",
        "Line" : 207,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# -Wnon-literal-conversion\n",
        "Line" : 210,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# -Wrange-loop-analysis\n",
        "Line" : 213,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# -flto\n",
        "Line" : 216,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Make all build configurations debuggable — except Release.\n",
        "Line" : 219,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# CMake 3.1 does not have this yet.\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "cmake/node.cmake" : {
      "ObjectId" : "f126b81637b4c39d5216846eb15e462806bfdeac",
      "LastModified" : "2019-01-09T09:26:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Load Node.js\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Don't build for Node 4.x, 5.x, 7.x, or 9.x\n\n# See https://nodejs.org/en/download/releases/ for mapping of Node version to ABI number.\n\n# Changes to this property should happen in tandem with updates to the version targets\n\n# in platform/node/scripts/publish.sh and the \"node\" engines property in package.json.\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "cmake/offline.cmake" : {
      "ObjectId" : "3fa075f07b545dfb92fa0de218b760e91c24d714",
      "LastModified" : "2019-04-05T09:49:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/render.cmake" : {
      "ObjectId" : "a625b3f21f7f6c9f0c98b83cacbe12c1e0cc4289",
      "LastModified" : "2019-04-05T09:49:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/sqlite.cmake" : {
      "ObjectId" : "fd2d98d3e2a06d79eda1df59b637523bcdd7474e",
      "LastModified" : "2019-01-09T09:26:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# These are disabled on purpose, since we're not using these features.\n\n# PRIVATE \"-DSQLITE_ENABLE_FTS5\"\n\n# PRIVATE \"-DSQLITE_ENABLE_JSON1\"\n\n# PRIVATE \"-DSQLITE_ENABLE_FTS3\"\n\n# PRIVATE \"-DSQLITE_ENABLE_RTREE\"\n",
        "Line" : 27,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "cmake/test.cmake" : {
      "ObjectId" : "061427008993dbff0de9529e8473229750a8be22",
      "LastModified" : "2019-01-09T09:26:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# scripts/generate-file-lists.js to change the source files for this target.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# GCC 8+ trips over GTest's way of defining Test functions\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/vendor.cmake" : {
      "ObjectId" : "7aac53e4cbb745a0ef3a3347d77861ad52c8d8b7",
      "LastModified" : "2019-04-05T09:49:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/xcode.cmake" : {
      "ObjectId" : "3537009330e8df0f617e025182539fb880e19a08",
      "LastModified" : "2019-01-09T09:26:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Prevent overwriting of the scheme file on every CMake rerun.\n",
        "Line" : 51,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "platform/android/MapboxGLAndroidSDK/proguard-rules.pro" : {
      "ObjectId" : "f592efa6b0b56e6287e5fa44ad070c5bbafecf1e",
      "LastModified" : "2019-01-09T09:26:53Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# By default, the flags in this file are appended to flags specified\n\n# in ../sdk/tools/proguard/proguard-android.txt,\n\n# contents of this file will be appended into proguard-android.txt\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Reflection on classes from native code\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# dontnote for keeps the entry point x but not the descriptor class y\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# config for okhttp 3.11.0, https://github.com/square/okhttp/pull/3354\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# config for mapbox-sdk-geojson:3.0.1\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# config for additional notes\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# config for mapbox-sdk-services\n\n# while we don't include this dependency directly\n\n# a large amount of users combine it with our SDK\n\n# we aren't able to provide a proguard config in that project (jar vs aar)\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "platform/android/MapboxGLAndroidSDKTestApp/proguard-rules.pro" : {
      "ObjectId" : "ed687ff76d168a72e19572cdbcd567c75cd0be4e",
      "LastModified" : "2019-01-09T09:26:53Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Mapbox ProGuard configuration is handled in the SDK,\n\n# This file contains test app specific configuration\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Kotlin\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# LeakCanary\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# GMS\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "platform/android/config.cmake" : {
      "ObjectId" : "dd75bb3b5b13a869cfde4da24b7f443266e593cd",
      "LastModified" : "2019-04-05T09:49:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build thin archives.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use Identical Code Folding on platforms that support the gold linker.\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Use LTO in Release builds. Due to a toolchain issue, -O2 is also required for the link step (https://github.com/android-ndk/ndk/issues/721)\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## mbgl core ##\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Modify platform/android/core-files.json to change the source files for this target.\n",
        "Line" : 37,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Modify platform/android/filesource-files.json to change the source files for this target.\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "## Shared library\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## Test executable ##\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Benchmark ##\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## Custom layer example ##\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "platform/ios/config.cmake" : {
      "ObjectId" : "e5386e4ae088667e1958709ead324416f4946f1b",
      "LastModified" : "2019-01-09T09:26:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Modify platform/darwin/filesource-files.json to change the source files for this target.\n",
        "Line" : 46,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "platform/ios/toolchain.cmake" : {
      "ObjectId" : "512b46b6d9d5d99166a9642a04a945ea077e61c3",
      "LastModified" : "2019-01-09T09:26:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# From https://github.com/OtherLevels/ios-cmake\n\n# This file is based off of the Platform/Darwin.cmake and Platform/UnixPaths.cmake\n\n# files which are included with CMake 2.8.4\n\n# It has been altered for iOS development\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Options:\n\n#\n\n# IOS_PLATFORM = OS (default) or SIMULATOR or SIMULATOR64\n\n#   This decides if SDKS will be selected from the iPhoneOS.platform or iPhoneSimulator.platform folders\n\n#   OS - the default, used to build for iPhone and iPad physical devices, which have an arm arch.\n\n#   SIMULATOR - used to build for the Simulator platforms, which have an x86 arch.\n\n#\n\n# CMAKE_IOS_DEVELOPER_ROOT = automatic(default) or /path/to/platform/Developer folder\n\n#   By default this location is automatcially chosen based on the IOS_PLATFORM value above.\n\n#   If set manually, it will override the default location and force the user of a particular Developer Platform\n\n#\n\n# CMAKE_IOS_SDK_ROOT = automatic(default) or /path/to/platform/Developer/SDKs/SDK folder\n\n#   By default this location is automatcially chosen based on the CMAKE_IOS_DEVELOPER_ROOT value.\n\n#   In this case it will always be the most up-to-date SDK found in the CMAKE_IOS_DEVELOPER_ROOT path.\n\n#   If set manually, this will force the use of a specific SDK version\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Macros:\n\n#\n\n# set_xcode_property (TARGET XCODE_PROPERTY XCODE_VALUE)\n\n#  A convenience macro for setting xcode specific properties on targets\n\n#  example: set_xcode_property (myioslib IPHONEOS_DEPLOYMENT_TARGET \"3.1\")\n\n#\n\n# find_host_package (PROGRAM ARGS)\n\n#  A macro used to find executable programs on the host system, not within the iOS environment.\n\n#  Thanks to the android-cmake project for providing the command\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Standard settings\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Required as of cmake 2.8.10\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Determine the cmake host system version so we know where to find the iOS SDKs\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Force the compilers to gcc for iOS\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Skip the platform compiler checks for cross compiling\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# All iOS/Darwin specific settings - some may be redundant\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# This was required for Other C++ Flags to be set for enabling bitcode in a static lib.\n\n# set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fembed-bitcode\")\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Point to the latest SDK.\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Set the find root to the iOS developer roots and to user defined paths\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# default to searching for frameworks first\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# set up the default search directories for frameworks\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# only search the iOS sdks, not the remainder of the host filesystem\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# This macro lets you find executable programs on the host system\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "platform/linux/config.cmake" : {
      "ObjectId" : "4405e0583fadb083c25fa8f8e9ff8a2e03230330",
      "LastModified" : "2019-04-05T09:49:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# GL\n",
        "Line" : 44,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "# Misc\n",
        "Line" : 47,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# Image handling\n",
        "Line" : 60,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Headless view\n",
        "Line" : 66,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Snapshotting\n",
        "Line" : 72,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Thread pool\n",
        "Line" : 76,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Statically link libstdc++ when we're using the new STL ABI\n",
        "Line" : 97,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Modify platform/linux/filesource-files.json to change the source files for this target.\n",
        "Line" : 107,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# We're not referencing any cURL symbols since we're dynamically loading it. However, we want to\n\n# link the library anyway since we're definitely going to load it on startup anyway.\n",
        "Line" : 110,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 9
    },
    "platform/macos/config.cmake" : {
      "ObjectId" : "0e1e6be412bcef394b4184f7af2654aba992f4dc",
      "LastModified" : "2019-04-05T09:49:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Modify platform/darwin/filesource-files.json to change the source files for this target.\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "platform/qt/config.cmake" : {
      "ObjectId" : "9249f846e8122dd12dcaab3b31e57ad2b206e66a",
      "LastModified" : "2019-04-05T09:49:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIXME: For now tests are disabled on Windows until we\n\n# get the node.js dependencies working.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "platform/qt/qnx.cmake" : {
      "ObjectId" : "7033f62362fea92558a73dab5d18d6d6042c1f94",
      "LastModified" : "2019-01-09T09:26:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake toolchain file for QNX Environment.\n\n#\n\n# Usage:\n\n#\n\n# To use this file, you need to set the 'CMAKE_TOOLCHAIN_FILE' to point to\n\n# 'qnx.cmake' on the command line:\n\n#\n\n#   cmake -DDCMAKE_TOOLCHAIN_FILE=platform/qt/qnx.cmake\n\n#\n\n# You will also need to provide the locations of the QNX HOST and TARGET locations.\n\n# This can be done by setting the environment variables(QNX_HOST and QNX_TARGET) from\n\n# the command line or running the environment setup script provided by the QNX Software\n\n# Development Platform:\n\n#\n\n#   source <SDP_DIRECTORY>/qnxsdp-env.sh\n\n#\n\n# Options:\n\n#\n\n# QCC_COMPILER_TARGET:\n\n#   The compiler name. Default: gcc_ntox86_64.\n\n# QCC_NTOARCH:\n\n#   The architecture to compile for. Default: x86_64.\n\n# QNX_HOST:\n\n#   Environment variable to QNX host build tools location.\n\n# QNX_TARGET:\n\n#   Environment variable to QNX target location.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Check environment variables\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use 'qcc' instead of nto${QCC_NTOARCH}-gcc and nto${QCC_NTOARCH}-gcc++ once\n\n# the issue https://gitlab.kitware.com/cmake/cmake/issues/17126 is resolved.\n\n#set(CMAKE_C_COMPILER qcc)\n\n#set(CMAKE_C_COMPILER_TARGET ${QCC_COMPILER_TARGET})\n\n#set(CMAKE_CXX_COMPILER QCC)\n\n#set(CMAKE_CXX_COMPILER_TARGET ${QCC_COMPILER_TARGET})\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "platform/qt/qt.cmake" : {
      "ObjectId" : "911af25bc4be622084831dfd7e634fcda7db276e",
      "LastModified" : "2019-04-05T09:49:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is to be reused by target platforms that don't\n\n# support `mason` (i.e. Yocto). Do not add any `mason` macro.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Headless view\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Thread pool\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Thread\n",
        "Line" : 26,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Platform integration\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#Layer manager\n",
        "Line" : 47,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# File source\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Database\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Shared library\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# C++ app\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Qt5 always build OpenGL ES2 which is the compatibility\n\n# mode. Qt5 will take care of translating the desktop\n\n# version of OpenGL to ES2.\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# OS specific configurations\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "scripts/standalone.cmake" : {
      "ObjectId" : "b8bcbfa03f348cdbb5faf3ce4049cb70775fd8e5",
      "LastModified" : "2019-01-09T09:26:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# include once for every platform to get all dependency defines\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "vendor/args.cmake" : {
      "ObjectId" : "b5839943c208ca552f904ffb3f292b28f29fae30",
      "LastModified" : "2019-04-05T09:49:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/benchmark.cmake" : {
      "ObjectId" : "516e3cd33389dd5f18fe884a36f2a6c7f20438d8",
      "LastModified" : "2019-04-05T09:49:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/boost.cmake" : {
      "ObjectId" : "7c30a8d90e2951ace0ef76ab5e12d543ac3236e9",
      "LastModified" : "2019-04-05T09:49:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/cheap-ruler-cpp.cmake" : {
      "ObjectId" : "8d98cde63ca490026b5bd6c7826048da076ac34e",
      "LastModified" : "2019-04-05T09:49:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/earcut.hpp.cmake" : {
      "ObjectId" : "d7992cda50f4e5ac61591acc7cf807863a04be87",
      "LastModified" : "2019-04-05T09:49:17Z",
      "FileType" : "CMAKESOURCE",
      "CommentCount" : 0
    },
    "vendor/eternal.cmake" : {
      "ObjectId" : "1239a8a43d91af39a4f1cd8b717624e484283673",
      "LastModified" : "2019-04-05T09:49:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/expected.cmake" : {
      "ObjectId" : "ebe63e1a10c7b7a5494775efc3c6a0f51ccc6744",
      "LastModified" : "2019-04-05T09:49:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/geojson-vt-cpp.cmake" : {
      "ObjectId" : "c8d955f64b17e43295a57bdee2b4512f8df2124d",
      "LastModified" : "2019-04-05T09:49:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/geojson.hpp.cmake" : {
      "ObjectId" : "261650388f3d8f7188ce4179d431e6386fd76aa0",
      "LastModified" : "2019-04-05T09:49:17Z",
      "FileType" : "CMAKESOURCE",
      "CommentCount" : 0
    },
    "vendor/geometry.hpp.cmake" : {
      "ObjectId" : "d97c2a9f6c5caedbebc2f8062ba114121cd6cfea",
      "LastModified" : "2019-04-05T09:49:17Z",
      "FileType" : "CMAKESOURCE",
      "CommentCount" : 0
    },
    "vendor/glfw.cmake" : {
      "ObjectId" : "e99ecc86b142d1186b148f9d2048315480a48699",
      "LastModified" : "2019-04-05T09:49:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Don't show OpenGL deprecation warnings.\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# get_target_property(DEPLOYMENT_TARGET_VERSION glfw MACOSX_DEPLOYMENT_TARGET)\n\n# message(STATUS \"target: ${DEPLOYMENT_TARGET_VERSION}\")\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# The Xcode generator always tries to link from this directory instead of the actual output dir.\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "vendor/icu.cmake" : {
      "ObjectId" : "419b78333a413f48347f5fda91521a885251e60a",
      "LastModified" : "2019-04-05T09:49:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/jni.hpp.cmake" : {
      "ObjectId" : "bf3c129858ae4c27fbf29defe1d59fa5c3bc94d5",
      "LastModified" : "2019-04-05T09:49:17Z",
      "FileType" : "CMAKESOURCE",
      "CommentCount" : 0
    },
    "vendor/kdbush.hpp.cmake" : {
      "ObjectId" : "450530b7c64373fae8397e50d3ea60f3080ed23f",
      "LastModified" : "2019-04-05T09:49:17Z",
      "FileType" : "CMAKESOURCE",
      "CommentCount" : 0
    },
    "vendor/nunicode.cmake" : {
      "ObjectId" : "d318b8a2656d38c8078cf8665a1a565870e24e71",
      "LastModified" : "2019-04-05T09:49:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/optional.cmake" : {
      "ObjectId" : "ed7bfe8a38f55340bdc7a822e93a45c6aa59beef",
      "LastModified" : "2019-04-05T09:49:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/pixelmatch-cpp.cmake" : {
      "ObjectId" : "8efa527133f882da2e5f0ae54c653ca189329ebe",
      "LastModified" : "2019-04-05T09:49:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/polylabel.cmake" : {
      "ObjectId" : "d732723a899ae1e2701f1589ed36d7c1bf0d01d4",
      "LastModified" : "2019-04-05T09:49:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/protozero.cmake" : {
      "ObjectId" : "e4f32f1aced5c48d001849e25d327b8b6200d92d",
      "LastModified" : "2019-04-05T09:49:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/rapidjson.cmake" : {
      "ObjectId" : "40b5c3189520670040aef7574240228a23f3e419",
      "LastModified" : "2019-04-05T09:49:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/shelf-pack-cpp.cmake" : {
      "ObjectId" : "0d8e850723886ca895bb48985be91116b6bf813f",
      "LastModified" : "2019-04-05T09:49:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/supercluster.hpp.cmake" : {
      "ObjectId" : "90d0becadeb4e056cf127089274920c553a8bcba",
      "LastModified" : "2019-04-05T09:49:17Z",
      "FileType" : "CMAKESOURCE",
      "CommentCount" : 0
    },
    "vendor/unique_resource.cmake" : {
      "ObjectId" : "ad450066ebcdc46d0393ebae31d86d9fffd8df77",
      "LastModified" : "2019-04-05T09:49:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/variant.cmake" : {
      "ObjectId" : "f4827f41c63e8e4f30036a3684555db5487a253a",
      "LastModified" : "2019-04-05T09:49:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/vector-tile.cmake" : {
      "ObjectId" : "ec4552afccf95d64fcd8bfc02cce3f5554989769",
      "LastModified" : "2019-04-05T09:49:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/wagyu.cmake" : {
      "ObjectId" : "7cf3397b894b8b0de2c0eb78f78c27bb51c1ea53",
      "LastModified" : "2019-04-05T09:49:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 47,
    "CMAKESOURCE" : 6,
    "QMAKE" : 2,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 17499
}