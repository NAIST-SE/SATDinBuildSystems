{
  "Repository" : "2956448",
  "Revision" : "HEAD",
  "ObjectId" : "f55630c5e9397c94d3f0e683c6eeb2c89fd6d490",
  "CommitTime" : "2019-03-26T14:55:17Z",
  "Files" : {
    "Makefile" : {
      "ObjectId" : "a21c0d63eb1f0dba2af09b9e61c59f8f0abbed83",
      "LastModified" : "2018-12-01T09:57:07Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#!/usr/bin/make -f\n\n# -*- makefile -*-\n\n#\n\n# This makefile contains simple rules to prepare, compile, test, and install\n\n# aubio. Try one of the following rules:\n\n#\n\n# $ make configure\n\n# $ make build\n\n# $ make install\n\n# $ make test_python\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#WAFOPTS:=\n\n# turn on verbose mode\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# build wafopts\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# multiple jobs\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# if HAVE_AUBIO_DOUBLE is defined, pass --enable-double to waf\n\n# python/lib/moresetuptools.py also checks for HAVE_AUBIO_DOUBLE\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# default install locations\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# default python test command\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# install\n",
        "Line" : 72,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# uninstall\n",
        "Line" : 84,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# build python-aubio, using locally built libaubio if found\n",
        "Line" : 91,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# build python-aubio using (locally) installed libaubio\n",
        "Line" : 95,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# install or upgrade python requirements\n",
        "Line" : 105,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# use pip or distutils?\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#install_python: install_python_with_distutils\n\n#uninstall_python: uninstall_python_with_distutils\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# install package\n",
        "Line" : 115,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "# uninstall package\n",
        "Line" : 119,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "#./setup.py uninstall\n",
        "Line" : 127,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "# ignore failure if not installed\n",
        "Line" : 131,
        "CharPositionInLine" : 1
      },
      "18" : {
        "Text" : "# DYLD_LIBRARY_PATH is no more on mac os\n\n# create links from ~/lib/lib* to build/src/lib*\n",
        "Line" : 135,
        "CharPositionInLine" : 1
      },
      "19" : {
        "Text" : "# run test with installed package\n",
        "Line" : 142,
        "CharPositionInLine" : 1
      },
      "20" : {
        "Text" : "# check cleaning a second time works\n",
        "Line" : 149,
        "CharPositionInLine" : 1
      },
      "21" : {
        "Text" : "# optionnaly clean before build\n",
        "Line" : 154,
        "CharPositionInLine" : 1
      },
      "22" : {
        "Text" : "# remove possible left overs\n",
        "Line" : 156,
        "CharPositionInLine" : 1
      },
      "23" : {
        "Text" : "# check cleaning after build works\n",
        "Line" : 160,
        "CharPositionInLine" : 1
      },
      "24" : {
        "Text" : "# check cleaning a second time works\n",
        "Line" : 162,
        "CharPositionInLine" : 1
      },
      "25" : {
        "Text" : "# build only libaubio, no python-aubio\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# additionally, clean after a fresh build\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# build libaubio, build and test python-aubio against it\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# build libaubio, install it, build python-aubio against it\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# build a python-aubio that includes libaubio\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# capture coverage after running c tests\n",
        "Line" : 248,
        "CharPositionInLine" : 1
      },
      "31" : {
        "Text" : "# build and test python\n",
        "Line" : 251,
        "CharPositionInLine" : 1
      },
      "32" : {
        "Text" : "# run tests, with python coverage\n",
        "Line" : 253,
        "CharPositionInLine" : 1
      },
      "33" : {
        "Text" : "# capture coverage again\n",
        "Line" : 255,
        "CharPositionInLine" : 1
      },
      "34" : {
        "Text" : "# merge both coverage info files\n",
        "Line" : 258,
        "CharPositionInLine" : 1
      },
      "35" : {
        "Text" : "# remove tests\n",
        "Line" : 261,
        "CharPositionInLine" : 1
      },
      "36" : {
        "Text" : "# make sure we don't build the doc, which builds a temporary python module\n",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# generate report with lcov's genhtml\n",
        "Line" : 268,
        "CharPositionInLine" : 1
      },
      "38" : {
        "Text" : "# generate python report with coverage python package\n",
        "Line" : 271,
        "CharPositionInLine" : 1
      },
      "39" : {
        "Text" : "# show links to generated reports\n",
        "Line" : 274,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 40
    },
    "doc/Makefile" : {
      "ObjectId" : "b93571d07342ea9881edb3e37d92d5dee6744e4c",
      "LastModified" : "2016-11-28T16:30:27Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Internal variables.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 2
  },
  "ElapsedTime" : 1967
}