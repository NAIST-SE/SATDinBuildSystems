{
  "Repository" : "14534",
  "Revision" : "HEAD",
  "ObjectId" : "cf1e588944cedf54b1ec129e4b6776509a584d00",
  "CommitTime" : "2015-10-27T17:36:14Z",
  "Files" : {
    "contrib/libzfswrap/Makefile.am" : {
      "ObjectId" : "fb0e7f93913437499dd0d3abfe9bb00a44b42e22",
      "LastModified" : "2010-10-19T14:14:24Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "contrib/libzfswrap/cmd/Makefile.am" : {
      "ObjectId" : "7dda36952a69d4dccd7e14e9bafba83c8c97c3e2",
      "LastModified" : "2010-10-12T15:33:39Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "contrib/libzfswrap/lib/Makefile.am" : {
      "ObjectId" : "0613973f611baf6154adbb2f014fe157cf34ee64",
      "LastModified" : "2010-10-12T15:33:39Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "contrib/libzfswrap/lib/libatomic/Makefile.am" : {
      "ObjectId" : "434d1c3b0d7142fc65391a9bd8669adf2fd5c40e",
      "LastModified" : "2010-10-12T15:33:39Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "contrib/libzfswrap/lib/libavl/Makefile.am" : {
      "ObjectId" : "bf80e5e3f12c0c38cab823faf8926bc4b308cafc",
      "LastModified" : "2010-10-12T15:33:39Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "contrib/libzfswrap/lib/libnvpair/Makefile.am" : {
      "ObjectId" : "96b94d2358071aee6206cfdf8e25e5b03f0ebf0f",
      "LastModified" : "2010-10-12T15:33:39Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "contrib/libzfswrap/lib/libsolcompat/Makefile.am" : {
      "ObjectId" : "414ac4aea8fc38e9e85c7a406964d83fdeb1164f",
      "LastModified" : "2010-10-12T15:33:39Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "contrib/libzfswrap/lib/libsolkerncompat/Makefile.am" : {
      "ObjectId" : "d91e6bf03f1eef524336fd32f8f10c1f6e4db13d",
      "LastModified" : "2010-10-12T15:33:39Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "contrib/libzfswrap/lib/libumem/Makefile.am" : {
      "ObjectId" : "acf70f49a5399f970006d9384cfc5efc34316769",
      "LastModified" : "2010-10-12T15:33:39Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "contrib/libzfswrap/lib/libuutil/Makefile.am" : {
      "ObjectId" : "0602de994394ac5b6dda58f83ea7f2b283b91de2",
      "LastModified" : "2010-10-12T15:33:39Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "contrib/libzfswrap/lib/libzfs/Makefile.am" : {
      "ObjectId" : "5d6d52228dce1e743dcb9e6e186625c72d388020",
      "LastModified" : "2010-10-12T15:33:39Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "contrib/libzfswrap/lib/libzfscommon/Makefile.am" : {
      "ObjectId" : "29fe61a377bb50617c534b2597a25f63beb7b821",
      "LastModified" : "2010-10-12T15:33:39Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "contrib/libzfswrap/lib/libzpool/Makefile.am" : {
      "ObjectId" : "ba1ae15fb10b96c5fb21902a0171724c3346252c",
      "LastModified" : "2010-10-12T15:33:39Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "contrib/libzfswrap/zfswrap/Makefile.am" : {
      "ObjectId" : "855b1da229cf6239509725c57ac39db0cbcad241",
      "LastModified" : "2010-10-12T15:33:39Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "2bf8e70cc652a8b9218baecff58ce656ad13b4d3",
      "LastModified" : "2015-10-27T17:36:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# NFS Ganesha  Cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Current version as of Fedora 16.  Not tested with earlier.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Project versioning\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# needs to come after project()\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Patch level is always \".0\" for mainline (master).  It is blank for development.\n\n# When starting a stable maintenance branch, this becomes \".N\"\n\n# where N is monotonically increasing starting at 1. Remember to include the \".\" !!\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Extra version is for naming development/RC.  It is blank in master/stable branches\n\n# so it can be available to end-users to name local variants/versions\n\n# If used, it is always of the form \"-whateveryouwant\"\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# find out which platform we are building on\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Now detects the Linux's distro\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# On FreeBSD libc doesn't directly provide libexecinfo, so we have to find it\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Identify the host we are building on\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Add maintainer mode for (mainly) strict builds\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# For libraries that provide pkg-config files\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# If we are in a git tree, then this CMakeLists.txt is in \"src/\" and go .git is in \"src/..\"\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Using git related information, build PACKNAME\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Define CPACK component (to deal with sub packages)\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Include custom config and cpack module\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#default gcc doesn't like using -Wuninitialized without -O on FreeBSD\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# libc suffices on freebsd\n",
        "Line" : 143,
        "CharPositionInLine" : 27
      },
      "18" : {
        "Text" : "# module loader\n",
        "Line" : 150,
        "CharPositionInLine" : 28
      },
      "19" : {
        "Text" : "# Library path name\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# FSAL selection\n\n# FSALs which are enabled by default but could be disabled\n\n# during the build\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# FSALs which are disabled by default\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# SHOOK is a variant of Lustre FSAL\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Activate FSAL Upcalls for FSAL_LUSTRE\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# nTIRPC\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Build configure options\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Various DBUS enabled features\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Electric Fence (-lefence) link flag\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# These are -D_FOO options, why ???  should be flags??\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Debug symbols (-g) build flag\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Add coverage information to build tree\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Add coverage information to build tree\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# enable code profiling [-g -pg]\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# MSPAC support -lwbclient link flag\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# CUnit\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Blkin (Zipkin) Tracing\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# build flags\n",
        "Line" : 264,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# NFS RDMA\n",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Enable 9P Support\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# This option will stop cmake compilation if a requested FSAL could not be built\n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# This option will trigger \"long distro name\" aka name that contains git information\n",
        "Line" : 280,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Build and package Python admin scripts for managing via DBus\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Build and package Python gui admin scripts for managing via DBus\n",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Enable GCC Thread-sanitizer\n",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Enable LTTng tracing\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#\n\n# End build options\n\n#\n",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Choose a shortcut build config\n",
        "Line" : 299,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Set what's needed is GCC is enforced\n",
        "Line" : 314,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# Build source locations and parameters\n",
        "Line" : 320,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# If you are not using hpss with krb5, remove the hpsskrb5auth here.\n\n# It shouldn't be needed, but dlopen() of a dlopen() seems not to work as well as one properly linked...\n",
        "Line" : 367,
        "CharPositionInLine" : 2
      },
      "50" : {
        "Text" : "# Find packages and libs we need for building\n",
        "Line" : 438,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# we have all the libraries and include files to use string.h\n",
        "Line" : 449,
        "CharPositionInLine" : 2
      },
      "52" : {
        "Text" : "# PROXY handle mapping needs sqlite3\n",
        "Line" : 453,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# X_ATTRD requires the kernel to have xattrs...DBUS_STATS\n",
        "Line" : 475,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# hand code until we do krb5-config --version magic\n",
        "Line" : 500,
        "CharPositionInLine" : 25
      },
      "55" : {
        "Text" : "# Validate fsal dependencies\n",
        "Line" : 520,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# missing directory not provided by current version of GlusterFS\n",
        "Line" : 539,
        "CharPositionInLine" : 4
      },
      "57" : {
        "Text" : "# shook uses a different define than us for this flag\n",
        "Line" : 645,
        "CharPositionInLine" : 4
      },
      "58" : {
        "Text" : "# sort out which allocator to use\n",
        "Line" : 698,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# Find optional libraries/packages\n",
        "Line" : 721,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# Set LTTNG_PATH_HINT on the command line\n\n# if your LTTng is not in a standard place\n",
        "Line" : 766,
        "CharPositionInLine" : 2
      },
      "61" : {
        "Text" : "# Cmake 2.6 has issue in managing BISON and FLEX\n",
        "Line" : 777,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Fixup loose bits of autotools legacy\n",
        "Line" : 791,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# Find misc system libs\n",
        "Line" : 800,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# extended Pthreads functions\n",
        "Line" : 801,
        "CharPositionInLine" : 24
      },
      "65" : {
        "Text" : "# We need to have libcap installed\n",
        "Line" : 803,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# Management of Capablilities\n",
        "Line" : 804,
        "CharPositionInLine" : 26
      },
      "67" : {
        "Text" : "# Check if we have libblkid and libuuid, will just be reported under one\n\n# flag USE_BLKID\n",
        "Line" : 820,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# Management of Capablilities\n",
        "Line" : 824,
        "CharPositionInLine" : 30
      },
      "69" : {
        "Text" : "# Management of Capablilities\n",
        "Line" : 833,
        "CharPositionInLine" : 28
      },
      "70" : {
        "Text" : "# we have all the libraries and include files to use libblkid and libuuid\n",
        "Line" : 842,
        "CharPositionInLine" : 2
      },
      "71" : {
        "Text" : "# we are missing something and can't use libblkid and libuuid\n",
        "Line" : 846,
        "CharPositionInLine" : 2
      },
      "72" : {
        "Text" : "# check is daemon exists\n\n# I use check_library_exists there to be portab;e\n",
        "Line" : 859,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# Roll up required libraries\n",
        "Line" : 868,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "#Protocols we support\n",
        "Line" : 870,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# Core subsystems\n",
        "Line" : 886,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# Remove rdma and ibverbs libraries that have already been found by FindRDMA\n\n#\n\n# TODO: this temporary workaround will no longer be required\n\n# with future mooshika versions (>1.0)\n\n# Original code is: set(GANESHA_CORE ${GANESHA_CORE} ${MOOSHIKA_LIBRARIES})\n\n#\n",
        "Line" : 916,
        "CharPositionInLine" : 2
      },
      "77" : {
        "Text" : "# Set options for submodule\n",
        "Line" : 934,
        "CharPositionInLine" : 2
      },
      "78" : {
        "Text" : "# All the plumbing in the basement\n",
        "Line" : 945,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# Config file; make sure it doesn't clobber an existing one\n",
        "Line" : 956,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "# Sample config files\n",
        "Line" : 959,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# pre-create PREFIX/var/run/ganesha\n",
        "Line" : 961,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "# display configuration vars\n",
        "Line" : 994,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "#force command line options to be stored in cache\n",
        "Line" : 1066,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# Now create a useable config.h\n",
        "Line" : 1237,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "########### add a \"make dist\" and a \"make rpm\"  ###############\n",
        "Line" : 1244,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# Tweak the \"%bcond_<with|without> in the specfile for every\n\n# optional feature. Take care on the logic of this syntax\n\n# %bcond_with means you add a \"--with\" option, default is \"without this feature\"\n\n# %bcond_without adds a\"--without\" so the feature is enabled by default\n\n# This has to be coherent with chosen FSALs\n",
        "Line" : 1249,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "# Now create a useable specfile\n",
        "Line" : 1362,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "########### add a \"make doc\" target to call Doxygen\n",
        "Line" : 1397,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# Include thread-sanitizer module\n",
        "Line" : 1409,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 90
    },
    "src/FSAL/CMakeLists.txt" : {
      "ObjectId" : "6f770d54df3f081a99c0a0f593a6076cbc6a621a",
      "LastModified" : "2015-10-02T21:21:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the directory for stackable FSALs\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add the directory for Pseudo FSAL\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# All we need to do here is control the\n\n# build of chosen fsals\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/FSAL/FSAL_CEPH/CMakeLists.txt" : {
      "ObjectId" : "f73366520e4137777396b0d3aa94bdee7708269b",
      "LastModified" : "2015-10-08T22:38:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/FSAL/FSAL_GLUSTER/CMakeLists.txt" : {
      "ObjectId" : "d7aab4384ed89b91e1930a71afcd07b4100889bf",
      "LastModified" : "2015-10-02T21:21:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_subdirectory(pnfs_panfs)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#if(USE_FSAL_XFS)\n\n#    add_subdirectory(xfs)\n\n#endif(USE_FSAL_XFS)\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "########### next target ###############\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "########### install files ###############\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/FSAL/FSAL_GPFS/CMakeLists.txt" : {
      "ObjectId" : "6478e0b3deec1771808248bea74be3a512210d51",
      "LastModified" : "2013-11-15T01:35:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### next target ###############\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### install files ###############\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/FSAL/FSAL_HPSS/CMakeLists.txt" : {
      "ObjectId" : "b9e33c3a74e7de7a0e60443f6fb173bf534daf36",
      "LastModified" : "2015-10-02T21:21:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### next target ###############\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already set the rpath after build, don't wait for make install\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "########### install files ###############\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/FSAL/FSAL_LUSTRE/CMakeLists.txt" : {
      "ObjectId" : "4a5f1749f6793474ed1fc76cebbc51268ea00c67",
      "LastModified" : "2015-10-02T21:21:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### next target ###############\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### next target ###############\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "########### install files ###############\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/FSAL/FSAL_PROXY/CMakeLists.txt" : {
      "ObjectId" : "7e04958c788ae48225b91462178d7ef6cf0464ad",
      "LastModified" : "2015-10-02T21:21:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### next target ###############\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### install files ###############\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/FSAL/FSAL_PROXY/handle_mapping/CMakeLists.txt" : {
      "ObjectId" : "c716686ce152d3f971c8fb3ffb02ca9844280b7c",
      "LastModified" : "2013-11-15T01:35:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### next target ###############\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### next target ###############\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "########### next target ###############\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "########### install files ###############\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#original Makefile.am contents follow:\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#AM_CFLAGS = $(SQLITE_CFLAGS)\n\n#\n\n#noinst_LTLIBRARIES          = libhandlemapping.la\n\n#\n\n#libhandlemapping_la_SOURCES = handle_mapping.c  handle_mapping.h  handle_mapping_db.c  handle_mapping_db.h handle_mapping_internal.h\n\n#\n\n#\n\n#check_PROGRAMS              = test_handle_mapping_db test_handle_mapping\n\n#test_handle_mapping_db_SOURCES      = test_handle_mapping_db.c\n\n#test_handle_mapping_db_LDADD        = libhandlemapping.la $(top_srcdir)/HashTable/libhashtable.la  $(top_srcdir)/Log/liblog.la \\\n\n#\t\t\t\t\t$(top_srcdir)/Common/libcommon_utils.la -lsqlite3 \n\n#\n\n#\n\n#test_handle_mapping_SOURCES      = test_handle_mapping.c\n\n#test_handle_mapping_LDADD        = libhandlemapping.la $(top_srcdir)/HashTable/libhashtable.la $(top_srcdir)/Log/liblog.la \\\n\n#\t\t\t\t\t$(top_srcdir)/Common/libcommon_utils.la -lsqlite3 \n\n#\n\n#new: clean all\n\n#\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/FSAL/FSAL_PSEUDO/CMakeLists.txt" : {
      "ObjectId" : "9cb777f167193063d4dffd29148ff0ba9d068fd8",
      "LastModified" : "2015-10-02T21:21:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### next target ###############\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### install files ###############\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/FSAL/FSAL_PT/CMakeLists.txt" : {
      "ObjectId" : "1a4b531ba79f807cf7b4e5ca253e079534157e40",
      "LastModified" : "2015-10-02T21:21:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### next target ###############\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### install files ###############\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/FSAL/FSAL_VFS/CMakeLists.txt" : {
      "ObjectId" : "cb8f21b6c90d2ab0e49eabc3405cf42c5b297df5",
      "LastModified" : "2015-10-02T21:21:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### next target ###############\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### install files ###############\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/FSAL/FSAL_VFS/os/CMakeLists.txt" : {
      "ObjectId" : "a66d7ae23c477c280d85b7f2fd0589494fa7e16c",
      "LastModified" : "2015-10-02T21:21:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# All we need to do here is control the\n\n# build of chosen platform\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### install files ###############\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This is GCC specific to force PIC compiles.\n\n# cmake 2.8.9 has a portable POSITION_INDEPENDENT_CODE property that can be\n\n# used when it is available\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/FSAL/FSAL_VFS/panfs/CMakeLists.txt" : {
      "ObjectId" : "9d13275135bc8e076e5a57f25a09ccae8dc0a885",
      "LastModified" : "2015-10-02T21:21:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is GCC specific to force PIC compiles.\n\n# cmake 2.8.9 has a portable POSITION_INDEPENDENT_CODE property that can be\n\n# used when it is available\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/FSAL/FSAL_VFS/vfs/CMakeLists.txt" : {
      "ObjectId" : "070a9cdd86f8cf7516cacdab66497d3c36c59a4b",
      "LastModified" : "2015-10-02T21:21:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/FSAL/FSAL_VFS/xfs/CMakeLists.txt" : {
      "ObjectId" : "01b0d0291479e9c57a9d9bc3a03ff613f32682a2",
      "LastModified" : "2015-10-02T21:21:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/FSAL/FSAL_ZFS/CMakeLists.txt" : {
      "ObjectId" : "8b62069b2240d755e59500e01950485fdc5d452b",
      "LastModified" : "2015-10-02T21:21:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### next target ###############\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### install files ###############\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/FSAL/Stackable_FSALs/CMakeLists.txt" : {
      "ObjectId" : "1408423069747274a9dcd86000c2f4eb128d8eb9",
      "LastModified" : "2015-10-02T21:21:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/FSAL/Stackable_FSALs/FSAL_NULL/CMakeLists.txt" : {
      "ObjectId" : "3dc299e82480e055f597ac1bf4bd0d8a6941b73f",
      "LastModified" : "2015-10-02T21:21:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### next target ###############\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### install files ###############\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/MainNFSD/CMakeLists.txt" : {
      "ObjectId" : "9d39034f671695441ae661bb7ac5a00349c7f797",
      "LastModified" : "2015-10-08T22:38:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### next target ###############\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FSAL core sources\n\n# fsal_manager and fsal_destroyer are the only objects referenced by the\n\n# core server all the rest are for the common support of fsal plugins.\n\n# we put them here in the core rather than in a lib so that they are always\n\n# present and available for runtime linkage.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "########### next target ###############\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "########### install files ###############\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# We are still missing the install of docs and stuff\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/NodeList/CMakeLists.txt" : {
      "ObjectId" : "fbc784f13ff7e096f2ceae960cb474af293b65dc",
      "LastModified" : "2015-10-02T21:21:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### next target ###############\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### install files ###############\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/Protocols/9P/CMakeLists.txt" : {
      "ObjectId" : "ae9e3a6f19650194a8aa8abd0d2d9f37ef0e3d3d",
      "LastModified" : "2015-10-02T21:21:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### next target ###############\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### install files ###############\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/Protocols/CMakeLists.txt" : {
      "ObjectId" : "62cd0b8d78fa224eee401b4238542f5ce370adfe",
      "LastModified" : "2015-10-02T21:21:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### install files ###############\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/Protocols/NFS/CMakeLists.txt" : {
      "ObjectId" : "4a6aea961241a538ff8663e2b1de0c814c79dcda",
      "LastModified" : "2015-10-02T21:21:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### next target ###############\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/Protocols/NLM/CMakeLists.txt" : {
      "ObjectId" : "76610a07bf37fbd44710d68e8ce893c0b90af8e9",
      "LastModified" : "2015-10-02T21:21:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### next target ###############\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### next target ###############\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#target_link_libraries(sm_notify.ganesha ${CMAKE_THREAD_LIBS_INIT})\n",
        "Line" : 36,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "########### install files ###############\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/Protocols/RQUOTA/CMakeLists.txt" : {
      "ObjectId" : "798c0654d99d48ba5ce64b5bef4d1c5bd3e33362",
      "LastModified" : "2015-10-02T21:21:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### next target ###############\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### install files ###############\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/Protocols/XDR/CMakeLists.txt" : {
      "ObjectId" : "64ab19033e04847e2d4367bf7cc613af4bfba19f",
      "LastModified" : "2015-10-02T21:21:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### next target ###############\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### install files ###############\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/RPCAL/CMakeLists.txt" : {
      "ObjectId" : "5134251501d77db620dd839a3f0b78eb43bb01dd",
      "LastModified" : "2015-10-02T21:21:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### next target ###############\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### install files ###############\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/SAL/CMakeLists.txt" : {
      "ObjectId" : "55e24a15a0a522095a238721f41124a8d0337a76",
      "LastModified" : "2015-10-02T21:21:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### next target ###############\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### install files ###############\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/avl/CMakeLists.txt" : {
      "ObjectId" : "f33cc89fb71d31cf06631bd0345d53d1eea277a2",
      "LastModified" : "2015-10-02T21:21:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### next target ###############\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### install files ###############\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/cache_inode/CMakeLists.txt" : {
      "ObjectId" : "b60da5126deebb12c546e8b0efaceba013eb9c63",
      "LastModified" : "2015-10-02T21:21:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### next target ###############\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### install files ###############\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/cidr/CMakeLists.txt" : {
      "ObjectId" : "6320bc04056b17a2d138dc0e13f80d67d284d09c",
      "LastModified" : "2015-10-02T21:21:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### next target ###############\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### install files ###############\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/cmake/build_configurations/bsd10.cmake" : {
      "ObjectId" : "1537d93be3f735cceccfd74fe6674ab4837a9566",
      "LastModified" : "2015-10-02T21:21:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Only build VFS fsal for FreeBSD 10.1\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/cmake/build_configurations/debian.cmake" : {
      "ObjectId" : "0973c3a260837b47968caa36672603d4df0f2e99",
      "LastModified" : "2015-10-02T21:21:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Turn on everything in the options for a complete build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/cmake/build_configurations/everything.cmake" : {
      "ObjectId" : "09709c9c26533f648b52b17f036e5f893d50a2d6",
      "LastModified" : "2015-10-02T21:21:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Turn on everything in the options for a complete build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/cmake/build_configurations/gpfs.cmake" : {
      "ObjectId" : "aa12b856739c9fd56301a676e25a5f1860b05ad1",
      "LastModified" : "2015-10-02T21:21:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# where `make install` will place files\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FSAL's to build\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Disable FSAL's we don't use\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/cmake/build_configurations/pt.cmake" : {
      "ObjectId" : "2a4df3699e3981ab422ed6414ef633dcec368623",
      "LastModified" : "2015-10-02T21:21:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# where `make install` will place files\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FSAL's to build\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Disable FSAL's we don't use\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/cmake/build_configurations/rpmbuild.cmake" : {
      "ObjectId" : "aef0a25f1cb8b7bef4fa7fde9a143ddb3d0f49fb",
      "LastModified" : "2015-10-02T21:21:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Turn on everything in the options for a complete build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/cmake/build_configurations/vfs_pnfs_only.cmake" : {
      "ObjectId" : "079ee78add043ec917530e7a35c49a06ee406358",
      "LastModified" : "2015-10-02T21:21:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Only build VFS fsal and other pnfs useful options\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/cmake/cpack_config.cmake" : {
      "ObjectId" : "6c5933c335d067f7f7676050b052a2698c9b825e",
      "LastModified" : "2015-10-02T21:21:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# A few CPack related variables\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CPack's debian stuff\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Tell CPack the kind of packages to be generated\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/cmake/maintainer_mode.cmake" : {
      "ObjectId" : "f229d377d311b7ddfd55e64e85b398f9311fc2e4",
      "LastModified" : "2015-10-02T21:21:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Debug wants the same flags, plus -g\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Update the documentation string of CMAKE_BUILD_TYPE for GUIs\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/cmake/modules/CMakeParseArguments.cmake" : {
      "ObjectId" : "406780eb4b6c9fef76a485251c5f18a3ea020ff8",
      "LastModified" : "2015-10-02T21:21:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMAKE_PARSE_ARGUMENTS(<prefix> <options> <one_value_keywords> <multi_value_keywords> args...)\n\n#\n\n# CMAKE_PARSE_ARGUMENTS() is intended to be used in macros or functions for\n\n# parsing the arguments given to that macro or function.\n\n# It processes the arguments and defines a set of variables which hold the\n\n# values of the respective options.\n\n#\n\n# The <options> argument contains all options for the respective macro,\n\n# i.e. keywords which can be used when calling the macro without any value\n\n# following, like e.g. the OPTIONAL keyword of the install() command.\n\n#\n\n# The <one_value_keywords> argument contains all keywords for this macro\n\n# which are followed by one value, like e.g. DESTINATION keyword of the\n\n# install() command.\n\n#\n\n# The <multi_value_keywords> argument contains all keywords for this macro\n\n# which can be followed by more than one value, like e.g. the TARGETS or\n\n# FILES keywords of the install() command.\n\n#\n\n# When done, CMAKE_PARSE_ARGUMENTS() will have defined for each of the\n\n# keywords listed in <options>, <one_value_keywords> and\n\n# <multi_value_keywords> a variable composed of the given <prefix>\n\n# followed by \"_\" and the name of the respective keyword.\n\n# These variables will then hold the respective value from the argument list.\n\n# For the <options> keywords this will be TRUE or FALSE.\n\n#\n\n# All remaining arguments are collected in a variable\n\n# <prefix>_UNPARSED_ARGUMENTS, this can be checked afterwards to see whether\n\n# your macro was called with unrecognized parameters.\n\n#\n\n# As an example here a my_install() macro, which takes similar arguments as the\n\n# real install() command:\n\n#\n\n#   function(MY_INSTALL)\n\n#     set(options OPTIONAL FAST)\n\n#     set(oneValueArgs DESTINATION RENAME)\n\n#     set(multiValueArgs TARGETS CONFIGURATIONS)\n\n#     cmake_parse_arguments(MY_INSTALL \"${options}\" \"${oneValueArgs}\" \"${multiValueArgs}\" ${ARGN} )\n\n#     ...\n\n#\n\n# Assume my_install() has been called like this:\n\n#   my_install(TARGETS foo bar DESTINATION bin OPTIONAL blub)\n\n#\n\n# After the cmake_parse_arguments() call the macro will have set the following\n\n# variables:\n\n#   MY_INSTALL_OPTIONAL = TRUE\n\n#   MY_INSTALL_FAST = FALSE (this option was not used when calling my_install()\n\n#   MY_INSTALL_DESTINATION = \"bin\"\n\n#   MY_INSTALL_RENAME = \"\" (was not used)\n\n#   MY_INSTALL_TARGETS = \"foo;bar\"\n\n#   MY_INSTALL_CONFIGURATIONS = \"\" (was not used)\n\n#   MY_INSTALL_UNPARSED_ARGUMENTS = \"blub\" (no value expected after \"OPTIONAL\"\n\n#\n\n# You can the continue and process these variables.\n\n#\n\n# Keywords terminate lists of values, e.g. if directly after a one_value_keyword\n\n# another recognized keyword follows, this is interpreted as the beginning of\n\n# the new option.\n\n# E.g. my_install(TARGETS foo DESTINATION OPTIONAL) would result in\n\n# MY_INSTALL_DESTINATION set to \"OPTIONAL\", but MY_INSTALL_DESTINATION would\n\n# be empty and MY_INSTALL_OPTIONAL would be set to TRUE therefor.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2010 Alexander Neundorf <neundorf@kde.org>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# first set all result variables to empty/FALSE\n",
        "Line" : 84,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# now iterate over all arguments and fill the result variables\n",
        "Line" : 98,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# ... then this marks the end of the arguments belonging to this keyword\n",
        "Line" : 100,
        "CharPositionInLine" : 57
      },
      "5" : {
        "Text" : "# ... then this marks the end of the arguments belonging to this keyword\n",
        "Line" : 101,
        "CharPositionInLine" : 63
      },
      "6" : {
        "Text" : "# ... then this marks the end of the arguments belonging to this keyword\n",
        "Line" : 102,
        "CharPositionInLine" : 61
      },
      "7" : {
        "Text" : "# propagate the result variables to the caller:\n",
        "Line" : 132,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "src/cmake/modules/FindExecInfo.cmake" : {
      "ObjectId" : "b613dbbd71611ee95c60e3f5af253c2363bb935b",
      "LastModified" : "2015-10-02T21:21:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/cmake/modules/FindJeMalloc.cmake" : {
      "ObjectId" : "5c7aa2cf1e10ea90c4a279aebfa8357044d24d12",
      "LastModified" : "2015-10-02T21:21:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find JeMalloc library\n\n# Find the native JeMalloc includes and library\n\n# This module defines\n\n#  JEMALLOC_INCLUDE_DIRS, where to find jemalloc.h, Set when\n\n#                        JEMALLOC_INCLUDE_DIR is found.\n\n#  JEMALLOC_LIBRARIES, libraries to link against to use JeMalloc.\n\n#  JEMALLOC_ROOT_DIR, The base directory to search for JeMalloc.\n\n#                    This can also be an environment variable.\n\n#  JEMALLOC_FOUND, If false, do not try to use JeMalloc.\n\n#\n\n# also defined, but not for general use are\n\n#  JEMALLOC_LIBRARY, where to find the JeMalloc library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2011 Blender Foundation.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If JEMALLOC_ROOT_DIR was defined in the environment, use it.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Fink\n",
        "Line" : 33,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 34,
        "CharPositionInLine" : 13
      },
      "5" : {
        "Text" : "# Blastwave\n",
        "Line" : 35,
        "CharPositionInLine" : 11
      },
      "6" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set JEMALLOC_FOUND to TRUE if \n\n# all listed variables are TRUE\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "src/cmake/modules/FindKrb5.cmake" : {
      "ObjectId" : "38a9cac909736cc825d1a1571759cacbb6386032",
      "LastModified" : "2015-10-02T21:21:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find kerberos 5\n\n# Find the native Kerberos 5 headers and libraries.\n\n#  KRB5_INCLUDE_DIRS      - where to find krb5.h, etc.\n\n#  KRB5_LIBRARIES         - List of libraries when using kerberos 5.\n\n#  KRB5_FOUND             - True if kerberos 5 found.\n\n# KRB5 modules may be specified as components for this find module.\n\n# Modules may be listed by running \"krb5-config\".  Modules include:\n\n#  krb5              Kerberos 5 application\n\n#  gssapi            GSSAPI application with Kerberos 5 bindings\n\n#  krb4              Kerberos 4 application\n\n#  kadm-client       Kadmin client\n\n#  kadm-server       Kadmin server\n\n#  kdb               Application that accesses the kerberos database\n\n# Typical usage:\n\n#  FIND_PACKAGE(KRB5 REQUIRED gssapi)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# First find the config script from which to obtain other values.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check whether we found anything.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Lookup the include directories needed for the components requested.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Use the newer EXECUTE_PROCESS command if it is available.\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Parse the include flags.\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Convert the compile flags to a CMake list.\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Look for -I options.\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Lookup the libraries needed for the components requested.\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Use the newer EXECUTE_PROCESS command if it is available.\n",
        "Line" : 78,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Parse the library names and directories.\n",
        "Line" : 93,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Look for -L flags for directories and -l flags for library names.\n",
        "Line" : 98,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# add gssapi_krb5 (MIT)\n",
        "Line" : 112,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Search for each library needed using the directories given.\n",
        "Line" : 115,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Look for this library.\n",
        "Line" : 117,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "# If any library is not found then the whole package is not found.\n",
        "Line" : 126,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# Build an ordered list of all the libraries needed.\n",
        "Line" : 131,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# Report the results.\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "src/cmake/modules/FindLTTng.cmake" : {
      "ObjectId" : "1a2a08bae40d356c28b04575577d8b90d61afb23",
      "LastModified" : "2015-10-02T21:21:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find LTTng\n\n# Find the Linux Trace Toolkit - next generation with associated includes path.\n\n# See http://lttng.org/\n\n#\n\n# This module accepts the following optional variables:\n\n#    LTTNG_PATH_HINT   = A hint on LTTNG install path.\n\n#\n\n# This module defines the following variables:\n\n#    LTTNG_FOUND       = Was LTTng found or not?\n\n#    LTTNG_EXECUTABLE  = The path to lttng command\n\n#    LTTNG_LIBRARIES   = The list of libraries to link to when using LTTng\n\n#    LTTNG_INCLUDE_DIR = The path to LTTng include directory\n\n#\n\n# On can set LTTNG_PATH_HINT before using find_package(LTTng) and the\n\n# module with use the PATH as a hint to find LTTng.\n\n#\n\n# The hint can be given on the command line too:\n\n#   cmake -DLTTNG_PATH_HINT=/DATA/ERIC/LTTng /path/to/source\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#One can add his/her own builtin PATH.\n\n#FILE(TO_CMAKE_PATH \"/DATA/ERIC/LTTng\" MYPATH)\n\n#list(APPEND LTTNG_PATH_HINT ${MYPATH})\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# FIND_PROGRAM twice using NO_DEFAULT_PATH on first shot\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set PRELUDE_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# VERSION FPHSA options not handled by CMake version < 2.8.2)\n\n#                                  VERSION_VAR)\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/cmake/modules/FindNTIRPC.cmake" : {
      "ObjectId" : "9794e6826801015bd1a3a2658cb49987b6e96b1a",
      "LastModified" : "2015-10-02T21:21:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find NTIRPC\n\n# Find the New TIRPC RPC library\n\n#\n\n# This module accepts the following optional variables:\n\n#    NTIRPC_PATH_HINT   = A hint on NTIRPC install path.\n\n#\n\n# This module defines the following variables:\n\n#    NTIRPC_FOUND       = Was NTIRPC found or not?\n\n#    NTIRPC_LIBRARY   = The list of libraries to link to when using NTIRPC\n\n#    NTIRPC_INCLUDE_DIR = The path to NTIRPC include directory(s)\n\n#\n\n# On can set NTIRPC_PATH_HINT before using find_package(NTIRPC) and the\n\n# module with use the PATH as a hint to find NTIRPC.\n\n#\n\n# The hint can be given on the command line too:\n\n#   cmake -DNTIRPC_PATH_HINT=/DATA/ERIC/NTIRPC /path/to/source\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set PRELUDE_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# VERSION FPHSA options not handled by CMake version < 2.8.2)\n\n#                                  VERSION_VAR)\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/cmake/modules/FindNfsIdmap.cmake" : {
      "ObjectId" : "9c1cb6332543f60315b41776903ffe4a00b79a46",
      "LastModified" : "2015-10-02T21:21:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/cmake/modules/FindPackageHandleStandardArgs.cmake" : {
      "ObjectId" : "27bfcdecb028b61d5a5fd2ccc9bf861f5e27a81c",
      "LastModified" : "2015-10-02T21:21:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIND_PACKAGE_HANDLE_STANDARD_ARGS(<name> ... )\n\n#\n\n# This function is intended to be used in FindXXX.cmake modules files.\n\n# It handles the REQUIRED, QUIET and version-related arguments to find_package().\n\n# It also sets the <packagename>_FOUND variable.\n\n# The package is considered found if all variables <var1>... listed contain\n\n# valid results, e.g. valid filepaths.\n\n#\n\n# There are two modes of this function. The first argument in both modes is\n\n# the name of the Find-module where it is called (in original casing).\n\n#\n\n# The first simple mode looks like this:\n\n#    FIND_PACKAGE_HANDLE_STANDARD_ARGS(<name> (DEFAULT_MSG|\"Custom failure message\") <var1>...<varN> )\n\n# If the variables <var1> to <varN> are all valid, then <UPPERCASED_NAME>_FOUND\n\n# will be set to TRUE.\n\n# If DEFAULT_MSG is given as second argument, then the function will generate\n\n# itself useful success and error messages. You can also supply a custom error message\n\n# for the failure case. This is not recommended.\n\n#\n\n# The second mode is more powerful and also supports version checking:\n\n#    FIND_PACKAGE_HANDLE_STANDARD_ARGS(NAME [FOUND_VAR <resultVar>]\n\n#                                           [REQUIRED_VARS <var1>...<varN>]\n\n#                                           [VERSION_VAR   <versionvar>]\n\n#                                           [HANDLE_COMPONENTS]\n\n#                                           [CONFIG_MODE]\n\n#                                           [FAIL_MESSAGE \"Custom failure message\"] )\n\n#\n\n# In this mode, the name of the result-variable can be set either to either\n\n# <UPPERCASED_NAME>_FOUND or <OriginalCase_Name>_FOUND using the FOUND_VAR option.\n\n# Other names for the result-variable are not allowed.\n\n# So for a Find-module named FindFooBar.cmake, the two possible names are\n\n# FooBar_FOUND and FOOBAR_FOUND. It is recommended to use the original case version.\n\n# If the FOUND_VAR option is not used, the default is <UPPERCASED_NAME>_FOUND.\n\n#\n\n# As in the simple mode, if <var1> through <varN> are all valid,\n\n# <packagename>_FOUND will be set to TRUE.\n\n# After REQUIRED_VARS the variables which are required for this package are listed.\n\n# Following VERSION_VAR the name of the variable can be specified which holds\n\n# the version of the package which has been found. If this is done, this version\n\n# will be checked against the (potentially) specified required version used\n\n# in the find_package() call. The EXACT keyword is also handled. The default\n\n# messages include information about the required version and the version\n\n# which has been actually found, both if the version is ok or not.\n\n# If the package supports components, use the HANDLE_COMPONENTS option to enable\n\n# handling them. In this case, find_package_handle_standard_args() will report\n\n# which components have been found and which are missing, and the <packagename>_FOUND\n\n# variable will be set to FALSE if any of the required components (i.e. not the\n\n# ones listed after OPTIONAL_COMPONENTS) are missing.\n\n# Use the option CONFIG_MODE if your FindXXX.cmake module is a wrapper for\n\n# a find_package(... NO_MODULE) call.  In this case VERSION_VAR will be set\n\n# to <NAME>_VERSION and the macro will automatically check whether the\n\n# Config module was found.\n\n# Via FAIL_MESSAGE a custom failure message can be specified, if this is not\n\n# used, the default message will be displayed.\n\n#\n\n# Example for mode 1:\n\n#\n\n#    find_package_handle_standard_args(LibXml2  DEFAULT_MSG  LIBXML2_LIBRARY LIBXML2_INCLUDE_DIR)\n\n#\n\n# LibXml2 is considered to be found, if both LIBXML2_LIBRARY and\n\n# LIBXML2_INCLUDE_DIR are valid. Then also LIBXML2_FOUND is set to TRUE.\n\n# If it is not found and REQUIRED was used, it fails with FATAL_ERROR,\n\n# independent whether QUIET was used or not.\n\n# If it is found, success will be reported, including the content of <var1>.\n\n# On repeated Cmake runs, the same message won't be printed again.\n\n#\n\n# Example for mode 2:\n\n#\n\n#    find_package_handle_standard_args(LibXslt FOUND_VAR LibXslt_FOUND\n\n#                                             REQUIRED_VARS LibXslt_LIBRARIES LibXslt_INCLUDE_DIRS\n\n#                                             VERSION_VAR LibXslt_VERSION_STRING)\n\n# In this case, LibXslt is considered to be found if the variable(s) listed\n\n# after REQUIRED_VAR are all valid, i.e. LibXslt_LIBRARIES and LibXslt_INCLUDE_DIRS\n\n# in this case. The result will then be stored in LibXslt_FOUND .\n\n# Also the version of LibXslt will be checked by using the version contained\n\n# in LibXslt_VERSION_STRING.\n\n# Since no FAIL_MESSAGE is given, the default messages will be printed.\n\n#\n\n# Another example for mode 2:\n\n#\n\n#    find_package(Automoc4 QUIET NO_MODULE HINTS /opt/automoc4)\n\n#    find_package_handle_standard_args(Automoc4  CONFIG_MODE)\n\n# In this case, FindAutmoc4.cmake wraps a call to find_package(Automoc4 NO_MODULE)\n\n# and adds an additional search directory for automoc4.\n\n# Here the result will be stored in AUTOMOC4_FOUND.\n\n# The following FIND_PACKAGE_HANDLE_STANDARD_ARGS() call produces a proper\n\n# success/error message.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2007-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# internal helper macro\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# internal helper macro to generate the failure message when used in CONFIG_MODE:\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# <name>_CONFIG is set, but FOUND is false, this means that some other of the REQUIRED_VARS was not found:\n",
        "Line" : 120,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# If _CONSIDERED_CONFIGS is set, the config-file has been found, but no suitable version.\n\n# List them all in the error message:\n",
        "Line" : 124,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Simple case: No Config-file was found at all:\n",
        "Line" : 141,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "#function(FIND_PACKAGE_HANDLE_STANDARD_ARGS _NAME _FIRST_ARG)\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# set up the arguments for CMAKE_PARSE_ARGUMENTS and check whether we are in\n\n# new extended or in the \"old\" mode:\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# now that we collected all arguments, process them\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# In config-mode, we rely on the variable <package>_CONFIG, which is set by find_package()\n\n# when it successfully found the config-file, including version checking:\n",
        "Line" : 182,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# collect all variables which were not found, so they can be printed, so the\n\n# user knows better what went wrong (#6375)\n",
        "Line" : 209,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# check if all passed variables are valid\n",
        "Line" : 213,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# component handling\n",
        "Line" : 227,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# version handling:\n",
        "Line" : 258,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# exact version required\n",
        "Line" : 266,
        "CharPositionInLine" : 44
      },
      "16" : {
        "Text" : "# minimum version specified:\n",
        "Line" : 274,
        "CharPositionInLine" : 17
      },
      "17" : {
        "Text" : "# if the package was not found, but a version was given, add that to the output:\n",
        "Line" : 285,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "# print the result:\n",
        "Line" : 306,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 19
    },
    "src/cmake/modules/FindPackageMessage.cmake" : {
      "ObjectId" : "5cea43e352283d0f343045fd5261c82858ba4cf8",
      "LastModified" : "2015-10-02T21:21:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIND_PACKAGE_MESSAGE(<name> \"message for user\" \"find result details\")\n\n#\n\n# This macro is intended to be used in FindXXX.cmake modules files.\n\n# It will print a message once for each unique find result.\n\n# This is useful for telling the user where a package was found.\n\n# The first argument specifies the name (XXX) of the package.\n\n# The second argument specifies the message to display.\n\n# The third argument lists details about the find result so that\n\n# if they change the message will be displayed again.\n\n# The macro also obeys the QUIET argument to the find_package command.\n\n#\n\n# Example:\n\n#\n\n#  if(X11_FOUND)\n\n#    FIND_PACKAGE_MESSAGE(X11 \"Found X11: ${X11_X11_LIB}\"\n\n#      \"[${X11_X11_LIB}][${X11_INCLUDE_DIR}]\")\n\n#  else()\n\n#   ...\n\n#  endif()\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2008-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Avoid printing a message repeatedly for the same find result.\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# The message has not yet been printed.\n",
        "Line" : 40,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# Save the find details in the cache to avoid printing the same\n\n# message again.\n",
        "Line" : 43,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 5
    },
    "src/cmake/modules/FindPkgConfig.cmake" : {
      "ObjectId" : "ad52149b76f42492e741e4492c22efb8ee3bec64",
      "LastModified" : "2015-10-02T21:21:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - a pkg-config module for CMake\n\n#\n\n# Usage:\n\n#   pkg_check_modules(<PREFIX> [REQUIRED] [QUIET] <MODULE> [<MODULE>]*)\n\n#     checks for all the given modules\n\n#\n\n#   pkg_search_module(<PREFIX> [REQUIRED] [QUIET] <MODULE> [<MODULE>]*)\n\n#     checks for given modules and uses the first working one\n\n#\n\n# When the 'REQUIRED' argument was set, macros will fail with an error\n\n# when module(s) could not be found\n\n#\n\n# When the 'QUIET' argument is set, no status messages will be printed.\n\n#\n\n# It sets the following variables:\n\n#   PKG_CONFIG_FOUND          ... if pkg-config executable was found\n\n#   PKG_CONFIG_EXECUTABLE     ... pathname of the pkg-config program\n\n#   PKG_CONFIG_VERSION_STRING ... the version of the pkg-config program found\n\n#                                 (since CMake 2.8.8)\n\n#\n\n# For the following variables two sets of values exist; first one is the\n\n# common one and has the given PREFIX. The second set contains flags\n\n# which are given out when pkgconfig was called with the '--static'\n\n# option.\n\n#   <XPREFIX>_FOUND          ... set to 1 if module(s) exist\n\n#   <XPREFIX>_LIBRARIES      ... only the libraries (w/o the '-l')\n\n#   <XPREFIX>_LIBRARY_DIRS   ... the paths of the libraries (w/o the '-L')\n\n#   <XPREFIX>_LDFLAGS        ... all required linker flags\n\n#   <XPREFIX>_LDFLAGS_OTHER  ... all other linker flags\n\n#   <XPREFIX>_INCLUDE_DIRS   ... the '-I' preprocessor flags (w/o the '-I')\n\n#   <XPREFIX>_CFLAGS         ... all required cflags\n\n#   <XPREFIX>_CFLAGS_OTHER   ... the other compiler flags\n\n#\n\n#   <XPREFIX> = <PREFIX>        for common case\n\n#   <XPREFIX> = <PREFIX>_STATIC for static linking\n\n#\n\n# There are some special variables whose prefix depends on the count\n\n# of given modules. When there is only one module, <PREFIX> stays\n\n# unchanged. When there are multiple modules, the prefix will be\n\n# changed to <PREFIX>_<MODNAME>:\n\n#   <XPREFIX>_VERSION    ... version of the module\n\n#   <XPREFIX>_PREFIX     ... prefix-directory of the module\n\n#   <XPREFIX>_INCLUDEDIR ... include-dir of the module\n\n#   <XPREFIX>_LIBDIR     ... lib-dir of the module\n\n#\n\n#   <XPREFIX> = <PREFIX>  when |MODULES| == 1, else\n\n#   <XPREFIX> = <PREFIX>_<MODNAME>\n\n#\n\n# A <MODULE> parameter can have the following formats:\n\n#   {MODNAME}            ... matches any version\n\n#   {MODNAME}>={VERSION} ... at least version <VERSION> is required\n\n#   {MODNAME}={VERSION}  ... exactly version <VERSION> is required\n\n#   {MODNAME}<={VERSION} ... modules must not be newer than <VERSION>\n\n#\n\n# Examples\n\n#   pkg_check_modules (GLIB2   glib-2.0)\n\n#\n\n#   pkg_check_modules (GLIB2   glib-2.0>=2.10)\n\n#     requires at least version 2.10 of glib2 and defines e.g.\n\n#       GLIB2_VERSION=2.10.3\n\n#\n\n#   pkg_check_modules (FOO     glib-2.0>=2.10 gtk+-2.0)\n\n#     requires both glib2 and gtk2, and defines e.g.\n\n#       FOO_glib-2.0_VERSION=2.10.3\n\n#       FOO_gtk+-2.0_VERSION=2.8.20\n\n#\n\n#   pkg_check_modules (XRENDER REQUIRED xrender)\n\n#     defines e.g.:\n\n#       XRENDER_LIBRARIES=Xrender;X11\n\n#       XRENDER_STATIC_LIBRARIES=Xrender;X11;pthread;Xau;Xdmcp\n\n#\n\n#   pkg_search_module (BAR     libxml-2.0 libxml2 libxml>=2)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2006-2009 Kitware, Inc.\n\n# Copyright 2006 Enrico Scholz <enrico.scholz@informatik.tu-chemnitz.de>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "### Common stuff ####\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This is needed because the module name is \"PkgConfig\" but the name of\n\n# this variable has always been PKG_CONFIG_FOUND so this isn't automatically\n\n# handled by FPHSA.\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Unsets the given variables\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Invokes pkgconfig, cleans up the result and sets variables\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#message(STATUS \"  ${_varname} ... ${_pkgconfig_invoke_result}\")\n",
        "Line" : 143,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Invokes pkgconfig two times; once without '--static' and once with\n\n# '--static'\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Splits given arguments into options and a package list\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "###\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# create a better addressable variable of the modules and calculate its size\n",
        "Line" : 198,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# give out status message telling checked module\n",
        "Line" : 203,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# iterate through module list and check whether they exist and match the required version\n",
        "Line" : 215,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# check whether version is given\n",
        "Line" : 219,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# handle the operands\n",
        "Line" : 230,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "# create the final query which is of the format:\n\n# * --atleast-version <version> <pkg-name>\n\n# * --exact-version <version> <pkg-name>\n\n# * --max-version <version> <pkg-name>\n\n# * --exists <pkg-name>\n",
        "Line" : 243,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# execute the query\n",
        "Line" : 262,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# evaluate result and tell failures\n",
        "Line" : 267,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "# fail when requested\n",
        "Line" : 278,
        "CharPositionInLine" : 6
      },
      "19" : {
        "Text" : "# when we are here, we checked whether requested modules\n\n# exist. Now, go through them and set variables\n",
        "Line" : 283,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "# iterate through all modules again and set individual variables\n",
        "Line" : 289,
        "CharPositionInLine" : 6
      },
      "21" : {
        "Text" : "# handle case when there is only one package required\n",
        "Line" : 291,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# set variables which are combined for multiple modules\n",
        "Line" : 308,
        "CharPositionInLine" : 6
      },
      "23" : {
        "Text" : "###\n\n### User visible macros start here\n\n###\n",
        "Line" : 325,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "###\n",
        "Line" : 329,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# check cached value\n",
        "Line" : 331,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "###\n",
        "Line" : 340,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# check cached value\n",
        "Line" : 342,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# iterate through all modules and stop at the first working one.\n",
        "Line" : 351,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "### Local Variables:\n\n### mode: cmake\n\n### End:\n",
        "Line" : 372,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 30
    },
    "src/cmake/modules/FindRDMA.cmake" : {
      "ObjectId" : "b79894854bf6fa4283bb6a1c4b575cd8392e37d5",
      "LastModified" : "2015-10-08T22:38:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find RDMA\n\n# Find the New TIRPC RPC library\n\n#\n\n# This module accepts the following optional variables:\n\n#    RDMA_PATH_HINT   = A hint on RDMA install path.\n\n#\n\n# This module defines the following variables:\n\n#    RDMA_FOUND       = Was RDMA found or not?\n\n#    RDMA_LIBRARY   = The list of libraries to link to when using RDMA\n\n#    RDMA_INCLUDE_DIR = The path to RDMA include directory(s)\n\n#\n\n# One can set RDMA_PATH_HINT before using find_package(RDMA) and the\n\n# module with use the PATH as a hint to find RDMA.\n\n# Alternatively, one can set LIBIBVERBS_PREFIX and LIBRDMACM_PREFIX to the individual\n\n# hints for those libraries.\n\n#\n\n# The hint can be given on the command line too:\n\n#   cmake -DRDMA_PATH_HINT=/DATA/ERIC/RDMA /path/to/source\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ibverbs\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# rdmacm\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#if (RDMA_LIBRARY)\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#libfind_version_header(RDMA version.h RDMA_VERSION)\n",
        "Line" : 53,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "#endif (RDMA_LIBRARY)\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set PRELUDE_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# VERSION FPHSA options not handled by CMake version < 2.8.2)\n\n#                                  VERSION_VAR)\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "src/cmake/modules/FindReadline.cmake" : {
      "ObjectId" : "0e0cc00a1b42d862694fe11d94165fe4aa1fa82e",
      "LastModified" : "2015-10-08T22:38:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/cmake/modules/FindTcMalloc.cmake" : {
      "ObjectId" : "68a8bc62a3a533c8f1cb7f2d16364b0b950f2783",
      "LastModified" : "2015-10-08T22:38:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find Tcmalloc library\n\n# Find the native Tcmalloc includes and library\n\n# This module defines\n\n#  TCMALLOC_INCLUDE_DIRS, where to find tcmalloc.h, Set when\n\n#                        TCMALLOC_INCLUDE_DIR is found.\n\n#  TCMALLOC_LIBRARIES, libraries to link against to use Tcmalloc.\n\n#  TCMALLOC_ROOT_DIR, The base directory to search for Tcmalloc.\n\n#                    This can also be an environment variable.\n\n#  TCMALLOC_FOUND, If false, do not try to use Tcmalloc.\n\n#\n\n# also defined, but not for general use are\n\n#  TCMALLOC_LIBRARY, where to find the Tcmalloc library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2011 Blender Foundation.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If TCMALLOC_ROOT_DIR was defined in the environment, use it.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Fink\n",
        "Line" : 33,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 34,
        "CharPositionInLine" : 13
      },
      "5" : {
        "Text" : "# Blastwave\n",
        "Line" : 35,
        "CharPositionInLine" : 11
      },
      "6" : {
        "Text" : "# Debain tcmalloc minimal\n",
        "Line" : 36,
        "CharPositionInLine" : 22
      },
      "7" : {
        "Text" : "# Debian gperftools\n",
        "Line" : 37,
        "CharPositionInLine" : 26
      },
      "8" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set TCMALLOC_FOUND to TRUE if \n\n# all listed variables are TRUE\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "src/cmake/modules/FindToolchain.cmake" : {
      "ObjectId" : "1a6a4414fd7d66f6f4775b9c537de14108bbe320",
      "LastModified" : "2015-10-08T22:38:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/cmake/modules/FindWBclient.cmake" : {
      "ObjectId" : "6b06abf3e27d5f1ba1ed8b98fdf0e72a018b2cc4",
      "LastModified" : "2015-10-08T22:38:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find a sufficiently recent wbclient\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# the stdint and stdbool includes are required (silly Cmake)\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# XXX this check is doing the heavy lifting\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/cmake/modules/GetGitRevisionDescription.cmake" : {
      "ObjectId" : "b06207530662c9a216aa2f953cb1b8f55d70d44c",
      "LastModified" : "2015-10-08T22:38:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Returns a version string from Git\n\n#\n\n# These functions force a re-configure on each git commit so that you can\n\n# trust the values of the variables in your build system.\n\n#\n\n#  get_git_head_revision(<refspecvar> <hashvar> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the refspec and sha hash of the current head revision\n\n#\n\n#  git_describe(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe on the source tree, and adjusting\n\n# the output so that it tests false if an error occurs.\n\n#\n\n#  git_get_exact_tag(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe --exact-match on the source tree,\n\n# and adjusting the output so that it tests false if there was no exact\n\n# matching tag.\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We must run the following at \"include\" time, not at function call time,\n\n# to find the path to this module rather than the path to a calling list file\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# .git dir not found, search parent directories\n",
        "Line" : 45,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "# We have reached the root directory, we are not in git\n",
        "Line" : 49,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# TODO sanitize\n\n#if((${ARGN}\" MATCHES \"&&\") OR\n\n#\t(ARGN MATCHES \"||\") OR\n\n#\t(ARGN MATCHES \"\\\\;\"))\n\n#\tmessage(\"Please report the following error to the project!\")\n\n#\tmessage(FATAL_ERROR \"Looks like someone's doing something nefarious with git_describe! Passed arguments ${ARGN}\")\n\n#endif()\n",
        "Line" : 90,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "#message(STATUS \"Arguments to execute_process: ${ARGN}\")\n",
        "Line" : 98,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 6
    },
    "src/cmake/modules/InstallClobberImmune.cmake" : {
      "ObjectId" : "2c62782432c9af7fae4a8470b8eb8c43ce7fd8c4",
      "LastModified" : "2015-10-08T22:38:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Determines at `make install` time if a file, typically a configuration\n\n# file placed in $PREFIX/etc, shouldn't be installed to prevent overwrite\n\n# of an existing file.\n\n#\n\n# _srcfile: the file to install\n\n# _dstfile: the absolute file name after installation\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/cmake/modules/InstallPackageConfigFile.cmake" : {
      "ObjectId" : "7bb112975e66bf152792f72906829aa09464a73c",
      "LastModified" : "2015-10-08T22:38:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This macro can be used to install configuration files which\n\n# users are expected to modify after installation.  It will:\n\n#\n\n#   - If binary packaging is enabled:\n\n#     Install the file in the typical CMake fashion, but append to the\n\n#     INSTALLED_CONFIG_FILES cache variable for use with the Mac package's\n\n#     pre/post install scripts\n\n#\n\n#   - If binary packaging is not enabled:\n\n#     Install the script in a way such that it will check at `make install`\n\n#     time whether the file does not exist.  See InstallClobberImmune.cmake\n\n#\n\n#   - Always create a target \"install-example-configs\" which installs an\n\n#     example version of the config file.\n\n#\n\n#   _srcfile: the absolute path to the file to install\n\n#   _dstdir: absolute path to the directory in which to install the file\n\n#   _dstfilename: how to (re)name the file inside _dstdir\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If packaging mode is enabled, always install the distribution's\n\n# version of the file.  The Mac package's pre/post install scripts\n\n# or native functionality of RPMs will take care of not clobbering it.\n",
        "Line" : 26,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# This cache variable is what the Mac package pre/post install scripts\n\n# use to avoid clobbering user-modified config files\n",
        "Line" : 30,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Additionally, the Mac PackageMaker packages don't have any automatic\n\n# handling of configuration file conflicts so install an example file\n\n# that the post install script will cleanup in the case it's extraneous\n",
        "Line" : 35,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Have `make install` check at run time whether the file does not exist\n",
        "Line" : 43,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# '/' is invalid in target names, so replace w/ '.'\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "src/cmake/modules/LibFindMacros.cmake" : {
      "ObjectId" : "81fef7d8e7bd5e9adcfd42cc3fe6a06924b8ab38",
      "LastModified" : "2015-10-08T22:38:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Version 2.2\n\n# Public Domain, originally written by Lasse Kärkkäinen <tronic>\n\n# Maintained at https://github.com/Tronic/cmake-modules\n\n# Please send your improvements as pull requests on Github.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find another package and make it a dependency of the current package.\n\n# This also automatically forwards the \"REQUIRED\" argument.\n\n# Usage: libfind_package(<prefix> <another package> [extra args to find_package])\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# A simple wrapper to make pkg-config searches a bit easier.\n\n# Works the same as CMake's internal pkg_check_modules but is always quiet.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Avoid useless copy&pasta by doing what most simple libraries do anyway:\n\n# pkg-config, find headers, find library.\n\n# Usage: libfind_pkg_detect(<prefix> <pkg-config args> FIND_PATH <name> [other args] FIND_LIBRARY <name> [other args])\n\n# E.g. libfind_pkg_detect(SDL2 sdl2 FIND_PATH SDL.h PATH_SUFFIXES SDL2 FIND_LIBRARY SDL2)\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Parse arguments\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Find library\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Extracts a version #define from a version.h file, output stored to <PREFIX>_VERSION.\n\n# Usage: libfind_version_header(Foobar foobar/version.h FOOBAR_VERSION_STR)\n\n# Fourth argument \"QUIET\" may be used for silently testing different define names.\n\n# This function does nothing if the version variable is already defined.\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Skip processing if we already have a version or if the include dir was not found\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Process optional arguments\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Read the header and parse for version number\n",
        "Line" : 75,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# No regex match?\n",
        "Line" : 85,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Export the version string\n",
        "Line" : 92,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Do the final processing once the paths have been detected.\n\n# If include dirs are needed, ${PREFIX}_PROCESS_INCLUDES should be set to contain\n\n# all the variables, each of which contain one include directory.\n\n# Ditto for ${PREFIX}_PROCESS_LIBS and library files.\n\n# Will set ${PREFIX}_FOUND, ${PREFIX}_INCLUDE_DIRS and ${PREFIX}_LIBRARIES.\n\n# Also handles errors in case library detection was required, etc.\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Skip processing if already processed during this configuration run\n",
        "Line" : 103,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Start with the assumption that the package was found\n",
        "Line" : 108,
        "CharPositionInLine" : 19
      },
      "15" : {
        "Text" : "# Did we find any files? Did we miss includes? These are for formatting better error messages.\n",
        "Line" : 110,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Shorthands for some variables that we need often\n",
        "Line" : 114,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Lists of config option names (all, includes, libs)\n",
        "Line" : 121,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Process deps to add to\n",
        "Line" : 126,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# The package seems to export option lists that we can use, woohoo!\n",
        "Line" : 129,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "# If plural forms don't exist or they equal singular forms\n",
        "Line" : 133,
        "CharPositionInLine" : 6
      },
      "21" : {
        "Text" : "# Singular forms can be used\n",
        "Line" : 136,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# Oh no, we don't know the option names\n",
        "Line" : 144,
        "CharPositionInLine" : 8
      },
      "23" : {
        "Text" : "# Include/library names separated by spaces (notice: not CMake lists)\n",
        "Line" : 163,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Process all includes and set found false if any are missing\n",
        "Line" : 167,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Process all libraries and set found false if any are missing\n",
        "Line" : 178,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Version checks\n",
        "Line" : 188,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# If all-OK, hide all config options, export variables, print status and exit\n",
        "Line" : 198,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# Format messages for debug info and the type of error\n",
        "Line" : 221,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# Fatal error out if REQUIRED\n",
        "Line" : 256,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# Otherwise just print a nasty warning\n",
        "Line" : 261,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 31
    },
    "src/cmake/portability_cmake_2.8/FindBISON.cmake" : {
      "ObjectId" : "4a3e68c6860d6f052f18a35ed3ecbd55236eb147",
      "LastModified" : "2015-10-08T22:38:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find bison executable and provides macros to generate custom build rules\n\n# The module defines the following variables:\n\n#\n\n#  BISON_EXECUTABLE - path to the bison program\n\n#  BISON_VERSION - version of bison\n\n#  BISON_FOUND - true if the program was found\n\n#\n\n# The minimum required version of bison can be specified using the\n\n# standard CMake syntax, e.g. find_package(BISON 2.1.3)\n\n#\n\n# If bison is found, the module defines the macros:\n\n#  BISON_TARGET(<Name> <YaccInput> <CodeOutput> [VERBOSE <file>]\n\n#              [COMPILE_FLAGS <string>])\n\n# which will create  a custom rule to generate  a parser. <YaccInput> is\n\n# the path to  a yacc file. <CodeOutput> is the name  of the source file\n\n# generated by bison.  A header file is also  be generated, and contains\n\n# the  token  list.  If  COMPILE_FLAGS  option is  specified,  the  next\n\n# parameter is  added in the bison  command line.  if  VERBOSE option is\n\n# specified, <file> is created  and contains verbose descriptions of the\n\n# grammar and parser. The macro defines a set of variables:\n\n#  BISON_${Name}_DEFINED - true is the macro ran successfully\n\n#  BISON_${Name}_INPUT - The input source file, an alias for <YaccInput>\n\n#  BISON_${Name}_OUTPUT_SOURCE - The source file generated by bison\n\n#  BISON_${Name}_OUTPUT_HEADER - The header file generated by bison\n\n#  BISON_${Name}_OUTPUTS - The sources files generated by bison\n\n#  BISON_${Name}_COMPILE_FLAGS - Options used in the bison command line\n\n#\n\n#  ====================================================================\n\n#  Example:\n\n#\n\n#   find_package(BISON)\n\n#   BISON_TARGET(MyParser parser.y ${CMAKE_CURRENT_BINARY_DIR}/parser.cpp)\n\n#   add_executable(Foo main.cpp ${BISON_MyParser_OUTPUTS})\n\n#  ====================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2009 Kitware, Inc.\n\n# Copyright 2006 Tristan Carel\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# the bison commands should be executed with the C locale, otherwise\n\n# the message (which are parsed) may be translated\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Bison++\n",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# GNU Bison\n",
        "Line" : 74,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# internal macro\n",
        "Line" : 84,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# internal macro\n",
        "Line" : 103,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#============================================================\n\n# BISON_TARGET (public macro)\n\n#============================================================\n\n#\n",
        "Line" : 110,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Parsing parameters\n",
        "Line" : 121,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# Header's name generated by bison (see option -d)\n",
        "Line" : 141,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# define target variables\n",
        "Line" : 157,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "#\n\n#============================================================\n",
        "Line" : 166,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# FindBISON.cmake ends here\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "src/cmake/portability_cmake_2.8/FindFLEX.cmake" : {
      "ObjectId" : "79a3a1e6c27044491fc153ca2fabdc8a9fc38a59",
      "LastModified" : "2015-10-08T22:38:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find flex executable and provides a macro to generate custom build rules\n\n#\n\n# The module defines the following variables:\n\n#  FLEX_FOUND - true is flex executable is found\n\n#  FLEX_EXECUTABLE - the path to the flex executable\n\n#  FLEX_VERSION - the version of flex\n\n#  FLEX_LIBRARIES - The flex libraries\n\n#  FLEX_INCLUDE_DIRS - The path to the flex headers\n\n#\n\n# The minimum required version of flex can be specified using the\n\n# standard syntax, e.g. find_package(FLEX 2.5.13)\n\n#\n\n#\n\n# If flex is found on the system, the module provides the macro:\n\n#  FLEX_TARGET(Name FlexInput FlexOutput [COMPILE_FLAGS <string>])\n\n# which creates a custom command  to generate the <FlexOutput> file from\n\n# the <FlexInput> file.  If  COMPILE_FLAGS option is specified, the next\n\n# parameter is added to the flex  command line. Name is an alias used to\n\n# get  details of  this custom  command.  Indeed the  macro defines  the\n\n# following variables:\n\n#  FLEX_${Name}_DEFINED - true is the macro ran successfully\n\n#  FLEX_${Name}_OUTPUTS - the source file generated by the custom rule, an\n\n#  alias for FlexOutput\n\n#  FLEX_${Name}_INPUT - the flex source file, an alias for ${FlexInput}\n\n#\n\n# Flex scanners oftenly use tokens  defined by Bison: the code generated\n\n# by Flex  depends of the header  generated by Bison.   This module also\n\n# defines a macro:\n\n#  ADD_FLEX_BISON_DEPENDENCY(FlexTarget BisonTarget)\n\n# which  adds the  required dependency  between a  scanner and  a parser\n\n# where  <FlexTarget>  and <BisonTarget>  are  the  first parameters  of\n\n# respectively FLEX_TARGET and BISON_TARGET macros.\n\n#\n\n#  ====================================================================\n\n#  Example:\n\n#\n\n#   find_package(BISON)\n\n#   find_package(FLEX)\n\n#\n\n#   BISON_TARGET(MyParser parser.y ${CMAKE_CURRENT_BINARY_DIR}/parser.cpp)\n\n#   FLEX_TARGET(MyScanner lexer.l  ${CMAKE_CURRENT_BINARY_DIR}/lexer.cpp)\n\n#   ADD_FLEX_BISON_DEPENDENCY(MyScanner MyParser)\n\n#\n\n#   include_directories(${CMAKE_CURRENT_BINARY_DIR})\n\n#   add_executable(Foo\n\n#      Foo.cc\n\n#      ${BISON_MyParser_OUTPUTS}\n\n#      ${FLEX_MyScanner_OUTPUTS}\n\n#   )\n\n#  ====================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2009 Kitware, Inc.\n\n# Copyright 2006 Tristan Carel\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# older versions of flex printed \"/full/path/to/executable version X.Y\"\n\n# newer versions use \"basename(executable) X.Y\"\n",
        "Line" : 94,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#============================================================\n\n# FLEX_TARGET (public macro)\n\n#============================================================\n\n#\n",
        "Line" : 104,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#============================================================\n",
        "Line" : 135,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#============================================================\n\n# ADD_FLEX_BISON_DEPENDENCY (public macro)\n\n#============================================================\n\n#\n",
        "Line" : 138,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#============================================================\n",
        "Line" : 155,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# FindFLEX.cmake ends here\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "src/cmake/rpmtools_config.cmake" : {
      "ObjectId" : "3e97df9ce004a99badee7fd13c130ae8cedc1015",
      "LastModified" : "2015-10-08T22:38:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/cmake/tsan.cmake" : {
      "ObjectId" : "8acf567bf16dad3f8497a1bed4ed6e7d8f8c3ac2",
      "LastModified" : "2015-10-08T22:38:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# cmake rule for GCC thread-sanitizer (tsan).\n\n#\n\n# Make sure gcc 4.8 (or up) is installed and configured.\n\n#\n\n# To use a GCC different from the default version, set the env vars.\n\n# For example:\n\n#\n\n#\t  $ export CC=/opt/gcc-4.8.2/bin/gcc\n\n#\t  $ export CXX=/opt/gcc-4.8.2/bin/g++\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# vim:expandtab:shiftwidth=2:tabstop=2:\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/config_parsing/CMakeLists.txt" : {
      "ObjectId" : "e954753886f25a437930f4f657ef1b8cb58257aa",
      "LastModified" : "2015-10-08T22:38:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### next target ###############\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### next target ###############\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "########### next target ###############\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "########### install files ###############\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/dbus/CMakeLists.txt" : {
      "ObjectId" : "f295b58f8b3f1b86de6b6b0c87396ba8bd35a2ee",
      "LastModified" : "2015-10-08T22:38:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### next target ###############\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### install files ###############\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/hashtable/CMakeLists.txt" : {
      "ObjectId" : "86eef377ba34b8a6871bb1b44d2b52db168640f4",
      "LastModified" : "2015-10-08T22:38:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### next target ###############\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### install files ###############\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/idmapper/CMakeLists.txt" : {
      "ObjectId" : "f684c8952d35534eee29d8c850c274836f22a5a9",
      "LastModified" : "2015-10-08T22:38:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### next target ###############\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### install files ###############\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/include/config-h.in.cmake" : {
      "ObjectId" : "a2bc8b3191cdb21dfa8ad6e30f32b26e104f4020",
      "LastModified" : "2015-10-09T19:54:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ifndef CONFIG_H\n\n#define CONFIG_H\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#define GANESHA_VERSION_MAJOR @GANESHA_MAJOR_VERSION@\n\n#define GANESHA_VERSION_MINOR @GANESHA_MINOR_VERSION@\n\n#define GANESHA_PATCH_LEVEL @GANESHA_PATCH_LEVEL@\n\n#define GANESHA_EXTRA_VERSION @GANESHA_EXTRA_VERSION@\n\n#define GANESHA_VERSION \"@GANESHA_VERSION@\"\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#define VERSION \"@GANESHA_VERSION_MAJOR@.@GANESHA_VERSION_MINOR@@GANESHA_PATCH_LEVEL@@GANESHA_EXTRA_VERSION@\"\n\n#define VERSION_COMMENT \"@VERSION_COMMENT@\"\n\n#define _GIT_HEAD_COMMIT \"@_GIT_HEAD_COMMIT@\"\n\n#define _GIT_DESCRIBE \"@_GIT_DESCRIBE@\"\n\n#define BUILD_HOST \"@BUILD_HOST_NAME@\"\n\n#define FSAL_MODULE_LOC \"@FSAL_DESTINATION@\"\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#cmakedefine _MSPAC_SUPPORT 1\n\n#cmakedefine USE_NFSIDMAP 1\n\n#cmakedefine USE_DBUS 1\n\n#cmakedefine _USE_CB_SIMULATOR 1\n\n#cmakedefine USE_CAPS 1\n\n#cmakedefine USE_BLKID 1\n\n#cmakedefine PROXY_HANDLE_MAPPING 1\n\n#cmakedefine _USE_9P 1\n\n#cmakedefine _USE_9P_RDMA 1\n\n#cmakedefine _USE_NFS_RDMA 1\n\n#cmakedefine USE_FSAL_SHOOK 1\n\n#cmakedefine USE_FSAL_LUSTRE_UP 1\n\n#cmakedefine DEBUG_SAL 1\n\n#cmakedefine _VALGRIND_MEMCHECK 1\n\n#cmakedefine _NO_MOUNT_LIST 1\n\n#cmakedefine HAVE_STDBOOL_H 1\n\n#cmakedefine HAVE_KRB5 1\n\n#cmakedefine KRB5_VERSION @KRB5_VERSION@\n\n#cmakedefine HAVE_HEIMDAL 1\n\n#cmakedefine USE_GSS_KRB5_CCACHE_NAME 1\n\n#cmakedefine LINUX 1\n\n#cmakedefine FREEBSD 1\n\n#cmakedefine APPLE 1\n\n#cmakedefine _HAVE_GSSAPI 1\n\n#cmakedefine HAVE_STRING_H 1\n\n#cmakedefine HAVE_STRINGS_H 1\n\n#cmakedefine HAVE_STRNLEN 1\n\n#cmakedefine LITTLEEND 1\n\n#cmakedefine BIGEND 1\n\n#cmakedefine HAVE_XATTR_H 1\n\n#cmakedefine HAVE_INCLUDE_LUSTREAPI_H 1\n\n#cmakedefine HAVE_INCLUDE_LIBLUSTREAPI_H 1\n\n#cmakedefine _LUSTRE_API_HEADER 1\n\n#cmakedefine HAVE_DAEMON 1\n\n#cmakedefine USE_LTTNG 1\n\n#cmakedefine ENABLE_VFS_DEBUG_ACL 1\n\n#cmakedefine ENABLE_RFC_ACL 1\n\n#cmakedefine USE_GLUSTER_SYMLINK_MOUNT 1\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#define NFS_GANESHA 1\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#define GANESHA_CONFIG_PATH \"@SYSCONFDIR@/ganesha/ganesha.conf\"\n\n#define GANESHA_PIDFILE_PATH \"@SYSSTATEDIR@/run/ganesha.pid\"\n\n#define NFS_V4_RECOV_ROOT \"@SYSSTATEDIR@/lib/nfs/ganesha\"\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#define DEFAULT_NFS_CCACHE_DIR \"@SYSSTATEDIR@/run/ganesha\"\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#endif /* CONFIG_H */\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "src/libganeshaNFS.pc.cmake" : {
      "ObjectId" : "fd07b9154ff41f5d7fe8a66fd7092aa2f1d5a3b1",
      "LastModified" : "2015-10-08T22:38:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/log/CMakeLists.txt" : {
      "ObjectId" : "07b70e868e28b483ebffe00a5180f45ad2cf9323",
      "LastModified" : "2015-10-08T22:38:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### next target ###############\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### next target ###############\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "########### install files ###############\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/nfs-ganesha.spec-in.cmake" : {
      "ObjectId" : "2a88249f237ebd1885d1b0a3e6119b1c08f4f0fa",
      "LastModified" : "2015-10-26T17:23:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Conditionally enable some FSALs, disable others.\n\n#\n\n# 1. rpmbuild accepts these options (gpfs as example):\n\n#    --with gpfs\n\n#    --without gpfs\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# A few explanation about %bcond_with and %bcond_without\n\n# /!\\ be careful: this syntax can be quite messy\n\n# %bcond_with means you add a \"--with\" option, default = without this feature\n\n# %bcond_without adds a\"--without\" so the feature is enabled by default\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use CMake variables\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Option packages start here. use \"rpmbuild --with lustre\" (or equivalent)\n\n# for activating this part of the spec file\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# NULL\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# GPFS\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ZFS\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# CEPH\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# LUSTRE\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# SHOOK\n",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# XFS\n",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# HPSS\n",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#BuildRequires:\thpssfs\n",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# PANFS\n",
        "Line" : 302,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# PT\n",
        "Line" : 314,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# GLUSTER\n",
        "Line" : 327,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Optional packages\n",
        "Line" : 498,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "src/os/CMakeLists.txt" : {
      "ObjectId" : "485faf68efda5d87f90022f16b0f3e9b943da0fb",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# All we need to do here is control the\n\n# build of chosen platform\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### install files ###############\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This is GCC specific to force PIC compiles.\n\n# cmake 2.8.9 has a portable POSITION_INDEPENDENT_CODE property that can be\n\n# used when it is available\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/scripts/CMakeLists.txt" : {
      "ObjectId" : "1c66e7e7516fd555d180416bc11438ab0db9fa12",
      "LastModified" : "2015-10-08T22:38:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/scripts/ganeshactl/CMakeLists.txt" : {
      "ObjectId" : "989338ef3d3b26be8a2de0caaa2d2ab72e32269e",
      "LastModified" : "2015-10-08T22:38:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Building and packaging DBUS scripts for ganesha\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# PyQT based class modules\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Command line scripts\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Qt Designer files that get compiled into .py scripts\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Generate rules for compiling .ui -> .py\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Generate rules to copy command line scripts from src to build,\n\n# stripping .py along the way\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Build up the string for the configure substitution in setup.py\n",
        "Line" : 94,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    },
    "src/support/CMakeLists.txt" : {
      "ObjectId" : "2c9ee6f562966639df6b56d9de465895ed5ef93a",
      "LastModified" : "2015-10-08T22:38:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# string utilities.  This should eventually go into src/os\n\n# because BSD has them and Linux doesn't\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# hash function libraries\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# uid2grp mapper\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "########### next target ###############\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "########### install files ###############\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/test/CMakeLists.txt" : {
      "ObjectId" : "2645454aee74dbdff852e779646f4c5f98180977",
      "LastModified" : "2015-10-08T22:38:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### next target ###############\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### next target ###############\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "########### next target ###############\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "########### install files ###############\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/tools/CMakeLists.txt" : {
      "ObjectId" : "528be64aa60b58e18e8d8522577fc2a02b28f6e5",
      "LastModified" : "2015-10-08T22:38:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########### install files ###############\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/tools/multilock/Makefile" : {
      "ObjectId" : "cdbd2cbabf531e6774162f70a90c4a40fd441614",
      "LastModified" : "2015-10-08T22:38:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright IBM Corporation, 2012\n\n#  Contributor: Frank Filz  <ffilz@us.ibm.com>\n\n#\n\n#\n\n# This software is a server that implements the NFS protocol.\n\n#\n\n#\n\n# This program is free software; you can redistribute it and/or\n\n# modify it under the terms of the GNU Lesser General Public\n\n# License as published by the Free Software Foundation; either\n\n# version 3 of the License, or (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n\n# Lesser General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU Lesser General Public\n\n# License along with this library; if not, write to the Free Software\n\n# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# The following is \"boilerplate\" to set up the standard compilation\n\n# commands:\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/tracing/CMakeLists.txt" : {
      "ObjectId" : "104c629ee2b4942dd702f68a61cb4700dcc71577",
      "LastModified" : "2015-10-08T22:38:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 79,
    "MAKEFILE" : 1,
    "AUTOMAKE" : 14
  },
  "ElapsedTime" : 9693
}