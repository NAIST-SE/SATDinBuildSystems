{
  "Repository" : "26659810",
  "Revision" : "HEAD",
  "ObjectId" : "3b6e3cac256140dcc32de698db98efe999edb14c",
  "CommitTime" : "2019-04-04T00:17:32Z",
  "Files" : {
    "Makefile" : {
      "ObjectId" : "9a504f8424bbdeaa0c9d46e58580e22560785fd0",
      "LastModified" : "2019-03-12T01:07:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for dRonin project\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# import macros common to all supported build systems\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# configure some directories that are relative to wherever ROOT_DIR is located\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# import macros that are OS specific\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# include the tools makefile\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Function for converting an absolute path to one relative\n\n# to the top of the source tree.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Clean out undesirable variables from the environment and command-line\n\n# to remove the chance that they will cause problems with our build\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# These specific variables can influence gcc in unexpected (and undesirable) ways\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# These specific variables used to be valid but now they make no sense\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Decide on a verbosity level based on the V= parameter\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# OpenPilot GCS build configuration (debug | release)\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# And the flight build configuration (debug | release)\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Paths\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Markers used in sequencing build steps\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "##############################\n\n#\n\n# Check that environmental variables are sane\n\n#\n\n##############################\n\n# Checking for $(ANDROIDGCS_BUILD_CONF) to be sane\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Checking for $(GCS_BUILD_CONF) to be sane\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "##############################\n\n#\n\n# Help instructions\n\n#\n\n##############################\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "##############################\n\n#\n\n# GCS related components\n\n#\n\n##############################\n",
        "Line" : 254,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# unfortunately the silent linking command is broken on windows\n",
        "Line" : 268,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# requires KDE's clazy\n\n# need to disable ccache, gence build config = release\n",
        "Line" : 309,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# unfortunately the silent linking command is broken on windows\n",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "##############################\n\n#\n\n# Matlab related components\n\n#\n\n##############################\n",
        "Line" : 364,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "################################\n\n#\n\n# Android GCS related components\n\n#\n\n################################\n",
        "Line" : 385,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Build the output directory for the Android GCS build\n",
        "Line" : 393,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Build the asset directory for the android assets\n",
        "Line" : 398,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# This is intended for manual/after the fact signing of a release artifact\n\n# out of band from CI/release infrastructure.  It can be made more elegant\n\n# later as things mature.  Better some documentation than no documentation.\n",
        "Line" : 442,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# We want to take snapshots of the UAVOs at each point that they change\n\n# to allow the GCS to be compatible with as many versions as possible.\n\n#\n\n# Supply the git hashes of all recent releases here.  Note if UAVOs do not\n\n# change in a hotfix the release does not need to be listed here.\n",
        "Line" : 450,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# All versions includes a pseudo collection called \"working\" which represents\n\n# the UAVOs in the source tree\n",
        "Line" : 462,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# This is where the UAVO collections are stored\n",
        "Line" : 466,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# $(1) git hash of a UAVO snapshot\n",
        "Line" : 469,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Make the output directory that will contain all of the synthetics for the\n\n# uavo collection referenced by the git hash $(1)\n",
        "Line" : 472,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Extract the snapshot of shared/uavobjectdefinition from git hash $(1)\n",
        "Line" : 477,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Extract the uavo xml files from our snapshot\n",
        "Line" : 483,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Last two statements are a hack for old UAVOs using mish-mash formats\n",
        "Line" : 492,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Map the current working directory into the set of UAVO collections\n",
        "Line" : 496,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# $(1) git hash (or symbolic name) of a UAVO snapshot\n",
        "Line" : 504,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# This leaves us with a (broken) symlink that points to the full sha1sum of the collection\n",
        "Line" : 507,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Compute the sha1 hash for this UAVO collection\n\n# The sed bit truncates the UAVO hash to 16 hex digits\n",
        "Line" : 509,
        "CharPositionInLine" : 8
      },
      "38" : {
        "Text" : "# Generate the java uavobjects for this UAVO collection\n",
        "Line" : 519,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Build a jar file for this UAVO collection\n",
        "Line" : 528,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Generate the matlab uavobjects for this UAVO collection\n",
        "Line" : 550,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Build a jar file for this UAVO collection\n",
        "Line" : 559,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# One of these for each element of UAVO_GIT_VERSIONS so we can extract the UAVOs from git\n",
        "Line" : 574,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# One of these for each UAVO_ALL_VERSIONS which includes the ones in the srctree\n",
        "Line" : 577,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "##############################\n\n#\n\n# Flight related components\n\n#\n\n##############################\n",
        "Line" : 594,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Define some pointers to the various important pieces of the flight code\n\n# to prevent these being repeated in every sub makefile\n",
        "Line" : 600,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# $(1) = Canonical board name all in lower case (e.g. coptercontrol)\n\n# $(2) = Unused\n\n# $(3) = Short name for board (e.g. CC)\n\n# $(4) = Host variant (e.g. posix)\n\n# $(5) = Build output type (e.g. elf, exe)\n",
        "Line" : 612,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# $(1) = Canonical board name all in lower case (e.g. coptercontrol)\n\n# $(2) = Unused\n\n# $(3) = Short name for board (e.g CC)\n",
        "Line" : 669,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# $(1) = Canonical board name all in lower case (e.g. coptercontrol)\n\n# $(2) = CPU arch (e.g. f1, f3, f4)\n\n# $(3) = Short name for board (e.g CC)\n",
        "Line" : 710,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# $(1) = Canonical board name all in lower case (e.g. coptercontrol)\n\n# $(2) = Unused\n\n# $(3) = Short name for board (e.g CC)\n",
        "Line" : 756,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# $(1) = Canonical board name all in lower case (e.g. coptercontrol)\n\n# $(2) = Friendly board name\n\n# $(3) = Short board name\n\n# $(4) = yes for bootloader, no for no bootloader\n",
        "Line" : 803,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# rule for bootloader, must come first\n",
        "Line" : 817,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# rule for without bootloader\n",
        "Line" : 820,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# $(1) = Canonical board name all in lower case (e.g. coptercontrol)\n\n# $(2) = Friendly board name\n\n# $(3) = Short board name\n\n# $(4) = yes for bootloader, no for no bootloader\n\n# $(5) = dependencies\n",
        "Line" : 831,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# Always output information on the target and build type in the build summary\n",
        "Line" : 858,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# $(1) = Canonical board name all in lower case (e.g. coptercontrol)\n",
        "Line" : 943,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# Don't build boards that overflow with debugging\n",
        "Line" : 959,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# Some boards don't use the bootloader\n",
        "Line" : 966,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# Generate the targets for whatever boards are left in each list\n",
        "Line" : 974,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# Expand the groups of targets for each board\n",
        "Line" : 1004,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# Expand the bootloader updater rules\n",
        "Line" : 1007,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# Expand the firmware rules\n",
        "Line" : 1010,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Expand the bootloader rules\n",
        "Line" : 1013,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# Expand the entire-flash rules\n",
        "Line" : 1016,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# Expand the upgrader rules\n",
        "Line" : 1019,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# Expand the available flightd-on-host rules\n",
        "Line" : 1033,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "##############################\n\n#\n\n# Unit Tests\n\n#\n\n##############################\n",
        "Line" : 1036,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# Don't automatically run unit tests on non-Linux plats.\n",
        "Line" : 1045,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# $(1) = Unit test name\n",
        "Line" : 1074,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# Expand the unittest rules\n",
        "Line" : 1108,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# Disable parallel make when the all_ut_run target is requested otherwise the TAP\n\n# output is interleaved with the rest of the make output.\n",
        "Line" : 1142,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "##############################\n\n#\n\n# Packaging components\n\n#\n\n##############################\n",
        "Line" : 1150,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "##############################\n\n#\n\n# uncrustify\n\n#\n\n##############################\n",
        "Line" : 1163,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "##############################\n\n#\n\n# Doxygen Documentation\n\n#\n\n##############################\n",
        "Line" : 1180,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 74,
      "Errorlog" : "line 515:35 token recognition error at: '\\1'\n"
    },
    "androidgcs/build.xml" : {
      "ObjectId" : "8d7cd7af7ee9af8a9790989156c47d26bcb55528",
      "LastModified" : "2012-12-10T18:22:51Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " The local.properties file is created and updated by the 'android' tool.\n         It contains the path to the SDK. It should *NOT* be checked into\n         Version Control Systems. ",
        "Line" : 6,
        "CharPositionInLine" : 38
      },
      "1" : {
        "Text" : " The ant.properties file can be created by you. It is only edited by the\n         'android' tool to add properties to it.\n         This is the place to change some Ant specific build properties.\n         Here are some properties you may want to change/update:\n\n         source.dir\n             The name of the source directory. Default is 'src'.\n         out.dir\n             The name of the output directory. Default is 'bin'.\n\n         For other overridable properties, look at the beginning of the rules\n         files in the SDK, at tools/ant/build.xml\n\n         Properties related to the SDK location or the project target should\n         be updated using the 'android' tool with the 'update' action.\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems.\n\n         ",
        "Line" : 28,
        "CharPositionInLine" : 13
      },
      "2" : {
        "Text" : " if sdk.dir was not set from one of the property file, then\n         get it from the ANDROID_HOME env var.\n         This must be done before we load project.properties since\n         the proguard config can use sdk.dir ",
        "Line" : 34,
        "CharPositionInLine" : 49
      },
      "3" : {
        "Text" : " The project.properties file is created and updated by the 'android'\n         tool, as well as ADT.\n\n         This contains project specific properties such as project target, and library\n         dependencies. Lower level build properties are stored in ant.properties\n         (or in .classpath for Eclipse projects).\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems. ",
        "Line" : 48,
        "CharPositionInLine" : 77
      },
      "4" : {
        "Text" : " quick check on sdk.dir ",
        "Line" : 51,
        "CharPositionInLine" : 36
      },
      "5" : {
        "Text" : "\n        Import per project custom build rules if present at the root of the project.\n        This is the place to put custom intermediary targets such as:\n            -pre-build\n            -pre-compile\n            -post-compile (This is typically used for code obfuscation.\n                           Compiled code location: ${out.classes.absolute.dir}\n                           If this is not done in place, override ${out.dex.input.absolute.dir})\n            -post-package\n            -post-build\n            -pre-clean\n    ",
        "Line" : 68,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : " Import the actual build file.\n\n         To customize existing targets, there are two options:\n         - Customize only one target:\n             - copy/paste the target into this file, *before* the\n               <import> task.\n             - customize it to your needs.\n         - Customize the whole content of build.xml\n             - copy/paste the content of the rules files (minus the top node)\n               into this file, replacing the <import> task.\n             - customize to your needs.\n\n         ***********************\n         ****** IMPORTANT ******\n         ***********************\n         In all cases you must update the value of version-tag below to read 'custom' instead of an integer,\n         in order to avoid having your file be overridden by tools such as \"android update project\"\n    ",
        "Line" : 88,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : " version-tag: 1 ",
        "Line" : 89,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 8
    },
    "branding/gcs_definitions.pri" : {
      "ObjectId" : "4787a646ec60172b309bf03f809987ac83c7ea9b",
      "LastModified" : "2015-12-21T17:56:09Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "flight/flightlib/Makefile" : {
      "ObjectId" : "e6cdec74b0d44230d683a5491f043f7d6cd482a4",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# make the build output a bit nicer\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# List C source files here. (C dependencies are automatically generated.)\n\n# use file-extension c for \"c-only\"-files\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Compiler flags to generate dependency files:\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Linker flags.\n\n#  -Wl,...:     tell GCC to pass this to linker.\n\n#    -Map:      create map file\n\n#    --cref:    add cross reference to  map file\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "flight/loadable.example/Makefile" : {
      "ObjectId" : "2bd38561badf86ff61d75b557fc612e0a04d1702",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "flight/targets/EntireFlash/Makefile" : {
      "ObjectId" : "9dff97bcca35e4cd61ac8f0e30a165b9cfe108c6",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#####\n\n# Makefile for Entire Flash (EF) images\n\n#\n\n# The OpenPilot Team, http://www.openpilot.org, Copyright (C) 2012.\n\n# dRonin, http://dronin.org Copyright (C) 2015\n\n#\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful, but\n\n# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n\n# for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along\n\n# with this program; if not, see <http://www.gnu.org/licenses/>\n\n#####\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################################################\n\n# This makefile requires bash\n\n###############################################################################\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set bash shell for all OSs except MS Windows\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# INCLUDE_BOOTLOADER\n",
        "Line" : 52,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# force this target as FW_PRE_PAD could have been changed without us knowing\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# force this target as FW_POST_PAD could have been changed without us knowing\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# force this target as $(BL_BIN), $(FW_BIN) and $(FWINFO_BIN) could have been changed without us knowing\n\n# add $(FWINFO_BIN) after $(FW_BIN) to imitate flash contents after manual firmware upload via gcs\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add jtag targets (program and wipe)\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8,
      "Errorlog" : "line 57:78 token recognition error at: '\\0'\nline 57:85 token recognition error at: '\\3'\nline 63:79 token recognition error at: '\\0'\nline 63:86 token recognition error at: '\\3'\n"
    },
    "flight/targets/aq32/fw/Makefile" : {
      "ObjectId" : "a6179137764734919726b10fa340ca5ac0d35748",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\n\n# @file       Makefile\n\n# @author     The OpenPilot Team, http://www.openpilot.org, Copyright (C) 2009.\n\n# @author     Tau Labs, http://taulabs.org, Copyright (C) 2012-2014\n\n# @author     dRonin, http://dronin.org Copyright (C) 2015-2016\n\n# @addtogroup\n\n# @{\n\n# @addtogroup\n\n# @{\n\n# @brief Makefile to build firmware for the Aq32 board.\n\n###############################################################################\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful, but\n\n# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n\n# for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along\n\n# with this program; if not, see <http://www.gnu.org/licenses/>\n\n#\n\n# Additional note on redistribution: The copyright and license notices above\n\n# must be maintained in each individual source file that is a derivative work\n\n# of this source file; otherwise redistribution is prohibited.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set developer code and compile options\n\n# Set to YES for debugging\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# List of modules to include\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Paths\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# optional component libraries\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# List C source files here. (C dependencies are automatically generated.)\n\n# use file-extension c for \"c-only\"-files\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## OPENPILOT CORE:\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## PIOS Hardware (STM32F4xx)\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## PIOS Hardware (Common)\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# List C++ source files here.\n\n# use file-extension .cpp for C++-files (not .C)\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# List any extra directories to look for include files here.\n\n#    Each directory must be seperated by a space.\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# List any extra directories to look for library files here.\n\n# Also add directories where the linker should search for\n\n# includes from linker-script to the list\n\n#     Each directory must be seperated by a space.\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Extra Libraries\n\n#    Each library-name must be seperated by a space.\n\n#    i.e. to link with libxyz.a, libabc.a and libefsl.a:\n\n#    EXTRA_LIBS = xyz abc efsl\n\n# for newlib-lpc (file: libnewlibc-lpc.a):\n\n#    EXTRA_LIBS = newlib-lpc\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Path to Linker-Scripts\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# debug (un)optimization, see gcc docs\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# finstrument-functions adds __cyg_profile_func_enter/exit to every function\n\n# we currently don't have that symbol implemented anywhere\n\n#CFLAGS += -finstrument-functions\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# common architecture-specific flags from the device-specific library makefile\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# configure CMSIS DSP Library\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Debugging format.\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Place project-specific -D (define) and/or\n\n# -U options for C here.\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Declare all non-optional modules as built-in to force inclusion, strip off any appended varieties of module\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Place project-specific -D and/or -U options for\n\n# Assembler with preprocessor here.\n\n#ADEFS = -DUSE_IRQ_ASM_WRAPPER\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Compiler flag to set the C Standard level.\n\n# c89   - \"ANSI\" C\n\n# gnu89 - c89 plus GCC extensions\n\n# c99   - ISO C99 standard (not yet fully implemented)\n\n# gnu99 - c99 plus GCC extensions\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#-----\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Compiler flags.\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#  -g*:          generate debugging information\n\n#  -O*:          optimization level\n\n#  -f...:        tuning, see GCC manual and avr-libc documentation\n\n#  -Wall...:     warning level\n\n#  -Wa,...:      tell GCC to pass this to the assembler.\n\n#    -adhlns...: create assembler listing\n\n#\n\n# Flags for C and C++ (arm-elf-gcc/arm-elf-g++)\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Compiler flags to generate dependency files:\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# flags only for C\n\n#CONLYFLAGS += -Wnested-externs\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Assembler flags.\n\n#  -Wa,...:    tell GCC to pass this to the assembler.\n\n#  -ahlns:     create listing\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Linker flags.\n\n#  -Wl,...:     tell GCC to pass this to linker.\n\n#    -Map:      create map file\n\n#    --cref:    add cross reference to  map file\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Linker scripts\n",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 31
    },
    "flight/targets/bl/f1/Makefile" : {
      "ObjectId" : "46921cd78723c29aba2b51a6b1ef72e374edeab9",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\n\n# @file       Makefile\n\n# @author     The OpenPilot Team, http://www.openpilot.org, Copyright (C) 2009.\n\n# @author     Tau Labs, http://taulabs.org, Copyright (C) 2012-2013\n\n# @author     dRonin, http://dRonin.org/, Copyright (C) 2016\n\n# \n\n# @addtogroup \n\n# @{\n\n# @addtogroup \n\n# @{\n\n# @brief Makefile to build bootloader for STM32F1 boards\n\n###############################################################################\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful, but\n\n# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n\n# for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along\n\n# with this program; if not, see <http://www.gnu.org/licenses/>\n\n# \n\n# Additional note on redistribution: The copyright and license notices above\n\n# must be maintained in each individual source file that is a derivative work\n\n# of this source file; otherwise redistribution is prohibited.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Paths\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# List C source files here. (C dependencies are automatically generated.)\n\n# use file-extension c for \"c-only\"-files\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Bootloader (architecture specific)\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Bootloader (board specific implementations)\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## PIOS Hardware (STM32F10x)\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## PIOS Hardware (USB)\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## PIOS Hardware (Common)\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## CMSIS for STM32\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## Used parts of the STM-Library\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## STM32 USB Library\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# List Assembler source files here.\n\n# Make them always end in a capital .S. Files ending in a lowercase .s\n\n# will not be considered source files but generated files (assembler\n\n# output from the compiler), and will be deleted upon \"make clean\"!\n\n# Even though the DOS/Win* filesystem matches both .s and .S the same,\n\n# it will preserve the spelling of the filenames, and gcc itself does\n\n# care about how the name is spelled on its command-line.\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# List any extra directories to look for include files here.\n\n#    Each directory must be seperated by a space.\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Path to Linker-Scripts\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Place project-specific -D (define) and/or \n\n# -U options for C here.\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Provide (only) the bootloader with board-specific defines\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Place project-specific -D and/or -U options for \n\n# Assembler with preprocessor here.\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#-----\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Compiler flags.\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#  -g*:          generate debugging information\n\n#  -O*:          optimization level\n\n#  -f...:        tuning, see GCC manual and avr-libc documentation\n\n#  -Wall...:     warning level\n\n#  -Wa,...:      tell GCC to pass this to the assembler.\n\n#    -adhlns...: create assembler listing\n\n#\n\n# Flags for C and C++ (arm-elf-gcc/arm-elf-g++)\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Compiler flags to generate dependency files:\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# flags only for C\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Assembler flags.\n\n#  -Wa,...:    tell GCC to pass this to the assembler.\n\n#  -ahlns:     create listing\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Linker flags.\n\n#  -Wl,...:     tell GCC to pass this to linker.\n\n#    -Map:      create map file\n\n#    --cref:    add cross reference to  map file\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Set linker-script name depending on selected submodel name\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# List of all source files.\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# List of all source files without directory and file-extension.\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Define all object files.\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Link: create ELF output file from object files.\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Assemble: create object files from assembler source files.\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Compile: create object files from C source files.\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Compile: create assembler files from C source files. ARM/Thumb\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Add jtag targets (program and wipe)\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Display sizes of sections.\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Generate Doxygen documents\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Create output files directory\n\n# all known MS Windows OS define the ComSpec environment variable\n",
        "Line" : 251,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Include the dependency files.\n",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 37,
      "Errorlog" : "line 261:43 token recognition error at: '\\d'\n"
    },
    "flight/targets/bl/f3/Makefile" : {
      "ObjectId" : "2fce2f0980dd215ab55efb6f59b405b97f6816be",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\n\n# @file       Makefile\n\n# @author     The OpenPilot Team, http://www.openpilot.org, Copyright (C) 2009.\n\n# @author     Tau Labs, http://taulabs.org, Copyright (C) 2012-2013\n\n# @author     dRonin, http://dRonin.org/, Copyright (C) 2016\n\n#\n\n# @addtogroup \n\n# @{\n\n# @addtogroup \n\n# @{\n\n# @brief Makefile to build bootloader for STM32F3 boards\n\n###############################################################################\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful, but\n\n# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n\n# for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along\n\n# with this program; if not, see <http://www.gnu.org/licenses/>\n\n#\n\n# Additional note on redistribution: The copyright and license notices above\n\n# must be maintained in each individual source file that is a derivative work\n\n# of this source file; otherwise redistribution is prohibited.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Paths\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# List C source files here. (C dependencies are automatically generated.)\n\n# use file-extension c for \"c-only\"-files\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Bootloader (architecture specific)\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Bootloader (board specific implementations)\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## PIOS Hardware (STM32F30x)\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# Hardcoded linker script names for now\n\n#\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# ST USB FS library\n\n#\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## PIOS Hardware (Common)\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# List any extra directories to look for include files here.\n\n#    Each directory must be seperated by a space.\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Place project-specific -D (define) and/or \n\n# -U options for C here.\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Provide (only) the bootloader with board-specific defines\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Place project-specific -D and/or -U options for \n\n# Assembler with preprocessor here.\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#-----\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Compiler flags.\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#  -g*:          generate debugging information\n\n#  -O*:          optimization level\n\n#  -f...:        tuning, see GCC manual and avr-libc documentation\n\n#  -Wall...:     warning level\n\n#  -Wa,...:      tell GCC to pass this to the assembler.\n\n#    -adhlns...: create assembler listing\n\n#\n\n# Flags for C and C++ (arm-elf-gcc/arm-elf-g++)\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# This is not the best place for these.  Really should abstract out\n\n# to the board file or something\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Compiler flags to generate dependency files:\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# flags only for C\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Assembler flags.\n\n#  -Wa,...:    tell GCC to pass this to the assembler.\n\n#  -ahlns:     create listing\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Linker flags.\n\n#  -Wl,...:     tell GCC to pass this to linker.\n\n#    -Map:      create map file\n\n#    --cref:    add cross reference to  map file\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Linker scripts\n\n#LDFLAGS += $(addprefix -T,$(LINKER_SCRIPTS_BL))\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# List of all source files.\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# List of all source files without directory and file-extension.\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Define all object files.\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Link: create ELF output file from object files.\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Assemble: create object files from assembler source files.\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Compile: create object files from C source files.\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Compile: create assembler files from C source files. ARM/Thumb\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Add jtag targets (program and wipe)\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Display sizes of sections.\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Generate Doxygen documents\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Create output files directory\n\n# all known MS Windows OS define the ComSpec environment variable\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Include the dependency files.\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 34,
      "Errorlog" : "line 237:43 token recognition error at: '\\d'\n"
    },
    "flight/targets/bl/f4/Makefile" : {
      "ObjectId" : "3d6e7d59a226936dc2c3d5bd8fe5f573fd478373",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\n\n# @file       Makefile\n\n# @author     The OpenPilot Team, http://www.openpilot.org, Copyright (C) 2009.\n\n# @author     Tau Labs, http://taulabs.org, Copyright (C) 2012-2013\n\n# @author     dRonin, http://dRonin.org/, Copyright (C) 2016\n\n#\n\n# @addtogroup \n\n# @{\n\n# @addtogroup \n\n# @{\n\n# @brief Makefile to build bootloader for STM32F4 boards\n\n###############################################################################\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful, but\n\n# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n\n# for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along\n\n# with this program; if not, see <http://www.gnu.org/licenses/>\n\n# \n\n# Additional note on redistribution: The copyright and license notices above\n\n# must be maintained in each individual source file that is a derivative work\n\n# of this source file; otherwise redistribution is prohibited.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Paths\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# List C source files here. (C dependencies are automatically generated.)\n\n# use file-extension c for \"c-only\"-files\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Bootloader (architecture specific)\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Bootloader (board specific implementations)\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## PIOS Hardware (STM32F4xx)\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## PIOS Hardware (Common)\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# List any extra directories to look for include files here.\n\n#    Each directory must be seperated by a space.\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Place project-specific -D (define) and/or \n\n# -U options for C here.\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Provide (only) the bootloader with board-specific defines\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Place project-specific -D and/or -U options for \n\n# Assembler with preprocessor here.\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#-----\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Compiler flags.\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#  -g*:          generate debugging information\n\n#  -O*:          optimization level\n\n#  -f...:        tuning, see GCC manual and avr-libc documentation\n\n#  -Wall...:     warning level\n\n#  -Wa,...:      tell GCC to pass this to the assembler.\n\n#    -adhlns...: create assembler listing\n\n#\n\n# Flags for C and C++ (arm-elf-gcc/arm-elf-g++)\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Compiler flags to generate dependency files:\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# flags only for C\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Assembler flags.\n\n#  -Wa,...:    tell GCC to pass this to the assembler.\n\n#  -ahlns:     create listing\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Linker flags.\n\n#  -Wl,...:     tell GCC to pass this to linker.\n\n#    -Map:      create map file\n\n#    --cref:    add cross reference to  map file\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Linker scripts\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# List of all source files.\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# List of all source files without directory and file-extension.\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Define all object files.\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Link: create ELF output file from object files.\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Assemble: create object files from assembler source files.\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Compile: create object files from C source files.\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Compile: create assembler files from C source files. ARM/Thumb\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Add jtag targets (program and wipe)\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Display sizes of sections.\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Generate Doxygen documents\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Create output files directory\n\n# all known MS Windows OS define the ComSpec environment variable\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Include the dependency files.\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 31,
      "Errorlog" : "line 231:43 token recognition error at: '\\d'\n"
    },
    "flight/targets/brain/fw/Makefile" : {
      "ObjectId" : "80545a8e0d95e66f2b93e391f238b7a2dbc05abb",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\n\n# @file       Makefile\n\n# @author     The OpenPilot Team, http://www.openpilot.org, Copyright (C) 2009.\n\n# @author     Tau Labs, http://taulabs.org, Copyright (C) 2012-2013\n\n# @author     dRonin, http://dronin.org Copyright (C) 2015-2016\n\n#\n\n# @addtogroup\n\n# @{\n\n# @addtogroup\n\n# @{\n\n# @brief Makefile to build firmware for the FlyingF4 board.\n\n###############################################################################\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful, but\n\n# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n\n# for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along\n\n# with this program; if not, see <http://www.gnu.org/licenses/>\n\n#\n\n# Additional note on redistribution: The copyright and license notices above\n\n# must be maintained in each individual source file that is a derivative work\n\n# of this source file; otherwise redistribution is prohibited.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set developer code and compile options\n\n# Set to YES for debugging\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# List of modules to include\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Paths\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# optional component libraries\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#include $(PIOSCOMMONLIB)/dosfs/library.mk\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# List C source files here. (C dependencies are automatically generated.)\n\n# use file-extension c for \"c-only\"-files\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## OPENPILOT CORE:\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## PIOS Hardware (STM32F4xx)\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## PIOS Hardware (Common)\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# List C++ source files here.\n\n# use file-extension .cpp for C++-files (not .C)\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# List any extra directories to look for include files here.\n\n#    Each directory must be seperated by a space.\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Path to Linker-Scripts\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# debug (un)optimization, see gcc docs\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# finstrument-functions adds __cyg_profile_func_enter/exit to every function\n\n# we currently don't have that symbol implemented anywhere\n\n#CFLAGS += -finstrument-functions\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# common architecture-specific flags from the device-specific library makefile\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# configure CMSIS DSP Library\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Debugging format.\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Place project-specific -D (define) and/or\n\n# -U options for C here.\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Declare all non-optional modules as built-in to force inclusion, strip off any appended varieties of module\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Place project-specific -D and/or -U options for\n\n# Assembler with preprocessor here.\n\n#ADEFS = -DUSE_IRQ_ASM_WRAPPER\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Compiler flag to set the C Standard level.\n\n# c89   - \"ANSI\" C\n\n# gnu89 - c89 plus GCC extensions\n\n# c99   - ISO C99 standard (not yet fully implemented)\n\n# gnu99 - c99 plus GCC extensions\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#-----\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Compiler flags.\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#  -g*:          generate debugging information\n\n#  -O*:          optimization level\n\n#  -f...:        tuning, see GCC manual and avr-libc documentation\n\n#  -Wall...:     warning level\n\n#  -Wa,...:      tell GCC to pass this to the assembler.\n\n#    -adhlns...: create assembler listing\n\n#\n\n# Flags for C and C++ (arm-elf-gcc/arm-elf-g++)\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Compiler flags to generate dependency files:\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# flags only for C\n\n#CONLYFLAGS += -Wnested-externs\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Assembler flags.\n\n#  -Wa,...:    tell GCC to pass this to the assembler.\n\n#  -ahlns:     create listing\n",
        "Line" : 254,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Linker flags.\n\n#  -Wl,...:     tell GCC to pass this to linker.\n\n#    -Map:      create map file\n\n#    --cref:    add cross reference to  map file\n",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#Linker scripts\n",
        "Line" : 274,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 30
    },
    "flight/targets/brainre1/fw/Makefile" : {
      "ObjectId" : "a50fa9b222a6a5cf854e5e785fdc348ce4af68e8",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\n\n# @file       Makefile\n\n# @author     The OpenPilot Team, http://www.openpilot.org, Copyright (C) 2009.\n\n# @author     Tau Labs, http://taulabs.org, Copyright (C) 2012-2013\n\n# @addtogroup\n\n# @{\n\n# @addtogroup\n\n# @{\n\n# @brief Makefile to build firmware for the FlyingF4 board.\n\n###############################################################################\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful, but\n\n# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n\n# for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along\n\n# with this program; if not, see <http://www.gnu.org/licenses/>\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set developer code and compile options\n\n# Set to YES for debugging\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# List of modules to include\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#OPTMODULES += Airspeed\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Paths\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# optional component libraries\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# List C source files here. (C dependencies are automatically generated.)\n\n# use file-extension c for \"c-only\"-files\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## OPENPILOT CORE:\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## PIOS Hardware (STM32F4xx)\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## PIOS Hardware (Common)\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# List C++ source files here.\n\n# use file-extension .cpp for C++-files (not .C)\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# List any extra directories to look for include files here.\n\n#    Each directory must be seperated by a space.\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Path to Linker-Scripts\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# debug (un)optimization, see gcc docs\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# finstrument-functions adds __cyg_profile_func_enter/exit to every function\n\n# we currently don't have that symbol implemented anywhere\n\n#CFLAGS += -finstrument-functions\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# common architecture-specific flags from the device-specific library makefile\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# configure CMSIS DSP Library\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Debugging format.\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Place project-specific -D (define) and/or\n\n# -U options for C here.\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Declare all non-optional modules as built-in to force inclusion, strip off any appended varieties of module\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Place project-specific -D and/or -U options for\n\n# Assembler with preprocessor here.\n\n#ADEFS = -DUSE_IRQ_ASM_WRAPPER\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Compiler flag to set the C Standard level.\n\n# c89   - \"ANSI\" C\n\n# gnu89 - c89 plus GCC extensions\n\n# c99   - ISO C99 standard (not yet fully implemented)\n\n# gnu99 - c99 plus GCC extensions\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#-----\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Compiler flags.\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#  -g*:          generate debugging information\n\n#  -O*:          optimization level\n\n#  -f...:        tuning, see GCC manual and avr-libc documentation\n\n#  -Wall...:     warning level\n\n#  -Wa,...:      tell GCC to pass this to the assembler.\n\n#    -adhlns...: create assembler listing\n\n#\n\n# Flags for C and C++ (arm-elf-gcc/arm-elf-g++)\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Compiler flags to generate dependency files:\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# flags only for C\n\n#CONLYFLAGS += -Wnested-externs\n",
        "Line" : 251,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Assembler flags.\n\n#  -Wa,...:    tell GCC to pass this to the assembler.\n\n#  -ahlns:     create listing\n",
        "Line" : 255,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Linker flags.\n\n#  -Wl,...:     tell GCC to pass this to linker.\n\n#    -Map:      create map file\n\n#    --cref:    add cross reference to  map file\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#Linker scripts\n",
        "Line" : 275,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 30
    },
    "flight/targets/bu/f1/Makefile" : {
      "ObjectId" : "439eaf8af4544b9f4bf754e5a6897fbab1e74618",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#####\n\n# Project: OpenPilot\n\n#    \n\n#  \n\n# Makefile for OpenPilot project build PiOS and the AP.\n\n#\n\n# dRonin, http://dRonin.org/, Copyright (C) 2016\n\n# The OpenPilot Team, http://www.openpilot.org, Copyright (C) 2009.\n\n#    \n\n# \n\n# This program is free software; you can redistribute it and/or modify \n\n# it under the terms of the GNU General Public License as published by \n\n# the Free Software Foundation; either version 3 of the License, or \n\n# (at your option) any later version.\n\n# \n\n# This program is distributed in the hope that it will be useful, but \n\n# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY \n\n# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License \n\n# for more details.\n\n# \n\n# You should have received a copy of the GNU General Public License along \n\n# with this program; if not, see <http://www.gnu.org/licenses/>\n\n#\n\n# Additional note on redistribution: The copyright and license notices above\n\n# must be maintained in each individual source file that is a derivative work\n\n# of this source file; otherwise redistribution is prohibited.\n\n#\n\n#####\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Paths\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# List C source files here. (C dependencies are automatically generated.)\n\n# use file-extension c for \"c-only\"-files\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Bootloader Updater (common)\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Bootloader Updater (architecture specific)\n\n#SRC += $(BUARCHDIR)/pios_board.c\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Bootloader Updater (board specific implementations)\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## PIOS Hardware (STM32F10x)\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## PIOS Hardware (Common)\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## CMSIS for STM32\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## Used parts of the STM-Library\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# List Assembler source files here.\n\n# Make them always end in a capital .S. Files ending in a lowercase .s\n\n# will not be considered source files but generated files (assembler\n\n# output from the compiler), and will be deleted upon \"make clean\"!\n\n# Even though the DOS/Win* filesystem matches both .s and .S the same,\n\n# it will preserve the spelling of the filenames, and gcc itself does\n\n# care about how the name is spelled on its command-line.\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# List any extra directories to look for include files here.\n\n#    Each directory must be seperated by a space.\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Path to Linker-Scripts\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Place project-specific -D (define) and/or \n\n# -U options for C here.\n\n#\n\n# This exists to prevent ccache from caching compilation results when the file\n\n# has changed.  md5sum is used on linux and Windows; cksum is used on mac.\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#CDEFS += -DHSE_VALUE=$(OSCILLATOR_FREQ)\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Place project-specific -D and/or -U options for \n\n# Assembler with preprocessor here.\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#-----\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Compiler flags.\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#  -g*:          generate debugging information\n\n#  -O*:          optimization level\n\n#  -f...:        tuning, see GCC manual and avr-libc documentation\n\n#  -Wall...:     warning level\n\n#  -Wa,...:      tell GCC to pass this to the assembler.\n\n#    -adhlns...: create assembler listing\n\n#\n\n# Flags for C and C++ (arm-elf-gcc/arm-elf-g++)\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Compiler flags to generate dependency files:\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# flags only for C\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Assembler flags.\n\n#  -Wa,...:    tell GCC to pass this to the assembler.\n\n#  -ahlns:     create listing\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Linker flags.\n\n#  -Wl,...:     tell GCC to pass this to linker.\n\n#    -Map:      create map file\n\n#    --cref:    add cross reference to  map file\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Set linker-script name depending on selected submodel name\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# List of all source files.\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# List of all source files without directory and file-extension.\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Define all object files.\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Link: create ELF output file from object files.\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Assemble: create object files from assembler source files.\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Compile: create object files from C source files.\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Compile: create assembler files from C source files. ARM/Thumb\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Display sizes of sections.\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Generate Doxygen documents\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Create output files directory\n\n# all known MS Windows OS define the ComSpec environment variable\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Include the dependency files.\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# This pads the bin to have two entry locations.  Used on PlayUAV OSD where\n\n# we could be running from PX4 loader (16k offset) or our loader (128k offset)\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 36,
      "Errorlog" : "line 227:43 token recognition error at: '\\d'\n"
    },
    "flight/targets/bu/f3/Makefile" : {
      "ObjectId" : "f32cb37f42ceda56f57ad7c2f5ca4153e74b07e7",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#####\n\n# Project: OpenPilot\n\n#    \n\n#  \n\n# Makefile for OpenPilot project build PiOS and the AP.\n\n#\n\n# dRonin, http://dRonin.org/, Copyright (C) 2016\n\n# The OpenPilot Team, http://www.openpilot.org, Copyright (C) 2009.\n\n#    \n\n# \n\n# This program is free software; you can redistribute it and/or modify \n\n# it under the terms of the GNU General Public License as published by \n\n# the Free Software Foundation; either version 3 of the License, or \n\n# (at your option) any later version.\n\n# \n\n# This program is distributed in the hope that it will be useful, but \n\n# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY \n\n# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License \n\n# for more details.\n\n# \n\n# You should have received a copy of the GNU General Public License along \n\n# with this program; if not, see <http://www.gnu.org/licenses/>\n\n#\n\n# Additional note on redistribution: The copyright and license notices above\n\n# must be maintained in each individual source file that is a derivative work\n\n# of this source file; otherwise redistribution is prohibited.\n\n#####\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Paths\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# List C source files here. (C dependencies are automatically generated.)\n\n# use file-extension c for \"c-only\"-files\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Bootloader Updater (common)\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Bootloader Updater (architecture specific)\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Bootloader Updater (board specific implementations)\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## PIOS Hardware (STM32F30x)\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## PIOS Hardware (Common)\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# List Assembler source files here.\n\n# Make them always end in a capital .S. Files ending in a lowercase .s\n\n# will not be considered source files but generated files (assembler\n\n# output from the compiler), and will be deleted upon \"make clean\"!\n\n# Even though the DOS/Win* filesystem matches both .s and .S the same,\n\n# it will preserve the spelling of the filenames, and gcc itself does\n\n# care about how the name is spelled on its command-line.\n\n#ASRC = $(PIOSSTM32F10X)/startup_stm32f10x_$(MODEL)$(MODEL_SUFFIX).S\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# List any extra directories to look for include files here.\n\n#    Each directory must be seperated by a space.\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Place project-specific -D (define) and/or \n\n# -U options for C here.\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# This exists to prevent ccache from caching compilation results when the file\n\n# has changed.  md5sum is used on linux and Windows; cksum is used on mac.\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Place project-specific -D and/or -U options for \n\n# Assembler with preprocessor here.\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#-----\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Compiler flags.\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#  -g*:          generate debugging information\n\n#  -O*:          optimization level\n\n#  -f...:        tuning, see GCC manual and avr-libc documentation\n\n#  -Wall...:     warning level\n\n#  -Wa,...:      tell GCC to pass this to the assembler.\n\n#    -adhlns...: create assembler listing\n\n#\n\n# Flags for C and C++ (arm-elf-gcc/arm-elf-g++)\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Compiler flags to generate dependency files:\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# flags only for C\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Assembler flags.\n\n#  -Wa,...:    tell GCC to pass this to the assembler.\n\n#  -ahlns:     create listing\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Linker flags.\n\n#  -Wl,...:     tell GCC to pass this to linker.\n\n#    -Map:      create map file\n\n#    --cref:    add cross reference to  map file\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Linker scripts\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# List of all source files.\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# List of all source files without directory and file-extension.\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Define all object files.\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Link: create ELF output file from object files.\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Assemble: create object files from assembler source files.\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Compile: create object files from C source files.\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Compile: create assembler files from C source files. ARM/Thumb\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Display sizes of sections.\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Generate Doxygen documents\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Create output files directory\n\n# all known MS Windows OS define the ComSpec environment variable\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Include the dependency files.\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# This pads the bin to have two entry locations.  Used on PlayUAV OSD where\n\n# we could be running from PX4 loader (16k offset) or our loader (128k offset)\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 33,
      "Errorlog" : "line 204:43 token recognition error at: '\\d'\n"
    },
    "flight/targets/bu/f4/Makefile" : {
      "ObjectId" : "3a3f34492582cae0c872653a174feab762ab54b0",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#####\n\n# Project: OpenPilot\n\n#    \n\n#  \n\n# Makefile for OpenPilot project build PiOS and the AP.\n\n#\n\n# The OpenPilot Team, http://www.openpilot.org, Copyright (C) 2009.\n\n# dRonin, http://dRonin.org/, Copyright (C) 2016\n\n# \n\n# This program is free software; you can redistribute it and/or modify \n\n# it under the terms of the GNU General Public License as published by \n\n# the Free Software Foundation; either version 3 of the License, or \n\n# (at your option) any later version.\n\n# \n\n# This program is distributed in the hope that it will be useful, but \n\n# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY \n\n# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License \n\n# for more details.\n\n# \n\n# You should have received a copy of the GNU General Public License along \n\n# with this program; if not, see <http://www.gnu.org/licenses/>\n\n#\n\n# Additional note on redistribution: The copyright and license notices above\n\n# must be maintained in each individual source file that is a derivative work\n\n# of this source file; otherwise redistribution is prohibited.\n\n#####\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Paths\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# List C source files here. (C dependencies are automatically generated.)\n\n# use file-extension c for \"c-only\"-files\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Bootloader Updater (common)\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Bootloader Updater (architecture specific)\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Bootloader Updater (board specific implementations)\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## PIOS Hardware (STM32F40x)\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## PIOS Hardware (Common)\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# List Assembler source files here.\n\n# Make them always end in a capital .S. Files ending in a lowercase .s\n\n# will not be considered source files but generated files (assembler\n\n# output from the compiler), and will be deleted upon \"make clean\"!\n\n# Even though the DOS/Win* filesystem matches both .s and .S the same,\n\n# it will preserve the spelling of the filenames, and gcc itself does\n\n# care about how the name is spelled on its command-line.\n\n#ASRC = $(PIOSSTM32F10X)/startup_stm32f10x_$(MODEL)$(MODEL_SUFFIX).S\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# List any extra directories to look for include files here.\n\n#    Each directory must be seperated by a space.\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Place project-specific -D (define) and/or \n\n# -U options for C here.\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# This exists to prevent ccache from caching compilation results when the file\n\n# has changed.  md5sum is used on linux and Windows; cksum is used on mac.\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Place project-specific -D and/or -U options for \n\n# Assembler with preprocessor here.\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#-----\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Compiler flags.\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#  -g*:          generate debugging information\n\n#  -O*:          optimization level\n\n#  -f...:        tuning, see GCC manual and avr-libc documentation\n\n#  -Wall...:     warning level\n\n#  -Wa,...:      tell GCC to pass this to the assembler.\n\n#    -adhlns...: create assembler listing\n\n#\n\n# Flags for C and C++ (arm-elf-gcc/arm-elf-g++)\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Compiler flags to generate dependency files:\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# flags only for C\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Assembler flags.\n\n#  -Wa,...:    tell GCC to pass this to the assembler.\n\n#  -ahlns:     create listing\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Linker flags.\n\n#  -Wl,...:     tell GCC to pass this to linker.\n\n#    -Map:      create map file\n\n#    --cref:    add cross reference to  map file\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Linker scripts\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# List of all source files.\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# List of all source files without directory and file-extension.\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Define all object files.\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Link: create ELF output file from object files.\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Assemble: create object files from assembler source files.\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Compile: create object files from C source files.\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Compile: create assembler files from C source files. ARM/Thumb\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Display sizes of sections.\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Generate Doxygen documents\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Create output files directory\n\n# all known MS Windows OS define the ComSpec environment variable\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Include the dependency files.\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# This pads the bin to have two entry locations.  Used on PlayUAV OSD where\n\n# we could be running from PX4 loader (16k offset) or our loader (128k offset)\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 33,
      "Errorlog" : "line 216:43 token recognition error at: '\\d'\n"
    },
    "flight/targets/dtfc/fw/Makefile" : {
      "ObjectId" : "d6fd4abeb21b9232e1418e7e74815ae17b03a978",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\n\n# @file       Makefile\n\n# @author     Tau Labs, http://taulabs.org, Copyright (C) 2013-2014\n\n# @author     dRonin, http://dRonin.org/, Copyright (C) 2016\n\n# @addtogroup\n\n# @{\n\n# @addtogroup\n\n# @{\n\n# @brief Makefile to build firmware for DTFc.\n\n###############################################################################\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful, but\n\n# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n\n# for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along\n\n# with this program; if not, see <http://www.gnu.org/licenses/>\n\n#\n\n# Additional note on redistribution: The copyright and license notices above\n\n# must be maintained in each individual source file that is a derivative work\n\n# of this source file; otherwise redistribution is prohibited.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set developer code and compile options\n\n# Set to YES for debugging\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# List of modules to include\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#OPTMODULES += CameraStab\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#OPTMODULES += GenericI2CSensor\n\n#OPTMODULES += PathPlanner\n\n#OPTMODULES += VtolPathFollower\n\n#OPTMODULES += FixedWingPathFollower\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#OPTMODULES += Airspeed/revolution\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Paths\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# optional component libraries\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# List C source files here. (C dependencies are automatically generated.)\n\n# use file-extension c for \"c-only\"-files\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## OPENPILOT CORE:\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## PIOS Hardware (STM32F30x)\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## PIOS Hardware (Common)\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# List C++ source files here.\n\n# use file-extension .cpp for C++-files (not .C)\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# List any extra directories to look for include files here.\n\n#    Each directory must be seperated by a space.\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# List any extra directories to look for library files here.\n\n# Also add directories where the linker should search for\n\n# includes from linker-script to the list\n\n#     Each directory must be seperated by a space.\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Extra Libraries\n\n#    Each library-name must be seperated by a space.\n\n#    i.e. to link with libxyz.a, libabc.a and libefsl.a:\n\n#    EXTRA_LIBS = xyz abc efsl\n\n# for newlib-lpc (file: libnewlibc-lpc.a):\n\n#    EXTRA_LIBS = newlib-lpc\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Path to Linker-Scripts\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# debug (un)optimization, see gcc docs\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# finstrument-functions adds __cyg_profile_func_enter/exit to every function\n\n# we currently don't have that symbol implemented anywhere\n\n#CFLAGS += -finstrument-functions\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# common architecture-specific flags from the device-specific library makefile\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# configure CMSIS DSP Library\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# This is not the best place for these.  Really should abstract out\n\n# to the board file or something\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Debugging format.\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Place project-specific -D (define) and/or\n\n# -U options for C here.\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Declare all non-optional modules as built-in to force inclusion, strip off any appended varieties of module\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Place project-specific -D and/or -U options for\n\n# Assembler with preprocessor here.\n\n#ADEFS = -DUSE_IRQ_ASM_WRAPPER\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Compiler flag to set the C Standard level.\n\n# c89   - \"ANSI\" C\n\n# gnu89 - c89 plus GCC extensions\n\n# c99   - ISO C99 standard (not yet fully implemented)\n\n# gnu99 - c99 plus GCC extensions\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#-----\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Compiler flags.\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#  -g*:          generate debugging information\n\n#  -O*:          optimization level\n\n#  -f...:        tuning, see GCC manual and avr-libc documentation\n\n#  -Wall...:     warning level\n\n#  -Wa,...:      tell GCC to pass this to the assembler.\n\n#    -adhlns...: create assembler listing\n\n#\n\n# Flags for C and C++ (arm-elf-gcc/arm-elf-g++)\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Compiler flags to generate dependency files:\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# flags only for C\n\n#CONLYFLAGS += -Wnested-externs\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Assembler flags.\n\n#  -Wa,...:    tell GCC to pass this to the assembler.\n\n#  -ahlns:     create listing\n",
        "Line" : 254,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Linker flags.\n\n#  -Wl,...:     tell GCC to pass this to linker.\n\n#    -Map:      create map file\n\n#    --cref:    add cross reference to  map file\n",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#Linker scripts\n",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 35
    },
    "flight/targets/flightd/fw/Makefile" : {
      "ObjectId" : "fc2908b8fe552a8476ad7425f764559b50bf40f8",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#####\n\n# Makefile for host flight target (flightd)\n\n#\n\n# The OpenPilot Team, http://www.openpilot.org, Copyright (C) 2009.\n\n# Tau Labs, http://taulabs.org, Copyright (C) 2013-2014\n\n# dRonin, http://dronin.org Copyright (C) 2015-2017\n\n#\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful, but\n\n# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n\n# for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along\n\n# with this program; if not, see <http://www.gnu.org/licenses/>\n\n#\n\n# Additional note on redistribution: The copyright and license notices above\n\n# must be maintained in each individual source file that is a derivative work\n\n# of this source file; otherwise redistribution is prohibited.\n\n#####\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Default target.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Prefer GCC 6\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set developer code and compile options\n\n# Set to YES to compile for debugging\n\n# DEBUG ?= YES\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Since we are running all this firmware the code needs to know what the BL would\n\n# normally contain\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Since we are simulating all this firmware the code needs to know what the BL would\n\n# normally contain\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# List of modules to include\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# On \"sim\", the sensor stabilization module instead invokes the fake one when\n\n# gyros are not present.\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Paths\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# List C source files here. (C dependencies are automatically generated.)\n\n# use file-extension c for \"c-only\"-files\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## OPENPILOT CORE:\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## Libraries for flight calculations\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# List C source files here which must be compiled in ARM-Mode (no -mthumb).\n\n# use file-extension c for \"c-only\"-files\n\n## just for testing, timer.c could be compiled in thumb-mode too\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# List C++ source files here.\n\n# use file-extension .cpp for C++-files (not .C)\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# List C++ source files here which must be compiled in ARM-Mode.\n\n# use file-extension .cpp for C++-files (not .C)\n\n#CPPSRCARM = $(TARGET).cpp\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# List any extra directories to look for include files here.\n\n#    Each directory must be seperated by a space.\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#EXTRAINCDIRS  += $(APPLIBDIR)\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Optimization level, can be [0, 1, 2, 3, s].\n\n# 0 = turn off optimization. s = optimize for size.\n\n# (Note: 3 is not always the best optimization level. See avr-libc FAQ.)\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#CFLAGS += -finstrument-functions -ffixed-r10\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Turn on gcov support\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# common architecture-specific flags from the device-specific library makefile\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# configure CMSIS DSP Library\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# This is not the best place for these.  Really should abstract out\n\n# to the board file or something\n",
        "Line" : 261,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Debugging format.\n",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Place project-specific -D (define) and/or\n\n# -U options for C here.\n",
        "Line" : 268,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Make sure the build knows we're building a sim version\n",
        "Line" : 275,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Declare all non-optional modules as built-in to force inclusion\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Compiler flag to set the C Standard level.\n\n# c89   - \"ANSI\" C\n\n# gnu89 - c89 plus GCC extensions\n\n# c99   - ISO C99 standard (not yet fully implemented)\n\n# gnu99 - c99 plus GCC extensions\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#-----\n",
        "Line" : 290,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Compiler flags.\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#  -g*:          generate debugging information\n\n#  -O*:          optimization level\n\n#  -f...:        tuning, see GCC manual and avr-libc documentation\n\n#  -Wall...:     warning level\n\n#  -Wa,...:      tell GCC to pass this to the assembler.\n\n#    -adhlns...: create assembler listing\n\n#\n\n# Flags for C and C++ (arm-elf-gcc/arm-elf-g++)\n",
        "Line" : 294,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#CFLAGS += -fomit-frame-pointer\n",
        "Line" : 311,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Compiler flags to generate dependency files:\n",
        "Line" : 316,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# flags only for C\n\n#CONLYFLAGS += -Wnested-externs\n",
        "Line" : 319,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Linker flags.\n\n#  -Wl,...:     tell GCC to pass this to linker.\n\n#    -Map:      create map file\n\n#    --cref:    add cross reference to  map file\n\n#LDFLAGS = -Wl,-Map=$(OUTDIR)/$(TARGET).map,--cref,--gc-sections\n",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Define programs and commands.\n",
        "Line" : 337,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List of all source files.\n",
        "Line" : 350,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 37
    },
    "flight/targets/flyingpio/fw/Makefile" : {
      "ObjectId" : "b8b6a17ac288ee52441532040b5e7979dcae2131",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\n\n# @file       Makefile\n\n# @author     Tau Labs, http://taulabs.org, Copyright (C) 2013-2014\n\n# @author     dRonin, http://dronin.org Copyright (C) 2015-2016\n\n# @addtogroup\n\n# @{\n\n# @addtogroup\n\n# @{\n\n# @brief Makefile to build firmware for FlyingPIO\n\n###############################################################################\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful, but\n\n# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n\n# for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along\n\n# with this program; if not, see <http://www.gnu.org/licenses/>\n\n#\n\n# Additional note on redistribution: The copyright and license notices above\n\n# must be maintained in each individual source file that is a derivative work\n\n# of this source file; otherwise redistribution is prohibited.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set developer code and compile options\n\n# Set to YES for debugging\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# List of modules to include\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Paths\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# List C source files here. (C dependencies are automatically generated.)\n\n# use file-extension c for \"c-only\"-files\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## OPENPILOT CORE:\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#receiver types\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# List C++ source files here.\n\n# use file-extension .cpp for C++-files (not .C)\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# List any extra directories to look for include files here.\n\n#    Each directory must be seperated by a space.\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# List any extra directories to look for library files here.\n\n# Also add directories where the linker should search for\n\n# includes from linker-script to the list\n\n#     Each directory must be seperated by a space.\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Extra Libraries\n\n#    Each library-name must be seperated by a space.\n\n#    i.e. to link with libxyz.a, libabc.a and libefsl.a:\n\n#    EXTRA_LIBS = xyz abc efsl\n\n# for newlib-lpc (file: libnewlibc-lpc.a):\n\n#    EXTRA_LIBS = newlib-lpc\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Path to Linker-Scripts\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# debug (un)optimization, see gcc docs\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# finstrument-functions adds __cyg_profile_func_enter/exit to every function\n\n# we currently don't have that symbol implemented anywhere\n\n#CFLAGS += -finstrument-functions\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# common architecture-specific flags from the device-specific library makefile\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# This is not the best place for these.  Really should abstract out\n\n# to the board file or something\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Debugging format.\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Place project-specific -D (define) and/or\n\n# -U options for C here.\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Declare all non-optional modules as built-in to force inclusion, strip off any appended varieties of module\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Place project-specific -D and/or -U options for\n\n# Assembler with preprocessor here.\n\n#ADEFS = -DUSE_IRQ_ASM_WRAPPER\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Compiler flag to set the C Standard level.\n\n# c89   - \"ANSI\" C\n\n# gnu89 - c89 plus GCC extensions\n\n# c99   - ISO C99 standard (not yet fully implemented)\n\n# gnu99 - c99 plus GCC extensions\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#-----\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Compiler flags.\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#  -g*:          generate debugging information\n\n#  -O*:          optimization level\n\n#  -f...:        tuning, see GCC manual and avr-libc documentation\n\n#  -Wall...:     warning level\n\n#  -Wa,...:      tell GCC to pass this to the assembler.\n\n#    -adhlns...: create assembler listing\n\n#\n\n# Flags for C and C++ (arm-elf-gcc/arm-elf-g++)\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Compiler flags to generate dependency files:\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# flags only for C\n\n#CONLYFLAGS += -Wnested-externs\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Assembler flags.\n\n#  -Wa,...:    tell GCC to pass this to the assembler.\n\n#  -ahlns:     create listing\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Linker flags.\n\n#  -Wl,...:     tell GCC to pass this to linker.\n\n#    -Map:      create map file\n\n#    --cref:    add cross reference to  map file\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#Linker scripts\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 29
    },
    "flight/targets/lux/fw/Makefile" : {
      "ObjectId" : "56c7507aba796459daed6b9541f5cb4748458118",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\n\n# @file       Makefile\n\n# @author     Tau Labs, http://taulabs.org, Copyright (C) 2013-2014\n\n# @author     dRonin, http://dRonin.org/, Copyright (C) 2016\n\n# @addtogroup\n\n# @{\n\n# @addtogroup\n\n# @{\n\n# @brief Makefile to build firmware for Lux.\n\n###############################################################################\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful, but\n\n# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n\n# for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along\n\n# with this program; if not, see <http://www.gnu.org/licenses/>\n\n#\n\n# Additional note on redistribution: The copyright and license notices above\n\n# must be maintained in each individual source file that is a derivative work\n\n# of this source file; otherwise redistribution is prohibited.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set developer code and compile options\n\n# Set to YES for debugging\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# List of modules to include\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#OPTMODULES += CameraStab\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#OPTMODULES += GenericI2CSensor\n\n#OPTMODULES += PathPlanner\n\n#OPTMODULES += VtolPathFollower\n\n#OPTMODULES += FixedWingPathFollower\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#OPTMODULES += Airspeed/revolution\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Paths\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# optional component libraries\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# List C source files here. (C dependencies are automatically generated.)\n\n# use file-extension c for \"c-only\"-files\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## OPENPILOT CORE:\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## PIOS Hardware (STM32F30x)\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## PIOS Hardware (Common)\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# List C++ source files here.\n\n# use file-extension .cpp for C++-files (not .C)\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# List any extra directories to look for include files here.\n\n#    Each directory must be seperated by a space.\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# List any extra directories to look for library files here.\n\n# Also add directories where the linker should search for\n\n# includes from linker-script to the list\n\n#     Each directory must be seperated by a space.\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Extra Libraries\n\n#    Each library-name must be seperated by a space.\n\n#    i.e. to link with libxyz.a, libabc.a and libefsl.a:\n\n#    EXTRA_LIBS = xyz abc efsl\n\n# for newlib-lpc (file: libnewlibc-lpc.a):\n\n#    EXTRA_LIBS = newlib-lpc\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Path to Linker-Scripts\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# debug (un)optimization, see gcc docs\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# finstrument-functions adds __cyg_profile_func_enter/exit to every function\n\n# we currently don't have that symbol implemented anywhere\n\n#CFLAGS += -finstrument-functions\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# common architecture-specific flags from the device-specific library makefile\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# configure CMSIS DSP Library\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# This is not the best place for these.  Really should abstract out\n\n# to the board file or something\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Debugging format.\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Place project-specific -D (define) and/or\n\n# -U options for C here.\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Declare all non-optional modules as built-in to force inclusion, strip off any appended varieties of module\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Place project-specific -D and/or -U options for\n\n# Assembler with preprocessor here.\n\n#ADEFS = -DUSE_IRQ_ASM_WRAPPER\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Compiler flag to set the C Standard level.\n\n# c89   - \"ANSI\" C\n\n# gnu89 - c89 plus GCC extensions\n\n# c99   - ISO C99 standard (not yet fully implemented)\n\n# gnu99 - c99 plus GCC extensions\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#-----\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Compiler flags.\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#  -g*:          generate debugging information\n\n#  -O*:          optimization level\n\n#  -f...:        tuning, see GCC manual and avr-libc documentation\n\n#  -Wall...:     warning level\n\n#  -Wa,...:      tell GCC to pass this to the assembler.\n\n#    -adhlns...: create assembler listing\n\n#\n\n# Flags for C and C++ (arm-elf-gcc/arm-elf-g++)\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Compiler flags to generate dependency files:\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# flags only for C\n\n#CONLYFLAGS += -Wnested-externs\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Assembler flags.\n\n#  -Wa,...:    tell GCC to pass this to the assembler.\n\n#  -ahlns:     create listing\n",
        "Line" : 254,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Linker flags.\n\n#  -Wl,...:     tell GCC to pass this to linker.\n\n#    -Map:      create map file\n\n#    --cref:    add cross reference to  map file\n",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#Linker scripts\n",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 35
    },
    "flight/targets/omnibusf3/fw/Makefile" : {
      "ObjectId" : "6f0c79512b3253a01cb9f4814fd377eb41579a66",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\n\n# @file       Makefile\n\n# @author     Tau Labs, http://taulabs.org, Copyright (C) 2013-2014\n\n# @author     dRonin, http://dRonin.org/, Copyright (C) 2017\n\n# @addtogroup\n\n# @{\n\n# @addtogroup\n\n# @{\n\n# @brief Makefile to build firmware for OmnibusF3.\n\n###############################################################################\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful, but\n\n# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n\n# for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along\n\n# with this program; if not, see <http://www.gnu.org/licenses/>\n\n#\n\n# Additional note on redistribution: The copyright and license notices above\n\n# must be maintained in each individual source file that is a derivative work\n\n# of this source file; otherwise redistribution is prohibited.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set developer code and compile options\n\n# Set to YES for debugging\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# List of modules to include\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#OPTMODULES += CameraStab\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#OPTMODULES += PathPlanner\n\n#OPTMODULES += VtolPathFollower\n\n#OPTMODULES += FixedWingPathFollower\n\n#OPTMODULES += UAVOMavlinkBridge\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#OPTMODULES += UAVOLighttelemetryBridge\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#OPTMODULES += Airspeed\n\n#OPTMODULES += UAVOHoTTBridge\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Paths\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# optional component libraries\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# List C source files here. (C dependencies are automatically generated.)\n\n# use file-extension c for \"c-only\"-files\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## OPENPILOT CORE:\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## PIOS Hardware (STM32F30x)\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## PIOS Hardware (Common)\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# List C++ source files here.\n\n# use file-extension .cpp for C++-files (not .C)\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# List any extra directories to look for include files here.\n\n#    Each directory must be seperated by a space.\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# List any extra directories to look for library files here.\n\n# Also add directories where the linker should search for\n\n# includes from linker-script to the list\n\n#     Each directory must be seperated by a space.\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Extra Libraries\n\n#    Each library-name must be seperated by a space.\n\n#    i.e. to link with libxyz.a, libabc.a and libefsl.a:\n\n#    EXTRA_LIBS = xyz abc efsl\n\n# for newlib-lpc (file: libnewlibc-lpc.a):\n\n#    EXTRA_LIBS = newlib-lpc\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Path to Linker-Scripts\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# debug (un)optimization, see gcc docs\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# finstrument-functions adds __cyg_profile_func_enter/exit to every function\n\n# we currently don't have that symbol implemented anywhere\n\n#CFLAGS += -finstrument-functions\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# common architecture-specific flags from the device-specific library makefile\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# configure CMSIS DSP Library\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# This is not the best place for these.  Really should abstract out\n\n# to the board file or something\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Debugging format.\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Place project-specific -D (define) and/or\n\n# -U options for C here.\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Declare all non-optional modules as built-in to force inclusion, strip off any appended varieties of module\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Place project-specific -D and/or -U options for\n\n# Assembler with preprocessor here.\n\n#ADEFS = -DUSE_IRQ_ASM_WRAPPER\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Compiler flag to set the C Standard level.\n\n# c89   - \"ANSI\" C\n\n# gnu89 - c89 plus GCC extensions\n\n# c99   - ISO C99 standard (not yet fully implemented)\n\n# gnu99 - c99 plus GCC extensions\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#-----\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Compiler flags.\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#  -g*:          generate debugging information\n\n#  -O*:          optimization level\n\n#  -f...:        tuning, see GCC manual and avr-libc documentation\n\n#  -Wall...:     warning level\n\n#  -Wa,...:      tell GCC to pass this to the assembler.\n\n#    -adhlns...: create assembler listing\n\n#\n\n# Flags for C and C++ (arm-elf-gcc/arm-elf-g++)\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Compiler flags to generate dependency files:\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# flags only for C\n\n#CONLYFLAGS += -Wnested-externs\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Assembler flags.\n\n#  -Wa,...:    tell GCC to pass this to the assembler.\n\n#  -ahlns:     create listing\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Linker flags.\n\n#  -Wl,...:     tell GCC to pass this to linker.\n\n#    -Map:      create map file\n\n#    --cref:    add cross reference to  map file\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#Linker scripts\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 36
    },
    "flight/targets/pikoblx/fw/Makefile" : {
      "ObjectId" : "8afe10f597202f5373076f95d09eada26f4d546d",
      "LastModified" : "2019-03-12T01:07:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\n\n# @file       Makefile\n\n# @author     Tau Labs, http://taulabs.org, Copyright (C) 2013-2014\n\n# @author     dRonin, http://dronin.org Copyright (C) 2015-2016\n\n# @addtogroup\n\n# @{\n\n# @addtogroup\n\n# @{\n\n# @brief Makefile to build firmware for PikoBLX.\n\n###############################################################################\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful, but\n\n# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n\n# for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along\n\n# with this program; if not, see <http://www.gnu.org/licenses/>\n\n#\n\n# Additional note on redistribution: The copyright and license notices above\n\n# must be maintained in each individual source file that is a derivative work\n\n# of this source file; otherwise redistribution is prohibited.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set developer code and compile options\n\n# Set to YES for debugging\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# List of modules to include\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Paths\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# optional component libraries\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# List C source files here. (C dependencies are automatically generated.)\n\n# use file-extension c for \"c-only\"-files\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## OPENPILOT CORE:\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## PIOS Hardware (STM32F30x)\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## PIOS Hardware (Common)\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# List C++ source files here.\n\n# use file-extension .cpp for C++-files (not .C)\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# List any extra directories to look for include files here.\n\n#    Each directory must be seperated by a space.\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# List any extra directories to look for library files here.\n\n# Also add directories where the linker should search for\n\n# includes from linker-script to the list\n\n#     Each directory must be seperated by a space.\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Extra Libraries\n\n#    Each library-name must be seperated by a space.\n\n#    i.e. to link with libxyz.a, libabc.a and libefsl.a:\n\n#    EXTRA_LIBS = xyz abc efsl\n\n# for newlib-lpc (file: libnewlibc-lpc.a):\n\n#    EXTRA_LIBS = newlib-lpc\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Path to Linker-Scripts\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# debug (un)optimization, see gcc docs\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# finstrument-functions adds __cyg_profile_func_enter/exit to every function\n\n# we currently don't have that symbol implemented anywhere\n\n#CFLAGS += -finstrument-functions\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# common architecture-specific flags from the device-specific library makefile\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# configure CMSIS DSP Library\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# This is not the best place for these.  Really should abstract out\n\n# to the board file or something\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Debugging format.\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Place project-specific -D (define) and/or\n\n# -U options for C here.\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Declare all non-optional modules as built-in to force inclusion, strip off any appended varieties of module\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Place project-specific -D and/or -U options for\n\n# Assembler with preprocessor here.\n\n#ADEFS = -DUSE_IRQ_ASM_WRAPPER\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Compiler flag to set the C Standard level.\n\n# c89   - \"ANSI\" C\n\n# gnu89 - c89 plus GCC extensions\n\n# c99   - ISO C99 standard (not yet fully implemented)\n\n# gnu99 - c99 plus GCC extensions\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#-----\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Compiler flags.\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#  -g*:          generate debugging information\n\n#  -O*:          optimization level\n\n#  -f...:        tuning, see GCC manual and avr-libc documentation\n\n#  -Wall...:     warning level\n\n#  -Wa,...:      tell GCC to pass this to the assembler.\n\n#    -adhlns...: create assembler listing\n\n#\n\n# Flags for C and C++ (arm-elf-gcc/arm-elf-g++)\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Compiler flags to generate dependency files:\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# flags only for C\n\n#CONLYFLAGS += -Wnested-externs\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Assembler flags.\n\n#  -Wa,...:    tell GCC to pass this to the assembler.\n\n#  -ahlns:     create listing\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Linker flags.\n\n#  -Wl,...:     tell GCC to pass this to linker.\n\n#    -Map:      create map file\n\n#    --cref:    add cross reference to  map file\n",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#Linker scripts\n",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 32
    },
    "flight/targets/pipxtreme/fw/Makefile" : {
      "ObjectId" : "a5a1a56e87eca912f7050356c61b66a00011474e",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#####\n\n# Project: OpenPilot\n\n#\n\n#\n\n# Makefile for OpenPilot project build PiOS and the AP.\n\n#\n\n# The OpenPilot Team, http://www.openpilot.org, Copyright (C) 2009.\n\n# Tau Labs, http://taulabs.org, Copyright (C) 2013-2014\n\n# dRonin, http://dronin.org Copyright (C) 2015-2016\n\n#\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful, but\n\n# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n\n# for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along\n\n# with this program; if not, see <http://www.gnu.org/licenses/>\n\n#\n\n# Additional note on redistribution: The copyright and license notices above\n\n# must be maintained in each individual source file that is a derivative work\n\n# of this source file; otherwise redistribution is prohibited.\n\n#####\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Set developer code and compile options\n\n# Set to YES to compile for debugging\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Include objects that are just nice information to show\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Or just turn on all the above diagnostics. WARNING: This consumes massive amounts of memory.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set to YES to build a FW version that will erase all flash memory\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set to YES to use the Servo output pins for debugging via scope or logic analyser\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# List of modules to include\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Paths\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# List C source files here. (C dependencies are automatically generated.)\n\n# use file-extension c for \"c-only\"-files\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## OPENPILOT CORE:\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## PIOS Hardware (STM32F10x)\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# PIOS USB related files (seperated to make code maintenance more easy)\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## PIOS Hardware (Common)\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## Libraries for flight calculations\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "## Radio\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "## CMSIS for STM32\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# List C source files here which must be compiled in ARM-Mode (no -mthumb).\n\n# use file-extension c for \"c-only\"-files\n\n## just for testing, timer.c could be compiled in thumb-mode too\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# List C++ source files here.\n\n# use file-extension .cpp for C++-files (not .C)\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# List C++ source files here which must be compiled in ARM-Mode.\n\n# use file-extension .cpp for C++-files (not .C)\n\n#CPPSRCARM = $(TARGET).cpp\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# List Assembler source files here.\n\n# Make them always end in a capital .S. Files ending in a lowercase .s\n\n# will not be considered source files but generated files (assembler\n\n# output from the compiler), and will be deleted upon \"make clean\"!\n\n# Even though the DOS/Win* filesystem matches both .s and .S the same,\n\n# it will preserve the spelling of the filenames, and gcc itself does\n\n# care about how the name is spelled on its command-line.\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# List Assembler source files here which must be assembled in ARM-Mode..\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# List any extra directories to look for include files here.\n\n#    Each directory must be seperated by a space.\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# List any extra directories to look for library files here.\n\n# Also add directories where the linker should search for\n\n# includes from linker-script to the list\n\n#     Each directory must be seperated by a space.\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Extra Libraries\n\n#    Each library-name must be seperated by a space.\n\n#    i.e. to link with libxyz.a, libabc.a and libefsl.a:\n\n#    EXTRA_LIBS = xyz abc efsl\n\n# for newlib-lpc (file: libnewlibc-lpc.a):\n\n#    EXTRA_LIBS = newlib-lpc\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Path to Linker-Scripts\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Output format. (can be ihex or binary or both)\n\n#  binary to create a load-image in raw-binary format i.e. for SAM-BA,\n\n#  ihex to create a load-image in Intel hex format\n\n#LOADFORMAT = ihex\n\n#LOADFORMAT = binary\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Debugging format.\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Place project-specific -D (define) and/or\n\n# -U options for C here.\n\n#\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Declare all non-optional modules as built-in to force inclusion\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Place project-specific -D and/or -U options for\n\n# Assembler with preprocessor here.\n\n#ADEFS = -DUSE_IRQ_ASM_WRAPPER\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Compiler flag to set the C Standard level.\n\n# c89   - \"ANSI\" C\n\n# gnu89 - c89 plus GCC extensions\n\n# c99   - ISO C99 standard (not yet fully implemented)\n\n# gnu99 - c99 plus GCC extensions\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#-----\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Compiler flags.\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#  -g*:          generate debugging information\n\n#  -O*:          optimization level\n\n#  -f...:        tuning, see GCC manual and avr-libc documentation\n\n#  -Wall...:     warning level\n\n#  -Wa,...:      tell GCC to pass this to the assembler.\n\n#    -adhlns...: create assembler listing\n\n#\n\n# Flags for C and C++ (arm-elf-gcc/arm-elf-g++)\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#CFLAGS += -fno-cprop-registers -fno-defer-pop -fno-guess-branch-probability -fno-section-anchors\n\n#CFLAGS += -fno-if-conversion -fno-if-conversion2 -fno-ipa-pure-const -fno-ipa-reference -fno-merge-constants\n\n#CFLAGS += -fno-split-wide-types -fno-tree-ccp -fno-tree-ch -fno-tree-copy-prop -fno-tree-copyrename\n\n#CFLAGS += -fno-tree-dce -fno-tree-dominator-opts -fno-tree-dse -fno-tree-fre -fno-tree-sink -fno-tree-sra\n\n#CFLAGS += -fno-tree-ter\n\n#CFLAGS += -g$(DEBUGF) -DDEBUG\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Compiler flags to generate dependency files:\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# flags only for C\n\n#CONLYFLAGS += -Wnested-externs\n",
        "Line" : 281,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Assembler flags.\n\n#  -Wa,...:    tell GCC to pass this to the assembler.\n\n#  -ahlns:     create listing\n",
        "Line" : 285,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Linker flags.\n\n#  -Wl,...:     tell GCC to pass this to linker.\n\n#    -Map:      create map file\n\n#    --cref:    add cross reference to  map file\n",
        "Line" : 298,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Set linker-script name depending on selected submodel name\n",
        "Line" : 311,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 40
    },
    "flight/targets/playuavosd/fw/Makefile" : {
      "ObjectId" : "4edc9c0edd30b4f8ef03da34c309e37b0a82ab65",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\n\n# @file       Makefile\n\n# @author     The OpenPilot Team, http://www.openpilot.org, Copyright (C) 2009.\n\n# @author     Tau Labs, http://taulabs.org, Copyright (C) 2012-2013\n\n# @author     dRonin, http://dronin.org Copyright (C) 2015-2016\n\n#\n\n# @addtogroup\n\n# @{\n\n# @addtogroup\n\n# @{\n\n# @brief Makefile to build firmware for the PlayUAVOSD board.\n\n###############################################################################\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful, but\n\n# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n\n# for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along\n\n# with this program; if not, see <http://www.gnu.org/licenses/>\n\n#\n\n# Additional note on redistribution: The copyright and license notices above\n\n# must be maintained in each individual source file that is a derivative work\n\n# of this source file; otherwise redistribution is prohibited.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set developer code and compile options\n\n# Set to YES for debugging\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# List of modules to include\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Paths\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# optional component libraries\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# List C source files here. (C dependencies are automatically generated.)\n\n# use file-extension c for \"c-only\"-files\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## OPENPILOT CORE:\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## PIOS Hardware (STM32F4xx)\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# SRC += $(PIOS)/STM32F4xx/pios_video.c\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## PIOS Hardware (Common)\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# List C++ source files here.\n\n# use file-extension .cpp for C++-files (not .C)\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# List any extra directories to look for include files here.\n\n#    Each directory must be seperated by a space.\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Path to Linker-Scripts\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# debug (un)optimization, see gcc docs\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# finstrument-functions adds __cyg_profile_func_enter/exit to every function\n\n# we currently don't have that symbol implemented anywhere\n\n#CFLAGS += -finstrument-functions\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# common architecture-specific flags from the device-specific library makefile\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# configure CMSIS DSP Library\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Debugging format.\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Place project-specific -D (define) and/or\n\n# -U options for C here.\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Declare all non-optional modules as built-in to force inclusion, strip off any appended varieties of module\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Place project-specific -D and/or -U options for\n\n# Assembler with preprocessor here.\n\n#ADEFS = -DUSE_IRQ_ASM_WRAPPER\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Compiler flag to set the C Standard level.\n\n# c89   - \"ANSI\" C\n\n# gnu89 - c89 plus GCC extensions\n\n# c99   - ISO C99 standard (not yet fully implemented)\n\n# gnu99 - c99 plus GCC extensions\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#-----\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Compiler flags.\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#  -g*:          generate debugging information\n\n#  -O*:          optimization level\n\n#  -f...:        tuning, see GCC manual and avr-libc documentation\n\n#  -Wall...:     warning level\n\n#  -Wa,...:      tell GCC to pass this to the assembler.\n\n#    -adhlns...: create assembler listing\n\n#\n\n# Flags for C and C++ (arm-elf-gcc/arm-elf-g++)\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Compiler flags to generate dependency files:\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# flags only for C\n\n#CONLYFLAGS += -Wnested-externs\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Assembler flags.\n\n#  -Wa,...:    tell GCC to pass this to the assembler.\n\n#  -ahlns:     create listing\n",
        "Line" : 257,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Linker flags.\n\n#  -Wl,...:     tell GCC to pass this to linker.\n\n#    -Map:      create map file\n\n#    --cref:    add cross reference to  map file\n",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#Linker scripts\n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# @}\n\n# @}\n",
        "Line" : 282,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 31
    },
    "flight/targets/quanton/fw/Makefile" : {
      "ObjectId" : "21daa2684e6518ac5028ad97b9ea6240d5ab3fcd",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\n\n# @file       Makefile\n\n# @author     The OpenPilot Team, http://www.openpilot.org, Copyright (C) 2009.\n\n# @author     Tau Labs, http://taulabs.org, Copyright (C) 2012-2014\n\n# @author     dRonin, http://dronin.org Copyright (C) 2015-2016\n\n# @addtogroup\n\n# @{\n\n# @addtogroup\n\n# @{\n\n# @brief Makefile to build firmware for the Quanton board.\n\n###############################################################################\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful, but\n\n# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n\n# for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along\n\n# with this program; if not, see <http://www.gnu.org/licenses/>\n\n#\n\n# Additional note on redistribution: The copyright and license notices above\n\n# must be maintained in each individual source file that is a derivative work\n\n# of this source file; otherwise redistribution is prohibited.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set developer code and compile options\n\n# Set to YES for debugging\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# List of modules to include\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Paths\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# optional component libraries\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# List C source files here. (C dependencies are automatically generated.)\n\n# use file-extension c for \"c-only\"-files\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## OPENPILOT CORE:\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## PIOS Hardware (STM32F4xx)\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## PIOS Hardware (Common)\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# List C++ source files here.\n\n# use file-extension .cpp for C++-files (not .C)\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# List any extra directories to look for include files here.\n\n#    Each directory must be seperated by a space.\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# List any extra directories to look for library files here.\n\n# Also add directories where the linker should search for\n\n# includes from linker-script to the list\n\n#     Each directory must be seperated by a space.\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Extra Libraries\n\n#    Each library-name must be seperated by a space.\n\n#    i.e. to link with libxyz.a, libabc.a and libefsl.a:\n\n#    EXTRA_LIBS = xyz abc efsl\n\n# for newlib-lpc (file: libnewlibc-lpc.a):\n\n#    EXTRA_LIBS = newlib-lpc\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Path to Linker-Scripts\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# debug (un)optimization, see gcc docs\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# finstrument-functions adds __cyg_profile_func_enter/exit to every function\n\n# we currently don't have that symbol implemented anywhere\n\n#CFLAGS += -finstrument-functions\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# common architecture-specific flags from the device-specific library makefile\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# configure CMSIS DSP Library\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Debugging format.\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Place project-specific -D (define) and/or\n\n# -U options for C here.\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Declare all non-optional modules as built-in to force inclusion, strip off any appended varieties of module\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Place project-specific -D and/or -U options for\n\n# Assembler with preprocessor here.\n\n#ADEFS = -DUSE_IRQ_ASM_WRAPPER\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Compiler flag to set the C Standard level.\n\n# c89   - \"ANSI\" C\n\n# gnu89 - c89 plus GCC extensions\n\n# c99   - ISO C99 standard (not yet fully implemented)\n\n# gnu99 - c99 plus GCC extensions\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#-----\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Compiler flags.\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#  -g*:          generate debugging information\n\n#  -O*:          optimization level\n\n#  -f...:        tuning, see GCC manual and avr-libc documentation\n\n#  -Wall...:     warning level\n\n#  -Wa,...:      tell GCC to pass this to the assembler.\n\n#    -adhlns...: create assembler listing\n\n#\n\n# Flags for C and C++ (arm-elf-gcc/arm-elf-g++)\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Compiler flags to generate dependency files:\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# flags only for C\n\n#CONLYFLAGS += -Wnested-externs\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Assembler flags.\n\n#  -Wa,...:    tell GCC to pass this to the assembler.\n\n#  -ahlns:     create listing\n",
        "Line" : 257,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Linker flags.\n\n#  -Wl,...:     tell GCC to pass this to linker.\n\n#    -Map:      create map file\n\n#    --cref:    add cross reference to  map file\n",
        "Line" : 268,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#Linker scripts\n",
        "Line" : 279,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 31
    },
    "flight/targets/revolution/fw/Makefile" : {
      "ObjectId" : "a24c75234fa15f8c2039e5ec273f4584ccebb941",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\n\n# @file       Makefile\n\n# @author     The OpenPilot Team, http://www.openpilot.org, Copyright (C) 2012.\n\n# @author     Tau Labs, http://taulabs.org, Copyright (C) 2012-2014\n\n# @author     dRonin, http://dronin.org Copyright (C) 2015-2016\n\n# @addtogroup\n\n# @{\n\n# @addtogroup\n\n# @{\n\n# @brief Makefile to build firmware for the Revolution board.\n\n###############################################################################\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful, but\n\n# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n\n# for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along\n\n# with this program; if not, see <http://www.gnu.org/licenses/>\n\n#\n\n# Additional note on redistribution: The copyright and license notices above\n\n# must be maintained in each individual source file that is a derivative work\n\n# of this source file; otherwise redistribution is prohibited.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set developer code and compile options\n\n# Set to YES for debugging\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# List of modules to include\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Paths\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# optional component libraries\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# List C source files here. (C dependencies are automatically generated.)\n\n# use file-extension c for \"c-only\"-files\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## OPENPILOT CORE:\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## PIOS Hardware (STM32F4xx)\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## PIOS Hardware (Common)\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# List C source files here which must be compiled in ARM-Mode (no -mthumb).\n\n# use file-extension c for \"c-only\"-files\n\n## just for testing, timer.c could be compiled in thumb-mode too\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# List C++ source files here.\n\n# use file-extension .cpp for C++-files (not .C)\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# List C++ source files here which must be compiled in ARM-Mode.\n\n# use file-extension .cpp for C++-files (not .C)\n\n#CPPSRCARM = $(TARGET).cpp\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# List Assembler source files here.\n\n# Make them always end in a capital .S. Files ending in a lowercase .s\n\n# will not be considered source files but generated files (assembler\n\n# output from the compiler), and will be deleted upon \"make clean\"!\n\n# Even though the DOS/Win* filesystem matches both .s and .S the same,\n\n# it will preserve the spelling of the filenames, and gcc itself does\n\n# care about how the name is spelled on its command-line.\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# List Assembler source files here which must be assembled in ARM-Mode..\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# List any extra directories to look for include files here.\n\n#    Each directory must be seperated by a space.\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# List any extra directories to look for library files here.\n\n# Also add directories where the linker should search for\n\n# includes from linker-script to the list\n\n#     Each directory must be seperated by a space.\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Extra Libraries\n\n#    Each library-name must be seperated by a space.\n\n#    i.e. to link with libxyz.a, libabc.a and libefsl.a:\n\n#    EXTRA_LIBS = xyz abc efsl\n\n# for newlib-lpc (file: libnewlibc-lpc.a):\n\n#    EXTRA_LIBS = newlib-lpc\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Path to Linker-Scripts\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# debug (un)optimization, see gcc docs\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# finstrument-functions adds __cyg_profile_func_enter/exit to every function\n\n# we currently don't have that symbol implemented anywhere\n\n#CFLAGS += -finstrument-functions\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# common architecture-specific flags from the device-specific library makefile\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# configure CMSIS DSP Library\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# This is not the best place for these.  Really should abstract out\n\n# to the board file or something\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Output format. (can be ihex or binary or both)\n\n#  binary to create a load-image in raw-binary format i.e. for SAM-BA,\n\n#  ihex to create a load-image in Intel hex format\n\n#LOADFORMAT = ihex\n\n#LOADFORMAT = binary\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Debugging format.\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Place project-specific -D (define) and/or\n\n# -U options for C here.\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Declare all non-optional modules as built-in to force inclusion\n",
        "Line" : 243,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Place project-specific -D and/or -U options for\n\n# Assembler with preprocessor here.\n\n#ADEFS = -DUSE_IRQ_ASM_WRAPPER\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Compiler flag to set the C Standard level.\n\n# c89   - \"ANSI\" C\n\n# gnu89 - c89 plus GCC extensions\n\n# c99   - ISO C99 standard (not yet fully implemented)\n\n# gnu99 - c99 plus GCC extensions\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#-----\n",
        "Line" : 260,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Compiler flags.\n",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#  -g*:          generate debugging information\n\n#  -O*:          optimization level\n\n#  -f...:        tuning, see GCC manual and avr-libc documentation\n\n#  -Wall...:     warning level\n\n#  -Wa,...:      tell GCC to pass this to the assembler.\n\n#    -adhlns...: create assembler listing\n\n#\n\n# Flags for C and C++ (arm-elf-gcc/arm-elf-g++)\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Compiler flags to generate dependency files:\n",
        "Line" : 287,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# flags only for C\n\n#CONLYFLAGS += -Wnested-externs\n",
        "Line" : 290,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Assembler flags.\n\n#  -Wa,...:    tell GCC to pass this to the assembler.\n\n#  -ahlns:     create listing\n",
        "Line" : 294,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Linker flags.\n\n#  -Wl,...:     tell GCC to pass this to linker.\n\n#    -Map:      create map file\n\n#    --cref:    add cross reference to  map file\n",
        "Line" : 307,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#Linker scripts\n",
        "Line" : 320,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 37
    },
    "flight/targets/seppuku/fw/Makefile" : {
      "ObjectId" : "731a7b30f8aa9bb3b6818d08304336e1cd8bf99e",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\n\n# @file       Makefile\n\n# @author     The OpenPilot Team, http://www.openpilot.org, Copyright (C) 2009.\n\n# @author     Tau Labs, http://taulabs.org, Copyright (C) 2012-2014\n\n# @author     dRonin, http://dronin.org Copyright (C) 2015-2016\n\n# @addtogroup\n\n# @{\n\n# @addtogroup\n\n# @{\n\n# @brief Makefile to build firmware for the Seppuku board.\n\n###############################################################################\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful, but\n\n# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n\n# for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along\n\n# with this program; if not, see <http://www.gnu.org/licenses/>\n\n#\n\n# Additional note on redistribution: The copyright and license notices above\n\n# must be maintained in each individual source file that is a derivative work\n\n# of this source file; otherwise redistribution is prohibited.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set developer code and compile options\n\n# Set to YES for debugging\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# List of modules to include\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Paths\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# optional component libraries\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# List C source files here. (C dependencies are automatically generated.)\n\n# use file-extension c for \"c-only\"-files\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## OPENPILOT CORE:\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## PIOS Hardware (STM32F4xx)\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## PIOS Hardware (Common)\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# List C++ source files here.\n\n# use file-extension .cpp for C++-files (not .C)\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# List any extra directories to look for include files here.\n\n#    Each directory must be seperated by a space.\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# List any extra directories to look for library files here.\n\n# Also add directories where the linker should search for\n\n# includes from linker-script to the list\n\n#     Each directory must be seperated by a space.\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Extra Libraries\n\n#    Each library-name must be seperated by a space.\n\n#    i.e. to link with libxyz.a, libabc.a and libefsl.a:\n\n#    EXTRA_LIBS = xyz abc efsl\n\n# for newlib-lpc (file: libnewlibc-lpc.a):\n\n#    EXTRA_LIBS = newlib-lpc\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Path to Linker-Scripts\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# debug (un)optimization, see gcc docs\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# finstrument-functions adds __cyg_profile_func_enter/exit to every function\n\n# we currently don't have that symbol implemented anywhere\n\n#CFLAGS += -finstrument-functions\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# common architecture-specific flags from the device-specific library makefile\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# configure CMSIS DSP Library\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Debugging format.\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Place project-specific -D (define) and/or\n\n# -U options for C here.\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Declare all non-optional modules as built-in to force inclusion, strip off any appended varieties of module\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Place project-specific -D and/or -U options for\n\n# Assembler with preprocessor here.\n\n#ADEFS = -DUSE_IRQ_ASM_WRAPPER\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Compiler flag to set the C Standard level.\n\n# c89   - \"ANSI\" C\n\n# gnu89 - c89 plus GCC extensions\n\n# c99   - ISO C99 standard (not yet fully implemented)\n\n# gnu99 - c99 plus GCC extensions\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#-----\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Compiler flags.\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#  -g*:          generate debugging information\n\n#  -O*:          optimization level\n\n#  -f...:        tuning, see GCC manual and avr-libc documentation\n\n#  -Wall...:     warning level\n\n#  -Wa,...:      tell GCC to pass this to the assembler.\n\n#    -adhlns...: create assembler listing\n\n#\n\n# Flags for C and C++ (arm-elf-gcc/arm-elf-g++)\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Compiler flags to generate dependency files:\n",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# flags only for C\n\n#CONLYFLAGS += -Wnested-externs\n",
        "Line" : 261,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Assembler flags.\n\n#  -Wa,...:    tell GCC to pass this to the assembler.\n\n#  -ahlns:     create listing\n",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Linker flags.\n\n#  -Wl,...:     tell GCC to pass this to linker.\n\n#    -Map:      create map file\n\n#    --cref:    add cross reference to  map file\n",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#Linker scripts\n",
        "Line" : 288,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 31
    },
    "flight/targets/sparky/fw/Makefile" : {
      "ObjectId" : "e95aa0f37b1001901484b57346bc7ba478b5118e",
      "LastModified" : "2019-03-12T10:26:21Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\n\n# @file       Makefile\n\n# @author     Tau Labs, http://taulabs.org, Copyright (C) 2013-2014\n\n# @author     dRonin, http://dronin.org Copyright (C) 2015-2016\n\n# @addtogroup\n\n# @{\n\n# @addtogroup\n\n# @{\n\n# @brief Makefile to build firmware for Sparky.\n\n###############################################################################\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful, but\n\n# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n\n# for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along\n\n# with this program; if not, see <http://www.gnu.org/licenses/>\n\n#\n\n# Additional note on redistribution: The copyright and license notices above\n\n# must be maintained in each individual source file that is a derivative work\n\n# of this source file; otherwise redistribution is prohibited.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set developer code and compile options\n\n# Set to YES for debugging\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# List of modules to include\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Paths\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# optional component libraries\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# List C source files here. (C dependencies are automatically generated.)\n\n# use file-extension c for \"c-only\"-files\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## OPENPILOT CORE:\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## PIOS Hardware (STM32F30x)\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## PIOS Hardware (Common)\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# List C++ source files here.\n\n# use file-extension .cpp for C++-files (not .C)\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# List any extra directories to look for include files here.\n\n#    Each directory must be seperated by a space.\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# List any extra directories to look for library files here.\n\n# Also add directories where the linker should search for\n\n# includes from linker-script to the list\n\n#     Each directory must be seperated by a space.\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Extra Libraries\n\n#    Each library-name must be seperated by a space.\n\n#    i.e. to link with libxyz.a, libabc.a and libefsl.a:\n\n#    EXTRA_LIBS = xyz abc efsl\n\n# for newlib-lpc (file: libnewlibc-lpc.a):\n\n#    EXTRA_LIBS = newlib-lpc\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Path to Linker-Scripts\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# debug (un)optimization, see gcc docs\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# finstrument-functions adds __cyg_profile_func_enter/exit to every function\n\n# we currently don't have that symbol implemented anywhere\n\n#CFLAGS += -finstrument-functions\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# common architecture-specific flags from the device-specific library makefile\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# configure CMSIS DSP Library\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# This is not the best place for these.  Really should abstract out\n\n# to the board file or something\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Debugging format.\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Place project-specific -D (define) and/or\n\n# -U options for C here.\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Declare all non-optional modules as built-in to force inclusion, strip off any appended varieties of module\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Place project-specific -D and/or -U options for\n\n# Assembler with preprocessor here.\n\n#ADEFS = -DUSE_IRQ_ASM_WRAPPER\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Compiler flag to set the C Standard level.\n\n# c89   - \"ANSI\" C\n\n# gnu89 - c89 plus GCC extensions\n\n# c99   - ISO C99 standard (not yet fully implemented)\n\n# gnu99 - c99 plus GCC extensions\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#-----\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Compiler flags.\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#  -g*:          generate debugging information\n\n#  -O*:          optimization level\n\n#  -f...:        tuning, see GCC manual and avr-libc documentation\n\n#  -Wall...:     warning level\n\n#  -Wa,...:      tell GCC to pass this to the assembler.\n\n#    -adhlns...: create assembler listing\n\n#\n\n# Flags for C and C++ (arm-elf-gcc/arm-elf-g++)\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Compiler flags to generate dependency files:\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# flags only for C\n\n#CONLYFLAGS += -Wnested-externs\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Assembler flags.\n\n#  -Wa,...:    tell GCC to pass this to the assembler.\n\n#  -ahlns:     create listing\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Linker flags.\n\n#  -Wl,...:     tell GCC to pass this to linker.\n\n#    -Map:      create map file\n\n#    --cref:    add cross reference to  map file\n",
        "Line" : 257,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#Linker scripts\n",
        "Line" : 268,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 32
    },
    "flight/targets/sparky2/fw/Makefile" : {
      "ObjectId" : "4588079c8a726bd2ecc26bf5d24d5e6da60c8a20",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# @file       Makefile\n\n# @author     Tau Labs, http://taulabs.org, Copyright (C) 2012-2015\n\n# @author     dRonin, http://dronin.org Copyright (C) 2015-2016\n\n# @addtogroup\n\n# @{\n\n# @addtogroup\n\n# @{\n\n# @brief Makefile to build firmware for the Sparky2 board.\n\n###############################################################################\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful, but\n\n# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n\n# for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along\n\n# with this program; if not, see <http://www.gnu.org/licenses/>\n\n#\n\n# Additional note on redistribution: The copyright and license notices above\n\n# must be maintained in each individual source file that is a derivative work\n\n# of this source file; otherwise redistribution is prohibited.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set developer code and compile options\n\n# Set to YES for debugging\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# List of modules to include\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Paths\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# optional component libraries\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# List C source files here. (C dependencies are automatically generated.)\n\n# use file-extension c for \"c-only\"-files\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## OPENPILOT CORE:\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## PIOS Hardware (STM32F4xx)\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## PIOS Hardware (Common)\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# List C source files here which must be compiled in ARM-Mode (no -mthumb).\n\n# use file-extension c for \"c-only\"-files\n\n## just for testing, timer.c could be compiled in thumb-mode too\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# List C++ source files here.\n\n# use file-extension .cpp for C++-files (not .C)\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# List C++ source files here which must be compiled in ARM-Mode.\n\n# use file-extension .cpp for C++-files (not .C)\n\n#CPPSRCARM = $(TARGET).cpp\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# List Assembler source files here.\n\n# Make them always end in a capital .S. Files ending in a lowercase .s\n\n# will not be considered source files but generated files (assembler\n\n# output from the compiler), and will be deleted upon \"make clean\"!\n\n# Even though the DOS/Win* filesystem matches both .s and .S the same,\n\n# it will preserve the spelling of the filenames, and gcc itself does\n\n# care about how the name is spelled on its command-line.\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# List Assembler source files here which must be assembled in ARM-Mode..\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# List any extra directories to look for include files here.\n\n#    Each directory must be seperated by a space.\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# List any extra directories to look for library files here.\n\n# Also add directories where the linker should search for\n\n# includes from linker-script to the list\n\n#     Each directory must be seperated by a space.\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Extra Libraries\n\n#    Each library-name must be seperated by a space.\n\n#    i.e. to link with libxyz.a, libabc.a and libefsl.a:\n\n#    EXTRA_LIBS = xyz abc efsl\n\n# for newlib-lpc (file: libnewlibc-lpc.a):\n\n#    EXTRA_LIBS = newlib-lpc\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Path to Linker-Scripts\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# debug (un)optimization, see gcc docs\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# finstrument-functions adds __cyg_profile_func_enter/exit to every function\n\n# we currently don't have that symbol implemented anywhere\n\n#CFLAGS += -finstrument-functions\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# common architecture-specific flags from the device-specific library makefile\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# configure CMSIS DSP Library\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# This is not the best place for these.  Really should abstract out\n\n# to the board file or something\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Output format. (can be ihex or binary or both)\n\n#  binary to create a load-image in raw-binary format i.e. for SAM-BA,\n\n#  ihex to create a load-image in Intel hex format\n\n#LOADFORMAT = ihex\n\n#LOADFORMAT = binary\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Debugging format.\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Place project-specific -D (define) and/or\n\n# -U options for C here.\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Declare all non-optional modules as built-in to force inclusion\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Place project-specific -D and/or -U options for\n\n# Assembler with preprocessor here.\n\n#ADEFS = -DUSE_IRQ_ASM_WRAPPER\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Compiler flag to set the C Standard level.\n\n# c89   - \"ANSI\" C\n\n# gnu89 - c89 plus GCC extensions\n\n# c99   - ISO C99 standard (not yet fully implemented)\n\n# gnu99 - c99 plus GCC extensions\n",
        "Line" : 251,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#-----\n",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Compiler flags.\n",
        "Line" : 260,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#  -g*:          generate debugging information\n\n#  -O*:          optimization level\n\n#  -f...:        tuning, see GCC manual and avr-libc documentation\n\n#  -Wall...:     warning level\n\n#  -Wa,...:      tell GCC to pass this to the assembler.\n\n#    -adhlns...: create assembler listing\n\n#\n\n# Flags for C and C++ (arm-elf-gcc/arm-elf-g++)\n",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Compiler flags to generate dependency files:\n",
        "Line" : 285,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# flags only for C\n\n#CONLYFLAGS += -Wnested-externs\n",
        "Line" : 288,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Assembler flags.\n\n#  -Wa,...:    tell GCC to pass this to the assembler.\n\n#  -ahlns:     create listing\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Linker flags.\n\n#  -Wl,...:     tell GCC to pass this to linker.\n\n#    -Map:      create map file\n\n#    --cref:    add cross reference to  map file\n",
        "Line" : 305,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#Linker scripts\n",
        "Line" : 318,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 37
    },
    "flight/targets/sprf3e/fw/Makefile" : {
      "ObjectId" : "286b7b5eae16fd79fb2ecafa1c55fca1fb9906b2",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\n\n# @file       Makefile\n\n# @author     Tau Labs, http://taulabs.org, Copyright (C) 2013-2014\n\n# @author     dRonin, http://dRonin.org/, Copyright (C) 2016\n\n# @addtogroup\n\n# @{\n\n# @addtogroup\n\n# @{\n\n# @brief Makefile to build firmware for SP Racing F3 Evo.\n\n###############################################################################\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful, but\n\n# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n\n# for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along\n\n# with this program; if not, see <http://www.gnu.org/licenses/>\n\n#\n\n# Additional note on redistribution: The copyright and license notices above\n\n# must be maintained in each individual source file that is a derivative work\n\n# of this source file; otherwise redistribution is prohibited.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set developer code and compile options\n\n# Set to YES for debugging\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# List of modules to include\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#OPTMODULES += UAVOMavlinkBridge\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#OPTMODULES += UAVOLighttelemetryBridge\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#OPTMODULES += UAVOHoTTBridge\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Paths\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# optional component libraries\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# List C source files here. (C dependencies are automatically generated.)\n\n# use file-extension c for \"c-only\"-files\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## OPENPILOT CORE:\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## PIOS Hardware (STM32F30x)\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## PIOS Hardware (Common)\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# List C++ source files here.\n\n# use file-extension .cpp for C++-files (not .C)\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# List any extra directories to look for include files here.\n\n#    Each directory must be seperated by a space.\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# List any extra directories to look for library files here.\n\n# Also add directories where the linker should search for\n\n# includes from linker-script to the list\n\n#     Each directory must be seperated by a space.\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Extra Libraries\n\n#    Each library-name must be seperated by a space.\n\n#    i.e. to link with libxyz.a, libabc.a and libefsl.a:\n\n#    EXTRA_LIBS = xyz abc efsl\n\n# for newlib-lpc (file: libnewlibc-lpc.a):\n\n#    EXTRA_LIBS = newlib-lpc\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Path to Linker-Scripts\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# debug (un)optimization, see gcc docs\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# finstrument-functions adds __cyg_profile_func_enter/exit to every function\n\n# we currently don't have that symbol implemented anywhere\n\n#CFLAGS += -finstrument-functions\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# common architecture-specific flags from the device-specific library makefile\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# configure CMSIS DSP Library\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# This is not the best place for these.  Really should abstract out\n\n# to the board file or something\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Debugging format.\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Place project-specific -D (define) and/or\n\n# -U options for C here.\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Declare all non-optional modules as built-in to force inclusion, strip off any appended varieties of module\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Place project-specific -D and/or -U options for\n\n# Assembler with preprocessor here.\n\n#ADEFS = -DUSE_IRQ_ASM_WRAPPER\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Compiler flag to set the C Standard level.\n\n# c89   - \"ANSI\" C\n\n# gnu89 - c89 plus GCC extensions\n\n# c99   - ISO C99 standard (not yet fully implemented)\n\n# gnu99 - c99 plus GCC extensions\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#-----\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Compiler flags.\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#  -g*:          generate debugging information\n\n#  -O*:          optimization level\n\n#  -f...:        tuning, see GCC manual and avr-libc documentation\n\n#  -Wall...:     warning level\n\n#  -Wa,...:      tell GCC to pass this to the assembler.\n\n#    -adhlns...: create assembler listing\n\n#\n\n# Flags for C and C++ (arm-elf-gcc/arm-elf-g++)\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Compiler flags to generate dependency files:\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# flags only for C\n\n#CONLYFLAGS += -Wnested-externs\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Assembler flags.\n\n#  -Wa,...:    tell GCC to pass this to the assembler.\n\n#  -ahlns:     create listing\n",
        "Line" : 254,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Linker flags.\n\n#  -Wl,...:     tell GCC to pass this to linker.\n\n#    -Map:      create map file\n\n#    --cref:    add cross reference to  map file\n",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#Linker scripts\n",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 35
    },
    "flight/tests/coordinate_conversions/Makefile" : {
      "ObjectId" : "4ddcef4533bcd637e4e727199f89295a0b319a38",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\n\n# @file       Makefile\n\n# @author     Tau Labs, http://taulabs.org, Copyright (C) 2013\n\n# @addtogroup \n\n# @{\n\n# @addtogroup \n\n# @{\n\n# @brief Makefile for unit test\n\n###############################################################################\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful, but\n\n# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n\n# for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along\n\n# with this program; if not, see <http://www.gnu.org/licenses/>\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "flight/tests/dsm/Makefile" : {
      "ObjectId" : "58a7338cbe7566cad68f6c25942e407a0b2ce3ad",
      "LastModified" : "2019-03-12T10:26:21Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\n\n# @file       Makefile\n\n# @author     Tau Labs, http://taulabs.org, Copyright (C) 2012-2013\n\n# @addtogroup \n\n# @{\n\n# @addtogroup \n\n# @{\n\n# @brief Makefile for unit test\n\n###############################################################################\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful, but\n\n# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n\n# for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along\n\n# with this program; if not, see <http://www.gnu.org/licenses/>\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "flight/tests/logfs/Makefile" : {
      "ObjectId" : "e924f6566a81d21e38eba86027e3ea434f05f7b8",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\n\n# @file       Makefile\n\n# @author     Tau Labs, http://taulabs.org, Copyright (C) 2012-2013\n\n# @addtogroup \n\n# @{\n\n# @addtogroup \n\n# @{\n\n# @brief Makefile for unit test\n\n###############################################################################\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful, but\n\n# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n\n# for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along\n\n# with this program; if not, see <http://www.gnu.org/licenses/>\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "flight/tests/misc_math/Makefile" : {
      "ObjectId" : "bd6d45c9c80e17f62ac89da20cba0336a9978cd5",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\n\n# @file       Makefile\n\n# @author     Tau Labs, http://taulabs.org, Copyright (C) 2013\n\n# @addtogroup \n\n# @{\n\n# @addtogroup \n\n# @{\n\n# @brief Makefile for unit test\n\n###############################################################################\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful, but\n\n# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n\n# for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along\n\n# with this program; if not, see <http://www.gnu.org/licenses/>\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "flight/tests/timeutils/Makefile" : {
      "ObjectId" : "43b908dce5deacc0a9e77a44d8058fe17e883a8a",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###############################################################################\n\n# @file       Makefile\n\n# @author     Tau Labs, http://taulabs.org, Copyright (C) 2013\n\n# @addtogroup \n\n# @{\n\n# @addtogroup \n\n# @{\n\n# @brief Makefile for unit test\n\n###############################################################################\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 3 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful, but\n\n# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n\n# for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along\n\n# with this program; if not, see <http://www.gnu.org/licenses/>\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "flight/uavobjectlib/Makefile" : {
      "ObjectId" : "dba204ee68f4360b56d7cfd14c0417394bf5dbeb",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# make the build output a bit nicer\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# List C source files here. (C dependencies are automatically generated.)\n\n# use file-extension c for \"c-only\"-files\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Compiler flags to generate dependency files:\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Linker flags.\n\n#  -Wl,...:     tell GCC to pass this to linker.\n\n#    -Map:      create map file\n\n#    --cref:    add cross reference to  map file\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "ground/gcs/copydata.pro" : {
      "ObjectId" : "a5b973f833da5d06e51a72c62e64fe8323bbd706",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Copy Qt runtime libraries into the build directory (to run or package)\r\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Windows release only, no debug target DLLs ending with 'd'\r\n",
        "Line" : 6,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# copy SDL - Simple DirectMedia Layer (www.libsdl.org)\r\n\n# Check the wiki for SDL installation, it should be copied first\r\n\n# (make sure that the Qt installation path below is correct)\r\n\n#\r\n\n# - For qt-sdk-win-opensource-2010.05.exe:\r\n\n#   xcopy /s /e <SDL>\\bin\\SDL.dll   C:\\Qt\\2010.05\\mingw\\bin\\SDL.dll\r\n\n#   xcopy /s /e <SDL>\\include\\SDL\\* C:\\Qt\\2010.05\\mingw\\include\\SDL\r\n\n#   xcopy /s /e <SDL>\\lib\\*         C:\\Qt\\2010.05\\mingw\\lib\r\n\n#\r\n\n# - For Qt_SDK_Win_offline_v1_1_1_en.exe:\r\n\n#   xcopy /s /e <SDL>\\bin\\SDL.dll   C:\\QtSDK\\Desktop\\Qt\\4.7.3\\mingw\\bin\\SDL.dll\r\n\n#   xcopy /s /e <SDL>\\include\\SDL\\* C:\\QtSDK\\Desktop\\Qt\\4.7.3\\mingw\\include\\SDL\r\n\n#   xcopy /s /e <SDL>\\lib\\*         C:\\QtSDK\\Desktop\\Qt\\4.7.3\\mingw\\lib\r\n",
        "Line" : 10,
        "CharPositionInLine" : 12
      },
      "3" : {
        "Text" : "# copy OpenSSL DLLs\r\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Copy KML libraries\r\n",
        "Line" : 46,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Copy extra binary library files\r\n",
        "Line" : 50,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 6
    },
    "ground/gcs/gcs.pri" : {
      "ObjectId" : "af2ca6844d532df5854254951422e37cfe23cd17",
      "LastModified" : "2019-03-25T07:14:59Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# For use in custom compilers which just copy files\r\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#ideally, we would want a qmake.conf patch, but this does the trick...\r\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# FIXME\r\n",
        "Line" : 88,
        "CharPositionInLine" : 38
      },
      "3" : {
        "Text" : "# Include path to shared API directory\r\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# DEFINES += QT_NO_CAST_FROM_ASCII\r\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#DEFINES += QT_USE_FAST_OPERATOR_PLUS\r\n\n#DEFINES += QT_USE_FAST_CONCATENATION\r\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# include additional information in debug log (file/line/function)\r\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Bail out on non-selfcontained libraries. Just a security measure\r\n\n# to prevent checking in code that does not compile on other platforms.\r\n",
        "Line" : 128,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# http://gcc.gnu.org/bugzilla/show_bug.cgi?id=52991\r\n",
        "Line" : 134,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# check unhandled enum cases in switch statements (if no default case), matches GCC/clang\r\n",
        "Line" : 136,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# use ISO C++ (no GNU extensions) to ensure maximum portability\r\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# generate debug info for:\r\n\n# a) debugging release builds with a native debugger\r\n\n# b) generating breakpad symbols for use with crashreporter\r\n\n# packaging scripts should deal with this appropriately (e.g. split it off into a separate package)\r\n",
        "Line" : 156,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 12
    },
    "ground/gcs/gcs.pro" : {
      "ObjectId" : "57e227a213a464b1dea519e6255eecf26e5d9abf",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/gcsversioninfo.pri" : {
      "ObjectId" : "10f5857ca5bdf058f8ab92aea8e8aceb9e56a493",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#\n\n# This qmake file generates a header with the GCS version info string.\n\n#\n\n# This is a bit hacky but QMake seems to have some kind of bug that prevents this working\n\n# with a target instead (the deps always end up with a relative path and the rule an absolute path or vice-versa, they don't match up)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# these run once while Qmake is reading pro files rather than later during the actual build\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "ground/gcs/share/share.pro" : {
      "ObjectId" : "594e86ea8fd58c0ee03db7b7c02f218947f5600f",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/share/translations/translations.pro" : {
      "ObjectId" : "2f4dff6cbb03e1f96cc5f323f5f8fbbadef5c8ea",
      "LastModified" : "2019-03-25T07:14:59Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# var, prepend, append\r\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ground/gcs/src/app/app.pro" : {
      "ObjectId" : "f9ece39b904b70bfd5f79da26904e90fdbf24f78",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# set stack size to 8mb, default is 1mb (vs. 8mb for main thread on osx and linux)\n",
        "Line" : 29,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 1
    },
    "ground/gcs/src/crashreporterapp/crashreporterapp.pro" : {
      "ObjectId" : "a98e33b18941491f278590bc46838fb7945c5608",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# TODO: should really use the GCS revision rather than crashreporterapp\n\n# (it is possible to build it seperately, then the results are misleading)\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ground/gcs/src/gcslibrary.pri" : {
      "ObjectId" : "a6dd091ef61d3ba41e404590b74e87c03b523880",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# copy pdb for breakpad and/or release debugging\r\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ground/gcs/src/gcsplugin.pri" : {
      "ObjectId" : "f93e30c8f8bceebed1402cdb5b0580107b14e1eb",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# all plugins need to link extensionsystem\r\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# copy the plugin spec\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# need to support that for external plugins\r\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#do the rpath by hand since it's not possible to use ORIGIN in QMAKE_RPATHDIR\r\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "ground/gcs/src/libs/aggregation/aggregation.pri" : {
      "ObjectId" : "fc6ddc81f54751e20c0a3567e7c9e6aee04362cf",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/libs/aggregation/aggregation.pro" : {
      "ObjectId" : "dc2c2159b0856262025009a9f0049f7474f4461e",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/libs/aggregation/examples/examples.pro" : {
      "ObjectId" : "7389255366d8a4086efdca0eeebad6a3314c00c8",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/libs/aggregation/examples/text/text.pro" : {
      "ObjectId" : "3893c5e95f63a9d9d4f6b1fb048061e73180386e",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/libs/eigen/Eigen/CMakeLists.txt" : {
      "ObjectId" : "9eb502b792d4a9607e2d323f2d8114939b43c209",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/libs/eigen/eigen.pri" : {
      "ObjectId" : "5b30b5bdd4de2b3dae1a2353d5a9810fe9fc1819",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# work around Eigen's abuse of enums to allow compiling with recent compilers\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ground/gcs/src/libs/extensionsystem/extensionsystem.pri" : {
      "ObjectId" : "4c7641b9cb46866e0be9238e07739ca0a417f498",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/libs/extensionsystem/extensionsystem.pro" : {
      "ObjectId" : "cb6d477d8f0c7fb3cdbd397a22bb4e089c9c4f56",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/libs/extensionsystem/extensionsystem_dependencies.pri" : {
      "ObjectId" : "63b2e339a3688c3d8fc2c446f9c0a03088b9e7b4",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/libs/extensionsystem/test/auto/auto.pro" : {
      "ObjectId" : "2dd640021271b2c935ce5b5713561bf059b6d4b8",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/libs/extensionsystem/test/auto/pluginmanager/circularplugins/circularplugins.pro" : {
      "ObjectId" : "21f257cf083f0f281d5e992498d632a30a5d3c96",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/libs/extensionsystem/test/auto/pluginmanager/circularplugins/plugin1/plugin1.pro" : {
      "ObjectId" : "4181188287f4d0f214df617c509494a627908cd7",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/libs/extensionsystem/test/auto/pluginmanager/circularplugins/plugin2/plugin2.pro" : {
      "ObjectId" : "58798b54f14110c8e0c982aa541c2430bd0dc5c4",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/libs/extensionsystem/test/auto/pluginmanager/circularplugins/plugin3/plugin3.pro" : {
      "ObjectId" : "f601f06162c5e865d5c14df01568a1429ed9d896",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/libs/extensionsystem/test/auto/pluginmanager/correctplugins1/correctplugins1.pro" : {
      "ObjectId" : "f0d76950e86724e5cca9a14076d37af586150ffc",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/libs/extensionsystem/test/auto/pluginmanager/correctplugins1/plugin1/plugin1.pro" : {
      "ObjectId" : "9101770f9ac0ac18250ccff682af63737893df55",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/libs/extensionsystem/test/auto/pluginmanager/correctplugins1/plugin2/plugin2.pro" : {
      "ObjectId" : "a80f4a5c76534d8580e594f040c78dc9af0bd7f8",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/libs/extensionsystem/test/auto/pluginmanager/correctplugins1/plugin3/plugin3.pro" : {
      "ObjectId" : "c5ff581b1badd8e3c3c951501dc69d0dedc357f8",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/libs/extensionsystem/test/auto/pluginmanager/pluginmanager.pro" : {
      "ObjectId" : "57b026f5fb84a5671c443a1ee5b794c7cfacd0f2",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/libs/extensionsystem/test/auto/pluginmanager/test.pro" : {
      "ObjectId" : "c5934b1331c1d08ef477002b72db90540bd8746e",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "######################################################################\n\n# Automatically generated by qmake (2.01a) Fr Jul 27 23:12:52 2007\n\n######################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Input\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "ground/gcs/src/libs/extensionsystem/test/auto/pluginspec/pluginspec.pro" : {
      "ObjectId" : "d4b941b2320910f5770e49a42938e6d4b8aba350",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/libs/extensionsystem/test/auto/pluginspec/test.pro" : {
      "ObjectId" : "d8fda889176a58f4befd52a7dfe07cada81bdfdc",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Input\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ground/gcs/src/libs/extensionsystem/test/auto/pluginspec/testplugin/testplugin.pro" : {
      "ObjectId" : "8b4d81a82ad3245a1af003af44d4b86374500820",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/libs/extensionsystem/test/extensionsystem_test.pri" : {
      "ObjectId" : "6ad874add3ef2f4b1581aec8b82ee9ef173207f4",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/libs/extensionsystem/test/manual/manual.pro" : {
      "ObjectId" : "829f2fce57961bc7cf008a8bc6a7c39401e70632",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/libs/extensionsystem/test/manual/pluginview/plugins/plugin1/plugin1.pro" : {
      "ObjectId" : "9101770f9ac0ac18250ccff682af63737893df55",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/libs/extensionsystem/test/manual/pluginview/plugins/plugin2/plugin2.pro" : {
      "ObjectId" : "a80f4a5c76534d8580e594f040c78dc9af0bd7f8",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/libs/extensionsystem/test/manual/pluginview/plugins/plugin3/plugin3.pro" : {
      "ObjectId" : "c5ff581b1badd8e3c3c951501dc69d0dedc357f8",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/libs/extensionsystem/test/manual/pluginview/plugins/plugins.pro" : {
      "ObjectId" : "f0d76950e86724e5cca9a14076d37af586150ffc",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/libs/extensionsystem/test/manual/pluginview/pluginview.pro" : {
      "ObjectId" : "8527b82c47c3fc5858806d0db9bd29fe226ae387",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/libs/extensionsystem/test/manual/pluginview/test.pro" : {
      "ObjectId" : "4b9cd21d8ad556f70b6de8f0d2ef5ad1612e1fff",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Input\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ground/gcs/src/libs/extensionsystem/test/test.pro" : {
      "ObjectId" : "471ea892f1f815c99bcdfabf6f81a11bdcd841d0",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/libs/glc_lib/glc_lib.pri" : {
      "ObjectId" : "1e88a0ace1c2b48333c76035bf806fd3f6814fdb",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/libs/glc_lib/glc_lib.pro" : {
      "ObjectId" : "2c91714318dc096f0b86fdf7f780e1086e237e61",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#VERSION = 2.2.0\r\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# disable all warnings (no need for warnings as glc sources are imported)\r\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Input\t\t\t\t\t\r\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Windows compilation configuration\r\n",
        "Line" : 314,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# install header\r\n",
        "Line" : 317,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Linux and macx install configuration\r\n",
        "Line" : 421,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Location of HEADERS and library\r\n",
        "Line" : 423,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Adds a -P to preserve link\r\n",
        "Line" : 426,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Windows Install configuration\r\n",
        "Line" : 442,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Location of HEADERS and library\r\n",
        "Line" : 444,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# install library\r\n",
        "Line" : 473,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# \"make install\" configuration options\r\n",
        "Line" : 476,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# workaround to avoid target being added a second time due to ../../gcslibrary.pri\r\n",
        "Line" : 481,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "ground/gcs/src/libs/juavobjects/build.xml" : {
      "ObjectId" : "79f599808a26a424b0c1b3197c60a94055a858e7",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "ANT",
      "CommentCount" : 0
    },
    "ground/gcs/src/libs/juavtalk/build.xml" : {
      "ObjectId" : "f9ec55d5bec69e5ed11ae8c7e4fd09a51b71d0e0",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "ANT",
      "CommentCount" : 0
    },
    "ground/gcs/src/libs/libcrashreporter-qt/libcrashreporter-qt.pri" : {
      "ObjectId" : "6a34709efcc8537b0a155c45d7776f0a95d7ceda",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/libs/libcrashreporter-qt/libcrashreporter-qt.pro" : {
      "ObjectId" : "bd93b0da184508e55d9717a20b4f1ec22bd7dc34",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/libs/libs.pro" : {
      "ObjectId" : "b229d7c352392be41ba7be6d15c36bb9beb61a73",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/libs/qscispinbox/qscispinbox.pri" : {
      "ObjectId" : "85cd572533f2035808257cf0723fe45e9f54e9a0",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/libs/qscispinbox/qscispinbox.pro" : {
      "ObjectId" : "816520a9708f02d835b5ea05f22f3d72df1f65ad",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/libs/quazip/quazip.pri" : {
      "ObjectId" : "5eaa7b8bfd429df02245538aaafaec40356edf6a",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/libs/quazip/quazip.pro" : {
      "ObjectId" : "d2058a7e1efcc6770fdd2962ae41b1ec6209b802",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# The ABI version.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# 1.0.0 is the first stable ABI.\n\n# The next binary incompatible change will be 2.0.0 and so on.\n\n# The existing QuaZIP policy on changing ABI requires to bump the\n\n# major version of QuaZIP itself as well. Note that there may be\n\n# other reasons for chaging the major version of QuaZIP, so\n\n# in case where there is a QuaZIP major version bump but no ABI change,\n\n# the VERSION variable will stay the same.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For example:\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# QuaZIP 1.0 is released after some 0.x, keeping binary compatibility.\n\n# VERSION stays 1.0.0.\n\n# Then some binary incompatible change is introduced. QuaZIP goes up to\n\n# 2.0, VERSION to 2.0.0.\n\n# And so on.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This one handles dllimport/dllexport directives.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# You'll need to define this one manually if using a build system other\n\n# than qmake or using QuaZIP sources directly in your project.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Input\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#    INSTALLS += headers target\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#    INSTALLS += headers target\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# workaround for qdatetime.h macro bug\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 10
    },
    "ground/gcs/src/libs/qwt/qwt.pri" : {
      "ObjectId" : "a13ca9afe533c35ef922db39dafdfc8704c29e28",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/libs/qwt/qwt.pro" : {
      "ObjectId" : "ed7d6519f50050a53046f01de9d0e46fa59b8f4c",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "################################################################\n\n# Qwt Widget Library\n\n# Copyright (C) 1997   Josef Wilgen\n\n# Copyright (C) 2002   Uwe Rathmann\n\n#\n\n# This library is free software; you can redistribute it and/or\n\n# modify it under the terms of the Qwt License, Version 1.0\n\n################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ground/gcs/src/libs/qwt/qwtconfig.pri" : {
      "ObjectId" : "4ba8e410357c6d5d95cebdf3a48f306c1fe79620",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "################################################################\n\n# Qwt Widget Library\n\n# Copyright (C) 1997   Josef Wilgen\n\n# Copyright (C) 2002   Uwe Rathmann\n\n#\n\n# This library is free software; you can redistribute it and/or\n\n# modify it under the terms of the Qwt License, Version 1.0\n\n################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#QWT_VER_MAJ      = 6\n\n#QWT_VER_MIN      = 1\n\n#QWT_VER_PAT      = 2\n\n#QWT_VERSION      = $${QWT_VER_MAJ}.$${QWT_VER_MIN}.$${QWT_VER_PAT}\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "######################################################################\n\n# Install paths\n\n######################################################################\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Remove QWT install paths. Use our own.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "######################################################################\n\n# Designer plugin\n\n# creator/designer load designer plugins from certain default\n\n# directories ( f.e the path below QT_INSTALL_PREFIX ) and the \n\n# directories listed in the QT_PLUGIN_PATH environment variable.\n\n# When using the path below QWT_INSTALL_PREFIX you need to\n\n# add $${QWT_INSTALL_PREFIX}/plugins to QT_PLUGIN_PATH in the \n\n# runtime environment of designer/creator.\n\n######################################################################\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# QWT_INSTALL_PLUGINS   = $${QWT_INSTALL_PREFIX}/plugins/designer\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# linux distributors often organize the Qt installation\n\n# their way and QT_INSTALL_PREFIX doesn't offer a good\n\n# path. Also QT_INSTALL_PREFIX is only one of the default\n\n# search paths of the designer - not the Qt creator\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# QWT_INSTALL_PLUGINS   = $$[QT_INSTALL_PREFIX]/plugins/designer\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "######################################################################\n\n# Features\n\n# When building a Qwt application with qmake you might want to load\n\n# the compiler/linker flags, that are required to build a Qwt application\n\n# from qwt.prf. Therefore all you need to do is to add \"CONFIG += qwt\" \n\n# to your project file and take care, that qwt.prf can be found by qmake.\n\n# ( see http://doc.trolltech.com/4.7/qmake-advanced-usage.html#adding-new-configuration-features )\n\n# I recommend not to install the Qwt features together with the\n\n# Qt features, because you will have to reinstall the Qwt features,\n\n# with every Qt upgrade. \n\n######################################################################\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# QWT_INSTALL_FEATURES  = $${QWT_INSTALL_PREFIX}/features\n\n# QWT_INSTALL_FEATURES  = $$[QT_INSTALL_PREFIX]/features\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "######################################################################\n\n# Build the static/shared libraries.\n\n# If QwtDll is enabled, a shared library is built, otherwise\n\n# it will be a static library.\n\n######################################################################\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "######################################################################\n\n# QwtPlot enables all classes, that are needed to use the QwtPlot \n\n# widget. \n\n######################################################################\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "######################################################################\n\n# QwtWidgets enables all classes, that are needed to use the all other\n\n# widgets (sliders, dials, ...), beside QwtPlot. \n\n######################################################################\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "######################################################################\n\n# If you want to display svg images on the plot canvas, or\n\n# export a plot to a SVG document\n\n######################################################################\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "######################################################################\n\n# If you want to use a OpenGL plot canvas\n\n######################################################################\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# QWT_CONFIG     += QwtOpenGL\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "######################################################################\n\n# You can use the MathML renderer of the Qt solutions package to \n\n# enable MathML support in Qwt. Because of license implications\n\n# the ( modified ) code of the MML Widget solution is included and\n\n# linked together with the QwtMathMLTextEngine into an own library. \n\n# To use it you will have to add \"CONFIG += qwtmathml\"\n\n# to your qmake project file.\n\n######################################################################\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "######################################################################\n\n# If you want to build the Qwt designer plugin, \n\n# enable the line below.\n\n# Otherwise you have to build it from the designer directory.\n\n######################################################################\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#QWT_CONFIG     += QwtDesigner\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "######################################################################\n\n# Compile all Qwt classes into the designer plugin instead\n\n# of linking it against the shared Qwt library. Has no effect\n\n# when QwtDesigner or QwtDll are not both enabled.\n\n#\n\n# On systems where rpath is supported ( all Unixoids ) the \n\n# location of the installed Qwt library is compiled into the plugin,\n\n# but on Windows it might be easier to have a self contained\n\n# plugin to avoid any hassle with configuring the runtime\n\n# environment of the designer/creator.\n\n######################################################################\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#    QWT_CONFIG     += QwtDesignerSelfContained\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "######################################################################\n\n# If you want to auto build the examples, enable the line below\n\n# Otherwise you have to build them from the examples directory.\n\n######################################################################\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# QWT_CONFIG     += QwtExamples\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "######################################################################\n\n# The playground is primarily intended for the Qwt development \n\n# to explore and test new features. Nevertheless you might find\n\n# ideas or code snippets that help for application development\n\n# If you want to auto build the applications in playground, enable \n\n# the line below.\n\n# Otherwise you have to build them from the playground directory.\n\n######################################################################\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# QWT_CONFIG     += QwtPlayground\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "######################################################################\n\n# When Qt has been built as framework qmake wants \n\n# to link frameworks instead of regular libs\n\n######################################################################\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#    QWT_CONFIG += QwtFramework\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "######################################################################\n\n# Create and install pc files for pkg-config\n\n# See http://www.freedesktop.org/wiki/Software/pkg-config/\n\n######################################################################\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#    QWT_CONFIG     += QwtPkgConfig\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 29
    },
    "ground/gcs/src/libs/qwt/src/src.pri" : {
      "ObjectId" : "65d79a397eb5c0661e2acfd3261a37b623802a01",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "################################################################\n\n# Qwt Widget Library\n\n# Copyright (C) 1997   Josef Wilgen\n\n# Copyright (C) 2002   Uwe Rathmann\n\n#\n\n# This library is free software; you can redistribute it and/or\n\n# modify it under the terms of the Qwt License, Version 1.0\n\n################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ground/gcs/src/libs/qwt/src/src.pro" : {
      "ObjectId" : "375ccbcd98c7b8eeaf85ade12222fb7bcd699e13",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "################################################################\n\n# Qwt Widget Library\n\n# Copyright (C) 1997   Josef Wilgen\n\n# Copyright (C) 2002   Uwe Rathmann\n\n#\n\n# This library is free software; you can redistribute it and/or\n\n# modify it under the terms of the Qwt License, Version 1.0\n\n################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# qmake project file for building the qwt libraries\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# there is no QMAKE_PKGCONFIG_FILE fo Qt4\n",
        "Line" : 75,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 3
    },
    "ground/gcs/src/libs/qwt/textengines/mathml/mathml.pro" : {
      "ObjectId" : "70323660ba0e759e7c22ff9d5495bdbcd47aeaa7",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "################################################################\n\n# Qwt Widget Library\n\n# Copyright (C) 1997   Josef Wilgen\n\n# Copyright (C) 2002   Uwe Rathmann\n\n#\n\n# This library is free software; you can redistribute it and/or\n\n# modify it under the terms of the Qwt License, Version 1.0\n\n################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# qwt_mml_document.h/qwt_mml_document.cpp has been stripped down from\n\n# the mathml widgets offered in the Qt solutions package. \n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# QMAKE_PKGCONFIG_DESTDIR is buggy, in combination\n\n# with including pri files: better don't use it\n",
        "Line" : 64,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "ground/gcs/src/libs/qwt/textengines/textengines.pri" : {
      "ObjectId" : "3750db0bff25b4a693051f4c07441c3a6fe7b617",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "################################################################\n\n# Qwt Widget Library\n\n# Copyright (C) 1997   Josef Wilgen\n\n# Copyright (C) 2002   Uwe Rathmann\n\n#\n\n# This library is free software; you can redistribute it and/or\n\n# modify it under the terms of the Qwt License, Version 1.0\n\n################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Install directives\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "ground/gcs/src/libs/qwt/textengines/textengines.pro" : {
      "ObjectId" : "e71a2b753a172cdef52e6f25ac0eb248fa1e7f79",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "################################################################\n\n# Qwt Widget Library\n\n# Copyright (C) 1997   Josef Wilgen\n\n# Copyright (C) 2002   Uwe Rathmann\n\n#\n\n# This library is free software; you can redistribute it and/or\n\n# modify it under the terms of the Qwt License, Version 1.0\n\n################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ground/gcs/src/libs/runguard/runguard.pri" : {
      "ObjectId" : "3cc2a468926dfef5d865bdd317f1937b18db3521",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/libs/runguard/runguard.pro" : {
      "ObjectId" : "decf7da752f202891b7e4fa7388e535e89a4ed43",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/libs/sdlgamepad/sdlgamepad.pri" : {
      "ObjectId" : "a5d13203c0a81901c6d1a3dfc8a2f307492b4ec2",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/libs/sdlgamepad/sdlgamepad.pro" : {
      "ObjectId" : "84837689be8581f887889d595a4d00de2e647e34",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#\n\n# This file is part of SDLGamepad.\n\n#\n\n# SDLGamepad is free software: you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation, either version 3 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# SDLGamepad is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with Foobar.  If not, see <http://www.gnu.org/licenses/>.\n\n#\n\n# Manuel Blanquett\n\n# mail.nalla@gmail.com\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ground/gcs/src/libs/tlmapcontrol/tlmapcontrol.pri" : {
      "ObjectId" : "37ea4e8da4286d1ad8567d9fae6a22dcd21a6b7f",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/libs/tlmapcontrol/tlmapcontrol.pro" : {
      "ObjectId" : "8262af658f2d68625ecd319d80ab90c03e96a1f2",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# order of linking matters\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ground/gcs/src/libs/utils/utils.pri" : {
      "ObjectId" : "f6e523b74d763e2bcfc534a3d0dc6d6aed24714a",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/libs/utils/utils.pro" : {
      "ObjectId" : "957de4d399a58b48839b49a02b32bd1176fbc3d3",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/libs/zlib/Makefile" : {
      "ObjectId" : "2fd6e45c48d4105045ec618ecf42e2a6fa2f3f18",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for zlib\n\n# Copyright (C) 1995-2005 Jean-loup Gailly.\n\n# For conditions of distribution and use, see copyright notice in zlib.h\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# To compile and test, type:\n\n#    ./configure; make test\n\n# The call of configure is optional if you don't have special requirements\n\n# If you wish to build zlib as a shared library, use: ./configure -s\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# To use the asm code, type:\n\n#    cp contrib/asm?86/match.S ./match.S\n\n#    make LOC=-DASMV OBJA=match.o\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# To install /usr/local/lib/libz.* and /usr/local/include/zlib.h, type:\n\n#    make install\n\n# To install in $HOME instead of /usr/local, use:\n\n#    make install prefix=$HOME\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#CFLAGS=-O -DMAX_WBITS=14 -DMAX_MEM_LEVEL=7\n\n#CFLAGS=-g -DDEBUG\n\n#CFLAGS=-O3 -Wall -Wwrite-strings -Wpointer-arith -Wconversion \\\n#           -Wstrict-prototypes -Wmissing-prototypes\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# to use the asm code: make OBJA=match.o\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The ranlib in install is needed on NeXTSTEP which checks file times\n\n# ldconfig is for Linux\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "ground/gcs/src/libs/zlib/zlib.pri" : {
      "ObjectId" : "8d82a99a473c52edf7418285ee25fa9d8287120b",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/libs/zlib/zlib.pro" : {
      "ObjectId" : "6b5e55e21967d7e5414dbc6d96d6db102f2949f5",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Input\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ground/gcs/src/plugins/boards_aeroquad/boards_aeroquad.pro" : {
      "ObjectId" : "3638a7d968a261a728fad15d633f5759d8988120",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/plugins/boards_brainfpv/boards_brainfpv.pro" : {
      "ObjectId" : "533e3ad12a5536d4019df7448d5c669de658405b",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/plugins/boards_brotronics/boards_brotronics.pro" : {
      "ObjectId" : "a2d006d2083935c63d4c65c2741323041a77b1a7",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/plugins/boards_dronin/boards_dronin.pro" : {
      "ObjectId" : "fc7d70a0fe7e7aec129b381b43ed37e3bb52ed4b",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/plugins/boards_dtf/boards_dtf.pro" : {
      "ObjectId" : "3c37bbaa70724df33539ec5af15a544d888353b4",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/plugins/boards_openpilot/boards_openpilot.pro" : {
      "ObjectId" : "8e72c26c7d4ebca3d0a447b487a496fd280fe69a",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/plugins/boards_quantec/boards_quantec.pro" : {
      "ObjectId" : "776f236b55be3d47375d35fdf95044dbe91eff4c",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/plugins/boards_taulabs/boards_taulabs.pro" : {
      "ObjectId" : "ff0de28c147298efa64f0e9baf5d660c0c6ef05c",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/plugins/config/config.pri" : {
      "ObjectId" : "554bdd983fd6cad667c2b2179476a0a1a82eff66",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/plugins/config/config.pro" : {
      "ObjectId" : "fcef9e4683d88b2f344d4f1ed9cb9d97e9da2aea",
      "LastModified" : "2019-03-25T07:14:59Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/plugins/coreplugin/coreplugin.pri" : {
      "ObjectId" : "3cd9865f63d480996ddc26b46287fc66dda60aa4",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/plugins/coreplugin/coreplugin.pro" : {
      "ObjectId" : "f8bb3e8604392fc23e82cf4276a14ad97d2b24e3",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/plugins/debuggadget/debuggadget.pri" : {
      "ObjectId" : "9d63753a9fdad4efc111539d7b58a31d9378cb22",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/plugins/debuggadget/debuggadget.pro" : {
      "ObjectId" : "ecbf8328efa8781540d71a0acb3a86dbb573c1b8",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/plugins/dial/dial.pro" : {
      "ObjectId" : "4d49aa8f341c0b92763a4e494ea7185f8491da68",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/plugins/emptygadget/emptygadget.pro" : {
      "ObjectId" : "8cf04b3e0082953507d1d23bc81fe01534853646",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/plugins/gcscontrolplugin/gcscontrol.pri" : {
      "ObjectId" : "bbe7665fdd7b6d53fba5d970b9122bfea597051b",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/plugins/gcscontrolplugin/gcscontrolplugin.pro" : {
      "ObjectId" : "37527808415a5a1ac217dec45e5cf7ff6f5681ba",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/plugins/gpsdisplay/gpsdisplay.pro" : {
      "ObjectId" : "64b9cd82c52815509400f13ac0a4f0514b01fe8a",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/plugins/importexport/importexport.pro" : {
      "ObjectId" : "f433bc192dc2f75ef388ec43b5a1fcdf66cc021c",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/plugins/ipconnection/ipconnection.pri" : {
      "ObjectId" : "f0071508b90d2132343fc1c2e485dbf2b9f311c3",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/plugins/ipconnection/ipconnection.pro" : {
      "ObjectId" : "273749e0f877ef0751ff5d68651bec59a8af1867",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/plugins/kmlexport/kmlexport.pro" : {
      "ObjectId" : "325dc76bae0d2a2a59392bb3ad28b9d83ca804d0",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/plugins/lineardial/lineardial.pro" : {
      "ObjectId" : "f036f18f815353fc371f28942dec58e9b2bd01fb",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/plugins/logging/logging.pro" : {
      "ObjectId" : "ff6aa006a48cab63fe18221f113b1fa58c9db91b",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/plugins/magicwaypoint/magicwaypoint.pro" : {
      "ObjectId" : "cd1a49528bb870721f71d41169f867ae75a02798",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/plugins/modelview/modelview.pro" : {
      "ObjectId" : "7695d35c14efa5074ca76c24e49155765b43e2ac",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/plugins/notify/notify.pro" : {
      "ObjectId" : "02dd65a367a74a7495da8adf68d470bb6728be6d",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/plugins/opmap/opmap.pro" : {
      "ObjectId" : "b935a43dd250a2754631654172d940ed46c0692d",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/plugins/pathplanner/pathplanner.pri" : {
      "ObjectId" : "dfa04cefcfccd04a8d95559efe839862751e39ee",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/plugins/pathplanner/pathplanner.pro" : {
      "ObjectId" : "43e747bd8429e5690deddccc05564b22830fec4b",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/plugins/pfdqml/pfdqml.pro" : {
      "ObjectId" : "2892e74a40bb242d57c1ef1499a8569698191765",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/plugins/plugins.pro" : {
      "ObjectId" : "7b125c39ba282b7090012120f66c708161f2ac9d",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# USE .subdir AND .depends !\r\n\n# OTHERWISE PLUGINS WILL BUILD IN WRONG ORDER (DIRECTORIES ARE COMPILED IN PARALLEL)\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Core plugin\r\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Empty UAVGadget - Default for new splits\r\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Debug Gadget plugin\r\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Welcome plugin\r\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# RawHID connection plugin\r\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Serial port connection plugin\r\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# UAVObjects plugin\r\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# UAVTalk plugin\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# OPMap UAVGadget\r\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Scope UAVGadget\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# UAVObject Browser gadget\r\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# ModelView UAVGadget\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Uploader gadget\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Dial gadget\r\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Linear Dial gadget\r\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# System Health gadget\r\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Config gadget\r\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# GPS Display gadget\r\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# QML viewer gadget\r\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Path Planner gadget\r\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Telemetry Scheduler gadget\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Primary Flight Display (PFD) gadget, QML version\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# IP connection plugin\r\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Export and Import GCS Configuration\r\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Telemetry data logging plugin\r\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# KML Export plugin\r\n",
        "Line" : 180,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# GCS Control of UAV gadget\r\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# GCS Control plugin\r\n",
        "Line" : 190,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# UAV Object Utility plugin\r\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Magic Waypoint gadget\r\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# UAV Settings Import/Export plugin\r\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# UAV Object Widget Utility plugin\r\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Setup Wizard plugin\r\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Setup alarm messaging plugin\r\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Usage Statistics plugin\r\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "############################\r\n\n#  Board plugins\r\n\n# Those plugins define supported board models: each board manufacturer\r\n\n# needs to implement a manufacturer plugin that defines all their boards\r\n\n############################\r\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Tau Labs project\r\n",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# OpenPilot project\r\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Quantec Networks GmbH\r\n",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# BrainFPV LLC\r\n",
        "Line" : 282,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# AeroQuad AQ32\r\n",
        "Line" : 290,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Brotronics\r\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# dRonin\r\n",
        "Line" : 304,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# DTF UHF\r\n",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 45
    },
    "ground/gcs/src/plugins/qmlview/qmlview.pro" : {
      "ObjectId" : "06ebba42800fb71f13631c51e65cf6851625009a",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/plugins/rawhid/rawhid.pri" : {
      "ObjectId" : "023048b1488b00aca04aa07394985042fb6b1349",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/plugins/rawhid/rawhid.pro" : {
      "ObjectId" : "3a3ab3e4de529369aa4507a61f0003b2c0a09ee9",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Platform Specific USB HID Stuff\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ground/gcs/src/plugins/scope/scope.pri" : {
      "ObjectId" : "126bcca3148d5ceb1b543dd01a117e74215a0eae",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/plugins/scope/scope.pro" : {
      "ObjectId" : "5909a49a2b5d06f0f1311d99ebbdf1115e3ffd97",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/plugins/serialconnection/serial.pri" : {
      "ObjectId" : "c0a0d8cfc280060cac0b20a28aa1428d737f035f",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/plugins/serialconnection/serialconnection.pro" : {
      "ObjectId" : "e20e7f5e964ca6fe2954697b310700ec5f10a2c6",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/plugins/setupwizard/setupwizard.pro" : {
      "ObjectId" : "9f6809e16cd6922195e25471f44544bccaf09e82",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/plugins/sysalarmsmessaging/sysalarmsmessaging.pri" : {
      "ObjectId" : "707864d31aed8ac8fde6abaaa27f8813ccce871c",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/plugins/sysalarmsmessaging/sysalarmsmessaging.pro" : {
      "ObjectId" : "7389b85623cb286c92a7866ad947e8864067f471",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/plugins/systemhealth/systemhealth.pro" : {
      "ObjectId" : "40aba728046d770f4580c3a2cecb6c8873f9ebb0",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/plugins/telemetryscheduler/telemetryscheduler.pro" : {
      "ObjectId" : "7d1e54937cc6871d8ef394b958f0940f64745f3f",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/plugins/uavobjectbrowser/uavobjectbrowser.pro" : {
      "ObjectId" : "1235086b32ff9d982ce39b88f718696d5bcf8e27",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/plugins/uavobjects/tests/uavobjectstest.pro" : {
      "ObjectId" : "563732189c4001f67bb62f550f58ce1e6a3b6342",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# -------------------------------------------------\r\n\n# Project created by QtCreator 2010-03-13T15:17:38\r\n\n# -------------------------------------------------\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ground/gcs/src/plugins/uavobjects/uavobject_synthetics.pri" : {
      "ObjectId" : "f63aec4d34c671400ff66bfc9f64b003d9612ea9",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Provide the path to the auto-generated uavobject source files for the GCS.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add the include path to the auto-generated uavobject include files.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "ground/gcs/src/plugins/uavobjects/uavobjects.pri" : {
      "ObjectId" : "679d14a940c83101260865e7963f504d8fadb8e6",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/plugins/uavobjects/uavobjects.pro" : {
      "ObjectId" : "fe2faa89ba6b48220a9bc59134b8dc1dd1351b0d",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add in all of the synthetic/generated uavobject files\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ground/gcs/src/plugins/uavobjects/wireshark/op-uavobjects/CMakeLists.txt" : {
      "ObjectId" : "2bf666efa2dc98bc03f27032a27429648358a597",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# $Id$\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# This program is free software; you can redistribute it and/or\n\n# modify it under the terms of the GNU General Public License\n\n# as published by the Free Software Foundation; either version 2\n\n# of the License, or (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; if not, see <http://www.gnu.org/licenses/>\n\n# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ground/gcs/src/plugins/uavobjects/wireshark/op-uavobjects/Makefile.am" : {
      "ObjectId" : "654ec24c3ce60ebf576ba13054ed5010fde3a2b2",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Makefile.am\n\n# Automake file for OpenPilot UAVObject Dissector\n\n# Copyright 2012, Stacey Sheldon <stac@solidgoldbomb.org>\n\n#\n\n# $Id$\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# This program is free software; you can redistribute it and/or\n\n# modify it under the terms of the GNU General Public License\n\n# as published by the Free Software Foundation; either version 2\n\n# of the License, or (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; if not, see <http://www.gnu.org/licenses/>\n\n# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Libs must be cleared, or else libtool won't create a shared module.\n\n# If your module needs to be linked against any particular libraries,\n\n# add them here.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Build plugin.c, which contains the plugin version[] string, a\n\n# function plugin_register() that calls the register routines for all\n\n# protocols, and a function plugin_reg_handoff() that calls the handoff\n\n# registration routines for all protocols.\n\n#\n\n# We do this by scanning sources.  If that turns out to be too slow,\n\n# maybe we could just require every .o file to have an register routine\n\n# of a given name (packet-aarp.o -> proto_register_aarp, etc.).\n\n#\n\n# Formatting conventions:  The name of the proto_register_* routines an\n\n# proto_reg_handoff_* routines must start in column zero, or must be\n\n# preceded only by \"void \" starting in column zero, and must not be\n\n# inside #if.\n\n#\n\n# DISSECTOR_SRC is assumed to have all the files that need to be scanned.\n\n#\n\n# For some unknown reason, having a big \"for\" loop in the Makefile\n\n# to scan all the files doesn't work with some \"make\"s; they seem to\n\n# pass only the first few names in the list to the shell, for some\n\n# reason.\n\n#\n\n# Therefore, we have a script to generate the plugin.c file.\n\n#\n\n# The first argument is the directory in which the source files live.\n\n# The second argument is \"plugin\", to indicate that we should build\n\n# a plugin.c file for a plugin.\n\n# All subsequent arguments are the files to scan.\n\n#\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Currently plugin.c can be included in the distribution because\n\n# we always build all protocol dissectors. We used to have to check\n\n# whether or not to build the snmp dissector. If we again need to\n\n# variably build something, making plugin.c non-portable, uncomment\n\n# the dist-hook line below.\n\n#\n\n# Oh, yuk.  We don't want to include \"plugin.c\" in the distribution, as\n\n# its contents depend on the configuration, and therefore we want it\n\n# to be built when the first \"make\" is done; however, Automake insists\n\n# on putting *all* source into the distribution.\n\n#\n\n# We work around this by having a \"dist-hook\" rule that deletes\n\n# \"plugin.c\", so that \"dist\" won't pick it up.\n\n#\n\n#dist-hook:\n\n#\t@rm -f $(distdir)/plugin.c\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "ground/gcs/src/plugins/uavobjects/wireshark/op-uavtalk/CMakeLists.txt" : {
      "ObjectId" : "eda4ef26fe5e14076bb9cce98051bf86a4a1ca79",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# $Id$\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# This program is free software; you can redistribute it and/or\n\n# modify it under the terms of the GNU General Public License\n\n# as published by the Free Software Foundation; either version 2\n\n# of the License, or (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; if not, see <http://www.gnu.org/licenses/>\n\n# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ground/gcs/src/plugins/uavobjects/wireshark/op-uavtalk/Makefile.am" : {
      "ObjectId" : "fe87d520c7f03febdefe4b1ee8f92a4139db510e",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Makefile.am\n\n# Automake file for OpenPilot UAVTalk protocol\n\n# Copyright 2012, Stacey Sheldon <stac@solidgoldbomb.org>\n\n#\n\n# $Id$\n\n#\n\n# Wireshark - Network traffic analyzer\n\n# By Gerald Combs <gerald@wireshark.org>\n\n# Copyright 1998 Gerald Combs\n\n#\n\n# This program is free software; you can redistribute it and/or\n\n# modify it under the terms of the GNU General Public License\n\n# as published by the Free Software Foundation; either version 2\n\n# of the License, or (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; if not, see <http://www.gnu.org/licenses/>\n\n# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Libs must be cleared, or else libtool won't create a shared module.\n\n# If your module needs to be linked against any particular libraries,\n\n# add them here.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Build plugin.c, which contains the plugin version[] string, a\n\n# function plugin_register() that calls the register routines for all\n\n# protocols, and a function plugin_reg_handoff() that calls the handoff\n\n# registration routines for all protocols.\n\n#\n\n# We do this by scanning sources.  If that turns out to be too slow,\n\n# maybe we could just require every .o file to have an register routine\n\n# of a given name (packet-aarp.o -> proto_register_aarp, etc.).\n\n#\n\n# Formatting conventions:  The name of the proto_register_* routines an\n\n# proto_reg_handoff_* routines must start in column zero, or must be\n\n# preceded only by \"void \" starting in column zero, and must not be\n\n# inside #if.\n\n#\n\n# DISSECTOR_SRC is assumed to have all the files that need to be scanned.\n\n#\n\n# For some unknown reason, having a big \"for\" loop in the Makefile\n\n# to scan all the files doesn't work with some \"make\"s; they seem to\n\n# pass only the first few names in the list to the shell, for some\n\n# reason.\n\n#\n\n# The first argument is the directory in which the source files live.\n\n# The second argument is \"plugin\", to indicate that we should build\n\n# a plugin.c file for a plugin.\n\n# All subsequent arguments are the files to scan.\n\n#\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Currently plugin.c can be included in the distribution because\n\n# we always build all protocol dissectors. We used to have to check\n\n# whether or not to build the snmp dissector. If we again need to\n\n# variably build something, making plugin.c non-portable, uncomment\n\n# the dist-hook line below.\n\n#\n\n# Oh, yuk.  We don't want to include \"plugin.c\" in the distribution, as\n\n# its contents depend on the configuration, and therefore we want it\n\n# to be built when the first \"make\" is done; however, Automake insists\n\n# on putting *all* source into the distribution.\n\n#\n\n# We work around this by having a \"dist-hook\" rule that deletes\n\n# \"plugin.c\", so that \"dist\" won't pick it up.\n\n#\n\n#dist-hook:\n\n#\t@rm -f $(distdir)/plugin.c\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "ground/gcs/src/plugins/uavobjectutil/uavobjectutil.pri" : {
      "ObjectId" : "26efebe2b76702f3b812097092e8157fbd6d7240",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/plugins/uavobjectutil/uavobjectutil.pro" : {
      "ObjectId" : "73c5ec3403a18a4ddec7555353c86d00a9243fec",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/plugins/uavobjectwidgetutils/uavobjectwidgetutils.pri" : {
      "ObjectId" : "eba3fe9af4fa24ad0d28bd3cbdcb2b925dbd3c8f",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/plugins/uavobjectwidgetutils/uavobjectwidgetutils.pro" : {
      "ObjectId" : "209ef25f8f3868c7850a2171dcdc273a501a6701",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/plugins/uavsettingsimportexport/uavsettingsimportexport.pri" : {
      "ObjectId" : "308e149def1956cca0e8a057a4535efd72dcac72",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/plugins/uavsettingsimportexport/uavsettingsimportexport.pro" : {
      "ObjectId" : "6d4e466475c45ecac855425b1c94371e215cfccb",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/plugins/uavtalk/uavtalk.pri" : {
      "ObjectId" : "ed587bd1a9bce3061a2fb5448ba0ed2aeedfb3c4",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/plugins/uavtalk/uavtalk.pro" : {
      "ObjectId" : "6468c85956499471cf81d234533ea2555d620a7a",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/plugins/uploader/uploader.pri" : {
      "ObjectId" : "ca8f85eb4b1fd4e8508c5e13fcf85f1a6e819deb",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/plugins/uploader/uploader.pro" : {
      "ObjectId" : "18c8a7011ad0a252ba54e58d28255005b8147810",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/plugins/usagestatsgadget/usagestatsgadget.pro" : {
      "ObjectId" : "3384394f716b3116cb8543cb2b648e9e4298e330",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/plugins/welcome/welcome.pri" : {
      "ObjectId" : "114f819177f3a3cbfd5145cf0c5e0f6b1e3cc482",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/src/plugins/welcome/welcome.pro" : {
      "ObjectId" : "15e440c4a89a97c015c64d1c9c9c40292a568f1d",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Needed for bringing browser from background to foreground using QDesktopServices: http://bugreports.qt-project.org/browse/QTBUG-8336\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ground/gcs/src/rpath.pri" : {
      "ObjectId" : "f7f1cbc920160e9f8b4a84b399bce446dbd63d4d",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#do the rpath by hand since it's not possible to use ORIGIN in QMAKE_RPATHDIR\r\n\n# this expands to $ORIGIN (after qmake and make), it does NOT read a qmake var\r\n",
        "Line" : 4,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "ground/gcs/src/src.pro" : {
      "ObjectId" : "7d7e2938dae015d86087cc43f4be5743176c28a6",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ground/gcs/usbids.pri" : {
      "ObjectId" : "3718ed18f8a679d19ca53a71f42be9d14b1bed49",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Behold the USB Header Compiler\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ground/ground.pro" : {
      "ObjectId" : "75bdc5ce84395b03cf819cd4dc80cd0cc57f57fa",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#\n\n# Top level Qt-Creator project file\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This meta-project allows qt-creator users to open and configure a\n\n# single project and to build all required software to produce a GCS.\n\n# This includes regenerating all uavobject output.\n\n#\n\n# NOTE: to use this meta-project, you MUST perform these steps:\n\n# - Open <top>/ground/ground.pro in qt-creator\n\n# - When asked, set your debug and release Build Directories to <top>/build/ground\n\n#\n\n# <top> = the full path to the base of your git source tree which\n\n# should contain \"flight\", \"ground\", etc.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# There is a small problem with dependencies. qmake needs synthetic\n\n# files when it generates GCS Makefiles. But we do not have\n\n# uavobjgenerator at that time (on the 1st build). So we use the\n\n# following trick: at make stage in uavobjects we rerun qmake for\n\n# gcs.pro and regenerate GCS Makefiles using just built\n\n# synthetic files. It takes some extra time but solves the\n\n# dependency problem.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Please note that this meta-project intended only for qt-creator\n\n# users. Top level Makefile handles all dependencies itself and\n\n# doesn't use ground.pro.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# uavobjgenerator\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# uavobjects\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# src\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "ground/tools.pri" : {
      "ObjectId" : "2dd885da8b9b8a1b12c1127170e3d02b615cf65e",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# if ccache is in CONFIG, use it\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Must match make/tools.mk\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "ground/uavobjects/uavobjects.pro" : {
      "ObjectId" : "ae1181f2e592b7999bbfb22dd9e795bde4c63744",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#\n\n# Qmake project for UAVObjects generation.\n\n#\n\n# TODO: provide some dependencies (now it builds every time)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Some handy defines\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# QMAKESPEC should be defined by qmake but sometimes it is not\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Some platform-dependent options\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Windows sometimes remembers working directory changed from Makefile, sometimes not.\n\n# That's why pushd/popd is used here - to make sure that we know current directory.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "ground/uavobjgenerator/uavobjgenerator.pro" : {
      "ObjectId" : "b615d6c38b9c3f4fb366af16c693dcd118c45571",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# we are a bit looser on Qt release for uavogen\n\n# lets doc builders etc. use PPAs which always carry only latest patch release\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# use ISO C++ (no GNU extensions) to ensure maximum portability\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "package/Makefile" : {
      "ObjectId" : "e10e6def73ece72b1ea2f4eaea4bb564a5420082",
      "LastModified" : "2018-05-08T04:40:48Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Set up a default goal\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Locate the root of the tree\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# import macros common to all supported build systems\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# include the tools makefile\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set up some macros\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Clean build options (recommended for package testing only)\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# If there is a tag, use it for label instead of date-hash string\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Order-only dependencies\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Decide on a verbosity level based on the V= parameter\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    }
  },
  "FileTypes" : {
    "CMAKE" : 3,
    "QMAKE" : 139,
    "MAKEFILE" : 35,
    "AUTOMAKE" : 2,
    "ANT" : 3
  },
  "ElapsedTime" : 5669
}