{
  "Repository" : "8981474",
  "Revision" : "HEAD",
  "ObjectId" : "e2b4afd35e8648f7d449af427213e725d8fa3140",
  "CommitTime" : "2017-07-28T00:38:22Z",
  "Files" : {
    "sys/lib/python/config/Makefile" : {
      "ObjectId" : "2ee077d0df720ffebb463b941a2d1d5e15d464eb",
      "LastModified" : "2011-05-03T11:25:13Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Top-level Makefile for Python\n\n#\n\n# As distributed, this file is called Makefile.pre.in; it is processed\n\n# into the real Makefile by running the script ./configure, which\n\n# replaces things like @spam@ with values appropriate for your system.\n\n# This means that if you edit Makefile, your changes get lost the next\n\n# time you run the configure script.  Ideally, you can do:\n\n#\n\n#\t./configure\n\n#\tmake\n\n#\tmake test\n\n#\tmake install\n\n#\n\n# If you have a previous version of Python installed that you don't\n\n# want to overwrite, you can use \"make altinstall\" instead of \"make\n\n# install\".  Refer to the \"Installing\" section in the README file for\n\n# additional details.\n\n#\n\n# See also the section \"Build instructions\" in the README file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# === Variables set by makesetup ===\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# === Variables set by configure\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Shell used by make (some versions default to the login shell, which is bad)\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Use this to make a link between python$(VERSION) and python in $(BINDIR)\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Portable install script (configure doesn't always guess right)\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Shared libraries must be installed with executable mode on some systems;\n\n# rather than figuring out exactly which, we always give them executable mode.\n\n# Also, making them read-only seems to be a good idea...\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Compiler options\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Both CPPFLAGS and LDFLAGS need to contain the shell's value for setup.py to\n\n# be able to build extension modules using the directories specified in the\n\n# environment variables\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Extra C flags added for building the interpreter object files.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# C flags used for building the interpreter object files\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Machine-dependent subdirectories\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Install prefix for architecture-independent files\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Install prefix for architecture-dependent files\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Expanded directories\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Detailed destination directories\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Symbols used for using shared libraries\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Executable suffix (.exe on Windows and Mac OS X)\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Short name and location for Mac OS X Python framework\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Deployment target selected during configure, to be checked\n\n# by distutils. The export statement is needed to ensure that the\n\n# deployment target is active during build.\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Options to enable prebinding (for fast startup prior to Mac OS X 10.3)\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Environment to run shared python without installed libraries\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Modes for directories, executables and data files created by the\n\n# install process.  Default to user-only-writable for all file types.\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# configure script arguments\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Subdirectories with code\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Other subdirectories\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Files and directories to be distributed\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# === Definitions added by makesetup ===\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "##########################################################################\n\n# Modules\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Used of signalmodule.o is not available\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "##########################################################################\n\n# Grammar\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "##########################################################################\n\n# Parser\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "##########################################################################\n\n# AST\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# XXX Note that a build now requires Python exist before the build starts\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "##########################################################################\n\n# Python\n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "##########################################################################\n\n# Objects\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "##########################################################################\n\n# objects that get linked into the Python library\n",
        "Line" : 317,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#########################################################################\n\n# Rules\n",
        "Line" : 329,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Default target\n",
        "Line" : 332,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Build the interpreter\n",
        "Line" : 335,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Build the shared modules\n",
        "Line" : 345,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# elsewhere caused bytecode read from .pyc files to behave differently\n\n# than bytecode generated directly from a .py source file.  Sometimes\n\n# the bytecode read from a .pyc file had the bug, somtimes the directly\n\n# generated bytecode.  This is sometimes a very shy bug needing a lot of\n\n# sample data.\n",
        "Line" : 567,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "#  Run the unitests for both architectures in a Universal build on OSX\n\n#  Must be run on an Intel box.\n",
        "Line" : 586,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Like testall, but with a single pass only\n",
        "Line" : 599,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Install everything\n",
        "Line" : 618,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Install almost everything without disturbing previous versions\n",
        "Line" : 621,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Install shared libraries enabled by Setup\n",
        "Line" : 625,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Install the interpreter (by creating a hard link to python$(VERSION))\n",
        "Line" : 647,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# Install the interpreter with $(VERSION) affixed\n\n# This goes into $(exec_prefix)\n",
        "Line" : 656,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Install the manual page\n",
        "Line" : 680,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Install the library\n",
        "Line" : 693,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Create the PLATDIR source directory, if one wasn't distributed..\n",
        "Line" : 792,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# Install the include files\n",
        "Line" : 802,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# Install the library and miscellaneous stuff needed for extending/embedding\n\n# This goes into $(exec_prefix)\n",
        "Line" : 820,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# Substitution happens here, as the completely-expanded BINDIR\n\n# is not available in configure\n",
        "Line" : 853,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 55,
      "Errorlog" : "line 859:2 token recognition error at: '\"`echo $(MACHDEP) | sed 's/^\\(...\\).*/\\1'\nline 1044:45 token recognition error at: '\" | sort -u; \\\\n\\n# Find files with funny names\\nfunny:\\n\\tfind $(DISTDIRS) -type d \\\\n\\t\\t-o -name '*.[chs]' \\\\n\\t\\t-o -name '*.py' \\\\n\\t\\t-o -name '*.doc' \\\\n\\t\\t-o -name '*.sty' \\\\n\\t\\t-o -name '*.bib' \\\\n\\t\\t-o -name '*.dat' \\\\n\\t\\t-o -name '*.el' \\\\n\\t\\t-o -name '*.fd' \\\\n\\t\\t-o -name '*.in' \\\\n\\t\\t-o -name '*.tex' \\\\n\\t\\t-o -name '*,[vpt]' \\\\n\\t\\t-o -name 'Setup' \\\\n\\t\\t-o -name 'Setup.*' \\\\n\\t\\t-o -name README \\\\n\\t\\t-o -name Makefile \\\\n\\t\\t-o -name ChangeLog \\\\n\\t\\t-o -name Repository \\\\n\\t\\t-o -name Root \\\\n\\t\\t-o -name Entries \\\\n\\t\\t-o -name Tag \\\\n\\t\\t-o -name tags \\\\n\\t\\t-o -name TAGS \\\\n\\t\\t-o -name .cvsignore \\\\n\\t\\t-o -name MANIFEST \\\\n\\t\\t-o -print\\n\\n# Dependencies\\n\\nPython/thread.o: @THREADHEADERS@\\n\\n# Declare targets that aren't real files\\n.PHONY: all sharedmods oldsharedmods test quicktest memtest\\n.PHONY: install altinstall oldsharedinstall bininstall altbininstall\\n.PHONY: maninstall libinstall inclinstall libainstall sharedinstall\\n.PHONY: frameworkinstall frameworkinstallframework frameworkinstallstructure\\n.PHONY: frameworkinstallmaclib frameworkinstallapps frameworkinstallunixtools\\n.PHONY: frameworkaltinstallunixtools recheck autoconf clean clobber distclean \\n.PHONY: smelly funny\\n\\n# IF YOU PUT ANYTHING HERE IT WILL GO AWAY\\n\u0000'\n"
    },
    "sys/src/ape/cmd/pax/Makefile" : {
      "ObjectId" : "f9721b4f0142e2c8dc317cfc91cba6a603718976",
      "LastModified" : "2011-05-03T11:25:13Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# PAX - read and write POSIX conformant tar and cpio archives \n\n#\n\n# Written by Mark H. Colburn (mark@jhereg.mn.org)\n\n#\n\n# $Id: Makefile,v 1.2 89/02/12 10:08:59 mark Exp $\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# CONFIGURATION SECTION\n\n#\n\n# The following defines may need to be changed for each system which PAX\n\n# is installed on.  Please review these settings before installing on your\n\n# system.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# You should define _POSIX_SOURCE if you are running on a POSIX system.  This\n\n# include has to be in the command line because it has to appear before any\n\n# include file is included in the source.  For most systems in use today,\n\n# it should be left blank.\n\n# \n\n# POSIX= -D_POSIX_SOURCE\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Set CFLAGS to whatever makes your C compiler happy.  Be sure to include \n\n# the definition of $(POSIX) in the flag.\n\n#\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Set LIBS to any additional libraries that you need linked in with pax.\n\n#\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# Set LFLAGS to whatever makes your linker happy\n\n#\n\n#LDFLAGS = -s\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# Set COPY to the name of the command to use to copy pax to cpio and\n\n# tar.  Usually it is 'ln'.\n\n#\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# Set LINTFLAGS to whatever makes your implementation of lint happy.  If\n\n# you don't undef __STDC__ and you have an ANSI C compiler, lint will choke \n\n# on the function prototypes present in func.h.\n\n#\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n\n# BINDIR - points to the directory in which you want the final pax, tar and\n\n# cpio binaries installed in.\n\n#\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#\n\n# MANDIR - specify the directory in which the man pages will be installed\n\n#\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\n\n# There are three different ways to get POSIX or BSD conformant directory \n\n# access routines: 1) they are installed in your system library, 2) you \n\n# are using Doug Gwyn's dirent library (/usr/lib/libdirent.a), or 3) you \n\n# need the source for the dirent package.  Based on that, pick one of the \n\n# following three options:\n\n#\n\n# 1. Pick the first dirent line and make sure that config.h is defined\n\n#    correctly for your version of directory access routines.  THIS IS\n\n#    THE LINE WHICH SHOULD BE USED FOR BSD SYSTEMS.\n\n# 2. Chose the second dirent line which  used a library at link time.  You\n\n#    may need to change the name of the library to match your system.\n\n# 3. If you need #3, then you must copy everything in the subdirectory dirent \n\n#    to this directory and choose the DIROBJ lines.  Please note that this \n\n#    version of dirent has been modified to work as a stand-alone. \n\n#\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#DIRENT= -ldirent\n\n#DIROBJ= paxdir.o\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#\n\n# END CONFIGURATION SECTION \n\n#\n\n# Nothing beyond this point should need to be changed.\n\n#\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#\tcp $(PMAN5) $(MAN5)\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "sys/src/cmd/gs/zlib/Makefile" : {
      "ObjectId" : "a29e9bc6ab4e3fd87bde4883bb6e3860bb4facd1",
      "LastModified" : "2011-05-03T11:25:13Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for zlib\n\n# Copyright (C) 1995-2003 Jean-loup Gailly.\n\n# For conditions of distribution and use, see copyright notice in zlib.h\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# To compile and test, type:\n\n#    ./configure; make test\n\n# The call of configure is optional if you don't have special requirements\n\n# If you wish to build zlib as a shared library, use: ./configure -s\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# To use the asm code, type:\n\n#    cp contrib/asm?86/match.S ./match.S\n\n#    make LOC=-DASMV OBJA=match.o\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# To install /usr/local/lib/libz.* and /usr/local/include/zlib.h, type:\n\n#    make install\n\n# To install in $HOME instead of /usr/local, use:\n\n#    make install prefix=$HOME\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#CFLAGS=-O -DMAX_WBITS=14 -DMAX_MEM_LEVEL=7\n\n#CFLAGS=-g -DDEBUG\n\n#CFLAGS=-O3 -Wall -Wwrite-strings -Wpointer-arith -Wconversion \\\n#           -Wstrict-prototypes -Wmissing-prototypes\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# to use the asm code: make OBJA=match.o\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The ranlib in install is needed on NeXTSTEP which checks file times\n\n# ldconfig is for Linux\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "sys/src/cmd/hg/Makefile" : {
      "ObjectId" : "2a46004902c486b32aff53e71e3581bc479b137c",
      "LastModified" : "2011-05-03T11:25:13Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# ignore errors from this command\n",
        "Line" : 39,
        "CharPositionInLine" : 33
      },
      "1" : {
        "Text" : "# All strings marked for translation in Mercurial contain\n\n# ASCII characters only. But some files contain string\n\n# literals like this '\\037\\213'. xgettext thinks it has to\n\n# parse them even though they are not marked for translation.\n\n# Extracting with an explicit encoding of ISO-8859-1 will make\n\n# xgettext \"parse\" and ignore them.\n",
        "Line" : 85,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "sys/src/cmd/hg/contrib/hgsh/Makefile" : {
      "ObjectId" : "966158f54c7f1f7f044d3c7635ae08c966656558",
      "LastModified" : "2011-05-03T11:25:13Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "sys/src/cmd/hg/doc/Makefile" : {
      "ObjectId" : "02f5fef36535fa67fe34d64d1d9c9ac98abf7b62",
      "LastModified" : "2011-05-03T11:25:13Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# add newline after all literal blocks and fix backslash escape\n",
        "Line" : 24,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# tracked files are already in the main MANIFEST\n",
        "Line" : 34,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2,
      "Errorlog" : "line 42:52 token recognition error at: '\\1'\n"
    },
    "sys/src/cmd/hg/doc/ja/Makefile" : {
      "ObjectId" : "154239fb43802bab5d241fd07158f7bac6a22d81",
      "LastModified" : "2011-05-03T11:25:13Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "sys/src/cmd/python/Demo/embed/Makefile" : {
      "ObjectId" : "ac935f16ce0fa96f32aeb4615564bee8846d5f21",
      "LastModified" : "2011-05-03T11:25:13Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for embedded Python use demo.\n\n# (This version tailored for my Red Hat Linux 6.1 setup;\n\n# edit lines marked with XXX.)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# XXX The compiler you are using\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# XXX Top of the build tree and source tree\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Python version\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Compiler flags\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The Python library\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# XXX edit LIBS (in particular) to match $(blddir)/Modules/Makefile\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Build the demo applications\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Administrative targets\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "sys/src/cmd/python/Demo/pysvr/Makefile" : {
      "ObjectId" : "b4b9f3e115024eca4ff62be9edc7069f36c1f9fe",
      "LastModified" : "2011-05-03T11:25:13Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for 'pysvr' application embedding Python.\n\n# Tailored for Python 1.5a3 or later.\n\n# Some details are specific for Solaris or CNRI.\n\n# Also see ## comments for tailoring.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Which C compiler\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##PURIFY=/usr/local/pure/purify\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Optimization preferences\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Which Python version we're using\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Expressions using the above definitions\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Use these defs when compiling against installed Python\n\n##INST=/usr/local\n\n##PYC=$(INST)/lib/$(PYVER)/config\n\n##PYINCL=-I$(INST)/include/$(PYVER) -I$(PYC)\n\n##PYLIBS=$(PYC)/lib$(PYVER).a\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Use these defs when compiling against built Python\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Libraries to link with -- very installation dependent\n\n# (See LIBS= in Modules/Makefile in build tree)\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Compilation and link flags -- no need to change normally\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Default port for the pysvr application\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Default target\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Target to build pysvr\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Target to build and run pysvr\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Target to clean up the directory\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "sys/src/cmd/python/Doc/Makefile" : {
      "ObjectId" : "a435f11d5675cdd25fe4f0ed63fbd4568270cfe4",
      "LastModified" : "2011-05-03T11:25:13Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Python documentation\n\n# ---------------------------------\n\n#\n\n# See also the README file.\n\n#\n\n# This is a bit of a mess.  The documents are identified by short names:\n\n#   api -- Python/C API Reference Manual\n\n#   doc -- Documenting Python\n\n#   ext -- Extending and Embedding the Python Interpreter\n\n#   lib -- Library Reference Manual\n\n#   mac -- Macintosh Library Modules\n\n#   ref -- Python Reference Manual\n\n#   tut -- Python Tutorial\n\n#   inst -- Installing Python Modules\n\n#   dist -- Distributing Python Modules\n\n#\n\n# The LaTeX sources for each of these documents are in subdirectories\n\n# with the three-letter designations above as the directory names.\n\n#\n\n# The main target creates HTML for each of the documents.  You can\n\n# also do \"make lib\" (etc.) to create the HTML versions of individual\n\n# documents.\n\n#\n\n# The document classes and styles are in the texinputs/ directory.\n\n# These define a number of macros that are similar in name and intent\n\n# as macros in Texinfo (e.g. \\code{...} and \\emph{...}), as well as a\n\n# number of environments for formatting function and data definitions.\n\n# Documentation for the macros is included in \"Documenting Python\"; see\n\n# http://www.python.org/doc/current/doc/doc.html, or the sources for\n\n# this document in the doc/ directory.\n\n#\n\n# Everything is processed by LaTeX.  See the file `README' for more\n\n# information on the tools needed for processing.\n\n#\n\n# There's a problem with generating the index which has been solved by\n\n# a sed command applied to the index file.  The shell script fix_hack\n\n# does this (the Makefile takes care of calling it).\n\n#\n\n# Additional targets attempt to convert selected LaTeX sources to\n\n# various other formats.  These are generally site specific because\n\n# the tools used are all but universal.  These targets are:\n\n#\n\n#   ps  -- convert all documents from LaTeX to PostScript\n\n#   pdf -- convert all documents from LaTeX to the\n\n#\t\tPortable Document Format\n\n#\n\n# See the README file for more information on these targets.\n\n#\n\n# The formatted output is located in subdirectories.  For PDF and\n\n# PostScript, look in the paper-$(PAPER)/ directory.  For HTML, look in\n\n# the html/ directory.  If you want to fix the GNU info process, look\n\n# in the info/ directory; please send patches to docs@python.org.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This Makefile only includes information on how to perform builds; for\n\n# dependency information, see Makefile.deps.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Customization -- you *may* have to edit this\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# You could set this to a4:\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Ideally, you shouldn't need to edit beyond this point\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# This is the *documentation* release, and is used to construct the\n\n# file names of the downloadable tarballs.  It is initialized by the\n\n# getversioninfo script to ensure that the right version number is\n\n# used; the script will also write commontex/patchlevel.tex if that\n\n# doesn't exist or needs to be changed.  Documents which depend on the\n\n# version number should use \\input{patchlevel} and include\n\n# commontex/patchlevel.tex in their dependencies.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# This is ugly!  The issue here is that there are two different levels\n\n# in the directory tree at which we execute mkhowto, so we can't\n\n# define it just once using a relative path (at least not with the\n\n# current implementation and Makefile structure).  We use the GNUish\n\n# $(shell) function here to work around that restriction by\n\n# identifying mkhowto and the commontex/ directory using absolute paths.\n\n#\n\n# If your doc build fails immediately, you may need to switch to GNU make.\n\n# (e.g. OpenBSD needs package gmake installed; use gmake instead of make)\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# (The trailing colon in the value is needed; TeX places its default\n\n# set of paths at the location of the empty string in the path list.)\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# The mkhowto script can be run from the checkout using the first\n\n# version of this variable definition, or from a preferred version\n\n# using the second version.  The standard documentation is typically\n\n# built using the second flavor, where the preferred version is from\n\n# the Python CVS trunk.\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# The emacs binary used to build the info docs. GNU Emacs 21 is required.\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# The end of this should reflect the major/minor version numbers of\n\n# the release:\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# what's what\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# These must be declared phony since there\n\n# are directories with matching names:\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Main target\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Rules to build PostScript and PDF formats\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Targets for each document:\n\n# Python/C API Reference Manual\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Distributing Python Modules\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Documenting Python\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Extending and Embedding the Python Interpreter\n",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Installing Python Modules\n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Python Library Reference\n",
        "Line" : 284,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Macintosh Library Modules\n",
        "Line" : 291,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Python Reference Manual\n",
        "Line" : 298,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Python Tutorial\n",
        "Line" : 305,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# What's New in Python X.Y\n",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# The remaining part of the Makefile is concerned with various\n\n# conversions, as described above.  See also the README file.\n",
        "Line" : 319,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Targets to convert the manuals to HTML using Nikos Drakos' LaTeX to\n\n# HTML converter.  For more info on this program, see\n\n# <URL:http://cbl.leeds.ac.uk/nikos/tex2html/doc/latex2html/latex2html.html>.\n",
        "Line" : 325,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Note that LaTeX2HTML inserts references to an icons directory in\n\n# each page that it generates.  I have placed a copy of this directory\n\n# in the distribution to simplify the process of creating a\n\n# self-contained HTML distribution; for this purpose I have also added\n\n# a (trivial) index.html.  Change the definition of $ICONSERVER in\n\n# perl/l2hinit.perl to use a different location for the icons directory.\n",
        "Line" : 329,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# If you have the standard LaTeX2HTML icons installed, the versions shipped\n\n# with this documentation should be stored in a separate directory and used\n\n# instead.  The standard set does *not* include all the icons used in the\n\n# Python documentation.\n",
        "Line" : 336,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# html/index.html is dependent on $(INDEXFILES) since we want the date\n\n# on the front index to be updated whenever any of the child documents\n\n# are updated and boilerplate.tex uses \\today as the date.  The index\n\n# files are not used to actually generate content.\n",
        "Line" : 352,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# The iSilo format is used by the iSilo document reader for PalmOS devices.\n",
        "Line" : 417,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# These are useful if you need to transport the iSilo-ready HTML to\n\n# another machine to perform the conversion:\n",
        "Line" : 513,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# webchecker needs an extra flag to process the huge index from the libref\n",
        "Line" : 524,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Release packaging targets:\n",
        "Line" : 553,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# convenience targets:\n",
        "Line" : 652,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# We use the \"pkglist\" target at the end of these to ensure the\n\n# package list is updated after building either of these; this seems a\n\n# reasonable compromise between only building it for distfiles or\n\n# having to build it manually.  Doing it here allows the packages for\n\n# distribution to be built using either of\n\n#     make distfiles && make PAPER=a4 paperdist\n\n#     make paperdist && make PAPER=a4 distfiles\n\n# The small amount of additional work is a small price to pay for not\n\n# having to remember which order to do it in. ;)\n",
        "Line" : 684,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# The pkglist.html file is used as part of the download.html page on\n\n# python.org; it is not used as intermediate input here or as part of\n\n# the packages created.\n",
        "Line" : 696,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Housekeeping targets\n",
        "Line" : 707,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Remove temporary files; all except the following:\n\n# - sources: .tex, .bib, .sty, *.cls\n\n# - useful results: .dvi, .pdf, .ps, .texi, .info\n",
        "Line" : 709,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Remove temporaries as well as final products\n",
        "Line" : 716,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 40
    },
    "sys/src/cmd/python/Doc/howto/Makefile" : {
      "ObjectId" : "18110a2d4902550950dcda5a26ad9fbba6ebfbbc",
      "LastModified" : "2011-05-03T11:25:13Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for the HOWTO directory\n\n# LaTeX HOWTOs can be turned into HTML, PDF, PS, DVI or plain text output.\n\n# reST HOWTOs can only be turned into HTML.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Variables to change\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Paper size for non-HTML formats (letter or a4)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Arguments to rst2html.py, and location of the script\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# List of HOWTOs that aren't to be processed.  This should contain the\n\n# base name of the HOWTO without any extension (e.g. 'advocacy',\n\n# 'unicode').\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Determine list of files to be built\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Rules for building various formats\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# reST to HTML\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# LaTeX to various output formats\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Rule that isn't actually used -- we no longer support the 'txt' target.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "sys/src/cmd/python/Doc/info/Makefile" : {
      "ObjectId" : "3dbbd747becd0360275761ca35037c3d11784d2d",
      "LastModified" : "2011-05-03T11:25:13Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Generate the Python \"info\" documentation.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The emacs binary used to build the info docs. GNU Emacs 21 is required.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# set VERSION to code the VERSION number into the info file name\n\n# allowing installation of more than one set of python info docs\n\n# into the same directory\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\tdoc inst\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Not built by default; the conversion doesn't handle \\p and \\op\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Not built by default; the conversion chokes on \\installscheme\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# \"whatsnew20\" doesn't currently work\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "sys/src/cmd/python/Doc/tools/sgmlconv/Makefile" : {
      "ObjectId" : "d222933e79d70fc34a0fd89e629036b37ce3db35",
      "LastModified" : "2011-05-03T11:25:13Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Simple makefile to control XML generation for the entire document tree.\n\n# This should be used from the top-level directory (Doc/), not the directory\n\n# that actually contains this file:\n\n#\n\n#  $ pwd\n\n#  .../Doc\n\n#  $ make -f tools/sgmlconv/Makefile\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The 'inst' and 'tut' directories break the conversion, so skip them for now.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "sys/src/cmd/python/Doc/whatsnew/Makefile" : {
      "ObjectId" : "d11f97bf7f9c3704fb00ec1b0a865242775a3234",
      "LastModified" : "2011-05-03T11:25:13Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "sys/src/cmd/python/Misc/indent.pro" : {
      "ObjectId" : "3efac89b7459bcd644d1a7ce169da0490bf5d8e1",
      "LastModified" : "2011-05-03T11:25:13Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "sys/src/cmd/python/Modules/zlib/Makefile" : {
      "ObjectId" : "2fd6e45c48d4105045ec618ecf42e2a6fa2f3f18",
      "LastModified" : "2011-05-03T11:25:13Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for zlib\n\n# Copyright (C) 1995-2005 Jean-loup Gailly.\n\n# For conditions of distribution and use, see copyright notice in zlib.h\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# To compile and test, type:\n\n#    ./configure; make test\n\n# The call of configure is optional if you don't have special requirements\n\n# If you wish to build zlib as a shared library, use: ./configure -s\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# To use the asm code, type:\n\n#    cp contrib/asm?86/match.S ./match.S\n\n#    make LOC=-DASMV OBJA=match.o\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# To install /usr/local/lib/libz.* and /usr/local/include/zlib.h, type:\n\n#    make install\n\n# To install in $HOME instead of /usr/local, use:\n\n#    make install prefix=$HOME\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#CFLAGS=-O -DMAX_WBITS=14 -DMAX_MEM_LEVEL=7\n\n#CFLAGS=-g -DDEBUG\n\n#CFLAGS=-O3 -Wall -Wwrite-strings -Wpointer-arith -Wconversion \\\n#           -Wstrict-prototypes -Wmissing-prototypes\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# to use the asm code: make OBJA=match.o\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The ranlib in install is needed on NeXTSTEP which checks file times\n\n# ldconfig is for Linux\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "sys/src/cmd/python/Tools/buildbot/Makefile" : {
      "ObjectId" : "16602318481995ec150e1da21e109cdf29714341",
      "LastModified" : "2011-05-03T11:25:13Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "sys/src/cmd/python/Tools/unicode/Makefile" : {
      "ObjectId" : "35744ad0d5e5de6ed6177a0e26148de520ed1332",
      "LastModified" : "2011-05-03T11:25:13Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Recreate the Python charmap codecs from the Unicode mapping\n\n# files available at ftp://ftp.unicode.org/\n\n#\n\n#(c) Copyright Marc-Andre Lemburg, 2005.\n\n#    Licensed to PSF under a Contributor Agreement.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Python binary to use\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Remove tool to use\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "### Generic targets\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "### Mappings\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "### Codecs\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "### Cleanup\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    }
  },
  "FileTypes" : {
    "QMAKE" : 1,
    "MAKEFILE" : 17
  },
  "ElapsedTime" : 15867
}