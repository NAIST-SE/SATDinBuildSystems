{
  "Repository" : "5707562",
  "Revision" : "HEAD",
  "ObjectId" : "299f5db1d3a591819e17e2520c17aec0104b0493",
  "CommitTime" : "2019-02-14T00:43:51Z",
  "Files" : {
    "Android_GUI/CMakeLists.txt" : {
      "ObjectId" : "9fc51dcfb53fba58d045380c93e01fa8ef9a5317",
      "LastModified" : "2018-06-05T01:08:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#${CMAKE_BINARY_DIR}/assets/data-${MBP_VERSION}.tar.xz\n",
        "Line" : 36,
        "CharPositionInLine" : 16
      },
      "CommentCount" : 1
    },
    "Android_GUI/proguard-rules.pro" : {
      "ObjectId" : "bb19376f74981dba7e2ef2dd7080307aa8db627d",
      "LastModified" : "2018-06-05T01:08:43Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "###################\n\n# DualBootPatcher #\n\n###################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Keep names. This is *not* a hack and is not necessary for DualBootPatcher to\n\n# work properly. However, we want meaningful stack traces even in release\n\n# builds.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Keep file names and line numbers in stack traces\n\n#-renamesourcefileattribute SourceFile\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# SearchView is used by AppListFragment\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# We dynamically set some class variables to match some libc constants, so the\n\n# fields cannot be renamed\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "###########\n\n# Picasso #\n\n###########\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# We don't use OkHttp with Picasso\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#######\n\n# JNA #\n\n#######\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "CMakeLists.txt" : {
      "ObjectId" : "be49087c52477b767639ff1c27578540891950df",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add our custom module path\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build target and type\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Build types:\n\n# - desktop: Standard build for PCs\n\n# - android: Standard build for Android\n\n# - android-app: Build libraries to be used for the Android app\n\n#                (not to be built manually)\n\n# - android-system: Build executables to be included in the distrbution\n\n#                   (not to be built manually)\n\n# - hosttools: Builds tools needed on the host when cross-compiling\n\n#              (not to be built manually)\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Verify build target and type\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Android NDK\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# FIXME: Due to https://github.com/android-ndk/ndk/issues/222, we need a\n\n# custom toolchain file. Since we can't guarantee that the custom toolchain\n\n# file will work with newer versions of the NDK, we'll depend on an exact\n\n# version.\n",
        "Line" : 51,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Allow version to be overridden in Jenkins\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# CPack versions\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Ensure CMAKE_BUILD_TYPE is set\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Ensure CMAKE_BUILD_TYPE is set to Release or Debug when targeting Android as\n\n# the NDK toolchain file does not support other build types\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Sets:\n\n# - MBP_TOP_LEVEL_BUILD: Whether this is a parent CMake build\n\n# - MBP_INTERNAL_BUILD: Whether this is a recursive CMake build\n\n# - MBP_TARGET_CONFIG_FILE: Config file for the current build target\n\n# - MBP_TARGET_HAS_BUILDS: Whether this target builds anything\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Screw Ubuntu's multiarch. FIND_LIBRARY_USE_LIB64_PATHS is disabled when\n\n# /etc/debian_version exists, but we need lib64 in the library search path\n\n# because the x86_64 NDK libraries are in:\n\n#   <ndk>/platforms/android-21/arch-x86_64/usr/lib64/\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Code signing options\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Build target config\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Implicit system include directories\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Helper functions to backup/restore variables\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Compile and link flags\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Tests\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Third party binaries\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Dependencies\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# QEMU-based testing\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Must go after signtool since it references SIGNTOOL_COMMAND\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 22
    },
    "android/CMakeLists.txt" : {
      "ObjectId" : "bec339164e835ae853a83a436fa8489aa1ad95fa",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Always make release builds for the system components unless explicitly\n\n# told not to since a debug build of mbtool is too large to fit in some\n\n# devices' ramdisks.\n",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Create wrapper script for running ExternalProject targets from the\n\n# top-level build\n",
        "Line" : 40,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# FIXME: Required until https://github.com/android-ndk/ndk/issues/222 is fixed\n",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#-DCMAKE_TOOLCHAIN_FILE=${ndk_path}/build/cmake/android.toolchain.cmake\n",
        "Line" : 68,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : "# Always build system components\n",
        "Line" : 121,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Build app components only if we're targeting Android\n",
        "Line" : 172,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Copy main binary\n",
        "Line" : 212,
        "CharPositionInLine" : 12
      },
      "7" : {
        "Text" : "# Copy themes\n",
        "Line" : 218,
        "CharPositionInLine" : 12
      },
      "8" : {
        "Text" : "# Copy info.prop\n",
        "Line" : 224,
        "CharPositionInLine" : 12
      },
      "9" : {
        "Text" : "# Create archive\n",
        "Line" : 230,
        "CharPositionInLine" : 12
      },
      "10" : {
        "Text" : "# Delete temporary directory\n",
        "Line" : 237,
        "CharPositionInLine" : 12
      },
      "11" : {
        "Text" : "# Install libc++. We do this in the android-app target because we have\n\n# access to the CMAKE_LINKER variable.\n",
        "Line" : 268,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 12
    },
    "bootimgtool/CMakeLists.txt" : {
      "ObjectId" : "ec9568f68c925e0ea63260865b635e6b0f38bb24",
      "LastModified" : "2018-07-04T17:52:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build binary\n",
        "Line" : 12,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Set binary name\n",
        "Line" : 27,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Link dependencies\n",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Set rpath for portable build\n",
        "Line" : 42,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Install binary\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "cmake/CompilerFlags.cmake" : {
      "ObjectId" : "9fb026910b397b98a017ad03063719adacff8cf9",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enable warnings\n",
        "Line" : 4,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "#add_compile_options(-Werror)\n",
        "Line" : 7,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Except for \"/*\" within comment errors (present in doxygen blocks)\n",
        "Line" : 9,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# outcome.hpp\n",
        "Line" : 12,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Enable PIC\n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Enable stack-protector\n",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Enable _FORTIFY_SOURCE for release builds\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# -Wunknown-attributes - malloc.h\n\n# -Wzero-length-array - asm-generic/siginfo.h\n",
        "Line" : 27,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# Prevent libarchive's android_lf.h from being included. It #defines\n\n# a bunch of things like `#define open open64`, which breaks the build\n\n# process. The header is only needed for building libarchive anyway.\n",
        "Line" : 31,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Don't warn for valid msprintf specifiers\n",
        "Line" : 38,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# Target Vista and up\n",
        "Line" : 41,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# Enable ASLR\n",
        "Line" : 44,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# Enable DEP\n",
        "Line" : 48,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# libssp is required if stack-protector is enabled\n",
        "Line" : 52,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# Visibility\n",
        "Line" : 58,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# Use DT_RPATH instead of DT_RUNPATH because the latter is not transitive\n",
        "Line" : 61,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# Enable PIE\n",
        "Line" : 64,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# Disable executable stack\n",
        "Line" : 67,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# Enable full relro\n",
        "Line" : 72,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# Does not work on Windows:\n\n# https://sourceware.org/bugzilla/show_bug.cgi?id=11539\n",
        "Line" : 76,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# GCC-specific warnings\n",
        "Line" : 83,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# TODO Maybe enable =strict\n",
        "Line" : 88,
        "CharPositionInLine" : 25
      },
      "22" : {
        "Text" : "# C only\n",
        "Line" : 95,
        "CharPositionInLine" : 27
      },
      "23" : {
        "Text" : "#-Wextra-semi\n",
        "Line" : 96,
        "CharPositionInLine" : 12
      },
      "24" : {
        "Text" : "#-Wshadow # Disabled because this doesn't ignore member initializers\n",
        "Line" : 112,
        "CharPositionInLine" : 12
      },
      "25" : {
        "Text" : "#-Wundef # Too many libraries to #if for undefined macros\n\n#-Wuseless-cast # Disabled because of mb::Flags\n",
        "Line" : 115,
        "CharPositionInLine" : 12
      },
      "26" : {
        "Text" : "# C only\n",
        "Line" : 117,
        "CharPositionInLine" : 28
      },
      "27" : {
        "Text" : "# Clang-specific warnings\n",
        "Line" : 122,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "#-Wexit-time-destructors # We have global variables that are classes\n",
        "Line" : 145,
        "CharPositionInLine" : 12
      },
      "29" : {
        "Text" : "#-Wreserved-id-macro # Too many libraries have macros with an underscore prefix\n",
        "Line" : 159,
        "CharPositionInLine" : 12
      },
      "30" : {
        "Text" : "#-Wundef # Too many libraries to #if for undefined macros\n",
        "Line" : 166,
        "CharPositionInLine" : 12
      },
      "31" : {
        "Text" : "# Disable warnings\n",
        "Line" : 172,
        "CharPositionInLine" : 8
      },
      "32" : {
        "Text" : "# \\cond is not understood\n",
        "Line" : 174,
        "CharPositionInLine" : 47
      },
      "33" : {
        "Text" : "# Caused by disabling exceptions in Outcome\n",
        "Line" : 175,
        "CharPositionInLine" : 34
      },
      "34" : {
        "Text" : "# Remove some warnings caused by the BoringSSL headers on Android\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Target C11\n",
        "Line" : 190,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# Target C++17\n",
        "Line" : 197,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 37
    },
    "cmake/ConfigAndroid.cmake" : {
      "ObjectId" : "228dfe24645edf514e775ac91e24d2f8c34709e4",
      "LastModified" : "2018-06-05T01:08:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install paths\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We only need the data files in the zip on Android\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/ConfigAndroidApp.cmake" : {
      "ObjectId" : "e7747a4a0a515501637a77dfe18aab93174025b9",
      "LastModified" : "2017-06-24T21:44:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install paths\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/ConfigAndroidSystem.cmake" : {
      "ObjectId" : "e7747a4a0a515501637a77dfe18aab93174025b9",
      "LastModified" : "2017-06-24T21:44:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install paths\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/ConfigDesktop.cmake" : {
      "ObjectId" : "856fd2d736be0a26d907237b132aa06306510f33",
      "LastModified" : "2018-06-05T01:08:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Portable application\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Install paths\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CPack\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/ConfigHostTools.cmake" : {
      "ObjectId" : "d8004c0b0656edf95ad6452f6b01b519c20ff94e",
      "LastModified" : "2017-06-24T21:44:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install paths\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/ConfigSigning.cmake" : {
      "ObjectId" : "84a7a2b6f40e1af2ac4d0ae68f228cd16211066b",
      "LastModified" : "2017-06-24T21:44:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We don't need the keys for building the host tools\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find Java's keytool\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Signing config\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Create debug keystore if it doesn't exist\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Only use Windows path when natively compiling, not cross-compiling\n\n#if(WIN32)\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# 30 years\n",
        "Line" : 47,
        "CharPositionInLine" : 32
      },
      "6" : {
        "Text" : "# For debug builds, we can allow not providing a signing config\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# The user must provide a signing config\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Try to prevent using debug key in release builds\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Export certificate to file\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Export keystore to encrypted PKCS12\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Read des certificate as hex\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "cmake/Dependencies.cmake" : {
      "ObjectId" : "e641554744030e82309b46fc0e19fc8f05407a67",
      "LastModified" : "2019-01-31T00:52:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Dependencies\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Don't need dependencies for Android top-level build\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Always use static libraries\n",
        "Line" : 37,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Needed for every target\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/ImplicitIncludeDirs.cmake" : {
      "ObjectId" : "0ddf39c041ae08cbe67dc30e4ea4a39d92387682",
      "LastModified" : "2018-06-05T01:08:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Based on: https://github.com/WebKit/webkit/blob/5f13e8352a31b47bccbf6089fc9ac4a0d68f63b9/Source/cmake/WebKitCompilerFlags.cmake#L179\n\n#\n\n# References:\n\n# - https://gitlab.kitware.com/cmake/cmake/issues/16291\n\n# - https://gcc.gnu.org/bugzilla/show_bug.cgi?id=70129\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add default system include directories to CMake's implicit includes. This\n\n# fixes #include_next <...> with GCC 6 when cross-compiling.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Qemu.cmake" : {
      "ObjectId" : "576ac0f2f6d825328c7c26cd0e80921efb811fbb",
      "LastModified" : "2019-01-31T00:52:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# android/CMakeLists.txt will set QEMU_SYSTEM_COMMAND to the appropriate\n\n# QEMU_SYSTEM_* value above\n",
        "Line" : 60,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 1
    },
    "cmake/SigningConfigReader.cmake" : {
      "ObjectId" : "e48df9bb0c4c63dfaf7f87e7683bd52eb766dd9c",
      "LastModified" : "2018-06-05T01:08:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Skip comments\n",
        "Line" : 11,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "# Ensure <key>=<value> format\n",
        "Line" : 16,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# Parse key/value pairs\n",
        "Line" : 24,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 3
    },
    "cmake/Testing.cmake" : {
      "ObjectId" : "56c9b406842ae131e2e184e80264c338dedcbb7d",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/VariableBackup.cmake" : {
      "ObjectId" : "3b5891c65a7a85fd386e022281bcffb75e8a61dc",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/android.toolchain.cmake" : {
      "ObjectId" : "6ef24535c189cc6f35bf41da57dc39247596ff7f",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2016 The Android Open Source Project\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#      http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configurable variables.\n\n# Modeled after the ndk-build system.\n\n# For any variables defined in:\n\n#         https://developer.android.com/ndk/guides/android_mk.html\n\n#         https://developer.android.com/ndk/guides/application_mk.html\n\n# if it makes sense for CMake, then replace LOCAL, APP, or NDK with ANDROID, and\n\n# we have that variable below.\n\n# The exception is ANDROID_TOOLCHAIN vs NDK_TOOLCHAIN_VERSION.\n\n# Since we only have one version of each gcc and clang, specifying a version\n\n# doesn't make much sense.\n\n#\n\n# ANDROID_TOOLCHAIN\n\n# ANDROID_ABI\n\n# ANDROID_PLATFORM\n\n# ANDROID_STL\n\n# ANDROID_PIE\n\n# ANDROID_CPP_FEATURES\n\n# ANDROID_ALLOW_UNDEFINED_SYMBOLS\n\n# ANDROID_ARM_MODE\n\n# ANDROID_ARM_NEON\n\n# ANDROID_DISABLE_NO_EXECUTE\n\n# ANDROID_DISABLE_RELRO\n\n# ANDROID_DISABLE_FORMAT_STRING_CHECKS\n\n# ANDROID_CCACHE\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Inhibit all of CMake's own NDK handling code.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# CMake invokes the toolchain file twice during the first build, but only once\n\n# during subsequent rebuilds. This was causing the various flags to be added\n\n# twice on the first build, and on a rebuild ninja would see only one set of the\n\n# flags and rebuild the world.\n\n# https://github.com/android-ndk/ndk/issues/323\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Android NDK\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Android NDK revision\n\n# Possible formats:\n\n# * r16, build 1234: 16.0.1234\n\n# * r16b, build 1234: 16.1.1234\n\n# * r16 beta 1, build 1234: 16.0.1234-beta1\n\n#\n\n# Canary builds are not specially marked.\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Touch toolchain variable to suppress \"unused variable\" warning.\n\n# This happens if CMake is invoked with the same command line the second time.\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Compatibility for configurable variables.\n\n# Compatible with configurable variables from the other toolchain file:\n\n#         https://github.com/taka-no-me/android-cmake\n\n# TODO: We should consider dropping compatibility to simplify things once most\n\n# of our users have migrated to our standard set of configurable variables.\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Default values for configurable variables.\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# If no platform version was chosen by the user, default to the minimum version\n\n# supported by this NDK.\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Aliases defined by meta/platforms.json include codename aliases for platform\n\n# API levels as well as cover any gaps in platforms that may not have had NDK\n\n# APIs.\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Pull up to the minimum supported version if an old API level was requested.\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# And for LP64 we need to pull up to 21. No diagnostic is provided here because\n\n# minSdkVersion < 21 is valid for the project even though it may not be for this\n\n# ABI.\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# ANDROID_PLATFORM beyond the maximum is an error. The correct way to specify\n\n# the latest version is ANDROID_PLATFORM=latest.\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Export configurable variables for the try_compile() command.\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Standard cross-compiling stuff.\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Allow users to override these values in case they want more strict behaviors.\n\n# For example, they may want to prevent the NDK's libz from being picked up so\n\n# they can use their own.\n\n# https://github.com/android-ndk/ndk/issues/517\n",
        "Line" : 287,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# ABI.\n",
        "Line" : 307,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Don't re-export libgcc symbols in every binary.\n",
        "Line" : 350,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# STL.\n",
        "Line" : 354,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Behavior of CMAKE_SYSTEM_LIBRARY_PATH and CMAKE_LIBRARY_PATH are really weird\n\n# when CMAKE_SYSROOT is set. The library path is appended to the sysroot even if\n\n# the library path is an abspath. Using a relative path from the sysroot doesn't\n\n# work either, because the relative path is abspath'd relative to the current\n\n# CMakeLists.txt file before being appended :(\n\n#\n\n# We can try to get out of this problem by providing another root path for cmake\n\n# to check. CMAKE_FIND_ROOT_PATH is intended for this purpose:\n\n# https://cmake.org/cmake/help/v3.8/variable/CMAKE_FIND_ROOT_PATH.html\n\n#\n\n# In theory this should just be our sysroot, but since we don't have a single\n\n# sysroot that is correct (there's only one set of headers, but multiple\n\n# locations for libraries that need to be handled differently).  Some day we'll\n\n# want to move all the libraries into ${ANDROID_NDK}/sysroot, but we'll need to\n\n# make some fixes to Clang, various build systems, and possibly CMake itself to\n\n# get that working.\n",
        "Line" : 397,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Sysroot.\n",
        "Line" : 415,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# CMake 3.9 tries to use CMAKE_SYSROOT_COMPILE before it gets set from\n\n# CMAKE_SYSROOT, which leads to using the system's /usr/include. Set this\n\n# manually.\n\n# https://github.com/android-ndk/ndk/issues/467\n",
        "Line" : 418,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# The compiler driver doesn't check any arch specific include locations (though\n\n# maybe we should add that). Architecture specific headers like asm/ and\n\n# machine/ are installed to an arch-$ARCH subdirectory of the sysroot.\n",
        "Line" : 424,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# We need different sysroots for linking and compiling, but cmake doesn't\n\n# support that. Pass the sysroot flag manually when linking.\n",
        "Line" : 430,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# find_library searches a handful of paths as described by\n\n# https://cmake.org/cmake/help/v3.6/command/find_library.html.  Since libraries\n\n# are per-API level and headers aren't, We don't have libraries in the\n\n# CMAKE_SYSROOT. Set up CMAKE_SYSTEM_LIBRARY_PATH\n\n# (https://cmake.org/cmake/help/v3.6/variable/CMAKE_SYSTEM_LIBRARY_PATH.html)\n\n# instead.\n\n#\n\n# NB: The suffix is just lib here instead of dealing with lib64 because\n\n# apparently CMake does some automatic rewriting of that? I've been testing by\n\n# building my own CMake with a bunch of logging added, and that seems to be the\n\n# case.\n",
        "Line" : 436,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Toolchain.\n",
        "Line" : 450,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Clang can fail to compile if CMake doesn't correctly supply the target and\n\n# external toolchain, but to do so, CMake needs to already know that the\n\n# compiler is clang. Tell CMake that the compiler is really clang, but don't\n\n# use CMakeForceCompiler, since we still want compile checks. We only want\n\n# to skip the compiler ID detection step.\n\n#set(CMAKE_C_COMPILER_ID_RUN TRUE)\n\n#set(CMAKE_CXX_COMPILER_ID_RUN TRUE)\n\n#set(CMAKE_C_COMPILER_ID Clang)\n\n#set(CMAKE_CXX_COMPILER_ID Clang)\n\n#set(CMAKE_C_COMPILER_VERSION 7.0)\n\n#set(CMAKE_CXX_COMPILER_VERSION 7.0)\n\n#set(CMAKE_C_STANDARD_COMPUTED_DEFAULT 11)\n\n#set(CMAKE_CXX_STANDARD_COMPUTED_DEFAULT 98)\n\n#set(CMAKE_C_COMPILER_TARGET   ${ANDROID_LLVM_TRIPLE})\n\n#set(CMAKE_CXX_COMPILER_TARGET ${ANDROID_LLVM_TRIPLE})\n\n#set(CMAKE_ASM_COMPILER_TARGET ${ANDROID_LLVM_TRIPLE})\n\n#set(CMAKE_C_COMPILER_EXTERNAL_TOOLCHAIN   \"${ANDROID_TOOLCHAIN_ROOT}\")\n\n#set(CMAKE_CXX_COMPILER_EXTERNAL_TOOLCHAIN \"${ANDROID_TOOLCHAIN_ROOT}\")\n\n#set(CMAKE_ASM_COMPILER_EXTERNAL_TOOLCHAIN \"${ANDROID_TOOLCHAIN_ROOT}\")\n",
        "Line" : 474,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Generic flags.\n",
        "Line" : 506,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Debug and release flags.\n",
        "Line" : 522,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Toolchain and ABI specific flags.\n",
        "Line" : 534,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# http://b.android.com/222239\n\n# http://b.android.com/220159 (internal http://b/31809417)\n\n# x86 devices have stack alignment issues.\n",
        "Line" : 550,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# STL specific flags.\n",
        "Line" : 556,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Add the libc++ lib directory to the path so the linker scripts can pick up\n\n# the extra libraries.\n",
        "Line" : 568,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# Configuration specific flags.\n",
        "Line" : 605,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# x86 and x86_64 use large model pic, whereas everything else uses small model.\n\n# In the past we've always used -fPIE, but the LLVMgold plugin (for LTO)\n\n# complains if the models are mismatched.\n",
        "Line" : 607,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# PIE is supported on all currently supported Android releases, but it is not\n\n# supported with static executables, so we still provide ANDROID_PIE as an\n\n# escape hatch for those.\n",
        "Line" : 617,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# CMake automatically forwards all compiler flags to the linker,\n\n# and clang doesn't like having -Wa flags being used for linking.\n\n# To prevent CMake from doing this would require meddling with\n\n# the CMAKE_<LANG>_COMPILE_OBJECT rules, which would get quite messy.\n",
        "Line" : 667,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "# Convert these lists into strings.\n",
        "Line" : 689,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Set or retrieve the cached flags.\n\n# This is necessary in case the user sets/changes flags in subsequent\n\n# configures. If we included the Android flags in here, they would get\n\n# overwritten.\n",
        "Line" : 713,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Compatibility for read-only variables.\n\n# Read-only variables for compatibility with the other toolchain file.\n\n# We'll keep these around for the existing projects that still use them.\n\n# TODO: All of the variables here have equivalents in our standard set of\n\n# configurable variables, so we can remove these once most of our users migrate\n\n# to those variables.\n",
        "Line" : 755,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# CMake 3.7+ compatibility.\n",
        "Line" : 814,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 42
    },
    "cmake/dependencies/android-system-core.cmake" : {
      "ObjectId" : "5479e76403984ad461cafe66a6935cc5d1bea6f6",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/dependencies/freetype2.cmake" : {
      "ObjectId" : "5f48a9d756b509e5c24647ff37e850b6b03a294c",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/dependencies/fuse.cmake" : {
      "ObjectId" : "533e35292aed91cdf422288ba06c773346e4a654",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/dependencies/googletest.cmake" : {
      "ObjectId" : "ee986230c15590998af301bd91afadb674e4c6e8",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# https://github.com/google/googletest/issues/1303\n",
        "Line" : 14,
        "CharPositionInLine" : 16
      },
      "1" : {
        "Text" : "# gmock-port.h requires the gtest headers, but doesn't include them\n",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "cmake/dependencies/libarchive.cmake" : {
      "ObjectId" : "793ff3d9ec8236d253099f20b7a9d60bc3c3ad9a",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/dependencies/libdrm.cmake" : {
      "ObjectId" : "7facbaa96bde592d3f335efc4db2629becca9ea7",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/dependencies/liblzma.cmake" : {
      "ObjectId" : "5f2a3fe42b64a8c9dc5cc241bf886493d9def515",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/dependencies/libpng.cmake" : {
      "ObjectId" : "87dc61ea407a4a6dc98e0e47d234f50828a2ed81",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/dependencies/libsepol.cmake" : {
      "ObjectId" : "a9339511d989e072c450de6431a105384a7bfba1",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/dependencies/lz4.cmake" : {
      "ObjectId" : "1211524f6fff2b94858db642f5099dd63c4326da",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/dependencies/minizip.cmake" : {
      "ObjectId" : "b2a166c5fef28b7702ebadb0ac806fcad2619cfa",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Always use bundled minizip\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/dependencies/openssl.cmake" : {
      "ObjectId" : "8f8018a09ed742b1c2fc4a6c50f52441fc175770",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/dependencies/outcome.cmake" : {
      "ObjectId" : "db3ee09922d0108772ec85678005a30a56b3bf63",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# outcome is a header only library. We don't use add_subdirectory() because we\n\n# don't need any of the additional things that the CMake scripts provide.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/dependencies/qt5.cmake" : {
      "ObjectId" : "18d72b746caf68c611b8f806e15e1a1339e7b4b4",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# cmake 3.7 has a bug where add_custom_command() appends the target name as an\n\n# argument if running an imported command. This breaks cross compiling for\n\n# Windows because qt5_add_resources() calls add_custom_command() with the\n\n# Qt5::rcc target.\n\n#\n\n# We'll work around this by unsetting CMAKE_CROSSCOMPILING_EMULATOR.\n\n#\n\n# See: https://gitlab.kitware.com/cmake/cmake/issues/16288\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/dependencies/rapidjson.cmake" : {
      "ObjectId" : "f3cd6dd200b5224db0f28533d3fa838384b2a853",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# rapidjson is a header only library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Enable rapidjson std::string API\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/dependencies/safe-iop.cmake" : {
      "ObjectId" : "959c7162ad41c0213b75037c00961b9dc8c1d6ba",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/dependencies/yaml-cpp.cmake" : {
      "ObjectId" : "2a3cf19340629cbeb607f89e10e60322e079ddb8",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/dependencies/zlib.cmake" : {
      "ObjectId" : "55dd1a75e3f86f60a45015448c471552b92ca71b",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/external/GetGitRevisionDescription.cmake" : {
      "ObjectId" : "f409d439fa8b151e0fb5040ac3ef7478c8b3e144",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Returns a version string from Git\n\n#\n\n# These functions force a re-configure on each git commit so that you can\n\n# trust the values of the variables in your build system.\n\n#\n\n#  get_git_head_revision(<refspecvar> <hashvar> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the refspec and sha hash of the current head revision\n\n#\n\n#  git_describe(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe on the source tree, and adjusting\n\n# the output so that it tests false if an error occurs.\n\n#\n\n#  git_get_exact_tag(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe --exact-match on the source tree,\n\n# and adjusting the output so that it tests false if there was no exact\n\n# matching tag.\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We must run the following at \"include\" time, not at function call time,\n\n# to find the path to this module rather than the path to a calling list file\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# .git dir not found, search parent directories\n",
        "Line" : 45,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "# We have reached the root directory, we are not in git\n",
        "Line" : 49,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# check if this is a submodule\n",
        "Line" : 56,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# TODO sanitize\n\n#if((${ARGN}\" MATCHES \"&&\") OR\n\n#\t(ARGN MATCHES \"||\") OR\n\n#\t(ARGN MATCHES \"\\\\;\"))\n\n#\tmessage(\"Please report the following error to the project!\")\n\n#\tmessage(FATAL_ERROR \"Looks like someone's doing something nefarious with git_describe! Passed arguments ${ARGN}\")\n\n#endif()\n",
        "Line" : 97,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "#message(STATUS \"Arguments to execute_process: ${ARGN}\")\n",
        "Line" : 105,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "#${hash}\n",
        "Line" : 110,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "cmake/modules/FindAndroidLibCutils.cmake" : {
      "ObjectId" : "d19f2de11d1921bd94b77afccdfe549f35fdefe5",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the libcutils include directory and library\n\n#\n\n# ANDROID_LIBCUTILS_INCLUDE_DIR - Where to find <cutils/log.h>\n\n# ANDROID_LIBCUTILS_LIBRARIES   - List of libcutils libraries\n\n# ANDROID_LIBCUTILS_FOUND       - True if libcutils found\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find include directory\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find library\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/modules/FindAndroidLibLog.cmake" : {
      "ObjectId" : "7ad6b7ab1b43ee53d4f58a65b0d854744a7a2761",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the liblog include directory and library\n\n#\n\n# ANDROID_LIBLOG_INCLUDE_DIR - Where to find <log/log.h>\n\n# ANDROID_LIBLOG_LIBRARIES   - List of liblog libraries\n\n# ANDROID_LIBLOG_FOUND       - True if liblog found\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find include directory\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find library\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/modules/FindAndroidLibUtils.cmake" : {
      "ObjectId" : "598eae65a781271834bc86dbd5b4e2f664fe2dd2",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the libutils include directory and library\n\n#\n\n# ANDROID_LIBUTILS_INCLUDE_DIR - Where to find <utils/Log.h>\n\n# ANDROID_LIBUTILS_LIBRARIES   - List of libutils libraries\n\n# ANDROID_LIBUTILS_FOUND       - True if libutils found\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find include directory\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find library\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/modules/FindAndroidPixelFlinger.cmake" : {
      "ObjectId" : "706b20c0d8db40e9acb25ce75f109d9e9132cfb6",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the pixelflinger include directory and library\n\n#\n\n# ANDROID_PIXELFLINGER_INCLUDE_DIR - Where to find <pixelflinger/pixelflinger.h>\n\n# ANDROID_PIXELFLINGER_LIBRARIES   - List of pixelflinger libraries\n\n# ANDROID_PIXELFLINGER_FOUND       - True if pixelflinger found\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find include directory\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find library\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/modules/FindFuse.cmake" : {
      "ObjectId" : "23f75eb1e70aa841c22411b8c781a6769f684716",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the fuse include directory and library\n\n#\n\n# FUSE_INCLUDE_DIR - Where to find <fuse.h>\n\n# FUSE_LIBRARIES   - List of fuse libraries\n\n# FUSE_FOUND       - True if fuse found\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find include directory\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find library\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/modules/FindLZ4.cmake" : {
      "ObjectId" : "02beec29b28188f86198c1f31be7166db66ec541",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the LZ4 include directory and library\n\n#\n\n# LZ4_INCLUDE_DIR - Where to find <lz4.h>\n\n# LZ4_LIBRARIES   - List of lz4 libraries\n\n# LZ4_FOUND       - True if lz4 found\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find include directory\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find library\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/modules/FindLibDrm.cmake" : {
      "ObjectId" : "20cbaafa580f135e2c65cca91c6bce826aae9d98",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the libdrm include directory and library\n\n#\n\n# LIBDRM_INCLUDE_DIR - Where to find <libdrm/drm.h>\n\n# LIBDRM_LIBRARIES   - List of libdrm libraries\n\n# LIBDRM_FOUND       - True if libdrm found\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find include directory\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find library\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/modules/FindLibSepol.cmake" : {
      "ObjectId" : "1ecff4fbd43c171ef80f75ae241694fe4c5f428a",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the libsepol include directory and library\n\n#\n\n# LIBSEPOL_INCLUDE_DIR - Where to find <sepol/sepol.h>\n\n# LIBSEPOL_LIBRARIES   - List of libsepol libraries\n\n# LIBSEPOL_FOUND       - True if libsepol found\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find include directory\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find library\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/modules/FindSafeIop.cmake" : {
      "ObjectId" : "b61b9e2c16beba9c14eee27aec9c99fc71d865d2",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the safe-iop include directory and library\n\n#\n\n# SAFE_IOP_INCLUDE_DIR - Where to find <safe_iop.h>\n\n# SAFE_IOP_LIBRARIES   - List of safe-iop libraries\n\n# SAFE_IOP_FOUND       - True if safe-iop found\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find include directory\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find library\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/modules/FindYamlCpp.cmake" : {
      "ObjectId" : "ab8755aecccb3ba710b44c2655ae909bf509bbaf",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the yaml-cpp include directory and library\n\n#\n\n# YAML_CPP_INCLUDE_DIR - Where to find <yaml-cpp/yaml.h>\n\n# YAML_CPP_LIBRARIES   - List of yaml-cpp libraries\n\n# YAML_CPP_FOUND       - True if yaml-cpp found\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find include directory\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find library\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "data/CMakeLists.txt" : {
      "ObjectId" : "1051abcc6c0fc0afebf2ea08f32e16ff7146c229",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Scripts\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copy scripts to binary dir so the signing process won't clobber the source\n\n# directory with .sig files\n",
        "Line" : 3,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "data/devices/CMakeLists.txt" : {
      "ObjectId" : "1f0daaf516b181368a1e7de5d7834467a16eeb6b",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#--styled\n",
        "Line" : 85,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 1
    },
    "devicesgen/CMakeLists.txt" : {
      "ObjectId" : "35f2391edf4655921627e43f93c7b07ae111d4b4",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/CMakeLists.txt" : {
      "ObjectId" : "ff34ca2059a1ed3f47de2f8a451c463ce1729e65",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# libmbpatcher tester\n",
        "Line" : 2,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# desparse tool\n",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# binary grep tool\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# boot image compare tool\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Simple frontend to libmbsystrace\n",
        "Line" : 64,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "gui/CMakeLists.txt" : {
      "ObjectId" : "e1152f0d19425e78420de001dd629e21e1ffb43f",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set rpath for portable build\n",
        "Line" : 68,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Linux-specific files\n",
        "Line" : 84,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "hosttools/CMakeLists.txt" : {
      "ObjectId" : "7c870024bed59a2acda49bf12e6e9a5da1706474",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This sets up hosttools as an external project. This is needed because we may\n\n# be cross-compiling, but the host tools should always be compiled for the host\n\n# as they need to run during build-time.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Always build system components\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "libmbbootimg/CMakeLists.txt" : {
      "ObjectId" : "d9ce7a4373fc00d009de72359a04659378d8e374",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build libraries\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build library\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Core\n",
        "Line" : 21,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Formats\n",
        "Line" : 29,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Includes\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Only build static library if needed\n",
        "Line" : 51,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Set library name\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Link dependencies\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Install shared library\n",
        "Line" : 72,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#ARCHIVE DESTINATION ${LIB_INSTALL_DIR} COMPONENT Libraries\n",
        "Line" : 78,
        "CharPositionInLine" : 12
      },
      "10" : {
        "Text" : "# Build tests\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Build tests\n",
        "Line" : 85,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Helpers\n",
        "Line" : 88,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# Core\n",
        "Line" : 90,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# Formats\n",
        "Line" : 94,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# Link dependencies\n",
        "Line" : 108,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Add to ctest\n",
        "Line" : 124,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Interfaces\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "libmbcommon/CMakeLists.txt" : {
      "ObjectId" : "d13aa08ab6088c5e7525ab88a11c46facb22d360",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# _FILE_OFFSET_BITS is now meaningful in NDK r15c. We can't define it unless we\n\n# target API 24 or newer or else fgetpos() and fsetpos() will be undefined,\n\n# which prevents <cstdio> from being included.\n\n# See: https://github.com/android-ndk/ndk/issues/480\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# mb::format() requires non-literal format string\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Build libraries\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Build library\n",
        "Line" : 51,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Includes\n",
        "Line" : 91,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Only build static library if needed\n",
        "Line" : 97,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Don't warn on empty format strings\n",
        "Line" : 103,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Set library name\n",
        "Line" : 107,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Link dependencies\n",
        "Line" : 110,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Install shared library\n",
        "Line" : 122,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "#ARCHIVE DESTINATION ${LIB_INSTALL_DIR} COMPONENT Libraries\n",
        "Line" : 128,
        "CharPositionInLine" : 12
      },
      "11" : {
        "Text" : "# Build tests\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Build tests\n",
        "Line" : 135,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Helpers\n",
        "Line" : 138,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# Tests\n",
        "Line" : 140,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# Don't warn on empty format strings\n",
        "Line" : 162,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Link dependencies\n",
        "Line" : 167,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Add to ctest\n",
        "Line" : 181,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Interfaces\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "libmbdevice/CMakeLists.txt" : {
      "ObjectId" : "ed9232113af7fa426c13f122dfe848109c48d225",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is a terrible hack\n\n# - The hosttools target will build schemas2cpp for the host and use it when\n\n#   building libmbdevice\n\n# - The desktop target will use the hosttools-compiled schemas2cpp binary to\n\n#   support cross-compilation\n\n# - The Android targets will do the same as the desktop target, except that\n\n#   there will be no dependency on hosttools because the binary path is supplied\n\n#   by the parent CMake invocation\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Convert schemas to C++ strings\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Build libraries\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Build library\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Includes\n",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Only build static library if needed\n",
        "Line" : 79,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Set library name\n",
        "Line" : 84,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Link dependencies\n",
        "Line" : 87,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Install shared library\n",
        "Line" : 99,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#ARCHIVE DESTINATION ${LIB_INSTALL_DIR} COMPONENT Libraries\n",
        "Line" : 105,
        "CharPositionInLine" : 12
      },
      "10" : {
        "Text" : "# Build tests\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Build tests\n",
        "Line" : 112,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Helpers\n",
        "Line" : 115,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# Tests\n",
        "Line" : 117,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# Link dependencies\n",
        "Line" : 123,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Add to ctest\n",
        "Line" : 136,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Build schemas2cpp\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Headers only\n",
        "Line" : 148,
        "CharPositionInLine" : 24
      },
      "CommentCount" : 18
    },
    "libmblog/CMakeLists.txt" : {
      "ObjectId" : "a22ca494a145bf2de33b6d421f0d097364fc30e5",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build libraries\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build library\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Includes\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Only build static library if needed\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Ignore non-literal format strings\n",
        "Line" : 46,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Set library name\n",
        "Line" : 51,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Link dependencies\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Install shared library\n",
        "Line" : 72,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#ARCHIVE DESTINATION ${LIB_INSTALL_DIR} COMPONENT Libraries\n",
        "Line" : 78,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 9
    },
    "libmbpatcher/CMakeLists.txt" : {
      "ObjectId" : "ac5c6be0fd6cf592b250d1b0c27919865b1ace4a",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build libraries\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build library\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# C wrapper API\n",
        "Line" : 23,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Edify tokenizer\n",
        "Line" : 27,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Private classes\n",
        "Line" : 29,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Autopatchers\n",
        "Line" : 32,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Patchers\n",
        "Line" : 36,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Includes\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Only build static library if needed\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Set library name\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Link dependencies\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Install shared library\n",
        "Line" : 80,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "#ARCHIVE DESTINATION ${LIB_INSTALL_DIR} COMPONENT Libraries\n",
        "Line" : 86,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 13
    },
    "libmbpio/CMakeLists.txt" : {
      "ObjectId" : "e4f646bed1220beaea4a63a68299a20a666c93f4",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build libraries\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build library\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Includes\n",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Only build static library if needed\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Set library name\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Link dependencies\n",
        "Line" : 51,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Install shared library\n",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#ARCHIVE DESTINATION ${LIB_INSTALL_DIR} COMPONENT Libraries\n",
        "Line" : 68,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 8
    },
    "libmbsign/CMakeLists.txt" : {
      "ObjectId" : "4f6c64c71915b2afbfe56d95d9264e8a65e8fe16",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build libraries\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build library\n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Includes\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Only build static library if needed\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Set library name\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Link dependencies\n",
        "Line" : 37,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Install shared library\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#ARCHIVE DESTINATION ${LIB_INSTALL_DIR} COMPONENT Libraries\n",
        "Line" : 55,
        "CharPositionInLine" : 12
      },
      "8" : {
        "Text" : "# Build tests\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Build tests\n",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Helpers\n",
        "Line" : 65,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# Tests\n",
        "Line" : 67,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# Link dependencies\n",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Add to ctest\n",
        "Line" : 84,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 14
    },
    "libmbsparse/CMakeLists.txt" : {
      "ObjectId" : "10dc619d8524318842c73372987d9941bba3bb67",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build libraries\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build library\n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Includes\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Only build static library if needed\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Set library name\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Link dependencies\n",
        "Line" : 37,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Install shared library\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#ARCHIVE DESTINATION ${LIB_INSTALL_DIR} COMPONENT Libraries\n",
        "Line" : 55,
        "CharPositionInLine" : 12
      },
      "8" : {
        "Text" : "# Build tests\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Build tests\n",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Helpers\n",
        "Line" : 65,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# Tests\n",
        "Line" : 67,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# Link dependencies\n",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Add to ctest\n",
        "Line" : 84,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 14
    },
    "libmbsystrace/CMakeLists.txt" : {
      "ObjectId" : "c5a6d013764db3af12f45f868a849d1c6d9bdac9",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# On Android, we can't simply append eg. -m32 to CMAKE_CXX_FLAGS because\n\n# the NDK uses -target and -isystem to differentiate between\n\n# architectures.\n",
        "Line" : 27,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "# On non-Android, assume that -m32, etc. can be used\n",
        "Line" : 59,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# <arch name>::<compiler macro>\n",
        "Line" : 120,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Generated signals header\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Generate syscalls header for host ABI\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Generate syscalls headers for compatible ABIs\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# No shared version\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Build libraries\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Build library\n",
        "Line" : 176,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Includes\n",
        "Line" : 196,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Only build static library if needed\n",
        "Line" : 206,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Set library name\n",
        "Line" : 211,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Link dependencies\n",
        "Line" : 214,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Install shared library\n",
        "Line" : 226,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "#ARCHIVE DESTINATION ${LIB_INSTALL_DIR} COMPONENT Libraries\n",
        "Line" : 232,
        "CharPositionInLine" : 12
      },
      "15" : {
        "Text" : "# Build tests\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Build tests\n",
        "Line" : 239,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Helpers\n",
        "Line" : 242,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# Tests\n",
        "Line" : 244,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# Link dependencies\n",
        "Line" : 256,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Add to ctest\n",
        "Line" : 277,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 21
    },
    "libmbsystrace/headersgen/CMakeLists.txt" : {
      "ObjectId" : "73247bc6e7c11a24c8bf2a6e958370bd2b5d392a",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libmbutil/CMakeLists.txt" : {
      "ObjectId" : "22b19d0e963d778fb9adc623770d2b445466060a",
      "LastModified" : "2019-01-31T00:52:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# No shared version\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build libraries\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Build library\n",
        "Line" : 27,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Includes\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Only build static library if needed\n",
        "Line" : 67,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Set library name\n",
        "Line" : 72,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Link dependencies\n",
        "Line" : 75,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Install shared library\n",
        "Line" : 89,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#ARCHIVE DESTINATION ${LIB_INSTALL_DIR} COMPONENT Libraries\n",
        "Line" : 95,
        "CharPositionInLine" : 12
      },
      "9" : {
        "Text" : "# Build tests\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Build tests\n",
        "Line" : 102,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Helpers\n",
        "Line" : 105,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# Tests\n",
        "Line" : 107,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# Link dependencies\n",
        "Line" : 111,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Add to ctest\n",
        "Line" : 125,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 15
    },
    "libmiscstuff-jni/CMakeLists.txt" : {
      "ObjectId" : "a8257d8310d3e05d67eb5aed50c9d1e8c9c76a76",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ARCHIVE DESTINATION ${LIB_INSTALL_DIR} COMPONENT Libraries\n",
        "Line" : 30,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 1
    },
    "mbbootui/CMakeLists.txt" : {
      "ObjectId" : "429f3f18593eadeb66ae04db14bdff8cfc7a6672",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Silence warnings instead of fixing them so we don't deviate from upstream too\n\n# much\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "mbbootui/config/CMakeLists.txt" : {
      "ObjectId" : "5312def5d960072d3b417bf2de663fe7ac7d2db4",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "mbbootui/gui/CMakeLists.txt" : {
      "ObjectId" : "26eb9f75b3917199b7d55c53d4e42e8372715170",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# terminal.cpp has a GNU-ism: uses \"\\e\" instead of \"\\033\" or \"\\x1b\"\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Uncomment to enable event logging\n\n#target_compile_definitions(\n\n#    mbbootui-gui\n\n#    PRIVATE\n\n#    -D_EVENT_LOGGING\n\n#)\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "mbbootui/minuitwrp/CMakeLists.txt" : {
      "ObjectId" : "ad3fb6576ec949f5552a6e89edfe2aad6ce1a2e4",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Backends\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Uncomment to enable event logging\n\n#target_compile_definitions(mbbootui-minui PRIVATE -D_EVENT_LOGGING)\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Uncomment to enable JPEG support (currently not working)\n\n#target_include_directories(mbbootui-minui PRIVATE ${MBP_LIBJPEG_INCLUDES})\n\n#target_compile_definitions(mbbootui-minui PRIVATE -DTW_INCLUDE_JPEG)\n\n#target_link_libraries(mbbootui-minui PRIVATE ${MBP_LIBJPEG_LIBRARIES})\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Overlay backend (MSM old)\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ADF backend\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# DRM backend\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# FBDEV backend\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "mbbootui/minzip/CMakeLists.txt" : {
      "ObjectId" : "9e551d57e4b0358108d143d4a9887290e2b1ce02",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "mbtool/CMakeLists.txt" : {
      "ObjectId" : "9efc0616da81c567c81a4c983ee9a2bdc7dd2951",
      "LastModified" : "2019-02-12T02:31:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Generate validcerts.cpp\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Includes\n",
        "Line" : 120,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# Disable some pugixml features\n",
        "Line" : 130,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 3
    },
    "misc/CMakeLists.txt" : {
      "ObjectId" : "b44e44d59a4240b7c9d6254785a3b3c5298c9c37",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We use assembly for fsck-wrapper because there's no reason that\n\n#\n\n#    int main(int argc, int argv) { return 0; }\n\n#\n\n# should take a few hundred kilobytes.\n",
        "Line" : 47,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "odinupdater/CMakeLists.txt" : {
      "ObjectId" : "703a80098c17d9477cc318d6479e1717988211f2",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "signtool/CMakeLists.txt" : {
      "ObjectId" : "0c835059cbb825dbdc8daeffbfa8be464b49a9a2",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "thirdparty/CMakeLists.txt" : {
      "ObjectId" : "55262c8a2dacc6ca1ed0e0dd17d582fef93b58bc",
      "LastModified" : "2019-01-31T00:52:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# All of the files here are built from the PKGBUILD files in thirdparty/*/PKGBUILD.\n\n# All of the files are signed with my GPG key and correct hashes are provided\n\n# at https://dbp.noobdev.io/repo/prebuilts, but if you don't trust me or\n\n# my binaries, you can use your own builds builds by copying your own prebuilts\n\n# to thirdparty/prebuilts and updating the checksums here. It is not necessary\n\n# to upload the files to a server as CMake will not download the files if the\n\n# checksums match.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Download prebuilt archive to prebuilts directory\n",
        "Line" : 53,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Extract the archive\n",
        "Line" : 63,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "################################################################################\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "################################################################################\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "################################################################################\n\n# fuse-exfat for Android\n\n################################################################################\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "################################################################################\n\n# libarchive for Android\n\n################################################################################\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "###############################################################################\n\n# liblzma for Android\n\n################################################################################\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "################################################################################\n\n# lz4 for Android\n\n################################################################################\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "################################################################################\n\n# libsepol for Android\n\n################################################################################\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "################################################################################\n\n# libpng for Android\n\n################################################################################\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "################################################################################\n\n# freetype2 for Android\n\n################################################################################\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# AOSP calls the library libft2 instead of libfreetype for some reason\n",
        "Line" : 236,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "################################################################################\n\n# libdrm for Android\n\n################################################################################\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "################################################################################\n\n# safe-iop for Android\n\n################################################################################\n",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "################################################################################\n\n# AOSP system/core libraries\n\n################################################################################\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "################################################################################\n\n# boringssl for Android\n\n################################################################################\n",
        "Line" : 303,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "################################################################################\n\n# FUSE for Android\n\n################################################################################\n",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "################################################################################\n\n# test-runner-image\n\n################################################################################\n",
        "Line" : 342,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "################################################################################\n\n# AROMA for Android\n\n################################################################################\n",
        "Line" : 361,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#\"http://forum.xda-developers.com/devdb/project/dl/?id=286&task=get\"\n",
        "Line" : 370,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "################################################################################\n",
        "Line" : 382,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "################################################################################\n",
        "Line" : 387,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Ensure parent scope can see the changes to CMAKE_FIND_ROOT_PATH\n",
        "Line" : 389,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24
    },
    "utilities/CMakeLists.txt" : {
      "ObjectId" : "77c1a6756b46175d59ed1907e98a46f8bc6fe550",
      "LastModified" : "2019-01-09T02:26:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 76,
    "QMAKE" : 1
  },
  "ElapsedTime" : 3282
}