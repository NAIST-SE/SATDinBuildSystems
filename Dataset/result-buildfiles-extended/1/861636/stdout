{
  "Repository" : "861636",
  "Revision" : "HEAD",
  "ObjectId" : "2a10964dd6c6f9ae8bc61b90df459bbcd2d4f740",
  "CommitTime" : "2017-03-07T14:15:11Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "ab79a66fd95473d124388a87807ecfc708a6d353",
      "LastModified" : "2016-05-26T17:16:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Use solution folders.\r\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#compiler specific configuration settings\r\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#configure wxmsw build variables\r\n",
        "Line" : 27,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 3
    },
    "cmake/FindAssimp.cmake" : {
      "ObjectId" : "f7f3517a63e0eb0a62b0bd29027088533de9e5d7",
      "LastModified" : "2016-05-28T23:58:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find path of each library\r\n",
        "Line" : 10,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "#binary distribution\r\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#in source build\r\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#out of source build\r\n",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "cmake/FindGLEW.cmake" : {
      "ObjectId" : "2b34dee727a1c9fc446afc79d7c664b394bf4543",
      "LastModified" : "2014-04-25T05:19:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\r\n\n# Try to find GLEW library and include path.\r\n\n# Once done this will define\r\n\n#\r\n\n# GLEW_FOUND\r\n\n# GLEW_INCLUDE_PATH\r\n\n# GLEW_LIBRARY\r\n\n# \r\n\n# This script based on the version from nvidia-texture-tools : https://code.google.com/p/nvidia-texture-tools\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindSDL2.cmake" : {
      "ObjectId" : "9ffc3558edaadfdc72ca5199adfa8298cdb7e216",
      "LastModified" : "2016-04-06T17:44:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate SDL2 library\n\n# This module defines\n\n# SDL2_LIBRARY, the name of the library to link against\n\n# SDL2_FOUND, if false, do not try to link to SDL2\n\n# SDL2_INCLUDE_DIR, where to find SDL.h\n\n#\n\n# This module responds to the the flag:\n\n# SDL2_BUILDING_LIBRARY\n\n# If this is defined, then no SDL2main will be linked in because\n\n# only applications need main().\n\n# Otherwise, it is assumed you are building an application and this\n\n# module will attempt to locate and set the the proper link flags\n\n# as part of the returned SDL2_LIBRARY variable.\n\n#\n\n# Don't forget to include SDLmain.h and SDLmain.m your project for the\n\n# OS X framework based version. (Other versions link to -lSDL2main which\n\n# this module will try to find on your behalf.) Also for OS X, this\n\n# module will automatically add the -framework Cocoa on your behalf.\n\n#\n\n#\n\n# Additional Note: If you see an empty SDL2_LIBRARY_TEMP in your configuration\n\n# and no SDL2_LIBRARY, it means CMake did not find your SDL2 library\n\n# (SDL2.dll, libsdl2.so, SDL2.framework, etc).\n\n# Set SDL2_LIBRARY_TEMP to point to your SDL2 library, and configure again.\n\n# Similarly, if you see an empty SDL2MAIN_LIBRARY, you should set this value\n\n# as appropriate. These values are used to generate the final SDL2_LIBRARY\n\n# variable, but when these values are unset, SDL2_LIBRARY does not get created.\n\n#\n\n#\n\n# $SDL2DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$SDL2DIR\n\n# used in building SDL2.\n\n# l.e.galup  9-20-02\n\n#\n\n# Modified by Eric Wing.\n\n# Added code to assist with automated building by using environmental variables\n\n# and providing a more controlled/consistent search behavior.\n\n# Added new modifications to recognize OS X frameworks and\n\n# additional Unix paths (FreeBSD, etc).\n\n# Also corrected the header search path to follow \"proper\" SDL guidelines.\n\n# Added a search for SDL2main which is needed by some platforms.\n\n# Added a search for threads which is needed by some platforms.\n\n# Added needed compile switches for MinGW.\n\n#\n\n# On OSX, this will prefer the Framework version (if found) over others.\n\n# People will have to manually change the cache values of\n\n# SDL2_LIBRARY to override this selection or set the CMake environment\n\n# CMAKE_INCLUDE_PATH to modify the search paths.\n\n#\n\n# Note that the header path has changed from SDL2/SDL.h to just SDL.h\n\n# This needed to change because \"proper\" SDL convention\n\n# is #include \"SDL.h\", not <SDL2/SDL.h>. This is done for portability\n\n# reasons because not all systems place things in SDL2/ (see FreeBSD).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2003-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fink\n",
        "Line" : 73,
        "CharPositionInLine" : 5
      },
      "3" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 74,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : "# Blastwave\n",
        "Line" : 75,
        "CharPositionInLine" : 10
      },
      "5" : {
        "Text" : "# Non-OS X framework versions expect you to also dynamically link to\n\n# SDL2main. This is mainly for Windows and OS X. Other (Unix) platforms\n\n# seem to provide SDL2main for compatibility even though they don't\n\n# necessarily need it.\n",
        "Line" : 96,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# SDL2 may require threads on your system.\n\n# The Apple build may not need an explicit flag because one of the\n\n# frameworks may already provide it.\n\n# But for non-OSX systems, I will use the CMake Threads package.\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# MinGW needs an additional library, mwindows\n\n# It's total link flags should look like -lmingw32 -lSDL2main -lSDL2 -lmwindows\n\n# (Actually on second look, I think it only needs one of the m* libraries.)\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# For SDL2main\n",
        "Line" : 126,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# For OS X, SDL2 uses Cocoa as a backend so it must link to Cocoa.\n\n# CMake doesn't display the -framework Cocoa string in the UI even\n\n# though it actually is there if I modify a pre-used variable.\n\n# I think it has something to do with the CACHE STRING.\n\n# So I use a temporary variable until the end so I can set the\n\n# \"real\" variable in one-shot.\n",
        "Line" : 133,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# For threads, as mentioned Apple doesn't need this.\n\n# In fact, there seems to be a problem if I used the Threads package\n\n# and try using this line, so I'm just skipping it entirely for OS X.\n",
        "Line" : 143,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# For MinGW library\n",
        "Line" : 150,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# Set the final string here so the GUI reflects the final state.\n",
        "Line" : 155,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# Set the temp variable to INTERNAL so it is not seen in the CMake GUI\n",
        "Line" : 157,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 14
    },
    "cmake/recondite.cmake" : {
      "ObjectId" : "895deb622c2d059f049cc6e30603e5e8d7a0f325",
      "LastModified" : "2014-10-28T05:03:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/CMakeLists.txt" : {
      "ObjectId" : "44b948edfd8ff323c58114c292205edd2d7fe9cd",
      "LastModified" : "2016-12-26T15:26:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/basicscene)\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "samples/basicscene/CMakeLists.txt" : {
      "ObjectId" : "e08db56c7561de68adce4b123197ca89d1abea8d",
      "LastModified" : "2015-01-24T23:29:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "samples/modelviewer/CMakeLists.txt" : {
      "ObjectId" : "dd26f0b404e4966a374df64fdf60530ebe554b15",
      "LastModified" : "2016-12-26T15:26:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#recondite\r\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#sdl\r\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#glew\r\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "samples/selection/CMakeLists.txt" : {
      "ObjectId" : "83aaaa032f35305a053950a192d0d4fafcc94744",
      "LastModified" : "2016-12-26T15:26:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#recondite\r\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#sdl\r\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#glew\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "samples/userinterface/CMakeLists.txt" : {
      "ObjectId" : "6c17d5b5bdd8020d55e63334c2025c6456df46df",
      "LastModified" : "2016-12-26T15:26:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#recondite\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#sdl\r\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#glew\r\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "6e43e2fab1a4a706cefb15f79c1615b425d911ee",
      "LastModified" : "2017-01-16T19:21:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/asset/CMakeLists.txt" : {
      "ObjectId" : "0b1e59ef8a84407e64defa65d0bde1c79b9d11c0",
      "LastModified" : "2017-01-18T03:41:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/core/CMakeLists.txt" : {
      "ObjectId" : "fc5f8098e9448fb247e7fb9fffdb59663f1fff35",
      "LastModified" : "2017-02-17T05:18:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#list(APPEND core_files ${CMAKE_CURRENT_SOURCE_DIR}/../../include/rAnimationCurve.hpp)\r\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#list(APPEND core_files ${CMAKE_CURRENT_SOURCE_DIR}/../../include/container/rOctree.hpp)\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/geometry/CMakeLists.txt" : {
      "ObjectId" : "6288629ac2ea242b023e0d1eb2585c8b21f22403",
      "LastModified" : "2016-12-26T15:26:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/input/CMakeLists.txt" : {
      "ObjectId" : "33b4a89065a1fb0d7a7a67010c2dea427540ed89",
      "LastModified" : "2016-12-26T15:26:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/log/CMakeLists.txt" : {
      "ObjectId" : "f52b93e8dd730ef823ef7a8cdf47037f6c24e8cb",
      "LastModified" : "2016-12-26T15:26:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/math/CMakeLists.txt" : {
      "ObjectId" : "f0aad0d1162abe7801318e0d8b6631fbeac54451",
      "LastModified" : "2016-12-26T15:26:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/platform/CMakeLists.txt" : {
      "ObjectId" : "0dbd18163b7cac52e018d160fee2b2f496f2f4da",
      "LastModified" : "2016-12-26T15:26:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/platform/rgl/CMakeLists.txt" : {
      "ObjectId" : "abce1aca895fbcde9044d987bfac6cb1852b755b",
      "LastModified" : "2017-03-07T14:15:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#copy the shaders to the default directory as a post build step\r\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/platform/sdl/CMakeLists.txt" : {
      "ObjectId" : "de65b21b454abb9f19bc19373b2a95af4fe75b71",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# In this case we are building a shared library and not want to link against sdl main\r\n\n# Lets pull only the libsdl library out of the list and link that\r\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/primitive/CMakeLists.txt" : {
      "ObjectId" : "4149c733cd9949fd8b37d6a326058684ff7be819",
      "LastModified" : "2016-12-26T15:26:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/stream/CMakeLists.txt" : {
      "ObjectId" : "2570fbb83fb5cad2faee08f50528de2dc8221420",
      "LastModified" : "2017-02-19T01:41:43Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/ui/CMakeLists.txt" : {
      "ObjectId" : "e61c4d79b22f0d10ff912152044d7d5fdb93b9b0",
      "LastModified" : "2016-12-26T15:26:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/xml/CMakeLists.txt" : {
      "ObjectId" : "a4b95e25ee4483a247dc335e33b2dca09586420c",
      "LastModified" : "2016-12-26T15:26:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "8bea2b05d6aa4175f1f39a418fa8c4bd90106570",
      "LastModified" : "2017-02-19T01:41:43Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/core/CMakeLists.txt" : {
      "ObjectId" : "f2758427e8c53d8281cd941631d692fd3a635a89",
      "LastModified" : "2017-02-19T01:41:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#list(APPEND core_test_files ${CMAKE_CURRENT_SOURCE_DIR}/rAnimation_Test.cpp)\r\n\n#list(APPEND core_test_files ${CMAKE_CURRENT_SOURCE_DIR}/rAnimationCurve_Test.cpp)\r\n\n#list(APPEND core_test_files ${CMAKE_CURRENT_SOURCE_DIR}/rAnimationPlayer_Test.cpp)\r\n\n#list(APPEND core_test_files ${CMAKE_CURRENT_SOURCE_DIR}/rAnimationTrack_Test.cpp)\r\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/geometry/CMakeLists.txt" : {
      "ObjectId" : "f304fda55c3db57c904d764420599f5aabfa4316",
      "LastModified" : "2016-12-26T15:26:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/math/CMakeLists.txt" : {
      "ObjectId" : "44c07b9a16a639cc7ead1cabb302fc610625a264",
      "LastModified" : "2016-12-26T15:26:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/stream/CMakeLists.txt" : {
      "ObjectId" : "41a447c0e50699bae6838d49fe4fbe30133356e5",
      "LastModified" : "2017-02-19T01:41:43Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/testcommon/CMakeLists.txt" : {
      "ObjectId" : "0c1a77f68083fcc9269f0aad33b420d973fa9f79",
      "LastModified" : "2017-02-19T01:41:43Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/ui/CMakeLists.txt" : {
      "ObjectId" : "5c3ef4410381d93010c4bab8050c35e5dfc90b49",
      "LastModified" : "2017-02-19T01:41:43Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/CMakeLists.txt" : {
      "ObjectId" : "a39023d24b83f08affde1be9d77ef7e606ed892d",
      "LastModified" : "2017-02-19T01:41:43Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/editor/CMakeLists.txt" : {
      "ObjectId" : "935dcfc2fc46d07af049a287570409c49fc85276",
      "LastModified" : "2017-02-19T01:41:43Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/editor/assets/project_template/CMakeLists.txt" : {
      "ObjectId" : "513ddae37aac26082de185b59142750a03b54274",
      "LastModified" : "2017-02-19T01:41:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Use solution folders.\r\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#compiler specific configuration settings\r\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tools/editor/assets/project_template/cmake/FindGLEW.cmake" : {
      "ObjectId" : "2b34dee727a1c9fc446afc79d7c664b394bf4543",
      "LastModified" : "2017-02-19T01:41:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\r\n\n# Try to find GLEW library and include path.\r\n\n# Once done this will define\r\n\n#\r\n\n# GLEW_FOUND\r\n\n# GLEW_INCLUDE_PATH\r\n\n# GLEW_LIBRARY\r\n\n# \r\n\n# This script based on the version from nvidia-texture-tools : https://code.google.com/p/nvidia-texture-tools\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tools/editor/assets/project_template/cmake/FindRecondite.cmake" : {
      "ObjectId" : "361f7a9f59e5ac5f4b22fad316bf0af69be12aee",
      "LastModified" : "2017-02-19T01:41:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Finds Recondite Library\r\n\n# This module defines\r\n\n# RECONDITE_LIBRARIES, the names of the libraries to link against\r\n\n# RECONDITE_FOUND, if false, do not try to link to recondite\r\n\n# RECONDITE_INCLUDE_DIR, where to find recondite.hpp\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#get names of all required components for this build\r\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#LIST(APPEND RECONDITE_SEARCH_LIBRARIES ${recondite_FIND_COMPONENTS})\r\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tools/editor/assets/project_template/cmake/FindSDL2.cmake" : {
      "ObjectId" : "9ffc3558edaadfdc72ca5199adfa8298cdb7e216",
      "LastModified" : "2017-02-19T01:41:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate SDL2 library\n\n# This module defines\n\n# SDL2_LIBRARY, the name of the library to link against\n\n# SDL2_FOUND, if false, do not try to link to SDL2\n\n# SDL2_INCLUDE_DIR, where to find SDL.h\n\n#\n\n# This module responds to the the flag:\n\n# SDL2_BUILDING_LIBRARY\n\n# If this is defined, then no SDL2main will be linked in because\n\n# only applications need main().\n\n# Otherwise, it is assumed you are building an application and this\n\n# module will attempt to locate and set the the proper link flags\n\n# as part of the returned SDL2_LIBRARY variable.\n\n#\n\n# Don't forget to include SDLmain.h and SDLmain.m your project for the\n\n# OS X framework based version. (Other versions link to -lSDL2main which\n\n# this module will try to find on your behalf.) Also for OS X, this\n\n# module will automatically add the -framework Cocoa on your behalf.\n\n#\n\n#\n\n# Additional Note: If you see an empty SDL2_LIBRARY_TEMP in your configuration\n\n# and no SDL2_LIBRARY, it means CMake did not find your SDL2 library\n\n# (SDL2.dll, libsdl2.so, SDL2.framework, etc).\n\n# Set SDL2_LIBRARY_TEMP to point to your SDL2 library, and configure again.\n\n# Similarly, if you see an empty SDL2MAIN_LIBRARY, you should set this value\n\n# as appropriate. These values are used to generate the final SDL2_LIBRARY\n\n# variable, but when these values are unset, SDL2_LIBRARY does not get created.\n\n#\n\n#\n\n# $SDL2DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$SDL2DIR\n\n# used in building SDL2.\n\n# l.e.galup  9-20-02\n\n#\n\n# Modified by Eric Wing.\n\n# Added code to assist with automated building by using environmental variables\n\n# and providing a more controlled/consistent search behavior.\n\n# Added new modifications to recognize OS X frameworks and\n\n# additional Unix paths (FreeBSD, etc).\n\n# Also corrected the header search path to follow \"proper\" SDL guidelines.\n\n# Added a search for SDL2main which is needed by some platforms.\n\n# Added a search for threads which is needed by some platforms.\n\n# Added needed compile switches for MinGW.\n\n#\n\n# On OSX, this will prefer the Framework version (if found) over others.\n\n# People will have to manually change the cache values of\n\n# SDL2_LIBRARY to override this selection or set the CMake environment\n\n# CMAKE_INCLUDE_PATH to modify the search paths.\n\n#\n\n# Note that the header path has changed from SDL2/SDL.h to just SDL.h\n\n# This needed to change because \"proper\" SDL convention\n\n# is #include \"SDL.h\", not <SDL2/SDL.h>. This is done for portability\n\n# reasons because not all systems place things in SDL2/ (see FreeBSD).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2003-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fink\n",
        "Line" : 73,
        "CharPositionInLine" : 5
      },
      "3" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 74,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : "# Blastwave\n",
        "Line" : 75,
        "CharPositionInLine" : 10
      },
      "5" : {
        "Text" : "# Non-OS X framework versions expect you to also dynamically link to\n\n# SDL2main. This is mainly for Windows and OS X. Other (Unix) platforms\n\n# seem to provide SDL2main for compatibility even though they don't\n\n# necessarily need it.\n",
        "Line" : 96,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# SDL2 may require threads on your system.\n\n# The Apple build may not need an explicit flag because one of the\n\n# frameworks may already provide it.\n\n# But for non-OSX systems, I will use the CMake Threads package.\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# MinGW needs an additional library, mwindows\n\n# It's total link flags should look like -lmingw32 -lSDL2main -lSDL2 -lmwindows\n\n# (Actually on second look, I think it only needs one of the m* libraries.)\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# For SDL2main\n",
        "Line" : 126,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# For OS X, SDL2 uses Cocoa as a backend so it must link to Cocoa.\n\n# CMake doesn't display the -framework Cocoa string in the UI even\n\n# though it actually is there if I modify a pre-used variable.\n\n# I think it has something to do with the CACHE STRING.\n\n# So I use a temporary variable until the end so I can set the\n\n# \"real\" variable in one-shot.\n",
        "Line" : 133,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# For threads, as mentioned Apple doesn't need this.\n\n# In fact, there seems to be a problem if I used the Threads package\n\n# and try using this line, so I'm just skipping it entirely for OS X.\n",
        "Line" : 143,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# For MinGW library\n",
        "Line" : 150,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# Set the final string here so the GUI reflects the final state.\n",
        "Line" : 155,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# Set the temp variable to INTERNAL so it is not seen in the CMake GUI\n",
        "Line" : 157,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 14
    },
    "tools/editor/assets/project_template/src/CMakeLists.txt" : {
      "ObjectId" : "8940629441fbd5a469a1ed99942dfb6088344761",
      "LastModified" : "2017-02-25T19:18:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Public Section\r\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#recondite\r\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#sdl\r\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#glew\r\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "tools/editor/assets/project_template/src/Private/CMakeLists.txt" : {
      "ObjectId" : "cb9be3d02e5accb412ef1ee60d77c75b67b47fe9",
      "LastModified" : "2017-02-19T01:41:43Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/editor/src/CMakeLists.txt" : {
      "ObjectId" : "7a255adcec806a3fa8ae959d4a46587a4e64be66",
      "LastModified" : "2017-02-19T01:41:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#WIN32 specifies to use the \"windows\" subsystem, ie. win32 app.  wxWidgets GUI needs this project type\r\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tools/editor/src/commands/CMakeLists.txt" : {
      "ObjectId" : "a51c58617a95cf3eea6992fa05fce119b8fea29b",
      "LastModified" : "2017-02-19T01:41:43Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/editor/src/controllers/CMakeLists.txt" : {
      "ObjectId" : "c5d76bb553eb1b102f7676679ab7065cba6ac3b7",
      "LastModified" : "2017-02-19T01:41:43Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/editor/src/dialogs/CMakeLists.txt" : {
      "ObjectId" : "a35b4ba27fda70260c3dceb8b07285e1e49ac363",
      "LastModified" : "2017-02-19T01:41:43Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/editor/src/project/CMakeLists.txt" : {
      "ObjectId" : "2c076d3eb34d47ac7ba4d4fa09128710da9dde10",
      "LastModified" : "2017-02-25T19:18:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/editor/src/tools/CMakeLists.txt" : {
      "ObjectId" : "f75dcfd185891acf5fbf52317312b217266698ae",
      "LastModified" : "2017-02-19T01:41:43Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/editor/src/ui/CMakeLists.txt" : {
      "ObjectId" : "9bb688c3be9e2abaf80c2a24fd7be87f1af3af4b",
      "LastModified" : "2017-02-19T01:41:43Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/import/CMakeLists.txt" : {
      "ObjectId" : "9583f11997cce241dc1e543c8a9a302ee4b3978b",
      "LastModified" : "2017-02-19T01:41:43Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/importer/CMakeLists.txt" : {
      "ObjectId" : "abea019fa9936d249ec0e78075f0be86fb80a70e",
      "LastModified" : "2017-02-19T01:41:43Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/rwx/CMakeLists.txt" : {
      "ObjectId" : "3a089bf06c4e5e531c474bf49e2fe8047c35ed53",
      "LastModified" : "2017-02-19T01:41:43Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 49
  },
  "ElapsedTime" : 938
}