{
  "Repository" : "21352250",
  "Revision" : "HEAD",
  "ObjectId" : "db40c8eed3bd30258b92cc0625f4e6d88bb21723",
  "CommitTime" : "2019-04-16T15:45:09Z",
  "Files" : {
    "CI/CMakeLists.txt" : {
      "ObjectId" : "211f53b58ab46c6379a3884744662809482b01f2",
      "LastModified" : "2017-05-31T18:59:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configurations used for continuous integration\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check/set uninitialized cache variables\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ---------- Docker or not docker ... ------------------------\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "CI/cmake/Docker.cmake" : {
      "ObjectId" : "ab7eb805a544f7599355b1ed32acd408d3a0f46b",
      "LastModified" : "2018-10-16T16:08:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Compilations and tests inside docker containers\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# DOCKER_IMAGE specifications in ${CMAKE_SOURCE_DIR}/Build/Docker/${DOCKER_IMAGE}\n\n# DOCKER_SHARED_DIRECTORIES : directories visibles in the container (source directory and binary directory are visibles)\n\n# DOCKER_PROJECT_SOURCE_DIR : project source directory (for example some git clone)\n\n# DOCKER_CMAKE_FLAGS : flags passed to cmake\n\n# DOCKER_MAKE_FLAGS  : flags passed to make\n\n# DOCKER_MAKE_TEST_FLAGS  : flags passed to make test\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Default behavior: use all components but mechanisms\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# ================== Create Dockerfile ==================\n\n#\n\n# Set Dockerfile name\n",
        "Line" : 56,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Check for templates\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Call print_command from mksenv.py to write Dockerfile\n",
        "Line" : 78,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# ================== End of Dockerfile creation ==================\n",
        "Line" : 82,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# List of options (-DOPTION=VALUE ...) to be passed to ctest\n\n# Warning : these are not siconos conf. options for cmake but\n\n# the options needed by ctest to prepare the pipeline (cmake, make ...)\n\n# like SITE, config file ...\n\n# If CI_OPTIONS is empty, default.cmake will be used.\n",
        "Line" : 95,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# ================== Create targets ==================\n",
        "Line" : 141,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#\n",
        "Line" : 143,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# == Target to build a docker image and create a container ==\n\n# - working dir = Docker/Context/${DOCKER_REPOSITORY}/${DOCKER_IMAGE_AS_DIR}\n\n# - Dockerfile path =  ${DOCKER_REPOSITORY}/${DOCKER_IMAGE} (i.e. use GENERATED_DOCKER_FILE created above)\n\n# make docker-build will:\n\n#  * build a new docker image\n\n#  * create /usr/local and DOCKER_WORKDIR volumes.\n\n# Those volumes will be mounted when running image/container and will be persistent\n\n# image ...\n",
        "Line" : 158,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# bind DOCKER_WORKDIR inside container\n",
        "Line" : 172,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# bind usr/local inside container\n",
        "Line" : 179,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# == target to run cmake inside previously created docker container ==\n\n# Configure siconos inside docker container.\n\n# Note : --rm=true is supposed to cleanup container file system after exit. But\n\n# volumes /usr/local and WORKDIR are persistent\n\n# (see docker doc, https://docs.docker.com/engine/reference/run/#clean-up---rm,\n\n# : \"if the original volume was specified with a name it will not be removed.\"\n\n#\n",
        "Line" : 187,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# == target to run make inside previously created docker container ==\n\n# Build siconos inside docker container\n",
        "Line" : 204,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# == target to run make test inside previously created docker container ==\n\n# Make test (siconos) inside docker container\n",
        "Line" : 211,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# == target to install siconos inside previously created docker container ==\n",
        "Line" : 218,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# == target to uninstall siconos inside previously created docker container ==\n",
        "Line" : 224,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# == target to create doc inside previously created docker container ==\n",
        "Line" : 230,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# submit to cdash, without recording failures\n",
        "Line" : 251,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 20
    },
    "CI/cmake/Tools.cmake" : {
      "ObjectId" : "90db4831ae65e2ed7fc04a6f81ed03efca144545",
      "LastModified" : "2017-05-31T18:59:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Get a list of uninitialized cache variables and append\n\n# them to vars.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set an option from script\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# set -DSICONOS_COMPONENTS=...\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "CI/config/default.cmake" : {
      "ObjectId" : "c910eaf8d8ffe96102747096892c577d01aada4d",
      "LastModified" : "2017-12-07T09:42:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# default configuration for testing\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CI/config/minimal.cmake" : {
      "ObjectId" : "58c4ba20e5470132cd69d2c0733d759bb5d2439b",
      "LastModified" : "2017-06-04T08:48:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# minimal configuration for testing\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CI/config/minimal_with_python.cmake" : {
      "ObjectId" : "d50bcf8860b5661be5c0a192f6f18f243321472e",
      "LastModified" : "2017-06-04T08:48:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# minimal configuration for testing\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CI/config/nix.cmake" : {
      "ObjectId" : "951043030b5893a6102991e3b9d78e016fcefae4",
      "LastModified" : "2017-08-24T13:47:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# from default, test solvers with sanitizer\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CI/config/no_cxx.cmake" : {
      "ObjectId" : "9e06dc56f94e59770ae0cceebcbc9cb99622ba87",
      "LastModified" : "2017-08-24T13:47:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# from default, test solvers with mumps\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CI/config/with_asan.cmake" : {
      "ObjectId" : "3bed5204bc7d8d0fe2b0da2fe53869d1d37887a6",
      "LastModified" : "2017-08-24T13:47:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# from default, test solvers with sanitizer\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CI/config/with_asan_clang.cmake" : {
      "ObjectId" : "7072b7dbbe35102f531438d81a78aa020837e2b2",
      "LastModified" : "2017-08-24T13:47:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# from default, with sanitizer\n\n# no python with clang + sanitizer\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CI/config/with_bullet.cmake" : {
      "ObjectId" : "df5959c01db508f75feb019239b747bbc10fc226",
      "LastModified" : "2017-08-24T13:47:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# from default + bullet\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CI/config/with_cfi.cmake" : {
      "ObjectId" : "dcfdaca7b98b49a3857c186af0d43b8a3bb98829",
      "LastModified" : "2017-08-24T13:47:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# from default, test solvers with sanitizer\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CI/config/with_cxx11.cmake" : {
      "ObjectId" : "ea621f964663cbdad452a66d8928d00bfa93f090",
      "LastModified" : "2018-02-22T00:46:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CI/config/with_dev_mode_strict.cmake" : {
      "ObjectId" : "9f6f02e1fe70873d49d1109368907e13debe4036",
      "LastModified" : "2018-02-22T00:46:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# from default, test solvers with mumps\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CI/config/with_documentation.cmake" : {
      "ObjectId" : "6d7e98ae22b309298efb1e6668dcbbe4cfe59b06",
      "LastModified" : "2018-02-22T00:46:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# from default, documentation\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CI/config/with_frama_c.cmake" : {
      "ObjectId" : "2a01e13b7c112bc557d4e275a0e6dc25c90219b0",
      "LastModified" : "2018-02-22T00:46:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CI/config/with_hdf5.cmake" : {
      "ObjectId" : "6dd624573f430ae9882d66c98ac9c13550cbe090",
      "LastModified" : "2018-02-22T00:46:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# from default, test solvers with sanitizer\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CI/config/with_isnan_workaround.cmake" : {
      "ObjectId" : "5ef7dddbdc478edb89226487e9186f036ab301b6",
      "LastModified" : "2018-10-25T08:00:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# hack, on opensuse 42.3 cxx1 is needed and there is a compilation failure\n\n# with using std::isnan after including <cmath>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CI/config/with_mechanisms.cmake" : {
      "ObjectId" : "b8daca13dc1fdb1e567cfbabba0ce48f1fc17730",
      "LastModified" : "2018-10-25T08:00:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CI/config/with_mechanisms_conda_version.cmake" : {
      "ObjectId" : "7b2201b88b806942ab5bb7a01df1d871a7f76906",
      "LastModified" : "2018-10-25T08:00:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CI/config/with_msan.cmake" : {
      "ObjectId" : "c490d51c11726859a7496cda5858c4481f38b0f5",
      "LastModified" : "2018-10-25T08:00:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# from default, with sanitizer\n\n# no python with clang + sanitizer\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CI/config/with_mumps_par.cmake" : {
      "ObjectId" : "3c863415999f34c5a0be7a6d6853641908dee06a",
      "LastModified" : "2018-10-25T08:00:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# from default, test solvers with mumps\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CI/config/with_mumps_seq.cmake" : {
      "ObjectId" : "274989478008062473dade5aa0b3d9cc8eb99bf8",
      "LastModified" : "2018-10-25T08:00:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# from default, test solvers with mumps-seq (sequential version)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CI/config/with_py3.cmake" : {
      "ObjectId" : "9c06337a66593649ca8cbd1375a88df53ca936d0",
      "LastModified" : "2018-10-25T08:00:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# from default,  buidl with py3\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CI/config/with_serialization.cmake" : {
      "ObjectId" : "a7ff90dc860138ecf55db3143f8db88ae1041ecb",
      "LastModified" : "2018-10-25T08:00:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# from default, test serialization\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CI/config/with_umfpack.cmake" : {
      "ObjectId" : "fd55f4ecd7ebbd941a54a203311fd6a46cd1373c",
      "LastModified" : "2018-10-25T08:00:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# from default,  buidl with py3\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CI/config/without_python.cmake" : {
      "ObjectId" : "e86686da0459668b7392cc94b664e9a6c4b00dbf",
      "LastModified" : "2018-10-25T08:00:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# from default, test without python wrappers\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CI/machinery/CTestDriver.cmake" : {
      "ObjectId" : "e9896a776b17e1088182760e222562434114c854",
      "LastModified" : "2018-10-26T08:45:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# a ctest driver for Experimental,Continuous,Nightly builds\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# -- Get config --\n\n# i.e. set extra options/values (cmake -Doption=value ...)\n\n# either from file default.cmake or\n\n# from file CI_CONFIG.cmake\n\n# --> may set SICONOS_CMAKE_OPTIONS\n\n# --> may set DSICONOS_COMPONENTS\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# assume build directory is under source directory\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#######################################################################\n\n# this usually fails for some reasons and ctest may returns a fail code.\n\n# ctest_empty_binary_directory(${CTEST_BINARY_DIRECTORY}/)\n\n# cf discussions here:\n\n# https://gitlab.kitware.com/cmake/cmake/issues/17000\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#set(CTEST_MEMORYCHECK_COMMAND_OPTIONS \"--quiet --leak-check=full --show-reachable=yes --error-limit=no --gen-suppressions=all\")\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#set(CTEST_NOTES_FILES ${CTEST_BINARY_DIRECTORY}/Testing/Notes/Build)\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# note: if the submission process experiences some slow-down, then we\n\n# may get a return-code error, so we do it in a second phase.\n",
        "Line" : 179,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# we need to get all the previously built files as ctest_start may\n\n# begin with another tag\n",
        "Line" : 182,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "CI/siconos_docs.cmake" : {
      "ObjectId" : "776ef5546dbcf911037a042acdb5ba0a8f31b8c1",
      "LastModified" : "2019-03-29T10:46:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ================================================================\n\n# All the default values for siconos cmake parameters\n\n#\n\n# Usage:\n\n# cmake path-to-sources\n\n#  --> to keep default value\n\n# \n\n# cmake path-to-sources -DWITH_PYTHON_WRAPPER=ON\n\n#  --> to enable (ON), or disable (OFF) the concerned option.\n\n#\n\n# For details about all these options check siconos install guide.\n\n# ================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# --------- User-defined options ---------\n\n# Use cmake -DOPTION_NAME=some-value ... to modify default value.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# --- List of siconos components to build and install ---\n\n# The complete list is : externals numerics kernel control mechanics mechanisms io\n\n# mechanisms is \"off\" by default.\n\n# Check https://nonsmooth.gricad-pages.univ-grenoble-alpes.fr/siconos/install_guide/install_guide.html#id6\n\n# for details about components.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# --- Build/compiling options ---\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# --- Documentation setup ---\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# --- List of external libraries/dependencies to be searched (or not) ---\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# -- Installation setup ---\n\n#set(siconos_python_install \"prefix\" CACHE STRING \"Install mode for siconos python package\")\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# If OFF, headers from libraries in externals will not be installed.\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# If ON, internal headers will not be installed.\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "CMakeLists.txt" : {
      "ObjectId" : "a6fec707235ac93b415ecdb39165276921e6222a",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#===============================================================================\n\n# cmake utility to compile and install siconos.\n\n#\n\n#\n\n# Siconos development team - September 2015.\n\n#\n\n#===============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ============= Global 'standard' cmake Settings =============\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set minimum version for cmake\n\n# We advise 3.12 at least, but 3.7 is authorized since it's the default version on current debian stable.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set cmake modules directory (i.e. the one which contains all user-defined FindXXX.cmake files among other things)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Force out-of-source build\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Some useful macros\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# cmake project name\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Get current year (for licence and other cartridges)\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Read user option file, if provided on command line\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Check for tilde in file name (not handled properly by cmake)\n",
        "Line" : 37,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Configure to take into account any change in ${USER_OPTIONS_FILE}\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Set target names from components list\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Check and set components list\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Get last component in the list;\n\n# It might be usefull to set some dependencies in targets.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# ============= The project =============\n\n# Set project name and project languages\n\n# => this automatically defines:\n\n#   - ${PROJECT_NAME}_BINARY_DIR : where you have run cmake, i.e. the place for compilation\n\n#   - ${PROJECT_NAME}_SOURCE_DIR : where sources (.f and .h and this CMakeLists.txt) are located\n\n# Note that because of OutOfSourceBuild, binary_dir and source_dir must be different.\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Fortran compiler configuration\n",
        "Line" : 82,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "#unset(HAS_FORTRAN)\n",
        "Line" : 87,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Set CXX compilation flags\n",
        "Line" : 89,
        "CharPositionInLine" : 3
      },
      "18" : {
        "Text" : "# we may need to compile only numerics and only in C.\n",
        "Line" : 92,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Fortran compiler configuration\n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "#unset(HAS_FORTRAN)\n",
        "Line" : 100,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Set C compilation flags\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Common setup\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# ========= Search for 'common' dependencies =========\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# ========= Python bindings =========\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# ========= Tests setup =========\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# log file for tests setup\n",
        "Line" : 122,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# ========= Documentation setup =========\n\n# This includes doxygen_warnings,\n\n# doxygen doc from source files, sphinx doc\n\n# and docstrings from doxygen, depending on the\n\n# enabled options.\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ========= Setup each required component =========\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# =========== Generate siconos scripts ===========\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# ============= Save config for other cmake projects ============\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Generate ${PROJECT_NAME}Config.cmake\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Generate configVersion.cmake file.\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# install both of them\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# ============= Summary =============\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Log build info into ${CMAKE_BINARY_DIR}/Testing/Notes/Build\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 36
    },
    "CTestConfig.cmake" : {
      "ObjectId" : "e34c0ac2998c5b42c099d53922d7f6fcc6ef521b",
      "LastModified" : "2019-04-15T13:19:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## This file should be placed in the root directory of your project.\n\n## Then modify the CMakeLists.txt file in the root directory of your\n\n## project to incorporate the testing dashboard.\n\n##\n\n## # The following are required to submit to the CDash dashboard:\n\n##   ENABLE_TESTING()\n\n##   INCLUDE(CTest)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# https is needed on cdash server side\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#set(CTEST_DROP_SITE \"my.cdash.org\")\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#set(CTEST_DROP_LOCATION \"/index.php?project=Siconos\")\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "ci_gitlab/ctest_common.cmake" : {
      "ObjectId" : "3ad489f5be6132adbf391c40c0febe59ebb94d94",
      "LastModified" : "2019-04-15T14:34:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#----------------------------------------------------------------\n\n# Ctest driver : command lines common to all\n\n# ctest drivers.\n\n#\n\n# Usage, add at the end of your driver file :\n\n# include(<path-to>/ctest_common.cmake)\n\n# See for instance ctest_driver_install_siconos.cmake\n\n# ---------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# --- Configure setup ---\n\n# - Top level build directory -\n\n# If not specified : current dir.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Current testing model. Priority: \n\n# Nightly -> set by scheduler on gricad-gitlab\n\n# Continuous -> set in .gitlab-ci.yml\n\n# Experimental : default\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# -- Query host system information --\n\n#include(cmake_host_system_information)\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# With gitlab-ci, runner name is too long and useless ...\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Host description\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Use -DOSNAME=docker_image name on CI\n",
        "Line" : 55,
        "CharPositionInLine" : 24
      },
      "7" : {
        "Text" : "# Set CTEST_CONFIGURE_COMMAND to cmake followed by siconos options \n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# --- Build ---\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# -- Tests --\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# error status check later, we try to submit even if tests failed.\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# -- memory check -- Skip this to 'enlight' submit process, since cdash inria is overbooked ...\n\n# if(CTEST_BUILD_CONFIGURATION MATCHES \"Profiling\")\n\n#   find_program(CTEST_MEMORYCHECK_COMMAND NAMES valgrind)\n\n#   set(CTEST_MEMORYCHECK_COMMAND_OPTIONS \"--quiet --leak-check=full --show-leak-kinds=definite,possible --track-origins=yes --error-limit=no --gen-suppressions=all\") \n\n#   set(CTEST_MEMORYCHECK_COMMAND_OPTIONS \"--quiet --leak-check=full --show-reachable=yes --error-limit=no --gen-suppressions=all\") \n\n#   ctest_memcheck(PARALLEL_LEVEL NP QUIET)\n\n# endif()\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# -- Submission to cdash --\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#RETRY_COUNT 4 # Retry 4 times, if submission failed ...)\n\n#  RETRY_DELAY 1 # seconds\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# ============= Summary =============\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# tests failed?\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# -- Submission failed? --\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "ci_gitlab/ctest_driver_install_siconos.cmake" : {
      "ObjectId" : "57d54775019fc114eb8df13113be8b1e63ab189c",
      "LastModified" : "2019-04-15T14:34:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------\n\n# Ctest driver for siconos install.\n\n# Target : continuous integration on gitlab-ci,\n\n# aims at providing a proper install of siconos for a given configuration.\n\n#\n\n# Input variables :\n\n# - SICONOS_INSTALL_DIR : where to install siconos. Default : ../install-siconos\n\n# - USER_FILE : user option file used by cmake to configure siconos. Default : siconos_conf.cmake.\n\n#   Warning : always searched in siconos-tutorials/ci directory.\n\n# - OSNAME : host system name (used to qualify cdash build). If not set, try to catch info\n\n#   using common commands (lsb_release ...)\n\n# ----------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# used as CMAKE_INSTALL_PREFIX\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# -- job : build and install siconos --\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# - Source dir and path to siconos install\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Build name (for cdash)\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Get hash for commit of current version of Siconos\n\n# Saved by CI in CI_COMMIT_SHORT_SHA.\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# set if oce has been installed using oce repo, in install_oce.sh\n",
        "Line" : 50,
        "CharPositionInLine" : 29
      },
      "7" : {
        "Text" : "# Parallel build only for siconos_install. For examples it leads to: warning: jobserver unavailable: using -j1. Add `+' to parent make rule.\n\n#set(CTEST_MEMORYCHECK_SUPPRESSIONS_FILE ${CTEST_SOURCE_DIRECTORY}/cmake/valgrind.supp)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "ci_gitlab/siconos_confs/siconos_default.cmake" : {
      "ObjectId" : "5452336ff39401bf3fea2ee465b751a59c025f19",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ================================================================\n\n# All the default values for siconos cmake parameters\n\n#\n\n# Usage:\n\n# cmake path-to-sources\n\n#  --> to keep default value\n\n# \n\n# cmake path-to-sources -DWITH_PYTHON_WRAPPER=ON\n\n#  --> to enable (ON), or disable (OFF) the concerned option.\n\n#\n\n# For details about all these options check siconos install guide.\n\n# ================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# --------- User-defined options ---------\n\n# Use cmake -DOPTION_NAME=some-value ... to modify default value.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# --- List of siconos components to build and install ---\n\n# The complete list is : externals numerics kernel control mechanics mechanisms io\n\n# mechanisms is \"off\" by default.\n\n# Check https://nonsmooth.gricad-pages.univ-grenoble-alpes.fr/siconos/install_guide/install_guide.html#id6\n\n# for details about components.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# --- Build/compiling options ---\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# --- Documentation setup ---\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# --- List of external libraries/dependencies to be searched (or not) ---\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# -- Installation setup ---\n\n# Set python install mode:\n\n# - user --> behave as 'python setup.py install --user'\n\n# - standard --> install in python site-package (ie behave as python setup.py install)\n\n# - prefix --> install in python CMAKE_INSTALL_PREFIX (ie behave as python setup.py install --prefix=CMAKE_INSTALL_PREFIX)\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# on unix, there is no reason to use the standard option. By default, CMAKE_INSTALL_PREFIX is set to /usr/local and therefore,\n\n# the python packages should be installed in /usr/local/...\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# If OFF, headers from libraries in externals will not be installed.\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# If ON, internal headers will not be installed.\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "ci_gitlab/siconos_confs/siconos_no_python.cmake" : {
      "ObjectId" : "e83697b6d79ed5643a47ca2ac6dfcee2d6ae53eb",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ================================================================\n\n# All the default values for siconos cmake parameters\n\n#\n\n# Usage:\n\n# cmake path-to-sources\n\n#  --> to keep default value\n\n# \n\n# cmake path-to-sources -DWITH_PYTHON_WRAPPER=ON\n\n#  --> to enable (ON), or disable (OFF) the concerned option.\n\n#\n\n# For details about all these options check siconos install guide.\n\n# ================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# --------- User-defined options ---------\n\n# Use cmake -DOPTION_NAME=some-value ... to modify default value.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# --- List of siconos components to build and install ---\n\n# The complete list is : externals numerics kernel control mechanics mechanisms io\n\n# mechanisms is \"off\" by default.\n\n# Check https://nonsmooth.gricad-pages.univ-grenoble-alpes.fr/siconos/install_guide/install_guide.html#id6\n\n# for details about components.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# --- Build/compiling options ---\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# --- Documentation setup ---\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# --- List of external libraries/dependencies to be searched (or not) ---\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# -- Installation setup ---\n\n# Set python install mode:\n\n# - user --> behave as 'python setup.py install --user'\n\n# - standard --> install in python site-package (ie behave as python setup.py install)\n\n# - prefix --> install in python CMAKE_INSTALL_PREFIX (ie behave as python setup.py install --prefix=CMAKE_INSTALL_PREFIX)\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# on unix, there is no reason to use the standard option. By default, CMAKE_INSTALL_PREFIX is set to /usr/local and therefore,\n\n# the python packages should be installed in /usr/local/...\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# If OFF, headers from libraries in externals will not be installed.\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# If ON, internal headers will not be installed.\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "ci_gitlab/siconos_confs/siconos_with_fclib.cmake" : {
      "ObjectId" : "8df84e3c9123ed50e9f587c4b9728ed9d946b39c",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ================================================================\n\n# All the default values for siconos cmake parameters\n\n#\n\n# Usage:\n\n# cmake path-to-sources\n\n#  --> to keep default value\n\n# \n\n# cmake path-to-sources -DWITH_PYTHON_WRAPPER=ON\n\n#  --> to enable (ON), or disable (OFF) the concerned option.\n\n#\n\n# For details about all these options check siconos install guide.\n\n# ================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# --------- User-defined options ---------\n\n# Use cmake -DOPTION_NAME=some-value ... to modify default value.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# --- List of siconos components to build and install ---\n\n# The complete list is : externals numerics kernel control mechanics mechanisms io\n\n# mechanisms is \"off\" by default.\n\n# Check https://nonsmooth.gricad-pages.univ-grenoble-alpes.fr/siconos/install_guide/install_guide.html#id6\n\n# for details about components.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# --- Build/compiling options ---\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# --- Documentation setup ---\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# --- List of external libraries/dependencies to be searched (or not) ---\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# -- Installation setup ---\n\n# Set python install mode:\n\n# - user --> behave as 'python setup.py install --user'\n\n# - standard --> install in python site-package (ie behave as python setup.py install)\n\n# - prefix --> install in python CMAKE_INSTALL_PREFIX (ie behave as python setup.py install --prefix=CMAKE_INSTALL_PREFIX)\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# If OFF, headers from libraries in externals will not be installed.\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# If ON, internal headers will not be installed.\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "ci_gitlab/siconos_confs/siconos_with_mechanisms.cmake" : {
      "ObjectId" : "4af2bdabbf9ccf856fd459a78a928d05c9fd1335",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ================================================================\n\n# All the default values for siconos cmake parameters\n\n#\n\n# Usage:\n\n# cmake path-to-sources\n\n#  --> to keep default value\n\n# \n\n# cmake path-to-sources -DWITH_PYTHON_WRAPPER=ON\n\n#  --> to enable (ON), or disable (OFF) the concerned option.\n\n#\n\n# For details about all these options check siconos install guide.\n\n# ================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# --------- User-defined options ---------\n\n# Use cmake -DOPTION_NAME=some-value ... to modify default value.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# --- List of siconos components to build and install ---\n\n# The complete list is : externals numerics kernel control mechanics mechanisms io\n\n# mechanisms is \"off\" by default.\n\n# Check https://nonsmooth.gricad-pages.univ-grenoble-alpes.fr/siconos/install_guide/install_guide.html#id6\n\n# for details about components.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# --- Build/compiling options ---\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# --- Documentation setup ---\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# --- List of external libraries/dependencies to be searched (or not) ---\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# -- Installation setup ---\n\n# Set python install mode:\n\n# - user --> behave as 'python setup.py install --user'\n\n# - standard --> install in python site-package (ie behave as python setup.py install)\n\n# - prefix --> install in python CMAKE_INSTALL_PREFIX (ie behave as python setup.py install --prefix=CMAKE_INSTALL_PREFIX)\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# If OFF, headers from libraries in externals will not be installed.\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# If ON, internal headers will not be installed.\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "ci_gitlab/siconos_confs/siconos_with_mumps_par.cmake" : {
      "ObjectId" : "3f679a0a8379b0ff7f0bc9d01abc41c4c33ef21d",
      "LastModified" : "2019-04-16T15:45:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ================================================================\n\n# All the default values for siconos cmake parameters\n\n#\n\n# Usage:\n\n# cmake path-to-sources\n\n#  --> to keep default value\n\n# \n\n# cmake path-to-sources -DWITH_PYTHON_WRAPPER=ON\n\n#  --> to enable (ON), or disable (OFF) the concerned option.\n\n#\n\n# For details about all these options check siconos install guide.\n\n# ================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# --------- User-defined options ---------\n\n# Use cmake -DOPTION_NAME=some-value ... to modify default value.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# --- List of siconos components to build and install ---\n\n# The complete list is : externals numerics kernel control mechanics mechanisms io\n\n# mechanisms is \"off\" by default.\n\n# Check https://nonsmooth.gricad-pages.univ-grenoble-alpes.fr/siconos/install_guide/install_guide.html#id6\n\n# for details about components.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# --- Build/compiling options ---\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# --- Documentation setup ---\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# --- List of external libraries/dependencies to be searched (or not) ---\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# -- Installation setup ---\n\n# Set python install mode:\n\n# - user --> behave as 'python setup.py install --user'\n\n# - standard --> install in python site-package (ie behave as python setup.py install)\n\n# - prefix --> install in python CMAKE_INSTALL_PREFIX (ie behave as python setup.py install --prefix=CMAKE_INSTALL_PREFIX)\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# on unix, there is no reason to use the standard option. By default, CMAKE_INSTALL_PREFIX is set to /usr/local and therefore,\n\n# the python packages should be installed in /usr/local/...\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# If OFF, headers from libraries in externals will not be installed.\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# If ON, internal headers will not be installed.\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "cmake/BlasLapackSetup.cmake" : {
      "ObjectId" : "2b3c9996e207c99a11f9e0a74bd3aa7af3743c3a",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Blas (cblas) and a complete Lapack implementation.\n\n# Once done, this will define\n\n#\n\n#  HAS_CBLAS - system has CBLAS\n\n#  BLAS_INCLUDE_DIRS - The directories  which contain cblas headers.\n\n#  BLAS_LIBRARIES - Link these to use cblas.\n\n#\n\n# Depending on the implementation of cblas, another var is set :\n\n# - HAS_MKL_CBLAS for mkl intel\n\n# - HAS_OpenBLAS for openblas (ex-goto)\n\n# - HAS_ACCELERATE for apple accelerate framework\n\n# - HAS_ATLAS_CBLAS for atlas cblas. \n\n# \n\n#  For Lapack, we set the following :\n\n#  LAPACK_INCLUDE_DIRS  - The directories which contain lapack headers.\n\n#  LAPACK_LIBRARIES - Link these to use lapack.\n\n# Depending on the implementation of cblas, another var is set :\n\n#  - HAS_MKL_LAPACKE for lapacke in mkl intel\n\n#  - HAS_ATLAS_LAPACK for (uncomplete) lapack from atlas\n\n#  - HAS_LAPACKE for any lapack distribution based on lapacke. See http://www.netlib.org/lapack/lapacke.html.\n\n#\n\n# User-defined options :\n\n# - USE_MKL to force mkl intel\n\n# - USE_ATLAS to force atlas\n\n# - USE_APPLE_FRAMEWORK to force apple framework\n\n# - USE_OpenBLAS to force openblas\n\n# \n\n# To find a specific (local) blas and/or lapack, set LD_LIBRARY_PATH (or equivalent) properly. \n\n#\n\n# \n\n# inspired from http://www.cmake.org/Wiki/CMake:How_To_Find_Libraries\n\n# \n\n# Note : the following implementations have been succesfully tested for Siconos :\n\n#  - netlib blas/cblas + lapacke \n\n#  - mkl cblas + lapacke\n\n#  - OpenBlas (GotoBlas \"offspring\")\n\n#  - Atlas \n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Check if FuncName is available in lapack lib (i.e in one of LAPACK_LIBRARIES)\n\n## and if FuncName symbol is present in file Header. \n\n# If both are true, result is true.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#==================\n\n#    CBlas and Lapack\n\n#==================\n\n# We set BLA_VENDOR = Generic as a default value to avoid BLA_VENDOR=All\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# TODO: LAPACK or LAPACKE\n",
        "Line" : 84,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "## this finds both BLAS and LAPACK\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#==================\n\n#    CBlas\n\n#==================\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## --- mkl blas ---\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## --- Apple framework blas ---\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## --- Atlas blas ---\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## --- OpenBlas (ex-Goto) ---\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## - default case ##\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#==================\n\n#    Lapack\n\n#==================\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Apple framework \n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Note that if blas commes from accelerate, the path to lapack headers\n\n#  is the same as the one for blas headers.\n",
        "Line" : 192,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Get location of blas header as hint to check for lapack headers.\n",
        "Line" : 204,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# mkl intel \n",
        "Line" : 210,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# we can have openblas and lapack from atlas\n",
        "Line" : 227,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# netlib, openblas\n",
        "Line" : 243,
        "CharPositionInLine" : 9
      },
      "18" : {
        "Text" : "# === Check for lapack functions ===\n\n# We check only the functions that are known to be un-implemented\n\n# in some lapack libraries (namely atlas ...)\n\n# This is probably a temporary check since it's likely\n\n# we will stop atlas checking for lapack? \n",
        "Line" : 269,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## dgesvd ##\n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## dgels ##\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "## dtrtrs ##\n",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 22
    },
    "cmake/CCompilerSetup.cmake" : {
      "ObjectId" : "2cbb022742860482465821558749907f1da4b00d",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================\n\n#  Set some predefined compilation flags for\n\n#  c compiler.\n\n#\n\n#  Usage :\n\n#  include(CCompilerSetup)\n\n# \n\n# ===========================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ==== Warnings ===\n\n# activate warnings\n\n# and turn some of them to errors\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# --- Clang ----\n\n#add_c_options(\"-Weverything\" Clang) # like Wall and more\n\n#add_c_options(\"-Werror=unreachable-code\" \"Clang\")\n",
        "Line" : 19,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# --- All compilers but MSVC (Microsoft Visual C) ---\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# --- Options for any compiler ----\n",
        "Line" : 32,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# -- warnings to errors --\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# should be supported only by Clang. The last statement is important, otherwise nothing compiles ...\n\n# MB: yes, nothing compiles\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# ADD_C_OPTIONS(\"-Wno-error=shorten-64-to-32\") # for clang\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# ubuntu (at least) build with those\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Compiler Specific\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# === Others options ===\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# default C standart is c11 or newer\n",
        "Line" : 87,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 12
    },
    "cmake/CMakeListsForTests.cmake" : {
      "ObjectId" : "b8ff66bedf5adf02d2845705601908b6579db92f",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- cmake -*-\n\n# This is the test cmake configuration\n\n# built from @CMAKE_SOURCE_DIR@/cmake/CMakeListsForTests.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Search for reference files and copy them to binary dir\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set include directories for the current test :\n\n# all dirs from main project\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Set extra include directories for the current test :\n\n# 'test-utils' dir\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# -- Build test executable and set its properties --- \n\n# a wrapper around test\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#Use the proper linker for the proper language\n\n# fortran -> gfortran; {c,cpp} -> link.exe\n",
        "Line" : 66,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# -- link with current component and its dependencies --\n",
        "Line" : 89,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Link and include for tests libraries (e.g. cppunit ...)\n",
        "Line" : 100,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# each test in the test suite becomes a cmake test\n",
        "Line" : 109,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# --- Create a target for the current test ---\n",
        "Line" : 118,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# -- Generate a cmake macro to create a test, write into SiconosTestConfig.cmake --\n",
        "Line" : 137,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# -- testname.cmake will be included when ctest will be run.\n",
        "Line" : 157,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# do not enable CXX linker if we don't build cxx code ...\n",
        "Line" : 178,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 13
    },
    "cmake/CMakeListsForTestsv2.cmake" : {
      "ObjectId" : "f2c0104e2bc389786fcc38a227cb852ee4a30fa9",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- cmake -*-\n\n# This is the test cmake configuration\n\n# built from @CMAKE_SOURCE_DIR@/cmake/CMakeListsForTests.cmake.in \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Search for reference files and copy them to binary dir\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set include directories for the current test :\n\n# all dirs from main project\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Set extra include directories for the current test :\n\n# 'test-utils' dir\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# -- Build test executable and set its properties --- \n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#Use the proper linker for the proper language\n\n# fortran -> gfortran; {c,cpp} -> link.exe\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# -- link with current component and its dependencies --\n",
        "Line" : 74,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Link and include for tests libraries (e.g. cppunit ...)\n",
        "Line" : 86,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# there is no data file ...\n",
        "Line" : 97,
        "CharPositionInLine" : 23
      },
      "CommentCount" : 9
    },
    "cmake/CXXCompilerSetup.cmake" : {
      "ObjectId" : "7d3f76f73382abb6cf3883ac9136b7d7d12f2a63",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================\n\n#  Set some predefined compilation flags for\n\n#  cxx compiler.\n\n#\n\n#  Usage :\n\n#  include(CXXCompilerSetup)\n\n# \n\n# ===========================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#add_definitions(-DBOOST_NOEXCEPT)\n\n# For SiconosConfig.h\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Version of C++\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Used to avoid tests below if same as previous run\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# For SiconosConfig.h\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Used to avoid tests above if same as previous run\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Check compiler version.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# ==== Warnings ===\n\n# activate warnings\n\n# and turn some of them to errors\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# --- Clang ----\n\n#add_cxx_options(\"-Weverything\" Clang) # like Wall and more\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# some unreachable code errors come from the Bullet headers\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# --- All compilers but MSVC (Microsoft Visual C) ---\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# --- Options for any compiler ----\n",
        "Line" : 66,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# -- warnings to errors --\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# should be supported only by Clang. The last statement is important, otherwise nothing compiles ...\n\n# MB: yes, nothing compiles\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# ADD_C_OPTIONS(\"-Wno-error=shorten-64-to-32\") # for clang\n",
        "Line" : 79,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# ubuntu (at least) build with those\n",
        "Line" : 99,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# add_cxx_options(\"-static -static-libgcc -static-libstdc++\" \"GNU;Clang\")\n\n# way too verbose with MSVC\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# === Others options ===\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# === Compiler Specific ===\n\n# Intel\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Clang\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "cmake/DpkgDeb.cmake" : {
      "ObjectId" : "71a99c766d35055efa84c4cff9a9f95c79f73858",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# http://mehdi.rabah.free.fr/DpkgDeb.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# DpkgDeb : Create debian packages for your projects and sub projects. Written by Mehdi Rabah\n\n# Was heavily inspired by UseDebian (Mathieu Malaterre) and UseRPMTools (TSP Team) modules\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# need /usr/bin/dpkg\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# USAGE : ADD_DEBIAN_PACKAGE ( DEB_TARGET_NAME [CONTROL_FILE] )  \n\n# You need to set the control file either by setting these variables\n\n# or by giving as second parameter the path to the control file you want to use\n\n# If you choose to set the variables, you must set the mandatory variables:\n\n# (see man 5 deb-control for more details)\n\n#\n\n# -- MANDATORY Variables\n\n# Package: ${PACKAGE_NAME}. Must be a lowercase string\n\n# Version: ${PACKAGE_VERSION}. Like 1.1.0\n\n# Release: ${PACKAGE_RELEASE}. A number beetween 0 and 9\n\n# Maintainer: ${PACKAGE_MAINTAINER_NAME} and ${PACKAGE_MAINTAINER_EMAIL}. \n\n# Description summary: ${PACKAGE_DESCRIPTION_SUMMARY}. Project summary\n\n# Description : ${PACKAGE_DESCRIPTION}. Warning : for now, use of special characters (>, (, ', ... ) is not allowed\n\n#\n\n# -- OPTIONAL Variables \n\n# Architecture: ${DEBIAN_ARCHITECTURE}, by default i386 for intel on debian like\n\n# Depends: ${PACKAGE_DEPENDS}\n\n# Section: ${PACKAGE_SECTION}\n\n# Priority: ${PACKAGE_PRIORITY}\n\n# Essential: ${PACKAGE_ESSENTIAL}\n\n# Source: ${PACKAGE_SOURCE}\n\n# Pre-Depends: ${PACKAGE_PREDEPENDS}\n\n# Recommends: ${PACKAGE_RECOMMENDS}\n\n# Suggests: ${PACKAGE_SUGGESTS}\n\n# Breaks: ${PACKAGE_BREAKS}\n\n# Conflicts: ${PACKAGE_CONFLICTS}\n\n# Replaces: ${PACKAGE_REPLACES}\n\n# Provides: ${PACKAGE_PROVIDES}\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# TODO: Make clean does not clean the DEBIAN_DIR folder\n\n# TODO: use objdump -p to automatically generate depedencies (cf dh_makeshlibs)\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Main and only command of this module. For more details, visit this webpage\n\n# http://tldp.org/HOWTO/Debian-Binary-Package-Building-HOWTO/\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# First choice for control file : user defined variables \n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Check if the mandatory variables are here\n",
        "Line" : 62,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "#dpkg --print-architecture is always i386 on intel\n",
        "Line" : 72,
        "CharPositionInLine" : 38
      },
      "9" : {
        "Text" : "# Writing the control file\n\n# see man 5 deb-control for more details\n",
        "Line" : 75,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# let's create a directory to call 'make install DESTDIR=...' into:\n",
        "Line" : 199,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Calling \"make install DESTDIR=${DEBIAN_DIR}\"\n",
        "Line" : 205,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Calling dpkg --build \n",
        "Line" : 213,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# removing control, so its (re)generated each time we need to build the package\n",
        "Line" : 218,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# the final target:\n",
        "Line" : 224,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 15
    },
    "cmake/FCompilerSetup.cmake" : {
      "ObjectId" : "12664fb871f91f40f939570d6830d0d25338e6ba",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================\n\n#  Set some predefined compilation flags for\n\n#  the Fortran compiler.\n\n#\n\n#  Usage :\n\n#  include(FCompilerSetup)\n\n# \n\n# ===========================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set module files directory (i.e. where .mod will be created)\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# gnu specific ...\n",
        "Line" : 16,
        "CharPositionInLine" : 29
      },
      "CommentCount" : 3
    },
    "cmake/FindBLAS.cmake" : {
      "ObjectId" : "1a54504b2b5d603d4d56f844dbbd771b91002700",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find BLAS library\n\n# This module finds an installed library that implements the BLAS\n\n# with its C interface (cblas) and the classical fortran interface.\n\n#\n\n#\n\n# This module sets the following variables:\n\n#  BLAS_FOUND - set to true if a library implementing the BLAS interface\n\n#    is found\n\n#  BLAS_LIBRARIES - uncached list of libraries (using full path name) to\n\n#    link against to use BLAS\n\n#  BLAS_INCLUDE_DIRS - location of blas headers found by cmake\n\n#  BLAS_LIBRARY_DIR - location of the first blas lib found by cmake.\n\n#  BLAS_HEADER - name(s) of the header(s) required for cblas.\n\n#\n\n# To find a specific blas set :\n\n#  WITH_BLAS  if set checks only a specific implementation of blas which may be : mkl, openblas, atlas, accelerate, veclib, generic.\n\n# Or :\n\n#  BLAS_DIR if set, cmake uses this path (absolute) to find a blas implementation in BLAS_DIR/include and/or BLAS_DIR/lib\n\n#\n\n# If neither WITH_BLAS nor BLAS_DIR is set, all implementation are searched in this order : mkl, openblas, accelerate, veclib, atlas, generic.\n\n# If available, pkg-config system is used to give hints to cmake search process.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check the language being used\n\n# If only C/C++, we check for cblas_... functions.\n\n# If Fortran and C, we check also the fortran interface.\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# This macro checks for the existence of the combination of libraries\n\n# given by _list.  If the combination is found, this macro checks (using the\n\n# Check_Fortran_Function_Exists and/or Check_function_exists macros) whether\n\n# we can link against that library\n\n# combination using the name of a routine given by _name using the linker\n\n# flags given by _flags.  If the combination of libraries is found and passes\n\n# the link test, LIBRARIES is set to the list of complete library paths that\n\n# have been found.  Otherwise, LIBRARIES is set to FALSE.\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# N.B. _prefix is the prefix applied to the names of all cached variables that\n\n# are generated internally and marked advanced by this macro.\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "## If no extra argument was given to the macro, default search path is\n\n## filled with environment variables.\n",
        "Line" : 67,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# HINTS are checked before PATHS, that's why we call\n\n# find_library twice, to give priority to LD_LIBRARY_PATH or user-defined paths\n\n# over pkg-config process.\n\n# This first call should find _library in env. variables.\n",
        "Line" : 83,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "## If search fails, we try with pkg-config\n",
        "Line" : 98,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "## pkg-config may give some hints about headers location\n",
        "Line" : 113,
        "CharPositionInLine" : 3
      },
      "8" : {
        "Text" : "# Test this combination of libraries.\n",
        "Line" : 122,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# add gfortran if we have static libs + gfortran\n\n#      if (BLA_STATIC AND CMAKE_COMPILER_IS_GNUG77)\n\n#        if (NOT GFORTRAN_LIB)\n\n#   set(GFORTRAN_LIB \"gfortran\")\n\n#  endif()\n\n#  set(CMAKE_REQUIRED_LIBRARIES ${CMAKE_REQUIRED_LIBRARIES} ${GFORTRAN_LIB})\n\n#endif()\n\n#else()\n\n## First we check cblas interface\n",
        "Line" : 124,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# and then, if required, fortran interface\n",
        "Line" : 139,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# for ubuntu's libblas3gf and liblapack3gf packages\n",
        "Line" : 166,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "#### Start Blas search process ####\n",
        "Line" : 171,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "## If BLAS_DIR is provided by user, we add it to CMAKE_PREFIX_PATH. This should be the first place to be\n\n# searched for blas libraries and headers.\n",
        "Line" : 175,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "## Then we use BLAS_DIR to get hints on the blas implementation and set WITH_BLAS\n",
        "Line" : 184,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "## Now we will search for blas libraries in different implementations.\n\n## If WITH_BLAS is not set, the first found will be set.\n\n## We check for the fortran AND the c (cblas_) interface.\n\n## If something is found, we MUST set:\n\n# BLAS_LIBRARIES : list of libraries to link with\n\n# WITH_BLAS : name of the implementation found (mkl/openblas/atlas/accelerate/generic)\n\n# BLAS_HEADER : name of the header for cblas interface.\n",
        "Line" : 202,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "## Intel MKL ##\n",
        "Line" : 211,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "## FindMKL also sets MKL_LAPACK_LIBRARIES\n",
        "Line" : 219,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "## OpenBLAS ##\n",
        "Line" : 226,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# calling FORTRAN complex function from C++ is not easy, see\n\n# https://software.intel.com/sites/products/documentation/hpc/mkl/mkl_userguide_lnx/GUID-A0908E50-19D7-44C1-A068-44036B466BC7.htm\n\n# http://www.netlib.org/blas/blast-forum/cinterface.pdf\n\n# to ensure that std::complex<double> can be casted to double* and produces good results we should enfore std=c++11\n\n# Right now openblas ships with a cblas.h header which uses double* as type for pointer to double complex, which makes ublas cry since it\n\n# want to pass std::complex<double>*\n\n#set(BLAS_INCLUDE_SUFFIXES cblas_header)\n\n#set(INCLUDE_DIR_HINTS ${CMAKE_SOURCE_DIR}/externals/blas_lapack)\n",
        "Line" : 245,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "## Apple Framework ##\n",
        "Line" : 261,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "## Atlas ##\n\n## Rq : atlas is the \"default\" cblas environmment in some linux distrib (Debian, Ubuntu, Fedora ...)\n",
        "Line" : 279,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "## MATLAB ##\n",
        "Line" : 298,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "## Generic BLAS library? ##\n",
        "Line" : 320,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "## Generic BLAS library (if cblas not found in blas) ##\n",
        "Line" : 337,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "## If everything goes well, we have BLAS_LIBRARIES and some hints on where to find the headers.\n",
        "Line" : 355,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "## Now the headers ...\n",
        "Line" : 362,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# Get an hint for the location of blas headers : probably BLAS_LIBRARIES/../include or BLAS_DIR if given\n",
        "Line" : 366,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# Either BLAS_DIR has been set by user or we use BLAS_LIBRARIES location to set it.\n",
        "Line" : 371,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "## Use BLAS_DIR to set path for cmake search.\n\n## If pkg-config has been used, maybe it gives some hints about headers location ...\n",
        "Line" : 378,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "## Note Franck : it seems that find_path process does not work as expected on Macosx : it does not respect the search sequence described\n\n# in cmake doc (i.e. CMAKE_PREFIX, then HINTS, PATHS ... ) and always turn to find apple framework cblas if\n\n# NO_DEFAULT_PATH is not set.\n",
        "Line" : 382,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# First check in HINTS, no default, then global search.\n",
        "Line" : 385,
        "CharPositionInLine" : 14
      },
      "32" : {
        "Text" : "# The case which is supposed to always work\n",
        "Line" : 412,
        "CharPositionInLine" : 11
      },
      "33" : {
        "Text" : "# SiconosConfig.h setup\n",
        "Line" : 424,
        "CharPositionInLine" : 17
      },
      "CommentCount" : 34
    },
    "cmake/FindCplex.cmake" : {
      "ObjectId" : "734f8c8c2f6fe8c3e5462a173c11863fcb0afd30",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -----------------------------------------\n\n# Search for cplex library\n\n# --> libcplex\n\n#\n\n# User hint : Cplex_DIR --> try cmake -DCplex_DIR=path-to-cplex-install\n\n#\n\n# header is searched for in 'standard' path + optional suffix , Cplex_DIR/include\n\n# Cplex_DIR\n\n#\n\n# -----------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------\n\n# First, search in (optionnaly) user-defined Cplex_DIR\n\n# Try : \n\n# Cplex_DIR/\n\n# Cplex_DIR/include\n\n# ----------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# XXX we do not look for include now ... --xhub\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------\n\n# Library == libpath${Cplex_VERSION}\n\n# First, search in (optionnaly) user-defined Cplex_DIR\n\n# Try:\n\n# - Cplex_DIR\n\n# - Cplex_DIR/lib\n\n# - Cplex_DIR/lib/CMAKE_LIBRARY_ARCHITECTURE (for example on Debian like system : lib/x86_64-linux-gnu\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# If not found, try standard path.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set Cplex_LIBRARY_DIRS and Cplex_LIBRARIES for libfindprocess\n\n# see Using LibFindMacros : https://cmake.org/Wiki/CMake:How_To_Find_Libraries\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Final check :\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cmake/FindCppUnit.cmake" : {
      "ObjectId" : "b1c5cb9e1b2ac5e3fed3b0dbfcf8d2fcbaa98ce4",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# http://www.cmake.org/pipermail/cmake/2006-October/011446.html\n\n#\n\n# Find the CppUnit includes and library\n\n#\n\n# This module defines\n\n# CPPUNIT_INCLUDE_DIR, where to find tiff.h, etc.\n\n# CPPUNIT_LIBRARIES, the libraries to link against to use CppUnit.\n\n# CPPUNIT_FOUND, If false, do not try to use CppUnit.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# also defined, but not for general use are\n\n# CPPUNIT_LIBRARY, where to find the CppUnit library.\n\n# CPPUNIT_DEBUG_LIBRARY, where to find the CppUnit library in debug mode.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# With Win32, important to have both\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# On unix system, debug and release have the same name\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "cmake/FindFCLIB.cmake" : {
      "ObjectId" : "3b82badf15729c2d80e5c19a0e00451cfdb2594f",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find FCLIB includes and libraries.\n\n# The following variables are set if FCLIB is found.  If FCLIB is not\n\n# found, FCLIB_FOUND is set to false.\n\n#  FCLIB_FOUND        - True when the FCLIB include directory is found.\n\n#  FCLIB_INCLUDE_DIRS - the path to where the Siconos FCLIB include files are.\n\n#  FCLIB_LIBRARY_DIRS - The path to where the Siconos library files are.\n\n#  FCLIB_LIBRARIES    - The libraries to link against Siconos FCLIB\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# One may want to use a specific FCLIB Library by setting\n\n# FCLIB_LIBRARY_DIRECTORY before FIND_PACKAGE(FCLIB)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindFreeCAD.cmake" : {
      "ObjectId" : "c481c154be19216ed8b400ebe3aa16cdbfa2bf29",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find FreeCAD includes and libraries.\n\n# The following variables are set if FreeCAD is found.  If FreeCAD is not\n\n# found, FreeCAD_FOUND is set to false.\n\n#  FreeCAD_FOUND        - True when the FreeCAD include directory is found.\n\n#  FreeCAD_LIBRARY_DIRS - The path to where the Siconos library files are.\n\n#  FreeCAD_LIBRARIES    - The libraries to link against Siconos FreeCAD\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# One may want to use a specific FreeCAD Library by setting\n\n# FreeCAD_LIBRARY_DIRECTORY before FIND_PACKAGE(FreeCAD)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindGMP.cmake" : {
      "ObjectId" : "3ff163a8e2bb767df318f464204594bb1b6ede8e",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the Siconos Numerics includes and libraries.\n\n# The following variables are set if gmp library is found.  If gmp is not\n\n# found, GMP_FOUND is set to false.\n\n#  GMP_FOUND        - True when the GMP include directory is found.\n\n#  GMP_INCLUDE_DIR - the path to where the gmp include files are.\n\n#  GMP_LIBRARY_DIRS - The path to where the gmp library files are.\n\n#  GMP_LIBRARIES    - The libraries to link against gmp\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set GMP_DIR=where_fftw_is_installed if it's not in a \"classic\" place or if you want a specific version\n\n#\n\n# Note FP : see http://www.cmake.org/Wiki/CMake:How_To_Find_Libraries\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use pkg-config to get hints about paths\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# First search library and header in GMP_DIR, if given\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# else check env variables \n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Last try if nothing has been found before\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set the required variables \n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This will set properly ${GMP_INCLUDE_DIR} ${GMP_LIBRARY} ${GMP_INCLUDE_DIRS} ${GMP_LIBRARIES}\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cmake/FindGamsCApi.cmake" : {
      "ObjectId" : "d7462453aef6491647c1396304f694c57f3bf542",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the Path Ferris includes and libraries.\n\n# The following variables are set if Ferris is found.  If Ferris is not\n\n# found, GAMS_FOUND is set to false.\n\n#  GAMS_FOUND        - True when the GAMS include directory is found.\n\n#  GAMS_C_API_INCLUDE_DIRS - the path to where the Path Ferris include files are.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindLAPACK.cmake" : {
      "ObjectId" : "ec90fdf8c4d99a907fbbda4a3eaf061570b1c44b",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find LAPACK library\n\n# This module finds an installed library that implements the LAPACK \n\n# with its C interface (cblas) and the classical fortran interface.\n\n# \n\n#\n\n# This module sets the following variables:\n\n#  LAPACK_FOUND - set to true if a library implementing the LAPACK interface\n\n#    is found\n\n#  LAPACK_LIBRARIES - uncached list of libraries (using full path name) to\n\n#    link against to use LAPACK\n\n#  LAPACK_INCLUDE_DIRS - location of blas headers found by cmake\n\n#  LAPACK_LIBRARY_DIR - location of the first blas lib found by cmake.\n\n#  LAPACKE_HEADER - name of the header required for lapacke.\n\n#  CLAPACK_HEADER - name of the header required for clapack. \n\n#  We first look for lapacke header (if it may be available in lapack implem) and then, if not found, for CLAPACK_HEADER.\n\n#\n\n# To find a specific blas set : \n\n#  WITH_LAPACK  if set checks only a specific implementation of blas which may be : mkl, openblas, atlas, accelerate, veclib, generic. \n\n# Or : \n\n#  LAPACK_DIR if set, cmake uses this path (absolute) to find a blas implementation in LAPACK_DIR/include and/or LAPACK_DIR/lib \n\n# \n\n# If neither WITH_LAPACK nor LAPACK_DIR is set, all implementation are searched in this order : mkl, openblas, accelerate, veclib, atlas, generic. \n\n# If available, pkg-config system is used to give hints to cmake search process.\n\n#\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check the language being used\n\n# If only C/C++, we check for cblas_... functions.\n\n# If Fortran and C, we check also the fortran interface.\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# This macro checks for the existence of the combination of fortran libraries\n\n# given by _list.  If the combination is found, this macro checks (using the\n\n# Check_Fortran_Function_Exists macro) whether can link against that library\n\n# combination using the name of a routine given by _name using the linker\n\n# flags given by _flags.  If the combination of libraries is found and passes\n\n# the link test, LIBRARIES is set to the list of complete library paths that\n\n# have been found.  Otherwise, LIBRARIES is set to FALSE.\n",
        "Line" : 51,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# N.B. _prefix is the prefix applied to the names of all cached variables that\n\n# are generated internally and marked advanced by this macro.\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "## If no extra argument was given to the macro, default search path is\n\n## filled with environment variables.\n",
        "Line" : 67,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# HINTS are checked before PATHS, that's why we call\n\n# find_library twice, to give priority to LD_LIBRARY_PATH or user-defined paths\n\n# over pkg-config process.\n\n# This first call should find _library in env. variables. \n",
        "Line" : 83,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "## If search fails, we try with pkg-config\n",
        "Line" : 97,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "## pkg-config may give some hints about headers location\n",
        "Line" : 112,
        "CharPositionInLine" : 3
      },
      "8" : {
        "Text" : "# Test this combination of libraries.\n",
        "Line" : 121,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# add gfortran if we have static libs + gfortran\n\n#      if (BLA_STATIC AND CMAKE_COMPILER_IS_GNUG77)\n\n#   if (NOT GFORTRAN_LIB)\n\n#     set(GFORTRAN_LIB \"gfortran\")\n\n#   endif()\n\n#   set(CMAKE_REQUIRED_LIBRARIES ${CMAKE_REQUIRED_LIBRARIES} ${GFORTRAN_LIB})\n\n#  endif()\n\n## First we check c interface\n",
        "Line" : 127,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# and then, if required, fortran interface\n",
        "Line" : 140,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# for ubuntu's libblas3gf and liblapack3gf packages\n",
        "Line" : 169,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "## First of all, we need blas ## \n",
        "Line" : 174,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "#### Start Lapack search process ####\n\n# I'm not sure what this is supposed to achieve, but it prevents us from using an hint on the command line ... -- xhub\n\n#    set(WITH_LAPACK \"\" CACHE STRING \"Lapack implementation type [mkl/openblas/atlas/accelerate/generic]\")\n",
        "Line" : 184,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "## We first check the blas implementation : if it is mkl or accelerate\n\n## then lapack must be in mkl/accelerate. \n\n## \n\n# MKL Intel  - Everything is already determined during blas search. \n",
        "Line" : 189,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "## Apple accelerate \n",
        "Line" : 202,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "## Other blas implementations\n",
        "Line" : 209,
        "CharPositionInLine" : 11
      },
      "17" : {
        "Text" : "# if nothing set by user for lapack implementation, we copy blas one's. \n",
        "Line" : 210,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "# if LAPACK_DIR is provided, we add it to CMAKE_PREFIX_PATH. This should be the first place to be \n\n# searched for lapack libraries and headers.\n",
        "Line" : 215,
        "CharPositionInLine" : 1
      },
      "19" : {
        "Text" : "## We use LAPACK_DIR to set WITH_LAPACK, if possible. \n",
        "Line" : 220,
        "CharPositionInLine" : 1
      },
      "20" : {
        "Text" : "## Now we search and check lapack libraries and headers. \n\n## MKL : already done thanks to blas\n",
        "Line" : 230,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "## OpenBLAS ##\n\n# this can come in 3 flavors: no LAPACK, fortran LAPACK, LAPACKE\n\n# the problem with the second option is that we have no headers ...\n\n# the last case occurs for instance on Fedora (up to 21 at time of writing)\n",
        "Line" : 233,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "## Apple Framework ## \n",
        "Line" : 277,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "## Generic LAPACKE library ##\n",
        "Line" : 296,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "## Atlas ## \n",
        "Line" : 319,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "## Generic LAPACK library ##\n",
        "Line" : 341,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# For debian or ubuntu ...\n",
        "Line" : 356,
        "CharPositionInLine" : 36
      },
      "27" : {
        "Text" : "## Now the headers ...\n",
        "Line" : 366,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# Get an hint for the location of lapack headers : probably LAPACK_LIBRARIES/../include or LAPACK_DIR if given\n",
        "Line" : 372,
        "CharPositionInLine" : 1
      },
      "29" : {
        "Text" : "# Either LAPACK_DIR has been set by user or we use LAPACK_LIBRARIES location to set it. \n",
        "Line" : 378,
        "CharPositionInLine" : 6
      },
      "30" : {
        "Text" : "## Use LAPACK_DIR to set path for cmake search. \n\n## If pkg-config has been used, maybe it gives some hints about headers location ...\n",
        "Line" : 385,
        "CharPositionInLine" : 6
      },
      "31" : {
        "Text" : "## Note Franck : it seems that find_path process does not work as expected on Macosx : it does not respect the search sequence described\n\n# in cmake doc (i.e. CMAKE_PREFIX, then HINTS, PATHS ... ) and always turn to find apple framework cblas if\n\n# NO_DEFAULT_PATH is not set. \n",
        "Line" : 390,
        "CharPositionInLine" : 6
      },
      "32" : {
        "Text" : "# First check in HINTS, no default, then global search.\n",
        "Line" : 393,
        "CharPositionInLine" : 16
      },
      "33" : {
        "Text" : "# if lapacke.h not needed or not found search for clapack.h ...\n",
        "Line" : 409,
        "CharPositionInLine" : 9
      },
      "34" : {
        "Text" : "# The case which is supposed to always work\n",
        "Line" : 430,
        "CharPositionInLine" : 18
      },
      "35" : {
        "Text" : "# if lapacke.h not needed or not found search for clapack.h ...\n",
        "Line" : 441,
        "CharPositionInLine" : 1
      },
      "36" : {
        "Text" : "# SiconosConfig.h setup\n",
        "Line" : 461,
        "CharPositionInLine" : 20
      },
      "37" : {
        "Text" : "# atlas can be the BLAS provider\n",
        "Line" : 462,
        "CharPositionInLine" : 50
      },
      "38" : {
        "Text" : "## If lapack was found as \"generic\" but is part of atlas. \n",
        "Line" : 463,
        "CharPositionInLine" : 6
      },
      "39" : {
        "Text" : "# === Extra Checks for lapack functions ===\n",
        "Line" : 514,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "# We check only the functions that are known to be un-implemented\n\n# in some lapack libraries (namely atlas ...)\n\n# This is probably a temporary check since it's likely\n\n# we will stop atlas checking for lapack? \n\n## Check if FuncName is available in lapack lib (i.e in one of LAPACK_LIBRARIES)\n\n## and if FuncName symbol is present in file Header. \n\n# If both are true, result is true.\n",
        "Line" : 515,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "## dgesvd ##\n",
        "Line" : 554,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "## dgels ##\n",
        "Line" : 560,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "## dtrtrs ##\n",
        "Line" : 566,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "## Final settings ...\n",
        "Line" : 572,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 45
    },
    "cmake/FindLMGC.cmake" : {
      "ObjectId" : "6102fb28bc3631e467987bdc46d2b37dcf083283",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the LMGC includes and libraries.\n\n# The following variables are set if LMGC is found.  If LMGC is not\n\n# found, LMGC_FOUND is set to false.\n\n#  LMGC_FOUND        - True when the LMGC include directory is found.\n\n#  LMGC_INCLUDE_DIRS - the path to where the Siconos LMGC include files are.\n\n#  LMGC_LIBRARY_DIRS - The path to where the Siconos library files are.\n\n#  LMGC_LIBRARIES    - The libraries to link against Siconos LMGC\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# One may want to use a specific LMGC Library by setting\n\n# LMGC_LIBRARY_DIRECTORY before FIND_PACKAGE(LMGC)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindLpSolve.cmake" : {
      "ObjectId" : "615e618380692430bfa22b21bfdc373142c50852",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -----------------------------------------\n\n# Search for lpsolve header and library\n\n# --> lp_lib.h\n\n# --> liblpsolve\n\n#\n\n# User hint : LpSolve_DIR --> try cmake -DLpSolve_DIR=path-to-lpsolve-install\n\n#\n\n# header is searched for in 'standard' path + optional suffix lpsolve, LpSolve_DIR/include\n\n# LpSolve_DIR/lpsolve\n\n#\n\n# Please note that we are using lpsolve 5.5\n\n# -----------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------\n\n# Header == lp_lib.h \n\n# First, search in (optionnaly) user-defined LpSolve_DIR\n\n# Try : \n\n# LpSolve_DIR/\n\n# LpSolve_DIR/include\n\n# LpSolve_DIR/lpsolve\n\n# ----------------------------------------\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# if LpSolve_DIR not set or header not found, try standard path\n\n# \n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------------------------------------\n\n# Library == lpsolve55 \n\n# First, search in (optionnaly) user-defined LpSolve_DIR\n\n# Try:\n\n# - LpSolve_DIR\n\n# - LpSolve_DIR/lib\n\n# - LpSolve_DIR/lib/CMAKE_LIBRARY_ARCHITECTURE (for example on Debian like system : lib/x86_64-linux-gnu\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# If not found, try standard path.\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# debian nonsense: see https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=503314\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Set LpSolve_LIBRARY_DIRS and LpSolve_LIBRARIES for libfindprocess\n\n# see Using LibFindMacros : https://cmake.org/Wiki/CMake:How_To_Find_Libraries\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Final check :\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cmake/FindMKL.cmake" : {
      "ObjectId" : "adb67ac859007cc9da395dd7e48ad837223a14e5",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find INTEL MKL library\n\n#\n\n# This module finds the Intel Mkl libraries.\n\n#\n\n# This module sets the following variables:\n\n#  MKL_FOUND - set to true if a library implementing the CBLAS interface is found\n\n#  MKL_VERSION - best guess\n\n#  MKL_INCLUDE_DIR - path to include dir.\n\n#  MKL_LIBRARIES - list of libraries for base mkl\n\n#  MKL_LAPACK_LIBRARIES - list of libraries to add for lapack\n\n#  MKL_SCALAPACK_LIBRARIES - list of libraries to add for scalapack\n\n#  MKL_SOLVER_LIBRARIES - list of libraries to add for the solvers\n\n#  MKL_CDFT_LIBRARIES - list of libraries to add for the solvers\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Do nothing if MKL_FOUND was set before!\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Includes\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Intel Compiler Suite\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Checks\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Kernel libraries dynamically loaded\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Paths\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# TODO: diagnostic if dir does not exist\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# TODO: diagnostic if dir does not exist\n",
        "Line" : 78,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Try linking multiple libs\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# This macro checks for the existence of the combination of libraries given by _list.\n\n# If the combination is found, this macro whether we can link against that library\n\n# combination using the name of a routine given by _name using the linker\n\n# flags given by _flags.  If the combination of libraries is found and passes\n\n# the link test, LIBRARIES is set to the list of complete library paths that\n\n# have been found.  Otherwise, LIBRARIES is set to FALSE.\n\n# N.B. _prefix is the prefix applied to the names of all cached variables that\n\n# are generated internally and marked advanced by this macro.\n",
        "Line" : 97,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# start checking\n",
        "Line" : 106,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# message(STATUS \"Checking for [${__list}]\")\n",
        "Line" : 119,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "#MESSAGE(STATUS \"  Library ${_library}: not found\")\n",
        "Line" : 130,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# Test this combination of libraries.\n",
        "Line" : 135,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Fin\n",
        "Line" : 143,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Check for version 10/11\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Check for older versions\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Include files\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Other libraries\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## Set env var to help find library process. \n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# this works for me --xhub\n",
        "Line" : 255,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#if(MKL_LAPACK)\n\n#set(LAPACK_LIBRARY_DIR ${_bdir} CACHE PATH \"Lapack libraries location.\" FORCE)\n",
        "Line" : 261,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# LibIRC: intel compiler always links this; \n\n# gcc does not; but mkl kernels sometimes need it.\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Final\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Standard termination\n",
        "Line" : 288,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#MESSAGE(STATUS \"MKL library not found\")\n",
        "Line" : 296,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# Do nothing if MKL_FOUND was set before!\n",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 28
    },
    "cmake/FindMUMPS.cmake" : {
      "ObjectId" : "dc2156fde8076048e51d6246e594fcfd04134deb",
      "LastModified" : "2019-04-16T15:45:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  Siconos is a program dedicated to modeling, simulation and control\n\n# of non smooth dynamical systems.\n\n#\n\n# Copyright 2018 INRIA.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n# http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n# --\n\n# Find MUMPS libraries and headers\n\n#\n\n# Usage :\n\n# \n\n# find_package(MUMPS REQUIRED)\n\n# target_link_libraries(yourlib PRIVATE MUMPS::MUMPS)\n\n#\n\n# It will handles both linking and include directories for your target.\n\n#\n\n# This module sets the following variables:\n\n#\n\n# MUMPS_FOUND - set to true if a library implementing the MUMPS interface\n\n#    is found\n\n# MUMPS_LIBRARIES - uncached list of libraries (using full path name) to\n\n#    link against to use MUMPS\n\n# MUMPS_INCLUDE_DIR - location of mumps headers found by cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set MUMPS_DIR=<where mumps is installed> if it's not in a \"classic\" place or if you want a specific version\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# On debian and Suse, both mpi and mpi-free version of MUMPS can be installed in parallel\n\n# The latter have a \"_seq\" suffix\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# on debian systems one may have mumps+[pt]scotch packages also\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# ---- Search for mumps header(s) ---\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# -- First try : use MUMPS_DIR provided explicitely at cmake call\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# -- Second try : pkg-config\n\n# \n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# -- Last try : default behavior ...\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# --- Search for mumps libraries ---\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# -- Search for extra libraries, required to link with mumps --\n\n# Try to be smart and detect whether the MUMPS lib file has a \"_seq\" suffix. If yes, we add it to all the other library\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Extras\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# -- Library setup --\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "cmake/FindMlcpSimplex.cmake" : {
      "ObjectId" : "3dc773455d815211163242568bd4d5ec599265b4",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the external_mlcp_simplex includes and libraries.\n\n# The following variables are set if libMlcpSimplex is found.  If libMlcpSimplex is not\n\n# found, MlcpSimplex_FOUND is set to false.\n\n#  MlcpSimplex_FOUND        - True when the MlcpSimplex include directory is found.\n\n#  MlcpSimplex_INCLUDE_DIRS - the path to where the Path Ferris include files are.\n\n#  MlcpSimplex_LIBRARY_DIRS - The path to where the Path library files are.\n\n#  MlcpSimplex_LIBRARIES    - The libraries to link against Path Ferris\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# One may want to use a specific Ferris Library by setting\n\n# MlcpSimplex_LIBRARY_DIRECTORY before FIND_PACKAGE(MlcpSimplex)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindNumpy.cmake" : {
      "ObjectId" : "928b04f4a5809c370747c79cd0c6613a4cc344c7",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ----------------------------------------------\n\n# Search for numpy headers (arrayobject.h etc .) \n\n#\n\n# Warning : must be called after FindPythonFull\n\n# ---------------------------------------------\n\n# This module defines\n\n#  NUMPY_INCLUDE_DIR, where to find numpy/arrayobject.h, etc.\n\n#  NUMPY_FOUND, If false, do not try to use numpy headers.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Final check :\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/FindOpenCASCADE.cmake" : {
      "ObjectId" : "7efdb2ee27b5bfd528289b4a2e35e03eaefb3d8e",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find OpenCASCADE libraries\r\n\n### Does not test what version has been found,though\r\n\n### that could be done by parsing Standard_Version.hxx\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Once done, this will define\r\n\n#  OpenCASCADE_FOUND - true if OCC has been found\r\n\n#  OpenCASCADE_INCLUDE_DIR - the OCC include dir\r\n\n#  OpenCASCADE_LIBRARIES - names of OCC libraries\r\n\n#  OpenCASCADE_LINK_DIRECTORY - location of OCC libraries\r\n\n# ${OpenCASCADE_FOUND} is cached, so once OCC is found this block shouldn't have to run again\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#find the include dir by looking for Standard_Real.hxx\r\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Find one lib and save its directory to OpenCASCADE_LINK_DIRECTORY. Because\r\n\n#  OCC has so many libs, there is increased risk of a name collision.\r\n\n#  Requiring that all libs be in the same directory reduces the risk.\r\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#so that messages are only printed once\r\n",
        "Line" : 47,
        "CharPositionInLine" : 27
      },
      "5" : {
        "Text" : "#so that messages are only printed once\r\n",
        "Line" : 52,
        "CharPositionInLine" : 26
      },
      "6" : {
        "Text" : "#look for libs in OpenCASCADE_LINK_DIRECTORY\r\n",
        "Line" : 58,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# 32 bit or 64 bit?\r\n",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "cmake/FindPathFerris.cmake" : {
      "ObjectId" : "a326530071a8b69cef885bf3dd39aa415ab27963",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -----------------------------------------\n\n# Search for path library (headers are in externals)\n\n# --> libpath\n\n#\n\n# User hint : PathFerris_DIR --> try cmake -DPathFerris_DIR=path-to-path-install\n\n#\n\n# By default we are using path 4.7\n\n# -----------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------\n\n# Library == libpath${PathFerris_VERSION}\n\n# First, search in (optionnaly) user-defined PathFerris_DIR\n\n# Try:\n\n# - PathFerris_DIR\n\n# - PathFerris_DIR/lib\n\n# - PathFerris_DIR/lib/CMAKE_LIBRARY_ARCHITECTURE (for example on Debian like system : lib/x86_64-linux-gnu\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If not found, try standard path.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set PathFerris_LIBRARY_DIRS and PathFerris_LIBRARIES for libfindprocess\n\n# see Using LibFindMacros : https://cmake.org/Wiki/CMake:How_To_Find_Libraries\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Final check :\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/FindPathVI.cmake" : {
      "ObjectId" : "68df102f02c18f848a5f37274e33c4766329f4d9",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -----------------------------------------\n\n# Search for pathvi library\n\n# --> libpathvi\n\n#\n\n# User hint : PathVI_DIR --> try cmake -DPathVI_DIR=path-to-pathvi-install\n\n#\n\n# header is searched for in 'standard' path + optional suffix , PathVI_DIR/include\n\n# PathVI_DIR\n\n#\n\n# -----------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ----------------------------------------\n\n# First, search in (optionnaly) user-defined PathVI_DIR\n\n# Try : \n\n# PathVI_DIR/\n\n# PathVI_DIR/include\n\n# ----------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------\n\n# Library == libpath${PathVI_VERSION}\n\n# First, search in (optionnaly) user-defined PathVI_DIR\n\n# Try:\n\n# - PathVI_DIR\n\n# - PathVI_DIR/lib\n\n# - PathVI_DIR/lib/CMAKE_LIBRARY_ARCHITECTURE (for example on Debian like system : lib/x86_64-linux-gnu\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If not found, try standard path.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set PathVI_LIBRARY_DIRS and PathVI_LIBRARIES for libfindprocess\n\n# see Using LibFindMacros : https://cmake.org/Wiki/CMake:How_To_Find_Libraries\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Final check :\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/FindPthread.cmake" : {
      "ObjectId" : "c22df21baac0cd6d2a893405e2a95395f9426ba5",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find external lpthread includes and libraries.\n\n# The following variables are set if liblpthread is found.  If liblpthread is not\n\n# found, Pthread_FOUND is set to false.\n\n#  Pthread_FOUND        - True when the Pthread include directory is found.\n\n#  Pthread_INCLUDE_DIRS - the path to where the Pthread include files are.\n\n#  Pthread_LIBRARY_DIRS - The path to where the Pthread library files are.\n\n#  Pthread_LIBRARIES    - The libraries to link against Pthread\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# One may want to use a specific Ferris Library by setting\n\n# Pthread_LIBRARY_DIRECTORY before FIND_PACKAGE(Pthread)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# SET(Pthread_INCLUDE_DIRS ${Pthread_LIBRARY_DIRS_DIR}/include)  Note FP: failed on ubuntu because of suffix after lib ... and useless anyway.\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/FindPythonModule.cmake" : {
      "ObjectId" : "c27c4e980d0609e51631132ee4d8b071582313dd",
      "LastModified" : "2019-04-16T15:45:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Search for a Python module.\n\n#\n\n# Usage :\n\n#\n\n#  find_python_module(mpi4py REQUIRED)\n\n#  find_python_module(sphinx)\n\n#  find_python_module(mpi4py INCLUDE)\n\n# \n\n#  Warning : use ${PYTHON_EXECUTABLE} as python interpreter\n\n#\n\n#  If INCLUDE options is provided, it means that the function\n\n#  is supposed to check for the existence of <path-to-module>/include\n\n#  and set ${module}_INCLUDE_DIR cache variable.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If INCLUDE options is provided\n",
        "Line" : 18,
        "CharPositionInLine" : 33
      },
      "2" : {
        "Text" : "# Return code from command above\n\n# Standard output form command above\n",
        "Line" : 22,
        "CharPositionInLine" : 46
      },
      "3" : {
        "Text" : "# Ignores quietly standard error\n",
        "Line" : 24,
        "CharPositionInLine" : 16
      },
      "4" : {
        "Text" : "# Return code == 0 means that things have gone well\n",
        "Line" : 28,
        "CharPositionInLine" : 32
      },
      "5" : {
        "Text" : "# Save version\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Return code from command above\n",
        "Line" : 33,
        "CharPositionInLine" : 46
      },
      "7" : {
        "Text" : "# Standard output form command above\n",
        "Line" : 34,
        "CharPositionInLine" : 41
      },
      "8" : {
        "Text" : "# Ignores quietly standard error\n",
        "Line" : 35,
        "CharPositionInLine" : 16
      },
      "CommentCount" : 9
    },
    "cmake/FindQGLViewer.cmake" : {
      "ObjectId" : "99f29d97a863eeba1845c4f7666572c8b4770ef5",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find QGLViewer\n\n# Once done this will define\n\n#\n\n#  QGLVIEWER_FOUND - system has QGLViewer\n\n#  QGLVIEWER_INCLUDE_DIR - the QGLViewer include directory\n\n#  QGLVIEWER_LIBRARY - Link these to use QGLViewer\n\n#  QGLVIEWER_DEFINITIONS - Compiler switches required for using QGLViewer\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindSiconosACEF.cmake" : {
      "ObjectId" : "72862e57891788de18ec99671b1982e22925157a",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the Siconos ACEF includes and libraries.\n\n# The following variables are set if ACEF is found.  If ACEF is not\n\n# found, SiconosACEF_FOUND is set to false.\n\n#  SiconosACEF_FOUND        - True when the SiconosACEF include directory is found.\n\n#  SiconosACEF_INCLUDE_DIRS - the path to where the Siconos ACEF include files are.\n\n#  SiconosACEF_LIBRARY_DIRS - The path to where the Siconos library files are.\n\n#  SiconosACEF_LIBRARIES    - The libraries to link against Siconos ACEF\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# One may want to use a specific ACEF Library by setting\n\n# SiconosACEF_LIBRARY_DIRECTORY before FIND_PACKAGE(SiconosACEF)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindSiconosGeneric.cmake" : {
      "ObjectId" : "02d4507eb38180ed93fcbbefd01c64e27e1c7bc0",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the Siconos ${_project} includes and libraries.\n\n# The following variables are set if ${_project} is found.  If ${_project} is not\n\n# found, Siconos${_project}_FOUND is set to false.\n\n#  Siconos${_project}_FOUND        - True when the Siconos${_project} include directory is found.\n\n#  Siconos${_project}_INCLUDE_DIRS - the path to where the Siconos ${_project} include files are.\n\n#  Siconos${_project}_LIBRARY_DIRS - The path to where the Siconos library files are.\n\n#  Siconos${_project}_LIBRARIES    - The libraries to link against Siconos ${_project}\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# One may want to use a specific ${_project} Library by setting\n\n# Siconos${_project}_LIBRARY_DIRECTORY before FIND_PACKAGE(Siconos${_project})\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We should try to use Windows-GNU to some extend ... --xhub\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# We should use the second version of FIND_PACKAGE_HANDLE_STANDARD_ARGS ... -- xhub\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# It looks like cmake does stupid things with the order in HINTS ...\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "cmake/FindSuiteSparse.cmake" : {
      "ObjectId" : "fc686119475aba31592450777361b037c5c23565",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  find_package(SuiteSparse COMPONENTS CSparse)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Try to find SuiteSparse\n\n# Once done this will define\n\n#  SuiteSparse_FOUND - System has SuiteSparse\n\n#  SuiteSparse_INCLUDE_DIRS - The SuiteSparse include directories\n\n#  SuiteSparse_LIBRARIES - The libraries needed to use SuiteSparse\n\n#  SuiteSparse_DEFINITIONS - Compiler switches required for using SuiteSparse\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For each component (currently only \"CXSparse\"):\n\n#  SuiteSparse_(component)_FOUND\n\n#  SuiteSparse_(component)_LIBRARY\n\n#  SuiteSparse_(component)_INCLUDE_DIR\n\n#  SuiteSparse_(component)_DEFINITIONS\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# At least on some systems we need to link to libcolamd which is\n\n# another output from suitesparse.\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set SuiteSparse_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If at least one component was found, SuiteSparse was found.\n\n# Users must check each component FOUND individually.\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/FindSuperLU.cmake" : {
      "ObjectId" : "e3cbdbd16d4f37477276ffbfd1272311f7168771",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/FindSuperLU_MT.cmake" : {
      "ObjectId" : "893b6078ebc3d06aeeb5fb4bec8b3c7c34b7cdb2",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/FindSuperLU_dist.cmake" : {
      "ObjectId" : "f9be1750c6f206a12d05ee45de3b13690a3f372b",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/FindUmfpack.cmake" : {
      "ObjectId" : "c4282098499f0149a91449650f1e9959834b8991",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Umfpack lib usually requires linking to a blas library.\n\n# It is up to the user of this module to find a BLAS and link to it.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# From eigen\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use pkg-config to get hints about paths\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/FramaC.cmake" : {
      "ObjectId" : "5dbb19a431d6a2f4789cad5705c9bd0f83429e2b",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/LibFindMacros.cmake" : {
      "ObjectId" : "d78b94f467b0ee463fe582258965cae6a294d1c0",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Works the same as find_package, but forwards the \"REQUIRED\" and \"QUIET\" arguments\n\n# used for the current package. For this to work, the first parameter must be the\n\n# prefix of the current package, then the prefix of the new package etc, which are\n\n# passed to find_package.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Do the final processing once the paths have been detected.\n\n# If include dirs are needed, ${PREFIX}_PROCESS_INCLUDES should be set to contain\n\n# all the variables, each of which contain one include directory.\n\n# Ditto for ${PREFIX}_PROCESS_LIBS and library files.\n\n# Will set ${PREFIX}_FOUND, ${PREFIX}_INCLUDE_DIRS and ${PREFIX}_LIBRARIES.\n\n# Also handles errors in case library detection was required, etc.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Skip processing if already processed during this run\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Start with the assumption that the library was found\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Process all includes and set _FOUND to false if any are missing\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Process all libraries and set _FOUND to false if any are missing\n",
        "Line" : 38,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Print message and/or exit on fatal error\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "cmake/LibraryProjectSetup.cmake" : {
      "ObjectId" : "cb6963ac14a80286a615dae25005be1dd499335f",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#====================================================================\n\n#\n\n# Define and build a target for the current component\n\n#\n\n# Usage:\n\n#\n\n# library_project_setup(component_name)\n\n#\n\n#\n\n# <COMPONENT>_SRCS : [optional] Project SRCS on per files basis\n\n# <COMPONENT>_LIBS_NAME : [optional] libraries name. if it is empty the libs name are the same as COMPONENT.\n\n# <COMPONENT>_DIRS : sources directories\n\n# <COMPONENT>_Unstable_SRCS : built only if -DWITH_UNSTABLE=ON\n\n# <COMPONENT>_VERSION : version of the library\n\n# <COMPONENT>_HDRS : installation headers  (if none all headers)\n\n# <COMPONENT>_HDRS_EXCLUDE_DIR : exclude headers from this dir from installation\n\n# <COMPONENT>_LINKER_LANGUAGE : the language used to link the whole librarie\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# --- Collect source files from given directories ---\n\n# --> set ${COMPONENT}_SRCS\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Unstable sources\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# --- Collect headers ---\n\n# --> set ${COMPONENT}_HDRS (for installation)\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# --- remove excluded headers if any ---\n\n# if not found, error to indicate that it should be removed.\n",
        "Line" : 60,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# --- include dirs for library ---\n\n# --> local includes (for build) : ${PROJECT_NAME}_LOCAL_INCLUDE_DIRECTORIES\n\n# --> includes for external packages : SICONOS_INCLUDE_DIRECTORIES\n",
        "Line" : 71,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# --- Append local includes to ${PROJECT_NAME}_LOCAL_INCLUDE_DIRECTORIES ---\n",
        "Line" : 75,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# --- doxygen warnings ---\n",
        "Line" : 84,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# --- documentation ---\n",
        "Line" : 87,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Update list of source directories to be taken\n\n# into account by doxygen for the current component\n\n# --> set CACHE var ${COMPONENT}_DOXYGEN_INPUTS\n\n# Required by doxy2swig_docstrings and doxy2rst_sphinx.\n",
        "Line" : 90,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# xml files for python docstrings ...\n\n# xml files are required to build docstrings target\n\n# and so they must be build during cmake run.\n",
        "Line" : 97,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# update the main doxy file, without building the doc\n",
        "Line" : 105,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Prepare target to generate rst files from xml\n",
        "Line" : 107,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# -- include --\n\n# for local headers ...\n",
        "Line" : 111,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# and for headers of external libraries\n",
        "Line" : 114,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# no clobbering\n",
        "Line" : 132,
        "CharPositionInLine" : 26
      },
      "16" : {
        "Text" : "# windows stuff ...\n",
        "Line" : 135,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Link target with external libs ...\n",
        "Line" : 138,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# static linking is a nightmare\n",
        "Line" : 142,
        "CharPositionInLine" : 24
      },
      "19" : {
        "Text" : "# ---- Installation ---\n\n# Headers\n",
        "Line" : 149,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# libraries\n",
        "Line" : 153,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# --- python bindings ---\n",
        "Line" : 162,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 22
    },
    "cmake/OutOfSourcesBuild.cmake" : {
      "ObjectId" : "cec28b35a1d13312715abb80de5c724d749a288b",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Out of sources made mandatory\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Pipol.cmake" : {
      "ObjectId" : "7debd1f7d3c191e6e5903cf6f9d9160b0e4b6db5",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Remote compilations and tests on Pipol\n\n# PIPOL_USER must be set in the environment\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# On a Pipol system, set:\n\n# PIPOL_IMAGE : Pipol image full name\n\n# PIPOL_IMAGE_NAME : Pipol image without extension\n\n# PIPOL_SITE : suggestion for SITE variable\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# \n\n# default\n\n#\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ssh/rsync mandatory \n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# get pipol systems\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# add a target for each pipol system\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# target with rc-dir\n",
        "Line" : 120,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "cmake/PythonInstallSetup.cmake" : {
      "ObjectId" : "6e85741f6dd318cb39cf77eb85bf53221f164c2a",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# --- Function to compute the install path/options ---\n\n#\n\n# Usage :\n\n# set_install_options()\n\n#\n\n# Reads siconos_python_install option (from default_user_options)\n\n# and set python install dir according to its value.\n\n#\n\n# Summary :\n\n# cmake path-to-your-sources -Dpython_install_dir=standard\n\n# make install\n\n#\n\n# ---> install in 'system' python site-package\n\n#\n\n# cmake path-to-your-sources -Dpython_install_dir=user\n\n# make install\n\n#\n\n# ---> install in USER_SITE (no virtualenv case)\n\n# ---> install in site-packages of your virtualenv\n\n#\n\n# cmake path-to-your-sources -Dpython_install_dir=prefix -DCMAKE_INSTALL_PREFIX=/some/install/path\n\n# make install\n\n#\n\n# ---> install in CMAKE_INSTALL_PREFIX\n\n#\n\n# If /some/install/path is not a standard path of your system,\n\n# you'll probably need something like :\n\n# export PYTHONPATH=${PYTHONPATH}:/some/install/path\n\n#\n\n#\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# --- Case 1 : siconos_python_install=user ---\n\n# In that case, we need to find the user path. It depends on the operation system\n\n# and on which python is used (virtualenv or not)\n\n# First, we need to check if '--user' option works in the current environment.\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# --user works ...\n",
        "Line" : 51,
        "CharPositionInLine" : 20
      },
      "3" : {
        "Text" : "# Find install path for --user (site.USER_SITE)\n",
        "Line" : 52,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# Get python user site and install path = USER_SITE + project_name\n",
        "Line" : 56,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# user site not included in the path,\n\n# which probably means that python is run using virtualenv\n\n# Command to find 'global' site-packages\n\n# default path will probably be ok --> no options\n\n# note: the '.replace()' is to work around the following Debian/Ubuntu bug:\n\n#   https://bugs.launchpad.net/ubuntu/+source/python3-defaults/+bug/1408092\n",
        "Line" : 65,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# Set the SICONOS_PYTHON_INSTALL_DIR to the proper path\n",
        "Line" : 76,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Case 2 : siconos_python_install=prefix\n\n# we use CMAKE_INSTALL_PREFIX as the path for python install\n",
        "Line" : 79,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# note: the '.replace()' is to work around the following Debian/Ubuntu bug:\n\n#   https://bugs.launchpad.net/ubuntu/+source/python3-defaults/+bug/1408092\n",
        "Line" : 81,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# Default case : siconos_python_install=standard\n\n#set(PYTHON_COMMAND_GET_INSTALL_DIR   \n\n#  \"import site; print(site.getsitepackages()[0])\")\n\n# --> this does not work properly: the order in resulting\n\n# list depends on the OS, the python version ...\n\n# Set the SICONOS_PYTHON_INSTALL_DIR to the proper path\n",
        "Line" : 89,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "#string(STRIP ${python_install_options} python_install_options)\n",
        "Line" : 106,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 11
    },
    "cmake/PythonWindowsSetup.cmake" : {
      "ObjectId" : "e1df32c38c91306a11ad4a42a6b5da4c19004f6a",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# remove trailing backslash and quote for python\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "cmake/Rpmbuild.cmake" : {
      "ObjectId" : "06dfedfd09033422a95a6eacfdbc0880d22ae44b",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# http://mehdi.rabah.free.fr/Rpmbuild.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Rpmbuild : Create rpm packages for your projects and sub projects. Written by Mehdi Rabah.\n\n# Was heavily inspired by UseDebian (Mathieu Malaterre) and UseRPMTools (TSP Team) modules\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# need /usr/bin/rpmbuild\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Supported variables\n\n# Summary: ${PACKAGE_DESCRIPTION_SUMMARY}\n\n# Name: ${PACKAGE_NAME}\n\n# Version: ${PACKAGE_VERSION}\n\n# Release: ${PACKAGE_RELEASE}\n\n# License: ${PACKAGE_LICENSE}\n\n# Group: ${PACKAGE_GROUP}\n\n# Source: ${PACKAGE_SOURCE}\n\n# Packager: ${PACKAGE_MAINTAINER_NAME} ${PACKAGE_MAINTAINER_EMAIL}\n\n#\n\n# %description\n\n# ${PACKAGE_DESCRIPTION}\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Main and only command of this module. \n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# First choice for spec file : user defined variables \n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Check if the mandatory variables are here\n\n# TODO\n",
        "Line" : 53,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# Writing the spec file\n",
        "Line" : 59,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# the final target:\n",
        "Line" : 103,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 9
    },
    "cmake/SiconosCTest.cmake" : {
      "ObjectId" : "348522ac81b474ad78853bbe84d80e3fd5af5f53",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# buildname must stay static to have track possibility on CDash.\n\n# SET(BUILDNAME \"${BUILDNAME}-${SOURCE_ABBREV_GIT_SHA1}\")\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Jenkins always works in detached head mode, so we have to work a bit more to get the branch name\n",
        "Line" : 32,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Tests coverage (taken from ViSp)\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Note: all of this is done with a recent cmake version (>2.6.0) with:\n\n# cmake -DCMAKE_BUILD_TYPE=Profile\n\n#\n\n#\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add build options for test coverage. Currently coverage is only supported\n\n# on gcc compiler\n\n# Because using -fprofile-arcs with shared lib can cause problems like:\n\n# hidden symbol `__bb_init_func', we add this option only for static\n\n# library build\n",
        "Line" : 66,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "cmake/SiconosSetup.cmake" : {
      "ObjectId" : "4fa026beef0a8b6f1c730add7d6e07e609dbf22c",
      "LastModified" : "2019-04-16T15:45:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===================================================\n\n# Set main parameters for the Siconos cmake project\n\n#\n\n# ===================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# =========== Windows stuff ... ===========\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# --------- CMake project internal variables ---------\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Siconos current version\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# File used to print tests setup messages.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# get system architecture \n\n# https://raw.github.com/petroules/solar-cmake/master/TargetArch.cmake\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# extensions of headers files that must be taken into account\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# To include or not unstable source files\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# dirs of 'local' headers. Must be filled by each component.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# extensions of source files that must be taken into account\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ---- PYTHON SETUP ----\n\n# Python interpreter is always required.\n\n# We force Python3!\n\n# In addition, when WITH_PYTHON_WRAPPER is ON,\n\n# we need python libraries and numpy.\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Our FindPython3 is just a copy of the one distributed\n\n# with cmake = 3.14\n",
        "Line" : 92,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# For backward compat ...\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# --- xml schema. Used in tests. ---\n",
        "Line" : 109,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Choice of CSparse/CXSparse integer size\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# =========== install setup ===========\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Install lib directory 32, 64 etc. on Fedora, Debian \n\n# http://public.kitware.com/Bug/view.php?id=11964\n\n# See also http://www.cmake.org/cmake/help/v3.0/module/GNUInstallDirs.html?highlight=gnuinstalldirs\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Set prefix path for libraries installation\n\n# --> means that any library target will be installed\n\n# in CMAKE_INSTALL_PREFIX/_install_lib\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# --- RPATH stuff ---\n\n# See https://cmake.org/Wiki/CMake_RPATH_handling\n\n# Warning: RPATH settings must be defined before install(...) settings.\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# when building, don't use the install RPATH already\n\n# (but later on when installing)\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# when building a binary package, it makes no sense to add this rpath\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# the RPATH to be used when installing\n",
        "Line" : 170,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# don't add the automatically determined parts of the RPATH\n\n# which point to directories outside the build tree to the install RPATH\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# The following settings were copied from\n\n# https://cmake.org/Wiki/CMake_RPATH_handling\n\n# to avoid the rpath issue that appears on OS X El Capitan\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# the RPATH to be used when installing, but only if it's not a system directory\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# List of cmake macros that will be distributed with siconos software.\n\n# They may be required during call to siconos script\n\n# or to configure projects depending on Siconos (e.g. siconos-tutorials)\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# =========== uninstall target ===========\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# init all common options for enabled components\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ========= Documentation =========\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# =========== OpenMP ==========\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Only applies to numerics code, which is in C (for now)\n\n#SET(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}\")\n",
        "Line" : 239,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# =========== use ccache if available ===========\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# =========== MPI ==========\n",
        "Line" : 254,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# https://cmake.org/cmake/help/v3.10/module/FindMPI.html\n",
        "Line" : 258,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# for config.h\n",
        "Line" : 261,
        "CharPositionInLine" : 30
      },
      "35" : {
        "Text" : "# if(MPI_Fortran_FOUND) # Do we need mpi fortran ?\n\n#   print_mpi_info(Fortran)\n\n# endif()\n",
        "Line" : 263,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 36
    },
    "cmake/SiconosTools.cmake" : {
      "ObjectId" : "ec3bd9c753e20d433c5b3200b878a30a8052ae01",
      "LastModified" : "2019-04-16T15:45:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Some convenience macros\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# -- Basic list manipulation --\n\n# Get first element of list var\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# get elements in list var minus the first one.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# LIST(APPEND ...) is not correct on <COMPILER>_FLAGS \n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The use of ADD_DEFINITION results in a warning with Fortran compiler\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Scans DIRS (list of directories) and returns a list of all files in those dirs\n\n# matching extensions defined in SRC_EXTS list.\n\n# Results are saved in SOURCES_FILES\n\n#\n\n# Usage:\n\n# set(src_dirs dir1 dir2)\n\n# get_sources(src_dirs)\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Scans DIRS (list of directories) and returns a list of all files in those dirs\n\n# matching extensions defined in HDR_EXTS list.\n\n# Results are saved in HDRS_FILES\n\n#\n\n# Usage:\n\n# set(src_dirs dir1 dir2)\n\n# get_headers(src_dirs)\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# filter out header paths containing the word \"internal\"\n\n# (stemming from component dir.. otherwise we'd have trouble\n\n# if workdir path contains the string \"internal\")\n",
        "Line" : 76,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# -- returns a list of source files extension --\n\n# Results in var ALL_EXTS\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Print cmake variable 'V' value\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# =======================================\n\n# For a given package name, try to find\n\n# corresponding headers and libraries and\n\n# add them to the include directories\n\n# and list of linked libraries.\n\n#\n\n# It sets (if found):\n\n# - SICONOS_INCLUDE_DIRECTORIES with the list\n\n# of directories of headers required for siconos to work with\n\n# - SICONOS_LINK_LIBRARIES with the list of external libraries\n\n# (full path!) needed by siconos project.\n\n#\n\n# Usage :\n\n#  compile_with(Packagename options)\n\n#\n\n# with the same 'options' as find_package\n\n# (see http://www.cmake.org/cmake/help/v3.0/command/find_package.html?highlight=find_package)\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Options for this command:\n",
        "Line" : 133,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# REQUIRED is a boolean flag (present or not)\n\n# there are no arguments that take only one value\n\n# arguments that take multiple values:\n\n# - which components of the requested package are needed\n\n# - to which Siconos components does this dependency apply\n",
        "Line" : 134,
        "CharPositionInLine" : 33
      },
      "13" : {
        "Text" : "# If SICONOS_COMPONENTS is not specified, it is assumed it is a\n\n# dependency for all Siconos components\n",
        "Line" : 140,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Get package name and extra args ...\n",
        "Line" : 148,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# add headers dirs into 'include' path\n\n# INCLUDE_DIR var name depends on FindNAME\n\n# We try to check the standard var names.\n",
        "Line" : 187,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# Now we set list of libs that must be linked with.\n",
        "Line" : 199,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# And the compiler flags\n",
        "Line" : 203,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "# ==== Save directories required for include_directory ===\n\n# \n\n# Set variable SICONOS_INCLUDE_DIRECTORIES with the list\n\n# of directories of headers required for siconos to work with\n\n# its dependencies.\n\n# Usage :\n\n# set(dirs d1 d2 d3)\n\n# remember_include_directories(${dirs})\n\n#  --> save d1, d2, d3 into SICONOS_INCLUDE_DIRECTORIES\n\n# \n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# ==== Save directories required for include_directory ===\n\n# \n\n# Set variable ${PROJECT_NAME}_LOCAL_INCLUDE_DIRECTORIES with the list\n\n# of directories of headers of each siconos component.\n\n#\n\n# Usage :\n\n# set(dirs d1 d2 d3)\n\n# remember_local_include(${dirs})\n\n#  --> save d1, d2, d3 into ${PROJECT_NAME}_LOCAL_INCLUDE_DIRECTORIES\n\n#\n\n# mind the ${CMAKE_CURRENT_SOURCE_DIR} below!\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# a note file for the dashboard\n",
        "Line" : 292,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# the default buildname\n",
        "Line" : 296,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# -------------------------------\n\n# Set WITH_COMPONENT_OPT value\n\n# depending on WITH_OPT value\n\n# and the -D... entries.\n\n#\n\n# Example :\n\n# cmake -DWITH_DOCUMENTATION = ON\n\n# will activate all WITH_component_DOCUMENTATION for enabled components.\n\n# while\n\n# cmake -DWITH_kernel_DOCUMENTATION=ON\n\n# will set WITH_DOCUMENTATION=ON and WITH_other_components=OFF\n\n# \n\n# This will work (I hope ...) in standard cases but will probably\n\n# failed after several cmake . with schizophrenic options\n\n# like\n\n# cmake -DWITH_kernel_DOCUMENTATION=ON path_to_srcs\n\n# cmake -DWITH_DOCUMENTATION=OFF .\n\n# In that case, user needs to reset all WITH_component_OPT.\n\n#\n\n# -------------------------------\n",
        "Line" : 320,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Each \"WITH_component_OPT\" is set to default value == WITH_OPT value.\n",
        "Line" : 341,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# We don't want to see all with_comp_opt in the GUI.\n",
        "Line" : 346,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# If one with_comp_opt is on, global with_opt must also be on\n",
        "Line" : 350,
        "CharPositionInLine" : 1
      },
      "26" : {
        "Text" : "# ------------------------------------\n\n# Append a directory _N into\n\n# the list of Examples executed by\n\n# target 'example'\n\n# ------------------------------------\n",
        "Line" : 360,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# create binary dir and configure a CMakeLists.txt\n",
        "Line" : 367,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# add the created directory to the build\n",
        "Line" : 373,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# ------------------------------------\n\n# Get the list of subdirectories\n\n# of a given dir\n\n# ------------------------------------\n",
        "Line" : 377,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Replacement for list(FILTER ...) (see cmake doc)\n\n# when current cmake version < 3.6)\n\n# Usage :\n\n# list_filter(<listname> <matching expr>)\n\n# example:\n\n# set(mylist name src plugin)\n\n# list_filter(mylist src)\n\n# ==> mylist contains only name and plugin\n",
        "Line" : 393,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Display MPI search results\n",
        "Line" : 411,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 32
    },
    "cmake/SiconosVersion.cmake" : {
      "ObjectId" : "6b462246d5d11b8ceba0f688ce5ac1d80de86575",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# --- set siconos current version ---\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### SOVERSION\n\n#\n\n# The SICONOS_VERSION variable above indicates API compatibility,\n\n# whereas the SICONOS_SOVERSION (or SONAME), below, indicates ABI\n\n# compatibility.\n\n#\n\n# To be bumped at each release, by the following rules.  If you are\n\n# not sure, likely API and ABI compatibility have both been\n\n# sacrificed, so simply bump SO_current and set the others to zero.\n\n# If an effort has been made to be backwards compatible on this\n\n# release (e.g. bug fix release), continue with the rules outlined\n\n# below.\n\n#\n\n### RULES for SONAME (borrowed from libtool)\n\n### https://www.gnu.org/software/libtool/manual/html_node/Libtool-versioning.html\n\n#\n\n# If the library source code has changed at all since the last update, then\n\n# increment revision (`c:r:a' becomes `c:r+1:a').\n\n#\n\n# If any interfaces have been added, removed, or changed since the last update,\n\n# increment current, and set revision to 0.\n\n#\n\n# If any interfaces have been added since the last public release, then\n\n# increment age.\n\n#\n\n# If any interfaces have been removed since the last public release, then set\n\n# age to 0.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Aggregate variables, to be passed to linker.\n\n# libraries will be named e.g.,\n\n#   libsiconos_kernel.so -> libsiconos_kernel.so.5 -> libsiconos_kernel.so.5.0.0\n\n# Again: this is *not* the software release number!\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/SuperLUcommon.cmake" : {
      "ObjectId" : "c58b95255be602f1a8fec704cd295e06b50ae7d3",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# SuperLU lib usually requires linking to a blas library.\n\n# It is up to the user of this module to find a BLAS and link to it.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# From eigen\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use pkg-config to get hints about paths\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/TargetArch.cmake" : {
      "ObjectId" : "3761e4df8a3ef05c2db48ce07eb4cbbfa585419e",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Based on the Qt 5 processor detection code, so should be very accurate\n\n# https://qt.gitorious.org/qt/qtbase/blobs/master/src/corelib/global/qprocessordetection.h\n\n# Currently handles arm (v5, v6, v7), x86 (32/64), ia64, and ppc (32/64)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Regarding POWER/PowerPC, just as is noted in the Qt source,\n\n# \"There are many more known variants/revisions that we do not handle/detect.\"\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set ppc_support to TRUE before including this file or ppc and ppc64\n\n# will be treated as invalid architectures since they are no longer supported by Apple\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# On OS X we use CMAKE_OSX_ARCHITECTURES *if* it was set\n\n# First let's normalize the order of the values\n",
        "Line" : 55,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Note that it's not possible to compile PowerPC applications if you are using\n\n# the OS X SDK version 10.6 or later - you'll need 10.4/10.5 for that, so we\n\n# disable it by default\n\n# See this page for more information:\n\n# http://stackoverflow.com/questions/5333490/how-can-we-restore-ppc-ppc64-as-well-as-full-10-4-10-5-sdk-support-to-xcode-4\n",
        "Line" : 58,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Architecture defaults to i386 or ppc on OS X 10.5 and earlier, depending on the CPU type detected at runtime.\n\n# On OS X 10.6+ the default is x86_64 if the CPU supports it, i386 otherwise.\n",
        "Line" : 64,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Now add all the architectures in our normalized order\n",
        "Line" : 81,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Detect the architecture in a rather creative way...\n\n# This compiles a small C program which is a series of ifdefs that selects a\n\n# particular #error preprocessor directive whose message string contains the\n\n# target architecture. The program will always fail to compile (both because\n\n# file is not a valid C program, and obviously because of the presence of the\n\n# #error preprocessor directives... but by exploiting the preprocessor in this\n\n# way, we can detect the correct target architecture even when cross-compiling,\n\n# since the program itself never needs to be run (only the compiler/preprocessor)\n",
        "Line" : 102,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# Parse the architecture name from the compiler output\n",
        "Line" : 119,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Get rid of the value marker leaving just the architecture name\n",
        "Line" : 122,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# If we are compiling with an unknown architecture this variable should\n\n# already be set to \"unknown\" but in the case that it's empty (i.e. due\n\n# to a typo in the code), then set it to unknown\n",
        "Line" : 125,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 11
    },
    "cmake/UseDebian.cmake" : {
      "ObjectId" : "41146249f695f274cafaf81f32665ce6c1ad83d4",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n#\n\n#  Program: GDCM (Grass Root DICOM). A DICOM library\n\n#  Module:  $URL$\n\n#\n\n#  Copyright (c) 2006-2008 Mathieu Malaterre\n\n#  All rights reserved.\n\n#  See Copyright.txt or http://gdcm.sourceforge.net/Copyright.html for details.\n\n#\n\n#     This software is distributed WITHOUT ANY WARRANTY; without even\n\n#     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n\n#     PURPOSE.  See the above copyright notice for more information.\n\n#\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# create .deb file\n\n# You need to setup CPack first !\n\n# UGLY: I reuse CPACK_NSIS_CONTACT to get the contact name for the debian package...\n\n# TODO: How do I transmit the 'Depends' line ?\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# DOCUMENTATION; You need to fill these values to set the control file:\n\n# \"Package: ${DEBIAN_PACKAGE_NAME}\n\n# Version: ${DEBIAN_PACKAGE_VERSION}\n\n# Architecture: ${DEBIAN_ARCHITECTURE}\n\n# Depends: ${DEBIAN_PACKAGE_DEPENDS}\n\n# Maintainer: ${CPACK_NSIS_CONTACT}\n\n# Description: ${CPACK_PACKAGE_DESCRIPTION_SUMMARY}\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Thanks:\n\n# Eric Noulard for initial UseRpmTools used as template\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Detect if CPack was included or not\n",
        "Line" : 38,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# $ ar tv cmake_2.4.5-1_i386.deb\n\n# rw-r--r-- 0/0      4 Dec  4 22:58 2006 debian-binary\n\n# rw-r--r-- 0/0   8981 Dec  4 22:58 2006 control.tar.gz\n\n# rw-r--r-- 0/0 4893146 Dec  4 22:58 2006 data.tar.gz\n",
        "Line" : 44,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# Need a newline:\n\n# dpkg-deb: archive has no newlines in header\n",
        "Line" : 49,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# seems better to ADD_CUSTOM_COMMAND this way debian-binary may\n\n# be regenerated when make is called.\n\n#      FILE(WRITE ${CMAKE_BINARY_DIR}/debian-binary \"2.0\n\n#\" )\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# debian policy enforce lower case for package name\n",
        "Line" : 63,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# There is no such thing as i686 architecture on debian, you should use i386 instead\n\n# $ dpkg --print-architecture\n",
        "Line" : 76,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "#MESSAGE(${CMAKE_SYSTEM_PROCESSOR})\n",
        "Line" : 85,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# FIXME:\n",
        "Line" : 102,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# I have no friggin clue how cpack works, let's reinvent the wheel instead\n",
        "Line" : 103,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "#INCLUDE(${CMAKE_BINARY_DIR}/CPackConfig.cmake)\n\n#ADD_CUSTOM_TARGET(data_tgz\n\n#  COMMAND cpack -G TGZ --config CPackConfig.cmake\n\n## TODO: How to get the cpack package name ?\n\n#  COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_BINARY_DIR}/${CPACK_PACKAGE_FILE_NAME}.tar.gz ${CMAKE_BINARY_DIR}/data.tar.gz\n\n#)  \n",
        "Line" : 105,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# let's create a temp directory to call 'DESTDIR=... make install' into:\n\n# cleanup\n",
        "Line" : 112,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "# make dir:\n",
        "Line" : 115,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "# calling cmake -P cmake_install.cmake is the same as calling make install:\n",
        "Line" : 118,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "# create data.tar.gz from the make install stuff\n\n# all files starts with: ./usr\n",
        "Line" : 126,
        "CharPositionInLine" : 1
      },
      "18" : {
        "Text" : "# get all the files to be installed:\n",
        "Line" : 138,
        "CharPositionInLine" : 1
      },
      "19" : {
        "Text" : "# create a tarball (control.tar.gz) of control and md5sums\n\n# files need to be in relative path: ./md5sums ./control ...\n",
        "Line" : 145,
        "CharPositionInLine" : 1
      },
      "20" : {
        "Text" : "# Warning order is important:\n\n# ar -r your-package-name.deb debian-binary control.tar.gz data.tar.gz\n\n# eg: cmake_2.4.5-1_i386.deb\n",
        "Line" : 158,
        "CharPositionInLine" : 1
      },
      "21" : {
        "Text" : "# the final target:\n",
        "Line" : 171,
        "CharPositionInLine" : 1
      },
      "22" : {
        "Text" : "# BUG: debian_package is not removed during a 'make clean':\n",
        "Line" : 178,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 23
    },
    "cmake/UseRPMTools.cmake" : {
      "ObjectId" : "74e0112caaff40544219a91d7880c340162fc3fb",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# - Find tools needed for building RPM Packages\n\n#   on Linux systems and defines macro that helps to\n\n#   build source or binary RPM, the MACRO assumes\n\n#   CMake 2.4.x which includes CPack support.\n\n#   CPack is used to build tar.gz source tarball\n\n#   which may be used by a custom user-made spec file.\n\n#\n\n# - Define RPMTools_ADD_RPM_TARGETS which defines\n\n#   two (top-level) CUSTOM targets for building\n\n#   source and binary RPMs\n\n#\n\n# Those CMake macros are provided by the TSP Developer Team\n\n# https://savannah.nongnu.org/projects/tsp\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Look for RPM builder executable\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Detect if CPack was included or not\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#\n\n# - first arg  (ARGV0) is RPM name\n\n# - second arg (ARGV1) is the RPM spec file path [optional]\n\n# - third arg  (ARGV2) is the RPM ROOT DIRECTORY used to build RPMs [optional]\n\n#\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#\n\n# If no spec file is provided create a minimal one\n\n#\n",
        "Line" : 52,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Verify whether if RPM_ROOTDIR was provided or not\n",
        "Line" : 61,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# Prepare RPM build tree\n",
        "Line" : 69,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "#\n\n# We check whether if the provided spec file is\n\n# to be configure or not.\n\n# \n",
        "Line" : 78,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# This is a 'ready-to-use' spec file which does not need to be CONFIGURED\n",
        "Line" : 139,
        "CharPositionInLine" : 3
      },
      "9" : {
        "Text" : "# This is a to-be-configured spec file\n",
        "Line" : 147,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 10
    },
    "cmake/WindowsControlSetup.cmake" : {
      "ObjectId" : "0accc66f963ebc85027f8bb6ff9618eac3c0ce60",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# we need CMAKE_NM for the EXPORTS hack\n\n# On other Module this variable is set through FindBinutils since we ask for\n\n# a Fortran compiler --xhub\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# for proper prefixes and suffixes\n",
        "Line" : 8,
        "CharPositionInLine" : 32
      },
      "CommentCount" : 2
    },
    "cmake/WindowsExternalsSetup.cmake" : {
      "ObjectId" : "47bf1e4d9db158cded8f15e7dac77b5553743727",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Hope for the best\r\n",
        "Line" : 9,
        "CharPositionInLine" : 16
      },
      "1" : {
        "Text" : "# XXX No test :( -- xhub\r\n",
        "Line" : 19,
        "CharPositionInLine" : 128
      },
      "CommentCount" : 2
    },
    "cmake/WindowsKernelSetup.cmake" : {
      "ObjectId" : "fdc5385bd23e6ff401864fc1144f8d8f8bd64bd7",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/WindowsLibrarySetup.cmake" : {
      "ObjectId" : "59ccf2675d1490d3b6d18285c4a802b5f224cd52",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# for proper prefixes and suffixes\n",
        "Line" : 6,
        "CharPositionInLine" : 34
      },
      "1" : {
        "Text" : "# gruik gruik\n",
        "Line" : 17,
        "CharPositionInLine" : 10
      },
      "2" : {
        "Text" : "# gruik gruik\n",
        "Line" : 23,
        "CharPositionInLine" : 10
      },
      "CommentCount" : 3
    },
    "cmake/WindowsMechanicsSetup.cmake" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/WindowsNumericsSetup.cmake" : {
      "ObjectId" : "7707f0abc8417eef42a056a4cf90179ab6c4d42d",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#======================================\n\n#\n\n# cmake setup for numerics for windows.\n\n#======================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# for LAPACKE, see http://icl.cs.utk.edu/lapack-for-windows/lapack/\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/WindowsSiconosSetup.cmake" : {
      "ObjectId" : "922ccc37ea64d93b7c7a2f73f03a36eb33d47ea0",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Microsoft has its own definition of secure functions ...\n",
        "Line" : 10,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 1
    },
    "cmake/cTools.cmake" : {
      "ObjectId" : "d16dc8f21d45ca0a621f30820d0f86c35b4bf378",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# =====================================\n\n# Some macros to check C compiler,\n\n# check/add some flags, get version ...\n\n# =====================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# --- Append some options (list OPT) to cxx compiler flags. ---\n\n# Update :\n\n# - CMAKE_C_FLAGS\n\n# -\n\n# parameters :\n\n# OPT : the flags\n\n# extra parameters : a list of compilers ids\n\n# (see http://www.cmake.org/cmake/help/v3.3/variable/CMAKE_LANG_COMPILER_ID.html#variable:CMAKE_<LANG>_COMPILER_ID)\n\n# If extra parameter is set, the option will be applied\n\n# only for those compilers, if the option is accepted.\n\n# \n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Based on the Qt 5 processor detection code, so should be very accurate\n\n# https://qt.gitorious.org/qt/qtbase/blobs/master/src/corelib/global/qprocessordetection.h\n\n# Currently handles arm (v5, v6, v7), x86 (32/64), ia64, and ppc (32/64)\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Regarding POWER/PowerPC, just as is noted in the Qt source,\n\n# \"There are many more known variants/revisions that we do not handle/detect.\"\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set ppc_support to TRUE before including this file or ppc and ppc64\n\n# will be treated as invalid architectures since they are no longer supported by Apple\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Parse the architecture name from the compiler output\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Get rid of the value marker leaving just the architecture name\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    },
    "cmake/cVersion.cmake" : {
      "ObjectId" : "5e4f95593c7faf806e072cdb60413fcd4c83635f",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Based on the Qt 5 processor detection code, so should be very accurate\n\n# https://qt.gitorious.org/qt/qtbase/blobs/master/src/corelib/global/qprocessordetection.h\n\n# Currently handles arm (v5, v6, v7), x86 (32/64), ia64, and ppc (32/64)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Regarding POWER/PowerPC, just as is noted in the Qt source,\n\n# \"There are many more known variants/revisions that we do not handle/detect.\"\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set ppc_support to TRUE before including this file or ppc and ppc64\n\n# will be treated as invalid architectures since they are no longer supported by Apple\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Parse the architecture name from the compiler output\n",
        "Line" : 31,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Get rid of the value marker leaving just the architecture name\n",
        "Line" : 34,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 5
    },
    "cmake/cxxTools.cmake" : {
      "ObjectId" : "e71b2bad7fcf94aad721a5e62c3268f72fbbf233",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# =====================================\n\n# Some macros to check CXX compiler,\n\n# check/add some flags, get version ...\n\n# =====================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# --- Append some options (list OPT) to cxx compiler flags. ---\n\n# Update :\n\n# - CMAKE_CXX_FLAGS\n\n# -\n\n# parameters :\n\n# OPT : the flags\n\n# extra parameters : a list of compilers ids\n\n# (see http://www.cmake.org/cmake/help/v3.3/variable/CMAKE_LANG_COMPILER_ID.html#variable:CMAKE_<LANG>_COMPILER_ID)\n\n# If extra parameter is set, the option will be applied\n\n# only for those compilers, if the option is accepted.\n\n# \n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check if option exists for the current compiler ...\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# deal with extra arguments (others than OPT list)\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Based on the Qt 5 processor detection code, so should be very accurate\n\n# https://qt.gitorious.org/qt/qtbase/blobs/master/src/corelib/global/qprocessordetection.h\n\n# Currently handles arm (v5, v6, v7), x86 (32/64), ia64, and ppc (32/64)\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Regarding POWER/PowerPC, just as is noted in the Qt source,\n\n# \"There are many more known variants/revisions that we do not handle/detect.\"\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# --------------- Return Cxx compiler standard ---------------\n\n# Result --> set CXXVERSION variable.\n\n# Set ppc_support to TRUE before including this file or ppc and ppc64\n\n# will be treated as invalid architectures since they are no longer supported by Apple\n\n# \n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Parse the architecture name from the compiler output\n",
        "Line" : 86,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# Get rid of the value marker leaving just the architecture name\n",
        "Line" : 89,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# ----- Return the version of the current compiler ----\n\n# Usefull only for cmake version < 3.0\n\n# cf http://stackoverflow.com/questions/435708/any-way-in-cmake-to-require-gcc-version-4\n\n# with cmake version >= 2.8.8 we can use CMAKE_C_COMPILER_VERSION and\n\n# CMAKE_CXX_COMPILER_VERSION\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# std::shared_ptr\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# std::array\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# std::unordered_map\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# std::tuple / tie\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# std::to_string\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# std::bind and functional\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "cmake/default_options.cmake" : {
      "ObjectId" : "cb04672929aadc009d5d3557357d31fb4bb32777",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ================================================================\n\n# All the default values for siconos cmake parameters\n\n#\n\n# Usage:\n\n# cmake path-to-sources\n\n#  --> to keep default value\n\n# \n\n# cmake path-to-sources -DWITH_PYTHON_WRAPPER=ON\n\n#  --> to enable (ON), or disable (OFF) the concerned option.\n\n#\n\n# For details about all these options check siconos install guide.\n\n# ================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# --------- User-defined options ---------\n\n# Use cmake -DOPTION_NAME=some-value ... to modify default value.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# --- List of siconos components to build and install ---\n\n# The complete list is : externals numerics kernel control mechanics mechanisms io\n\n# mechanisms is \"off\" by default.\n\n# Check https://nonsmooth.gricad-pages.univ-grenoble-alpes.fr/siconos/install_guide/install_guide.html#id6\n\n# for details about components.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# --- Build/compiling options ---\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# --- Documentation setup ---\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# --- List of external libraries/dependencies to be searched (or not) ---\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# -- Installation setup ---\n\n# Set python install mode:\n\n# - user --> behave as 'python setup.py install --user'\n\n# - standard --> install in python site-package (ie behave as python setup.py install)\n\n# - prefix --> install in python CMAKE_INSTALL_PREFIX (ie behave as python setup.py install --prefix=CMAKE_INSTALL_PREFIX)\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# on unix, there is no reason to use the standard option. By default, CMAKE_INSTALL_PREFIX is set to /usr/local and therefore,\n\n# the python packages should be installed in /usr/local/...\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# If OFF, headers from libraries in externals will not be installed.\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# If ON, internal headers will not be installed.\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "cmake/extras/FindPython/Support.cmake" : {
      "ObjectId" : "b02e0c36f0443252e0a728fc6fc9d7d2b9a6b2f3",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# This file is a \"template\" file used by various FindPython modules.\n\n#\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Initial configuration\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# helper commands\n\n#\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# executable found must have a specific version\n",
        "Line" : 92,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# interpreter not usable or has wrong major version\n",
        "Line" : 100,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# executable found do not have version in name\n\n# ensure major version is OK\n",
        "Line" : 106,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# interpreter not usable or has wrong major version\n",
        "Line" : 115,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# In this case, interpreter must have same architecture as environment\n",
        "Line" : 124,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# interpreter not usable or has wrong architecture\n",
        "Line" : 132,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# retrieve python environment version from compiler\n",
        "Line" : 145,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Compiler not usable or has wrong major version\n",
        "Line" : 161,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# look at runtime part on systems supporting it\n",
        "Line" : 169,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# MSYS has a special syntax for runtime libraries\n",
        "Line" : 174,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# If major version is specified, it must be the same as internal major version\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# handle components\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Set versions to search\n\n## default: search any version\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# add all compatible versions\n",
        "Line" : 230,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Python and Anaconda distributions: define which architectures can be used\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# In this case, search only for 64bit or 32bit\n",
        "Line" : 241,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# architecture unknown, search for both 64bit and 32bit\n",
        "Line" : 245,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# IronPython support\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# In this case, search only for 64bit or 32bit\n",
        "Line" : 252,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# architecture unknown, search for natural interpreter\n",
        "Line" : 256,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Apple frameworks handling\n",
        "Line" : 261,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Save CMAKE_FIND_APPBUNDLE\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# To avoid app bundle lookup\n",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Save CMAKE_FIND_FRAMEWORK\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# To avoid framework lookup\n",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Windows Registry handling\n",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# virtual environments handling\n",
        "Line" : 301,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# first step, search for the interpreter\n",
        "Line" : 322,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# look-up for various versions and locations\n",
        "Line" : 331,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# Virtual environments handling\n",
        "Line" : 337,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# Apple frameworks handling\n",
        "Line" : 361,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# Windows registry\n",
        "Line" : 375,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# try using HINTS\n",
        "Line" : 400,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "# try using standard paths.\n",
        "Line" : 411,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# Apple frameworks handling\n",
        "Line" : 426,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "# Windows registry\n",
        "Line" : 437,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "# No specific version found. Retry with generic names\n\n# try using HINTS\n",
        "Line" : 468,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "# try using standard paths.\n\n# NAMES_PER_DIR is not defined on purpose to have a chance to find\n\n# expected version.\n\n# For example, typical systems have 'python' for version 2.* and 'python3'\n\n# for version 3.*. So looking for names per dir will find, potentially,\n\n# systematically 'python' (i.e. version 2) even if version 3 is searched.\n",
        "Line" : 479,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "# retrieve exact version of executable found\n",
        "Line" : 493,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "# Interpreter is not usable\n",
        "Line" : 507,
        "CharPositionInLine" : 6
      },
      "44" : {
        "Text" : "# Use interpreter version for future searches to ensure consistency\n",
        "Line" : 516,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "# determine interpreter architecture\n",
        "Line" : 522,
        "CharPositionInLine" : 6
      },
      "46" : {
        "Text" : "# retrieve interpreter identity\n",
        "Line" : 538,
        "CharPositionInLine" : 4
      },
      "47" : {
        "Text" : "# try to get a more precise ID\n",
        "Line" : 551,
        "CharPositionInLine" : 10
      },
      "48" : {
        "Text" : "# retrieve various package installation directories\n",
        "Line" : 568,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "# second step, search for compiler (IronPython)\n",
        "Line" : 590,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# IronPython specific artifacts\n\n# If IronPython interpreter is found, use its path\n",
        "Line" : 597,
        "CharPositionInLine" : 2
      },
      "51" : {
        "Text" : "# try using root dir and registry\n",
        "Line" : 604,
        "CharPositionInLine" : 2
      },
      "52" : {
        "Text" : "# no specific version found, re-try in standard paths\n",
        "Line" : 637,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "# retrieve python environment version from compiler\n",
        "Line" : 644,
        "CharPositionInLine" : 4
      },
      "54" : {
        "Text" : "# set public version information\n",
        "Line" : 663,
        "CharPositionInLine" : 8
      },
      "55" : {
        "Text" : "# compiler not usable\n",
        "Line" : 670,
        "CharPositionInLine" : 6
      },
      "56" : {
        "Text" : "# Compiler must be compatible with interpreter\n",
        "Line" : 678,
        "CharPositionInLine" : 6
      },
      "57" : {
        "Text" : "# Use compiler version for future searches to ensure consistency\n",
        "Line" : 684,
        "CharPositionInLine" : 4
      },
      "58" : {
        "Text" : "# third step, search for the development artifacts\n\n## Development environment is not compatible with IronPython interpreter\n",
        "Line" : 699,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# Support preference of static libs by adjusting CMAKE_FIND_LIBRARY_SUFFIXES\n",
        "Line" : 714,
        "CharPositionInLine" : 2
      },
      "60" : {
        "Text" : "# if python interpreter is found, use its location and version to ensure consistency\n\n# between interpreter and development environment\n",
        "Line" : 726,
        "CharPositionInLine" : 2
      },
      "61" : {
        "Text" : "# try to use pythonX.Y-config tool\n",
        "Line" : 759,
        "CharPositionInLine" : 4
      },
      "62" : {
        "Text" : "# check that config tool match library architecture\n",
        "Line" : 776,
        "CharPositionInLine" : 6
      },
      "63" : {
        "Text" : "# retrieve root install directory\n",
        "Line" : 793,
        "CharPositionInLine" : 4
      },
      "64" : {
        "Text" : "# python-config is not usable\n",
        "Line" : 800,
        "CharPositionInLine" : 6
      },
      "65" : {
        "Text" : "# retrieve library\n",
        "Line" : 806,
        "CharPositionInLine" : 4
      },
      "66" : {
        "Text" : "# retrieve library directory\n",
        "Line" : 813,
        "CharPositionInLine" : 6
      },
      "67" : {
        "Text" : "# retrieve library name\n",
        "Line" : 817,
        "CharPositionInLine" : 6
      },
      "68" : {
        "Text" : "# retrieve runtime library\n",
        "Line" : 829,
        "CharPositionInLine" : 6
      },
      "69" : {
        "Text" : "# retrieve include directory\n",
        "Line" : 842,
        "CharPositionInLine" : 4
      },
      "70" : {
        "Text" : "# retrieve include directory\n",
        "Line" : 849,
        "CharPositionInLine" : 6
      },
      "71" : {
        "Text" : "# Rely on HINTS and standard paths if config tool failed to locate artifacts\n",
        "Line" : 866,
        "CharPositionInLine" : 2
      },
      "72" : {
        "Text" : "# search in HINTS locations\n",
        "Line" : 926,
        "CharPositionInLine" : 6
      },
      "73" : {
        "Text" : "# search in all default paths\n",
        "Line" : 956,
        "CharPositionInLine" : 6
      },
      "74" : {
        "Text" : "# retrieve runtime library\n",
        "Line" : 972,
        "CharPositionInLine" : 6
      },
      "75" : {
        "Text" : "# search for debug library\n",
        "Line" : 987,
        "CharPositionInLine" : 8
      },
      "76" : {
        "Text" : "# use library location as a hint\n",
        "Line" : 989,
        "CharPositionInLine" : 10
      },
      "77" : {
        "Text" : "# search first in known locations\n",
        "Line" : 997,
        "CharPositionInLine" : 10
      },
      "78" : {
        "Text" : "# search in all default paths\n",
        "Line" : 1008,
        "CharPositionInLine" : 10
      },
      "79" : {
        "Text" : "# Don't search for include dir until library location is known\n",
        "Line" : 1026,
        "CharPositionInLine" : 6
      },
      "80" : {
        "Text" : "# pick up include directory from configuration\n",
        "Line" : 1031,
        "CharPositionInLine" : 10
      },
      "81" : {
        "Text" : "# Use the library's install prefix as a hint\n",
        "Line" : 1046,
        "CharPositionInLine" : 12
      },
      "82" : {
        "Text" : "# assume library is in a directory under root\n",
        "Line" : 1054,
        "CharPositionInLine" : 14
      },
      "83" : {
        "Text" : "# search header file in standard locations\n",
        "Line" : 1112,
        "CharPositionInLine" : 4
      },
      "84" : {
        "Text" : "# retrieve version from header file\n",
        "Line" : 1118,
        "CharPositionInLine" : 4
      },
      "85" : {
        "Text" : "# set public version information\n",
        "Line" : 1129,
        "CharPositionInLine" : 6
      },
      "86" : {
        "Text" : "# define public variables\n",
        "Line" : 1137,
        "CharPositionInLine" : 2
      },
      "87" : {
        "Text" : "# development environment must be compatible with interpreter/compiler\n",
        "Line" : 1169,
        "CharPositionInLine" : 6
      },
      "88" : {
        "Text" : "# Restore the original find library ordering\n",
        "Line" : 1178,
        "CharPositionInLine" : 2
      },
      "89" : {
        "Text" : "# final validation\n",
        "Line" : 1218,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "# Create imported targets and helper functions\n",
        "Line" : 1230,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "# System manage shared libraries in two parts: import and runtime\n",
        "Line" : 1266,
        "CharPositionInLine" : 6
      },
      "92" : {
        "Text" : "# extend link information with dependent libraries\n",
        "Line" : 1300,
        "CharPositionInLine" : 6
      },
      "93" : {
        "Text" : "# remove elements relative to python library itself\n",
        "Line" : 1308,
        "CharPositionInLine" : 8
      },
      "94" : {
        "Text" : "#\n\n# PYTHON_ADD_LIBRARY (<name> [STATIC|SHARED|MODULE] src1 src2 ... srcN)\n\n# It is used to build modules for python.\n\n#\n",
        "Line" : 1318,
        "CharPositionInLine" : 4
      },
      "95" : {
        "Text" : "# customize library name to follow module name rules\n",
        "Line" : 1335,
        "CharPositionInLine" : 6
      },
      "96" : {
        "Text" : "# final clean-up\n",
        "Line" : 1355,
        "CharPositionInLine" : 0
      },
      "97" : {
        "Text" : "# Restore CMAKE_FIND_APPBUNDLE\n",
        "Line" : 1357,
        "CharPositionInLine" : 0
      },
      "98" : {
        "Text" : "# Restore CMAKE_FIND_FRAMEWORK\n",
        "Line" : 1364,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 99
    },
    "cmake/extras/FindPython3.cmake" : {
      "ObjectId" : "34095545803fb561c5e54f439d511b31c7af74d1",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[=======================================================================[.rst:\nFindPython3\n-----------\n\nFind Python 3 interpreter, compiler and development environment (include\ndirectories and libraries).\n\nThree components are supported:\n\n* ``Interpreter``: search for Python 3 interpreter\n* ``Compiler``: search for Python 3 compiler. Only offered by IronPython.\n* ``Development``: search for development artifacts (include directories and\n  libraries)\n* ``NumPy``: search for NumPy include directories.\n\nIf no ``COMPONENTS`` is specified, ``Interpreter`` is assumed.\n\nTo ensure consistent versions between components ``Interpreter``, ``Compiler``,\n``Development`` and ``NumPy``, specify all components at the same time::\n\n  find_package (Python3 COMPONENTS Interpreter Development)\n\nThis module looks only for version 3 of Python. This module can be used\nconcurrently with :module:`FindPython2` module to use both Python versions.\n\nThe :module:`FindPython` module can be used if Python version does not matter\nfor you.\n\n.. note::\n\n  If components ``Interpreter`` and ``Development`` are both specified, this\n  module search only for interpreter with same platform architecture as the one\n  defined by ``CMake`` configuration. This contraint does not apply if only\n  ``Interpreter`` component is specified.\n\nImported Targets\n^^^^^^^^^^^^^^^^\n\nThis module defines the following :ref:`Imported Targets <Imported Targets>`\n(when :prop_gbl:`CMAKE_ROLE` is ``PROJECT``):\n\n``Python3::Interpreter``\n  Python 3 interpreter. Target defined if component ``Interpreter`` is found.\n``Python3::Compiler``\n  Python 3 compiler. Target defined if component ``Compiler`` is found.\n``Python3::Python``\n  Python 3 library. Target defined if component ``Development`` is found.\n``Python3::NumPy``\n  NumPy library for Python 3. Target defined if component ``NumPy`` is found.\n\nResult Variables\n^^^^^^^^^^^^^^^^\n\nThis module will set the following variables in your project\n(see :ref:`Standard Variable Names <CMake Developer Standard Variable Names>`):\n\n``Python3_FOUND``\n  System has the Python 3 requested components.\n``Python3_Interpreter_FOUND``\n  System has the Python 3 interpreter.\n``Python3_EXECUTABLE``\n  Path to the Python 3 interpreter.\n``Python3_INTERPRETER_ID``\n  A short string unique to the interpreter. Possible values include:\n    * Python\n    * ActivePython\n    * Anaconda\n    * Canopy\n    * IronPython\n``Python3_STDLIB``\n  Standard platform independent installation directory.\n\n  Information returned by\n  ``distutils.sysconfig.get_python_lib(plat_specific=False,standard_lib=True)``.\n``Python3_STDARCH``\n  Standard platform dependent installation directory.\n\n  Information returned by\n  ``distutils.sysconfig.get_python_lib(plat_specific=True,standard_lib=True)``.\n``Python3_SITELIB``\n  Third-party platform independent installation directory.\n\n  Information returned by\n  ``distutils.sysconfig.get_python_lib(plat_specific=False,standard_lib=False)``.\n``Python3_SITEARCH``\n  Third-party platform dependent installation directory.\n\n  Information returned by\n  ``distutils.sysconfig.get_python_lib(plat_specific=True,standard_lib=False)``.\n``Python3_Compiler_FOUND``\n  System has the Python 3 compiler.\n``Python3_COMPILER``\n  Path to the Python 3 compiler. Only offered by IronPython.\n``Python3_COMPILER_ID``\n  A short string unique to the compiler. Possible values include:\n    * IronPython\n``Python3_Development_FOUND``\n  System has the Python 3 development artifacts.\n``Python3_INCLUDE_DIRS``\n  The Python 3 include directories.\n``Python3_LIBRARIES``\n  The Python 3 libraries.\n``Python3_LIBRARY_DIRS``\n  The Python 3 library directories.\n``Python3_RUNTIME_LIBRARY_DIRS``\n  The Python 3 runtime library directories.\n``Python3_VERSION``\n  Python 3 version.\n``Python3_VERSION_MAJOR``\n  Python 3 major version.\n``Python3_VERSION_MINOR``\n  Python 3 minor version.\n``Python3_VERSION_PATCH``\n  Python 3 patch version.\n``Python3_NumPy_FOUND``\n  System has the NumPy.\n``Python3_NumPy_INCLUDE_DIRS``\n  The NumPy include directries.\n``Python3_NumPy_VERSION``\n  The NumPy version.\n\nHints\n^^^^^\n\n``Python3_ROOT_DIR``\n  Define the root directory of a Python 3 installation.\n\n``Python3_USE_STATIC_LIBS``\n  * If not defined, search for shared libraries and static libraries in that\n    order.\n  * If set to TRUE, search **only** for static libraries.\n  * If set to FALSE, search **only** for shared libraries.\n\n``Python3_FIND_REGISTRY``\n  On Windows the ``Python3_FIND_REGISTRY`` variable determine the order\n  of preference between registry and environment variables.\n  The ``Python3_FIND_REGISTRY`` variable can be set to empty or one of the\n  following:\n\n  * ``FIRST``: Try to use registry before environment variables.\n    This is the default.\n  * ``LAST``: Try to use registry after environment variables.\n  * ``NEVER``: Never try to use registry.\n\n``CMAKE_FIND_FRAMEWORK``\n  On macOS the :variable:`CMAKE_FIND_FRAMEWORK` variable determine the order of\n  preference between Apple-style and unix-style package components.\n\n  .. note::\n\n    Value ``ONLY`` is not supported so ``FIRST`` will be used instead.\n\n``Python3_FIND_VIRTUALENV``\n  This variable defines the handling of virtual environments. It is meaningfull\n  only when a virtual environment is active (i.e. the ``activate`` script has\n  been evaluated). In this case, it takes precedence over\n  ``Python3_FIND_REGISTRY`` and ``CMAKE_FIND_FRAMEWORK`` variables.\n  The ``Python3_FIND_VIRTUALENV`` variable can be set to empty or one of the\n  following:\n\n  * ``FIRST``: The virtual environment is used before any other standard\n    paths to look-up for the interpreter. This is the default.\n  * ``ONLY``: Only the virtual environment is used to look-up for the\n    interpreter.\n  * ``STANDARD``: The virtual environment is not used to look-up for the\n    interpreter. In this case, variable ``Python3_FIND_REGISTRY`` (Windows)\n    or ``CMAKE_FIND_FRAMEWORK`` (macOS) can be set with value ``LAST`` or\n    ``NEVER`` to select preferably the interpreter from the virtual\n    environment.\n\nCommands\n^^^^^^^^\n\nThis module defines the command ``Python3_add_library`` (when\n:prop_gbl:`CMAKE_ROLE` is ``PROJECT``), which has the same semantics as\n:command:`add_library`, but takes care of Python module naming rules\n(only applied if library is of type ``MODULE``), and adds a dependency to target\n``Python3::Python``::\n\n  Python3_add_library (my_module MODULE src1.cpp)\n\nIf library type is not specified, ``MODULE`` is assumed.\n#]=======================================================================]",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/gams_setup.cmake" : {
      "ObjectId" : "7cf429907bd6935bb6f319beda4f5690a6b4fed9",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ==========================================\n\n# cmake utilities for gams library.\n\n#\n\n# See http://www.gams.com\n\n# \n\n# Usage:\n\n# include(gams_setup)\n\n#==========================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# XXX Hack -- xhub\n",
        "Line" : 14,
        "CharPositionInLine" : 48
      },
      "2" : {
        "Text" : "# XXX hack for now ...\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#    compile_with(Cplex)\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# GAMS distributes Cplex ...\n\n#  IF(NOT Cplex_LIBRARY_DIRECTORY)\n\n#    SET(Cplex_LIBRARY_DIRECTORY ${GAMS_DIR})\n\n#   ENDIF()\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "cmake/oce_setup.cmake" : {
      "ObjectId" : "e2fd0934a7cc71fc937cec98c3740fbddd8e6143",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -- OCE --\n\n# Must :\n\n# - check if oce is available on the system\n\n# Will:\n\n# - add occ to the build process\n\n# - set SICONOS_HAS_OCE var (distributed in siconosConfig.cmake)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the list of toolkits modules which are requested.\n\n# Do we really need to set this explicitely??\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Explore system to find oce and required toolkits --> Looks for OCEConfig.cmake and OCEConfigVersion.cmake which\n\n# must have been installed with oce package.\n\n# It defines the following variables (according to OCE doc)\n\n#  OCE_INCLUDE_DIRS - include directory for OCE\n\n#  OCE_LIBRARIES    - all libraries to link against (warning, may be slower than just specify the used libs)\n\n#  OCE_ALL_FOUND    - set to TRUE if all requested COMPONENTS are specified (see below), false otherwise\n\n#  OCE_MISSING_TOOLKITS - when OCE_ALL_FOUND is FALSE, contains a list of missing toolkits\n\n#  OCE_ALL_BUILT_MODULES - the list of source directories compiled (mostly useful when running swig to generate wrappers)\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# For versions of OCE older than 0.18 AND on some specific systems (namely Debian),\n\n# some toolkits are detected (through OCEConfig.cmake) but the\n\n# libraries are not available. We must not link them with the component.\n\n#if(OCE_VERSION VERSION_LESS 0.18)\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#endif()\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "cmake/serialization_vector_test.cmake" : {
      "ObjectId" : "99bd7f64db49cf579db087ead47f7b67c32444b3",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/siconos_find_common_dep.cmake" : {
      "ObjectId" : "d3df10f91af2a6a665c4cd16cd9f57083b927115",
      "LastModified" : "2019-04-16T15:45:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#================================================================\n\n#\n\n# Look for siconos dependencies, common to several components.\n\n#\n\n#================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# --- Blas Lapack ---\n\n# include(BlasLapackSetup)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# --- Numerics optional dependencies ---\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# needed for siconosconfig.h\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#  IF(UNIX AND NOT APPLE)\n\n#    SET(SICONOS_DEFAULT_LINKER_OPTIONS \"${SICONOS_DEFAULT_LINKER_OPTIONS} -Wl,-rpath-link,${GAMS_DIR}\")\n\n#  ENDIF(UNIX AND NOT APPLE)\n",
        "Line" : 32,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# --- SuiteSparse ---\n\n# Look for system-installed SuiteSparse/CSparse\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Note on the above: The CSparse data structures are referred to in\n\n# kernel, but the functions are only called from numerics, so it is\n\n# not a link-time dependency for kernel.\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# --- Other solvers ---\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# --- Sort ---\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# --- ql0001 ---\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# --- Mumps ---\n\n# if(WITH_MUMPS)\n\n#   if(MPI_FOUND)\n\n#     # Fedora allow parallel install of MPI and vanilla version of MUMPS.\n\n#     # This shouldn't hurt in any case ...\n\n#     if(NOT MUMPS_LIBRARY_DIRECTORY)\n\n#       get_filename_component(MUMPS_LIBRARY_DIRECTORY \"${MPI_LIBRARY}\" PATH)\n\n#     endif()\n\n#   endif()\n\n#   compile_with(MUMPS REQUIRED SICONOS_COMPONENTS numerics)\n\n# endif()\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# --- UMFPACK ---\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# --- SUPERLU ---\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# not ready yet\n\n#if(WITH_SUPERLU_dist)\n\n#  compile_with(SuperLU_dist REQUIRED SICONOS_COMPONENTS numerics)\n\n#endif()\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# --- Fclib ---\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# try the package stuff\n\n# need FCLib_DIR !!\n",
        "Line" : 121,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# GMP\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# --- Boost ---\n",
        "Line" : 131,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "#SET(WITH_BOOST_LOG TRUE)\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# -- VTK --\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# -- FreeCAD --\n\n# For python bindings\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# -- HDF5 --\n\n# For logging in Numerics\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#\n\n# -- Serialization --\n\n#\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# If boost is recent enough, prefer system boost serialization to\n\n# the one included in \"externals/boost_serialization\".\n",
        "Line" : 174,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# -- Python bindings --\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# trick (required with nix stuff) to force swig3 rather than swig2, if available.\n",
        "Line" : 184,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# See if help2man is available\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#\n\n# Fedora13 https://fedoraproject.org/wiki/UnderstandingDSOLinkChange\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# add -lm to linker\n",
        "Line" : 196,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# SiconosConfig.h generation and include\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# man pages\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 31
    },
    "cmake/swig_python_tools.cmake" : {
      "ObjectId" : "6ef03f30c41e33de27cb9d9e3e357ed79bce31b4",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# =======================================\n\n# Macros and functions related to swig\n\n# and python\n\n# =======================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# -----------------------------------\n\n# Build targets to generate python\n\n# docstrings from xml doxygen output.\n\n#\n\n# 1) Doxygen to create xml outputs.\n\n# 2) Doxy2swig to\n\n#    create docstrings from xml outputs.\n\n#\n\n# This macro must be called for each\n\n# component, in LibraryProjectSetup.\n\n#\n\n# -- Targets :\n\n# 1) headers --> xml using doxygen\n\n# 2) xml files --> .i using doxy2swig (one .i for each xml file)\n\n# 3) .i files --> ${COMP}-docstrings.i (one single file)\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# 1 : target ${COMP}_xml4swig\n\n# 2 and 3 : target ${COMP}_docstrings\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Note FP : the whole process must be re-executed for any change in a header file of the component\n\n# (unless we set a doxygen conf for each header, don't think we need to bother with that.)\n\n# \n\n# Doxygen steps are driven by cmake while doxy2swig and related are hidden in build_docstrings python\n\n# script.\n\n# -----------------------------------\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# -- doxygen/xml config --\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# 1 - Create COMPdoxy.config.xml in binary dir,\n\n#     from doxy.config (source dir), taking\n\n#     into account sources/headers files\n\n#     of current component COMP.\n\n#\n\n# 2 - Run doxygen to build xml documentation\n\n#\n\n# Results in CMAKE_BINARY_DIR/docs/build/xml-docstrings\n\n#\n\n# Warning : output path must be different from\n\n# output for xml used by sphinx/breathe/exhale.\n\n# -----------------------------------------------------\n",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Path where xml files will be generated by doxygen as inputs for swig.\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Set doxygen config file name\n",
        "Line" : 53,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Create doxygen configuration file in binary dir\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#  list of inputs\n",
        "Line" : 56,
        "CharPositionInLine" : 50
      },
      "10" : {
        "Text" : "# -- target to generate xml files (doxygen) from current component source files --\n\n#\n",
        "Line" : 67,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# -- command to build .i files from xml (doxygen outputs) for current component  --\n\n# Call a python function from gendoctools (build_docstrings).\n",
        "Line" : 75,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# No doxy2swig but \n\n# generate empty ${COMP}-docstrings.i file (required because of %include in swig files)\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# ----------------------------------------------------------------------\n\n# Build a swig module from .i files\n\n#\n\n# Usage :\n\n# add_siconos_swig_submodule(full_name)\n\n#\n\n# full_name must be a path to file.i, path relative to siconos\n\n# python package root.\n\n# For example, to build a swig module 'bullet' in siconos.mechanics.contact_detection,\n\n# call this macro with full_name = mechanics/contact_detection/bullet\n\n# and to build a swig module for kernel in siconos,\n\n# call this macro with full_name = ./kernel\n\n#\n\n# ----------------------------------------------------------------------\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Add component dependencies to the current submodule deps.\n",
        "Line" : 119,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# add as dependencies all the i files\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# set properties for current '.i' file\n",
        "Line" : 134,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# set output dir\n",
        "Line" : 137,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# compile flags\n",
        "Line" : 140,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# extra per-module flags if any\n",
        "Line" : 145,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# C compilation, pass SWIG_FLAGS.\n",
        "Line" : 152,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# --- build swig module ---\n",
        "Line" : 159,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# WARNING ${swig_generated_file_fullname} is overriden \n",
        "Line" : 166,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# Set path for the library generated by swig for the current module --> siconos python package path\n",
        "Line" : 170,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Set the SONAME for the SWIG module to the Siconos SONAME\n",
        "Line" : 174,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Add a post-build step that prepends utf-8 coding indicator to .py files\n",
        "Line" : 184,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Check dependencies and then link ...\n",
        "Line" : 188,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# do not link against the Python library on unix, it is useless\n",
        "Line" : 191,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# set dependency of sphinx apidoc to this target\n",
        "Line" : 197,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# Copy __init__.py file if needed\n",
        "Line" : 203,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# --- install python files and target ---\n\n# install path ...\n",
        "Line" : 212,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "#install(PROGRAMS ${CMAKE_CURRENT_BINARY_DIR}/${_name}.py DESTINATION ${DEST})\n",
        "Line" : 216,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# we should use lowercase name for python module (pep8 ...)\n",
        "Line" : 223,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "# build python bindings\n",
        "Line" : 225,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 34
    },
    "cmake/tools4tests.cmake" : {
      "ObjectId" : "2ec29a982a1823a7783ab02250eb1f04437b2a89",
      "LastModified" : "2019-04-16T15:45:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# =========================================================\n\n#\n\n# Some cmake macros to deal with tests.\n\n# =========================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# find and copy data files : *.mat, *.dat and *.xml, and etc.\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# configure test CMakeLists.txt (needed for a chdir before running test)\n",
        "Line" : 32,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Tests\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# find and copy data files : *.mat, *.dat and *.xml, and etc.\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# configure test CMakeLists.txt (needed for a chdir before running test)\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Declaration of a siconos test\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Removal of a siconos test (test fails or takes forever)\n\n# Warning: the test is still compiled\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# ====- Generate test file for 3D Fricton Contact Problem =====\n\n# Source file used to generate tests is fctest.c.in\n\n# Output file name (in build dir) is test_fc3d_SOLVERNAME_INTERNAL_SOLVERNAME_PARAM_VALUES ... .c\n\n#\n\n# Usage:\n\n#\n\n# NEW_FC_TEST(arg[0], arg[1] ...)\n\n# required args:\n\n#  0 : input data file name\n\n#  1 : solver name/id\n\n# optional args: \n\n#  2 : tolerance\n\n#  3 : max iterations number\n\n#  4 : internal solver name/id\n\n#  5 : internal solver tolerance\n\n#  6 : internal solver, max iterations number\n\n#  others:\n\n#  IPARAM idx value ...\n\n# to set iparam[idx] = value\n\n# and/or :\n\n#  DPARAM idx value ...\n\n#  INTERNAL_IPARAM idx value ...\n\n#  INTERNAL_DPARAM idx value ...\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# check input file name\n",
        "Line" : 146,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# check prefix for test (fc3d, gfc3d ...)\n",
        "Line" : 148,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "#MESSAGE(\"ARGC = \" ${ARGC} )\n",
        "Line" : 181,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "#MESSAGE(\"ARGN : \" \"${ARGN}\")\n",
        "Line" : 222,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "#MESSAGE(\"ARGN_COPY : \" \"${ARGN_COPY}\")\n",
        "Line" : 225,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "#MESSAGE(\"PARAM TYPE : \" ${PARAM_TYPE})\n",
        "Line" : 232,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "#MESSAGE(\"PARAM INDEX : \" ${PARAM_INDEX})\n",
        "Line" : 237,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "#MESSAGE(\"PARAM VAL : \" ${PARAM_VAL})\n",
        "Line" : 241,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "#MESSAGE(\"IPARAM_IDX : \" \"${IPARAM_IDX}\")\n\n#MESSAGE(\"IPARAM_VAL : \" \"${IPARAM_VAL}\")\n",
        "Line" : 267,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "#MESSAGE(\"LISTCOUNT : \" ${LISTCOUNT} )\n",
        "Line" : 272,
        "CharPositionInLine" : 6
      },
      "19" : {
        "Text" : "#MESSAGE( \"IPARAM_VAL_STR_UNDER :\"  \"${IPARAM_VAL_STR_UNDER}\")\n",
        "Line" : 278,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "#MESSAGE( \"IPARAM_VAL_STR_UNDER :\"  \"${IPARAM_VAL_STR_UNDER}\")\n",
        "Line" : 287,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "#MESSAGE( \"test name   --> \" ${TEST_NAME})\n",
        "Line" : 341,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Set name of the file used to generate tests (c)source files.\n",
        "Line" : 355,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# check input file name\n",
        "Line" : 365,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# check prefix for test (fc3d, gfc3d ...)\n",
        "Line" : 367,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Set name of the file used to generate tests (c)source files.\n",
        "Line" : 385,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Set name of the file used to generate tests (c)source files.\n",
        "Line" : 397,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# Set name of the file used to generate tests (c)source files.\n",
        "Line" : 407,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# Set name of the file used to generate tests (c)source files.\n",
        "Line" : 416,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# Set name of the file used to generate tests (c)source files.\n",
        "Line" : 426,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# Set name of the file used to generate tests (c)source files.\n",
        "Line" : 435,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# Set name of the file used to generate tests (c)source files.\n",
        "Line" : 444,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# Set name of the file used to generate tests (c)source files.\n",
        "Line" : 454,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# check input file name\n",
        "Line" : 509,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# Set name of the file used to generate tests (c)source files.\n",
        "Line" : 527,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# check input file name\n",
        "Line" : 547,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# Set name of the file used to generate tests (c)source files.\n",
        "Line" : 565,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# check input file name\n",
        "Line" : 673,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "# Set name of the file used to generate tests (c)source files.\n",
        "Line" : 691,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "# add subdirs (i.e. CMakeLists.txt generated for tests) to the build\n",
        "Line" : 706,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Build plugins required for python tests\n",
        "Line" : 712,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Note FP : temporary fix, to deal with PRIVATE deps of some components.\n\n# This will be reviewed later.\n",
        "Line" : 725,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "# ----------------------------------------\n\n# Prepare python tests for the current\n\n# component\n\n# Usage:\n\n#   build_python_tests(path_to_tests)\n\n#\n\n# path_to_tests is relative to the current source dir.\n\n# Most of the time, path_to_tests = 'tests'.\n\n# For instance, in mechanics, tests are called in CMakeLists.txt\n\n# in swig, current source dir is thus source_dir/mechanics/swig\n\n# and source_dir/mechanics/swig/tests contains all the python files for tests.\n\n#\n\n# This routine copy the directory of tests to binary dir to allow 'py.test' run in the build.\n\n# \n\n# binary dir will then look like :\n\n# wrap/siconos\n\n# wrap/siconos/mechanics\n\n# wrap/siconos/mechanics/tests\n\n#\n\n# and running py.tests in wrap dir will end up with a run of\n\n# all mechanics tests.\n",
        "Line" : 731,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# copy data files\n\n#file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/${_D}/data ${SICONOS_SWIG_ROOT_DIR}/${_D}/data)\n",
        "Line" : 754,
        "CharPositionInLine" : 4
      },
      "44" : {
        "Text" : "# build plugins, if any\n\n# Note : all built libraries are saved in SICONOS_SWIG_ROOT_DIR/plugins\n",
        "Line" : 757,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "# copy test dir to binary dir (inside siconos package)\n\n# ---> allows py.test run in binary dir\n",
        "Line" : 766,
        "CharPositionInLine" : 4
      },
      "46" : {
        "Text" : "# Each file is copy to siconos/tests.\n\n# Maybe we can create a 'tests' dir for each subpackage?\n\n# --> Easier to deal with plugins and data if only one package\n",
        "Line" : 792,
        "CharPositionInLine" : 1
      },
      "47" : {
        "Text" : "# In certain cases, ex. no rpath, or running tests with plugins,\n\n# libraries cannot be found at link or test time, so we add the\n\n# LD_LIBRARY_PATH variable.\n",
        "Line" : 806,
        "CharPositionInLine" : 2
      },
      "48" : {
        "Text" : "# Otherwise, still need the path to current component dir for tests\n\n# that load plugins.\n",
        "Line" : 815,
        "CharPositionInLine" : 4
      },
      "49" : {
        "Text" : "# Declaration of a siconos test based on python bindings\n",
        "Line" : 840,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 50
    },
    "config.h.cmake" : {
      "ObjectId" : "7f6323500b0bdfee23b4ca19747f01569ec64643",
      "LastModified" : "2019-04-16T15:45:09Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "// Is cblas available? ",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "// Where does cblas comes from? ",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "// Which Lapack? ",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "// Which functions are defined in lapack? ",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "// Some definitions required for boost numeric_bindings",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "// Gams stuff",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "// Which version of C++ was used to compile siconos, needed for swig",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "// are int 64 bits longs",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "// use to force 32 bits int when creating numpy array\n// Useful to support old scipy version (< 0.14.0)",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "// on opensuse 42.3 Stdxx.h, failure with cxx11 and using std::isnan",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "control/CMakeLists.txt" : {
      "ObjectId" : "e973932d925615645db07cd34881202f26f34981",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#================================================================\n\n# cmake utilities to build control component\n\n#================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Name used for the target to be built\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# --- Search component dependencies ---\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# --- Sources and headers ---\n\n# source directories for numerics\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Unstable sources. Will be included only\n\n# if WITH_${COMPONENT}_UNSTABLE is true.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# List of directories of headers not to be installed\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ---- Final setup for the library ----\n\n# --- set linked libraries and linker language ---\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# if no RPATH, then linking does not work for tests without specifying externals\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# --- tests ---\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "control/control_tests.cmake" : {
      "ObjectId" : "7ccffdb98baf54c97d2e0cdaac8900a4103cb0c0",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We don't use COMPILE_WITH since we don't want to link cppunit with the\n\n# kernel library\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# the main test driver\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Simulation tests\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "control/swig/CMakeLists.txt" : {
      "ObjectId" : "02449d6c095fdb6b630e5d1981bb22b31c6bf3d5",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#================================================================\n\n# cmake utilities to build python-bindings for control component\n\n#================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# wrap - Set extra dependencies\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# List of modules to be built in the python bindings\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "docs/CMakeLists.txt" : {
      "ObjectId" : "812d2318b7566c4061d40db2865ba65c59d5d5da",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================\n\n# Prepare  config to generate siconos documentation :\n\n#\n\n# - automatic doxygen documentation, from source code\n\n# - sphinx documentation for manuals\n\n# \n\n# ============================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Devel option : generate pure doxygen doc (no sphinx), extracting all and with graphs.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# -- Doc config --\n\n# Name and create build path for documentation\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# -- Gendoctools install --\n\n# gendoctools is installed in binary dir as a python package\n\n# used to generate docstrings, rst files and so on.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# configure_file(${CMAKE_CURRENT_SOURCE_DIR}/replace_py_escape.sh ${CMAKE_BINARY_DIR}/share/replace_py_escape.sh COPYONLY)\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#  ====== doxygen documentation setup ======\n\n# This setup is required if one at least of\n\n# the following is needed:\n\n# - doxygen warnings (see WITH_DOXYGEN_WARNINGS)\n\n# - python docstrings from doxygen (xml) (see WITH_DOXY2SWIG)\n\n# - doxygen documentation generated from source files (see WITH_DOCUMENTATION)\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Search doxygen and set config\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Output path for doxygen documentation\n",
        "Line" : 45,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# --- Config files and their options. --\n\n# --> a lot for doxygen warnings (from doxy_warnings.config.in)\n\n# --> one for documentation (html and xml to sphinx) (from doxy.config.in)\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# == set configuration file for doxygen warnings ==\n\n#  - Results in binary_dir/doxygen_warnings\n\n#  - input config from config/doxy_warnings.config\n\n#  - only xml output.\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# All the configure process will be done for each component\n\n# thanks to 'include(doxygen_warnings)'. See LibraryProjectSetup.\n",
        "Line" : 64,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# A target to filter out doxygen warnings : remove empty files and concatenate the others.\n\n# call python function from gendoctools (filter_doxygen_warnings_files).\n",
        "Line" : 67,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# No warnings if siconos has not been compiled. Should we remove this dep ? \n",
        "Line" : 74,
        "CharPositionInLine" : 32
      },
      "13" : {
        "Text" : "#  ====== Create a Target to generate documentation ======\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# --- Search dependencies required to build documentation ---\n",
        "Line" : 83,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# This python package can not be found using standard ways such as conda or pip,\n\n# so we force download and install.\n",
        "Line" : 92,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Sphinx theme for documentation\n",
        "Line" : 99,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# --- copy/conf sphinx files into build directory ---\n",
        "Line" : 102,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# main page\n",
        "Line" : 104,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# siconos biblio\n",
        "Line" : 109,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# List and copy all rst files from source dir to binary dir\n",
        "Line" : 114,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "#get_filename_component(filename ${filepath} NAME)\n",
        "Line" : 118,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# css\n",
        "Line" : 125,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# !! conf.py.in must be copied later, after doxygen setup !!\n\n# Done during finalize_doc call.\n",
        "Line" : 130,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# --- Build a target for sphinx ---\n\n# --> use make html or make latex ... to build documentation.\n",
        "Line" : 133,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# html output\n",
        "Line" : 139,
        "CharPositionInLine" : 12
      },
      "26" : {
        "Text" : "# path to doctree files\n",
        "Line" : 140,
        "CharPositionInLine" : 22
      },
      "27" : {
        "Text" : "# path to rst source\n",
        "Line" : 141,
        "CharPositionInLine" : 40
      },
      "28" : {
        "Text" : "# - Target to copy figures required by sphinx from source to binary dir -\n\n#  make copy-sphinx-figures\n",
        "Line" : 144,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# -- Target to generate rst files from sources (C/C++/python) --\n\n#  1. creates rst files in a breathe-ready format from xml outputs of doxygen run on C/C++ headers\n\n#  2. creates rst files from 'autodoc' outputs, docstrings, or others python doc. things.\n",
        "Line" : 150,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# -- To build html doc : make html --\n",
        "Line" : 159,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# post command to make html : filter sphinx warnings to a log file.\n",
        "Line" : 166,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# -- To build latex doc : make latex -- \n",
        "Line" : 176,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# latex output\n",
        "Line" : 178,
        "CharPositionInLine" : 13
      },
      "34" : {
        "Text" : "# path to doctree files\n",
        "Line" : 179,
        "CharPositionInLine" : 22
      },
      "35" : {
        "Text" : "# path to rst source\n",
        "Line" : 180,
        "CharPositionInLine" : 40
      },
      "CommentCount" : 36
    },
    "docs/cmake/FindSphinxModule.cmake" : {
      "ObjectId" : "c6958900d4dbbc0aa3d676d0b21787d4936ca101",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Search for a particular sphinx module.\n\n#\n\n# Usage\n\n# -----\n\n# find_sphinx_module(parent module_name REQUIRED)\n\n#\n\n# parent == sphinx or sphinxcontrib\n\n# module_name == name of the required module.\n\n#\n\n# Example:\n\n#\n\n# find_sphinx_module(sphinxcontrib bibtex)\n\n#\n\n# will try in python :\n\n# from sphinxcontrib import bibtex\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "docs/cmake/doc_tools.cmake" : {
      "ObjectId" : "fe6e76386c5d6a8a1262cd8b08c71d55d6ed1ae7",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# =======================================\n\n# Macros and functions related to doxygen\n\n# \n\n# =======================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ---------------------------------------------\n\n# For a given component (numerics, kernel ...)\n\n# get the list of directories containing\n\n# sources to be used to generate doxygen doc.\n\n# Result is saved in CACHE variable DOXY_INPUTS\n\n# This variables is unique and stands for all\n\n# components!\n\n# ---------------------------------------------\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Scan all dirs of current component and append\n\n# them to DOXY_INPUTS/\n\n# Do not include dirs matching 'test' and dirs listed\n\n# in <COMP>_EXCLUDE_DOXY.\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# convert cmake list to a single string\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Save doxy_inputs to cache.\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# --------------------------------------------------\n\n# Prepare config and targets for\n\n# documentaition (xml-->rst-->sphinx)\n\n#\n\n# For a given component (numerics, kernel ...)\n\n# generate rst files (for sphinx/breathe)\n\n# from xml outputs (doxygen).\n\n# \n\n# ---------------------------------------------\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# --- Target : create rst files from xml outputs (doxygen) ---\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# run : make doxy2rst\n\n# depends : xml4rst\n\n#\n\n# Call python script to create rst files that can be parsed by sphinx/breathe\n\n# to create documentation.\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# output path, required to generate conf.py (breathe part)\n\n# This is the place where xml files created by doxygen\n\n# will be generated, for a later use by sphinx.\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Doxygen conf for xml outputs for breathe. It might be different\n\n# from the one used for xml outputs for swig.\n",
        "Line" : 61,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Set config file name\n",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Get list of inputs\n",
        "Line" : 74,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Create a new target used to create doxygen outputs (xml).\n\n# Required for documentation and/or for serialization.\n",
        "Line" : 79,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Path where rst files will be generated.\n",
        "Line" : 87,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# Create a new target used to create sphinx inputs (rst) from doxygen outputs (xml).\n\n# It calls a python function defined in gendoctools (create_breathe_files)\n",
        "Line" : 90,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "# --------------------------------------\n\n# Call this macro when configuration\n\n# process is done for all components.\n\n# \n\n# It will :\n\n#  - create doxygen configs\n\n# (for breathe, docstrings and so on)\n\n#  - create targets related to\n\n#   documentation\n\n#    --> make doxygen-html to generate html doxygen doc from sources\n\n#    --> make doxypng2sphinx to convert doxygen diagrams (class ...) to rst files\n\n# --------------------------------------\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# --- Target : html documentation from doxygen ---\n\n# run : make doxygen-html\n\n#  verbose mode : always off, since warnings\n\n# may be obtained with 'doxygen_warnings' target.\n\n# == set configuration file for doxygen doc from sources ==\n\n#  - Results in binary_dir/docs/\n\n#  - input config from config/doxy.config\n\n#  - only html output\n\n# 'inputs' are updated by each component, during call to update_doxygen_inputs macro.\n\n# Doc will be built when 'make doxygen' is called.\n\n# config file name\n",
        "Line" : 119,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# The generation of the config and the creation of the target will be done later,\n\n# after the update of inputs by each component, with macro 'finalize_doc'\n",
        "Line" : 131,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# OFF  by default. Activate to extract all.\n",
        "Line" : 138,
        "CharPositionInLine" : 26
      },
      "19" : {
        "Text" : "# Build list of all dirs taken into accound by doxygen to build\n\n# doc, from each component own list.\n",
        "Line" : 141,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# A new target to create  html files (doxygen) from code sources.\n\n# One target for all components.\n",
        "Line" : 149,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# --- Target : create class diagrams from doxygen outputs, for sphinx. ---\n\n# run : make doxypng2sphinx\n\n# depends : doxygen-html\n\n# Call a python function defined in gendoctools (find_doxygen_diagrams)\n",
        "Line" : 158,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# --- Generates conf.py, to describe sphinx setup ---\n\n# !! Should be call after doxygen setup\n\n# to have a correct DOXYGEN_INPUT value.\n",
        "Line" : 178,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# A target to postprocess latex forms in docstrings into\n\n# something readable by sphinx.\n\n# Calls a python function defined in gendoctools (replace_latex)\n",
        "Line" : 194,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Path where rst files (docstrings --> rst) will be written.\n",
        "Line" : 204,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# python modules for previous components are required to apidoc (e.g. kernel.py for control).\n\n# So we get this last comp and add a dependency.\n",
        "Line" : 206,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# A new target to convert python/swig docstrings (swig outputs) into rst files (sphinx inputs)\n\n# Calls a python function defined in gendoctools (module_docstrings2rst)\n\n# --> make <comp>_autodoc\n",
        "Line" : 212,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# Create dependency between autodoc target and siconos python modules.\n",
        "Line" : 222,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# rst_api needs autodoc.\n",
        "Line" : 227,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 29
    },
    "docs/cmake/doxygen_warnings.cmake" : {
      "ObjectId" : "fb6ec2ce00b9f58af2a3aa287eaaf7eb95a8a284",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ===========================================================================\n\n# Enable doxygen warnings (using a scan of headers of the current component)\n\n#\n\n# If WITH_COMPONENT_DOXYGEN_WARNINGS is ON,\n\n# during build (i.e. make component), \n\n# generates a list of warnings produced by doxygen\n\n# for each header of the current component\n\n#\n\n# A config file is generated for each header, from ${DOXY_WARNINGS_CONFIG} file\n\n# set docs/CMakeLists.txt\n\n#\n\n# Use -DWITH_DOXYGEN_WARNINGS_INFILE=ON to save outputs in files.\n\n# Default = ON.\n\n# ===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#COMMAND ${CMAKE_COMMAND} -E touch ${CMAKE_BINARY_DIR}/doxygen_warnings/${_FWE1}.warnings\n",
        "Line" : 39,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 2
    },
    "externals/CMakeLists.txt" : {
      "ObjectId" : "c7afdddcb1b585a610f3a290ea7e6726ff9d7890",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#================================================================\n\n# cmake utilities to build external component\n\n#================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Name used for the target to be built\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Define a Fortran interface file (FCMangle.hpp)\n\n#FortranCInterface_VERIFY(QUIET)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# --- Sources and headers ---\n\n# source directories for externals\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Unstable sources. Will be included only\n\n# if WITH_${COMPONENT}_UNSTABLE is true.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# List of directories of headers not to be installed\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# List of specific headers not to be installed\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# List of directories for which no doxygen doc will be generated\n\n# By default all directories matching \"test\" are excluded.\n\n# No docs for externals.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# .\n",
        "Line" : 78,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# ---- Final setup for the library ----\n\n# --- set linked libraries and linker language ---\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# but CXX may be needed with MlcpSimplex\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# needed by GAMS\n",
        "Line" : 103,
        "CharPositionInLine" : 58
      },
      "12" : {
        "Text" : "# Windows stuff\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# --- specific install ----\n\n#install(FILES ${CMAKE_CURRENT_BINARY_DIR}/FCMangle.h DESTINATION include/${PROJECT_NAME})\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# This files is not installed as a program, even though it is one.\n\n# Remove the comment if you know how it should be installed --xhub\n\n#  configure_file(io/SimpleGui.py ${SICONOS_SWIG_ROOT_DIR}/io/SimpleGui.py @ONLY) \n",
        "Line" : 167,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# --- tests ---\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# We don't want warnings from externals libraries.\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "externals/externals_tests.cmake" : {
      "ObjectId" : "fded93d7ee93ad9f8bdf3773245e779a8ae8f778",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# wrapper are not needed\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "externals/numeric_bindings/libs/numeric/bindings/tools/templates/test/CMakeLists.txt" : {
      "ObjectId" : "f16e54142c17f4248a8ab8b8c50258d710246245",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2009 by Rutger ter Borg\n\n#\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# THIS FILE IS AUTOMATICALLY GENERATED\n\n# PLEASE DO NOT EDIT!\n\n#\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "externals/sort/Makefile" : {
      "ObjectId" : "8c5bd8bb7d3a61b124e88aa7bf86b72ea5e4f1f3",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (c) 2010-2014 Christopher Swenson.\n\n# Copyright (c) 2012 Google Inc. All Rights Reserved.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "externals/swig/CMakeLists.txt" : {
      "ObjectId" : "379eca30ee5ce1f5ef7933e97eb9e75423933d02",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#================================================================\n\n# cmake utilities to build python-bindings for externals component\n\n#================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# wrap - Set extra dependencies\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# List of modules to be built in the python bindings\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#swig_module_setup(${COMPONENT}_PYTHON_MODULES)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#build_python_tests()",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "io/CMakeLists.txt" : {
      "ObjectId" : "aa9e7b264389db0c3910921044b88c7ee4445f71",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#================================================================\n\n# cmake utilities to build IO component\n\n#================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Name used for the target to be built\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# --- Search component dependencies ---\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# cmake 2.8.12.2 (ubuntu 14.04) need this\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Right now boost::serialization does some nasty things... so we have to\n\n# disable some undefined behavior checks ...\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Note FP : we should move this to CXXCompilerSetup?\n\n# Answer xhub : no this is local, because boost::serialization is hackish\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# --- Sources and headers ---\n\n# source directories for numerics\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Unstable sources. Will be included only\n\n# if WITH_${COMPONENT}_UNSTABLE is true.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# List of directories of headers not to be installed\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# --- Serialization setup ---\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# REMOVE_item not on cmake 2.8 ...\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# append local headers directories to GENERATED_INCLUDES)\n",
        "Line" : 78,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# wrap - Set extra dependencies\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# List of modules to be built in the python bindings\n",
        "Line" : 115,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "#\n",
        "Line" : 117,
        "CharPositionInLine" : 7
      },
      "15" : {
        "Text" : "# ---- Final setup for the library ----\n\n# --- set linked libraries and linker language ---\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# if no RPATH, then linking does not work for tests without specifying externals\n",
        "Line" : 126,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# remove debug & optimized inside LINK_LIBRARIES...\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# add dependencies for header generation\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# --- specific install ----\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# --- tests ---\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "io/io_tests.cmake" : {
      "ObjectId" : "4d0ee6b8e0005835b42dcbcd5987ee0fb8f8cc09",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We don't use COMPILE_WITH since we don't want to link cppunit with the\n\n# kernel library\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# the main test driver\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "io/swig/CMakeLists.txt" : {
      "ObjectId" : "77e59966f7314a615b050ff012690a113b3838ec",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#================================================================\n\n# cmake utilities to build python-bindings for io component\n\n#================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# wrap - Set extra dependencies\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# List of modules to be built in the python bindings\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# automatic manpages using help2man\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# all other components must be built first so that tools don't fail to run\n",
        "Line" : 60,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# swig modules must be built before vview and vexport can generate manpages\n",
        "Line" : 64,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# set PYTHONPATH to swig dir, which contains \"siconos\", so\n\n# that \"import siconos.*\" works\n",
        "Line" : 74,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# right now the only tests we have require serialization\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "kernel/CMakeLists.txt" : {
      "ObjectId" : "ff9a5cb985deeeb3c856d6ee2540661a79875356",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#================================================================\n\n# cmake utilities to build kernel component\n\n#================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Name used for the target to be built\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# --- Search component dependencies ---\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# --- Sources and headers ---\n\n# source directories for numerics\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Unstable sources. Will be included only\n\n# if WITH_${COMPONENT}_UNSTABLE is true.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ---- Final setup for the library ----\n\n# --- set linked libraries and linker language ---\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# CMAKE_DL_LIBS for dlopen or equivalent (used for plugins)\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Some directories to exclude from xml to swig process\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# if included, it breaks swig process for mechanics\n",
        "Line" : 47,
        "CharPositionInLine" : 25
      },
      "9" : {
        "Text" : "# --- tests ---\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "kernel/kernel_tests.cmake" : {
      "ObjectId" : "6c6dc7cf6bb17cb7d35c1b6b7949e5674fd817ab",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We don't use COMPILE_WITH since we don't want to link cppunit with the\n\n# kernel library\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Plugin library for tests\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# MODULE rather than SHARED for Macosx compatibility. \n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# the main test driver\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# For Windows\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Siconos Algebra\n",
        "Line" : 28,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# Siconos Memory\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# modeling tools \n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#FirstOrderNonLinearDSTest.cpp FirstOrderLinearDSTest.cpp \n\n#LagrangianDSTest.cpp LagrangianLinearTIDSTest.cpp TestMain.cpp)\n",
        "Line" : 60,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Simulation tests\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 10
    },
    "kernel/swig/CMakeLists.txt" : {
      "ObjectId" : "7325bef12c9560b2414427a29cd946b38184bbd4",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#================================================================\n\n# cmake utilities to build python-bindings for kernel component\n\n#================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# wrap - Set extra dependencies\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# List of modules to be built in the python bindings\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "mechanics/CMakeLists.txt" : {
      "ObjectId" : "006647226df7a533cbc6e63d8dc024c37805d420",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#================================================================\n\n# cmake utilities to build mechanics component\n\n#================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This component has two optional sub-parts:\n\n# - collision/bullet which requires bullet physics software  (and thus -DWITH_BULLET=ON cmake option)\n\n# - occ which requires open-cascade community edition (and thus -DWITH_OCE=ON cmake option)\n\n# Those parts are automatically built and installed if bullet and/or oce are available and properly detected by cmake.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Name used for the target to be built\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# --- Sources and headers for 'native' mechanics part ---\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# --- Optional parts ---\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# -- Bullet --\n\n# Must :\n\n# - check if bullet is available on the system\n\n# Will:\n\n# - add collision/bullet to the build process\n\n# - set SICONOS_HAS_BULLET var (distributed in siconosConfig.cmake)\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# --> set BULLET_INCLUDE_DIRS, BULLET_FOUND, BULLET_LIBRARIES.\n\n# --> Accept : BULLET_ROOT (as install path or Windows build path)\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# If a custom bullet was set, provide it for user programs.\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Append mechanics bullet component sources to sources list\n",
        "Line" : 46,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# # Add bullet headers to search path\n\n# # 'private' add limited to current target would be better.\n\n# # But those headers are missing during swig process. Todo : find a proper\n\n# # way to deal with this.\n\n# # target_include_directories(${COMPONENT} PRIVATE ${BULLET_INCLUDE_DIRS})\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# # Add bullet to component list of dep\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# -- OCE --\n\n# Must :\n\n# - check if oce is available on the system\n\n# Will:\n\n# - add occ to the build process\n\n# - set SICONOS_HAS_OCE var (distributed in siconosConfig.cmake)\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Source dir for 'oce' component\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Add oce headers to search path\n\n# 'private' add limited to current target would be better.\n\n# But those headers are missing during swig process. Todo : find a proper\n\n# way to deal with this.\n\n# target_include_directories(${COMPONENT} PRIVATE ${OCE_INCLUDE_DIRS})\n",
        "Line" : 71,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Add oce libs to components links\n",
        "Line" : 77,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Unstable sources. Will be included only\n\n# if WITH_${COMPONENT}_UNSTABLE is true.\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# List of directories of headers not to be installed\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# ---- Final setup for the library ----\n\n# --- set linked libraries and linker language ---\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# if no RPATH, then linking does not work for tests without specifying externals\n\n# for n2qn1\n",
        "Line" : 100,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# add bullet dep to siconos-mechanics interface (headers, libs and so on)\n\n#target_link_libraries(${COMPONENT} PUBLIC ${BULLET_LIBRARIES})\n",
        "Line" : 111,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Update compile flags for component\n",
        "Line" : 114,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# Do we need this as public or private? Check if mechanics io needs this option?\n",
        "Line" : 116,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# --- tests ---\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "mechanics/mechanics_tests.cmake" : {
      "ObjectId" : "dba78aa782ba798ba742475470acca3f9115e4d7",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We don't use COMPILE_WITH since we don't want to link cppunit with the\n\n# kernel library\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# the main test driver\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "mechanics/swig/CMakeLists.txt" : {
      "ObjectId" : "83b40c337978a14979bcaad0796a4f671e763b77",
      "LastModified" : "2019-04-15T14:34:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#================================================================\n\n# cmake utilities to build python-bindings for mechanics component\n\n#================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# wrap - Set extra dependencies\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# DEFS\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# List of modules to be built in the python bindings\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# list(APPEND ${COMPONENT}_SWIG_DEFS \"-DWITH_BULLET\") # Do we really need this??\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# ignore all warnings generated by Bullet headers since we can't\n\n# do anything about them and it clutters the output\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "mechanisms/CMakeLists.txt" : {
      "ObjectId" : "8a61b324431cf7a03f131bb3aeac4c917050ec4e",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#================================================================\n\n# cmake utilities to build mechanisms component\n\n#================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Name used for the target to be built\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# --- Search component dependencies ---\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add oce headers to search path\n\n# 'private' add limited to current target would be better.\n\n# But those headers are missing during swig process. Todo : find a proper\n\n# way to deal with this.\n\n# target_include_directories(${COMPONENT} PRIVATE ${OCE_INCLUDE_DIRS})\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add oce libs to components links\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# --- Sources and headers ---\n\n# source directories for numerics\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Unstable sources. Will be included only\n\n# if WITH_${COMPONENT}_UNSTABLE is true.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# List of directories of headers not to be installed\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# ---- Final setup for the library ----\n\n# --- set linked libraries and linker language ---\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# --- tests ---\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "mechanisms/mechanisms_tests.cmake" : {
      "ObjectId" : "151cd2ca347d45ab7f745c3328ed1e3216d915e5",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# No tests for this component.\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "mechanisms/swig/CMakeLists.txt" : {
      "ObjectId" : "e5c2f1212e0f25cb9ccff53ca6eef20de7fae798",
      "LastModified" : "2019-04-10T16:11:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#==================================================================\n\n# cmake utilities to build python-bindings for mechanisms component\n\n#==================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# wrap - Set extra dependencies\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# DEFS\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# List of modules to be built in the python bindings\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# we need siconos-mechanism for build and install tree with different 'PYTHONPATH' for each of them.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# -- prepare siconos_mechanisms tests --\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# @EXAMPLE_PATH@ is required in siconos_mechanisms script\n",
        "Line" : 30,
        "CharPositionInLine" : 50
      },
      "7" : {
        "Text" : "# Each file is copy to siconos/tests.\n\n# Maybe we can create a 'tests' dir for each subpackage?\n\n# --> Easier to deal with plugins and data if only one package\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# data (CAD and body) taken from slider crank example in mechanisms component\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# -- install the script --\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# @EXAMPLE_PATH@ is required in siconos_mechanisms script\n",
        "Line" : 50,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 11
    },
    "numerics/CMakeLists.txt" : {
      "ObjectId" : "ff35003963dccd9a80451e8c45b51f85dec07a87",
      "LastModified" : "2019-04-16T15:45:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#================================================================\n\n# cmake utilities to build numerics component\n\n#================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Name used for the target to be built\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# --- Numerics optional dependencies ---\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# --- Sources and headers ---\n\n# source directories for numerics\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Static verifications (ACSL)\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Unstable sources. Will be included only\n\n# if WITH_${COMPONENT}_UNSTABLE is true.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# List of directories of headers not to be installed\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# List of specific headers not to be installed\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# List of directories for which no doxygen doc will be generated\n\n# By default all directories matching \"test\" are excluded.\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Windows stuff\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ---- Final setup for the library ----\n\n# --- set linked libraries and linker language ---\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# but CXX may be needed with MlcpSimplex\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# CMAKE_DL_LIBS needed for dlopen or equivalent\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# mumps and mpi\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Note FP : PUBLIC for the moment since it's required by tests.\n\n# This will be improved later.\n",
        "Line" : 90,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "#   target_include_directories(numerics PRIVATE ${MPI_Fortran_INCLUDE_DIRS})\n\n#   target_link_libraries(numerics PRIVATE ${MPI_Fortran_LIBRARIES})\n",
        "Line" : 93,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# --- tests ---\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Note FP : temporary fix, to deal with PRIVATE deps of some components.\n\n# This will be reviewed later.\n",
        "Line" : 106,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 18
    },
    "numerics/numerics_tests.cmake" : {
      "ObjectId" : "0ff51468c1a7372d1147b793dd06ff32e0b2e605",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# wrapper are not needed\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#  tests for NumericsMatrix\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# MUMPS interface tests\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Specific tests for SBM matrices\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Specific tests for sparse matrices\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# MACRO(SET_LCP_TEST_AS_FAILED DATASET_LCP_DIAG FAILING_ALGO)\n\n#   FOREACH(_DS ${DATASET_LCP_DIAG})\n\n#     FOREACH(_SOLVER ${FAILING_ALGO})\n\n# \tSET(test-LCP_${_SOLVER}-lcp_${_DS}_PROPERTIES WILL_FAIL TRUE)\n\n#     ENDFOREACH()\n\n#   ENDFOREACH()\n\n# ENDMACRO()\n",
        "Line" : 61,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# SET(DATASET_LCP \"lcp_mmc.dat;lcp_deudeu.dat;lcp_trivial.dat;lcp_ortiz.dat;lcp_enum_fails.dat\")\n\n# LIST(APPEND DATASET_LCP\n\n#   \"lcp_exp_murty.dat;lcp_exp_murty2.dat;lcp_CPS_1.dat;lcp_CPS_2.dat;lcp_CPS_3.dat;lcp_CPS_4.dat;lcp_CPS_4bis.dat;lcp_CPS_5.dat\")\n\n# SET(DATASET_BLOCK_LCP \"lcp_deudeu_block.dat\")\n\n# # PSOR is not working :(\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# SET(SICONOS_LCP_SOLVERS\n\n#   \"ENUM;LEMKE;CPG;PGS;RPGS;LATIN;LATIN_W;AVI_CAOFERRIS;NEWTONMIN;NEWTON_FBLSA;NEWTON_MINFBLSA;BARD;MURTY;PIVOT;PIVOT_LUMOD;PATHSEARCH;CONVEXQP_PG\")\n\n# if(HAS_FORTRAN AND HAVE_QL0001)\n\n#   LIST(APPEND SICONOS_LCP_SOLVERS \"QP;NSQP;\")\n\n# endif()\n\n# IF(HAVE_PATHFERRIS)\n\n#   LIST(APPEND SICONOS_LCP_SOLVERS \"PATH\")\n\n# ENDIF()\n\n# IF(HAVE_GAMS_C_API)\n\n#   LIST(APPEND SICONOS_LCP_SOLVERS \"GAMS\")\n\n# ENDIF(HAVE_GAMS_C_API)\n\n# FOREACH(_DS ${DATASET_LCP})\n\n#   FOREACH(_SOLVER ${SICONOS_LCP_SOLVERS})\n\n#     NEW_LCP_TEST(SICONOS_LCP_${_SOLVER} ${_DS})\n\n#   ENDFOREACH()\n\n# ENDFOREACH()\n\n# FOREACH(_DS ${DATASET_BLOCK_LCP})\n\n#   FOREACH(_SOLVER ${SICONOS_LCP_SOLVERS})\n\n#     NEW_LCP_TEST(SICONOS_LCP_${_SOLVER} ${_DS} 1)\n\n#   ENDFOREACH()\n\n# ENDFOREACH()\n",
        "Line" : 75,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# # CPG does not work everywhere\n\n# SET(test-LCP_CPG-lcp_exp_murty_PROPERTIES WILL_FAIL TRUE)\n\n# SET(test-LCP_CPG-lcp_CPS_2_PROPERTIES WILL_FAIL TRUE)\n\n# SET(test-LCP_CPG-lcp_CPS_4_PROPERTIES WILL_FAIL TRUE)\n\n# SET(test-LCP_CPG-lcp_CPS_4bis_PROPERTIES WILL_FAIL TRUE)\n\n# SET(test-LCP_CPG-lcp_enum_fails_PROPERTIES WILL_FAIL TRUE)\n",
        "Line" : 97,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# # problem with Cholesky here\n\n# SET_LCP_TEST_AS_FAILED(\"exp_murty;exp_murty2\" \"LATIN;LATIN_W\")\n\n# RM_TEST2(SICONOS_LCP_LATIN \"lcp_ortiz.dat\")\n\n# RM_TEST2(SICONOS_LCP_LATIN_W \"lcp_ortiz.dat\")\n",
        "Line" : 104,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# # QP reformulation does not always work when the matrix is not symmetric\n\n# # Use NSQP\n\n# SET_LCP_TEST_AS_FAILED(\"exp_murty;exp_murty2;ortiz;enum_fails;CPS_2;CPS_3;CPS_4;CPS_4bis\" \"QP\")\n\n# SET_LCP_TEST_AS_FAILED(\"exp_murty;exp_murty2;\" \"CONVEXQP_PG\")\n",
        "Line" : 109,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# # NEWTONMIN has no backup descent dir -> problem in DGESV -> GAME OVER !\n\n# SET(test-LCP_NEWTONMIN-lcp_CPS_1_PROPERTIES WILL_FAIL TRUE)\n\n# SET(test-LCP_NEWTONMIN-lcp_CPS_2_PROPERTIES WILL_FAIL TRUE)\n\n# SET(test-LCP_NEWTONMIN-lcp_CPS_5_PROPERTIES WILL_FAIL TRUE)\n",
        "Line" : 114,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# # NaN showing up in DGESV -> NEWTONMIN looks really buggy\n\n# SET(test-LCP_NEWTONMIN-lcp_CPS_4_PROPERTIES WILL_FAIL TRUE)\n\n# SET(test-LCP_NEWTONMIN-lcp_CPS_4bis_PROPERTIES WILL_FAIL TRUE)\n\n# SET(test-LCP_NEWTONMIN-lcp_enum_fails_PROPERTIES WILL_FAIL TRUE)\n",
        "Line" : 121,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# IF(NOT WITH_UNSTABLE_TEST)\n\n#   RM_TEST2(SICONOS_LCP_NEWTONMIN \"lcp_mmc.dat\")\n\n# ENDIF()\n",
        "Line" : 126,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# # those test cannot be solved with an algorithm that requires non-zero\n\n# # diagonal elements, that is PGS, BARD, MURTY, LATIN and LATIN_W\n\n# SET_LCP_TEST_AS_FAILED(\"enum_fails;CPS_2;CPS_3;CPS_4;CPS_4bis\" \"PGS;BARD;MURTY;LATIN;LATIN_W;CONVEXQP_PG\")\n\n# # suprinsingly this works ...\n\n# SET(test-LCP_MURTY-lcp_enum_fails_PROPERTIES WILL_FAIL FALSE)\n",
        "Line" : 131,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# # those test cannot be solved with Lemke-based solvers (CPS_3 is for Lemke-Howson)\n\n# SET_LCP_TEST_AS_FAILED(\"CPS_3\" \"LEMKE;AVI_CAOFERRIS;PIVOT;PIVOT_LUMOD;PATHSEARCH\")\n",
        "Line" : 137,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# # PSD matrices and those algo does not seem to be a good idea\n\n# SET_LCP_TEST_AS_FAILED(\"CPS_2;CPS_3\" \"NSQP;RPGS\")\n",
        "Line" : 140,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# # lcp_mmc is of size 26, way too much for enum\n\n# RM_TEST2(SICONOS_LCP_ENUM \"lcp_mmc.dat\")\n\n# # this LCP was put here to show that enum does not work on every LCP, likely\n\n# # due to numerical problems, but works on some system ...\n\n# RM_TEST2(SICONOS_LCP_ENUM \"lcp_enum_fails.dat\")\n",
        "Line" : 143,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# # TODO backup path when GDESV fails\n\n# SET(test-LCP_NEWTON_FBLSA-lcp_CPS_1_PROPERTIES WILL_FAIL TRUE)\n",
        "Line" : 149,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# special tests\n\n# NEW_LCP_TEST(SICONOS_LCP_ENUM lcp_Pang_isolated_sol.dat)\n\n# NEW_LCP_TEST(SICONOS_LCP_ENUM lcp_Pang_isolated_sol_perturbed.dat)\n\n# SET(test-LCP_ENUM-lcp_Pang_isolated_sol_perturbed_PROPERTIES WILL_FAIL TRUE)\n\n# NEW_LCP_TEST(SICONOS_LCP_ENUM lcp_inf_sol_perturbed.dat)\n",
        "Line" : 152,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# TODO refinment of solution\n\n# NEW_LCP_TEST(SICONOS_LCP_LEMKE lcp_tobenna.dat)\n\n# NEW_LCP_TEST(SICONOS_LCP_PIVOT lcp_tobenna.dat)\n\n#  NEW_LCP_TEST(SICONOS_LCP_PIVOT_LUMOD lcp_tobenna.dat)\n\n# LUMOD is not ready for prime time now\n\n# SET(test-LCP_PIVOT_LUMOD-lcp_mmc_PROPERTIES WILL_FAIL TRUE)\n\n# IF(DEV_MODE)\n\n#   SET(test-LCP_PIVOT-lcp_tobenna_PROPERTIES WILL_FAIL FALSE)\n\n#   #   SET(test-LCP_PIVOT_LUMOD-lcp_tobenna_PROPERTIES WILL_FAIL FALSE)\n\n# ENDIF(DEV_MODE)\n",
        "Line" : 158,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# IF(HAVE_PATHFERRIS)\n\n#   NEW_LCP_TEST(SICONOS_LCP_PATH lcp_tobenna.dat)\n\n# ENDIF(HAVE_PATHFERRIS)\n\n# IF(HAVE_GAMS_C_API)\n\n#   NEW_LCP_TEST(SICONOS_LCP_GAMS lcp_tobenna.dat)\n\n# ENDIF(HAVE_GAMS_C_API)\n",
        "Line" : 169,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# Oliverie\n",
        "Line" : 230,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# NCP\n",
        "Line" : 237,
        "CharPositionInLine" : 13
      },
      "24" : {
        "Text" : "#===========================================\n\n# 3D Friction Contact tests\n\n#===========================================\n\n# (see FrictionContact/test/README for short details)\n\n# --> Must be uptodated!\n\n# Set name of input file used to generate c-files for tests\n",
        "Line" : 240,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "#  foreach(_DAT ${FC3D_DATA_SET})\n\n#    #MESSAGE(STATUS \"Setting test for ${_DAT}\")\n\n#    # --- GAMS Solvers ---\n\n#    if(HAVE_GAMS_C_API)\n\n#      NEW_FC_3D_TEST(${_DAT} SICONOS_FRICTION_3D_GAMS_PATH)\n\n#      NEW_FC_3D_TEST(${_DAT} SICONOS_FRICTION_3D_GAMS_LCP_PATH)\n\n#      if(HAVE_GAMS_PATHVI)\n\n#  \tNEW_FC_3D_TEST(${_DAT} SICONOS_FRICTION_3D_GAMS_PATHVI)\n\n#  \tNEW_FC_3D_TEST(${_DAT} SICONOS_FRICTION_3D_GAMS_LCP_PATHVI)\n\n#      endif()\n\n#    endif()\n\n#  endforeach()\n",
        "Line" : 278,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "#  IF(WITH_UMFPACK)\n\n#    SET(fc3d__ADMM_Tol_1e-5_Max_10000_inTol_0_inMax_0_IPARAM_SICONOS_FRICTION_3D_ADMM_RHO_STRATEGY_CONSTANT_Confeti-ex13-Fc3D-SBM_PROPERTIES WILL_FAIL TRUE)\n\n#    SET(fc3d__ADMM_Tol_1e-5_Max_10000_inTol_0_inMax_0_IPARAM_SICONOS_FRICTION_3D_ADMM_FORCED_ASYMMETRY_Confeti-ex13-Fc3D-SBM_PROPERTIES WILL_FAIL TRUE)\n\n#    SET(fc3d__NSN_AC_Tol_5e-2_Max_1000_inTol_0_inMax_0_KaplasTower-i1061-4.hdf5_PROPERTIES WILL_FAIL TRUE)\n\n#  ENDIF()\n",
        "Line" : 292,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# alpha_min needs to be equal to zero for convergence\n",
        "Line" : 305,
        "CharPositionInLine" : 47
      },
      "28" : {
        "Text" : "# alpha_min needs to be equal to zero for convergence\n",
        "Line" : 308,
        "CharPositionInLine" : 47
      },
      "29" : {
        "Text" : "# --- LMGC driver ---\n",
        "Line" : 311,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# # --- Quartic ---\n\n# NEW_FC_3D_TEST(FrictionContact3D_1c.dat SICONOS_FRICTION_3D_ONECONTACT_QUARTIC)\n\n# NEW_FC_3D_TEST(FrictionContact3D_RR_1c.dat SICONOS_FRICTION_3D_ONECONTACT_QUARTIC)\n",
        "Line" : 323,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# ---------------------------------------------------\n\n# --- Global friction contact problem formulation ---\n\n# ---------------------------------------------------\n",
        "Line" : 327,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# pass with mumps only\n",
        "Line" : 339,
        "CharPositionInLine" : 17
      },
      "33" : {
        "Text" : "# Alart Curnier functions\n",
        "Line" : 341,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "#\n",
        "Line" : 344,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# NEW_FC_3D_TEST_HDF5(Capsules-i125-1213.hdf5 SICONOS_FRICTION_3D_NSGS)\n\n# NEW_FC_3D_TEST_HDF5(Capsules-i125-1213.hdf5 SICONOS_FRICTION_3D_ADMM 1e-10 0\n\n#   0 0 0\n\n#   IPARAM SICONOS_FRICTION_3D_ADMM_IPARAM_RHO_STRATEGY  SICONOS_FRICTION_3D_ADMM_RHO_STRATEGY_RESIDUAL_BALANCING)\n",
        "Line" : 351,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# NEW_FC_3D_TEST_HDF5(LMGC_100_PR_PerioBox-i00361-60-03000.hdf5 SICONOS_FRICTION_3D_ADMM 1e-08 100000\n\n#   0 0 0\n\n#   IPARAM SICONOS_FRICTION_3D_ADMM_IPARAM_RHO_STRATEGY  SICONOS_FRICTION_3D_ADMM_RHO_STRATEGY_RESIDUAL_BALANCING)\n",
        "Line" : 356,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "# NEW_FC_3D_TEST_HDF5(LMGC_100_PR_PerioBox-i00361-60-03000.hdf5 SICONOS_FRICTION_3D_ADMM 1e-08 100000\n\n#   0 0 0\n\n#   IPARAM SICONOS_FRICTION_3D_ADMM_IPARAM_RHO_STRATEGY  SICONOS_FRICTION_3D_ADMM_RHO_STRATEGY_RESIDUAL_BALANCING\n\n#   IPARAM SICONOS_FRICTION_3D_ADMM_IPARAM_SPARSE_STORAGE  SICONOS_FRICTION_3D_ADMM_FORCED_SPARSE_STORAGE)\n",
        "Line" : 360,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# ---------------------------------------------------\n\n# --- Rolling friction contact problem formulation ---\n\n# ---------------------------------------------------\n",
        "Line" : 372,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "#===========================================\n\n# 2D Friction Contact tests\n\n#===========================================\n\n## test 2D dense on two differents files\n",
        "Line" : 379,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "#BEGIN_TEST(src/GenericMechanical/test)\n\n#NEW_TEST(GMP_FAILED GenericMechanical_test1.c)\n\n#END_TEST()\n",
        "Line" : 394,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# === Variationnal inequalities tests ===\n",
        "Line" : 399,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "# === QP tests ===\n",
        "Line" : 423,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "# timeout on all machines, see\n\n# http://cdash-bipop.inrialpes.fr/testSummary.php?project=1&name=SOCLCP_test4&date=2015-09-03\n\n# Feel free to remove this once it is fixed --xhub\n\n#NEW_TEST(SOCLCP_test4 soclcp_test4.c)\n\n#NEW_TEST(SOCLCP_test5 soclcp_test5.c)\n",
        "Line" : 446,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 44
    },
    "numerics/swig/CMakeLists.txt" : {
      "ObjectId" : "6f168295b8793a244994a20e1431cb6243ce5ff7",
      "LastModified" : "2019-04-16T15:45:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#================================================================\n\n# cmake utilities to build python-bindings for numerics component\n\n#================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# wrap - Set extra dependencies\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# List of modules to be built in the python bindings\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# numerics is not written in C++\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#set(CMAKE_BUILD_WITH_INSTALL_RPATH TRUE)\n\n# the RPATH to be used when installing, but only if it's not a system directory\n\n#list(FIND CMAKE_PLATFORM_IMPLICIT_LINK_DIRECTORIES \"${CMAKE_INSTALL_PREFIX}/lib\" isSystemDir)\n\n#if(\"${isSystemDir}\" STREQUAL \"-1\")\n\n#  set(CMAKE_INSTALL_RPATH \"${CMAKE_INSTALL_PREFIX}/lib\")\n\n#endif(\"${isSystemDir}\" STREQUAL \"-1\")\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# -- Scipy --\n\n# It is required for sparse matrices in numerics\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# for sparse\n",
        "Line" : 50,
        "CharPositionInLine" : 42
      },
      "7" : {
        "Text" : "# -- mpi4py -- \n",
        "Line" : 52,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "wrap/CMakeLists.txt" : {
      "ObjectId" : "39459ac2ecd7dc4c70fcbd3ac4d326d72f5d9612",
      "LastModified" : "2019-04-16T15:45:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ============================================================\n\n# Prepare swig config to generate python bindings for siconos\n\n# ============================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Name of the generated Python package\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# --------------- Python install setup ---------------\n\n# Directory of all config files for python bindings.\n\n# Set path for siconos-python installation\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#  ----------- swig -----------\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# -- Swig flags --\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# -dirvtable      - Generate a pseudo virtual table for directors for faster dispatch\n\n# - without \"dirprot\", swig wrap public methods and only the \n\n# protected methods needed to the interface to compile.\n\n# - with \"dirprot\" swig will attemp to wrap all the public and protected methods at once.\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# -- Swig files --\n\n# i.e. .i files, common to all modules and submodules.\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# -- Output dir --\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# -- include dir --\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# ------------- Tests -------------\n",
        "Line" : 63,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# if a (DY)LD_LIBRARY_PATH is needed, export it\n",
        "Line" : 73,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# put quotes around the paths for export\n",
        "Line" : 78,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# -- Runner for tests --\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# todo if we need to add some 'global' tests for siconos (not component dependent)\n\n# create a wrap/swig/tests dir and ...\n\n#build_python_tests()\n",
        "Line" : 104,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# ====== Generates python files required for build/install process ======\n",
        "Line" : 109,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# setup.py --> CMAKE_BINARY_DIR\n",
        "Line" : 117,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# The file __init__.py will be generated from __init__.py.in.\n",
        "Line" : 123,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Some python files, that do not depend on siconos\n\n# but may be useful ...\n",
        "Line" : 132,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# ====== Create (and setup) build target ======\n",
        "Line" : 140,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# ====== Create a Target to clean sources (remove .pyc files) and build dir ======\n",
        "Line" : 155,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# ====== conf/copy file for docstrings generation from doxygen ====\n",
        "Line" : 163,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 21
    }
  },
  "FileTypes" : {
    "CMAKE" : 134,
    "CMAKESOURCE" : 1,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 6410
}