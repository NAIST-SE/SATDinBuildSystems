{
  "Repository" : "24030",
  "Revision" : "HEAD",
  "ObjectId" : "b084b13b58bb7323529ad60d814c98a5487c2fc2",
  "CommitTime" : "2019-04-16T19:00:08Z",
  "Files" : {
    "Applications/Testing/CMakeLists.txt" : {
      "ObjectId" : "cdeb442a1d5a6c92d4148a2dc9efc27924ad0b86",
      "LastModified" : "2011-11-17T00:11:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Applications/Testing/Cpp/CMakeLists.txt" : {
      "ObjectId" : "e882e78dde0c4bd8501b171f30dd9f86b44c2c7a",
      "LastModified" : "2014-05-27T16:02:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Query / Retrieve Testing\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# create a dcm query/retrieve service config file that points to the build dir\n\n#\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#\n\n# find the helper executables\n\n#\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#\n\n# Add Tests\n\n#\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "Applications/ctkCommandLineModuleExplorer/CMakeLists.txt" : {
      "ObjectId" : "f367983b970426f4fa72c794e284f551e8c4c752",
      "LastModified" : "2014-05-27T16:02:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CTK/CMake/ctkMacroBuildApp.cmake for details\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Headers that should run through moc\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# UI files\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Resources\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Target libraries - See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# The following macro will read the target libraries from the file 'target_libraries.cmake'\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Testing\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#   add_subdirectory(Testing)\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Applications/ctkCommandLineModuleExplorer/target_libraries.cmake" : {
      "ObjectId" : "922ce658100a938911bb29dc5eefdb1ef76faaea",
      "LastModified" : "2014-05-27T16:02:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# \n\n# This file should list the libraries required to build the current CTK application.\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Applications/ctkDICOM/CMakeLists.txt" : {
      "ObjectId" : "af1e779657262d929a3476d94c5d827f45e483e3",
      "LastModified" : "2014-05-27T16:02:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CTK/CMake/ctkMacroBuildApp.cmake for details\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Source files\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Headers that should run through moc\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# UI files\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Resources\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Target libraries - See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# The following macro will read the target libraries from the file 'target_libraries.cmake'\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Testing\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Applications/ctkDICOM/Testing/CMakeLists.txt" : {
      "ObjectId" : "cdeb442a1d5a6c92d4148a2dc9efc27924ad0b86",
      "LastModified" : "2011-11-17T00:11:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Applications/ctkDICOM/Testing/Cpp/CMakeLists.txt" : {
      "ObjectId" : "ab6ca51b31b98481386f82eb9e8b602ec7c9cb93",
      "LastModified" : "2014-05-27T16:02:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Target libraries - See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# The following macro will read the target libraries from the file '<KIT_SOURCE_DIR>/target_libraries.cmake'\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Add Tests\n\n#\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Applications/ctkDICOM/target_libraries.cmake" : {
      "ObjectId" : "e1e2ebe494db7e5cc34efc21fd29b0088f970d34",
      "LastModified" : "2011-11-17T00:11:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# \n\n# This file should list the libraries required to build the current CTK application.\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Applications/ctkDICOM2/CMakeLists.txt" : {
      "ObjectId" : "cd929aed6f66fabe0a24558ce7bae5b990534a54",
      "LastModified" : "2014-05-27T16:02:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CTK/CMake/ctkMacroBuildApp.cmake for details\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Source files\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Headers that should run through moc\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# UI files\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Resources\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Target libraries - See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# The following macro will read the target libraries from the file 'target_libraries.cmake'\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Testing\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Applications/ctkDICOM2/Testing/CMakeLists.txt" : {
      "ObjectId" : "cdeb442a1d5a6c92d4148a2dc9efc27924ad0b86",
      "LastModified" : "2014-05-27T16:02:06Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Applications/ctkDICOM2/Testing/Cpp/CMakeLists.txt" : {
      "ObjectId" : "1c9791e3e01bb85c797b835a13c056880249cb95",
      "LastModified" : "2014-05-27T16:02:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Target libraries - See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# The following macro will read the target libraries from the file '<KIT_SOURCE_DIR>/target_libraries.cmake'\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Add Tests\n\n#\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Applications/ctkDICOM2/target_libraries.cmake" : {
      "ObjectId" : "e1e2ebe494db7e5cc34efc21fd29b0088f970d34",
      "LastModified" : "2014-05-27T16:02:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# \n\n# This file should list the libraries required to build the current CTK application.\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Applications/ctkDICOMDemoSCU/CMakeLists.txt" : {
      "ObjectId" : "c7549559ff3561154993217e667e35b9e37e1199",
      "LastModified" : "2014-05-27T16:02:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CTK/CMake/ctkMacroBuildLib.cmake for details\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Source files\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Headers that should run through moc\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# UI files\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Resources\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Target libraries - See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# The following macro will read the target libraries from the file 'target_libraries.cmake'\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Plugins\n\n#add_subdirectory(Plugins)\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Testing\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "Applications/ctkDICOMDemoSCU/Testing/CMakeLists.txt" : {
      "ObjectId" : "cdeb442a1d5a6c92d4148a2dc9efc27924ad0b86",
      "LastModified" : "2014-05-27T16:02:06Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Applications/ctkDICOMDemoSCU/Testing/Cpp/CMakeLists.txt" : {
      "ObjectId" : "9ea0e1bfeac1884cb184a41b3447edf2dd4cc120",
      "LastModified" : "2014-05-27T16:02:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Target libraries - See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# The following macro will read the target libraries from the file '<KIT_SOURCE_DIR>/target_libraries.cmake'\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Add Tests\n\n#\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Applications/ctkDICOMDemoSCU/Testing/Cpp/target_libraries.cmake" : {
      "ObjectId" : "f4f73d672b55151d4cf1bd1693ff00df70e59798",
      "LastModified" : "2014-05-27T16:02:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# \n\n# This file should list the libraries required to build the current CTK application.\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Query / Retrieve Testing\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Applications/ctkDICOMDemoSCU/target_libraries.cmake" : {
      "ObjectId" : "c482c34a4d70b525d774bf5f4939d9f98ea69725",
      "LastModified" : "2014-05-27T16:02:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# \n\n# This file should list the libraries required to build the current CTK application.\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Applications/ctkDICOMHost/CMakeLists.txt" : {
      "ObjectId" : "e857a04f334171f2ecf1a68f9121753783341a15",
      "LastModified" : "2014-05-27T16:02:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CTK/CMake/ctkMacroBuildApp.cmake for details\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Source files\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Headers that should run through moc\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# UI files\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Resources\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Target libraries - See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# The following macro will read the target libraries from the file 'target_libraries.cmake'\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Testing\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Applications/ctkDICOMHost/Testing/CMakeLists.txt" : {
      "ObjectId" : "c533815b78c13f98178a696e03778002f6be3d54",
      "LastModified" : "2014-05-27T16:02:06Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Applications/ctkDICOMHost/Testing/Cpp/CMakeLists.txt" : {
      "ObjectId" : "b96a1b844f9c232d959974eb08f3004d79468ed3",
      "LastModified" : "2014-05-27T16:02:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Target libraries - See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# The following macro will read the target libraries from the file 'target_libraries.cmake'\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Add Tests\n\n#\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Applications/ctkDICOMHost/Testing/Cpp/target_libraries.cmake" : {
      "ObjectId" : "45c89f6734b66c8d06114976c521cee2700705b8",
      "LastModified" : "2014-05-27T16:02:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# \n\n# This file should list the libraries required to build the current CTK application.\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Query / Retrieve Testing\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Applications/ctkDICOMHost/target_libraries.cmake" : {
      "ObjectId" : "ee37b61baf78351d5da25a90f967cf74e356148e",
      "LastModified" : "2014-05-27T16:02:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# \n\n# This file should list the libraries required to build the current CTK application.\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Applications/ctkDICOMIndexer/CMakeLists.txt" : {
      "ObjectId" : "fd37d243c2843d759074025b38f02b2cee00b28a",
      "LastModified" : "2014-05-27T16:02:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CTK/CMake/ctkMacroBuildApp.cmake for details\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Source files\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Headers that should run through moc\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# UI files\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Resources\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Target libraries - See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# The following macro will read the target libraries from the file 'target_libraries.cmake'\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Testing\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Applications/ctkDICOMIndexer/Testing/CMakeLists.txt" : {
      "ObjectId" : "cdeb442a1d5a6c92d4148a2dc9efc27924ad0b86",
      "LastModified" : "2014-05-27T16:02:06Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Applications/ctkDICOMIndexer/Testing/Cpp/CMakeLists.txt" : {
      "ObjectId" : "afd6a43b60ce08fbbe003772aa1927bfbc24225c",
      "LastModified" : "2014-05-27T16:02:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Target libraries - See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# The following macro will read the target libraries from the file '<KIT_SOURCE_DIR>/target_libraries.cmake'\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Add Tests\n\n#\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Applications/ctkDICOMIndexer/target_libraries.cmake" : {
      "ObjectId" : "c482c34a4d70b525d774bf5f4939d9f98ea69725",
      "LastModified" : "2014-05-27T16:02:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# \n\n# This file should list the libraries required to build the current CTK application.\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Applications/ctkDICOMObjectViewer/CMakeLists.txt" : {
      "ObjectId" : "f005417c09bc221ea8884881548953301b1f5d24",
      "LastModified" : "2014-05-27T16:02:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CTK/CMake/ctkMacroBuildApp.cmake for details\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Headers that should run through moc\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# UI files\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Resources\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Target libraries - See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# The following macro will read the target libraries from the file 'target_libraries.cmake'\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Testing\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#   add_subdirectory(Testing)\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Applications/ctkDICOMObjectViewer/target_libraries.cmake" : {
      "ObjectId" : "5244b2474f174f8ad32bb590186d3ee61ed10e68",
      "LastModified" : "2014-05-27T16:02:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# \n\n# This file should list the libraries required to build the current CTK application.\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Applications/ctkDICOMQuery/CMakeLists.txt" : {
      "ObjectId" : "b1f283a65c32905487ddd356a4360f3de309517a",
      "LastModified" : "2014-05-27T16:02:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CTK/CMake/ctkMacroBuildApp.cmake for details\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Source files\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Headers that should run through moc\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# UI files\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Resources\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Target libraries - See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# The following macro will read the target libraries from the file 'target_libraries.cmake'\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Testing\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#add_subdirectory(Testing)\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "Applications/ctkDICOMQuery/target_libraries.cmake" : {
      "ObjectId" : "c482c34a4d70b525d774bf5f4939d9f98ea69725",
      "LastModified" : "2014-05-27T16:02:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# \n\n# This file should list the libraries required to build the current CTK application.\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Applications/ctkDICOMQueryRetrieve/CMakeLists.txt" : {
      "ObjectId" : "c38c1b3b2cc5a9a559230824cc05fdb9bbb24afa",
      "LastModified" : "2014-05-27T16:02:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CTK/CMake/ctkMacroBuildApp.cmake for details\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Source files\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Headers that should run through moc\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# UI files\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Resources\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Target libraries - See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# The following macro will read the target libraries from the file 'target_libraries.cmake'\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Testing\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#add_subdirectory(Testing)\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "Applications/ctkDICOMQueryRetrieve/Testing/CMakeLists.txt" : {
      "ObjectId" : "cdeb442a1d5a6c92d4148a2dc9efc27924ad0b86",
      "LastModified" : "2014-05-27T16:02:06Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Applications/ctkDICOMQueryRetrieve/Testing/Cpp/CMakeLists.txt" : {
      "ObjectId" : "77eb78d3cbccb551ba537bc9fcf08ef854b3c87a",
      "LastModified" : "2014-05-27T16:02:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Target libraries - See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# The following macro will read the target libraries from the file '<KIT_SOURCE_DIR>/target_libraries.cmake'\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Add Tests\n\n#\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Applications/ctkDICOMQueryRetrieve/target_libraries.cmake" : {
      "ObjectId" : "e1e2ebe494db7e5cc34efc21fd29b0088f970d34",
      "LastModified" : "2014-05-27T16:02:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# \n\n# This file should list the libraries required to build the current CTK application.\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Applications/ctkDICOMRetrieve/CMakeLists.txt" : {
      "ObjectId" : "d114d99941bb6c80929df7d0778da397aff7d428",
      "LastModified" : "2014-05-27T16:02:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CTK/CMake/ctkMacroBuildApp.cmake for details\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Source files\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Headers that should run through moc\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# UI files\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Resources\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Target libraries - See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# The following macro will read the target libraries from the file 'target_libraries.cmake'\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Testing\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#add_subdirectory(Testing)\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "Applications/ctkDICOMRetrieve/target_libraries.cmake" : {
      "ObjectId" : "c482c34a4d70b525d774bf5f4939d9f98ea69725",
      "LastModified" : "2014-05-27T16:02:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# \n\n# This file should list the libraries required to build the current CTK application.\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Applications/ctkEventBusDemo/CMakeLists.txt" : {
      "ObjectId" : "0acc8ca76d31ddaa85fddecda54067ec3e95e644",
      "LastModified" : "2014-05-27T16:02:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CTK/CMake/ctkMacroBuildApp.cmake for details\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Headers that should run through moc\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# UI files\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Resources\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Target libraries - See CMake/ctkMacroGetTargetLibraries.cmake\n\n# The following macro will read the target libraries from the file 'target_libraries.cmake'\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Fix this after having discussed include dependencies with Jc\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Testing\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#   add_subdirectory(Testing)\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "Applications/ctkEventBusDemo/target_libraries.cmake" : {
      "ObjectId" : "01864ad33d8c88e096e7e8280bea1c1a91c90b19",
      "LastModified" : "2014-05-27T16:02:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkMacroGetTargetLibraries.cmake\n\n# \n\n# This file should list the libraries required to build the current CTK application.\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Applications/ctkExampleHost/CMakeLists.txt" : {
      "ObjectId" : "335ae2bb9081fb5b9790ef2f2321c60945460dcb",
      "LastModified" : "2014-05-27T16:02:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CTK/CMake/ctkMacroBuildApp.cmake for details\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Headers that should run through moc\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# UI files\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Resources\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Target libraries - See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# The following macro will read the target libraries from the file 'target_libraries.cmake'\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Testing\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#   add_subdirectory(Testing)\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Applications/ctkExampleHost/target_libraries.cmake" : {
      "ObjectId" : "d526fd83be8c02f7dd85a390c4f86ce50e968c08",
      "LastModified" : "2014-05-27T16:02:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# \n\n# This file should list the libraries required to build the current CTK application.\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Applications/ctkExampleHostedApp/CMakeLists.txt" : {
      "ObjectId" : "c61ef8dcf8b2a2abe01e68800e2a0e69e67b4f69",
      "LastModified" : "2014-05-27T16:02:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CTK/CMake/ctkMacroBuildApp.cmake for details\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Headers that should run through moc\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# UI files\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Resources\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Target libraries - See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# The following macro will read the target libraries from the file 'target_libraries.cmake'\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Testing\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#   add_subdirectory(Testing)\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Applications/ctkExampleHostedApp/target_libraries.cmake" : {
      "ObjectId" : "05ca9fa09c9c99db9f26d0264cae6a7deca53549",
      "LastModified" : "2014-05-27T16:02:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# \n\n# This file should list the libraries required to build the current CTK application.\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Applications/ctkPluginBrowser/CMakeLists.txt" : {
      "ObjectId" : "ecbc67d2d40606072a1a747463bce8684e3c7bda",
      "LastModified" : "2014-05-27T16:02:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CTK/CMake/ctkMacroBuildApp.cmake for details\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Headers that should run through moc\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# UI files\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Resources\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Target libraries - See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# The following macro will read the target libraries from the file 'target_libraries.cmake'\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Testing\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#   add_subdirectory(Testing)\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Applications/ctkPluginBrowser/target_libraries.cmake" : {
      "ObjectId" : "faa3ca2b6c25ea8dc6bfe2923c5825f85facd31a",
      "LastModified" : "2014-05-27T16:02:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# \n\n# This file should list the libraries required to build the current CTK application.\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Applications/ctkPluginGenerator/CMakeLists.txt" : {
      "ObjectId" : "16877166af5db13088783b875a80b656231f0c0f",
      "LastModified" : "2014-05-27T16:02:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CTK/CMake/ctkMacroBuildApp.cmake for details\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Headers that should run through moc\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# UI files\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Resources\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Target libraries - See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# The following macro will read the target libraries from the file 'target_libraries.cmake'\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Testing\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#   add_subdirectory(Testing)\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Applications/ctkPluginGenerator/target_libraries.cmake" : {
      "ObjectId" : "1861a8c5d84bf937b275654ac3312a02effb539e",
      "LastModified" : "2014-05-27T16:02:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# \n\n# This file should list the libraries required to build the current CTK application.\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Applications/ctkQtTesting/CMakeLists.txt" : {
      "ObjectId" : "9649e7d0e4cdb6a730f3de1b3af4d5b170f5c98c",
      "LastModified" : "2014-05-27T16:02:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CTK/CMake/ctkMacroBuildApp.cmake for details\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Headers that should run through moc\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# UI files\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Resources\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Target libraries - See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# The following macro will read the target libraries from the file 'target_libraries.cmake'\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Testing\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#   add_subdirectory(Testing)\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Applications/ctkQtTesting/target_libraries.cmake" : {
      "ObjectId" : "2b41197b876419caaf7da2f31338cb3c06bcacb9",
      "LastModified" : "2014-05-27T16:02:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# \n\n# This file should list the libraries required to build the current CTK application.\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Applications/ctkSimplePythonShell/CMakeLists.txt" : {
      "ObjectId" : "1df1d32a025a8a6ff56e0d46a2a721f3e8d6bb0c",
      "LastModified" : "2014-05-27T16:02:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CTK/CMake/ctkMacroBuildApp.cmake for details\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Headers that should run through moc\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# UI files\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Resources\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Target libraries - See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# The following macro will read the target libraries from the file 'target_libraries.cmake'\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Configure file will be configured using CTK_WRAP_PYTHONQT_LIGHT and\n\n# CTK_BUILD_SHARED_LIBS variables\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The following block generate the code required to initialize the wrapper\n\n# when CTK is statically built.\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Update list of target libraries with the list of available PythonQt libraries\n\n# and set variables holding list of pythonqt initialization method\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# To avoid the complex process of resolving the dependencies associated with each\n\n# external project required by each decorator. For now, let's just include the decorator\n\n# associated with CTKCore and CTKWidgets.\n",
        "Line" : 75,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Testing\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "Applications/ctkSimplePythonShell/Python/CMakeLists.txt" : {
      "ObjectId" : "41ee4d163212d8c16fa2cb14cd4b8be4dd60398a",
      "LastModified" : "2014-05-27T16:02:06Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Applications/ctkSimplePythonShell/Testing/CMakeLists.txt" : {
      "ObjectId" : "655007a0aab9e5682f7fddb0917076fc3269b129",
      "LastModified" : "2014-05-27T16:02:06Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Applications/ctkSimplePythonShell/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "c306fad8da48c4656ea58758c383a92381c31cba",
      "LastModified" : "2014-05-27T16:02:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Since QTimer is part of QtCore and is used in both 'ctkWidgetsTest.py' and 'derivedQWidgetTest.py',\n\n# these two tests should be included only if CTK_LIB_Scripting/Python/Core_PYTHONQT_WRAP_QTCORE is ON\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Applications/ctkSimplePythonShell/target_libraries.cmake" : {
      "ObjectId" : "47a78fe368b46bb7f84e2eeba6f00a044ffb9193",
      "LastModified" : "2014-05-27T16:02:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# \n\n# This file should list the libraries required to build the current CTK application.\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Applications/ctkXnatTreeBrowser/CMakeLists.txt" : {
      "ObjectId" : "b3931655cb0a4a0aaa17c7fb90c5e88fd13c2340",
      "LastModified" : "2014-05-27T16:02:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CTK/CMake/ctkMacroBuildApp.cmake for details\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Headers that should run through moc\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# UI files\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Resources\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Target libraries - See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# The following macro will read the target libraries from the file 'target_libraries.cmake'\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Applications/ctkXnatTreeBrowser/target_libraries.cmake" : {
      "ObjectId" : "70cfdd5d8b6aff61c01a525686a00baaa8be0c81",
      "LastModified" : "2014-05-27T16:02:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n#\n\n# This file should list the libraries required to build the current CTK application.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/CMakeFindDependencyMacro.cmake" : {
      "ObjectId" : "2da2cf0231c22386082746835d6b071f46d8b206",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# CMakeFindDependencyMacro\n\n# -------------------------\n\n#\n\n# ::\n\n#\n\n#     find_dependency(<dep> [<version> [EXACT]])\n\n#\n\n#\n\n# ``find_dependency()`` wraps a :command:`find_package` call for a package\n\n# dependency. It is designed to be used in a <package>Config.cmake file, and it\n\n# forwards the correct parameters for EXACT, QUIET and REQUIRED which were\n\n# passed to the original :command:`find_package` call.  It also sets an\n\n# informative diagnostic message if the dependency could not be found.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2013 Stephen Kelly <steveire@gmail.com>\n\n#\n\n# CMake - Cross Platform Makefile Generator\n\n# Copyright 2000-2014 Kitware, Inc.\n\n# Copyright 2000-2011 Insight Software Consortium\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n#\n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n#=============================================================================\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMake/LastConfigureStep/CMakeLists.txt" : {
      "ObjectId" : "51a2241c80651f4f21f96dfdfbb811bea30cab3e",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################################\n\n#\n\n#  Library:   CTK\n\n#\n\n#  Copyright (c) Kitware Inc.\n\n#\n\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n\n#  you may not use this file except in compliance with the License.\n\n#  You may obtain a copy of the License at\n\n#\n\n#      http://www.apache.org/licenses/LICENSE-2.0.txt\n\n#\n\n#  Unless required by applicable law or agreed to in writing, software\n\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n#  See the License for the specific language governing permissions and\n\n#  limitations under the License.\n\n#\n\n###########################################################################\n\n###########################################################################\n\n#\n\n#  Program:   Visualization Toolkit\n\n#  Module:    Utilities/LastConfigureStep/CMakeLists.txt\n\n#\n\n#  Copyright (c) Ken Martin, Will Schroeder, Bill Lorensen\n\n#\n\n#  All rights reserved.\n\n#  See Copyright.txt or http://www.kitware.com/Copyright.htm for details.\n\n#\n\n#     This software is distributed WITHOUT ANY WARRANTY; without even\n\n#     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n\n#     PURPOSE.  See the above copyright notice for more information.\n\n#\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The commands in this directory are intended to be executed at\n\n# the end of the whole configuration process, as a \"last step\".\n\n# This directory is typically the last SUBDIRS in the main CMakeLists.txt.\n\n# It enable the above commands to use variables that might have been configured\n\n# in previous SUBDIRS. This is especially important when it comes to\n\n# the CONFIGURE_FILE command, since in IMMEDIATE mode that command will\n\n# use the current values of CMake variables instead of waiting until the\n\n# end of CMakeLists processing, i.e. instead of waiting until some variables\n\n# are configured in SUBDIRS.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Loop over the list of CTK* targets and retrieve the associated dependencies\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Loop over dependencies and append to CTK_EXTERNAL_LIBRARIES\n\n# target dependency which are neither CTK or static library\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Sanity checks - link_type shouldn't be empty\n",
        "Line" : 65,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Make sure ctk_target_dependency is not a CTK library\n",
        "Line" : 69,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Make sure ctk_target_dependency is not a static library\n",
        "Line" : 72,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Create the CTKConfig.cmake file containing the CTK configuration.\n\n# Since it might generate configuration file depending\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "CMake/LastConfigureStep/CTKGenerateCTKConfig.cmake" : {
      "ObjectId" : "879225be085c71410234b2e71cb1c0e504f64d56",
      "LastModified" : "2017-08-10T21:50:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################################\n\n#\n\n#  Library:   CTK\n\n#\n\n#  Copyright (c) Kitware Inc.\n\n#\n\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n\n#  you may not use this file except in compliance with the License.\n\n#  You may obtain a copy of the License at\n\n#\n\n#      http://www.apache.org/licenses/LICENSE-2.0.txt\n\n#\n\n#  Unless required by applicable law or agreed to in writing, software\n\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n#  See the License for the specific language governing permissions and\n\n#  limitations under the License.\n\n#\n\n###########################################################################\n\n###########################################################################\n\n#\n\n#  Program:   Visualization Toolkit\n\n#  Module:    vtkGenerateVTKConfig.cmake\n\n#\n\n#  Copyright (c) Ken Martin, Will Schroeder, Bill Lorensen\n\n#\n\n#  All rights reserved.\n\n#  See Copyright.txt or http://www.kitware.com/Copyright.htm for details.\n\n#\n\n#     This software is distributed WITHOUT ANY WARRANTY; without even\n\n#     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n\n#     PURPOSE.  See the above copyright notice for more information.\n\n#\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Generate the CTKConfig.cmake file in the build tree. Also configure\n\n# one for installation.  The file tells external projects how to use CTK.\n\n#\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Plug-in output directory\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# CMake extension module directory.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Build configuration information.\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Generate a file containing plugin specific variables\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Generate list of target to exports\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Append CTK PythonQt static libraries\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Export targets so they can be imported by a project using CTK\n\n# as an external library\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Configure 'CTKConfig.cmake' for a build tree\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# CTK external projects variables\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# FIXME: Just pass Qt version (and bitness?)\n",
        "Line" : 149,
        "CharPositionInLine" : 101
      },
      "13" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Configure 'CTKConfig.cmake' for an install tree\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# CTK external projects. We rely on externally set\n\n# _DIR variables or a proper CMAKE_PREFIX_PATH such\n\n# that find_dependency/find_package can successfully\n\n# find the external project. \n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Configure and install 'CTKConfigVersion.cmake'\n",
        "Line" : 261,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "CMake/Testing/CMakeLists.txt" : {
      "ObjectId" : "13c06fb7caf84f577389ebaea4be1ad953dde2e7",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Helper macro\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Add 'CMake script' Tests\n\n#\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMake/configure_package_config_file/CMakePackageConfigHelpers.cmake" : {
      "ObjectId" : "855af9c9f5fa7d00bd7a29ea83aa95245883fa00",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# CMakePackageConfigHelpers\n\n# -------------------------\n\n#\n\n# CONFIGURE_PACKAGE_CONFIG_FILE(), WRITE_BASIC_PACKAGE_VERSION_FILE()\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#     CONFIGURE_PACKAGE_CONFIG_FILE(<input> <output> INSTALL_DESTINATION <path>\n\n#                                                    [PATH_VARS <var1> <var2> ... <varN>]\n\n#                                                    [NO_SET_AND_CHECK_MACRO]\n\n#                                                    [NO_CHECK_REQUIRED_COMPONENTS_MACRO]\n\n#                                                    [NO_FIND_DEPENDENCY_MACRO])\n\n#\n\n#\n\n#\n\n# CONFIGURE_PACKAGE_CONFIG_FILE() should be used instead of the plain\n\n# configure_file() command when creating the <Name>Config.cmake or\n\n# <Name>-config.cmake file for installing a project or library.  It\n\n# helps making the resulting package relocatable by avoiding hardcoded\n\n# paths in the installed Config.cmake file.\n\n#\n\n# In a FooConfig.cmake file there may be code like this to make the\n\n# install destinations know to the using project:\n\n#\n\n# ::\n\n#\n\n#    set(FOO_INCLUDE_DIR   \"@CMAKE_INSTALL_FULL_INCLUDEDIR@\" )\n\n#    set(FOO_DATA_DIR   \"@CMAKE_INSTALL_PREFIX@/@RELATIVE_DATA_INSTALL_DIR@\" )\n\n#    set(FOO_ICONS_DIR   \"@CMAKE_INSTALL_PREFIX@/share/icons\" )\n\n#    ...logic to determine installedPrefix from the own location...\n\n#    set(FOO_CONFIG_DIR  \"${installedPrefix}/@CONFIG_INSTALL_DIR@\" )\n\n#\n\n# All 4 options shown above are not sufficient, since the first 3\n\n# hardcode the absolute directory locations, and the 4th case works only\n\n# if the logic to determine the installedPrefix is correct, and if\n\n# CONFIG_INSTALL_DIR contains a relative path, which in general cannot\n\n# be guaranteed.  This has the effect that the resulting FooConfig.cmake\n\n# file would work poorly under Windows and OSX, where users are used to\n\n# choose the install location of a binary package at install time,\n\n# independent from how CMAKE_INSTALL_PREFIX was set at build/cmake time.\n\n#\n\n# Using CONFIGURE_PACKAGE_CONFIG_FILE() helps.  If used correctly, it\n\n# makes the resulting FooConfig.cmake file relocatable.  Usage:\n\n#\n\n# ::\n\n#\n\n#    1. write a FooConfig.cmake.in file as you are used to\n\n#    2. insert a line containing only the string \"@PACKAGE_INIT@\"\n\n#    3. instead of set(FOO_DIR \"@SOME_INSTALL_DIR@\"), use set(FOO_DIR \"@PACKAGE_SOME_INSTALL_DIR@\")\n\n#       (this must be after the @PACKAGE_INIT@ line)\n\n#    4. instead of using the normal configure_file(), use CONFIGURE_PACKAGE_CONFIG_FILE()\n\n#\n\n#\n\n#\n\n# The <input> and <output> arguments are the input and output file, the\n\n# same way as in configure_file().\n\n#\n\n# The <path> given to INSTALL_DESTINATION must be the destination where\n\n# the FooConfig.cmake file will be installed to.  This can either be a\n\n# relative or absolute path, both work.\n\n#\n\n# The variables <var1> to <varN> given as PATH_VARS are the variables\n\n# which contain install destinations.  For each of them the macro will\n\n# create a helper variable PACKAGE_<var...>.  These helper variables\n\n# must be used in the FooConfig.cmake.in file for setting the installed\n\n# location.  They are calculated by CONFIGURE_PACKAGE_CONFIG_FILE() so\n\n# that they are always relative to the installed location of the\n\n# package.  This works both for relative and also for absolute\n\n# locations.  For absolute locations it works only if the absolute\n\n# location is a subdirectory of CMAKE_INSTALL_PREFIX.\n\n#\n\n# By default configure_package_config_file() also generates two helper\n\n# macros, set_and_check() and check_required_components() into the\n\n# FooConfig.cmake file.\n\n#\n\n# set_and_check() should be used instead of the normal set() command for\n\n# setting directories and file locations.  Additionally to setting the\n\n# variable it also checks that the referenced file or directory actually\n\n# exists and fails with a FATAL_ERROR otherwise.  This makes sure that\n\n# the created FooConfig.cmake file does not contain wrong references.\n\n# When using the NO_SET_AND_CHECK_MACRO, this macro is not generated\n\n# into the FooConfig.cmake file.\n\n#\n\n# check_required_components(<package_name>) should be called at the end\n\n# of the FooConfig.cmake file if the package supports components.  This\n\n# macro checks whether all requested, non-optional components have been\n\n# found, and if this is not the case, sets the Foo_FOUND variable to\n\n# FALSE, so that the package is considered to be not found.  It does\n\n# that by testing the Foo_<Component>_FOUND variables for all requested\n\n# required components.  When using the NO_CHECK_REQUIRED_COMPONENTS\n\n# option, this macro is not generated into the FooConfig.cmake file.\n\n#\n\n# For an example see below the documentation for\n\n# WRITE_BASIC_PACKAGE_VERSION_FILE().\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#   WRITE_BASIC_PACKAGE_VERSION_FILE( filename VERSION major.minor.patch COMPATIBILITY (AnyNewerVersion|SameMajorVersion|ExactVersion) )\n\n#\n\n#\n\n#\n\n# Writes a file for use as <package>ConfigVersion.cmake file to\n\n# <filename>.  See the documentation of find_package() for details on\n\n# this.\n\n#\n\n# ::\n\n#\n\n#     filename is the output filename, it should be in the build tree.\n\n#     major.minor.patch is the version number of the project to be installed\n\n#\n\n# The COMPATIBILITY mode AnyNewerVersion means that the installed\n\n# package version will be considered compatible if it is newer or\n\n# exactly the same as the requested version.  This mode should be used\n\n# for packages which are fully backward compatible, also across major\n\n# versions.  If SameMajorVersion is used instead, then the behaviour\n\n# differs from AnyNewerVersion in that the major version number must be\n\n# the same as requested, e.g.  version 2.0 will not be considered\n\n# compatible if 1.0 is requested.  This mode should be used for packages\n\n# which guarantee backward compatibility within the same major version.\n\n# If ExactVersion is used, then the package is only considered\n\n# compatible if the requested version matches exactly its own version\n\n# number (not considering the tweak version).  For example, version\n\n# 1.2.3 of a package is only considered compatible to requested version\n\n# 1.2.3.  This mode is for packages without compatibility guarantees.\n\n# If your project has more elaborated version matching rules, you will\n\n# need to write your own custom ConfigVersion.cmake file instead of\n\n# using this macro.\n\n#\n\n# Internally, this macro executes configure_file() to create the\n\n# resulting version file.  Depending on the COMPATIBLITY, either the\n\n# file BasicConfigVersion-SameMajorVersion.cmake.in or\n\n# BasicConfigVersion-AnyNewerVersion.cmake.in is used.  Please note that\n\n# these two files are internal to CMake and you should not call\n\n# configure_file() on them yourself, but they can be used as starting\n\n# point to create more sophisticted custom ConfigVersion.cmake files.\n\n#\n\n#\n\n#\n\n# Example using both configure_package_config_file() and\n\n# write_basic_package_version_file(): CMakeLists.txt:\n\n#\n\n# ::\n\n#\n\n#    set(INCLUDE_INSTALL_DIR include/ ... CACHE )\n\n#    set(LIB_INSTALL_DIR lib/ ... CACHE )\n\n#    set(SYSCONFIG_INSTALL_DIR etc/foo/ ... CACHE )\n\n#    ...\n\n#    include(CMakePackageConfigHelpers)\n\n#    configure_package_config_file(FooConfig.cmake.in ${CMAKE_CURRENT_BINARY_DIR}/FooConfig.cmake\n\n#                                  INSTALL_DESTINATION ${LIB_INSTALL_DIR}/Foo/cmake\n\n#                                  PATH_VARS INCLUDE_INSTALL_DIR SYSCONFIG_INSTALL_DIR)\n\n#    write_basic_package_version_file(${CMAKE_CURRENT_BINARY_DIR}/FooConfigVersion.cmake\n\n#                                     VERSION 1.2.3\n\n#                                     COMPATIBILITY SameMajorVersion )\n\n#    install(FILES ${CMAKE_CURRENT_BINARY_DIR}/FooConfig.cmake ${CMAKE_CURRENT_BINARY_DIR}/FooConfigVersion.cmake\n\n#            DESTINATION ${LIB_INSTALL_DIR}/Foo/cmake )\n\n#\n\n#\n\n#\n\n# With a FooConfig.cmake.in:\n\n#\n\n# ::\n\n#\n\n#    set(FOO_VERSION x.y.z)\n\n#    ...\n\n#    @PACKAGE_INIT@\n\n#    ...\n\n#    set_and_check(FOO_INCLUDE_DIR \"@PACKAGE_INCLUDE_INSTALL_DIR@\")\n\n#    set_and_check(FOO_SYSCONFIG_DIR \"@PACKAGE_SYSCONFIG_INSTALL_DIR@\")\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#    check_required_components(Foo)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2012 Alexander Neundorf <neundorf@kde.org>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Handle \"/usr move\" symlinks created by some Linux distros.\n",
        "Line" : 252,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "CMake/ctkBlockCheckDependencies.cmake" : {
      "ObjectId" : "b77c6a2b991b3641ebe3a723385aa0c7d1c24498",
      "LastModified" : "2017-08-24T17:26:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Independently of the value of CTK_SUPERBUILD, each external project definition will\n\n# provides either the include and library directories or a variable name\n\n# used by the corresponding Find<package>.cmake files.\n\n#\n\n# Within top-level CMakeLists.txt file, the variable names will be expanded if not in\n\n# superbuild mode. The include and library dirs are then used in\n\n# ctkMacroBuildApp, ctkMacroBuildLib, and ctkMacroBuildPlugin\n\n#\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Collect CTK library target dependencies\n\n#\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#message(STATUS ALL_TARGET_LIBRARIES:${ALL_TARGET_LIBRARIES})\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Initialize NON_CTK_DEPENDENCIES variable\n\n#\n\n# Using the variable ALL_TARGET_LIBRARIES initialized above with the help\n\n# of the macro ctkMacroCollectAllTargetLibraries, let's get the list of all Non-CTK dependencies.\n\n# NON_CTK_DEPENDENCIES is expected by the macro ctkMacroShouldAddExternalProject\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#message(NON_CTK_DEPENDENCIES:${NON_CTK_DEPENDENCIES})\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Enable and setup External project global properties\n\n#\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#message(\"Updated CTK_DEPENDENCIES:\")\n\n#foreach(dep ${CTK_DEPENDENCIES})\n\n#  message(\"  ${dep}\")\n\n#endforeach()\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "CMake/ctkBlockSetCMakeOSXVariables.cmake" : {
      "ObjectId" : "0c7d93511db0284cb71bca45618b175f33a9f6ec",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################################\n\n#\n\n#  Library:   CTK\n\n#\n\n#  Copyright (c) Kitware Inc.\n\n#\n\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n\n#  you may not use this file except in compliance with the License.\n\n#  You may obtain a copy of the License at\n\n#\n\n#      http://www.apache.org/licenses/LICENSE-2.0.txt\n\n#\n\n#  Unless required by applicable law or agreed to in writing, software\n\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n#  See the License for the specific language governing permissions and\n\n#  limitations under the License.\n\n#\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# ctkBlockSetCMakeOSXVariables\n\n#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Adapted from Paraview/Superbuild/CMakeLists.txt\n\n#\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Note: Change architecture *before* any enable_language() or project()\n\n#       calls so that it's set properly to detect 64-bit-ness...\n\n#\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Waiting universal binaries are supported and tested, complain if\n\n# multiple architectures are specified.\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# See CMake/Modules/Platform/Darwin.cmake)\n\n#   8.x == Mac OSX 10.4 (Tiger)\n\n#   9.x == Mac OSX 10.5 (Leopard)\n\n#  10.x == Mac OSX 10.6 (Snow Leopard)\n\n#  10.x == Mac OSX 10.7 (Lion)\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Retrieve OSX target name\n",
        "Line" : 63,
        "CharPositionInLine" : 10
      },
      "CommentCount" : 7
    },
    "CMake/ctkDashboardDriverScript.cmake" : {
      "ObjectId" : "98561d1d5fdcb21d2fe7342c135b9815adee8896",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################################\n\n#\n\n#  Library:   CTK\n\n#\n\n#  Copyright (c) Kitware Inc.\n\n#\n\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n\n#  you may not use this file except in compliance with the License.\n\n#  You may obtain a copy of the License at\n\n#\n\n#      http://www.apache.org/licenses/LICENSE-2.0.txt\n\n#\n\n#  Unless required by applicable law or agreed to in writing, software\n\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n#  See the License for the specific language governing permissions and\n\n#  limitations under the License.\n\n#\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Included from a dashboard script, this cmake file will drive the configure and build\n\n# steps of the different CTK sub-project (library, application or plugins)\n\n#\n\n# ctkDashboardDriverScript.cmake is automatically downloaded by the dashboard script\n\n# from the url http://commontk.org/ctkDashboardDriverScript.cmake\n\n# \\note Any change to the file should also be backported on http://commontk.org/\n\n#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# XXX This allows to support older scripts having the typo\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# The following variable are expected to be define in the top-level script:\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# If the dashscript doesn't define a GIT_REPOSITORY variable, let's define it here.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Should binary directory be cleaned?\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Attempt to build and test also if 'ctest_update' returned an error\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Ensure SCRIPT_MODE is lowercase\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Set model options\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# For more details, see http://www.kitware.com/blog/home/post/11\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\n\n# run_ctest macro\n\n#\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# force a build if this is the first run and the build dir is empty\n",
        "Line" : 138,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Write initial cache.\n",
        "Line" : 143,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Update\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 155,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Configure\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 160,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Build top level\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 169,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Inner build directory\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 177,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Test\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 182,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Global coverage ...\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 192,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# HACK Unfortunately ctest_coverage ignores the build argument, try to force it...\n",
        "Line" : 196,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Global dynamic analysis ...\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 205,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Note should be at the end\n",
        "Line" : 214,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Lasts 13 hours (Assuming it starts at 9am, it will end around 10pm)\n",
        "Line" : 221,
        "CharPositionInLine" : 42
      },
      "23" : {
        "Text" : "# Loop no faster than once every 5 minutes\n",
        "Line" : 224,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 24
    },
    "CMake/ctkDashboardScript.TEMPLATE.cmake" : {
      "ObjectId" : "3b1d425791dd18ed623b75f35cb37f87b8cb6600",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "####################################################################################\n\n# OS      :\n\n# Hardware:\n\n# GPU     :\n\n####################################################################################\n\n# WARNING - The specific version and processor type of this machine should be reported\n\n# in the header above. Indeed, this file will be send to the dashboard as a NOTE file.\n\n#\n\n# On linux, you could run:\n\n#     'uname -o' and 'cat /etc/*-release' to obtain the OS name.\n\n#     'uname -mpi' to obtain hardware details.\n\n#     'glxinfo | grep OpenGL' to obtain GPU details.\n\n####################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# For additional information, see http://www.commontk.org/index.php/Dashboard_setup\n\n#\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Experimental:\n\n#     - run_ctest() macro will be called *ONE* time\n\n#     - binary directory will *NOT* be cleaned\n\n# Continuous:\n\n#     - run_ctest() macro will be called EVERY 5 minutes ...\n\n#     - binary directory will *NOT* be cleaned\n\n#     - configure/build will be executed *ONLY* if the repository has been updated\n\n# Nightly:\n\n#     - run_ctest() macro will be called *ONE* time\n\n#     - binary directory *WILL BE* cleaned\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# \"Experimental\", \"Continuous\", \"Nightly\"\n",
        "Line" : 32,
        "CharPositionInLine" : 32
      },
      "4" : {
        "Text" : "# You could invoke the script with the following syntax:\n\n#  ctest -S karakoram_Slicer4_nightly.cmake -C <CTEST_BUILD_CONFIGURATION> -V\n\n#\n\n# Note that '-C <CTEST_BUILD_CONFIGURATION>' is mandatory on windows\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Dashboard properties\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Windows, Linux, Darwin...\n",
        "Line" : 42,
        "CharPositionInLine" : 40
      },
      "7" : {
        "Text" : "# for example: mymachine.kitware, mymachine.dkfz, ...\n",
        "Line" : 46,
        "CharPositionInLine" : 36
      },
      "8" : {
        "Text" : "# set(GIT_REPOSITORY http://github.com/YOURUSERNAME/CTK.git)\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# origin/next\n",
        "Line" : 50,
        "CharPositionInLine" : 16
      },
      "10" : {
        "Text" : "# Each dashboard script should specify a unique ID per CTEST_DASHBOARD_ROOT.\n\n# It means the following directories will be created:\n\n#   <CTEST_DASHBOARD_ROOT>/<DIRECTORY_NAME>-<DIRECTORY_IDENTIFIER>        # Source directory\n\n#   <CTEST_DASHBOARD_ROOT>/<DIRECTORY_NAME>-<DIRECTORY_IDENTIFIER>-build  # Build directory\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Open a shell and type in \"cmake --help\" to obtain the proper spelling of the generator\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Dashboard options\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#set(DOCUMENTATION_ARCHIVES_OUTPUT_DIRECTORY ) # for example: $ENV{HOME}/Projects/Doxygen\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Use multiple CPU cores to build. For example \"-j -l4\" on unix\n",
        "Line" : 72,
        "CharPositionInLine" : 26
      },
      "15" : {
        "Text" : "# Number of tests running in parallel\n",
        "Line" : 73,
        "CharPositionInLine" : 28
      },
      "16" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Additional CMakeCache options\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# List of test that should be explicitly disabled on this machine\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Set any extra environment variables here\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Required executables\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Build Name\n\n#-----------------------------------------------------------------------------\n\n# Update the following variable to match the chosen build options. This variable is used to\n\n# generate both the build directory and the build name.\n\n# See http://my.cdash.org/CDash/index.php?project=CTK for examples\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Directory name\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Build directory\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Source directory\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##########################################\n\n# WARNING: DO NOT EDIT BEYOND THIS POINT #\n\n##########################################\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#\n\n# Project specific properties\n\n#\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#\n\n# Display build info\n\n#\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#\n\n# Convenient function allowing to download a file\n\n#\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#\n\n# Download and include dashboard driver script \n\n#\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 29
    },
    "CMake/ctkFunctionAddPluginRepo.cmake" : {
      "ObjectId" : "ffc55d88b9d102d54f2839d516e471bbde24541f",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Parse the .gitmodules file and add the submodules as contributed plugins\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Push the value which might have been changed in ctk_plugin_option to the parent scope\n",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "CMake/ctkFunctionApplyPatches.cmake" : {
      "ObjectId" : "46ec88e08431224304cdeebd506b6b3656de56d7",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################################\n\n#\n\n#  Library:   CTK\n\n#\n\n#  Copyright (c) Kitware Inc.\n\n#\n\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n\n#  you may not use this file except in compliance with the License.\n\n#  You may obtain a copy of the License at\n\n#\n\n#      http://www.apache.org/licenses/LICENSE-2.0.txt\n\n#\n\n#  Unless required by applicable law or agreed to in writing, software\n\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n#  See the License for the specific language governing permissions and\n\n#  limitations under the License.\n\n#\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Depends on:\n\n#  CTK/CMake/ctkFunctionLFtoCRLF.cmake\n\n#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#! \\ingroup CMakeUtilities\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make sure patch executable exists\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Apply patches\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "CMake/ctkFunctionCMakeDoxygenFilterCompile.cmake" : {
      "ObjectId" : "7bd5338f40b9be1996ae46e8e386e0d8bcec0d68",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#!\n\n#! \\brief Compile a CMake doxygen input filter\n\n#!\n\n#! \\param OUT &lt;out-file&gt; (optional) Supply an absolute filename for\n\n#!                             the generated executable.\n\n#! \\param NAMESPACE &lt;namespace&gt; (optional) Supply a C++ namespace in\n\n#!                                    which the generated function declrarations\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#!                              should be wrapped.\n",
        "Line" : 8,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "#!\n\n#! \\return This function sets the <code>CMakeDoxygenFilter_EXECUTABLE</code>\n\n#!         variable to the absolute path of the generated input filter executable\n\n#!         in the parent scope. If <out-file> is specified, they will be the same.\n\n#!\n\n#! This CMake function compiles the http://github.com/saschazelzer/CMakeDoxygenFilter\n\n#! project into a doxygen input filter executable. See\n\n#! http://github.com/saschazelzer/CMakeDoxygenFilter/blob/master/README for more details.\n\n#!\n\n#! \\ingroup CMakeUtilities\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-------------------- parse function arguments -------------------\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#------------------- finished parsing arguments ----------------------\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "CMake/ctkFunctionCheckCompilerFlags.cmake" : {
      "ObjectId" : "9e52d8d0ff15e1d1b9a7921eb2764c66201680a0",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Helper macro allowing to check if the given flags are supported \n\n# by the underlying build tool\n\n#\n\n# If the flag(s) is/are supported, they will be appended to the string identified by RESULT_VAR\n\n#\n\n# Usage:\n\n#   ctkFunctionCheckCompilerFlags(FLAGS_TO_CHECK VALID_FLAGS_VAR)\n\n#\n\n# Example:\n\n#\n\n#   set(myflags)\n\n#   ctkFunctionCheckCompilerFlags(\"-fprofile-arcs\" myflags)\n\n#   message(1-myflags:${myflags})\n\n#   ctkFunctionCheckCompilerFlags(\"-fauto-bugfix\" myflags)\n\n#   message(2-myflags:${myflags})\n\n#   ctkFunctionCheckCompilerFlags(\"-Wall\" myflags)\n\n#   message(1-myflags:${myflags})\n\n#\n\n#   The output will be:\n\n#    1-myflags: -fprofile-arcs\n\n#    2-myflags: -fprofile-arcs\n\n#    3-myflags: -fprofile-arcs -Wall\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#! \\ingroup CMakeUtilities\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Internally, the macro CMAKE_CXX_ACCEPTS_FLAG calls TRY_COMPILE. To avoid \n\n# the cost of compiling the test each time the project is configured, the variable set by \n\n# the macro is added to the cache so that following invocation of the macro with \n\n# the same variable name skip the compilation step. \n\n# For that same reason, ctkFunctionCheckCompilerFlags function appends a unique suffix to \n\n# the HAS_FLAG variable. This suffix is created using a 'clean version' of the flag to test.\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "CMake/ctkFunctionCheckoutRepo.cmake" : {
      "ObjectId" : "b393bc0f6738507f678c1824dae309c3da768469",
      "LastModified" : "2018-03-09T17:18:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# if a *_DIR variable is supplied, the repository is not cloned.\n",
        "Line" : 6,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "CMake/ctkFunctionCompileSnippets.cmake" : {
      "ObjectId" : "7d561b2b16f6876941c2e380458a220a1333a754",
      "LastModified" : "2018-06-04T00:26:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#! Compile code snippets from a given directory\n\n#!\n\n#! This CMake function globs all files called \\e main.cpp in the\n\n#! directory given by <code>snippet_path</code> and creates\n\n#! an executable for each found main.cpp.\n\n#!\n\n#! If a \\e files.cmake file exists in the same directory where a\n\n#! main.cpp file was found, it is included. This function assumes\n\n#! that the files.cmake file sets a list named \\e snippet_src_files\n\n#! containing a list of files which should be compiled into the\n\n#! executable. If no files.cmake file is found, all files in the\n\n#! directory are compiled into the executable.\n\n#!\n\n#! This function uses all additionally passed arguments as link\n\n#! dependencies for the created executable.\n\n#!\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# get all files called \"main.cpp\"\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# get the directory containing the main.cpp file\n",
        "Line" : 24,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# If there exists a \"files.cmake\" file in the snippet directory,\n\n# include it and assume it sets the variable \"snippet_src_files\"\n\n# to a list of source files for the snippet.\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# glob all files in the directory and add them to the snippet src list\n",
        "Line" : 44,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Uset the top-level directory name as the executable name\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "CMake/ctkFunctionDownloadData.cmake" : {
      "ObjectId" : "58ce28fd0ef77f888f2a36838da9d931b81e3400",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################################\n\n#\n\n#  Library:   CTK\n\n#\n\n#  Copyright (c) Kitware Inc.\n\n#\n\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n\n#  you may not use this file except in compliance with the License.\n\n#  You may obtain a copy of the License at\n\n#\n\n#      http://www.apache.org/licenses/LICENSE-2.0.txt\n\n#\n\n#  Unless required by applicable law or agreed to in writing, software\n\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n#  See the License for the specific language governing permissions and\n\n#  limitations under the License.\n\n#\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#!\n\n#! Fetch data from a MIDAS server\n\n#!\n\n#! Usage:\n\n#! \\code\n\n#!  ctkFunctionDownloadData(\n\n#!         MIDAS_SERVER_URL http://www.insight-journal.org/midas/item/download/\n\n#!         ITEMID 2461\n\n#!         OUTPUT_DIRECTORY /home/jchris/Projects/Data\n\n#!         [FORCE_DOWNLOAD]\n\n#!         )\n\n#! \\endcode\n\n#!\n\n#! The downloaded file will have the from: midas_item_<ITEMID>.tar\n\n#!\n\n#! \\ingroup CMakeUtilities\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Sanity checks\n",
        "Line" : 45,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Make sure output directory exists\n",
        "Line" : 52,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Is download required ?\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#\n\n# Test - Use cmake -DMACRO_TESTING:BOOL=ON -P ctkFunctionDownloadData.cmake\n\n#\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# Test1\n\n#\n",
        "Line" : 81,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Make sure the file exists\n",
        "Line" : 95,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Create a folder\n",
        "Line" : 102,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Extract\n",
        "Line" : 106,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Remove archive\n\n#file(REMOVE ${expected_file})\n\n#file(REMOVE_RECURSE ${extract_destination_dir})\n",
        "Line" : 119,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 11
    },
    "CMake/ctkFunctionExtractOptionNameAndValue.cmake" : {
      "ObjectId" : "851443a3f1905bb0a074b834222875b13b591a9e",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n#\n\n#\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#! \\ingroup CMakeUtilities\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Make sure option is correctly formated\n",
        "Line" : 9,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# Extract option name and option default value\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#\n\n# Test - Use cmake -DMACRO_TESTING:BOOL=ON -P ctkFunctionExtractOptionNameAndValue.cmake\n\n#\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# Test1\n\n#\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#\n\n# Test2\n\n#\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    },
    "CMake/ctkFunctionExtractPluginTargets.cmake" : {
      "ObjectId" : "86e4f09f7580e0597a424f55aa36448437f78742",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#!\n\n#! Extracts target names from a string containing CMake option values.\n\n#!\n\n#! Example usage:\n\n#! \\code\n\n#! set(build_options Plugins/org.mydomain.core:ON Plugins/org.mydomain.logic:ON)\n\n#! ctkFunctionExtractPluginTargets(\"${build_options}\" ALL target_names)\n\n#! message(\"targets: ${target_names}\")\n\n#! \\endcode\n\n#! will print <code>targets: org_mydomain_core;org_mydomain_logic</code>.\n\n#!\n\n#! \\param my_opts A string containing a list of options.\n\n#! \\param my_filter One of ON, OFF or ALL. Checks the actual build option of the plugin.\n\n#! \\param var_targets A variable name containing the output.\n\n#!\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/ctkFunctionGenerateDGraphInput.cmake" : {
      "ObjectId" : "4e4a4348d64532f638e43c07bf799831ef1f472d",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################################\n\n#\n\n#  Library:   CTK\n\n#\n\n#  Copyright (c) Kitware Inc.\n\n#\n\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n\n#  you may not use this file except in compliance with the License.\n\n#  You may obtain a copy of the License at\n\n#\n\n#      http://www.apache.org/licenses/LICENSE-2.0.txt\n\n#\n\n#  Unless required by applicable law or agreed to in writing, software\n\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n#  See the License for the specific language governing permissions and\n\n#  limitations under the License.\n\n#\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#!\n\n#! Generate a DGrapgh input file expected by DGraph executable.\n\n#!\n\n#! \\ingroup CMakeAPI\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# extract target_dir and option_name\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#message(STATUS target_dir:${target_dir})\n\n#message(STATUS option_name:${option_name})\n\n#message(STATUS option_name-value:${${option_name}})\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# make sure the directory exists\n",
        "Line" : 53,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# extract project name from CMakeLists.txt\n",
        "Line" : 63,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "#message(STATUS target_project_name:${target_project_name})\n",
        "Line" : 72,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# Make sure the variable is cleared\n",
        "Line" : 74,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# get dependencies\n",
        "Line" : 77,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# Make sure the variable is cleared\n",
        "Line" : 83,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# filter dependencies starting with CTK org org_commontk_\n",
        "Line" : 89,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# isolated vertex candidate\n",
        "Line" : 96,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# Generate XML related to the dependencies\n",
        "Line" : 100,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 13
    },
    "CMake/ctkFunctionGeneratePluginManifest.cmake" : {
      "ObjectId" : "7fa9b51e6743db9f74bde7898532689dcfe099ec",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Depends on:\n\n#  CTK/CMake/ctkMacroParseArguments.cmake\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#! \\ingroup CMakeUtilities\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Sanity checks\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "CMake/ctkFunctionGeneratePluginUseFile.cmake" : {
      "ObjectId" : "4eb8f5bb71f09eb1caa5092e315e5deaf63b32fb",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################################\n\n#\n\n#  Library: CTK\n\n#\n\n#  Copyright (c) German Cancer Research Center,\n\n#    Division of Medical and Biological Informatics\n\n#\n\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n\n#  you may not use this file except in compliance with the License.\n\n#  You may obtain a copy of the License at\n\n#\n\n#    http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n#  Unless required by applicable law or agreed to in writing, software\n\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n#  See the License for the specific language governing permissions and\n\n#  limitations under the License.\n\n#\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#! Write a set of variables containing CTK plugin specific include and library directories\n\n#! \\ingroup CMakeAPI\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The call to ctkFunctionGetIncludeDirs returns all include dirs\n\n# the plugin itself needs. This does not include the plugin's\n\n# source dir, so we add it explicitly.\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "CMake/ctkFunctionGetAllPluginTargets.cmake" : {
      "ObjectId" : "ce8d734d64e7ec2c43e5969b3c71d24794f110e4",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#!\n\n#! Stores all known plug-in targets (potentially also from external projects)\n\n#! in the variable specified by the first argument.\n\n#!\n\n#! \\param var_targets A variable name containing the output.\n\n#! \\ingroup CMakeUtilities\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/ctkFunctionGetCompilerVisibilityFlags.cmake" : {
      "ObjectId" : "e8ea7a3e46c91f63b2510530f6bb5812193c7103",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#!\n\n#! \\brief Helper macro which appends gcc compatible visibility flags to the\n\n#! variable given by RESULT_VAR.\n\n#!\n\n#! If supported, the flags -fvisibility=hidden and -fvisibility-inlines-hidden\n\n#! will be added. This applies to gcc >= 4.5 and Clang.\n\n#!\n\n#! Usage:\n\n#!   ctkFunctionGetCompilerVisibilityFlags(RESULT_VAR)\n\n#!\n\n#! Example:\n\n#!\n\n#! \\code\n\n#! set(myflags \"-Werror\")\n\n#! ctkFunctionGetCompilerVisibilityFlags(myflags)\n\n#! \\endcode\n\n#!\n\n#! The variable \\emph myflags will contain the string \"-Werror -fvisibility -fvisibility-inlines-hidden\"\n\n#! if for example gcc 4.6 is used.\n\n#!\n\n#! \\ingroup CMakeUtilities\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We only support hidden visibility for gcc for now. Clang 3.0 still has troubles with\n\n# correctly marking template declarations and explicit template instantiations as exported.\n\n# See http://comments.gmane.org/gmane.comp.compilers.clang.scm/50028\n\n# and http://llvm.org/bugs/show_bug.cgi?id=10113\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# MinGW does not export all symbols automatically, so no need to set flags.\n\n#\n\n# With gcc < 4.5, RTTI symbols from classes declared in third-party libraries\n\n# which are not \"gcc visibility aware\" are marked with hidden visibility in\n\n# DSOs which include the class declaration and which are compiled with\n\n# hidden visibility. This leads to dynamic_cast and exception handling problems.\n\n# While this problem could be worked around by sandwiching the include\n\n# directives for the third-party headers between \"#pragma visibility push/pop\"\n\n# statements, it is generally safer to just use default visibility with\n\n# gcc < 4.5.\n",
        "Line" : 37,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "CMake/ctkFunctionGetGccVersion.cmake" : {
      "ObjectId" : "4446d4bc164583ad7d11cf31017661edc4b4621c",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################################\n\n#\n\n#  Library:   CTK\n\n#\n\n#  Copyright (c) Kitware Inc.\n\n#\n\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n\n#  you may not use this file except in compliance with the License.\n\n#  You may obtain a copy of the License at\n\n#\n\n#      http://www.apache.org/licenses/LICENSE-2.0.txt\n\n#\n\n#  Unless required by applicable law or agreed to in writing, software\n\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n#  See the License for the specific language governing permissions and\n\n#  limitations under the License.\n\n#\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#! \\ingroup CMakeUtilities\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMake/ctkFunctionGetIncludeDirs.cmake" : {
      "ObjectId" : "b8d6c1dd8dcd5271309c5e05459cab1faad27ff6",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################################\n\n#\n\n#  Library: CTK\n\n#\n\n#  Copyright (c) German Cancer Research Center,\n\n#    Division of Medical and Biological Informatics\n\n#\n\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n\n#  you may not use this file except in compliance with the License.\n\n#  You may obtain a copy of the License at\n\n#\n\n#    http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n#  Unless required by applicable law or agreed to in writing, software\n\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n#  See the License for the specific language governing permissions and\n\n#  limitations under the License.\n\n#\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#! \\ingroup CMakeUtilities\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add the include directories from the plugin dependencies\n\n# The variable ${_target}_DEPENDENCIES is set in the\n\n# macro ctkMacroValidateBuildOptions\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# For external projects, CTKConfig.cmake contains variables\n\n# listening the include dirs for CTK libraries and plugins\n",
        "Line" : 56,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# This is for resolving include dependencies between\n\n# libraries / plugins from external projects using CTK\n",
        "Line" : 70,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 5
    },
    "CMake/ctkFunctionGetLibraryDirs.cmake" : {
      "ObjectId" : "b8625f6c1a3f40365d3f1949013c4d1c844c0d74",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################################\n\n#\n\n#  Library: CTK\n\n#\n\n#  Copyright (c) German Cancer Research Center,\n\n#    Division of Medical and Biological Informatics\n\n#\n\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n\n#  you may not use this file except in compliance with the License.\n\n#  You may obtain a copy of the License at\n\n#\n\n#    http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n#  Unless required by applicable law or agreed to in writing, software\n\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n#  See the License for the specific language governing permissions and\n\n#  limitations under the License.\n\n#\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#! \\ingroup CMakeUtilities\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add the library directories from the external project\n\n# The variable ${_target}_DEPENDENCIES is set in the\n\n# macro ctkMacroValidateBuildOptions\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "CMake/ctkFunctionGetPluginDependencies.cmake" : {
      "ObjectId" : "2783f4dded53107c154ccc6bd96e837a72e25f25",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#!\n\n#! \\brief Stores all known plug-in dependencies (potentially also from external projects)\n\n#! in the variable specified by the first argument.\n\n#!\n\n#! \\param var_deps (required) A variable name containing the output.\n\n#! \\param PLUGINS (required) A list of plug-ins (target names or symbolic names) for which the\n\n#!        set of dependencies should be obtained.\n\n#! \\param ALL (option) Include external dependencies.\n\n#! \\ingroup CMakeUtilities\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sanity checks\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "CMake/ctkFunctionGetTargetDependencies.cmake" : {
      "ObjectId" : "9056cbd8defbe7ef8222535aca8ef98db4eab4dd",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#!\n\n#! \\brief Stores all target dependencies (potentially also from external projects)\n\n#! in the variable specified by the first argument.\n\n#!\n\n#! \\param var_deps (required) A variable name containing the output.\n\n#! \\param TARGETS (required) A list of targets (library targets or plug-in targets/symbolic names)\n\n#!                for which the set of dependencies should be obtained.\n\n#! \\param ALL (option) Include external dependencies.\n\n#! \\ingroup CMakeUtilities\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sanity checks\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# convenience conversion for plug-in targets\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# assume the variable ${_target}_DEPENDENCIES was set during\n\n# a previous invocation of the ctkMacroValidateBuildOptions macro.\n",
        "Line" : 27,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# remove external targets not belonging to the current project\n",
        "Line" : 35,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 5
    },
    "CMake/ctkFunctionLFtoCRLF.cmake" : {
      "ObjectId" : "312085fb502df4e9bc866d9bdff5a6e6efcd65ff",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################################\n\n#\n\n#  Library:   CTK\n\n#\n\n#  Copyright (c) Kitware Inc.\n\n#\n\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n\n#  you may not use this file except in compliance with the License.\n\n#  You may obtain a copy of the License at\n\n#\n\n#      http://www.apache.org/licenses/LICENSE-2.0.txt\n\n#\n\n#  Unless required by applicable law or agreed to in writing, software\n\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n#  See the License for the specific language governing permissions and\n\n#  limitations under the License.\n\n#\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#! \\ingroup CMakeUtilities\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Make sure the file exists\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Read lines\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Loop over lines and append \\r\\n\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#\n\n# Test - Use cmake -DFUNCTION_TESTING:BOOL=ON -DINPUT_FILE:FILEPATH=<FILE> -DOUTPUT_FILE:FILEPATH=<FILE> -P ctkFunctionLFtoCRLF.cmake\n\n#\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#message(STATUS \"INPUT_FILE [${INPUT_FILE}]\")\n\n#message(STATUS \"OUTPUT_FILE [${OUTPUT_FILE}]\")\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    },
    "CMake/ctkLinkerAsNeededFlagCheck.cmake" : {
      "ObjectId" : "7efca29daead8ff914cf20b5a015b1cb21ee5a45",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################################\n\n#\n\n#  Library:   CTK\n\n#\n\n#  Copyright (c) Kitware Inc.\n\n#\n\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n\n#  you may not use this file except in compliance with the License.\n\n#  You may obtain a copy of the License at\n\n#\n\n#      http://www.apache.org/licenses/LICENSE-2.0.txt\n\n#\n\n#  Unless required by applicable law or agreed to in writing, software\n\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n#  See the License for the specific language governing permissions and\n\n#  limitations under the License.\n\n#\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Linker --as-needed flag check\n\n#\n\n# Check if the linker will resolve symbols of underlinked libraries\n\n#\n\n# This script set the variable CTK_LINKER_NO_AS_NEEDED_FLAG_REQUIRED\n\n# to either TRUE or FALSE.\n\n#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMake/ctkLinkerAsNeededFlagCheck/CMakeLists.txt" : {
      "ObjectId" : "63beff0bdc8ee590dae999a725aa3618312fd96d",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/ctkListToString.cmake" : {
      "ObjectId" : "c78728cf060001d9df1c33644513753df9ed61f1",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################################\n\n#\n\n#  Library:   CTK\n\n#\n\n#  Copyright (c) Kitware Inc.\n\n#\n\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n\n#  you may not use this file except in compliance with the License.\n\n#  You may obtain a copy of the License at\n\n#\n\n#      http://www.apache.org/licenses/LICENSE-2.0.txt\n\n#\n\n#  Unless required by applicable law or agreed to in writing, software\n\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n#  See the License for the specific language governing permissions and\n\n#  limitations under the License.\n\n#\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Get list length\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# If the list has 0 or 1 element, there is no need to loop over.\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Get current item_value\n",
        "Line" : 33,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# .. and append to output string\n",
        "Line" : 35,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Append separator if current element is NOT the last one.\n",
        "Line" : 37,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "#\n\n# cmake -DTEST_ctk_list_to_string_test:BOOL=ON -P ListToString.cmake\n\n#\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "CMake/ctkMacroAddCtkLibraryOptions.cmake" : {
      "ObjectId" : "5456e6d88cd557b417850497cd4d2047d828ed1e",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################################\n\n#\n\n#  Library:   CTK\n\n#\n\n#  Copyright (c) Kitware Inc.\n\n#\n\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n\n#  you may not use this file except in compliance with the License.\n\n#  You may obtain a copy of the License at\n\n#\n\n#      http://www.apache.org/licenses/LICENSE-2.0.txt\n\n#\n\n#  Unless required by applicable law or agreed to in writing, software\n\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n#  See the License for the specific language governing permissions and\n\n#  limitations under the License.\n\n#\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#! \\ingroup CMakeUtilities\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add options only if \"ctk_library_option.cmake\" file exists\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Make sure the variable is cleared \n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "CMake/ctkMacroBuildApp.cmake" : {
      "ObjectId" : "2abbf4d6f8d9672bbe15f2bd6620300dc5bced1a",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################################\n\n#\n\n#  Library:   CTK\n\n#\n\n#  Copyright (c) Kitware Inc.\n\n#\n\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n\n#  you may not use this file except in compliance with the License.\n\n#  You may obtain a copy of the License at\n\n#\n\n#      http://www.apache.org/licenses/LICENSE-2.0.txt\n\n#\n\n#  Unless required by applicable law or agreed to in writing, software\n\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n#  See the License for the specific language governing permissions and\n\n#  limitations under the License.\n\n#\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Depends on:\n\n#  CTK/CMake/ctkMacroParseArguments.cmake\n\n#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#! \\ingroup CMakeAPI\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Keep parameter 'INCLUDE_DIRECTORIES' for backward compatiblity\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Sanity checks\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Make sure either the source or the binary directory associated with the application\n\n# contains a file named ${MY_NAME}Main.cpp\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Define library name\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# Include dirs\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Add the include directories from the library dependencies\n",
        "Line" : 61,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Add the library directories from the external project\n",
        "Line" : 66,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Add Qt include dirs and defines\n",
        "Line" : 74,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Make sure variable are cleared\n",
        "Line" : 78,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Wrap\n",
        "Line" : 84,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# this is a workaround for Visual Studio. The relative include paths in the generated\n\n# moc files can get very long and can't be resolved by the MSVC compiler.\n",
        "Line" : 86,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# Wrap\n",
        "Line" : 97,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# this is a workaround for Visual Studio. The relative include paths in the generated\n\n# moc files can get very long and can't be resolved by the MSVC compiler.\n",
        "Line" : 99,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# Create executable\n",
        "Line" : 122,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Set labels associated with the target.\n",
        "Line" : 130,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Install rules\n",
        "Line" : 133,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Install headers\n",
        "Line" : 143,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 20
    },
    "CMake/ctkMacroBuildLib.cmake" : {
      "ObjectId" : "8334881aaf55637e732ddd606a071c36a3aae065",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################################\n\n#\n\n#  Library:   CTK\n\n#\n\n#  Copyright (c) Kitware Inc.\n\n#\n\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n\n#  you may not use this file except in compliance with the License.\n\n#  You may obtain a copy of the License at\n\n#\n\n#      http://www.apache.org/licenses/LICENSE-2.0.txt\n\n#\n\n#  Unless required by applicable law or agreed to in writing, software\n\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n#  See the License for the specific language governing permissions and\n\n#  limitations under the License.\n\n#\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Depends on:\n\n#  CTK/CMake/ctkMacroParseArguments.cmake\n\n#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#! \\brief Build a CTK library.\n\n#!\n\n#! \\ingroup CMakeAPI\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Keep parameter 'INCLUDE_DIRECTORIES' for backward compatiblity\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Sanity checks\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Define library name\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Library target names must not contain a '_' (reserved for plug-in target names)\n",
        "Line" : 56,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# Include dirs\n",
        "Line" : 61,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# with CMake >2.9, use QT4_MAKE_OUTPUT_FILE instead ?\n",
        "Line" : 66,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Add the include directories from the library dependencies\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Add Qt include dirs and defines\n",
        "Line" : 78,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Add the library directories from the external project\n",
        "Line" : 82,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Make sure variable are cleared\n",
        "Line" : 101,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Wrap\n",
        "Line" : 106,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# this is a workaround for Visual Studio. The relative include paths in the generated\n\n# moc files can get very long and can't be resolved by the MSVC compiler.\n",
        "Line" : 108,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Set labels associated with the target.\n",
        "Line" : 159,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Apply user-defined properties to the library target.\n",
        "Line" : 162,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Library properties specific to STATIC build\n",
        "Line" : 168,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# 64-bit\n",
        "Line" : 170,
        "CharPositionInLine" : 36
      },
      "19" : {
        "Text" : "# Install rules\n",
        "Line" : 175,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# add stack smash protection lib\n",
        "Line" : 188,
        "CharPositionInLine" : 29
      },
      "21" : {
        "Text" : "# Update CTK_BASE_LIBRARIES\n",
        "Line" : 192,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# Install headers\n",
        "Line" : 196,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 23
    },
    "CMake/ctkMacroBuildLibWrapper.cmake" : {
      "ObjectId" : "cef8d5ea0ad88735e5199678808ddd5daad70ae7",
      "LastModified" : "2018-06-04T00:26:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################################\n\n#\n\n#  Library:   CTK\n\n#\n\n#  Copyright (c) Kitware Inc.\n\n#\n\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n\n#  you may not use this file except in compliance with the License.\n\n#  You may obtain a copy of the License at\n\n#\n\n#      http://www.apache.org/licenses/LICENSE-2.0.txt\n\n#\n\n#  Unless required by applicable law or agreed to in writing, software\n\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n#  See the License for the specific language governing permissions and\n\n#  limitations under the License.\n\n#\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Depends on:\n\n#  CTK/CMake/ctkMacroParseArguments.cmake\n\n#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#! When CTK is built as shared library, the following macro builds a python module\n\n#! associated with the generated PythonQt wrappers. When loaded, it will\n\n#! dynamically loads both the (1) generated decorators and the (2) hand written one.\n\n#! On the other hand, when CTK is built statically, it creates a\n\n#! static library providing a initialization function that will allow to load\n\n#! both (1) and (2).\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Function copied from https://github.com/scikit-build/scikit-build/pull/299\n\n# XXX Update this CMake module to use function from scikit-build to build the wrapper\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#! \\ingroup CMakeAPI\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Sanity checks\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Define library name\n",
        "Line" : 90,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Include dirs\n",
        "Line" : 93,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Since the PythonQt decorator depends on PythonQt, Python and VTK, let's link against\n\n# these ones to avoid complaints of MSVC\n\n# Note: \"LINK_DIRECTORIES\" has to be invoked before \"ADD_LIBRARY\"\n",
        "Line" : 99,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Does a header having the expected filename exists ?\n",
        "Line" : 104,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#message(\"path/to/DECORATOR_HEADER:${CMAKE_CURRENT_SOURCE_DIR}/${DECORATOR_HEADER}\")\n",
        "Line" : 119,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Clear variable\n",
        "Line" : 121,
        "CharPositionInLine" : 25
      },
      "12" : {
        "Text" : "# 64-bit\n",
        "Line" : 135,
        "CharPositionInLine" : 36
      },
      "13" : {
        "Text" : "# Make sure that no prefix is set on the library\n",
        "Line" : 140,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Python extension modules on Windows must have the extension \".pyd\"\n\n# instead of \".dll\" as of Python 2.5.  Older python versions do support\n\n# this suffix.\n\n# See http://docs.python.org/faq/windows.html#is-a-pyd-file-the-same-as-a-dll\n",
        "Line" : 142,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Set labels associated with the target.\n",
        "Line" : 157,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Update list of libraries wrapped with PythonQt\n",
        "Line" : 160,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Install rules\n",
        "Line" : 165,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 18
    },
    "CMake/ctkMacroBuildPlugin.cmake" : {
      "ObjectId" : "bfe2ff5437a0a2b1d363fb9dca5940e08fd901e0",
      "LastModified" : "2018-06-04T00:26:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################################\n\n#\n\n#  Library:   CTK\n\n#\n\n#  Copyright (c) Kitware Inc.\n\n#\n\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n\n#  you may not use this file except in compliance with the License.\n\n#  You may obtain a copy of the License at\n\n#\n\n#      http://www.apache.org/licenses/LICENSE-2.0.txt\n\n#\n\n#  Unless required by applicable law or agreed to in writing, software\n\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n#  See the License for the specific language governing permissions and\n\n#  limitations under the License.\n\n#\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Depends on:\n\n#  CTK/CMake/ctkMacroParseArguments.cmake\n\n#  CTK/CMake/ctkMacroGeneratePluginManifest.cmake\n\n#\n\n#! \\brief Build a CTK plug-in.\n\n#!\n\n#! This macro takes the usual arguments for building\n\n#! a shared library using Qt. Additionally, it generates\n\n#! plugin meta-data by creating a MANIFEST.MF text file\n\n#! which is embedded in the share library as a Qt resource.\n\n#!\n\n#! The following variables can be set in a file named\n\n#! manifest_headers.cmake, which will then be read by\n\n#! this macro:\n\n#!\n\n#! - Plugin-ActivationPolicy\n\n#! - Plugin-Category\n\n#! - Plugin-ContactAddress\n\n#! - Plugin-Copyright\n\n#! - Plugin-Description\n\n#! - Plugin-DocURL\n\n#! - Plugin-Icon\n\n#! - Plugin-License\n\n#! - Plugin-Name\n\n#! - Require-Plugin\n\n#! - Plugin-Vendor\n\n#! - Plugin-Version\n\n#!\n\n#! \\ingroup CMakeAPI\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Keep parameter 'INCLUDE_DIRECTORIES' for backward compatiblity\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Sanity checks\n",
        "Line" : 60,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Print a warning if the project name does not match the directory name\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Define library name\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Plug-in target names must contain at leas one _\n",
        "Line" : 75,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Plugin are expected to be shared library\n",
        "Line" : 80,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Clear the variables for the manifest headers\n",
        "Line" : 83,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Since the test plug-ins are not considered when calculating\n\n# target dependencies via DGraph, we add the dependencies\n\n# manually here\n\n#message(\"${lib_name}_DEPENDENCIES ${MY_TARGET_LIBRARIES}\")\n",
        "Line" : 101,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# If a file named manifest_headers.cmake exists, read it\n",
        "Line" : 108,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# Include dirs\n",
        "Line" : 117,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Add the include directories from the plugin dependencies\n\n# and external dependencies\n",
        "Line" : 139,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Add Qt include dirs and defines\n",
        "Line" : 150,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Add the library directories from the external project\n",
        "Line" : 156,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Make sure variable are cleared\n",
        "Line" : 174,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Wrap\n",
        "Line" : 179,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# this is a workaround for Visual Studio. The relative include paths in the generated\n\n# moc files can get very long and can't be resolved by the MSVC compiler.\n",
        "Line" : 186,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "# this is a workaround for Visual Studio. The relative include paths in the generated\n\n# moc files can get very long and can't be resolved by the MSVC compiler.\n",
        "Line" : 198,
        "CharPositionInLine" : 6
      },
      "19" : {
        "Text" : "# Add the generated manifest qrc file\n",
        "Line" : 209,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Create translation files (.ts and .qm)\n",
        "Line" : 234,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# create a path relative to the current binary dir\n",
        "Line" : 259,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# Add any other additional resource files\n",
        "Line" : 268,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# Add Qt include dirs to the target\n",
        "Line" : 305,
        "CharPositionInLine" : 6
      },
      "24" : {
        "Text" : "# Set the output directory for the plugin\n",
        "Line" : 331,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Put plug-ins by default into a \"plugins\" subdirectory\n",
        "Line" : 340,
        "CharPositionInLine" : 6
      },
      "26" : {
        "Text" : "# Test plug-ins will always be put in a separate directory\n",
        "Line" : 353,
        "CharPositionInLine" : 6
      },
      "27" : {
        "Text" : "# Apply properties to the library target.\n",
        "Line" : 365,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# Install rules\n",
        "Line" : 375,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# add stack smash protection lib\n",
        "Line" : 387,
        "CharPositionInLine" : 29
      },
      "30" : {
        "Text" : "# Install headers\n",
        "Line" : 401,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 31
    },
    "CMake/ctkMacroBuildQtPlugin.cmake" : {
      "ObjectId" : "00af36bd800d8e86134fd4f4f6d8cef720285f28",
      "LastModified" : "2018-06-04T00:26:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################################\n\n#\n\n#  Library:   CTK\n\n#\n\n#  Copyright (c) Kitware Inc.\n\n#\n\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n\n#  you may not use this file except in compliance with the License.\n\n#  You may obtain a copy of the License at\n\n#\n\n#      http://www.apache.org/licenses/LICENSE-2.0.txt\n\n#\n\n#  Unless required by applicable law or agreed to in writing, software\n\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n#  See the License for the specific language governing permissions and\n\n#  limitations under the License.\n\n#\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Depends on:\n\n#  cmake_parse_arguments ( >= CMake 2.8.3)\n\n#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#! \\ingroup CMakeAPI\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# no options\n",
        "Line" : 29,
        "CharPositionInLine" : 7
      },
      "4" : {
        "Text" : "# one value args\n",
        "Line" : 30,
        "CharPositionInLine" : 46
      },
      "5" : {
        "Text" : "# multi value args\n",
        "Line" : 31,
        "CharPositionInLine" : 76
      },
      "6" : {
        "Text" : "# Sanity checks\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Define library name\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# Include dirs\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Add the include directories from the library dependencies\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Make sure variable are cleared\n",
        "Line" : 83,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Wrap\n",
        "Line" : 88,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Extract library name associated with the plugin and use it as label\n",
        "Line" : 135,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Apply properties to the library target.\n",
        "Line" : 138,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Install the library\n\n# CTK_INSTALL_QTPLUGIN_DIR:STRING can be passed when configuring CTK\n\n# By default, it is the same path as CTK_INSTALL_LIB_DIR\n\n# Plugins are installed in a subdirectory corresponding to their types (e.g. designer, iconengines, imageformats...)\n",
        "Line" : 159,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Install headers - Are headers required ?\n\n#file(GLOB headers \"${CMAKE_CURRENT_SOURCE_DIR}/*.h\")\n\n#install(FILES\n\n#  ${headers}\n\n#  DESTINATION ${CTK_INSTALL_INCLUDE_DIR} COMPONENT Development\n\n#  )\n",
        "Line" : 169,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Since Qt expects plugins to be directly located under the\n\n# subdirectory (e.g. 'designer') but not deeper (e.g. designer/Debug), let's copy them.\n",
        "Line" : 177,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# no options\n",
        "Line" : 203,
        "CharPositionInLine" : 9
      },
      "18" : {
        "Text" : "# one value args\n",
        "Line" : 204,
        "CharPositionInLine" : 48
      },
      "19" : {
        "Text" : "# multi value args\n",
        "Line" : 205,
        "CharPositionInLine" : 78
      },
      "CommentCount" : 20
    },
    "CMake/ctkMacroCheckExternalProjectDependency.cmake" : {
      "ObjectId" : "3a526764d704085f9de3544b924ffce7c0f8000d",
      "LastModified" : "2018-06-04T00:26:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# ExternalProjectDependency\n\n# -------------------------\n\n#\n\n# .. only:: html\n\n#\n\n#    .. contents::\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###########################################################################\n\n#\n\n#  Library:   CTK\n\n#\n\n#  Copyright (c) Kitware Inc.\n\n#\n\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n\n#  you may not use this file except in compliance with the License.\n\n#  You may obtain a copy of the License at\n\n#\n\n#      http://www.apache.org/licenses/LICENSE-2.0.txt\n\n#\n\n#  Unless required by applicable law or agreed to in writing, software\n\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n#  See the License for the specific language governing permissions and\n\n#  limitations under the License.\n\n#\n\n###########################################################################\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#.rst:\n\n# Global Variables\n\n# ^^^^^^^^^^^^^^^^\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#.rst:\n\n# .. cmake:variable:: EXTERNAL_PROJECT_DIR\n\n#\n\n# This variable describes the directory in which external project files\n\n# matching ``<EXTERNAL_PROJECT_FILE_PREFIX><projectname>.cmake`` expression are globbed.\n\n#\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#.rst:\n\n# .. cmake:variable:: EXTERNAL_PROJECT_ADDITIONAL_DIR\n\n#\n\n# If set, this variable represents an other directory in which external project files\n\n# are searched for if not already found in ``EXTERNAL_PROJECT_DIR``.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#.rst:\n\n# .. cmake:variable:: EXTERNAL_PROJECT_FILE_PREFIX\n\n#\n\n# This variable describes the prefix of the external project files looked up in\n\n# ``EXTERNAL_PROJECT_DIR``. It defaults to ``External_``.\n\n#\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#.rst:\n\n# .. cmake:variable:: SUPERBUILD_TOPLEVEL_PROJECT\n\n#\n\n# This variable can be set to explicitly identify the name of the top-level project.\n\n# If not set, it default to the value of ``CMAKE_PROJECT_NAME``.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#.rst:\n\n# .. cmake:variable:: EP_LIST_SEPARATOR\n\n#\n\n# This variable is used to separate list items when passed in various external project\n\n# ``..._COMMAND`` options.\n\n#\n\n# If defaults to ``^^``.\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#.rst:\n\n# .. cmake:variable:: EP_GIT_PROTOCOL\n\n#\n\n# The value of this variable is controled by the option ``<SUPERBUILD_TOPLEVEL_PROJECT>_USE_GIT_PROTOCOL``\n\n# automatically defined by including this CMake module. Setting this option allows to update the value of\n\n# ``EP_GIT_PROTOCOL`` variable.\n\n#\n\n# If enabled, the variable ``EP_GIT_PROTOCOL`` is set to ``git``. Otherwise, it is set to ``https``.\n\n# The option is enabled by default.\n\n#\n\n# The variable ``EP_GIT_PROTOCOL`` can be used when adding external project. For example:\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#   ExternalProject_Add(${proj}\n\n#     ${${proj}_EP_ARGS}\n\n#     GIT_REPOSITORY \"${EP_GIT_PROTOCOL}://github.com/Foo/Foo.git\"\n\n#     [...]\n\n#     )\n\n#\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Compute -G arg for configuring external projects with the same CMake generator:\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#.rst:\n\n# Functions\n\n# ^^^^^^^^^\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#.rst:\n\n# .. cmake:function:: mark_as_superbuild\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#  mark_as_superbuild(<varname1>[:<vartype1>] [<varname2>[:<vartype2>] [...]])\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#  mark_as_superbuild(\n\n#      VARS <varname1>[:<vartype1>] [<varname2>[:<vartype2>] [...]]\n\n#      [PROJECTS <projectname> [<projectname> [...]] | ALL_PROJECTS]\n\n#      [LABELS <label1> [<label2> [...]]]\n\n#    )\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#  PROJECTS corresponds to a list of <projectname> that will be added using 'ExternalProject_Add' function.\n\n#           If not specified and called within a project file, it defaults to the value of 'SUPERBUILD_TOPLEVEL_PROJECT'.\n\n#           If instead 'ALL_PROJECTS' is specified, the variables and labels will be passed to all projects.\n\n#\n\n#  VARS is an expected list of variables specified as <varname>:<vartype> to pass to <projectname>\n\n#\n\n#\n\n#  LABELS is an optional list of label to associate with the variable names specified using 'VARS' and passed to\n\n#         the <projectname> as CMake CACHE args of the form:\n\n#           -D<projectname>_EP_LABEL_<label1>=<varname1>;<varname2>[...]\n\n#           -D<projectname>_EP_LABEL_<label2>=<varname1>;<varname2>[...]\n\n#\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# XXX Display warning with variable type is also specified for cache variable.\n",
        "Line" : 180,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "#\n\n#  _sb_extract_varname_and_vartype(<cmake_varname_and_type> <varname_var> [<vartype_var>])\n\n#\n\n#  <cmake_varname_and_type> corresponds to variable name and variable type passed as \"<varname>:<vartype>\"\n\n#\n\n#  <varname_var> will be set to \"<varname>\"\n\n#\n\n#  <vartype_var> is an optional variable name that will be set to \"<vartype>\"\n\n#\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Get list length\n",
        "Line" : 227,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# If the list has 0 or 1 element, there is no need to loop over.\n",
        "Line" : 229,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Get current item_value\n",
        "Line" : 235,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# .. and append non-empty value to output string\n",
        "Line" : 238,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# Append separator if current element is NOT the last one.\n",
        "Line" : 240,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "#\n\n#  _sb_cmakevar_to_cmakearg(<cmake_varname_and_type> <cmake_arg_var> <has_cfg_intdir_var> [<varname_var> [<vartype_var>]])\n\n#\n\n#  <cmake_varname_and_type> corresponds to variable name and variable type passed as \"<varname>:<vartype>\"\n\n#\n\n#  <cmake_arg_var> is a variable name that will be set to \"-D<varname>:<vartype>=${<varname>}\"\n\n#\n\n#  <has_int_dir_var> is set to either TRUE or FALSE.\n\n#                      FALSE means that the value does NOT reference ${CMAKE_CFG_INTDIR} and\n\n#                      the generated cmake argument should be passed to ExternalProject_Add as CMAKE_CACHE_ARGS.\n\n#                      TRUEmeans that the value does reference ${CMAKE_CFG_INTDIR} and\n\n#                      the generated cmake argument should be passed to ExternalProject_Add as CMAKE_ARGS.\n\n#\n\n#  <varname_var> is an optional variable name that will be set to \"<varname>\"\n\n#\n\n#  <vartype_var> is an optional variable name that will be set to \"<vartype>\"\n\n#\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Use cache value unless it is INTERNAL\n",
        "Line" : 275,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# Separate list item with <EP_LIST_SEPARATOR>\n",
        "Line" : 289,
        "CharPositionInLine" : 6
      },
      "22" : {
        "Text" : "#\n\n#  _sb_append_to_cmake_args(\n\n#      [VARS <varname1>:<vartype1> [<varname2>:<vartype2> [...]]]\n\n#      [PROJECTS <projectname> [<projectname> [...]] | ALL_PROJECTS]\n\n#      [LABELS <label1> [<label2> [...]]]\n\n#    )\n\n#\n\n#  PROJECTS corresponds to a list of <projectname> that will be added using 'ExternalProject_Add' function.\n\n#           If not specified and called within a project file, it defaults to the value of 'SUPERBUILD_TOPLEVEL_PROJECT'.\n\n#           If instead 'ALL_PROJECTS' is specified, the variables and labels will be passed to all projects.\n\n#\n\n#  VARS is an expected list of variables specified as <varname>:<vartype> to pass to <projectname>\n\n#\n\n#\n\n#  LABELS is an optional list of label to associate with the variable names specified using 'VARS' and passed to\n\n#         the <projectname> as CMake CACHE args of the form:\n\n#           -D<projectname>_EP_LABEL_<label1>=<varname1>;<varname2>[...]\n\n#           -D<projectname>_EP_LABEL_<label2>=<varname1>;<varname2>[...]\n\n#\n",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#.rst:\n\n# .. cmake:function:: ExternalProject_DeclareLabels\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#  ExternalProject_DeclareLabels(\n\n#      [PROJECTS <projectname> [<projectname> [...]] | ALL_PROJECTS]\n\n#      LABELS <label1> [<label2> [...]]\n\n#    )\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#  PROJECTS corresponds to a list of <projectname> that will be added using 'ExternalProject_Add' function.\n\n#           If not specified and called within a project file, it defaults to the value of 'SUPERBUILD_TOPLEVEL_PROJECT'.\n\n#           If instead 'ALL_PROJECTS' is specified, the variables and labels will be passed to all projects.\n\n#\n\n#  LABELS is a list of label to pass to the <projectname> as CMake CACHE args of the\n\n#           form -D<projectname>_EP_LABEL_<label>= unless specific variables\n\n#           have been associated with the labels using mark_as_superbuild.\n\n#\n",
        "Line" : 367,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Set list of CMake args associated with each label\n",
        "Line" : 412,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# Automatically propagate CMake options\n",
        "Line" : 443,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# USES_TERMINAL_* options were introduced in CMake 3.4\n",
        "Line" : 475,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "#.rst:\n\n# .. cmake:function:: ExternalProject_Message\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#  ExternalProject_Message(<project_name> <msg> [condition])\n\n#\n",
        "Line" : 496,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#\n\n#  superbuild_stack_content(<stack_name> <output_var>)\n\n#\n\n#  <stack_name> corresponds to the name of stack.\n\n#\n\n#  <output_var> is the name of CMake variable that will be set with the content\n\n#  of the stack identified by <stack_name>.\n\n#\n",
        "Line" : 514,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#\n\n#  superbuild_stack_size(<stack_name> <output_var>)\n\n#\n\n#  <stack_name> corresponds to the name of stack.\n\n#\n\n#  <output_var> is the name of CMake variable that will be set with the size\n\n#  of the stack identified by <stack_name>.\n\n#\n",
        "Line" : 527,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#\n\n#  superbuild_stack_push(<stack_name> <value>)\n\n#\n\n#  <stack_name> corresponds to the name of stack.\n\n#\n\n#  <value> is appended to the stack identified by <stack_name>.\n\n#\n",
        "Line" : 541,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#\n\n#  superbuild_stack_pop(<stack_name> <item_var>)\n\n#\n\n#  <stack_name> corresponds to the name of stack.\n\n#\n\n#  <item_var> names a CMake variable that will be set with the item\n\n#  removed from the stack identified by <stack_name>\n\n#\n",
        "Line" : 552,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#.rst:\n\n# .. cmake:function:: ExternalProject_Include_Dependencies\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#  ExternalProject_Include_Dependencies(<project_name>\n\n#      [PROJECT_VAR <project_var>]\n\n#      [EP_ARGS_VAR <external_project_args_var>]\n\n#      [DEPENDS_VAR <depends_var>]\n\n#      [USE_SYSTEM_VAR <use_system_var>]\n\n#      [SUPERBUILD_VAR <superbuild_var>]\n\n#      [CMAKE_GENERATOR <cmake_generator>]\n\n#      [CMAKE_GENERATOR_PLATFORM <cmake_generator_platform>]\n\n#      [CMAKE_GENERATOR_TOOLSET <cmake_generator_toolset>]\n\n#    )\n\n#\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#  PROJECT_VAR Name of the variable containing the name of the included project.\n\n#              By default, it is `proj` and it is set to `<project_name>`.\n\n#\n\n#  EP_ARGS_VAR Name of the variable listing arguments to pass to ExternalProject.\n\n#              If not specified, variable name default to `<project_name>_EP_ARGS`.\n\n#\n\n#  DEPENDS_VAR Name of the variable containing the dependency of the included project.\n\n#              By default, it is `<project_name>_DEPENDS`.\n\n#\n\n#\n\n#  USE_SYSTEM_VAR Name of the variable indicating if the system version of <project_name>\n\n#                 should be looked up. Lookup of the project is left to the developer implementing\n\n#                 the external project file.\n\n#                 By default, it is `<SUPERBUILD_TOPLEVEL_PROJECT>_USE_SYSTEM_<project_name>`.\n\n#\n\n#  SUPERBUILD_VAR Name of the variable indicating if the top-level or inner project is being built.\n\n#                 By default, it is `<SUPERBUILD_TOPLEVEL_PROJECT>_SUPERBUILD`.\n\n#\n\n#\n\n#  CMAKE_GENERATOR\n\n#  CMAKE_GENERATOR_PLATFORM\n\n#  CMAKE_GENERATOR_TOOLSET These three options allow to overwrite the values set in the top-level project that\n\n#                          would otherwise automatically be propagated to dependent projects.\n\n#\n",
        "Line" : 584,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Sanity checks\n",
        "Line" : 637,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# Set default for optional PROJECT_VAR parameter\n",
        "Line" : 653,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "#message(\"[${project_name}] Setting _sb_PROJECT_VAR with default value '${_sb_PROJECT_VAR}'\")\n",
        "Line" : 657,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# Skip if project already included\n",
        "Line" : 667,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# Set default for optional DEPENDS_VAR and EP_ARGS parameters\n",
        "Line" : 673,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "#message(\"[${project_name}] Setting _sb_${param}_VAR with default value '${_sb_${param}_VAR}'\")\n",
        "Line" : 677,
        "CharPositionInLine" : 6
      },
      "39" : {
        "Text" : "# Set top level project\n",
        "Line" : 681,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# Set default for optional USE_SYSTEM_VAR parameter\n",
        "Line" : 687,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "#message(\"[${project_name}] Setting _sb_USE_SYSTEM_VAR with default value '${_sb_USE_SYSTEM_VAR}'\")\n",
        "Line" : 690,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "# Set default for optional SUPERBUILD_VAR parameter\n",
        "Line" : 693,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "#message(\"[${project_name}] Setting _sb_SUPERBUILD_VAR with default value '${_sb_SUPERBUILD_VAR}'\")\n",
        "Line" : 696,
        "CharPositionInLine" : 4
      },
      "44" : {
        "Text" : "# Set default for optional CMAKE_GENERATOR_* parameters\n",
        "Line" : 699,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "#message(\"[${project_name}] Setting _sb_${varname} with default value '${_sb_${varname}}'\")\n",
        "Line" : 707,
        "CharPositionInLine" : 6
      },
      "46" : {
        "Text" : "#message(\"[${project_name}] Setting _sb_${varname} to value '${_sb_${varname}}'\")\n",
        "Line" : 709,
        "CharPositionInLine" : 6
      },
      "47" : {
        "Text" : "# Keeping track of variable name independently of the recursion\n",
        "Line" : 713,
        "CharPositionInLine" : 2
      },
      "48" : {
        "Text" : "#message(\"[${project_name}] Setting _sb_SB_VAR with default value '${_sb_SB_VAR}'\")\n",
        "Line" : 716,
        "CharPositionInLine" : 4
      },
      "49" : {
        "Text" : "# Set local variables\n",
        "Line" : 719,
        "CharPositionInLine" : 2
      },
      "50" : {
        "Text" : "# Keep track of the projects\n",
        "Line" : 725,
        "CharPositionInLine" : 2
      },
      "51" : {
        "Text" : "# Use system ?\n",
        "Line" : 728,
        "CharPositionInLine" : 2
      },
      "52" : {
        "Text" : "# Is this the first run ?\n",
        "Line" : 734,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "# Set \"use system\" variable if it has NOT already been explicitly set\n",
        "Line" : 743,
        "CharPositionInLine" : 6
      },
      "54" : {
        "Text" : "#message(${_sb_proj} \"Property SB_${dep}_USE_SYSTEM set to [${_sb_USE_SYSTEM_VAR}:${_sb_USE_SYSTEM}]\")\n",
        "Line" : 747,
        "CharPositionInLine" : 8
      },
      "55" : {
        "Text" : "#message(${_sb_proj} \"[${_sb_proj}] Property SB_${dep}_OPTIONAL set to ${_optional}\")\n",
        "Line" : 752,
        "CharPositionInLine" : 4
      },
      "56" : {
        "Text" : "# Display dependency of project being processed\n",
        "Line" : 758,
        "CharPositionInLine" : 2
      },
      "57" : {
        "Text" : "# Save variables\n",
        "Line" : 772,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# Include dependencies\n",
        "Line" : 789,
        "CharPositionInLine" : 2
      },
      "59" : {
        "Text" : "# XXX - Refactor - Add a single variable named 'EXTERNAL_PROJECT_DIRS'\n",
        "Line" : 793,
        "CharPositionInLine" : 6
      },
      "60" : {
        "Text" : "# Restore variables\n",
        "Line" : 807,
        "CharPositionInLine" : 2
      },
      "61" : {
        "Text" : "# Use system ?\n",
        "Line" : 824,
        "CharPositionInLine" : 2
      },
      "62" : {
        "Text" : "#ExternalProject_Message(${_sb_proj} \"Clean up\")\n",
        "Line" : 882,
        "CharPositionInLine" : 4
      },
      "63" : {
        "Text" : "# Set public variables\n",
        "Line" : 888,
        "CharPositionInLine" : 2
      },
      "64" : {
        "Text" : "#message(\"[${_sb_proj}] #################################\")\n\n#message(\"[${_sb_proj}] Setting ${_sb_PROJECT_VAR}:${_sb_proj}\")\n\n#message(\"[${_sb_proj}] Setting ${_sb_EP_ARGS_VAR}:${${_sb_EP_ARGS_VAR}}\")\n\n#message(\"[${_sb_proj}] Setting ${_sb_DEPENDS_VAR}:${${_sb_DEPENDS_VAR}}\")\n\n#message(\"[${_sb_proj}] Setting ${_sb_USE_SYSTEM_VAR}:${_sb_USE_SYSTEM}\")\n",
        "Line" : 893,
        "CharPositionInLine" : 2
      },
      "65" : {
        "Text" : "#.rst:\n\n# .. cmake:function:: ExternalProject_Add_Empty\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#  ExternalProject_Add_Empty(<project_name>\n\n#      DEPENDS <depends>\n\n#    )\n\n#\n",
        "Line" : 900,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# Sanity checks\n",
        "Line" : 915,
        "CharPositionInLine" : 2
      },
      "67" : {
        "Text" : "#.rst:\n\n# .. cmake:function:: ExternalProject_Install_CMake\n\n#\n\n# Install an external CMake-based project as part of the ``install`` target.\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#  ExternalProject_Install_CMake(<project_name>)\n\n#\n\n# This causes building the main project's ``install`` target to also execute\n\n# the CMake install script for the specified external project. The project must\n\n# be previously declared with :command:`ExternalProject_Add`.\n\n#\n",
        "Line" : 934,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "#.rst:\n\n# .. cmake:function:: ExternalProject_SetIfNotDefined\n\n#\n\n# Set a variable to its default value if not already defined.\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#  ExternalProject_SetIfNotDefined(<var> <defaultvalue> [OBFUSCATE] [QUIET])\n\n#\n\n# The default value is set with:\n\n#  (1) if set, the value environment variable <var>.\n\n#  (2) if set, the value of local variable variable <var>.\n\n#  (3) if none of the above, the value passed as a parameter.\n\n#\n\n# Setting the optional parameter 'OBFUSCATE' will display 'OBFUSCATED' instead of the real value.\n\n# Setting the optional parameter 'QUIET' will not display any message.\n",
        "Line" : 953,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "#.rst:\n\n# .. cmake:function:: ExternalProject_AlwaysConfigure\n\n#\n\n# Add a external project step named `forceconfigure` to `project_name` ensuring\n\n# the project will always be reconfigured.\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#  ExternalProject_AlwaysConfigure(<project_name>)\n",
        "Line" : 1002,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# This custom external project step forces the configure and later\n\n# steps to run.\n",
        "Line" : 1012,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 71
    },
    "CMake/ctkMacroCompilePythonScript.cmake" : {
      "ObjectId" : "f6f83699eea8279eb9244732283114a4eac4ccd8",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Based on ParaView/VTK/Utilities/vtkTclTest2Py/CMakeLists.txt and\n\n#          ParaView/VTK/Wrapping/Python/CMakeLists.txt\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# By globally defining the variable CTK_COMPILE_PYTHON_SCRIPTS_GLOBAL_TARGET_NAME to a \n\n# non-empty string or by specifying the macro option 'GLOBAL_TARGET', \n\n# the following targets will be defined for the whole build system:\n\n#  - Copy<GLOBAL_TARGET_NAME>PythonResourceFiles\n\n#  - Copy<GLOBAL_TARGET_NAME>PythonScriptFiles\n\n#  - Compile<GLOBAL_TARGET_NAME>PythonFiles\n\n#\n\n# For complex projects, this can help reducing the number of targets and\n\n# simplify the manual rebuild of copy and compile targets.\n\n#\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#! \\ingroup CMakeAPI\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Sanity checks\n",
        "Line" : 32,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Since 'add_custom_command' doesn't play nicely with path having multiple\n\n# consecutive slashes. Let's make sure there are no trailing slashes.\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Append \"py\" extension if needed\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Install python module / resources directory\n",
        "Line" : 95,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# 'type' is expected to be either \"Resource\" or \"Script\"\n",
        "Line" : 107,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Byte compile the Python files.\n",
        "Line" : 137,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Extract python lib path\n",
        "Line" : 154,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Configure cmake script associated with the custom command\n\n# required to properly update the library path with PYTHON_LIBRARY_PATH\n",
        "Line" : 157,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 11
    },
    "CMake/ctkMacroGenerateMocs.cmake" : {
      "ObjectId" : "14cac68af201a9ad0f5ea1b4b569250111ddc812",
      "LastModified" : "2018-06-04T00:26:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# QT4_GENERATE_MOCS(inputfile1 [inputfile2 ...])\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# create a Qt5 alias\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMake/ctkMacroGeneratePluginResourceFile.cmake" : {
      "ObjectId" : "29fcf832686feb259d89c89826bf3454f84a825a",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Depends on:\n\n#  CTK/CMake/ctkMacroParseArguments.cmake\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#! \\ingroup CMakeUtilities\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMake/ctkMacroListFilter.cmake" : {
      "ObjectId" : "dd3c445702825780ffe5e7f3d08d464ca8c858b5",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#! See http://www.cmake.org/Wiki/CMakeMacroListOperations#LIST_FILTER\n\n#!\n\n#! Usage:\n\n#! \\code\n\n#! ctkMacroListFilter(<list> <regexp_var> [<regexp_var> ...]\n\n#!                    [OUTPUT_VARIABLE <variable>])\n\n#! \\endcode\n\n#!\n\n#! Removes items from <list> which do not match any of the specified\n\n#! regular expressions. An optional argument OUTPUT_VARIABLE\n\n#! specifies a variable in which to store the matched items instead of\n\n#! updating <list>\n\n#! As regular expressions can not be given to macros (see bug #5389), we pass\n\n#! variable names whose content is the regular expressions.\n\n#! Note that this macro requires PARSE_ARGUMENTS macro, available here:\n\n#! http://www.cmake.org/Wiki/CMakeMacroParseArguments\n\n#!\n\n#! \\ingroup CMakeUtilities\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check arguments.\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Reset output variable\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Extract input list from arguments\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# If OUTPUT_VARIABLE is not specified, overwrite the input list.\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "CMake/ctkMacroOptionUtils.cmake" : {
      "ObjectId" : "4e716cc551905f705e61e0f85df34ff9ae7b7966",
      "LastModified" : "2018-06-04T00:26:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set the variable ON.\n",
        "Line" : 25,
        "CharPositionInLine" : 6
      },
      "1" : {
        "Text" : "# Generate user-friendly message\n",
        "Line" : 27,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 2
    },
    "CMake/ctkMacroParseArguments.cmake" : {
      "ObjectId" : "446f056124005c93167ddb60192839743271384a",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#!\n\n#! See http://www.cmake.org/Wiki/CMakeMacroParseArguments\n\n#!\n\n#! \\ingroup CMakeUtilities\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/ctkMacroSetPaths.cmake" : {
      "ObjectId" : "d5b907dd4f170a31a32ddf5ec2cc1a8b1936b4ae",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################################\n\n#\n\n#  Library:   CTK\n\n#\n\n#  Copyright (c) Kitware Inc.\n\n#\n\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n\n#  you may not use this file except in compliance with the License.\n\n#  You may obtain a copy of the License at\n\n#\n\n#      http://www.apache.org/licenses/LICENSE-2.0.txt\n\n#\n\n#  Unless required by applicable law or agreed to in writing, software\n\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n#  See the License for the specific language governing permissions and\n\n#  limitations under the License.\n\n#\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#!\n\n#! Depending on the platform, either PATH, LD_LIBRARY_PATH or DYLD_LIBRARY_PATH\n\n#! will be updated using the paths specified using PATH_LIST\n\n#!\n\n#! \\ingroup CMakeUtilities\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMake/ctkMacroSetupPlugins.cmake" : {
      "ObjectId" : "b09ed84c505a3edd94071a2e31f3483beb7910ad",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################################\n\n#\n\n#  Library: CTK\n\n#\n\n#  Copyright (c) German Cancer Research Center,\n\n#    Division of Medical and Biological Informatics\n\n#\n\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n\n#  you may not use this file except in compliance with the License.\n\n#  You may obtain a copy of the License at\n\n#\n\n#    http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n#  Unless required by applicable law or agreed to in writing, software\n\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n#  See the License for the specific language governing permissions and\n\n#  limitations under the License.\n\n#\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#! This is the main macro to set up your CTK plug-ins inside your own CMake project.\n\n#!\n\n#! This macro takes care of validating the current set of plug-in build options,\n\n#! enables and/or checks required plug-ins and handles all aspects of plug-in\n\n#! dependencies. Additionally, it calls add_subdirectory() on each given plug-in.\n\n#!\n\n#! Macro signature:\n\n#! \\code\n\n#! ctkMacroSetupPlugins(plugins...\n\n#!                      [BUILD_OPTION_PREFIX <option_prefix>]\n\n#!                      [APPS <apps...>]\n\n#!                      [BUILD_ALL <build_all_flag>]\n\n#!                      [COMPACT_OPTIONS])\n\n#! \\endcode\n\n#!\n\n#! \\param plugins (required) A list of directories (absolute or relative to the current\n\n#!        source dir) with default build options. E.g. an item of the list may look like\n\n#!        \"Plugins/org.myproject.example:ON\"\n\n#! \\param BUILD_OPTION_PREFIX (optional) The prefix to use for the build option of th\n\n#!        plug-in. Defaults to \"BUILD_\".\n\n#! \\param APPS (optional) A list of directories with build option names containing\n\n#!        CTK-style applications. This can be used to automatically enable plug-ins\n\n#!        required by the application. The application directoy must contain a CMakeLists.txt\n\n#!        file containing a \"project(...)\" command and a target_libraries.cmake file\n\n#!        containing a list of required plug-in targets, e.g. \"set(target_libraries org_myproject_example)\".\n\n#!        An item of the list may look like \"Apps/MyExampleApp^^BUILD_APP_MyExampleApp\" where\n\n#!        Apps/MyExampleApp is the directory containing the applicatios CMakeLists.txt file\n\n#!        and BUILD_APP_MyExampleApp is the build option used to conditionally build the app.\n\n#! \\param BUILD_ALL (optional) If the build_all_flag is true, all entries in the plugins list\n\n#!        will be enabled (but their build option will not be forced to change). Default is OFF\n\n#! \\param COMPACT_OPTIONS (optional) If this flag is given, the created build options for the\n\n#!        plugins will not contain the relative path but just the last directory entry which\n\n#!        usually is the plug-in symbolic name.\n\n#!\n\n#! Example invocation:\n\n#!\n\n#! \\code\n\n#! set(plugin_list Plugins/org.myproject.example:OFF)\n\n#! set(app_list Apps/MyExampleApp^^MYPROJECT_BUILD_MyExampleApp)\n\n#!\n\n#! ctkMacroSetupPlugins(${plugin_list}\n\n#!                      BUILD_OPTION_PREFIX MYPROJECT_BUILD_\n\n#!                      APPS ${app_list}\n\n#!                      COMPACT_OPTIONS\n\n#!                     )\n\n#! \\endcode\n\n#!\n\n#! \\ingroup CMakeAPI\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check if this is the first invocation of this macro\n",
        "Line" : 92,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Clear the internal cache variable containing all enabled plug-in targets\n\n# This variable will be set in ctkMacroBuildPlugin\n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Add the project specific variable name containing plug-in targets to the list\n",
        "Line" : 100,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Set up Qt, if not already done\n\n#if(NOT QT4_FOUND)\n\n#  set(minimum_required_qt_version \"4.6\")\n\n#  find_package(Qt4 REQUIRED)\n",
        "Line" : 104,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#  if(\"${QT_VERSION_MAJOR}.${QT_VERSION_MINOR}\" VERSION_LESS \"${minimum_required_qt_version}\")\n\n#    message(FATAL_ERROR \"error: CTK requires Qt >= ${minimum_required_qt_version} -- you cannot use Qt ${QT_VERSION_MAJOR}.${QT_VERSION_MINOR}.${QT_VERSION_PATCH}.\")\n\n#  endif()\n\n#endif()\n",
        "Line" : 109,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Set the variable QT_INSTALLED_LIBRARY_DIR that contains all\n\n# Qt shared libraries\n",
        "Line" : 114,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Check if the plugin symbolic names are valid for the current project\n",
        "Line" : 146,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# This variable may have the form \"Plugins/org.commontk.bla_option_name\"\n",
        "Line" : 165,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Additionally create a variable of the form \"org_commontk_bla_option_name\"\n",
        "Line" : 167,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Get plugin info from possible previous invocations of this macro for\n\n# validation purposes below\n",
        "Line" : 184,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Fill the CTK_EXTERNAL_PLUGIN_LIBRARIES variable with external plug-in target names.\n\n# It will be used in ctkMacroValidateBuildOptions to be able to validate agains plug-ins\n\n# from external projects.\n",
        "Line" : 188,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Record the current set of plug-ins and their option names\n",
        "Line" : 199,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Get the gcc version (GCC_VERSION will be empty if the compiler is not gcc).\n\n# This will be used in the ctkMacroBuildPlugin macro to conditionally set compiler flags.\n",
        "Line" : 202,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# get last directory component\n",
        "Line" : 209,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 16
    },
    "CMake/ctkMacroSetupQt.cmake" : {
      "ObjectId" : "3c69c3677d345f41dcd56d344576755180efa79a",
      "LastModified" : "2018-08-29T15:46:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################################\n\n#\n\n#  Library:   CTK\n\n#\n\n#  Copyright (c) Kitware Inc.\n\n#\n\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n\n#  you may not use this file except in compliance with the License.\n\n#  You may obtain a copy of the License at\n\n#\n\n#      http://www.apache.org/licenses/LICENSE-2.0.txt\n\n#\n\n#  Unless required by applicable law or agreed to in writing, software\n\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n#  See the License for the specific language governing permissions and\n\n#  limitations under the License.\n\n#\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#! \\ingroup CMakeUtilities\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Qt 5\n",
        "Line" : 52,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "# XXX Backward compatible way\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Qt 5\n",
        "Line" : 56,
        "CharPositionInLine" : 44
      },
      "5" : {
        "Text" : "# Set variable QT_INSTALLED_LIBRARY_DIR that will contains\n\n# Qt shared library\n",
        "Line" : 78,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# Qt 4\n",
        "Line" : 85,
        "CharPositionInLine" : 46
      },
      "CommentCount" : 7
    },
    "CMake/ctkMacroSimpleTest.cmake" : {
      "ObjectId" : "fe2e449160e3863f02273cf9624080c7a9bde3cf",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#! Usage:\n\n#! \\code\n\n#! SIMPLE_TEST(<testname> [argument1 ...])\n\n#! \\endcode\n\n#!\n\n#! This macro add a test using the complete add_test signature specifying target using \n\n#! $<TARGET_FILE:...> generator expression. Optionnal test argument(s) can be passed\n\n#! after specifying the <testname>.\n\n#!\n\n#! Variable named KIT is expected to be defined in the current scope. KIT variable usually \n\n#! matches the value of PROJECT_NAME.\n\n#!\n\n#! The macro also associates a label to the test based on the current value of KIT.\n\n#!\n\n#! \\sa http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:add_test\n\n#! \\sa http://www.cmake.org/cmake/help/cmake-2-8-docs.html#variable:PROJECT_NAME\n\n#!\n\n#! \\ingroup CMakeUtilities\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/ctkMacroSimpleTestWithData.cmake" : {
      "ObjectId" : "de18a76a24845bd73572f60ed7561d9720009d6c",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#! Usage:\n\n#! \\code\n\n#! SIMPLE_TEST_WITH_DATA(<testname> <baseline_relative_location> [argument1 ...])\n\n#! \\endcode\n\n#!\n\n#! This macro add a test using the complete add_test signature specifying target using \n\n#! $<TARGET_FILE:...> generator expression. Optionnal test argument(s) can be passed\n\n#! after specifying the <testname>.\n\n#!\n\n#! <baseline_relative_location> parameter should corresponds to a subfolder located in <CTKData_DIR>/Baseline\n\n#!\n\n#! Variables named KIT and CTKData_DIR are expected to be defined in the current scope.\n\n#!\n\n#! KIT variable usually matches the value of PROJECT_NAME.\n\n#!\n\n#! The macro also associates a label to the test based on the current value of KIT.\n\n#!\n\n#! By default, the name of the test to execute is expected to match <testname>, setting\n\n#! variable <testname>_TEST allows to change that.\n\n#!\n\n#! The following parameter will be passed to the test:\n\n#! <ul>\n\n#!   <li>-D <CTKData_DIR>/Data</li>\n\n#!   <li>-V <CTKData_DIR>/Baseline/<baseline_relative_location></li>\n\n#!   <li>-T <PROJECT_BINARY_DIR>/Testing/Temporary</li>\n\n#! </ul>\n\n#!\n\n#! \\sa http://www.cmake.org/cmake/help/cmake-2-8-docs.html#command:add_test\n\n#! \\sa http://www.cmake.org/cmake/help/cmake-2-8-docs.html#variable:PROJECT_NAME\n\n#!\n\n#! \\ingroup CMakeUtilities\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/ctkMacroTargetLibraries.cmake" : {
      "ObjectId" : "0a994c0a009f0414a15537a175a48187876b26ea",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################################\n\n#\n\n#  Library:   CTK\n\n#\n\n#  Copyright (c) Kitware Inc.\n\n#\n\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n\n#  you may not use this file except in compliance with the License.\n\n#  You may obtain a copy of the License at\n\n#\n\n#      http://www.apache.org/licenses/LICENSE-2.0.txt\n\n#\n\n#  Unless required by applicable law or agreed to in writing, software\n\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n#  See the License for the specific language governing permissions and\n\n#  limitations under the License.\n\n#\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#!\n\n#! This macro could be invoked using two different signatures:\n\n#!   ctkFunctionGetTargetLibraries(TARGET_LIBS)\n\n#! or\n\n#!   ctkFunctionGetTargetLibraries(TARGET_LIBS \"/path/to/ctk_target_dir\")\n\n#!\n\n#! Without specifying the second argument, the current folder will be used.\n\n#!\n\n#! \\ingroup CMakeUtilities\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check if \"target_libraries.cmake\" or \"manifest_headers.cmake\" file exists\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Make sure the variable is cleared\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Let's make sure target_libraries contains only strings\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# read content of 'filepath' into 'stringtocheck'\n",
        "Line" : 55,
        "CharPositionInLine" : 46
      },
      "6" : {
        "Text" : "# Loop over all target library, if it does *NOT* start with \"CTK\",\n\n# let's resolve the variable to access its content\n",
        "Line" : 68,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Let's make sure Require-Plugins contains only strings\n",
        "Line" : 81,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# read content of 'manifestpath' into 'stringtocheck'\n",
        "Line" : 82,
        "CharPositionInLine" : 50
      },
      "9" : {
        "Text" : "# Loop over all plugin dependencies,\n",
        "Line" : 91,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Pass the list of target libraries to the caller\n",
        "Line" : 98,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "#! \\ingroup CMakeUtilities\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#message(STATUS target:${target})\n",
        "Line" : 107,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Check if \"target_libraries.cmake\" or \"manifest_headers.cmake\" file exists\n",
        "Line" : 113,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Make sure the variable is cleared\n",
        "Line" : 118,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Let's make sure target_libraries contains only strings\n",
        "Line" : 123,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# read content of 'filepath' into 'stringtocheck'\n",
        "Line" : 124,
        "CharPositionInLine" : 46
      },
      "17" : {
        "Text" : "# Let's make sure Require-Plugins contains only strings\n",
        "Line" : 137,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# read content of 'manifestpath' into 'stringtocheck'\n",
        "Line" : 138,
        "CharPositionInLine" : 50
      },
      "19" : {
        "Text" : "# Loop over all plugin dependencies\n",
        "Line" : 147,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Pass the list of target libraries to the caller\n",
        "Line" : 158,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "#! \\ingroup CMakeUtilities\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Make sure the variable is cleared\n",
        "Line" : 178,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "#message(STATUS option_name:${option_name})\n",
        "Line" : 182,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "#message(STATUS target_dir:${target_dir})\n",
        "Line" : 189,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# Collect target libraries only if option is ON\n",
        "Line" : 193,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "#!\n\n#! Extract all library names which are build within this project\n\n#!\n\n#! \\ingroup CMakeUtilities\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Allow external projects to override the set of internal targets\n",
        "Line" : 211,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "#message(\"calling ctkMacroListFilter with varname:${varname}\")\n",
        "Line" : 219,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "#message(STATUS \"getallctklibs from ${all_target_libraries}\")\n\n#message(STATUS varname:${varname}:${${varname}})\n",
        "Line" : 221,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "#!\n\n#! Extract all library names *NOT* being build within this project\n\n#!\n\n#! \\ingroup CMakeUtilities\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#message(varname:${varname}:${${varname}})\n",
        "Line" : 237,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "#! \\ingroup CMakeUtilities\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 33
    },
    "CMake/ctkMacroValidateBuildOptions.cmake" : {
      "ObjectId" : "5487d0880e2b3ae59a2318d788b9fae2d69bd997",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################################\n\n#\n\n#  Library:   CTK\n\n#\n\n#  Copyright (c) Kitware Inc.\n\n#\n\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n\n#  you may not use this file except in compliance with the License.\n\n#  You may obtain a copy of the License at\n\n#\n\n#      http://www.apache.org/licenses/LICENSE-2.0.txt\n\n#\n\n#  Unless required by applicable law or agreed to in writing, software\n\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n#  See the License for the specific language governing permissions and\n\n#  limitations under the License.\n\n#\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#! \\ingroup CMakeUtilities\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# extract target_dir and option_name\n\n#message(\"target_info:${target_info}\")\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#! \\ingroup CMakeUtilities\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Create target_directories_with_target_name\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# extract target_dir and option_name\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#message(STATUS target_dir:${target_dir})\n\n#message(STATUS option_name:${option_name})\n\n#message(STATUS option_name-value:${${option_name}})\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# make sure the directory exists\n",
        "Line" : 63,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# extract project name from CMakeLists.txt\n",
        "Line" : 68,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#message(STATUS target_project_name:${target_project_name})\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# This is for external projects using CTK\n\n# The variable CTK_EXTERNAL_PLUGIN_LIBRARIES is filled in ctkMacroSetupExternalPlugins\n\n# with the help of variables defined in \"PluginUseFiles\" from external projects.\n",
        "Line" : 86,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# The variable CTK_LIBRARIES is set in CTKConfig.cmake\n",
        "Line" : 92,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "#message(\"Known targets: ${known_targets}\")\n",
        "Line" : 97,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# This is used in CMakeLists.txt\n",
        "Line" : 99,
        "CharPositionInLine" : 25
      },
      "14" : {
        "Text" : "# extract target_dir and option_name\n",
        "Line" : 102,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "#message(STATUS target_dir:${target_dir})\n\n#message(STATUS option_name:${option_name})\n\n#message(STATUS option_name-value:${${option_name}})\n",
        "Line" : 107,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# make sure the directory exists\n",
        "Line" : 111,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# extract project name from CMakeLists.txt\n",
        "Line" : 116,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "#message(STATUS target_project_name:${target_project_name})\n",
        "Line" : 125,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Obtain dependency path\n",
        "Line" : 127,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Set a variable for each target containing its dependencies\n\n# Needed for setting individual include directories for plugins,\n\n# depending on other plugins.\n",
        "Line" : 141,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Convert 'dep_path' to a list\n",
        "Line" : 146,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "#message(\"path for ${target_project_name} is: ${dep_path_list}\")\n",
        "Line" : 152,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# Check if all internal CTK targets included in the dependency path are enabled\n",
        "Line" : 154,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# If this macro is called from inside CTK itself, we add the external\n\n# targets to the list of known targets (for external projects calling\n\n# this macro, targets external to the calling project should be listed\n\n# in CTK_LIBRARIES or CTK_EXTERNAL_PLUGIN_LIBRARIES\n",
        "Line" : 164,
        "CharPositionInLine" : 6
      },
      "25" : {
        "Text" : "# Enable option\n",
        "Line" : 183,
        "CharPositionInLine" : 8
      },
      "26" : {
        "Text" : "# For enabled targets, check if all external targets included in the dependency path are available\n",
        "Line" : 189,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "#message(STATUS \"Validated: CTK_LIB_*, CTK_PLUGIN_*, CTK_APP_*\")\n",
        "Line" : 205,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 28
    },
    "CMake/ctkMacroWrapPythonQt.cmake" : {
      "ObjectId" : "7909f25f3a2dc8398a52616377ef5d84d246e30d",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################################\n\n#\n\n#  Library:   CTK\n\n#\n\n#  Copyright (c) Kitware Inc.\n\n#\n\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n\n#  you may not use this file except in compliance with the License.\n\n#  You may obtain a copy of the License at\n\n#\n\n#      http://www.apache.org/licenses/LICENSE-2.0.txt\n\n#\n\n#  Unless required by applicable law or agreed to in writing, software\n\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n#  See the License for the specific language governing permissions and\n\n#  limitations under the License.\n\n#\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# ctkMacroWrapPythonQt\n\n#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#!\n\n#! Depends on:\n\n#!  PythonQt\n\n#!  PythonInterp\n\n#!\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#!\n\n#! The different parameters are:\n\n#!\n\n#!    WRAPPING_NAMESPACE: Namespace that should contain the library. For example: org.commontk\n\n#!\n\n#!    TARGET ...........: Name of the wrapped library. For example: CTKWidget\n\n#!\n\n#!    SRCS_LIST_NAME ...: Name of the variable that should contain the generated wrapper source.\n\n#!                        For example: KIT_PYTHONQT_SRCS\n\n#!\n\n#!    SOURCES ..........: List of source files that should be wrapped.\n\n#!\n\n#!    HAS_DECORATOR ....: Indicate if a custom PythonQt decorator header is expected.\n\n#!\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#!\n\n#! LOG FILE:\n\n#!   File ctkMacroWrapPythonQt_log.txt will be created in the current directory.\n\n#!   It will contain the list of file and the reason why a given class hasn't been wrapped.\n\n#!\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#! \\ingroup CMakeUtilities\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Sanity check\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# TODO: this find package seems not to work when called form a superbuild, but the call is needed\n\n# in general to find the python interpreter.  In CTK, the toplevel CMakeLists.txt does the find\n\n# package so this is a no-op.  Other uses of this file may need to have this call so it is still enabled.\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# For each class\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Skip wrapping if file is NOT regular header\n",
        "Line" : 78,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# Skip wrapping if file is a pimpl header\n",
        "Line" : 88,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# Skip wrapping if file should excluded\n",
        "Line" : 98,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# if we should wrap it\n",
        "Line" : 111,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# compute the input filename\n",
        "Line" : 114,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# Convert wrapping namespace to subdir\n",
        "Line" : 125,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Define wrap type and wrap intermediate directory\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Configure 'ctkMacroWrapPythonQtModuleInit.cpp.in' using TARGET, HAS_DECORATOR and\n\n# WRAPPING_NAMESPACE_UNDERSCORE.\n",
        "Line" : 133,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Custom command allow to generate ${WRAPPING_NAMESPACE_UNDERSCORE}_${TARGET}_init.cpp and\n\n# associated wrappers ${WRAPPING_NAMESPACE_UNDERSCORE}_${TARGET}.cpp\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# The following files are generated\n",
        "Line" : 172,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Create the Init File\n",
        "Line" : 179,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "#\n\n# Let's include the headers associated with PythonQt\n\n#\n",
        "Line" : 187,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 21
    },
    "CMakeExternals/CTKData.cmake" : {
      "ObjectId" : "cb4b486b28d16dc77aa95b6740deffb51445df24",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# CTKData\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sanity checks\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMakeExternals/DCMTK.cmake" : {
      "ObjectId" : "91bb429d971a0864481e8eac73a7e02c1b90f859",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# DCMTK\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sanity checks\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# see github issue #25\n",
        "Line" : 64,
        "CharPositionInLine" : 33
      },
      "3" : {
        "Text" : "# see github issue #25\n",
        "Line" : 65,
        "CharPositionInLine" : 36
      },
      "4" : {
        "Text" : "# see github issue #25\n",
        "Line" : 66,
        "CharPositionInLine" : 32
      },
      "5" : {
        "Text" : "# see github issue #25\n",
        "Line" : 67,
        "CharPositionInLine" : 34
      },
      "6" : {
        "Text" : "# see github issue #25\n",
        "Line" : 68,
        "CharPositionInLine" : 33
      },
      "7" : {
        "Text" : "# see github issue #178\n",
        "Line" : 69,
        "CharPositionInLine" : 35
      },
      "8" : {
        "Text" : "# If an external DCMTK was provided via DCMTK_DIR and the external DCMTK\n\n# build/install used a CMAKE_DEBUG_POSTFIX value for distinguishing debug\n\n# and release libraries in the same build/install tree, the same debug\n\n# postfix needs to be passed to the CTK configure step. The FindDCMTK\n\n# script then takes the DCMTK_CMAKE_DEBUG_POSTFIX variable into account\n\n# when looking for DCMTK debug libraries.\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "CMakeExternals/ITK.cmake" : {
      "ObjectId" : "81e8ee7ac46aae8f1a1d5bfb203d95ee794bd974",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# ITK\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sanity checks\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMakeExternals/KWStyle.cmake" : {
      "ObjectId" : "6d08647d3de13d3e5fa74cb93fa0895e59d5460b",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# KWStyle\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sanity checks\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMakeExternals/Log4Qt.cmake" : {
      "ObjectId" : "e3eca91fbbfc44af4a5c0fd71f4d4b5838a49bed",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Log4Qt\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sanity checks\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# XXX Backward compatible way\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "CMakeExternals/OpenIGTLink.cmake" : {
      "ObjectId" : "2e37658cbb40a16c39371c89802d90708a933dcc",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# OpenIGTLink\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sanity checks\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMakeExternals/PythonQt.cmake" : {
      "ObjectId" : "5c3a28259334f81cbdf3e4dd8ec87bedbae9a76e",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# PythonQt\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sanity checks\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Should PythonQt use VTK\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Enable Qt libraries PythonQt wrapping if required\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# XXX Backward compatible way\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Set desired qt version for PythonQt\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Force wrap option to ON if WRAP_QTALL was set to ON\n",
        "Line" : 66,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Python is required\n",
        "Line" : 74,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# patched-8\n",
        "Line" : 81,
        "CharPositionInLine" : 63
      },
      "9" : {
        "Text" : "# patched-5\n",
        "Line" : 83,
        "CharPositionInLine" : 63
      },
      "10" : {
        "Text" : "# FindPythonInterp expects PYTHON_EXECUTABLE variable to be defined\n",
        "Line" : 129,
        "CharPositionInLine" : 31
      },
      "11" : {
        "Text" : "# FindPythonQt expects PYTHON_INCLUDE_DIR variable to be defined\n",
        "Line" : 130,
        "CharPositionInLine" : 28
      },
      "12" : {
        "Text" : "# FindPythonQt expects PYTHON_LIBRARY variable to be defined\n",
        "Line" : 132,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 13
    },
    "CMakeExternals/QtSOAP.cmake" : {
      "ObjectId" : "d908d4408eb96250d45d8877ad68d0d25765cde9",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# QtSOAP\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sanity checks\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# XXX Backward compatible way\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "CMakeExternals/QtTesting.cmake" : {
      "ObjectId" : "3bd215b08c6fb801ac065dffd4e71ab08101a4a1",
      "LastModified" : "2019-03-18T11:15:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# QtTesting\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sanity checks\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set CMake OSX variable to pass down the external project\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# XXX Backward compatible way\n",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "CMakeExternals/VTK.cmake" : {
      "ObjectId" : "6fde04ea81f66ccaa13a6eb564ae13026f13d2a4",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# VTK\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sanity checks\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# XXX Backward compatible way\n",
        "Line" : 69,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# VTK 5\n",
        "Line" : 94,
        "CharPositionInLine" : 27
      },
      "4" : {
        "Text" : "# VTK 6\n",
        "Line" : 95,
        "CharPositionInLine" : 29
      },
      "CommentCount" : 5
    },
    "CMakeExternals/ZMQ.cmake" : {
      "ObjectId" : "3668ba5f434c7fad8e767292c27b2433b54436cb",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# ZMQ\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sanity checks\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMakeExternals/qRestAPI.cmake" : {
      "ObjectId" : "d1272eaf5553e7fe28e72cb997dcf8d2c6be2fe9",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# qRestAPI\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sanity checks\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# XXX Backward compatible way\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "CMakeExternals/qxmlrpc.cmake" : {
      "ObjectId" : "df020d9dd4749f997fbb462f58a5b0decce4ecdf",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# qxmlrpc\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sanity checks\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# XXX Backward compatible way\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "CMakeLists.txt" : {
      "ObjectId" : "97b4b983f1003e51a25705811d7a8e05d89093cc",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################################\n\n#\n\n#  Library:   CTK\n\n#\n\n#  Copyright (c) Kitware Inc.\n\n#\n\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n\n#  you may not use this file except in compliance with the License.\n\n#  You may obtain a copy of the License at\n\n#\n\n#      http://www.apache.org/licenses/LICENSE-2.0.txt\n\n#\n\n#  Unless required by applicable law or agreed to in writing, software\n\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n#  See the License for the specific language governing permissions and\n\n#  limitations under the License.\n\n#\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMake 3.1\n\n# CMake 2.8.11\n",
        "Line" : 24,
        "CharPositionInLine" : 10
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Superbuild\n\n#\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Note: By setting CMAKE_OSX_* variables before any enable_language() or project() calls,\n\n#       we ensure that the bitness will be properly detected.\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Set defaults\n\n#\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Library mode: SHARED (default) or STATIC\n\n#\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Set a default build type if none was specified\n\n#\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Set the possible values of build type for cmake-gui\n",
        "Line" : 83,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Superbuild Option - Enabled by default\n\n#\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Output directories.\n\n#\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Make sure the directory exists\n",
        "Line" : 110,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# CTK version number.  An even minor number corresponds to releases.\n\n#\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Append the library version information to the library target\n\n# properties.  A parent project may set its own properties and/or may\n\n# block this.\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Install directories, used for install rules.\n\n#\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Update CMake module path\n\n# Note: FindXXX.cmake script specific to utility should be copied into Utilities/CMake\n\n#\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Clear CTK_BASE_LIBRARIES and CTK_WRAPPED_LIBRARIES_PYTHONQT\n\n#\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Variable use in CTKConfig.cmake.in\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Used by CTKGenerateCTKConfig.cmake and also used to reference script from other scripts\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# CMake function(s) and macro(s)\n\n#\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Import multiple macros\n",
        "Line" : 233,
        "CharPositionInLine" : 38
      },
      "23" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Testing\n\n#\n",
        "Line" : 271,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Setup file for setting custom ctest vars\n",
        "Line" : 285,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Configuration for the CMake-generated test driver\n",
        "Line" : 292,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# QtTesting\n\n#\n",
        "Line" : 311,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Coverage\n\n#\n",
        "Line" : 318,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Documentation\n\n#\n",
        "Line" : 325,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Attempt to discover Doxygen so that DOXYGEN_EXECUTABLE is set to an appropriate default value\n",
        "Line" : 337,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Additional CXX/C Flags\n\n#\n",
        "Line" : 341,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Set symbol visibility Flags\n\n#\n",
        "Line" : 352,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Set coverage Flags\n\n#\n",
        "Line" : 358,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# CTK C/CXX Flags\n\n#\n",
        "Line" : 369,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# With older version of gcc supporting the flag -fstack-protector-all, an extra dependency to libssp.so\n\n# is introduced. If gcc is smaller than 4.4.0 and the build type is Release let's not include the flag.\n\n# Doing so should allow to build package made for distribution using older linux distro.\n",
        "Line" : 386,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# suppress warnings about auto imported symbols\n",
        "Line" : 393,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# C++ exception specification ignored except to indicate a function is not __declspec(nothrow)\n",
        "Line" : 403,
        "CharPositionInLine" : 14
      },
      "37" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Check if the linker will resolve symbols of underlinked libraries\n\n#\n",
        "Line" : 408,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# QT\n\n#\n",
        "Line" : 418,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Update CTK_BASE_LIBRARIES with QT libraries\n",
        "Line" : 423,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# To make options show up in both CTK-SuperBuild and CTK regular build, let's add them\n\n# before the SuperBuild script is included\n\n#\n",
        "Line" : 428,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Special \"BUILD ALL\" options\n",
        "Line" : 433,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Build all CTK plug-ins\n",
        "Line" : 436,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Build all CTK libraries\n",
        "Line" : 440,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Build all CTK applications\n",
        "Line" : 444,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Build everything\n",
        "Line" : 448,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Other options\n",
        "Line" : 457,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Let's mark as advanced some default properties\n",
        "Line" : 460,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# KWStyle\n",
        "Line" : 464,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Qt Designer Plugins\n",
        "Line" : 469,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# CTK Libraries\n\n#\n",
        "Line" : 474,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Save enabled CTK libraries in the cache to ensure expected player and translator\n\n# are enabled in \"Libs/QtTesting\".\n",
        "Line" : 537,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# CTK Applications - Use ON or OFF to indicate if the application should be built by default\n\n#\n",
        "Line" : 547,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# We use the CTKWidgets library together with the Qt Designer plug-in\n\n# in ctkCommandLineModuleExplorer, so enabling the options here.\n\n# (We do not need to link them into the executable, hence no entries\n\n# in target_libraries.cmake)\n",
        "Line" : 602,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# Save the set of enabled apps in a cache file\n",
        "Line" : 643,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# CTK Plugins - none of them is build by default\n\n#\n",
        "Line" : 652,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# Plugins in the list below are not build by default\n",
        "Line" : 656,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# Optional plug-ins implementings interfaces in PluginFramework/service/\n",
        "Line" : 658,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# Plug-ins related to the PluginGenerator application\n",
        "Line" : 673,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# Plug-ins related to DICOM WG23 (Application Hosting)\n",
        "Line" : 679,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# Plug-ins related to the EventBus demo application\n",
        "Line" : 698,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# Add the PluginsContrib repo to the build system\n",
        "Line" : 705,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# High-Level CTK options\n",
        "Line" : 717,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# The ctk_enable_option macro expects a logical expression after the first\n\n# three arguments. This expression should only contain build option names\n\n# which belong to leafs in the required dependency tree.\n",
        "Line" : 720,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# The CTK infrastructure for high-level DICOM support. This includes\n\n# DICOM indexing, networking, and GUI widgets.\n",
        "Line" : 724,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# The CTK infrastructure for building a DICOM Part 19 compliant application\n\n# host and/or hosted application. This will not enable any example plugins\n\n# or executables (enable CTK_ENABLE_EXAMPLES for that).\n",
        "Line" : 729,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# The CTK Qt Widgets. This will enable the Qt Widget library only.\n\n# It might trigger the enabling of other widget libraries in combination\n\n# with other enabled options.\n",
        "Line" : 735,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# The CTK Plugin Framework, a dynamic component system based on OSGi.\n\n# This will enable only the framework itself.\n",
        "Line" : 741,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# The CTK Python Wrapping\n",
        "Line" : 746,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# Build examples\n\n# Create the logical expression containing the minium set of required options\n\n# for the CTK_BUILD_EXAMPLES option to be ON\n",
        "Line" : 751,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Generate target_directories list - List of directory corresponding to the different\n\n# libraries, plugins and applications associated with the corresponding option name.\n\n#\n\n# The following FOREACH loops are used to:\n\n#   1) Update either CTK_LIBS_SUBDIRS, CTK_PLUGINS_SUBDIRS or CTK_APPS_SUBDIRS variables\n\n#\n\n# For CTK libraries, if the file Libs/<DIR>/<LIBNAME>/ctk_library_options.cmake exists,\n\n# in addition to 'CTK_LIB_<DIR>/<LIBNAME>' option, the following ones\n\n# will also be available in CMake configure menu:\n\n#  CTK_LIB_<DIR>/<LIBNAME>_OPT1  (set to OFF)\n\n#  CTK_LIB_<DIR>/<LIBNAME>_OPT2  (set to ON)\n\n#\n\n# The file Libs/<DIR>/<LIBNAME>/ctk_library_options.cmake should look like:\n\n#\n\n#     set(ctk_library_options\n\n#       OPT1:OFF\n\n#       OPT2:ON\n\n#       )\n",
        "Line" : 765,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# Create list of directories corresponding to the enabled targets\n",
        "Line" : 786,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# Setup testing environment before Libs are added by simulating\n\n# the use of 'ctk_lib_option' for CTKTesting library\n",
        "Line" : 789,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# Emulate the use of 'ctk_lib_option' for CTKQtTesting library\n",
        "Line" : 814,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "#message(STATUS target_directories:${target_directories})\n",
        "Line" : 821,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Compile DGraph - An application allowing to check for cycle in DAG and also obtain the\n\n# topological order.\n",
        "Line" : 823,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# Set optional dependencies not captured in 'target_libraries.cmake' files.\n",
        "Line" : 844,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Let's make sure the enabled/disabled libraries, plugins or applications are coherent\n\n#\n",
        "Line" : 857,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# CTK Python wrapping\n\n# Enable CTK_LIB_Scripting/Python/Core if CTK_ENABLE_Python_Wrapping is ON\n\n#\n",
        "Line" : 864,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# Check if dependencies are satisfied\n",
        "Line" : 886,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# DGraph\n\n#\n",
        "Line" : 898,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# Generate DGraph input file expected by DGraph\n",
        "Line" : 902,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "# Obtain list of target ordered topologically\n",
        "Line" : 905,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# Convert 'CTEST_PROJECT_SUBPROJECTS_OUTPUT' to a list\n",
        "Line" : 919,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# If the list of subproject is empty, let's at least build CTKCore\n",
        "Line" : 923,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# CTK dependencies - Projects should be TOPOLOGICALLY ordered\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 929,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Check out the ExternalProjectsContrib repository\n",
        "Line" : 954,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Superbuild script\n\n#\n",
        "Line" : 976,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Expand variables containing include and library directories for external projects\n\n# This relies on the variable EXTERNAL_TARGETS set in ctkMacroValidateBuildOptions\n",
        "Line" : 989,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "#message(\"Calling find_package(${_package_name})\")\n",
        "Line" : 997,
        "CharPositionInLine" : 6
      },
      "90" : {
        "Text" : "#message(\"[${_package_name}] Resolving include variables: ${${_external_target}_INCLUDE_DIRS}\")\n",
        "Line" : 1009,
        "CharPositionInLine" : 4
      },
      "91" : {
        "Text" : "#message(\"[${_package_name}] Expanding [${_include_variable}] into [${${_include_variable}}]\")\n",
        "Line" : 1014,
        "CharPositionInLine" : 8
      },
      "92" : {
        "Text" : "#message(\"[${_package_name}] Appending ${_include_dir}\")\n",
        "Line" : 1019,
        "CharPositionInLine" : 10
      },
      "93" : {
        "Text" : "#message(\"[${_package_name}] New dirs: ${_updated_include_dirs}\")\n",
        "Line" : 1025,
        "CharPositionInLine" : 6
      },
      "94" : {
        "Text" : "#message(\"[${_package_name}] Appended dirs: ${${_external_target}_INCLUDE_DIRS}\")\n",
        "Line" : 1028,
        "CharPositionInLine" : 4
      },
      "95" : {
        "Text" : "#message(\"[${_package_name}] Resolving library variables: ${${_external_target}_LIBRARY_DIRS}\")\n",
        "Line" : 1031,
        "CharPositionInLine" : 4
      },
      "96" : {
        "Text" : "#message(\"[${_package_name}] Expanding [${_library_variable}] into [${${_library_variable}}]\")\n",
        "Line" : 1036,
        "CharPositionInLine" : 8
      },
      "97" : {
        "Text" : "#message(\"[${_package_name}] Appending ${_library_dir}\")\n",
        "Line" : 1041,
        "CharPositionInLine" : 10
      },
      "98" : {
        "Text" : "#message(\"[${_package_name}] New dirs: ${_updated_library_dirs}\")\n",
        "Line" : 1047,
        "CharPositionInLine" : 6
      },
      "99" : {
        "Text" : "#message(\"[${_package_name}] Appended dirs: ${${_external_target}_LIBRARY_DIRS}\")\n",
        "Line" : 1050,
        "CharPositionInLine" : 4
      },
      "100" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# CTK_SUPERBUILD_BINARY_DIR\n",
        "Line" : 1056,
        "CharPositionInLine" : 0
      },
      "101" : {
        "Text" : "# If CTK_SUPERBUILD_BINARY_DIR isn't defined, it means CTK is *NOT* build using Superbuild.\n\n# In that specific case, CTK_SUPERBUILD_BINARY_DIR should default to CTK_BINARY_DIR\n",
        "Line" : 1059,
        "CharPositionInLine" : 0
      },
      "102" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Configure files with settings\n\n#\n",
        "Line" : 1065,
        "CharPositionInLine" : 0
      },
      "103" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Set C/CXX Flags\n\n#\n",
        "Line" : 1078,
        "CharPositionInLine" : 0
      },
      "104" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Set the header template which defines custom export/import macros\n\n# for shared libraries\n\n#\n",
        "Line" : 1086,
        "CharPositionInLine" : 0
      },
      "105" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Add CTK library subdirectories\n\n#\n",
        "Line" : 1092,
        "CharPositionInLine" : 0
      },
      "106" : {
        "Text" : "# Always add the Documentation sub-directory for additional processing\n",
        "Line" : 1099,
        "CharPositionInLine" : 2
      },
      "107" : {
        "Text" : "# Add the CommandLineModules root directory for additional processing\n",
        "Line" : 1105,
        "CharPositionInLine" : 0
      },
      "108" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Add CTK plugin subdirectories\n\n#\n",
        "Line" : 1108,
        "CharPositionInLine" : 0
      },
      "109" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Add CTK application subdirectories\n\n#\n",
        "Line" : 1121,
        "CharPositionInLine" : 0
      },
      "110" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Add general purpose subdirectories\n\n#\n\n#add_subdirectory(Testing)\n\n#add_subdirectory(Examples)\n",
        "Line" : 1135,
        "CharPositionInLine" : 0
      },
      "111" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Style Checking configuration\n\n#\n",
        "Line" : 1142,
        "CharPositionInLine" : 0
      },
      "112" : {
        "Text" : "#---------------------------------------------------------------------------\n\n# Documentation\n\n#\n",
        "Line" : 1147,
        "CharPositionInLine" : 0
      },
      "113" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# The commands in this directory are intended to be executed as\n\n# the end of the whole configuration process, as a \"last step\".\n\n# This directory is typically the last SUBDIRS in the main CMakeLists.txt.\n",
        "Line" : 1152,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 114
    },
    "CTestConfig.cmake" : {
      "ObjectId" : "2e61ff983cccece2cf6910703014635ffea4d128",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Documentation/CMakeLists.txt" : {
      "ObjectId" : "54fbab29afdce2eb4f53c1a3b1513d0b87a2d2d1",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Compile a doxygen input filter for processing CMake scripts\n",
        "Line" : 6,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Automatically generate documentation at build time\n",
        "Line" : 10,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#\n\n# User documentation\n\n#\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Run doxygen as a custom command driven by a custom target.\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#\n\n# Dev documentation\n\n#\n",
        "Line" : 46,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "Libs/CommandLineModules/Backend/FunctionPointer/CMakeLists.txt" : {
      "ObjectId" : "3a70102487ab9b052feebac5dd3a4ba081d78ccb",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# 3rd party dependencies\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# See CTK/CMake/ctkMacroBuildLib.cmake for details\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Additional directories to include\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Source files\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Headers that should run through moc\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# UI files\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Resources\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Target libraries - See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# The following macro will read the target libraries from the file 'target_libraries.cmake'\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Testing\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#add_subdirectory(Testing)\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 10
    },
    "Libs/CommandLineModules/Backend/FunctionPointer/target_libraries.cmake" : {
      "ObjectId" : "139da8221c23abbe468c0388e436ca4a003a9764",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkMacroGetTargetLibraries.cmake\n\n# \n\n# This file should list the libraries required to build the current CTK libraries\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Libs/CommandLineModules/Backend/LocalProcess/CMakeLists.txt" : {
      "ObjectId" : "88a4d0146d77a7b2e0516067c7f4835f1825d3fa",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# 3rd party dependencies\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# See CTK/CMake/ctkMacroBuildLib.cmake for details\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Additional directories to include\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Source files\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Headers that should run through moc\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# UI files\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Resources\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Target libraries - See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# The following macro will read the target libraries from the file 'target_libraries.cmake'\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Testing\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#add_subdirectory(Testing)\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 10
    },
    "Libs/CommandLineModules/Backend/LocalProcess/Documentation/CMakeLists.txt" : {
      "ObjectId" : "4bb75e16358eecaf39e2a99c6388eccf1e6e59f1",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copy XML schema file to the Doxygen output directory\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Libs/CommandLineModules/Backend/LocalProcess/target_libraries.cmake" : {
      "ObjectId" : "139da8221c23abbe468c0388e436ca4a003a9764",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkMacroGetTargetLibraries.cmake\n\n# \n\n# This file should list the libraries required to build the current CTK libraries\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Libs/CommandLineModules/Backend/XMLChecker/CMakeLists.txt" : {
      "ObjectId" : "926901ce4d97ced8a1b1a27ae54b9158e60e5b09",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# 3rd party dependencies\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# See CTK/CMake/ctkMacroBuildLib.cmake for details\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Additional directories to include\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Source files\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Headers that should run through moc\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# UI files\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Resources\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Target libraries - See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# The following macro will read the target libraries from the file 'target_libraries.cmake'\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Testing\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#add_subdirectory(Testing)\n",
        "Line" : 60,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 10
    },
    "Libs/CommandLineModules/Backend/XMLChecker/target_libraries.cmake" : {
      "ObjectId" : "139da8221c23abbe468c0388e436ca4a003a9764",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkMacroGetTargetLibraries.cmake\n\n# \n\n# This file should list the libraries required to build the current CTK libraries\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Libs/CommandLineModules/CMakeLists.txt" : {
      "ObjectId" : "8f292faccdfea5335cd916ee01569c6c730a826c",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Libs/CommandLineModules/Core/CMakeLists.txt" : {
      "ObjectId" : "ce55df9e431341abc83b0b56a40ec0e7ecddda9f",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# 3rd party dependencies\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# See CTK/CMake/ctkMacroBuildLib.cmake for details\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Additional directories to include\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Source files\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Headers that should run through moc\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# UI files\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Resources\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Target libraries - See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# The following macro will read the target libraries from the file 'target_libraries.cmake'\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Testing\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "Libs/CommandLineModules/Core/Documentation/CMakeLists.txt" : {
      "ObjectId" : "7c8a02eeac75a6c1960cfbc3f0ae8889bc077d31",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copy XML schema file to the Doxygen output directory\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Libs/CommandLineModules/Core/Testing/CMakeLists.txt" : {
      "ObjectId" : "cdeb442a1d5a6c92d4148a2dc9efc27924ad0b86",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Libs/CommandLineModules/Core/Testing/Cpp/CMakeLists.txt" : {
      "ObjectId" : "40d1e555fd95aca3fd58ff5e41323fff3fe67dc6",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Add Tests\n\n#\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Libs/CommandLineModules/Core/target_libraries.cmake" : {
      "ObjectId" : "5e5e78246b6a586f9fe19249e26748afe27cafbd",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkMacroGetTargetLibraries.cmake\n\n# \n\n# This file should list the libraries required to build the current CTK libraries\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Libs/CommandLineModules/Documentation/CMakeLists.txt" : {
      "ObjectId" : "5f09cb78230ec1ad009c399a0469c9f199b6bd08",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copy the xs3p.xsl stylesheet which is used in .xsd files to generate nice\n\n# html output when opened in a browser.\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compile source code snippets\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "Libs/CommandLineModules/Documentation/Snippets/CMakeLists.txt" : {
      "ObjectId" : "fc9df1623dde6fce9f12b8bd80084dce8803fe6d",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Libs/CommandLineModules/Frontend/QtGui/CMakeLists.txt" : {
      "ObjectId" : "3ad6dd1e6d39c3fea57f11df13f48e6144f25c40",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# 3rd party dependencies\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# See CTK/CMake/ctkMacroBuildLib.cmake for details\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Additional directories to include\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Source files\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Headers that should run through moc\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# UI files\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Resources\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Target libraries - See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# The following macro will read the target libraries from the file 'target_libraries.cmake'\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Testing\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "Libs/CommandLineModules/Frontend/QtGui/Testing/CMakeLists.txt" : {
      "ObjectId" : "d6112f6eb2a6c2f346e4240695d30efac68b5850",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Libs/CommandLineModules/Frontend/QtGui/Testing/Cpp/CMakeLists.txt" : {
      "ObjectId" : "7863c8c5c97c40514b3c305087b2d29bcb77df35",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Add Tests\n\n#\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Libs/CommandLineModules/Frontend/QtGui/target_libraries.cmake" : {
      "ObjectId" : "719215cefab48313193b0886a21d49d302b06925",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkMacroGetTargetLibraries.cmake\n\n#\n\n# This file should list the libraries required to build the current CTK libraries\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Libs/CommandLineModules/Frontend/QtWebKit/CMakeLists.txt" : {
      "ObjectId" : "234dd56d4deff4340eec5d38164bc2978097c3aa",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# 3rd party dependencies\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# See CTK/CMake/ctkMacroBuildLib.cmake for details\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Additional directories to include\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Source files\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Headers that should run through moc\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# UI files\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Resources\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Target libraries - See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# The following macro will read the target libraries from the file 'target_libraries.cmake'\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Testing\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#  add_subdirectory(Testing)\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "Libs/CommandLineModules/Frontend/QtWebKit/target_libraries.cmake" : {
      "ObjectId" : "2eea359f6d11ea5534c42e453c5a818c1b52fe7e",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkMacroGetTargetLibraries.cmake\n\n# \n\n# This file should list the libraries required to build the current CTK libraries\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Libs/CommandLineModules/Testing/CMakeLists.txt" : {
      "ObjectId" : "ca3b9479abccbf253b0c18b77c2c7826122936ce",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Libs/CommandLineModules/Testing/Cpp/CMakeLists.txt" : {
      "ObjectId" : "cbdf51da220b67d43e725faae00aa23074e54857",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Add Tests\n\n#\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Libs/CommandLineModules/Testing/Modules/Blur2dImage/CMakeLists.txt" : {
      "ObjectId" : "4d125c250fba25bcfd2fe20bdeace7640bbccdb8",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Libs/CommandLineModules/Testing/Modules/CMakeLists.txt" : {
      "ObjectId" : "2344bde8d8eb70553c04cbcd3dcd4df4d634ec53",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is very simple and for test purposes\n\n# only. Relies on naming conventions and has\n\n# no extensive error checking yet.\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Libs/CommandLineModules/Testing/Modules/TestBed/CMakeLists.txt" : {
      "ObjectId" : "1d619eaa590c403af98fc77ee12ee15566bb00ce",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Libs/CommandLineModules/Testing/Modules/Tour/CMakeLists.txt" : {
      "ObjectId" : "018fe81f07140230241f776f2a9624012904e11c",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Libs/Core/CMake/TestBFD/CMakeLists.txt" : {
      "ObjectId" : "f86b318d92fc2c11a25a058b9ec2903e63cc2ceb",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Sanity checks\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Libs/Core/CMake/ctkMacroBFDCheck.cmake" : {
      "ObjectId" : "dc5aa8842f13ce714dfbc32cd285e439ebf2338f",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# ctkMacroBFDCheck.cmake - After this file is included into your main CMake script,\n\n#                          HAVE_BFD will be defined if libbfd is available.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# make sure we can build with libbfd\n\n#message(STATUS \"Checking libbfd\")\n",
        "Line" : 46,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "#message(${OUTPUT})\n",
        "Line" : 58,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 3
    },
    "Libs/Core/CMakeLists.txt" : {
      "ObjectId" : "18bf58f5f45f1166ed988ded317b722d660792dd",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# 3rd party dependencies\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMake modules\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CMake Macros\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# HAVE_BFD will be set to True if it applies\n",
        "Line" : 11,
        "CharPositionInLine" : 38
      },
      "4" : {
        "Text" : "#\n\n# See CTK/CMake/ctkMacroBuildLib.cmake for details\n\n#\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Source files\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Headers that should run through moc\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# UI files\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Resources\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Target libraries - See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# The following macro will read the target libraries from the file 'target_libraries.cmake'\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Needed for ctkBackTrace\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# FreeBSD: The same functionality that is in linux's libdl is provided in FreeBSD's libc\n",
        "Line" : 149,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Testing\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Compile source code snippets\n",
        "Line" : 171,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 14
    },
    "Libs/Core/Documentation/Snippets/CMakeLists.txt" : {
      "ObjectId" : "8af92536720f3006b35d05b9b88ffca877790c0f",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Libs/Core/Testing/CMakeLists.txt" : {
      "ObjectId" : "cdeb442a1d5a6c92d4148a2dc9efc27924ad0b86",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Libs/Core/Testing/Cpp/CMakeLists.txt" : {
      "ObjectId" : "950bde603338afec3fff105ef4804b3637f82843",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Dummy plugin used by ctkAbstractPluginFactoryTest1\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Test sources\n\n#\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#EXTRA_INCLUDE TestingMacros.h\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#\n\n# Tests Helpers sources\n\n#\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Test executable\n\n#\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# Add Tests\n\n#\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "Libs/Core/ctk_library_options.cmake" : {
      "ObjectId" : "8f998aad485a5794166f4adf990fdea8f2c97f55",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkMacroAddCtkLibraryOptions.cmake\n\n# \n\n# This file should list of options available for considered CTK library\n\n# For example: MYOPT1:OFF MYOPT2:ON\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Note: Options WITH_BFD_SHARED and WITH_BFD_STATIC are mutually exclusive. \n\n#       Enabling both options will trigger a configuration error.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Libs/Core/target_libraries.cmake" : {
      "ObjectId" : "e4411abd998b2d55c34181cac06287939efe4bb1",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n#\n\n# This file should list the libraries required to build the current CTK libraries\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Libs/DICOM/Core/CMakeLists.txt" : {
      "ObjectId" : "00491f320c2fa6b9c836e1f0eb9813da54869d79",
      "LastModified" : "2019-04-15T20:39:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CTK/CMake/ctkMacroBuildLib.cmake for details\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Source files\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Abstract class should not be wrapped !\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Headers that should run through moc\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# UI files\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Resources\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Target libraries - See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# The following macro will read the target libraries from the file 'target_libraries.cmake'\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# create a dcm query/retrieve service config file that points to the build dir\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Workaround Debian packaging issue - See FindDCMTK.cmake for more details\n",
        "Line" : 100,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Plugins\n\n#if(CTK_BUILD_QTDESIGNER_PLUGINS)\n\n#  add_subdirectory(Plugins)\n\n#endif()\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Testing\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "Libs/DICOM/Core/Testing/CMakeLists.txt" : {
      "ObjectId" : "cdeb442a1d5a6c92d4148a2dc9efc27924ad0b86",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Libs/DICOM/Core/Testing/Cpp/CMakeLists.txt" : {
      "ObjectId" : "e8f04d0a6a29d823af33c71f775be11fefc4a0dd",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Add Tests\n\n#\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ctkDICOMDatabase\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ctkDICOMModel\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ctkDICOMQuery\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ctkDICOMRetrieve\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ctkDICOMCore\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ctkDICOMTester\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Libs/DICOM/Core/target_libraries.cmake" : {
      "ObjectId" : "7c318f9c3eddc070a34e08299012c84e1c6c6fbf",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n#\n\n# This file should list the libraries required to build the current CTK libraries\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Libs/DICOM/Widgets/CMakeLists.txt" : {
      "ObjectId" : "7c5592719960d5f9b2c65778d44492f0348ad4b7",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CTK/CMake/ctkMacroBuildLib.cmake for details\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Source files\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Headers that should run through moc\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# UI files - includes new widgets\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Resources\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Target libraries - See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# The following macro will read the target libraries from the file 'target_libraries.cmake'\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Plugins\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Testing\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "Libs/DICOM/Widgets/Plugins/CMakeLists.txt" : {
      "ObjectId" : "d3eadcde589d28c1ea7713fdf83b89ad0f0b967b",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CTK/CMake/ctkMacroBuildQtPlugin.cmake for details\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Source files\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Headers that should run through moc\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Resources\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Target libraries\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Libs/DICOM/Widgets/Testing/CMakeLists.txt" : {
      "ObjectId" : "cdeb442a1d5a6c92d4148a2dc9efc27924ad0b86",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Libs/DICOM/Widgets/Testing/Cpp/CMakeLists.txt" : {
      "ObjectId" : "5749ed6fa9fb41842f5cc6cf769a439cc66bf8fe",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Add Tests\n\n#\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Add Tests expecting CTKData to be set\n\n#\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Libs/DICOM/Widgets/target_libraries.cmake" : {
      "ObjectId" : "7193dd19c9e7a8e95fbfdb14592baf7ce2184de9",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# \n\n# This file should list the libraries required to build the current CTK libraries\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Libs/ImageProcessing/ITK/Core/CMakeLists.txt" : {
      "ObjectId" : "856b7f44992d0ae48c9964b15d6c7ab0b3beaafe",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# 3rd party dependencies\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# ITK\n\n#\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# XXX Ideally every library should 'find_package(ITK ...)\" and the\n\n#     top-level call to find_package(ITK ...) should be removed.\n",
        "Line" : 11,
        "CharPositionInLine" : 19
      },
      "3" : {
        "Text" : "#\n\n# See CTK/CMake/ctkMacroBuildLib.cmake for details\n\n#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Source files\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Headers that should run through moc\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# UI files\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Resources\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Target libraries - See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# The following macro will read the target libraries from the file 'target_libraries.cmake'\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Plugins\n\n#if(CTK_BUILD_QTDESIGNER_PLUGINS)\n\n#  add_subdirectory(Plugins)\n\n#endif()\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Testing\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "Libs/ImageProcessing/ITK/Core/Testing/CMakeLists.txt" : {
      "ObjectId" : "cdeb442a1d5a6c92d4148a2dc9efc27924ad0b86",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Libs/ImageProcessing/ITK/Core/Testing/Cpp/CMakeLists.txt" : {
      "ObjectId" : "4725f0257a58c8a45a165251224a93a1065bdb75",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Tests\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Tests expecting CTKData to be set\n\n#\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Pre-requisites\n\n#\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Test helpers\n\n#\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#set(KIT_HELPER_SRCS\n\n#  ctkVTKObjectTestHelper.cpp\n\n#  )\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#QT4_WRAP_CPP(KIT_HELPER_SRCS ctkVTKObjectTestHelper.h)\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# Tests\n\n#\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#EXTRA_INCLUDE TestingMacros.h\n",
        "Line" : 45,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# The tests depend on stuff in the CTKWidgets library,\n\n# so add it manually here\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#\n\n# Add Tests\n\n#\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\n\n# Add Tests expecting CTKData to be set\n\n#\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#SIMPLE_TEST(Foo ${baseline_relative_location}/${TESTNAME}.png)\n",
        "Line" : 74,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 12
    },
    "Libs/ImageProcessing/ITK/Core/target_libraries.cmake" : {
      "ObjectId" : "62bbe8822e102a05143f80b5263bdc1b1b18e643",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# \n\n# This file should list the libraries required to build the current CTK libraries\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Libs/PluginFramework/CMakeLists.txt" : {
      "ObjectId" : "3bea9ed74ed9349feeaef2621934d2e34077d800",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CTK/CMake/ctkMacroBuildLib.cmake for details\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Source files\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Services\n",
        "Line" : 100,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Headers that should run through moc\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# UI files\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Resources\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Target libraries - See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# The following macro will read the target libraries from the file 'target_libraries.cmake'\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Create a MANIFEST.MF resource for the PluginFramework library,\n\n# pretending that is is a plugin (the system plugin)\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Testing\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Compile source code snippets\n",
        "Line" : 195,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 10
    },
    "Libs/PluginFramework/Documentation/Snippets/CMakeLists.txt" : {
      "ObjectId" : "462083efa8a0cb1bc419efa2731ec5ad2064483f",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Libs/PluginFramework/Documentation/Snippets/EventAdmin-Intro/files.cmake" : {
      "ObjectId" : "720e0e0c99744247177b6e82765fb4a0493f2739",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Libs/PluginFramework/Testing/CMakeLists.txt" : {
      "ObjectId" : "b847e6d44205fa606c0d20262b3a5f84e4b7f6a2",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Libs/PluginFramework/Testing/Cpp/CMakeLists.txt" : {
      "ObjectId" : "f3ca856c8cc6f8cf8a725169b08230b1793453d8",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Code in this directory will be compiled into\n\n# a utility library. Test executables may\n\n# link to it to bootstrap a plugin framework and\n\n# start registered tests.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#QT4_WRAP_CPP(MY_MOC_CXX ${MOC_SRCS})\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Libs/PluginFramework/Testing/FrameworkTestPlugins/CMakeLists.txt" : {
      "ObjectId" : "0493faa971fddd5256c23d3fc1bd8c86d7dee4cc",
      "LastModified" : "2015-01-29T23:48:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Libs/PluginFramework/Testing/FrameworkTestPlugins/app_test/CMakeLists.txt" : {
      "ObjectId" : "bc05f6a9b0baf553da77103a7fed3c0925565207",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# =========== Build a separate test executable ===============\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Libs/PluginFramework/Testing/FrameworkTestPlugins/app_test/manifest_headers.cmake" : {
      "ObjectId" : "a83f1db0cf65b912dfb494020cb4d930c193a091",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Libs/PluginFramework/Testing/FrameworkTestPlugins/app_test/target_libraries.cmake" : {
      "ObjectId" : "fd844540bc33805baa3d6754dd62d59eed728797",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# \n\n# This file should list the libraries required to build the current CTK plugin.\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Libs/PluginFramework/Testing/FrameworkTestPlugins/pluginA1_test/CMakeLists.txt" : {
      "ObjectId" : "cac23494d7058a44e6e0a62462a61cae4b4bf4b0",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Libs/PluginFramework/Testing/FrameworkTestPlugins/pluginA1_test/manifest_headers.cmake" : {
      "ObjectId" : "b6bf7c481bf4d617d7141fe7facf48dc66d41dcf",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Libs/PluginFramework/Testing/FrameworkTestPlugins/pluginA1_test/target_libraries.cmake" : {
      "ObjectId" : "fd844540bc33805baa3d6754dd62d59eed728797",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# \n\n# This file should list the libraries required to build the current CTK plugin.\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Libs/PluginFramework/Testing/FrameworkTestPlugins/pluginA2_test/CMakeLists.txt" : {
      "ObjectId" : "2abc1601581d26612d0567edd3a218999d89dfb9",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Libs/PluginFramework/Testing/FrameworkTestPlugins/pluginA2_test/manifest_headers.cmake" : {
      "ObjectId" : "2d21b5b75d732da6507e9487eba3789784435962",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Libs/PluginFramework/Testing/FrameworkTestPlugins/pluginA2_test/target_libraries.cmake" : {
      "ObjectId" : "fd844540bc33805baa3d6754dd62d59eed728797",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# \n\n# This file should list the libraries required to build the current CTK plugin.\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Libs/PluginFramework/Testing/FrameworkTestPlugins/pluginA_test/CMakeLists.txt" : {
      "ObjectId" : "bdc1357f20bac2b30be006cc0b75895cebfd32f1",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Libs/PluginFramework/Testing/FrameworkTestPlugins/pluginA_test/manifest_headers.cmake" : {
      "ObjectId" : "892fcec24521a4e5bcabf37c8dcf41f07d59147e",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Libs/PluginFramework/Testing/FrameworkTestPlugins/pluginA_test/target_libraries.cmake" : {
      "ObjectId" : "fd844540bc33805baa3d6754dd62d59eed728797",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# \n\n# This file should list the libraries required to build the current CTK plugin.\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Libs/PluginFramework/Testing/FrameworkTestPlugins/pluginD_test/CMakeLists.txt" : {
      "ObjectId" : "7a519b8dd6b49015ffce6d4d263fa12df1127d26",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Apply properties to the library target.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#    COMPILE_FLAGS \"-DQT_PLUGIN\"\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Libs/PluginFramework/Testing/FrameworkTestPlugins/pluginD_test/target_libraries.cmake" : {
      "ObjectId" : "bfec45df5668505f349fbb123b1824a90fe01c0e",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# \n\n# This file should list the libraries required to build the current CTK plugin.\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Libs/PluginFramework/Testing/FrameworkTestPlugins/pluginSL1_test/CMakeLists.txt" : {
      "ObjectId" : "f443ea092b72821973bd498d58f3c57584108d80",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Files which should be processed by Qts moc\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Qt Designer files which should be processed by Qts uic\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# QRC Files which should be compiled into the plugin\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Compute the plugin dependencies\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Libs/PluginFramework/Testing/FrameworkTestPlugins/pluginSL1_test/manifest_headers.cmake" : {
      "ObjectId" : "4696380c64363a3007af83923741b98bb32ddfed",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Libs/PluginFramework/Testing/FrameworkTestPlugins/pluginSL1_test/target_libraries.cmake" : {
      "ObjectId" : "b24576f07e7ac4489ccb4b21862c351223c015ba",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n#\n\n# This file should list the libraries required to build the current CTK plugin.\n\n# For specifying required plugins, see the manifest_headers.cmake file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Libs/PluginFramework/Testing/FrameworkTestPlugins/pluginSL3_test/CMakeLists.txt" : {
      "ObjectId" : "59d92880e18b21782bc47338a1bb8a5ff5cb6a69",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Files which should be processed by Qts moc\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Qt Designer files which should be processed by Qts uic\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# QRC Files which should be compiled into the plugin\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Compute the plugin dependencies\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Libs/PluginFramework/Testing/FrameworkTestPlugins/pluginSL3_test/manifest_headers.cmake" : {
      "ObjectId" : "153a1401b4e8fafdc39dcb273997fcefb2df90e6",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Libs/PluginFramework/Testing/FrameworkTestPlugins/pluginSL3_test/target_libraries.cmake" : {
      "ObjectId" : "b24576f07e7ac4489ccb4b21862c351223c015ba",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n#\n\n# This file should list the libraries required to build the current CTK plugin.\n\n# For specifying required plugins, see the manifest_headers.cmake file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Libs/PluginFramework/Testing/FrameworkTestPlugins/pluginSL4_test/CMakeLists.txt" : {
      "ObjectId" : "5ee3500dd801ee30c93b9fba500eca142a475f74",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Files which should be processed by Qts moc\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Qt Designer files which should be processed by Qts uic\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# QRC Files which should be compiled into the plugin\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Compute the plugin dependencies\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Libs/PluginFramework/Testing/FrameworkTestPlugins/pluginSL4_test/manifest_headers.cmake" : {
      "ObjectId" : "56f63ef231ca215c2cbf7ae375bc00869ce6cdab",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Libs/PluginFramework/Testing/FrameworkTestPlugins/pluginSL4_test/target_libraries.cmake" : {
      "ObjectId" : "b24576f07e7ac4489ccb4b21862c351223c015ba",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n#\n\n# This file should list the libraries required to build the current CTK plugin.\n\n# For specifying required plugins, see the manifest_headers.cmake file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Libs/PluginFramework/Testing/FrameworkTestPlugins/pluginS_test/CMakeLists.txt" : {
      "ObjectId" : "4edf7f677bd086b2e62e40c733ed0b07b3af01c4",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Libs/PluginFramework/Testing/FrameworkTestPlugins/pluginS_test/manifest_headers.cmake" : {
      "ObjectId" : "a16b9a87b3ac03eb10b123f1fc437de6533a838c",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Libs/PluginFramework/Testing/FrameworkTestPlugins/pluginS_test/target_libraries.cmake" : {
      "ObjectId" : "fd844540bc33805baa3d6754dd62d59eed728797",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# \n\n# This file should list the libraries required to build the current CTK plugin.\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Libs/PluginFramework/Testing/MetaTypeTestPlugins/CMakeLists.txt" : {
      "ObjectId" : "fc55da375a65f3eda078f60992b343281eefcd08",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Libs/PluginFramework/Testing/MetaTypeTestPlugins/pluginAttrPwd_test/CMakeLists.txt" : {
      "ObjectId" : "c177567f86b05eb3e9d6e1a3415fdfb073aaeb85",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Files which should be processed by Qts moc\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# QRC Files which should be compiled into the plugin\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Compute the plugin dependencies\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Libs/PluginFramework/Testing/MetaTypeTestPlugins/pluginAttrPwd_test/manifest_headers.cmake" : {
      "ObjectId" : "4319c6a667073064c8369777bf6c6672966125a9",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Libs/PluginFramework/Testing/MetaTypeTestPlugins/pluginAttrPwd_test/target_libraries.cmake" : {
      "ObjectId" : "b24576f07e7ac4489ccb4b21862c351223c015ba",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n#\n\n# This file should list the libraries required to build the current CTK plugin.\n\n# For specifying required plugins, see the manifest_headers.cmake file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Libs/PluginFramework/Testing/org.commontk.configadmintest/CMakeLists.txt" : {
      "ObjectId" : "973a7fe496c5f98b3bbe26800bf8c0b00cf77674",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Libs/PluginFramework/Testing/org.commontk.configadmintest/manifest_headers.cmake" : {
      "ObjectId" : "71710513af266e944eeecc093153ca6677e4d0f7",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Libs/PluginFramework/Testing/org.commontk.configadmintest/target_libraries.cmake" : {
      "ObjectId" : "fd844540bc33805baa3d6754dd62d59eed728797",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# \n\n# This file should list the libraries required to build the current CTK plugin.\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Libs/PluginFramework/Testing/org.commontk.eventadmintest.perf/CMakeLists.txt" : {
      "ObjectId" : "d35f54c78fa9615af8504ec5b2e35cd68e75f0d2",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Libs/PluginFramework/Testing/org.commontk.eventadmintest.perf/manifest_headers.cmake" : {
      "ObjectId" : "c7f90cf494e4b99810a81564704c18cb57cdd09c",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Libs/PluginFramework/Testing/org.commontk.eventadmintest.perf/target_libraries.cmake" : {
      "ObjectId" : "fd844540bc33805baa3d6754dd62d59eed728797",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# \n\n# This file should list the libraries required to build the current CTK plugin.\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Libs/PluginFramework/Testing/org.commontk.eventadmintest/CMakeLists.txt" : {
      "ObjectId" : "efc440b0382d66a5c7b68181e8b06118e054e920",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Libs/PluginFramework/Testing/org.commontk.eventadmintest/manifest_headers.cmake" : {
      "ObjectId" : "c4965bee3549257f90740fd0076d86f849e9a914",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Libs/PluginFramework/Testing/org.commontk.eventadmintest/target_libraries.cmake" : {
      "ObjectId" : "fd844540bc33805baa3d6754dd62d59eed728797",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# \n\n# This file should list the libraries required to build the current CTK plugin.\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Libs/PluginFramework/Testing/org.commontk.metatypetest/CMakeLists.txt" : {
      "ObjectId" : "db72c8f144dd16ceac34e6777e7f5a10deccae13",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Libs/PluginFramework/Testing/org.commontk.metatypetest/manifest_headers.cmake" : {
      "ObjectId" : "f7716a0fdabfc320524bd8497ad2d12519fb33d6",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Libs/PluginFramework/Testing/org.commontk.metatypetest/target_libraries.cmake" : {
      "ObjectId" : "fd844540bc33805baa3d6754dd62d59eed728797",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# \n\n# This file should list the libraries required to build the current CTK plugin.\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Libs/PluginFramework/Testing/org.commontk.pluginfwtest.perf/CMakeLists.txt" : {
      "ObjectId" : "eae630c34beecece6adfe181bad11d5c374dd11b",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# =========== Build the test executable ===============\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Libs/PluginFramework/Testing/org.commontk.pluginfwtest.perf/manifest_headers.cmake" : {
      "ObjectId" : "1d7000a99333630d02fc55baa39018f50669f77d",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Libs/PluginFramework/Testing/org.commontk.pluginfwtest.perf/target_libraries.cmake" : {
      "ObjectId" : "fd844540bc33805baa3d6754dd62d59eed728797",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# \n\n# This file should list the libraries required to build the current CTK plugin.\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Libs/PluginFramework/Testing/org.commontk.pluginfwtest/CMakeLists.txt" : {
      "ObjectId" : "4964239090ee423e0550dfcb2671e6b3b1345eaf",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# =========== Build the test executable ===============\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#QT4_WRAP_CPP(MY_MOC_CXX ${MOC_SRCS})\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Libs/PluginFramework/Testing/org.commontk.pluginfwtest/manifest_headers.cmake" : {
      "ObjectId" : "87cfb8751737e5220d0c29bd91be9267db677e9f",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Libs/PluginFramework/Testing/org.commontk.pluginfwtest/target_libraries.cmake" : {
      "ObjectId" : "fd844540bc33805baa3d6754dd62d59eed728797",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# \n\n# This file should list the libraries required to build the current CTK plugin.\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Libs/PluginFramework/target_libraries.cmake" : {
      "ObjectId" : "8c80f08b9ad9fce086093aafa83869b446168f0d",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# \n\n# This file should list the libraries required to build the current CTK libraries\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Libs/QtTesting/CMake/ctkQtTesting.cmake" : {
      "ObjectId" : "32b3e62e2000a7474f0c4de0d9bc0e852d1203e2",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Do not export symbol in ctkEventTranslatorPlayerWidget class\n",
        "Line" : 3,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Libs/QtTesting/CMakeLists.txt" : {
      "ObjectId" : "2b6582bf56879bd978a25d697f529978c1656eb7",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# 3rd party dependencies\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# See CTK/CMake/ctkMacroBuildLib.cmake for details\n\n#\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO The following code used to create CTK_ENABLED_LIBNAMES list could be\n\n#      moved in the main CMakeLists.txt\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Recover All the event player/translator headers\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Define the C++ code for the file ctkQtTestingUtility\n\n# Define the headers\n\n# Define the methode addWidgetEventTranslator/Player()\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#set(CTK_ADD_WIDGET_EVENT_PLAYERS)\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Explicitly skip this player so that it could be added first in the list of players to register.\n",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#set(CTK_ADD_WIDGET_EVENT_TRANSLATORS)\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Explicitly skip this translator so that it could be added first in the list of translators to register.\n",
        "Line" : 98,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Source files\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Header that should run through moc\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# UI files\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Resources\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Set QtTesting_LIBRARIES variable\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Target libraries - See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# The following macro will read the target libraries from the file 'target_libraries.cmake'\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Testing\n\n#if(BUILD_TESTING)\n\n#  add_subdirectory(Testing)\n\n#endif()\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "Libs/QtTesting/target_libraries.cmake" : {
      "ObjectId" : "ff4906e242a001af6edcbea78f67850f7e52a9db",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# \n\n# This file should list the libraries required to build the current CTK libraries\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Libs/Scripting/Python/Core/CMakeLists.txt" : {
      "ObjectId" : "4f76182919af6cb1c20d943d2b71b7250d4f9825",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CTK/CMake/ctkMacroBuildLib.cmake for details\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Source files\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Headers that should run through moc\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# UI files\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Resources\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# Configure file describing which Qt modules are wrapped\n\n#\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Target libraries - See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# The following macro will read the target libraries from the file 'target_libraries.cmake'\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Plugins\n\n#if(CTK_BUILD_QTDESIGNER_PLUGINS)\n\n#  add_subdirectory(Plugins)\n\n#endif()\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Testing\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "Libs/Scripting/Python/Core/Python/CMakeLists.txt" : {
      "ObjectId" : "e8c3376925f288ec669d98dac966e708b2e10881",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If it applies, the variable CTK_PYTHON_WRAPPED_LIBRARIES will contain\n\n# the comma separated list of package to load\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add single quotes\n",
        "Line" : 24,
        "CharPositionInLine" : 54
      },
      "CommentCount" : 2
    },
    "Libs/Scripting/Python/Core/Testing/CMakeLists.txt" : {
      "ObjectId" : "002387f590e6b36a9b16bd978408edf8aa18a11e",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Libs/Scripting/Python/Core/Testing/Cpp/CMakeLists.txt" : {
      "ObjectId" : "4dcf685982d7ce6cba4c945ebb4fc7845327c498",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#EXTRA_INCLUDE TestingMacros.h\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#\n\n# Add Tests\n\n#\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Libs/Scripting/Python/Core/ctk_library_options.cmake" : {
      "ObjectId" : "774776ba0c909905f9721014174f471ef4800320",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkMacroAddCtkLibraryOptions.cmake\n\n#\n\n# This file should list of options available for considered CTK library\n\n# For example: MYOPT1:OFF MYOPT2:ON\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Libs/Scripting/Python/Core/target_libraries.cmake" : {
      "ObjectId" : "d04ea23fbe75a3007b7079aa6b87dcd1583705e1",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# \n\n# This file should list the libraries required to build the current CTK libraries\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Libs/Scripting/Python/Widgets/CMakeLists.txt" : {
      "ObjectId" : "1fa0a9900faaef85bbef08644e05a77514662eaa",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CTK/CMake/ctkMacroBuildLib.cmake for details\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Source files\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Headers that should run through moc\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# UI files\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Resources\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Target libraries - See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# The following macro will read the target libraries from the file 'target_libraries.cmake'\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Plugins\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Testing\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "Libs/Scripting/Python/Widgets/Plugins/CMakeLists.txt" : {
      "ObjectId" : "f57cf02da80c8e3b6eee6e69012aa5dbfbcb4399",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CTK/CMake/ctkMacroBuildQtPlugin.cmake for details\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Source files\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Headers that should run through moc\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Resources\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Target libraries\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Libs/Scripting/Python/Widgets/Testing/CMakeLists.txt" : {
      "ObjectId" : "002387f590e6b36a9b16bd978408edf8aa18a11e",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Libs/Scripting/Python/Widgets/Testing/Cpp/CMakeLists.txt" : {
      "ObjectId" : "ce8ba7962c4371e6d671b0d9ef9a77c755e60196",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#EXTRA_INCLUDE TestingMacros.h\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#\n\n# Add Tests\n\n#\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Libs/Scripting/Python/Widgets/target_libraries.cmake" : {
      "ObjectId" : "d7f86591509216bf35e6bdba11af3ad24a545533",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# \n\n# This file should list the libraries required to build the current CTK libraries\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Libs/Testing/CMakeLists.txt" : {
      "ObjectId" : "1b585d0029eaac437074f7dd11dbfe87dac77f45",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Libs/Testing/target_libraries.cmake" : {
      "ObjectId" : "1b11bb380323aad70e63176241247e8012602a36",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# \n\n# This file should list the libraries required to build the current CTK libraries\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Libs/Visualization/VTK/Core/CMakeLists.txt" : {
      "ObjectId" : "35e071797a424094816426350c4c669be568b0fb",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# 3rd party dependencies\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# See CTK/CMake/ctkMacroBuildLib.cmake for details\n\n#\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Source files\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Headers that should run through moc\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# UI files\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Resources\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set VTK_LIBRARIES variable\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# a few of these have to be specified explicitly to workaround\n\n# underlinked libraries from the debian VTK package\n\n# see Debian bug #747436\n",
        "Line" : 67,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# With VTK > 6.2.0 (commit 4f7460a5), vtkRenderingFreeTypeOpenGL has been removed.\n",
        "Line" : 91,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# If the faster 'gold' linker is used, to avoid complaints about undefined symbol\n\n# 'XGetWindowAttributes', 'XCreateWindow', ..., let's link against X11 libraries.\n",
        "Line" : 159,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Target libraries - See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# The following macro will read the target libraries from the file 'target_libraries.cmake'\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Plugins\n\n#if(CTK_BUILD_QTDESIGNER_PLUGINS)\n\n#  add_subdirectory(Plugins)\n\n#endif()\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Testing\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "Libs/Visualization/VTK/Core/Testing/CMakeLists.txt" : {
      "ObjectId" : "cdeb442a1d5a6c92d4148a2dc9efc27924ad0b86",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Libs/Visualization/VTK/Core/Testing/Cpp/CMakeLists.txt" : {
      "ObjectId" : "dc7efea8222113a6302c64dadfe4e4ceae5055a5",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Tests\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Tests expecting CTKData to be set\n\n#\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Pre-requisites\n\n#\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Test helpers\n\n#\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Tests\n\n#\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#EXTRA_INCLUDE TestingMacros.h\n",
        "Line" : 56,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#\n\n# Add Tests\n\n#\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# Add Tests expecting CTKData to be set\n\n#\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "Libs/Visualization/VTK/Core/target_libraries.cmake" : {
      "ObjectId" : "b443088e23f21917df312127b2af22e5eab43b34",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# \n\n# This file should list the libraries required to build the current CTK libraries\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Libs/Visualization/VTK/Widgets/CMakeLists.txt" : {
      "ObjectId" : "077162e51a7170e31bf855b237dad1fa8fabb713",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CTK/CMake/ctkMacroBuildLib.cmake for details\n\n#\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Add the libraries QtTesting\n\n#\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For ctkConfig.h\n",
        "Line" : 18,
        "CharPositionInLine" : 24
      },
      "3" : {
        "Text" : "# Source files\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Headers that should run through moc\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# UI files\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Resources\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Set VTK_LIBRARIES variable\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Target libraries - See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# The following macro will read the target libraries from the file 'target_libraries.cmake'\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# If we use QtTessting, we add all the dependencies\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Prefer QVTKOpenGLWidget to QVTKWidget when using Qt5\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Detect if QVTKOpenGLNativeWidget.h is available\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Plugins\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Testing\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "Libs/Visualization/VTK/Widgets/Plugins/CMakeLists.txt" : {
      "ObjectId" : "0a2d26f5cd451d5cf765280acde3b61e1e7a09bc",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CTK/CMake/ctkMacroBuildQtPlugin.cmake for details\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Source files\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Headers that should run through moc\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Resources\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Resources/CTKVisualizationVTKWidgetsPlugins.qrc\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Target libraries\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "Libs/Visualization/VTK/Widgets/Testing/CMakeLists.txt" : {
      "ObjectId" : "cdeb442a1d5a6c92d4148a2dc9efc27924ad0b86",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Libs/Visualization/VTK/Widgets/Testing/Cpp/CMakeLists.txt" : {
      "ObjectId" : "89fddc8acbeea0d09d8661bb4f69994aa0c24121",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Tests\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Tests expecting CTKData to be set\n\n#\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Test expecting CTK_USE_QTTESTING to be ON\n\n#\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#    ctkVTKMagnifyViewEventTranslatorPlayerTest1.cpp\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#    ctkVTKScalarsToColorsUtilsEventTranslatorPlayerTest1.cpp\n\n#    ctkVTKScalarsToColorsViewEventTranslatorPlayerTest1.cpp\n\n#    ctkVTKScalarsToColorsWidgetEventTranslatorPlayerTest1.cpp\n\n#    ctkVTKSliceViewEventTranslatorPlayerTest1.cpp\n\n#    ctkVTKSurfaceMaterialPropertyWidgetEventTranslatorPlayerTest1.cpp\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#    ctkVTKThresholdWidgetEventTranslatorPlayerTest1.cpp\n\n#    ctkVTKVolumePropertyWidgetEventTranslatorPlayerTest1.cpp\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#EXTRA_INCLUDE TestingMacros.h\n",
        "Line" : 93,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#\n\n# Add Tests\n\n#\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n\n# Add Tests expecting CTKData to be set\n\n#\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#\n\n# Dependencies required so that these tests won't run in parallel\n\n#\n",
        "Line" : 214,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#\n\n# Add Tests expecting CTK_USE_QTTESTING to be set\n\n#\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#    SIMPLE_TEST( ctkVTKMagnifyViewEventTranslatorPlayerTest1 )\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#    SIMPLE_TEST( ctkVTKScalarsToColorsUtilsEventTranslatorPlayerTest1 )\n\n#    SIMPLE_TEST( ctkVTKScalarsToColorsViewEventTranslatorPlayerTest1 )\n\n#    SIMPLE_TEST( ctkVTKScalarsToColorsWidgetEventTranslatorPlayerTest1 )\n\n#    SIMPLE_TEST( ctkVTKSliceViewEventTranslatorPlayerTest1 )\n\n#    SIMPLE_TEST( ctkVTKSurfaceMaterialPropertyWidgetEventTranslatorPlayerTest1 )\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#    SIMPLE_TEST( ctkVTKThresholdWidgetEventTranslatorPlayerTest1 )\n\n#    SIMPLE_TEST( ctkVTKVolumePropertyWidgetEventTranslatorPlayerTest1 )\n",
        "Line" : 251,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "Libs/Visualization/VTK/Widgets/ctk_library_options.cmake" : {
      "ObjectId" : "b39adad6be5f36e86e85dae67312701ea1efd1fc",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkMacroAddCtkLibraryOptions.cmake\n\n#\n\n# This file should list of options available for considered CTK library\n\n# For example: MYOPT1:OFF MYOPT2:ON\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Libs/Visualization/VTK/Widgets/target_libraries.cmake" : {
      "ObjectId" : "7edaeb805d4283174f9e520074fb751feada2be5",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# \n\n# This file should list the libraries required to build the current CTK libraries\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Libs/Widgets/CMakeLists.txt" : {
      "ObjectId" : "c272782ffba7651e5370f7fd411262c335cbd2a0",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CTK/CMake/ctkMacroBuildLib.cmake for details\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add local include directory for FreeBSD\n\n# (QtOpengl can't find GL/gl.h)\n\n# actual bug: https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=195105\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Add the libraries QtTesting\n\n#\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# For ctkConfig.h\n",
        "Line" : 23,
        "CharPositionInLine" : 24
      },
      "4" : {
        "Text" : "# Source files\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Headers that should run through moc\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Headers that should run through moc without adding\n\n# the generated cpp file to the source list\n",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# UI files\n",
        "Line" : 330,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Resources\n",
        "Line" : 347,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Target libraries - See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# The following macro will read the target libraries from the file 'target_libraries.cmake'\n",
        "Line" : 352,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# A player and a translator must be added for custom Qt widgets\n",
        "Line" : 360,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Plugins\n",
        "Line" : 468,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Testing\n",
        "Line" : 473,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "Libs/Widgets/Plugins/CMakeLists.txt" : {
      "ObjectId" : "faa712642744d069b579ac89c5e39d0ba5bc3e01",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CTK/CMake/ctkMacroBuildQtPlugin.cmake for details\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Source files\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#ctkExtensionFactory.cpp\n\n#ctkExtensionFactory.h\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Headers that should run through moc\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#ctkExtensionFactory.h\n",
        "Line" : 125,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Resources\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Target libraries\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Libs/Widgets/Testing/CMakeLists.txt" : {
      "ObjectId" : "cdeb442a1d5a6c92d4148a2dc9efc27924ad0b86",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Libs/Widgets/Testing/Cpp/CMakeLists.txt" : {
      "ObjectId" : "7d664323089f973de74ed3828f2384e47a9d3805",
      "LastModified" : "2019-04-15T20:39:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Tests expecting CTKData to be set\n\n#\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#    ctkDateRangeWidgetEventTranslatorPlayerTest1.cpp\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#    ctkScreenshotDialogEventTranslatorPlayerTest1.cpp\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#    ctkWorkflowAbstractPagedWidgetEventTranslatorPlayerTest1.cpp\n\n#    ctkWorkflowButtonBoxWidgetEventTranslatorPlayerTest1.cpp\n\n#    ctkWorkflowGroupBoxEventTranslatorPlayerTest1.cpp\n\n#    ctkWorkflowStackedWidgetEventTranslatorPlayerTest1.cpp\n\n#    ctkWorkflowTabWidgetEventTranslatorPlayerTest1.cpp\n\n#    ctkWorkflowWidgetEventTranslatorPlayerTest1.cpp\n\n#    ctkWorkflowWidgetStepEventTranslatorPlayerTest1.cpp\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Add Tests\n\n#\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# Add Tests expecting CTKData to be set\n\n#\n",
        "Line" : 376,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add Tests expecting CTK_USE_QTTESTING to be set\n\n#\n",
        "Line" : 384,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#  SIMPLE_TEST( ctkDateRangeWidgetEventTranslatorPlayerTest1 )\n",
        "Line" : 401,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#  SIMPLE_TEST( ctkMenuButtonEventTranslatorPlayerTest1 )\n",
        "Line" : 410,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#  SIMPLE_TEST( ctkScreenshotDialogEventTranslatorPlayerTest1 )\n",
        "Line" : 418,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#  SIMPLE_TEST( ctkWorkflowAbstractPagedWidgetEventTranslatorPlayerTest1 )\n\n#  SIMPLE_TEST( ctkWorkflowButtonBoxWidgetEventTranslatorPlayerTest1 )\n\n#  SIMPLE_TEST( ctkWorkflowGroupBoxEventTranslatorPlayerTest1 )\n\n#  SIMPLE_TEST( ctkWorkflowStackedWidgetEventTranslatorPlayerTest1 )\n\n#  SIMPLE_TEST( ctkWorkflowTabWidgetEventTranslatorPlayerTest1 )\n\n#  SIMPLE_TEST( ctkWorkflowWidgetEventTranslatorPlayerTest1 )\n\n#  SIMPLE_TEST( ctkWorkflowWidgetStepEventTranslatorPlayerTest1 )\n",
        "Line" : 423,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "Libs/Widgets/target_libraries.cmake" : {
      "ObjectId" : "e8c9d7af09270e04be545b17d3edb58d22fa8146",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n#\n\n# This file should list the libraries required to build the current CTK libraries\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Libs/XNAT/Core/CMakeLists.txt" : {
      "ObjectId" : "054ec6bdb042ffb0168b8c7531fea12442a1b5b0",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CTK/CMake/ctkMacroBuildLib.cmake for details\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Files which should be processed by Qts moc\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Resources\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Target libraries - See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# The following macro will read the target libraries from the file 'target_libraries.cmake'\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Testing\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Libs/XNAT/Core/Testing/CMakeLists.txt" : {
      "ObjectId" : "4caace6d5e674bce7dabe9fe795667cc472484d3",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Libs/XNAT/Core/target_libraries.cmake" : {
      "ObjectId" : "8702af1e3f8bb45f8e9a626863f0c5593122d2ef",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n#\n\n# This file should list the libraries required to build the current CTK libraries\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Libs/XNAT/Widgets/CMakeLists.txt" : {
      "ObjectId" : "505f1d9958603a587d917a528b0fb1163c307bfa",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CTK/CMake/ctkMacroBuildLib.cmake for details\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Files which should be processed by Qts moc\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# UI forms\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Resources\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Target libraries - See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# The following macro will read the target libraries from the file 'target_libraries.cmake'\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Testing\n\n#if(BUILD_TESTING)\n\n#  add_subdirectory(Testing)\n\n#\n\n#  # Compile source code snippets\n\n#  add_subdirectory(Documentation/Snippets)\n\n#endif()\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "Libs/XNAT/Widgets/target_libraries.cmake" : {
      "ObjectId" : "441c34bb34d2fbcb3f85c7097165df08fee10caa",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n#\n\n# This file should list the libraries required to build the current CTK libraries\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Plugins/org.commontk.configadmin/CMakeLists.txt" : {
      "ObjectId" : "9c851158b1b8bdf4626131a32e03095455491379",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Files which should be processed by Qts moc\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Qt Designer files which should be processed by Qts uic\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# QRC Files which should be compiled into the plugin\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Compute the plugin dependencies\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Testing\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Plugins/org.commontk.configadmin/Testing/CMakeLists.txt" : {
      "ObjectId" : "cdeb442a1d5a6c92d4148a2dc9efc27924ad0b86",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.commontk.configadmin/Testing/Cpp/CMakeLists.txt" : {
      "ObjectId" : "2926d99b94437bfcea46e0005eb5470f6892c809",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#QT4_WRAP_CPP(MY_MOC_CXX ${MOC_SRCS})\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Plugins/org.commontk.configadmin/manifest_headers.cmake" : {
      "ObjectId" : "f88566f7a88d40b126b8f5135ab8272e21e852e8",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.commontk.configadmin/target_libraries.cmake" : {
      "ObjectId" : "b24576f07e7ac4489ccb4b21862c351223c015ba",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n#\n\n# This file should list the libraries required to build the current CTK plugin.\n\n# For specifying required plugins, see the manifest_headers.cmake file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Plugins/org.commontk.dah.cmdlinemoduleapp/CMakeLists.txt" : {
      "ObjectId" : "94d82ea4b620e2e1aa52e316a571f6bd197a713f",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Files which should be processed by Qts moc\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Qt Designer files which should be processed by Qts uic\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# QRC Files which should be compiled into the plugin\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#  resources/ctkCommandLineModuleApp.qrc\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Compute the plugin dependencies\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Plugins/org.commontk.dah.cmdlinemoduleapp/manifest_headers.cmake" : {
      "ObjectId" : "b1f923c2e00036f32a0279ecb863d1eefd13b841",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.commontk.dah.cmdlinemoduleapp/target_libraries.cmake" : {
      "ObjectId" : "eab14270465ad917f07fefc585713c091e67b28a",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkMacroGetTargetLibraries.cmake\n\n# \n\n# This file should list the libraries required to build the current CTK libraries\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Plugins/org.commontk.dah.core/CMakeLists.txt" : {
      "ObjectId" : "b2577ea4d0f369cc115cdeeb6982745a30b257dd",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#message(QtSOAP_LIBRARY_DIRS:${QtSOAP_LIBRARY_DIRS})\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Files which should be processed by Qts moc\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Qt Designer files which should be processed by Qts uic\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# QRC Files which should be compiled into the plugin\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Compute the plugin dependencies\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Plugins/org.commontk.dah.core/Testing/CMakeLists.txt" : {
      "ObjectId" : "cdeb442a1d5a6c92d4148a2dc9efc27924ad0b86",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.commontk.dah.core/Testing/Cpp/CMakeLists.txt" : {
      "ObjectId" : "f1f7d3166b4086623a295b6069cd6352523af473",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Add Tests\n\n#\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Plugins/org.commontk.dah.core/target_libraries.cmake" : {
      "ObjectId" : "8134156fdd4ba76dbbda2222becd6a45bf27c90e",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n#\n\n# This file should list the libraries required to build the current CTK plugin.\n\n# For specifying required plugins, see the manifest_headers.cmake file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Plugins/org.commontk.dah.exampleapp/CMakeLists.txt" : {
      "ObjectId" : "7e4ca59adaedad92ae7850e3861e4382fa3286bc",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Files which should be processed by Qts moc\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Qt Designer files which should be processed by Qts uic\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# QRC Files which should be compiled into the plugin\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Compute the plugin dependencies\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Plugins/org.commontk.dah.exampleapp/manifest_headers.cmake" : {
      "ObjectId" : "b1f923c2e00036f32a0279ecb863d1eefd13b841",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.commontk.dah.exampleapp/target_libraries.cmake" : {
      "ObjectId" : "893a0dd8d233f252587341151831d658cbec9097",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkMacroGetTargetLibraries.cmake\n\n# \n\n# This file should list the libraries required to build the current CTK libraries\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Plugins/org.commontk.dah.examplehost/CMakeLists.txt" : {
      "ObjectId" : "f6c6d030536ac6467aab6c2e1afd838d54a36fe2",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Files which should be processed by Qts moc\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Qt Designer files which should be processed by Qts uic\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# QRC Files which should be compiled into the plugin\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Compute the plugin dependencies\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Plugins/org.commontk.dah.examplehost/manifest_headers.cmake" : {
      "ObjectId" : "c999e2cfc311b732822d9d88b8b0f2762c6ecec1",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.commontk.dah.host/CMakeLists.txt" : {
      "ObjectId" : "492e5ff82dcfb1a6f0d432c081df1f93b2725941",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Files which should be processed by Qts moc\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Qt Designer files which should be processed by Qts uic\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# QRC Files which should be compiled into the plugin\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Compute the plugin dependencies\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Plugins/org.commontk.dah.host/manifest_headers.cmake" : {
      "ObjectId" : "9706fc140bdb37e4ee84cd6516c530be41ba0c96",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.commontk.dah.hostedapp/CMakeLists.txt" : {
      "ObjectId" : "574d6a110a0e1b007b9147d053efecb07b0e5e8a",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Files which should be processed by Qts moc\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Qt Designer files which should be processed by Qts uic\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# QRC Files which should be compiled into the plugin\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Compute the plugin dependencies\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Plugins/org.commontk.dah.hostedapp/manifest_headers.cmake" : {
      "ObjectId" : "5f3afce67dd9977cd98f44c5710defe320175c04",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.commontk.eventadmin/CMakeLists.txt" : {
      "ObjectId" : "ba2d9b973b11855443c45df772c1b3d283b61212",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Testing\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Plugins/org.commontk.eventadmin/Testing/CMakeLists.txt" : {
      "ObjectId" : "cdeb442a1d5a6c92d4148a2dc9efc27924ad0b86",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.commontk.eventadmin/Testing/Cpp/CMakeLists.txt" : {
      "ObjectId" : "c0b7fcc4bf1599441516b9ddfde37fbabbdcb7b1",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#QT4_WRAP_CPP(MY_MOC_CXX ${MOC_SRCS})\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create a test for this EventAdmin implementation\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Create a performance test for this EventAdmin implementation\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#set(my_includes)\n\n#ctkFunctionGetIncludeDirs(my_includes ${test_executable})\n\n#include_directories(${my_includes})\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Plugins/org.commontk.eventadmin/manifest_headers.cmake" : {
      "ObjectId" : "f88566f7a88d40b126b8f5135ab8272e21e852e8",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.commontk.eventadmin/target_libraries.cmake" : {
      "ObjectId" : "fd844540bc33805baa3d6754dd62d59eed728797",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# \n\n# This file should list the libraries required to build the current CTK plugin.\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Plugins/org.commontk.eventbus/CMakeLists.txt" : {
      "ObjectId" : "e4f99fcbebca21ce9e67d31124e5f40838f88f07",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#org_commontk_eventbus.qrc\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Testing\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Plugins/org.commontk.eventbus/Testing/CMakeLists.txt" : {
      "ObjectId" : "cdeb442a1d5a6c92d4148a2dc9efc27924ad0b86",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.commontk.eventbus/Testing/Cpp/CMakeLists.txt" : {
      "ObjectId" : "cac9dfd96e3023a660b40f1adfad246f18e8fe03",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Extract current directory name to use as project name\n\n#file(GLOB CUR_FILE \"CMakeLists.txt\")\n\n#get_filename_component(CUR_ABSOLUTE_DIR ${CUR_FILE} PATH)\n\n#get_filename_component(DIR_NAME ${CUR_ABSOLUTE_DIR} NAME)\n\n#project(${DIR_NAME})\n",
        "Line" : 3,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Set your list of sources here.\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "## Add the project binary dir as include dir for the .moc files.\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "## Moc the tests:\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "## extract the base file name.\n",
        "Line" : 33,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "## Exclude the main.cpp file (it doesn't ned to be 'mocced')\n",
        "Line" : 35,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "## Assign the moc custom filename\n",
        "Line" : 37,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "## Moc the library's .h files\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#QT5_ADD_RESOURCES(MY_RESOURCE_CXX ${resource_file_list})\n",
        "Line" : 52,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "#QT4_ADD_RESOURCES(MY_RESOURCE_CXX ${resource_file_list})\n",
        "Line" : 56,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# List libraries that are needed by this project.\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "#link_libraries(${PROJECT_LIBS})\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "Plugins/org.commontk.eventbus/Testing/Cpp/target_libraries.cmake" : {
      "ObjectId" : "3d9a6804d07008f5e3831f5047cb563d4b7a2a5e",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# \n\n# This file should list the libraries required to build the current CTK plugin.\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Plugins/org.commontk.eventbus/manifest_headers.cmake" : {
      "ObjectId" : "6460f76868c5a3f5945e1e9d47b1ee7590205687",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(Plugin-ActivationPolicy \"eager\")\n\n#set(Plugin-Name \"Remote Event Bus\")\n\n#set(Plugin-Version 0.9)\n\n#set(Plugin-Vendor \"SCS/B3C\")\n\n#set(Plugin-Description \"An event bus implementation supporting local and remote events\")\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Plugins/org.commontk.eventbus/target_libraries.cmake" : {
      "ObjectId" : "2d1b49038032b152562a1d8daeff268145bb4e58",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# \n\n# This file should list the libraries required to build the current CTK plugin.\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Plugins/org.commontk.log/CMakeLists.txt" : {
      "ObjectId" : "3a7fa0bfd1ad60f146c42c7d5d142c8ecfe7a0a4",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Files which should be processed by Qts moc\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Qt Designer files which should be processed by Qts uic\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# QRC Files which should be compiled into the plugin\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Compute the plugin dependencies\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Plugins/org.commontk.log/manifest_headers.cmake" : {
      "ObjectId" : "58815e3a8bb8adc18502426db6767a8b1086cfdc",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.commontk.log/target_libraries.cmake" : {
      "ObjectId" : "b24576f07e7ac4489ccb4b21862c351223c015ba",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n#\n\n# This file should list the libraries required to build the current CTK plugin.\n\n# For specifying required plugins, see the manifest_headers.cmake file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Plugins/org.commontk.log4qt/CMakeLists.txt" : {
      "ObjectId" : "dced8a7a75c37557123a060c6f5604778167d333",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Files which should be processed by Qts moc\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Qt Designer files which should be processed by Qts uic\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# QRC Files which should be compiled into the plugin\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Compute the plugin dependencies\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Plugins/org.commontk.log4qt/manifest_headers.cmake" : {
      "ObjectId" : "b3a29e82e4f055f0b0019f06d80d87535916048f",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.commontk.log4qt/target_libraries.cmake" : {
      "ObjectId" : "a34996b894ef8b4c212bd152695c6f3082b2f139",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n#\n\n# This file should list the libraries required to build the current CTK plugin.\n\n# For specifying required plugins, see the manifest_headers.cmake file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Plugins/org.commontk.metatype/CMakeLists.txt" : {
      "ObjectId" : "3c99483c13279d3f61fd0d9fb62f260235022357",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Files which should be processed by Qts moc\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Qt Designer files which should be processed by Qts uic\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# QRC Files which should be compiled into the plugin\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Compute the plugin dependencies\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Testing\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Plugins/org.commontk.metatype/Testing/CMakeLists.txt" : {
      "ObjectId" : "cdeb442a1d5a6c92d4148a2dc9efc27924ad0b86",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.commontk.metatype/Testing/Cpp/CMakeLists.txt" : {
      "ObjectId" : "58d53fd2d346df1c4021640397091765e2da7eee",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#QT4_WRAP_CPP(MY_MOC_CXX ${MOC_SRCS})\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Plugins/org.commontk.metatype/manifest_headers.cmake" : {
      "ObjectId" : "f88566f7a88d40b126b8f5135ab8272e21e852e8",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.commontk.metatype/target_libraries.cmake" : {
      "ObjectId" : "b24576f07e7ac4489ccb4b21862c351223c015ba",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n#\n\n# This file should list the libraries required to build the current CTK plugin.\n\n# For specifying required plugins, see the manifest_headers.cmake file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Plugins/org.commontk.plugingenerator.core/CMakeLists.txt" : {
      "ObjectId" : "49dcd4c736892e0c2c5421556676e71de0b3a808",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.commontk.plugingenerator.core/target_libraries.cmake" : {
      "ObjectId" : "fd844540bc33805baa3d6754dd62d59eed728797",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# \n\n# This file should list the libraries required to build the current CTK plugin.\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Plugins/org.commontk.plugingenerator.ui/CMakeLists.txt" : {
      "ObjectId" : "0f74f26e5c7d019324c8f7e728bc2f3c10441a84",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.commontk.plugingenerator.ui/manifest_headers.cmake" : {
      "ObjectId" : "106e6141383a0794c590d66a5f7f4c97403126b4",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Plugins/org.commontk.plugingenerator.ui/target_libraries.cmake" : {
      "ObjectId" : "35cb95e151aea6efa3464b8d29ef5084ca04fe6e",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# See CMake/ctkFunctionGetTargetLibraries.cmake\n\n# \n\n# This file should list the libraries required to build the current CTK plugin.\n\n# To specify required plugins, see the file manifest_headers.cmake.\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "SuperBuild.cmake" : {
      "ObjectId" : "d9216b839363d8c5de938d231b8b18224e78a268",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################################\n\n#\n\n#  Library:   CTK\n\n#\n\n#  Copyright (c) Kitware Inc.\n\n#\n\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n\n#  you may not use this file except in compliance with the License.\n\n#  You may obtain a copy of the License at\n\n#\n\n#      http://www.apache.org/licenses/LICENSE-2.0.txt\n\n#\n\n#  Unless required by applicable law or agreed to in writing, software\n\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n#  See the License for the specific language governing permissions and\n\n#  limitations under the License.\n\n#\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# WARNING - No change should be required after this comment\n\n#           when you are adding a new external project dependency.\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Make sure ${CTK_BINARY_DIR}/CTK-build/bin exists\n\n# May be used by some external project to install libs \n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Utilities/CMake/FindDCMTK.cmake" : {
      "ObjectId" : "0d1ff79350e50de4ed472cd4c2f17616f00e14f8",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - find DCMTK libraries and applications\n\n# The module defines the following variables:\n\n#\n\n#  DCMTK_INCLUDE_DIRS  - Directories to include to use DCMTK\n\n#  DCMTK_LIBRARIES     - Files to link against to use DCMTK\n\n#  DCMTK_FOUND         - If false, don't try to use DCMTK\n\n#  DCMTK_DIR           - (optional) Source directory for DCMTK\n\n#\n\n# DCMTK_DIR can be used to make it simpler to find the various include\n\n# directories and compiled libraries if you've just compiled it in the\n\n# source tree. Just set it to the root of the tree where you extracted\n\n# the source (default to /usr)\n\n#\n\n#\n\n# This file is able to find version of DCMTK that do or do not export\n\n# a DCMTKConfig.cmake file.\n\n#\n\n# IMPORTANT: A set of patches has been contributed to DCMTK\n\n# maintainers, as soon as:\n\n#   (1) it has been integrated upstream so that it is available in\n\n#   an official release (for example X.Y.Z),\n\n#   (2) code bases have been updated to build against X.Y.Z\n\n# This file could be removed.\n\n#\n\n# The set of patches is listed here: https://github.com/commontk/DCMTK/compare/79030ba...f461865\n\n#\n\n#\n\n# Waiting for this to happen, build systems will have to be able\n\n# to support different versions of DCMTK.\n\n#\n\n# On any given system, the following combination of DCMTK version could be\n\n# considered:\n\n#\n\n#         |   SYSTEM DCMTK      +      LOCAL DCMTK      |     Supported ?   |\n\n# ---------------------------------------------------------------------------\n\n# Case A  |   NA                +      [ ] DCMTKConfig  |         YES       |\n\n# ------------------------------------------------------|--------------------\n\n# Case B  |   NA                +      [X] DCMTKConfig  |         YES       |\n\n# ------------------------------------------------------|--------------------\n\n# Case C  |   [ ] DCMTKConfig   +      NA               |         YES       |\n\n# ------------------------------------------------------|--------------------\n\n# Case D  |   [X] DCMTKConfig   +      NA               |         YES       |\n\n# ------------------------------------------------------|--------------------\n\n# Case E  |   [ ] DCMTKConfig   +      [ ] DCMTKConfig  |         YES (*)   |\n\n# ------------------------------------------------------|--------------------\n\n# Case F  |   [X] DCMTKConfig   +      [ ] DCMTKConfig  |         NO        |\n\n# ------------------------------------------------------|--------------------\n\n# Case G  |   [ ] DCMTKConfig   +      [X] DCMTKConfig  |         YES       |\n\n# ------------------------------------------------------|--------------------\n\n# Case H  |   [X] DCMTKConfig   +      [X] DCMTKConfig  |         YES       |\n\n# ---------------------------------------------------------------------------\n\n#\n\n#  (*) See Troubleshooting section.\n\n#\n\n# Legend:\n\n#\n\n#   NA ...............: Means that no System or Local DCMTK is available\n\n#\n\n#   [ ] DCMTKConfig ..: Means that the version of DCMTK does NOT export a DCMTKConfig.cmake file.\n\n#\n\n#   [X] DCMTKConfig ..: Means that the version of DCMTK exports a DCMTKConfig.cmake file.\n\n#\n\n#\n\n#\n\n# In CTK commits 52d953 and 74b4b07, the FindDCMTK.cmake module has been updated to be able\n\n# to find both version of DCMTK ([ ] DCMTKConfig and [X] DCMTKConfig).\n\n#\n\n# It is a two steps process:\n\n#\n\n#   * Step 1:  Attempt to find DCMTK version providing a DCMTKConfig.cmake file. This is done\n\n#              with the help of ''\n\n#\n\n#   * Step 2:  If step 1 failed, rely on FindDCMTK.cmake to set DCMTK_* variables details below.\n\n#\n\n#\n\n#\n\n# Troubleshooting:\n\n#\n\n#    What to do if my project find a different version of DCMTK ?\n\n#\n\n#    Remove DCMTK entry from the CMake registry.\n\n#    Search for \"CMake user package registry\" on http://www.cmake.org/cmake/help/v2.8.9/cmake.html#command:find_package\n\n#\n\n#    Details: As some point, the DCMTK build tree was exported [1][2][3]. Indeed, before the set of\n\n#    patches discussed above has been contributed to upstream DCMTK, an initial implementation of\n\n#    a DCMTK build system exporting its build tree has been implemented and has been tested by some\n\n#    folks. This had the effect of populating the CMake registry.\n\n#\n\n#    Since Step1 does not exclude the CMake registry, when dealing with case E, the incorrect version of\n\n#    DCMTK could be found.\n\n#\n\n#    [1] http://slicer-devel.65872.n3.nabble.com/Packaging-seems-to-work-again-tp4028121p4028134.html\n\n#    [2] https://www.assembla.com/spaces/slicerrt/tickets/244-dcmtk_dir-vs--dcmtkconfig-cmake?comment=267984263#comment:267984263\n\n#    [3] http://www.cmake.org/cmake/help/v2.8.11/cmake.html#command:export\n\n#\n\n#\n\n#=============================================================================\n\n# Copyright 2004-2009 Kitware, Inc.\n\n# Copyright 2009-2010 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n# Copyright 2010 Thomas Sondergaard <ts@medical-insight.com>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distributed this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Written for VXL by Amitha Perera.\n\n# Upgraded for GDCM by Mathieu Malaterre.\n\n# Modified for EasyViz by Thomas Sondergaard.\n\n#\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Ensure that DCMTK_DIR is set to a reasonable default value\n\n# so that DCMTK libraries can be found on a standard Unix distribution.\n\n# It also overwrite the value of DCMTK_DIR after this one has been\n\n# set by a successful discovery of DCMTK by the unpatched FindDCMTK.cmake module\n\n# distributed with CMake (as of 0167cea)\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Step1: Attempt to find a version of DCMTK providing a DCMTKConfig.cmake file.\n\n#\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Restore the value reset by the previous call to 'find_package(DCMTK QUIET NO_MODULE)'\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# Step2: Attempt to find a version of DCMTK that does NOT provide a DCMTKConfig.cmake file.\n\n#\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# prefer DCMTK_DIR over default system paths like /usr/lib\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# this is given to FIND_LIBRARY or FIND_PATH\n",
        "Line" : 157,
        "CharPositionInLine" : 63
      },
      "8" : {
        "Text" : "# Find all libraries, store debug and release separately\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Find Release libraries\n",
        "Line" : 179,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Find Debug libraries\n",
        "Line" : 192,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Add libraries to variable according to build type\n",
        "Line" : 208,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Hack - Not having a DCMTKConfig.cmake file to read the settings from, we will attempt to\n\n# find the library in all cases.\n\n# Ideally, pthread library should be discovered only if DCMTK_WITH_THREADS is enabled.\n",
        "Line" : 221,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "#\n\n# SPECIFIC CASE FOR DCMTK BUILD DIR as DCMTK_DIR\n\n# (as opposed to a DCMTK install dir)\n\n# Have to find the source directory.\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# add the 'include' path so eg\n\n#include \"dcmtk/dcmimgle/dcmimage.h\"\n\n# works\n",
        "Line" : 296,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Compatibility: This variable is deprecated\n",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Workaround bug in packaging of DCMTK 3.6.0 on Debian.\n\n# See http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=637687\n",
        "Line" : 331,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "Utilities/CMake/FindOpenIGTLink.cmake" : {
      "ObjectId" : "7b5aa0b964f5413dff366d28599f602dcac3c27a",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find an OpenIGTLink installation or build tree.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# When OpenIGTLink is found, the OpenIGTLinkConfig.cmake file is sourced to setup the\n\n# location and configuration of OpenIGTLink.  Please read this file, or\n\n# OpenIGTLinkConfig.cmake.in from the OpenIGTLink source tree for the full list of\n\n# definitions.  Of particular interest is OpenIGTLink_USE_FILE, a CMake source file\n\n# that can be included to set the include directories, library directories,\n\n# and preprocessor macros.  In addition to the variables read from\n\n# OpenIGTLinkConfig.cmake, this find module also defines\n\n#  OpenIGTLink_DIR  - The directory containing OpenIGTLinkConfig.cmake.  \n\n#             This is either the root of the build tree, \n\n#             or the lib/InsightToolkit directory.  \n\n#             This is the only cache entry.\n\n#   \n\n#  OpenIGTLink_FOUND - Whether OpenIGTLink was found.  If this is true, \n\n#              OpenIGTLink_DIR is okay.\n\n#\n\n#  USE_OpenIGTLink_FILE - The full path to the UseOpenIGTLink.cmake file.  \n\n#                 This is provided for backward \n\n#                 compatability.  Use OpenIGTLink_USE_FILE\n\n#                 instead.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search only if the location is not already known.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Get the system search path as a list.\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Construct a set of paths relative to the system search path.\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#\n\n# Look for an installation or build tree.\n\n#\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Look for an environment variable OpenIGTLink_DIR.\n",
        "Line" : 46,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Look in places relative to the system executable search path.\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Look in standard UNIX install locations.\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Read from the CMakeSetup registry entries.  It is likely that\n\n# OpenIGTLink will have been recently built.\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Help the user find it if we cannot.\n",
        "Line" : 69,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# If OpenIGTLink was found, load the configuration file to get the rest of the\n\n# settings.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Set USE_OpenIGTLink_FILE for backward-compatability.\n",
        "Line" : 80,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 13
    },
    "Utilities/CMake/FindPythonQt.cmake" : {
      "ObjectId" : "5e61d97bf1dbe4c369b546f9a48f54e62110859c",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find PythonQt\n\n#\n\n# Sets PYTHONQT_FOUND, PYTHONQT_INCLUDE_DIR, PYTHONQT_LIBRARY, PYTHONQT_LIBRARIES\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Python is required\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# XXX Since PythonQt 3.0 is not yet cmakeified, depending\n\n#     on how PythonQt is built, headers will not always be\n\n#     installed in \"include/PythonQt\". That is why \"src\"\n\n#     is added as an option. See [1] for more details.\n\n#     [1] https://github.com/commontk/CTK/pull/538#issuecomment-86106367\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# On linux, also find libutil\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# All upper case _FOUND variable is maintained for backwards compatibility.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Currently CMake'ified PythonQt only supports building against a python Release build. \n\n# This applies independently of CTK build type (Release, Debug, ...)\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "Utilities/CMake/FindPythonQtGenerator.cmake" : {
      "ObjectId" : "481a3bb664ce024fb4a80843cb2280fd77590456",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find PythonQtGenerator\n\n#\n\n# Sets PYTHONQTGENERATOR_FOUND, PYTHONQTGENERATOR_EXECUTABLE\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Utilities/CMake/FindZMQ.cmake" : {
      "ObjectId" : "40e8fea9e254259c7abb5e97cddc61ca7de8c188",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find an ZMQ installation or build tree.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# When ZMQ is found, the ZMQConfig.cmake file is sourced to setup the\n\n# location and configuration of ZMQ.  Please read this file, or\n\n# ZMQConfig.cmake.in from the ZMQ source tree for the full list of\n\n# definitions.  Of particular interest is ZMQ_USE_FILE, a CMake source file\n\n# that can be included to set the include directories, library directories,\n\n# and preprocessor macros.  In addition to the variables read from\n\n# ZMQConfig.cmake, this find module also defines\n\n#  ZMQ_DIR  - The directory containing ZMQConfig.cmake.  \n\n#             This is either the root of the build tree, \n\n#             or the CTK/CMakeExternals/Build/ZMQ directory.  \n\n#             This is the only cache entry.\n\n#   \n\n#  ZMQ_FOUND - Whether ZMQ was found.  If this is true, \n\n#              ZMQ_DIR is okay.\n\n#\n\n#  USE_ZMQ_FILE - The full path to the ZMQ.cmake file.  \n\n#                 This is provided for backward \n\n#                 compatability.  Use ZMQ_USE_FILE\n\n#                 instead.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search only if the location is not already known.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Get the system search path as a list.\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Construct a set of paths relative to the system search path.\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#\n\n# Look for an installation or build tree.\n\n#\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Look for an environment variable ZMQ_DIR.\n",
        "Line" : 46,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Look in places relative to the system executable search path.\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Look in standard UNIX install locations.\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Read from the CMakeSetup registry entries.  It is likely that\n\n# ZMQ will have been recently built.\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Help the user find it if we cannot.\n",
        "Line" : 69,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# If ZMQ was found, load the configuration file to get the rest of the\n\n# settings.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Set USE_ZMQ_FILE for backward-compatability.\n",
        "Line" : 80,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 13
    },
    "Utilities/DGraph/CMakeLists.txt" : {
      "ObjectId" : "e62f09b71a6cd61bf69cec1c7c803b7f3a7b8948",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################################\n\n#\n\n#  Library:   CTK\n\n#\n\n#  Copyright (c) Kitware Inc.\n\n#\n\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n\n#  you may not use this file except in compliance with the License.\n\n#  You may obtain a copy of the License at\n\n#\n\n#      http://www.apache.org/licenses/LICENSE-2.0.txt\n\n#\n\n#  Unless required by applicable law or agreed to in writing, software\n\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n#  See the License for the specific language governing permissions and\n\n#  limitations under the License.\n\n#\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Do not export symbol in ctkDependencyGraph class\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Configure CTKCoreExport.h\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add excutable\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Utilities/KWStyle/KWStyle.cmake" : {
      "ObjectId" : "4c46fdd51a6f2152a801aaa00be2ad71ea32479a",
      "LastModified" : "2018-11-15T07:58:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 319
  },
  "ElapsedTime" : 3567
}