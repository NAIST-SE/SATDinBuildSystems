{
  "Repository" : "5179902",
  "Revision" : "HEAD",
  "ObjectId" : "885164d0fc8a8d37b692f377abe781dba976c707",
  "CommitTime" : "2019-02-22T05:48:44Z",
  "Files" : {
    "Cores/FCEU/FCEU/fir/Makefile" : {
      "ObjectId" : "a74f9187f4a8b20ce64b6d58016e636340c1ed25",
      "LastModified" : "2018-11-04T12:24:18Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#c44100ntsc.h:    c44100ntsc.coef\n\n#c48000ntsc.h:    c48000ntsc.coef\n\n#c96000ntsc.h:    c96000ntsc.coef\n\n#c44100pal.h:\tc44100pal.coef\n\n#c48000pal.h:\tc48000pal.coef\n\n#c96000pal.h:\tc96000pal.coef\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Cores/FCEU/FCEU/lua/src/Makefile" : {
      "ObjectId" : "e4a3cd6108c219f19030e2fe48cefa3b3869936a",
      "LastModified" : "2018-11-04T12:24:18Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# makefile for building Lua\n\n# see ../INSTALL for installation instructions\n\n# see ../Makefile and luaconf.h for further customization\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# == CHANGE THE SETTINGS BELOW TO SUIT YOUR ENVIRONMENT =======================\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Your platform. See PLATS for possible values.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# == END OF USER SETTINGS. NO NEED TO CHANGE ANYTHING BELOW THIS LINE =========\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# convenience targets for popular platforms\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# use this on Mac OS X 10.3-\n\n#\t$(MAKE) all MYCFLAGS=-DLUA_USE_MACOSX\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# list targets that do not create files (but not all makes understand .PHONY)\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# DO NOT DELETE\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# (end of Makefile)\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "Cores/Genesis-Plus-GX/PVGenesis/Genesis/GenesisCore/genplusgx_source/unused/dos/Makefile" : {
      "ObjectId" : "22579cef6f80ef47525190b5702cebf628af5864",
      "LastModified" : "2018-11-04T12:24:18Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for genplus DOS\r\n\n#\r\n\n# (c) 1999, 2000, 2001, 2002, 2003  Charles MacDonald\r\n\n# modified by Eke-Eke <eke_eke31@yahoo.fr>\r\n\n#\r\n\n# Defines :\r\n\n# -DLSB_FIRST - Leave undefined for big-endian processors.\r\n\n# -DDOS       - Enable DOS/x86 specific code.\r\n\n# -DDEBUG     - Enable debugging code\r\n\n# -DX86_ASM   - Enable inline x86 assembly code in Z80 emulator\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\r\n\n# end of makefile\r\n\n#\r\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Cores/Genesis-Plus-GX/PVGenesis/Genesis/GenesisCore/genplusgx_source/unused/win/Makefile" : {
      "ObjectId" : "585f2141562970c7a2665483ac18244274ee17cf",
      "LastModified" : "2018-11-04T12:24:18Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for genplus SDL\n\n#\n\n# (c) 1999, 2000, 2001, 2002, 2003  Charles MacDonald\n\n# modified by Eke-Eke <eke_eke31@yahoo.fr>\n\n#\n\n# Defines :\n\n# -DLSB_FIRST : for little endian systems.\n\n# -DLOGERROR  : enable message logging\n\n# -DLOGVDP    : enable VDP debug messages\n\n# -DLOGSOUND  : enable AUDIO debug messages\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-g -ggdb -pg\n\n#-fomit-frame-pointer\n\n#LDFLAGS   = -pg\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Cores/Mednafen/mednafen-1.21/Makefile" : {
      "ObjectId" : "f5df53ebb27bfca8ac66e2246189e74ea68bcf9b",
      "LastModified" : "2018-11-04T12:24:18Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile.in generated by automake 1.14.1 from Makefile.am.\n\n# Makefile.  Generated from Makefile.in by configure.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (C) 1994-2013 Free Software Foundation, Inc.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This Makefile.in is free software; the Free Software Foundation\n\n# gives unlimited permission to copy and/or distribute it,\n\n# with or without modifications, as long as this notice is preserved.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY, to the extent permitted by law; without\n\n# even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n\n# PARTICULAR PURPOSE.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Read a list of newline-separated strings from the standard input,\n\n# and print each of them once, without duplicates.  Input order is\n\n# *not* preserved.\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Make sure the list of sources is unique.  This is necessary because,\n\n# e.g., the same source file might be shared among _SOURCES variables\n\n# for different programs/libraries.\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# This directory's subdirectories are mostly independent; you can cd\n\n# into them and run 'make' without going through this Makefile.\n\n# To change the values of 'make' variables: instead of editing Makefiles,\n\n# (1) if the variable is set in 'config.status', edit 'config.status'\n\n#     (which will cause the Makefiles to be regenerated when you run 'make');\n\n# (2) otherwise, pass the desired values on the 'make' command line.\n",
        "Line" : 455,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7,
      "Errorlog" : "line 186:31 token recognition error at: '\\1'\nline 188:30 token recognition error at: '\\1'\nline 247:9 token recognition error at: '\\c'\nline 784:67 token recognition error at: '\"\\nclean: clean-recursive\\n\\nclean-am: clean-generic mostlyclean-am\\n\\ndistclean: distclean-recursive\\n\\t-rm -f $(am__CONFIG_DISTCLEAN_FILES)\\n\\t-rm -f Makefile\\ndistclean-am: clean-am distclean-generic distclean-hdr distclean-tags\\n\\ndvi: dvi-recursive\\n\\ndvi-am:\\n\\nhtml: html-recursive\\n\\nhtml-am:\\n\\ninfo: info-recursive\\n\\ninfo-am:\\n\\ninstall-data-am:\\n\\ninstall-dvi: install-dvi-recursive\\n\\ninstall-dvi-am:\\n\\ninstall-exec-am:\\n\\ninstall-html: install-html-recursive\\n\\ninstall-html-am:\\n\\ninstall-info: install-info-recursive\\n\\ninstall-info-am:\\n\\ninstall-man:\\n\\ninstall-pdf: install-pdf-recursive\\n\\ninstall-pdf-am:\\n\\ninstall-ps: install-ps-recursive\\n\\ninstall-ps-am:\\n\\ninstallcheck-am:\\n\\nmaintainer-clean: maintainer-clean-recursive\\n\\t-rm -f $(am__CONFIG_DISTCLEAN_FILES)\\n\\t-rm -rf $(top_srcdir)/autom4te.cache\\n\\t-rm -f Makefile\\nmaintainer-clean-am: distclean-am maintainer-clean-generic\\n\\nmostlyclean: mostlyclean-recursive\\n\\nmostlyclean-am: mostlyclean-generic\\n\\npdf: pdf-recursive\\n\\npdf-am:\\n\\nps: ps-recursive\\n\\nps-am:\\n\\nuninstall-am:\\n\\n.MAKE: $(am__recursive_targets) install-am install-strip\\n\\n.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am \\\\n\\tam--refresh check check-am clean clean-cscope clean-generic \\\\n\\tcscope cscopelist-am ctags ctags-am dist dist-all dist-bzip2 \\\\n\\tdist-gzip dist-lzip dist-shar dist-tarZ dist-xz dist-zip \\\\n\\tdistcheck distclean distclean-generic distclean-hdr \\\\n\\tdistclean-tags distcleancheck distdir distuninstallcheck dvi \\\\n\\tdvi-am html html-am info info-am install install-am \\\\n\\tinstall-data install-data-am install-dvi install-dvi-am \\\\n\\tinstall-exec install-exec-am install-html install-html-am \\\\n\\tinstall-info install-info-am install-man install-pdf \\\\n\\tinstall-pdf-am install-ps install-ps-am install-strip \\\\n\\tinstallcheck installcheck-am installdirs installdirs-am \\\\n\\tmaintainer-clean maintainer-clean-generic mostlyclean \\\\n\\tmostlyclean-generic pdf pdf-am ps ps-am tags tags-am uninstall \\\\n\\tuninstall-am\\n\\n\\n# Tell versions [3.59,3.63) of GNU make to not export all variables.\\n# Otherwise a system limit (for SysV at least) may be exceeded.\\n.NOEXPORT:\\n\u0000'\n"
    },
    "Cores/Mednafen/mednafen-1.21/Makefile.am" : {
      "ObjectId" : "1cdf970f522e6915289be1edd572855810416c75",
      "LastModified" : "2018-11-04T12:24:18Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Cores/Mednafen/mednafen-1.21/intl/Makefile" : {
      "ObjectId" : "983abbda609e212ef56a01e9e027d53a1e9cdf41",
      "LastModified" : "2018-11-04T12:24:18Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for directory with message catalog handling library of GNU gettext\n\n# Copyright (C) 1995-1998, 2000-2007, 2009-2010 Free Software Foundation, Inc.\n\n#\n\n# This program is free software; you can redistribute it and/or modify it\n\n# under the terms of the GNU Library General Public License as published\n\n# by the Free Software Foundation; either version 2, or (at your option)\n\n# any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n\n# Library General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU Library General Public\n\n# License along with this program; if not, write to the Free Software\n\n# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n\n# USA.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The VPATH variables allows builds with $builddir != $srcdir, assuming a\n\n# 'make' program that supports VPATH (such as GNU make). This line is removed\n\n# by autoconf automatically when \"$(srcdir)\" = \".\".\n\n# In this directory, the VPATH handling is particular:\n\n# 1. If INTL_LIBTOOL_SUFFIX_PREFIX is 'l' (indicating a build with libtool),\n\n#    the .c -> .lo rules carefully use $(srcdir), so that VPATH can be omitted.\n\n# 2. If PACKAGE = gettext-tools, VPATH _must_ be omitted, because otherwise\n\n#    'make' does the wrong thing if GNU gettext was configured with\n\n#    \"./configure --srcdir=`pwd`\", namely it gets confused by the .lo and .la\n\n#    files it finds in srcdir = ../../gettext-runtime/intl.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We use $(mkdir_p).\n\n# In automake <= 1.9.x, $(mkdir_p) is defined either as \"mkdir -p --\" or as\n\n# \"$(mkinstalldirs)\" or as \"$(install_sh) -d\". For these automake versions,\n\n# ${SHELL} /Users/jmattiello/Workspace/Provenance/Provenance-jmattiello/Mednafen/mednafen-1.21/install-sh does not start with $(SHELL), so we add it.\n\n# In automake >= 1.10, /usr/local/bin/gmkdir -p is derived from ${MKDIR_P}, which is defined\n\n# either as \"/path/to/mkdir -p\" or \".../install-sh -c -d\". For these automake\n\n# versions, $(mkinstalldirs) and $(install_sh) are unused.\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Windows resource compiler (windres). Used when libtool is not used.\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Windows resource compiler (windres). Used via libtool.\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Support for silent-rules.\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# -DBUILDING_LIBINTL: Change expansion of LIBINTL_DLL_EXPORTED macro.\n\n# -DBUILDING_DLL: Change expansion of RELOCATABLE_DLL_EXPORTED macro.\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Libtool's library version information for libintl.\n\n# Before making a gettext release, the gettext maintainer must change this\n\n# according to the libtool documentation, section \"Library interface versions\".\n\n# Maintainers of other packages that include the intl directory must *not*\n\n# change these values.\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# This rule is executed only on Woe32 systems.\n\n# The following sed expressions come from the windres-options script. They are\n\n# inlined here, so that they can be written in a Makefile without requiring a\n\n# temporary file. They must contain literal newlines rather than semicolons,\n\n# so that they work with the sed-3.02 that is shipped with MSYS.\n",
        "Line" : 307,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# We must not install the libintl.h/libintl.a files if we are on a\n\n# system which has the GNU gettext() function in its C library or in a\n\n# separate library.\n\n# If you want to use the one which comes with this version of the\n\n# package, you have to use `configure --with-included-gettext'.\n",
        "Line" : 377,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Define this as empty until I found a useful application.\n",
        "Line" : 524,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# A bison-2.1 generated plural.c includes <libintl.h> if ENABLE_NLS.\n",
        "Line" : 591,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# GNU gettext needs not contain the file `VERSION' but contains some\n\n# other files which should not be distributed in other packages.\n",
        "Line" : 632,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# This would be more efficient, but doesn't work any more with autoconf-2.57,\n\n# when AC_CONFIG_FILES([intl/Makefile:somedir/Makefile.in]) is used.\n\n#\tcd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@\n",
        "Line" : 653,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Tell versions [3.59,3.63) of GNU make not to export all variables.\n\n# Otherwise a system limit (for SysV at least) may be exceeded.\n",
        "Line" : 657,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15,
      "Errorlog" : "line 314:53 token recognition error at: '\\1'\nline 315:76 token recognition error at: '\\1'\nline 316:102 token recognition error at: '\\1'\nline 325:53 token recognition error at: '\\1'\nline 326:76 token recognition error at: '\\1'\nline 327:102 token recognition error at: '\\1'\nline 353:64 token recognition error at: '\\1'\nline 357:24 token recognition error at: '\"]\\)/extern LIBINTL_DLL_EXPORTED \\1'\nline 391:56 token recognition error at: '\\1'\n"
    },
    "Cores/Mednafen/mednafen-1.21/src/Makefile.am" : {
      "ObjectId" : "ab375601033604d12782fc43fb62c1b2aafd13b8",
      "LastModified" : "2018-11-04T12:24:18Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#\n\n# Resource file wasn't linking in properly when it was in an archive, so we resort to this!\n\n#\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Cores/Mednafen/mednafen-1.21/src/drivers/Makefile.am" : {
      "ObjectId" : "dded103338405e7c1617dd59c7823e2fb3d4ba3d",
      "LastModified" : "2018-11-04T12:24:18Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Cores/Mednafen/mednafen-1.21/src/drivers_dos/Makefile.am" : {
      "ObjectId" : "5a88bbe4079dc47c69dc911bd24207a65ddd4cec",
      "LastModified" : "2018-11-04T12:24:18Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Cores/Mednafen/mednafen-1.21/src/mpcdec/CMakeLists.txt" : {
      "ObjectId" : "5579d55f5dedd123966b5c3cf2906e3b8c1d95c1",
      "LastModified" : "2018-11-04T12:24:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Cores/Mednafen/mednafen-1.21/src/sexyal/Makefile.am" : {
      "ObjectId" : "50c0466692da07234aa670aa272956e3b5c055d4",
      "LastModified" : "2018-11-04T12:24:18Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Cores/Mednafen/mednafen-1.21/src/ss/Makefile.am" : {
      "ObjectId" : "f167a42aa6a526f7e2043bd64204e4694350a693",
      "LastModified" : "2018-11-04T12:24:18Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# -Wpedantic\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Cores/Mupen64Plus/mupen64plus-audio-sdl/projects/unix/Makefile" : {
      "ObjectId" : "6cb3145c05b878e48cf17cdca1500fcdd5d471e5",
      "LastModified" : "2018-11-04T12:24:18Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\n# *   Mupen64plus-audio-sdl - Makefile                                      *\n\n# *   Mupen64Plus homepage: http://code.google.com/p/mupen64plus/           *\n\n# *   Copyright (C) 2007-2009 Richard Goedeken                              *\n\n# *   Copyright (C) 2007-2008 Tillin9                                       *\n\n# *                                                                         *\n\n# *   This program is free software; you can redistribute it and/or modify  *\n\n# *   it under the terms of the GNU General Public License as published by  *\n\n# *   the Free Software Foundation; either version 2 of the License, or     *\n\n# *   (at your option) any later version.                                   *\n\n# *                                                                         *\n\n# *   This program is distributed in the hope that it will be useful,       *\n\n# *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *\n\n# *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *\n\n# *   GNU General Public License for more details.                          *\n\n# *                                                                         *\n\n# *   You should have received a copy of the GNU General Public License     *\n\n# *   along with this program; if not, write to the                         *\n\n# *   Free Software Foundation, Inc.,                                       *\n\n# *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.          *\n\n# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n# Makefile for SDL Audio plugin in Mupen64plus\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# detect operation system\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# detect system architecture\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# base CFLAGS, LDLIBS, and LDFLAGS\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Since we are building a shared library, we must compile with -fPIC on some architectures\n\n# On 32-bit x86 systems we do not want to use -fPIC because we don't have to and it has a big performance penalty on this arch\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# tweak flags for 32-bit build on 64-bit system\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# set special flags per-system\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Select the proper SDK\n\n# Also, SDKs are stored in a different location since XCode 4.3\n",
        "Line" : 151,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# test for presence of SDL\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# test for essential build dependencies\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# test for presence of speexdsp\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# set speexdsp flags and libraries\n",
        "Line" : 198,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# warn user\n",
        "Line" : 202,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# test for presence of libsamplerate\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# set libsamplerate flags and libraries\n",
        "Line" : 216,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "# test for the presence of OSS\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# set mupen64plus core API header path\n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# reduced compile output when running make without V=1\n",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# set base program pointers and flags\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# set special flags for given Makefile parameters\n",
        "Line" : 274,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# set installation options\n",
        "Line" : 284,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# list of source files to compile\n",
        "Line" : 298,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# generate a list of object files build, make a temporary directory for them\n",
        "Line" : 309,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# build targets\n",
        "Line" : 314,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# build dependency files\n",
        "Line" : 359,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# standard build rules\n",
        "Line" : 363,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 26
    },
    "Cores/Mupen64Plus/mupen64plus-input-sdl/projects/unix/Makefile" : {
      "ObjectId" : "0e3a3a9846140c62b2e89174d35bd24fb80699bf",
      "LastModified" : "2018-11-04T12:24:18Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\n# *   Mupen64plus-input-sdl - Makefile                                      *\n\n# *   Mupen64Plus homepage: http://code.google.com/p/mupen64plus/           *\n\n# *   Copyright (C) 2007-2009 Richard Goedeken                              *\n\n# *                                                                         *\n\n# *   This program is free software; you can redistribute it and/or modify  *\n\n# *   it under the terms of the GNU General Public License as published by  *\n\n# *   the Free Software Foundation; either version 2 of the License, or     *\n\n# *   (at your option) any later version.                                   *\n\n# *                                                                         *\n\n# *   This program is distributed in the hope that it will be useful,       *\n\n# *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *\n\n# *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *\n\n# *   GNU General Public License for more details.                          *\n\n# *                                                                         *\n\n# *   You should have received a copy of the GNU General Public License     *\n\n# *   along with this program; if not, write to the                         *\n\n# *   Free Software Foundation, Inc.,                                       *\n\n# *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.          *\n\n# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n# Makefile for SDL Input plugin in Mupen64plus\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# detect operating system\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# detect system architecture\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# base CFLAGS, LDLIBS, and LDFLAGS\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Since we are building a shared library, we must compile with -fPIC on some architectures\n\n# On 32-bit x86 systems we do not want to use -fPIC because we don't have to and it has a big performance penalty on this arch\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# tweak flags for 32-bit build on 64-bit system\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# set special flags per-system\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Select the proper SDK\n\n# Also, SDKs are stored in a different location since XCode 4.3\n",
        "Line" : 151,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# test for presence of SDL\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# set mupen64plus core API header path\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# reduced compile output when running make without V=1\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# set base program pointers and flags\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# set special flags for given Makefile parameters\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# set installation options\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# list of source files to compile\n",
        "Line" : 255,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# generate a list of object files build, make a temporary directory for them\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# build targets\n",
        "Line" : 272,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# build dependency files\n",
        "Line" : 318,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# standard build rules\n",
        "Line" : 322,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "Cores/Mupen64Plus/mupen64plus-video-glide64mk2/projects/unix/Makefile" : {
      "ObjectId" : "fe15b081981349b73427fe860e824a82fc912470",
      "LastModified" : "2018-11-04T12:24:18Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\n# *   Mupen64plus-video-glide64mk2 - Makefile                               *\n\n# *   Mupen64Plus homepage: http://code.google.com/p/mupen64plus/           *\n\n# *   Copyright (C) 2010 Jon Ring                                           *\n\n# *   Copyright (C) 2007-2009 Richard Goedeken                              *\n\n# *   Copyright (C) 2007-2008 DarkJeztr Tillin9                             *\n\n# *                                                                         *\n\n# *   This program is free software; you can redistribute it and/or modify  *\n\n# *   it under the terms of the GNU General Public License as published by  *\n\n# *   the Free Software Foundation; either version 2 of the License, or     *\n\n# *   (at your option) any later version.                                   *\n\n# *                                                                         *\n\n# *   This program is distributed in the hope that it will be useful,       *\n\n# *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *\n\n# *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *\n\n# *   GNU General Public License for more details.                          *\n\n# *                                                                         *\n\n# *   You should have received a copy of the GNU General Public License     *\n\n# *   along with this program; if not, write to the                         *\n\n# *   Free Software Foundation, Inc.,                                       *\n\n# *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.          *\n\n# * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n# Makefile for Glide64mk2 plugin in Mupen64Plus\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# detect operating system\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# detect system architecture\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# base CFLAGS, LDLIBS, and LDFLAGS\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Since we are building a shared library, we must compile with -fPIC on some architectures\n\n# On 32-bit x86 systems we do not want to use -fPIC because we don't have to and it has a big performance penalty on this arch\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# tweak flags for 32-bit build on 64-bit system\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# set special flags per-system\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# only export api symbols\n",
        "Line" : 159,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Select the proper SDK\n\n# Also, SDKs are stored in a different location since XCode 4.3\n",
        "Line" : 164,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# use system zlib on OSX\n",
        "Line" : 198,
        "CharPositionInLine" : 18
      },
      "10" : {
        "Text" : "# search for OpenGL libraries\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# test for presence of SDL\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# sdl-config on mac screws up when we're trying to build a library and not an executable\n\n# SDL 1.3 is supposed to fix that, if it's ever released\n",
        "Line" : 248,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# set mupen64plus core API header path\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# reduced compile output when running make without V=1\n",
        "Line" : 285,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# set base program pointers and flags\n",
        "Line" : 294,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# set special flags for given Makefile parameters\n",
        "Line" : 304,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# set installation options\n",
        "Line" : 317,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# list of source files to compile\n",
        "Line" : 334,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# -DDUMP_CACHE\n",
        "Line" : 377,
        "CharPositionInLine" : 29
      },
      "20" : {
        "Text" : "# generate a list of object files build, make a temporary directory for them\n",
        "Line" : 389,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# build targets\n",
        "Line" : 395,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# build dependency files\n",
        "Line" : 442,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# standard build rules\n",
        "Line" : 448,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24
    },
    "Cores/Mupen64Plus/png/CMakeLists.txt" : {
      "ObjectId" : "c7878f67087f28f1a71a9c2f6226a4957e11909b",
      "LastModified" : "2018-11-04T12:24:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (C) 2007,2009-2016 Glenn Randers-Pehrson\n\n# Written by Christian Ehrlicher, 2007\n\n# Revised by Roger Lowman, 2009-2010\n\n# Revised by Clifford Yapp, 2011-2012\n\n# Revised by Roger Leigh, 2016\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This code is released under the libpng license.\n\n# For conditions of distribution and use, see the disclaimer\n\n# and license in png.h\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set MacOSX @rpath usage globally.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Use new variable expansion policy.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# needed packages\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# not needed on windows\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# COMMAND LINE OPTIONS\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Many more configuration options could be added here\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# SET LIBNAME\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# to distinguish between debug and release lib\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Check if LD supports linker scripts.\n",
        "Line" : 81,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Find symbol prefix.  Likely obsolete and unnecessary with recent\n\n# toolchains (it's not done in many other projects).\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# No awk available to generate sources; use pre-built pnglibconf.h\n",
        "Line" : 149,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Dummy\n",
        "Line" : 152,
        "CharPositionInLine" : 30
      },
      "15" : {
        "Text" : "# Generate .chk from .out with awk\n\n# generate_chk(INPUT inputfile OUTPUT outputfile [DEPENDS dep1 [dep2...]])\n",
        "Line" : 155,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Generate .out from .c with awk\n\n# generate_out(INPUT inputfile OUTPUT outputfile [DEPENDS dep1 [dep2...]])\n",
        "Line" : 178,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Generate specific source file with awk\n\n# generate_source(OUTPUT outputfile [DEPENDS dep1 [dep2...]])\n",
        "Line" : 201,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Copy file\n",
        "Line" : 220,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Generate scripts/pnglibconf.h\n",
        "Line" : 229,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Generate pnglibconf.c\n",
        "Line" : 235,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# Generate pnglibconf.h\n",
        "Line" : 252,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# Generate pngprefix.h\n",
        "Line" : 267,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# A single target handles generation of all generated files.  If\n\n# they are dependend upon separately by multiple targets, this\n\n# confuses parallel make (it would require a separate top-level\n\n# target for each file to track the dependencies properly).\n",
        "Line" : 309,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# OUR SOURCES\n",
        "Line" : 329,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# NOW BUILD OUR TARGET\n",
        "Line" : 393,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# msvc does not append 'lib' - do it here to have consistent name\n",
        "Line" : 404,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# does not work without changing name\n",
        "Line" : 422,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# MSVC doesn't use a different file extension for shared vs. static\n\n# libs.  We are able to change OUTPUT_NAME to remove the _static\n\n# for all other platforms.\n",
        "Line" : 426,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# msvc does not append 'lib' - do it here to have consistent name\n",
        "Line" : 440,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# have generator expressions\n",
        "Line" : 492,
        "CharPositionInLine" : 36
      },
      "31" : {
        "Text" : "# old 2.x add_test; limited and won't work well on Windows\n",
        "Line" : 498,
        "CharPositionInLine" : 9
      },
      "32" : {
        "Text" : "# Note LIBPNG is a dummy value as there are no generator expressions\n",
        "Line" : 499,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "# Find test PNG files by globbing, but sort lists to ensure\n\n# consistency between different filesystems.\n",
        "Line" : 508,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# Should already be sorted, but sort anyway to be certain.\n",
        "Line" : 600,
        "CharPositionInLine" : 6
      },
      "35" : {
        "Text" : "# Ensure the CMAKE_LIBRARY_OUTPUT_DIRECTORY is set\n",
        "Line" : 637,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Set a variable with CMake code which:\n\n# Creates a symlink from src to dest (if possible) or alternatively\n\n# copies if different.\n",
        "Line" : 642,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Create source generation scripts.\n",
        "Line" : 663,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# libpng is a library so default to 'lib'\n",
        "Line" : 672,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# CREATE PKGCONFIG FILES\n\n# we use the same files like ./configure, so we have to set its vars\n\n# Only do this on Windows for Cygwin - the files don't make much sense outside\n\n# a UNIX look alike\n",
        "Line" : 677,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# SET UP LINKS\n",
        "Line" : 696,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "#   VERSION 16.${PNGLIB_RELEASE}.1.6.26\n",
        "Line" : 699,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# If CMake > 2.4.x, we set a variable used below to export\n\n# targets to an export file.\n\n# TODO: Use VERSION_GREATER after our cmake_minimum_required >= 2.6.2\n",
        "Line" : 705,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# future proof\n",
        "Line" : 710,
        "CharPositionInLine" : 38
      },
      "44" : {
        "Text" : "# INSTALL\n",
        "Line" : 714,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Create a symlink for libpng.dll.a => libpng16.dll.a on Cygwin\n",
        "Line" : 724,
        "CharPositionInLine" : 4
      },
      "46" : {
        "Text" : "# Install man pages\n",
        "Line" : 768,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "# Install pkg-config files\n",
        "Line" : 774,
        "CharPositionInLine" : 2
      },
      "48" : {
        "Text" : "# On versions of CMake that support it, create an export file CMake\n\n# users can include() to import our targets\n",
        "Line" : 787,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# what's with libpng-manual.txt and all the extra files?\n",
        "Line" : 793,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# UNINSTALL\n\n# do we need this?\n",
        "Line" : 795,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# DIST\n\n# do we need this?\n",
        "Line" : 798,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# to create msvc import lib for mingw compiled shared lib\n\n# pexports libpng.dll > libpng.def\n\n# lib /def:libpng.def /machine:x86\n",
        "Line" : 801,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 53
    },
    "Cores/Mupen64Plus/png/Makefile" : {
      "ObjectId" : "56cc1a97fb3356196629dedf0cb0a46bf2485643",
      "LastModified" : "2018-11-04T12:24:18Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile.in generated by automake 1.15 from Makefile.am.\n\n# Makefile.  Generated from Makefile.in by configure.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (C) 1994-2014 Free Software Foundation, Inc.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This Makefile.in is free software; the Free Software Foundation\n\n# gives unlimited permission to copy and/or distribute it,\n\n# with or without modifications, as long as this notice is preserved.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY, to the extent permitted by law; without\n\n# even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n\n# PARTICULAR PURPOSE.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Makefile.am, the source file for Makefile.in (and hence Makefile), is\n\n#\n\n# Copyright (c) 2004-2016 Glenn Randers-Pehrson\n\n# Last changed in libpng 1.6.25beta03 [August 29, 2016]\n\n#\n\n# This code is released under the libpng license.\n\n# For conditions of distribution and use, see the disclaimer\n\n# and license in png.h\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#am__append_2 = arm/arm_init.c\\\n#\tarm/filter_neon.S arm/filter_neon_intrinsics.c\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#   Versioned symbols and restricted exports\n\n##am__append_4 = -Wl,-M -Wl,libpng.vers\n\n#am__append_5 = -Wl,--version-script=libpng.vers\n\n#   Only restricted exports when possible\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#am__append_7 = -DPNG_PREFIX=''\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#am__objects_1 = arm/arm_init.lo arm/filter_neon.lo \\\n#\tarm/filter_neon_intrinsics.lo\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Read a list of newline-separated strings from the standard input,\n\n# and print each of them once, without duplicates.  Input order is\n\n# *not* preserved.\n",
        "Line" : 299,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Make sure the list of sources is unique.  This is necessary because,\n\n# e.g., the same source file might be shared among _SOURCES variables\n\n# for different programs/libraries.\n",
        "Line" : 307,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# A command that, given a newline-separated list of test names on the\n\n# standard input, print the name of the tests that are to be re-run\n\n# upon \"make recheck\".\n",
        "Line" : 344,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# A command that, given a newline-separated list of test names on the\n\n# standard input, create the global log from their .trs and .log files.\n",
        "Line" : 372,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Restructured Text title.\n",
        "Line" : 418,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Solaris 10 'make', and several other traditional 'make' implementations,\n\n# pass \"-e\" to $(SHELL), and POSIX 2008 even requires this.  Work around it\n\n# by disabling -e (using the XSI extension \"set +e\") if it's set.\n",
        "Line" : 420,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Default flags passed to test drivers.\n",
        "Line" : 424,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# To be inserted before the command running the test.  Creates the\n\n# directory for the log if needed.  Stores in $dir the directory\n\n# containing $f, in $tst the test, in $log the log.  Executes the\n\n# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and\n\n# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that\n\n# will run the test scripts (or their associated LOG_COMPILER, if\n\n# thy have one).\n",
        "Line" : 429,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# A shell command to get the names of the tests scripts with any registered\n\n# extension removed (i.e., equivalently, the names of the test logs, with\n\n# the '.log' extension removed).  The result is saved in the shell variable\n\n# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,\n\n# we cannot use something simpler, involving e.g., \"$(TEST_LOGS:.log=)\",\n\n# since that might cause problem with VPATH rewrites for suffix-less tests.\n\n# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.\n",
        "Line" : 463,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#distribute headers in /usr/include/libpng/*\n",
        "Line" : 518,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# DFNCPP is normally just CPP - the C preprocessor - but on Solaris and maybe\n\n# other operating systems (NeXT?) the C preprocessor selected by configure\n\n# checks input tokens for validity - effectively it performs part of the ANSI-C\n\n# parsing - and therefore fails with the .df files.  configure.ac has special\n\n# checks for this and sets DFNCPP appropriately.\n",
        "Line" : 541,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#\n",
        "Line" : 571,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "# PNG_COPTS give extra options for the C compiler to be used on all compilation\n\n# steps (unless targe_CFLAGS is specified; that will take precedence over\n\n# AM_CFLAGS)\n",
        "Line" : 594,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# generate the -config scripts if required\n",
        "Line" : 620,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# pkg-config stuff, note that libpng.pc is always required in order\n\n# to get the correct library\n",
        "Line" : 652,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# This ensures that pnglibconf.h gets built at the start of 'make all' or\n\n# 'make check', but it does not add dependencies to the individual programs,\n\n# this is done below.\n\n#\n\n# IMPORTANT: always add the object modules of new programs to the list below\n\n# because otherwise the sequence 'configure; make new-program' will *sometimes*\n\n# result in the installed (system) pnglibconf.h being used and the result is\n\n# always wrong and always very confusing.\n",
        "Line" : 669,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Generally these are single line shell scripts to run a test with a particular\n\n# set of parameters:\n",
        "Line" : 696,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# man pages\n",
        "Line" : 717,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# rules to build libpng, only build the old library on request\n",
        "Line" : 722,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# EXTRA_LTLIBRARIES= libpng.la\n",
        "Line" : 724,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#libpng16_la_DEPENDENCIES = libpng.vers\n",
        "Line" : 736,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Extra source distribution files, '${srcdir}' is used below to stop build files\n\n# from those directories being included.  This only works if the configure is\n\n# not done in the source directory!\n",
        "Line" : 741,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# We must use -DPNG_NO_USE_READ_MACROS here even when the library may actually\n\n# be built with PNG_USE_READ_MACROS; this prevents the read macros from\n\n# interfering with the symbol file format.\n",
        "Line" : 764,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# actually installed on a given system, so instead we check for every extension\n\n# we have seen.\n",
        "Line" : 774,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# $(srcdir)/Makefile.am  $(am__configure_deps)\n",
        "Line" : 784,
        "CharPositionInLine" : 23
      },
      "34" : {
        "Text" : "# $(am__configure_deps)\n",
        "Line" : 810,
        "CharPositionInLine" : 25
      },
      "35" : {
        "Text" : "# $(am__aclocal_m4_deps)\n",
        "Line" : 812,
        "CharPositionInLine" : 15
      },
      "36" : {
        "Text" : "# $(am__configure_deps) \n",
        "Line" : 823,
        "CharPositionInLine" : 23
      },
      "37" : {
        "Text" : "# $$desc $$count$${color_end}\"; \\\n\t}; \\\n\tcreate_testsuite_report () \\\n\t{ \\\n\t  result_count $$1 \"TOTAL:\" $$all   \"$$brg\"; \\\n\t  result_count $$1 \"PASS: \" $$pass  \"$$grn\"; \\\n\t  result_count $$1 \"SKIP: \" $$skip  \"$$blu\"; \\\n\t  result_count $$1 \"XFAIL:\" $$xfail \"$$lgn\"; \\\n\t  result_count $$1 \"FAIL: \" $$fail  \"$$red\"; \\\n\t  result_count $$1 \"XPASS:\" $$xpass \"$$red\"; \\\n\t  result_count $$1 \"ERROR:\" $$error \"$$mgn\"; \\\n\t}; \\\n\t{\t\t\t\t\t\t\t\t\\\n\t  echo \"$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)\" |\t\\\n\t    $(am__rst_title);\t\t\t\t\t\t\\\n\t  create_testsuite_report --no-color;\t\t\t\t\\\n\t  echo;\t\t\t\t\t\t\t\t\\\n\t  echo \".. contents:: :depth: 2\";\t\t\t\t\\\n\t  echo;\t\t\t\t\t\t\t\t\\\n\t  for b in $$bases; do echo $$b; done\t\t\t\t\\\n\t    | $(am__create_global_log);\t\t\t\t\t\\\n\t} >$(TEST_SUITE_LOG).tmp || exit 1;\t\t\t\t\\\n\tmv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);\t\t\t\\\n\tif $$success; then\t\t\t\t\t\t\\\n\t  col=\"$$grn\";\t\t\t\t\t\t\t\\\n\t else\t\t\t\t\t\t\t\t\\\n\t  col=\"$$red\";\t\t\t\t\t\t\t\\\n\t  test x\"$$VERBOSE\" = x || cat $(TEST_SUITE_LOG);\t\t\\\n\tfi;\t\t\t\t\t\t\t\t\\\n\techo \"$${col}$$br$${std}\"; \t\t\t\t\t\\\n\techo \"$${col}Testsuite summary for $(PACKAGE_STRING)$${std}\";\t\\\n\techo \"$${col}$$br$${std}\"; \t\t\t\t\t\\\n\tcreate_testsuite_report --maybe-color;\t\t\t\t\\\n\techo \"$$col$$br$$std\";\t\t\t\t\t\t\\\n\tif $$success; then :; else\t\t\t\t\t\\\n\t  echo \"$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}\";\t\t\\\n\t  if test -n \"$(PACKAGE_BUGREPORT)\"; then\t\t\t\\\n\t    echo \"$${col}Please report to $(PACKAGE_BUGREPORT)$${std}\";\t\\\n\t  fi;\t\t\t\t\t\t\t\t\\\n\t  echo \"$$col$$br$$std\";\t\t\t\t\t\\\n\tfi;\t\t\t\t\t\t\t\t\\\n\t$$success || exit 1\n",
        "Line" : 1436,
        "CharPositionInLine" : 26
      },
      "38" : {
        "Text" : "#.test$(EXEEXT).log:\n\n#\t@p='$<'; \\\n#\t$(am__set_b); \\\n#\t$(am__check_pre) $(TEST_LOG_DRIVER) --test-name \"$$f\" \\\n#\t--log-file $$b.log --trs-file $$b.trs \\\n#\t$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \\\n#\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\n",
        "Line" : 1731,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# This target untars the dist file and tries a VPATH configuration.  Then\n\n# it guarantees that the distribution is self-contained by making another\n\n# tarfile.\n",
        "Line" : 1819,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "##install-exec-hook:\n\n##install-data-hook:\n\n###uninstall-hook:\n",
        "Line" : 1962,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Rename functions in scripts/prefix.out with a PNG_PREFIX prefix.\n\n# Rename macros in scripts/macro.lst from PNG_PREFIXpng_ to PNG_ (the actual\n\n# implementation of the macro).\n\n#pnglibconf.h: pnglibconf.out scripts/prefix.out scripts/macro.lst\n\n#\trm -f $@\n\n#\t$(AWK) 's==0 && NR>1{print prev}\\\n#\t   s==0{prev=$$0}\\\n#\t   s==1{print \"#define\", $$1, \"\" $$1}\\\n#\t   s==2{print \"#define png_\" $$1, \"PNG_\" $$1}\\\n#\t   END{print prev}' s=0 pnglibconf.out s=1 scripts/prefix.out\\\n#\t   s=2 ${srcdir}/scripts/macro.lst >pnglibconf.tf8\n",
        "Line" : 2099,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "#\tmv pnglibconf.tf8 $@\n",
        "Line" : 2110,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "#pngprefix.h: scripts/intprefix.out\n\n#\trm -f pngprefix.tf1\n\n#\t$(AWK) '{print \"#define\", $$1, \"\" $$1}' $? >pngprefix.tf1\n\n#\tmv pngprefix.tf1 $@\n",
        "Line" : 2112,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# is empty\n",
        "Line" : 2120,
        "CharPositionInLine" : 13
      },
      "45" : {
        "Text" : "# The following is necessary to ensure that the local pnglibconf.h is used, not\n\n# an installed one (this can happen immediately after on a clean system if\n\n# 'make test' is the first thing the user does.)  Only files which include\n\n# one of the png source files (typically png.h or pngpriv.h) need to be listed\n\n# here:\n",
        "Line" : 2130,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# The .c file for pnglibconf.h is machine generated\n",
        "Line" : 2159,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Symbol checks (.def and .out files should match)\n",
        "Line" : 2169,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# used on demand to regenerate the standard header, CPPFLAGS should\n\n# be empty - no non-standard defines\n",
        "Line" : 2178,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Extra checks\n",
        "Line" : 2197,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Don't distribute the generated script files\n",
        "Line" : 2200,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Make links between installed files with release-specific names and the generic\n\n# file names.  If this install rule is run the generic names will be deleted and\n\n# recreated - this has obvious issues for systems with multiple installations.\n",
        "Line" : 2204,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# If --enable-unversioned-links is specified the header and lib file links\n\n# will be automatically made on a 'make install':\n",
        "Line" : 2242,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# Likewise, --install-pc causes libpng.pc to be constructed:\n",
        "Line" : 2250,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# And --install-config:\n",
        "Line" : 2255,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# The following addition ensures that 'make all' always builds the test programs\n\n# too.  It used to, but some change either in libpng or configure stopped this\n\n# working.\n",
        "Line" : 2260,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# Tell versions [3.59,3.63) of GNU make to not export all variables.\n\n# Otherwise a system limit (for SysV at least) may be exceeded.\n",
        "Line" : 2265,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 57,
      "Errorlog" : "line 152:68 token recognition error at: '\\1'\nline 550:9 token recognition error at: '\\c'\n"
    },
    "Cores/Mupen64Plus/png/Makefile.am" : {
      "ObjectId" : "356704dc3c28262f91ccef388c1e5d44fc06f515",
      "LastModified" : "2018-11-04T12:24:18Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Makefile.am, the source file for Makefile.in (and hence Makefile), is\n\n#\n\n# Copyright (c) 2004-2016 Glenn Randers-Pehrson\n\n# Last changed in libpng 1.6.25 [October 20, 2016]\n\n#\n\n# This code is released under the libpng license.\n\n# For conditions of distribution and use, see the disclaimer\n\n# and license in png.h\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# test programs - run on make check, make distcheck\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Utilities - installed\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This ensures that pnglibconf.h gets built at the start of 'make all' or\n\n# 'make check', but it does not add dependencies to the individual programs,\n\n# this is done below.\n\n#\n\n# IMPORTANT: always add the object modules of new programs to the list below\n\n# because otherwise the sequence 'configure; make new-program' will *sometimes*\n\n# result in the installed (system) pnglibconf.h being used and the result is\n\n# always wrong and always very confusing.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Generally these are single line shell scripts to run a test with a particular\n\n# set of parameters:\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# man pages\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# generate the -config scripts if required\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# rules to build libpng, only build the old library on request\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# EXTRA_LTLIBRARIES= libpng.la\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#   Versioned symbols and restricted exports\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#   Only restricted exports when possible\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#distribute headers in /usr/include/libpng/*\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# pkg-config stuff, note that libpng.pc is always required in order\n\n# to get the correct library\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Extra source distribution files, '${srcdir}' is used below to stop build files\n\n# from those directories being included.  This only works if the configure is\n\n# not done in the source directory!\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# PNG_COPTS give extra options for the C compiler to be used on all compilation\n\n# steps (unless targe_CFLAGS is specified; that will take precedence over\n\n# AM_CFLAGS)\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# DFNCPP is normally just CPP - the C preprocessor - but on Solaris and maybe\n\n# other operating systems (NeXT?) the C preprocessor selected by configure\n\n# checks input tokens for validity - effectively it performs part of the ANSI-C\n\n# parsing - and therefore fails with the .df files.  configure.ac has special\n\n# checks for this and sets DFNCPP appropriately.\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Rename functions in scripts/prefix.out with a PNG_PREFIX prefix.\n\n# Rename macros in scripts/macro.lst from PNG_PREFIXpng_ to PNG_ (the actual\n\n# implementation of the macro).\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# is empty\n",
        "Line" : 212,
        "CharPositionInLine" : 13
      },
      "18" : {
        "Text" : "# The following is necessary to ensure that the local pnglibconf.h is used, not\n\n# an installed one (this can happen immediately after on a clean system if\n\n# 'make test' is the first thing the user does.)  Only files which include\n\n# one of the png source files (typically png.h or pngpriv.h) need to be listed\n\n# here:\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# We must use -DPNG_NO_USE_READ_MACROS here even when the library may actually\n\n# be built with PNG_USE_READ_MACROS; this prevents the read macros from\n\n# interfering with the symbol file format.\n",
        "Line" : 243,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# The .c file for pnglibconf.h is machine generated\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Symbol checks (.def and .out files should match)\n",
        "Line" : 274,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# used on demand to regenerate the standard header, CPPFLAGS should\n\n# be empty - no non-standard defines\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Extra checks\n",
        "Line" : 302,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Don't distribute the generated script files\n",
        "Line" : 305,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Make links between installed files with release-specific names and the generic\n\n# file names.  If this install rule is run the generic names will be deleted and\n\n# recreated - this has obvious issues for systems with multiple installations.\n",
        "Line" : 309,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# EXT_LIST is a list of the possibly library directory extensions, this exists\n\n# because we can't find a good way of discovering the file extensions that are\n\n# actually installed on a given system, so instead we check for every extension\n\n# we have seen.\n",
        "Line" : 327,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# If --enable-unversioned-links is specified the header and lib file links\n\n# will be automatically made on a 'make install':\n",
        "Line" : 355,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Likewise, --install-pc causes libpng.pc to be constructed:\n",
        "Line" : 365,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# And --install-config:\n",
        "Line" : 372,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# The following addition ensures that 'make all' always builds the test programs\n\n# too.  It used to, but some change either in libpng or configure stopped this\n\n# working.\n",
        "Line" : 378,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 31
    },
    "Cores/PicoDrive/Makefile" : {
      "ObjectId" : "c199b85367da83c67cc03f0c0bc9605bcac7a2a7",
      "LastModified" : "2018-11-04T12:24:18Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#CFLAGS += -DEVT_LOG\n\n#CFLAGS += -DDRC_CMP\n\n#cpu_cmp = 1\n\n#drc_debug = 7\n\n#profile = 1\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# NO_CONFIG_MAK\n",
        "Line" : 28,
        "CharPositionInLine" : 5
      },
      "2" : {
        "Text" : "# default settings\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# if not arm\n",
        "Line" : 46,
        "CharPositionInLine" : 5
      },
      "4" : {
        "Text" : "# due to CPU stop flag access\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# OpenDingux is a generic platform, really.\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# FIXME\n",
        "Line" : 75,
        "CharPositionInLine" : 51
      },
      "7" : {
        "Text" : "# common\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# libpicofe\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# libpicofe - sound\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# USE_FRONTEND\n",
        "Line" : 143,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# zlib\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# unzip\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# special flags - perhaps fix this someday instead?\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# random deps\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "Cores/PicoDrive/cpu/cyclone/Makefile" : {
      "ObjectId" : "8b7a5fda0e8e72c22965cb322b7df5a06e0d5e3f",
      "LastModified" : "2018-11-04T12:24:18Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "Cores/PicoDrive/cpu/musashi/Makefile" : {
      "ObjectId" : "5ace7da7563b3fbfa9e6a2a4fd98c0620a3a1288",
      "LastModified" : "2018-11-04T12:24:18Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "Cores/PicoDrive/platform/gizmondo/Makefile" : {
      "ObjectId" : "d7aab76a01f34782c52c8af55f6cc10e1c1d327c",
      "LastModified" : "2018-11-04T12:24:18Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# you may or may not need to change this\r\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# settings\r\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#profile = 1\r\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# frontend\r\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# common\r\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Pico\r\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Pico - CD\r\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Pico - Pico\r\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Pico - carthw\r\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Pico - sound\r\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# zlib\r\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# unzip\r\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# CPU cores\r\n\n# Cyclone\r\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# drz80\r\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# | grep -v \"supports interworking, whereas\"\r\n",
        "Line" : 93,
        "CharPositionInLine" : 29
      },
      "15" : {
        "Text" : "# cleanup\r\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# ----------- release -----------\r\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "Cores/PicoDrive/platform/gp2x/Makefile" : {
      "ObjectId" : "e7b4326b812aa92c8198ae439cfd16d42755aeb6",
      "LastModified" : "2018-11-04T12:24:18Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# release packaging makefile\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#mkdir out/bin_to_cso_mp3\r\n\n#cp ../../tools/bin_to_cso_mp3/* out/bin_to_cso_mp3/\r\n",
        "Line" : 30,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2,
      "Errorlog" : "line 4:29 token recognition error at: '\\1'\nline 4:31 token recognition error at: '\\2'\nline 6:26 token recognition error at: '\\1'\n"
    },
    "Cores/PicoDrive/platform/gp2x/code940/Makefile" : {
      "ObjectId" : "e327d13611ee08622bbd644fd69e390c1729234f",
      "LastModified" : "2018-11-04T12:24:18Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# you may or may not need to change this\r\n\n#devkit_path = x:/stuff/dev/devkitgp2x/\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#CROSS = $(devkit_path)bin/arm-linux-\r\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# settings\r\n\n#up = 1\r\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# stuff for 940 core\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# init, emu_control, emu\r\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# the asm code seems to be faster when run on 920, but not on 940 for some reason\r\n\n# OBJS940 += ../../Pico/sound/ym2612_asm.o\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# uClibc library code\r\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# cleanup\r\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##\r\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "Cores/PicoDrive/platform/pandora/Makefile" : {
      "ObjectId" : "4240897a2f3567d17b22d5b66a7f2f51265c7730",
      "LastModified" : "2018-11-04T12:24:18Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# release packaging makefile\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1,
      "Errorlog" : "line 4:29 token recognition error at: '\\1'\nline 4:31 token recognition error at: '\\2'\nline 6:26 token recognition error at: '\\1'\n"
    },
    "Cores/PicoDrive/platform/psp/Makefile" : {
      "ObjectId" : "026249e15c2a6ac28d1e4ce9290859414542f7b7",
      "LastModified" : "2018-11-04T12:24:18Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# pspdev is expected to be in path\r\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# settings\r\n\n#use_musashi = 1\r\n\n#use_mz80 = 1\r\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# :!touch platform/psp/psp.c\r\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#CFLAGS += -DLPRINTF_STDIO\r\n\n#CFLAGS += -pg\r\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# frontend and stuff\r\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# common\r\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Pico\r\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Pico - CD\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Pico - carthw\r\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Pico - Pico\r\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Pico - sound\r\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# zlib (hacked)\r\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# unzip\r\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# CPU cores\r\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# z80\r\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# bg images\r\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#LIBS += -lpspprof\r\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# target\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#PSP_EBOOT_PIC1 = .png\r\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# some additional rules\r\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#\r\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# cleanup\r\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#rm -rf $(DIRS)\r\n",
        "Line" : 167,
        "CharPositionInLine" : 1
      },
      "23" : {
        "Text" : "# ----------- release -----------\r\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# ?\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "Cores/PicoDrive/platform/win32/Makefile" : {
      "ObjectId" : "b2f02e21aaefc87a0bedd125ad3b830e9096778c",
      "LastModified" : "2018-11-04T12:24:18Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# settings\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#use_musashi = 1\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#use_sh2mame = 1\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# frontend\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# common\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# zlib\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# unzip\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# ----------- release -----------\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "Cores/PicoDrive/tools/Makefile" : {
      "ObjectId" : "0c126cc1d158abe33a34ce24cc72561b567b0397",
      "LastModified" : "2018-11-04T12:24:18Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "Cores/PicoDrive/zlib/Makefile" : {
      "ObjectId" : "2fd6e45c48d4105045ec618ecf42e2a6fa2f3f18",
      "LastModified" : "2018-11-04T12:24:18Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for zlib\n\n# Copyright (C) 1995-2005 Jean-loup Gailly.\n\n# For conditions of distribution and use, see copyright notice in zlib.h\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# To compile and test, type:\n\n#    ./configure; make test\n\n# The call of configure is optional if you don't have special requirements\n\n# If you wish to build zlib as a shared library, use: ./configure -s\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# To use the asm code, type:\n\n#    cp contrib/asm?86/match.S ./match.S\n\n#    make LOC=-DASMV OBJA=match.o\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# To install /usr/local/lib/libz.* and /usr/local/include/zlib.h, type:\n\n#    make install\n\n# To install in $HOME instead of /usr/local, use:\n\n#    make install prefix=$HOME\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#CFLAGS=-O -DMAX_WBITS=14 -DMAX_MEM_LEVEL=7\n\n#CFLAGS=-g -DDEBUG\n\n#CFLAGS=-O3 -Wall -Wwrite-strings -Wpointer-arith -Wconversion \\\n#           -Wstrict-prototypes -Wmissing-prototypes\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# to use the asm code: make OBJA=match.o\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The ranlib in install is needed on NeXTSTEP which checks file times\n\n# ldconfig is for Linux\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "Cores/Yabause/yabause/CMakeLists.txt" : {
      "ObjectId" : "65f2379a6f75f07c528e4449494eab1d18510277",
      "LastModified" : "2018-11-04T12:24:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Cores/Yabause/yabause/CMakeTests/FindSDL2.cmake" : {
      "ObjectId" : "b412770f8d63a822c8340b494836781f8dda6912",
      "LastModified" : "2018-11-04T12:24:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate SDL2 library\n\n# This module defines\n\n# SDL2_LIBRARY, the name of the library to link against\n\n# SDL2_FOUND, if false, do not try to link to SDL2\n\n# SDL2_INCLUDE_DIR, where to find SDL.h\n\n#\n\n# This module responds to the the flag:\n\n# SDL2_BUILDING_LIBRARY\n\n# If this is defined, then no SDL2_main will be linked in because\n\n# only applications need main().\n\n# Otherwise, it is assumed you are building an application and this\n\n# module will attempt to locate and set the the proper link flags\n\n# as part of the returned SDL2_LIBRARY variable.\n\n#\n\n# Don't forget to include SDL2main.h and SDL2main.m your project for the\n\n# OS X framework based version. (Other versions link to -lSDL2main which\n\n# this module will try to find on your behalf.) Also for OS X, this\n\n# module will automatically add the -framework Cocoa on your behalf.\n\n#\n\n#\n\n# Additional Note: If you see an empty SDL2_LIBRARY_TEMP in your configuration\n\n# and no SDL2_LIBRARY, it means CMake did not find your SDL2 library\n\n# (SDL2.dll, libsdl2.so, SDL2.framework, etc).\n\n# Set SDL2_LIBRARY_TEMP to point to your SDL2 library, and configure again.\n\n# Similarly, if you see an empty SDL2MAIN_LIBRARY, you should set this value\n\n# as appropriate. These values are used to generate the final SDL2_LIBRARY\n\n# variable, but when these values are unset, SDL2_LIBRARY does not get created.\n\n#\n\n#\n\n# $SDL2DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$SDL2DIR\n\n# used in building SDL2.\n\n# l.e.galup  9-20-02\n\n#\n\n# Modified by Eric Wing.\n\n# Added code to assist with automated building by using environmental variables\n\n# and providing a more controlled/consistent search behavior.\n\n# Added new modifications to recognize OS X frameworks and\n\n# additional Unix paths (FreeBSD, etc).\n\n# Also corrected the header search path to follow \"proper\" SDL2 guidelines.\n\n# Added a search for SDL2main which is needed by some platforms.\n\n# Added a search for threads which is needed by some platforms.\n\n# Added needed compile switches for MinGW.\n\n#\n\n# On OSX, this will prefer the Framework version (if found) over others.\n\n# People will have to manually change the cache values of\n\n# SDL2_LIBRARY to override this selection or set the CMake environment\n\n# CMAKE_INCLUDE_PATH to modify the search paths.\n\n#\n\n# Note that the header path has changed from SDL2/SDL.h to just SDL.h\n\n# This needed to change because \"proper\" SDL2 convention\n\n# is #include \"SDL.h\", not <SDL2/SDL.h>. This is done for portability\n\n# reasons because not all systems place things in SDL2/ (see FreeBSD).\n\n#\n\n# Ported by Johnny Patterson. This is a literal port for SDL2 of the FindSDL.cmake\n\n# module with the minor edit of changing \"SDL\" to \"SDL2\" where necessary. This\n\n# was not created for redistribution, and exists temporarily pending official\n\n# SDL2 CMake modules.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2003-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fink\n",
        "Line" : 82,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 83,
        "CharPositionInLine" : 13
      },
      "4" : {
        "Text" : "# Blastwave\n",
        "Line" : 84,
        "CharPositionInLine" : 11
      },
      "5" : {
        "Text" : "#MESSAGE(\"SDL2_INCLUDE_DIR is ${SDL2_INCLUDE_DIR}\")\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#MESSAGE(\"SDL2_LIBRARY_TEMP is ${SDL2_LIBRARY_TEMP}\")\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Non-OS X framework versions expect you to also dynamically link to\n\n# SDL2main. This is mainly for Windows and OS X. Other (Unix) platforms\n\n# seem to provide SDL2main for compatibility even though they don't\n\n# necessarily need it.\n",
        "Line" : 111,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# SDL2 may require threads on your system.\n\n# The Apple build may not need an explicit flag because one of the\n\n# frameworks may already provide it.\n\n# But for non-OSX systems, I will use the CMake Threads package.\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# MinGW needs an additional library, mwindows\n\n# It's total link flags should look like -lmingw32 -lSDL2main -lSDL2 -lmwindows\n\n# (Actually on second look, I think it only needs one of the m* libraries.)\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# For SDL2main\n",
        "Line" : 146,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# For OS X, SDL2 uses Cocoa as a backend so it must link to Cocoa.\n\n# CMake doesn't display the -framework Cocoa string in the UI even\n\n# though it actually is there if I modify a pre-used variable.\n\n# I think it has something to do with the CACHE STRING.\n\n# So I use a temporary variable until the end so I can set the\n\n# \"real\" variable in one-shot.\n",
        "Line" : 153,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# For threads, as mentioned Apple doesn't need this.\n\n# In fact, there seems to be a problem if I used the Threads package\n\n# and try using this line, so I'm just skipping it entirely for OS X.\n",
        "Line" : 163,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# For MinGW library\n",
        "Line" : 170,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Set the final string here so the GUI reflects the final state.\n",
        "Line" : 175,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Set the temp variable to INTERNAL so it is not seen in the CMake GUI\n",
        "Line" : 177,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 16
    },
    "Cores/Yabause/yabause/doc/CMakeLists.txt" : {
      "ObjectId" : "ebd9fec1f3f9bf47de0aafaeec790faedab9e691",
      "LastModified" : "2018-11-04T12:24:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Cores/Yabause/yabause/l10n/CMakeLists.txt" : {
      "ObjectId" : "00b412a9240d144e9449456f86bbf6d39182cfc1",
      "LastModified" : "2018-11-04T12:24:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Cores/Yabause/yabause/src/CMakeLists.txt" : {
      "ObjectId" : "83adfd2bb2e44dc226b3d7e39796055f3ec25c12",
      "LastModified" : "2018-11-04T12:24:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# new SCSP\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# disable strdup warning in MSVC\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# math library\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Bigendian\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# variadic macros\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# gettimeofday\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# floorf\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# _wfopen\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# stricmp/strcasecmp\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# __builtin_bswap16\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# __builtin_bswap32\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# sys/time.h\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Find stdint.h\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# 16BPP\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# OpenGL\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# glXGetProcAddress\n",
        "Line" : 197,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# SDL\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# OpenAL\n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# OpenSL (Android)\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# mini18n\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# xrandr\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# APPLE // not necessary mac os x, but i don't care ;)\n",
        "Line" : 282,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Visual Studio\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Find DDK\n",
        "Line" : 298,
        "CharPositionInLine" : 8
      },
      "24" : {
        "Text" : "# Windows ddk\n",
        "Line" : 312,
        "CharPositionInLine" : 1
      },
      "25" : {
        "Text" : "# Find ntddcdrm.h\n",
        "Line" : 317,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Direct X\n",
        "Line" : 335,
        "CharPositionInLine" : 1
      },
      "27" : {
        "Text" : "# Add Winsock if necessary\n",
        "Line" : 398,
        "CharPositionInLine" : 5
      },
      "28" : {
        "Text" : "# SH2 dynamic recompiler\n",
        "Line" : 407,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# c68k\n",
        "Line" : 465,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#TODO cross compile builds m68kmake for the target platform instead\n\n#of the native one, making it impossible to generate the core\n",
        "Line" : 489,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# q68\n",
        "Line" : 534,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# gdb stub\n",
        "Line" : 544,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# *DEBUG\n",
        "Line" : 552,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Network\n",
        "Line" : 567,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Exec from cache\n",
        "Line" : 578,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Optimized DMA\n",
        "Line" : 584,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# SH2 Trace\n",
        "Line" : 590,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# SH2 UBC\n",
        "Line" : 596,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Yabause Arch\n",
        "Line" : 602,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Warnings defined to know when we're breaking compilation with MSVC\n",
        "Line" : 658,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Turn string format security warnings into errors. Some Linux distros enable this by default and travis-ci, etc. needs a way to catch them\n",
        "Line" : 668,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# this is stupid, but CMake automatic definitions are based on variables...\n",
        "Line" : 719,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 43
    },
    "Cores/Yabause/yabause/src/android/CMakeLists.txt" : {
      "ObjectId" : "de7bef17f0fef7174cac089804c2324582ba0eb6",
      "LastModified" : "2018-11-04T12:24:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Cores/Yabause/yabause/src/android/android-windows.cmake" : {
      "ObjectId" : "1b9e63defac613c74934331f836cec46503682c0",
      "LastModified" : "2018-11-04T12:24:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Cores/Yabause/yabause/src/android/android.cmake" : {
      "ObjectId" : "a1a49536ce9f83c127159e15e6eb56aea35c125d",
      "LastModified" : "2018-11-04T12:24:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Cores/Yabause/yabause/src/android/build.xml" : {
      "ObjectId" : "ecb9624556ef047fea262b4a82ae50653240ad89",
      "LastModified" : "2018-11-04T12:24:18Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " The local.properties file is created and updated by the 'android' tool.\n         It contains the path to the SDK. It should *NOT* be checked into\n         Version Control Systems. ",
        "Line" : 6,
        "CharPositionInLine" : 38
      },
      "1" : {
        "Text" : " The ant.properties file can be created by you. It is only edited by the\n         'android' tool to add properties to it.\n         This is the place to change some Ant specific build properties.\n         Here are some properties you may want to change/update:\n\n         source.dir\n             The name of the source directory. Default is 'src'.\n         out.dir\n             The name of the output directory. Default is 'bin'.\n\n         For other overridable properties, look at the beginning of the rules\n         files in the SDK, at tools/ant/build.xml\n\n         Properties related to the SDK location or the project target should\n         be updated using the 'android' tool with the 'update' action.\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems.\n\n         ",
        "Line" : 28,
        "CharPositionInLine" : 13
      },
      "2" : {
        "Text" : " The project.properties file is created and updated by the 'android'\n         tool, as well as ADT.\n\n         This contains project specific properties such as project target, and library\n         dependencies. Lower level build properties are stored in ant.properties\n         (or in .classpath for Eclipse projects).\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems. ",
        "Line" : 39,
        "CharPositionInLine" : 77
      },
      "3" : {
        "Text" : " quick check on sdk.dir ",
        "Line" : 42,
        "CharPositionInLine" : 36
      },
      "4" : {
        "Text" : " extension targets. Uncomment the ones where you want to do custom work\n     in between standard targets ",
        "Line" : 50,
        "CharPositionInLine" : 37
      },
      "5" : {
        "Text" : "\n    <target name=\"-pre-build\">\n    </target>\n    <target name=\"-pre-compile\">\n    </target>\n\n    /* This is typically used for code obfuscation.\n       Compiled code location: ${out.classes.absolute.dir}\n       If this is not done in place, override ${out.dex.input.absolute.dir} */\n    <target name=\"-post-compile\">\n    </target>\n",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : " Import the actual build file.\n\n         To customize existing targets, there are two options:\n         - Customize only one target:\n             - copy/paste the target into this file, *before* the\n               <import> task.\n             - customize it to your needs.\n         - Customize the whole content of build.xml\n             - copy/paste the content of the rules files (minus the top node)\n               into this file, replacing the <import> task.\n             - customize to your needs.\n\n         ***********************\n         ****** IMPORTANT ******\n         ***********************\n         In all cases you must update the value of version-tag below to read 'custom' instead of an integer,\n         in order to avoid having your file be overridden by tools such as \"android update project\"\n    ",
        "Line" : 81,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : " version-tag: 1 ",
        "Line" : 82,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 8
    },
    "Cores/Yabause/yabause/src/c68k/CMakeLists.txt" : {
      "ObjectId" : "6267fd8de10a9f9bb623482d9153a7f655b892c7",
      "LastModified" : "2018-11-04T12:24:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# variadic macros\r\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Cores/Yabause/yabause/src/cocoa/CMakeLists.txt" : {
      "ObjectId" : "4bfab44374cd15ffb2d0f96a76ae102e12271f3e",
      "LastModified" : "2018-11-04T12:24:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Cores/Yabause/yabause/src/dreamcast/CMakeLists.txt" : {
      "ObjectId" : "e76d009e4c23d65fcbb9cd71d203cbad15439f77",
      "LastModified" : "2018-11-04T12:24:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Cores/Yabause/yabause/src/dreamcast/dreamcast.cmake" : {
      "ObjectId" : "0c39a1b97f0926247184c8e1ed16e4a4443d7bae",
      "LastModified" : "2018-11-04T12:24:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake toolchain file for building Yabause on the Dreamcast\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use the gnu_wrappers for the various GNU utilities\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# KOS Sets this nicely for us.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set some stuff so that it doesn't complain about the lack of a normal looking\n\n# pthreads flag/library for the compiler.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set a flag so we know we're trying to compile for Dreamcast\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Cores/Yabause/yabause/src/gtk/CMakeLists.txt" : {
      "ObjectId" : "c0d2e4354d85014c9d87732fd836e0c67722b881",
      "LastModified" : "2018-11-04T12:24:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Cores/Yabause/yabause/src/qt/CMakeLists.txt" : {
      "ObjectId" : "a42a0302320f01805e86d88623e1b7f88468384f",
      "LastModified" : "2018-11-04T12:24:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Since Qt5's cmake script doesn't set it, we will have to\n",
        "Line" : 27,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# dunno what it does exactly ... but seem required\n",
        "Line" : 54,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# qt resources file\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Windows port libraries\n",
        "Line" : 62,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# resources\n",
        "Line" : 66,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# qt forms\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# pure C headers\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# C headers needing moc\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# C sources\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# APPLE // not necessary mac os x, but i don't care ;)\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "Cores/Yabause/yabause/src/runner/CMakeLists.txt" : {
      "ObjectId" : "d534b819fc39bb449831a86c0ac74e737aa494c1",
      "LastModified" : "2018-11-04T12:24:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Cores/Yabause/yabause/src/tools/CMakeLists.txt" : {
      "ObjectId" : "a4f676b13b590527758b58dd709805a7005afeef",
      "LastModified" : "2018-11-04T12:24:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# C sources\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# C sources\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Makefile" : {
      "ObjectId" : "43918c2f82f24310d61a742d171c46c9d782f1fe",
      "LastModified" : "2019-01-03T20:19:14Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Add the following 'help' target to your Makefile\n\n# And add help text after each target name starting with '\\#\\#'\n\n# A category can be added with @category\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# COLORS\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## ----- Helper functions ------\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Helper target for declaring an external executable as a recipe dependency.\n\n# For example,\n\n#   `my_target: | _program_awk`\n\n# will fail before running the target named `my_target` if the command `awk` is\n\n# not found on the system path.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Helper target for declaring required environment variables.\n\n#\n\n# For example,\n\n#   `my_target`: | _var_PARAMETER`\n\n#\n\n# will fail before running `my_target` if the variable `PARAMETER` is not declared.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## ------ Commmands -----------\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Show help\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## Install dependencies.\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## -- Source Code Tasks --\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## Pull upstream and update 3rd party frameworks\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## -- QA Task Runners --\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## -- Testing --\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## Run test on all targets\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## -- Building --\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "## Make a .zip package of frameworks\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "## Update & build for iOS\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## Update & build for tvOS\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "## Open the workspace\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "## tag and release to github\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## Clear carthage caches. Helps with carthage update issues\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    }
  },
  "FileTypes" : {
    "CMAKE" : 18,
    "MAKEFILE" : 22,
    "AUTOMAKE" : 7,
    "ANT" : 1
  },
  "ElapsedTime" : 7425
}