{
  "Repository" : "7414525",
  "Revision" : "HEAD",
  "ObjectId" : "74dbf55da3c2de353471fedbd34e13c0c2570e26",
  "CommitTime" : "2019-04-19T07:06:56Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "e756f787b7e2649570db64d308085cd626e9fa09",
      "LastModified" : "2019-04-07T20:11:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# root CMakeLists for the SuperTuxKart project\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Normally hide the option to build wiiuse on VS, since it depends\n\n# on the installation of the Windows DDK (Driver Developer Kit),\n\n# which also needs an absolute path :(\n",
        "Line" : 61,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Define install paths\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Define dependencies path\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# These variables enable MSVC to find libraries located in \"dependencies\"\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Build the Bullet physics library\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Find system ENet library or build it if missing\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Fallback to built-in version\n",
        "Line" : 158,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Find system GLEW library or build it if missing\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Fallback to built-in version silently\n",
        "Line" : 180,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# Build zlib library\n",
        "Line" : 188,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Build png library\n",
        "Line" : 198,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# Add jpeg library\n",
        "Line" : 210,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Build the irrlicht library\n",
        "Line" : 261,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Build the Wiiuse library\n\n# Note: wiiuse MUST be declared after irrlicht, since otherwise\n\n# (at least on VS) irrlicht will find wiiuse io.h file because\n\n# of the added include directory.\n",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Find system WiiUse library or build it if missing\n",
        "Line" : 270,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Fallback to built-in version\n",
        "Line" : 278,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# Set include paths\n",
        "Line" : 287,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Enable multi-processor compilation (faster)\n",
        "Line" : 294,
        "CharPositionInLine" : 52
      },
      "19" : {
        "Text" : "# Build the angelscript library if not in system\n",
        "Line" : 298,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# OpenAL\n",
        "Line" : 315,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# OggVorbis\n",
        "Line" : 319,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Freetype\n",
        "Line" : 326,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Fribidi\n",
        "Line" : 337,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# OpenGL\n",
        "Line" : 349,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Set some compiler options\n",
        "Line" : 366,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# By default windows.h has macros defined for min and max that screw up everything\n",
        "Line" : 377,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# And shut up about unsafe stuff\n",
        "Line" : 380,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# Avoid timespec structure redeclaration on Visual Studio 2015\n",
        "Line" : 383,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# VS will automatically add NDEBUG for release mode, but only _DEBUG in debug mode.\n\n# Since STK uses DEBUG, this is added for debug compilation only:\n",
        "Line" : 390,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# All non VS generators used create only a single compile mode, so\n\n# compile flags can be simplye be added\n",
        "Line" : 394,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# Provides list of source and header files (STK_SOURCES and STK_HEADERS)\n",
        "Line" : 408,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Generate source groups useful for MSVC project explorer\n",
        "Line" : 411,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# icon files to copy in the bundle\n",
        "Line" : 417,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# build the executable and create an app bundle\n",
        "Line" : 422,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# configure CMake to use a custom Info.plist\n",
        "Line" : 432,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# Set data dir (absolute or relative to CMAKE_INSTALL_PREFIX)\n",
        "Line" : 452,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "# Build the final executable\n",
        "Line" : 464,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# CURL and OpenSSL or Nettle\n\n# 1.0.1d for compatible AES GCM handling\n",
        "Line" : 469,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Common library dependencies\n",
        "Line" : 510,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# FreeBSD does not search in /usr/local/lib, but at least Freetype is installed there :(\n",
        "Line" : 557,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Wiiuse\n\n# ------\n",
        "Line" : 567,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# ==== Checking if data folder exists ====\n",
        "Line" : 612,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# ==== Checking if stk-assets folder exists ====\n",
        "Line" : 617,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# ==== Install target ====\n",
        "Line" : 641,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 45
    },
    "android/build.xml" : {
      "ObjectId" : "54c3d58b4ffd29227f5c1b0d9cc8472931303133",
      "LastModified" : "2017-01-27T21:44:22Z",
      "FileType" : "ANT",
      "CommentCount" : 0
    },
    "cmake/BuildTypeSTKRelease.cmake" : {
      "ObjectId" : "ea4a9258814cded5c46bf514ed17c8b2ded70b5a",
      "LastModified" : "2017-01-27T21:44:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build type STKRelease is similar to Release provided by CMake,\n\n# but it uses a lower optimization level\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindAngelscript.cmake" : {
      "ObjectId" : "8cfa56bd9e0777c8b20b088f8cdbf7b651011695",
      "LastModified" : "2017-01-27T21:44:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find angelscript\n\n# Once done this will define\n\n#\n\n#  ANGELSCRIPT_FOUND - system has angelscript\n\n#  Angelscript_INCLUDE_DIRS - the angelscript include directory\n\n#  Angelscript_LIBRARIES - the libraries needed to use angelscript\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set ANGELSCRIPT_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindEGL.cmake" : {
      "ObjectId" : "430334b4aa0a10fef8dd9f05224cea031e325f8c",
      "LastModified" : "2017-09-18T19:50:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find EGL\n\n# Find the EGL includes and libraries\n\n#\n\n# Following variables are provided:\n\n# EGL_FOUND\n\n#     True if EGL has been found\n\n# EGL_INCLUDE_DIR\n\n#     The include directory of EGL\n\n# EGL_LIBRARY\n\n#     EGL library list\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindFreetype.cmake" : {
      "ObjectId" : "3e15de92eaad9a8acdcb611d7b3bff28f905cbfd",
      "LastModified" : "2017-10-20T14:00:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find Freetype\n\n# Find the Freetype includes and libraries\n\n#\n\n# Following variables are provided:\n\n# FREETYPE_FOUND\n\n#     True if Freetype has been found\n\n# FREETYPE_INCLUDE_DIRS\n\n#     The include directories of Freetype\n\n# FREETYPE_LIBRARIES\n\n#     Freetype library list\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindFribidi.cmake" : {
      "ObjectId" : "70fa2cd8ce61a19cbdd6ad411c411e00f07befc1",
      "LastModified" : "2018-06-15T19:06:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find Fribidi\n\n# Find the Fribidi includes and libraries\n\n#\n\n# Following variables are provided:\n\n# FRIBIDI_FOUND\n\n#     True if Fribidi has been found\n\n# FRIBIDI_INCLUDE_DIRS\n\n#     The include directories of Fribidi\n\n# FRIBIDI_LIBRARIES\n\n#     Fribidi library list\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Publish variables\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "cmake/FindLibbfd.cmake" : {
      "ObjectId" : "1a610a4747e413624514bd0b9e60d70a06098b59",
      "LastModified" : "2017-09-18T19:50:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find libbfd\n\n# Once done this will define\n\n#\n\n#  LIBBFD_FOUND - system has libbfd\n\n#  LIBBFD_INCLUDE_DIRS - the libbfd include directory\n\n#  LIBBFD_LIBRARIES - Link these to use libbfd\n\n#  LIBBFD_DEFINITIONS - Compiler switches required for using libbfd\n\n#\n\n# Based on:\n\n#\n\n#  Copyright (c) 2008 Bernhard Walle <bernhard.walle@gmx.de>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Ugly, yes ugly...\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#find_library (LIBBFD_IBERTY_LIBRARY\n\n#    NAMES\n\n#      iberty\n\n#    PATHS\n\n#      /usr/lib\n\n#      /usr/lib64\n\n#      /usr/local/lib\n\n#      /usr/local/lib64\n\n#      /usr/include\n\n#      /opt/local/lib\n\n#      /opt/usr/lib64\n\n#      ENV LIBRARY_PATH\n\n#      ENV LD_LIBRARY_PATH)\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#find_library (LIBBFD_OPCODES_LIBRARY\n\n#    NAMES\n\n#      opcodes\n\n#    PATHS\n\n#      /usr/lib\n\n#      /usr/lib64\n\n#      /usr/local/lib\n\n#      /usr/local/lib64\n\n#      /usr/include\n\n#      /opt/local/lib\n\n#      /opt/usr/lib64\n\n#      ENV LIBRARY_PATH\n\n#      ENV LD_LIBRARY_PATH)\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LIBBFD_FOUND to TRUE if all listed variables are TRUE\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#    LIBBFD_IBERTY_LIBRARY\n\n#    LIBBFD_OPCODES_LIBRARY\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/FindOggVorbis.cmake" : {
      "ObjectId" : "93adae122c15ceed8c182d1058e2b649cfa56190",
      "LastModified" : "2018-06-08T00:55:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find OggVorbis\n\n# Find the OggVorbis includes and libraries\n\n#\n\n# Following variables are provided:\n\n# OGGVORBIS_FOUND\n\n#     True if OggVorbis has been found\n\n# OGGVORBIS_INCLUDE_DIRS\n\n#     The include directories of OggVorbis\n\n# OGGVORBIS_LIBRARIES\n\n#     OggVorbis library list\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Publish variables\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindWayland.cmake" : {
      "ObjectId" : "6adad03e9b29be8daffbb2443763051a0441e9f7",
      "LastModified" : "2018-12-15T15:06:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find Wayland\n\n# Find the Wayland includes and libraries\n\n#\n\n# Following variables are provided:\n\n# WAYLAND_FOUND\n\n#     True if Wayland has been found\n\n# WAYLAND_INCLUDE_DIRS\n\n#     The include directories of Wayland\n\n# WAYLAND_LIBRARIES\n\n#     Wayland library list\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindWiiUse.cmake" : {
      "ObjectId" : "2657cbb6008e2a90677938947631d98978ce548a",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find WiiUse library\n\n#\n\n# Cache Variables: (probably not for direct use in your scripts)\n\n#  WIIUSE_INCLUDE_DIR\n\n#  WIIUSE_LIBRARY\n\n#\n\n# Non-cache variables you might use in your CMakeLists.txt:\n\n#  WIIUSE_FOUND\n\n#  WIIUSE_INCLUDE_DIRS\n\n#  WIIUSE_LIBRARIES\n\n#  WIIUSE_RUNTIME_LIBRARIES - aka the dll for installing\n\n#  WIIUSE_RUNTIME_LIBRARY_DIRS\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/SourceGroupFunctions.cmake" : {
      "ObjectId" : "31f949b7f89cf311555a551b1e96c3bd6c5db754",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Generate source groups which mimic the original folder hierarchy.\n\n# This is mainly useful for MSVC's project explorer\n\n# - SRCS list of source files\n\n# - HDRS list of header files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This removes the 'Source Files' folder, which is\n\n# not really necessary. Also, put header and source\n\n# files into the same folder\n",
        "Line" : 7,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# Determine source_group depending on file path\n\n# - FILE path to a file (header or source)\n\n# - GROUP_PREFIX prefix for group name\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/Toolchain-android.cmake" : {
      "ObjectId" : "0ab179eee5994c6b009466fb669f08b63443dd63",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Cross-compiling requires CMake 2.6 or newer. Example:\n\n# cmake .. -DCMAKE_TOOLCHAIN_FILE=../XCompile-Android.txt -DHOST=arm-linux-androideabi\n\n# Where 'arm-linux-androideabi' is the host prefix for the cross-compiler. If\n\n# you already have a toolchain file setup, you may use that instead of this\n\n# file. Make sure to set CMAKE_FIND_ROOT_PATH to where the NDK toolchain was\n\n# installed (e.g. \"$ENV{HOME}/toolchains/arm-linux-androideabi-r10c-21\").\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# the name of the target operating system\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# which compilers to use for C and C++\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# here is the target environment located\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# here is where stuff gets installed to\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# adjust the default behaviour of the FIND_XXX() commands:\n\n# search headers and libraries in the target environment, search \n\n# programs in the host environment\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# set env vars so that pkg-config will look in the appropriate directory for\n\n# .pc files (as there seems to be no way to force using ${HOST}-pkg-config)\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cmake/Toolchain-mingw-64bit.cmake" : {
      "ObjectId" : "1feb8b3b50e9a10194267e90d180c2659ed1ca41",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Usage:\n\n# cmake .. -DCMAKE_TOOLCHAIN_FILE=../cmake/Toolchain-mingw-64bit.cmake \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# the name of the target operating system\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# which compilers to use for C and C++\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# figure out folder to look in\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# here is the target environment located\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# adjust the default behaviour of the FIND_XXX() commands:\n\n# search headers and libraries in the target environment, search\n\n# programs in the host environment\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/Toolchain-mingw.cmake" : {
      "ObjectId" : "29a288275128aed3dccfd59e8c8d05fece4df6f9",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Usage:\n\n# cmake .. -DCMAKE_TOOLCHAIN_FILE=../cmake/Toolchain-mingw.cmake \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# the name of the target operating system\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# which compilers to use for C and C++\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# figure out folder to look in\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# here is the target environment located\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# adjust the default behaviour of the FIND_XXX() commands:\n\n# search headers and libraries in the target environment, search\n\n# programs in the host environment\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "lib/angelscript/projects/cmake/CMakeLists.txt" : {
      "ObjectId" : "2d0688720892dba31635ff9efef81d4d1e9c0448",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Fix x64 issues on Linux\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# OS X frameworks should have capitalized name\n",
        "Line" : 137,
        "CharPositionInLine" : 46
      },
      "2" : {
        "Text" : "# Don't override the default library output path to avoid conflicts when building for multiple target platforms\n\n#set(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/../../lib)\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Don't override the default runtime output path to avoid conflicts when building for multiple target platforms\n\n#set(RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/../../bin)\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "lib/bullet/CMakeLists.txt" : {
      "ObjectId" : "ac6a62ee431823037b7fbaad2b9e29134042dd8f",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt for Bullet in STK\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# libbulletmath\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO: original comment:\n\n# Certain g++ versions causes stk to crash if btVoronoiSimplexSolver.cpp is\n\n# compiled with optimisations. Since it's rather difficult to specify certain\n\n# flags for one file only with auto-tools (you can only specify flags per\n\n# library, so you have to put this one file into a separate library) we compile\n\n# the whole libbulletcollision with the modified flags - i.e. by adding \n\n# -fno-elide-constructors to the flags. The overall performance impact is\n\n# quite low anyway.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# libbulletcollision\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# libbulletdynamics\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "lib/bullet/Makefile.am" : {
      "ObjectId" : "8b6d68e94641497fad1b1a76816270536307b2bc",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "lib/bullet/src/Makefile.am" : {
      "ObjectId" : "830cece29350b7f44161bee918e2227ff5ce0e5c",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Certain g++ versions causes stk to crash if btVoronoiSimplexSolver.cpp is\n\n# compiled with optimisations. Since it's rather difficult to specify certain\n\n# flags for one file only with auto-tools (you can only specify flags per\n\n# library, so you have to put this one file into a separate library) we compile\n\n# the whole libbulletcollision with the modified flags - i.e. by adding \n\n# -fno-elide-constructors to the flags. The overall performance impact is\n\n# quite low anyway.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/enet/CMakeLists.txt" : {
      "ObjectId" : "a7bd10926b5ff51b8236624123793c29889890c3",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt - enet\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/glew/CMakeLists.txt" : {
      "ObjectId" : "09cffd4561808857fb4b36c06bb5facf95e1763b",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt - glew\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/graphics_utils/CMakeLists.txt" : {
      "ObjectId" : "0c238f0b6ad7f08693c3aae368415583fe6372d4",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/irrlicht/CMakeLists.txt" : {
      "ObjectId" : "92a881c8178501ee2e0cd88e6ef504b0125828d5",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt for Irrlicht in STK\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For zconf.h on WIN32\n",
        "Line" : 12,
        "CharPositionInLine" : 68
      },
      "2" : {
        "Text" : "# Shut up about unsafe stuff\n",
        "Line" : 98,
        "CharPositionInLine" : 47
      },
      "3" : {
        "Text" : "#list(APPEND CMAKE_C_SOURCE_FILE_EXTENSIONS mm)\n\n#set(CMAKE_CXX_SOURCE_FILE_EXTENSIONS cpp)\n",
        "Line" : 597,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "lib/jpeglib/CMakeLists.txt" : {
      "ObjectId" : "0fcf34997aecd31fd8325839c6a20e298a1555b0",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/jpeglib/Makefile.am" : {
      "ObjectId" : "42cff57f7bc7629dd3e5c3574a58d91f59c9ea0b",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n\n#\n\n#  Automake Makefile for the JPEG library\n\n#\n\n#  This file is written by Bob Friesenhahn, Guido Vollbeding\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sources to build library\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# System dependent sources\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Headers which are installed to support the library\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Headers which are not installed\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Manual pages (Automake uses 'MANS' for itself)\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Other documentation files\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Makefiles for various systems\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Configuration files\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Support scripts for configure\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Miscellaneous support files\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Test support files\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# libtool libraries to build\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Library sources for libjpeg.la\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# LDFLAGS for libjpeg.la\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Executables to build\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Executable sources & libs\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Manual pages to install\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Headers to install\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Other distributed headers\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Other distributed files\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Files to be cleaned\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Install jconfig.h\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Uninstall jconfig.h\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Run tests\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "lib/libpng/CMakeLists.txt" : {
      "ObjectId" : "020dd7e3dd400ab6ee1ddb1a3342beae90fe7070",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (C) 2007,2009-2016 Glenn Randers-Pehrson\n\n# Written by Christian Ehrlicher, 2007\n\n# Revised by Roger Lowman, 2009-2010\n\n# Revised by Clifford Yapp, 2011-2012\n\n# Revised by Roger Leigh, 2016\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This code is released under the libpng license.\n\n# For conditions of distribution and use, see the disclaimer\n\n# and license in png.h\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set MacOSX @rpath usage globally.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Use new variable expansion policy.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Needed packages. Since WIN32 (except mingw) uses the included zlib\n\n# version, find_package would fail with an error message. Since\n\n# all variables are already set in this case, the find package\n\n# is actually not necessary in this case, so just ignore it\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# not needed on windows\n",
        "Line" : 61,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# COMMAND LINE OPTIONS\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Many more configuration options could be added here\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# SET LIBNAME\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# to distinguish between debug and release lib\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Check if LD supports linker scripts.\n",
        "Line" : 86,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# No awk available to generate sources; use pre-built pnglibconf.h\n",
        "Line" : 119,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Dummy\n",
        "Line" : 122,
        "CharPositionInLine" : 30
      },
      "14" : {
        "Text" : "# Generate .chk from .out with awk\n\n# generate_chk(INPUT inputfile OUTPUT outputfile [DEPENDS dep1 [dep2...]])\n",
        "Line" : 125,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Generate .out from .c with awk\n\n# generate_out(INPUT inputfile OUTPUT outputfile [DEPENDS dep1 [dep2...]])\n",
        "Line" : 148,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Generate specific source file with awk\n\n# generate_source(OUTPUT outputfile [DEPENDS dep1 [dep2...]])\n",
        "Line" : 171,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Copy file\n",
        "Line" : 190,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Generate scripts/pnglibconf.h\n",
        "Line" : 199,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Generate pnglibconf.c\n",
        "Line" : 205,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Generate pnglibconf.h\n",
        "Line" : 214,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# A single target handles generation of all generated files.  If\n\n# they are dependend upon separately by multiple targets, this\n\n# confuses parallel make (it would require a separate top-level\n\n# target for each file to track the dependencies properly).\n",
        "Line" : 257,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# OUR SOURCES\n",
        "Line" : 274,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# NOW BUILD OUR TARGET\n",
        "Line" : 320,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# msvc does not append 'lib' - do it here to have consistent name\n",
        "Line" : 331,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# does not work without changing name\n",
        "Line" : 349,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# MSVC doesn't use a different file extension for shared vs. static\n\n# libs.  We are able to change OUTPUT_NAME to remove the _static\n\n# for all other platforms.\n",
        "Line" : 353,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# msvc does not append 'lib' - do it here to have consistent name\n",
        "Line" : 367,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# have generator expressions\n",
        "Line" : 419,
        "CharPositionInLine" : 36
      },
      "29" : {
        "Text" : "# old 2.x add_test; limited and won't work well on Windows\n",
        "Line" : 425,
        "CharPositionInLine" : 9
      },
      "30" : {
        "Text" : "# Note LIBPNG is a dummy value as there are no generator expressions\n",
        "Line" : 426,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# Find test PNG files by globbing, but sort lists to ensure\n\n# consistency between different filesystems.\n",
        "Line" : 435,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# Ensure the CMAKE_LIBRARY_OUTPUT_DIRECTORY is set\n",
        "Line" : 482,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Set a variable with CMake code which:\n\n# Creates a symlink from src to dest (if possible) or alternatively\n\n# copies if different.\n",
        "Line" : 487,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Create source generation scripts.\n",
        "Line" : 508,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# libpng is a library so default to 'lib'\n",
        "Line" : 517,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# CREATE PKGCONFIG FILES\n\n# we use the same files like ./configure, so we have to set its vars\n\n# Only do this on Windows for Cygwin - the files don't make much sense outside\n\n# a UNIX look alike\n",
        "Line" : 522,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# SET UP LINKS\n",
        "Line" : 541,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#   VERSION 15.${PNGLIB_RELEASE}.1.5.28\n",
        "Line" : 544,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# If CMake > 2.4.x, we set a variable used below to export\n\n# targets to an export file.\n\n# TODO: Use VERSION_GREATER after our cmake_minimum_required >= 2.6.2\n",
        "Line" : 550,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# future proof\n",
        "Line" : 555,
        "CharPositionInLine" : 38
      },
      "41" : {
        "Text" : "# INSTALL\n",
        "Line" : 559,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Create a symlink for libpng.dll.a => libpng15.dll.a on Cygwin\n",
        "Line" : 569,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "# Install man pages\n",
        "Line" : 613,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# Install pkg-config files\n",
        "Line" : 619,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "# On versions of CMake that support it, create an export file CMake\n\n# users can include() to import our targets\n",
        "Line" : 632,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# what's with libpng-manual.txt and all the extra files?\n",
        "Line" : 638,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# UNINSTALL\n\n# do we need this?\n",
        "Line" : 640,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# DIST\n\n# do we need this?\n",
        "Line" : 643,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# to create msvc import lib for mingw compiled shared lib\n\n# pexports libpng.dll > libpng.def\n\n# lib /def:libpng.def /machine:x86\n",
        "Line" : 646,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 50
    },
    "lib/libpng/Makefile.am" : {
      "ObjectId" : "38f64f0d42ce3df0274f8a6338c9819e22b1a685",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Makefile.am:\n\n#   Source file for Makefile.in (and hence Makefile)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# libpng does not follow GNU file name conventions\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# \"color-tests\" requires automake 1.11.1 or later.  Enable it if you like,\n\n# to get red \"FAIL\" and green \"PASS\" notations during tests.\n\n# AUTOMAKE_OPTIONS = foreign color-tests\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# test programs - run on make check, make distcheck\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Only do the following if the contrib directory is present.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# man pages\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# generate the -config scripts if required\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# rules to build libpng, only build the old library on request\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# EXTRA_LTLIBRARIES= libpng.la\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#   Versioned symbols and restricted exports\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#   Only restricted exports when possible\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#distribute headers in /usr/include/libpng/*\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# pkg-config stuff, note that libpng.pc is always required in order\n\n# to get the correct library\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#extra source distribution files.\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# DFNCPP is normally just CPP - the C preprocessor - but on Solaris and maybe\n\n# other operating systems (NeXT?) the C preprocessor selected by configure\n\n# checks input tokens for validity - effectively it performs part of the ANSI-C\n\n# parsing - and therefore fails with the .df files.  configure.ac has special\n\n# checks for this and sets DFNCPP appropriately.\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# The following is necessary to ensure that the local pnglibconf.h is used, not\n\n# an installed one (this can happen immediately after on a clean system if\n\n# 'make test' is the first thing the user does.)\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# We must use -DPNG_NO_USE_READ_MACROS here even when the library may actually\n\n# be built with PNG_USE_READ_MACROS; this prevents the read macros from\n\n# interfering with the symbol file format.\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Make links between installed files with release-specific names and the generic\n\n# file names.  If this install rule is run the generic names will be deleted and\n\n# recreated - this has obvious issues for systems with multiple installations.\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# EXT_LIST is a list of the possibly library directory extensions, this exists\n\n# because we can't find a good way of discovering the file extensions that are\n\n# actually installed on a given system, so instead we check for every extension\n\n# we have seen.\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# If --enable-unversioned-links is specified the header and lib file links\n\n# will be automatically made on a 'make install':\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Likewise, --install-pc causes libpng.pc to be constructed:\n",
        "Line" : 254,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# And --install-config:\n",
        "Line" : 261,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# The following addition ensures that 'make all' always builds the test programs\n\n# too.  It used to, but some change either in libpng or configure stopped this\n\n# working.\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "lib/libsquish/CMakeLists.txt" : {
      "ObjectId" : "35403a42d3220894b80513948706792d232bced3",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# cmake build file for squish\n\n# by Stefan Roettger (snroettg@gmail.com)\n\n# updated by Simon Brown (si@sjbrown.co.uk)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# features:\n\n#   uses -fopenmp when available\n\n#    use BUILD_SQUISH_WITH_OPENMP to override\n\n#   Xcode: builds universal binaries, uses SSE2 on i386 and Altivec on ppc\n\n#   Unix and VS: SSE2 support is enabled by default\n\n#    use BUILD_SQUISH_WITH_SSE2 and BUILD_SQUISH_WITH_ALTIVEC to override\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# A fix for MinGW compilation\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "lib/libsquish/Makefile" : {
      "ObjectId" : "fd7d6c8fe5cbc5e1a59b8ed610f4e31db7a39bd6",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "lib/wiiuse/CMakeLists.txt" : {
      "ObjectId" : "54666022d42ee0ab0edc2d3d62f67b10e43c35c5",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# 2009-2011 Ryan Pavlik <rpavlik@iastate.edu>\n\n# http://academic.cleardefinition.com/\n\n# Iowa State University HCI Graduate Program/VRAC\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set package properties\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Set up options\n\n###\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n# Perform build configuration of dependencies\n\n###\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Locally-developed modules dist'ed with this app - always have this first.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Minimum requirement is WinXP\n",
        "Line" : 63,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "###\n\n# Build the project\n\n###\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# The lib is in the \"src\" subdirectory\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Example apps\n",
        "Line" : 76,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "###\n\n# Set packaging options (for CPack)\n\n###\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Documentation\n",
        "Line" : 105,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# Include the packaging system now that we have it all set up\n",
        "Line" : 132,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 12
    },
    "lib/wiiuse/ParseVersion.cmake" : {
      "ObjectId" : "96873cc3531fdc6812b3dfc82a20a6b9f8f6043d",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/wiiuse/cmake/AboutTheseModules.cmake" : {
      "ObjectId" : "72082b1cf6f688ed9d7ef14785e46dca358bc151",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Dummy module containing information about these modules for the HELP file\n\n# This file documents a snapshot of the cmake-modules available from\n\n# http://github.com/rpavlik/cmake-modules/\n\n# The latest version of these modules can always be found there.\n\n# Additionally, you can find instructions on how to integrate these modules\n\n# into your own project either in the README.markdown file in this directory,\n\n# or on the GitHub page listed above (scroll to the bottom to see the README\n\n# rendered attractively).\n\n#\n\n# In short: Modules of the form \"FindSomeName.cmake\" are considered to be\n\n# \"find modules\", and are intended to be used indirectly by calling find_package,\n\n# not by calling include.  Thus, you'll want to do something like:\n\n#  find_package(SomeName)\n\n# They define a number of variables allowing you to use whatever software\n\n# they search for, such as include directories and libraries. A few also\n\n# define some functions for your use.\n\n#\n\n# All other modules provide functionality, either immediately upon including\n\n# them, or by defining functions that perform some task of varying utility\n\n# that you can use any time after including them. Note that if a module\n\n# has the filename, for example, cmake/BoostTestTargets.cmake, you only\n\n# need to call:\n\n#  include(BoostTestTargets)\n\n#\n\n# For more information, see the documentation for individual modules, the\n\n# cmake-modules github page, and/or the upstream CMake documentation at\n\n# http://www.cmake.org/cmake/help/cmake-2-8-docs.html\n\n#\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/wiiuse/cmake/BoostTestTargets.cmake" : {
      "ObjectId" : "31b3ae67746a6b1b82e7ba20514fabcef9c5c129",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Add tests using boost::test\n\n#\n\n# Add this line to your test files in place of including a basic boost test header:\n\n#  #include <BoostTestTargetConfig.h>\n\n#\n\n# If you cannot do that and must use the included form for a given test,\n\n# include the line\n\n#  // OVERRIDE_BOOST_TEST_INCLUDED_WARNING\n\n# in the same file with the boost test include.\n\n#\n\n#  include(BoostTestTargets)\n\n#  add_boost_test(<testdriver_name> SOURCES <source1> [<more sources...>]\n\n#   [FAIL_REGULAR_EXPRESSION <additional fail regex>]\n\n#   [LAUNCHER <generic launcher script>]\n\n#   [LIBRARIES <library> [<library>...]]\n\n#   [RESOURCES <resource> [<resource>...]]\n\n#   [TESTS <testcasename> [<testcasename>...]])\n\n#\n\n#  If for some reason you need access to the executable target created,\n\n#  it can be found in ${${testdriver_name}_TARGET_NAME} as specified when\n\n#  you called add_boost_test\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Requires:\n\n# \tGetForceIncludeDefinitions\n\n# \tCopyResourcesToBuildTree\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# parse arguments\n",
        "Line" : 97,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# clear this out - linking would be a bad idea\n",
        "Line" : 148,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "# Generate a unique target name, using the relative binary dir\n\n# and provided name. (transform all / into _ and remove all other\n\n# non-alphabet characters)\n",
        "Line" : 186,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Build the test.\n",
        "Line" : 199,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#\t\t\tset(Boost_TEST_FLAGS --catch_system_error=yes --output_format=XML)\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# TODO: Figure out why only recent boost handles individual test running properly\n",
        "Line" : 218,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# CppCheck the test if we can.\n",
        "Line" : 252,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "lib/wiiuse/cmake/BundleOSGPlugins.cmake" : {
      "ObjectId" : "ef491d87748f276bf0afdbde58e03795334b96e3",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Provide access to the OpenSceneGraph runtime files for bundling in\n\n# an installation or package.\n\n#\n\n# Sets these variables:\n\n#  - OSGDB_PLUGINS_RELEASE\n\n#  - OSGDB_PLUGINS_DEBUG\n\n#  - OSGWRAPPER_PLUGINS_RELEASE\n\n#  - OSGWRAPPER_PLUGINS_DEBUG\n\n#  - OSG_RUNTIME_LIBRARY_DIR\n\n#  - OSG_PATH_TO_PLUGINS\n\n#\n\n# Creates this function:\n\n#  - install_osg_plugins( {varNameForOutputFilenames} )\n\n#\n\n# Requires these CMake modules:\n\n#  no additional modules required\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find the osgDB plugins\n",
        "Line" : 70,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "#get_filename_component(name \"${plugin}\" NAME)\n\n#list(APPEND INSTALLEDPLUGINS \"${OSG_PATH_TO_PLUGINS}/${name}\")\n",
        "Line" : 91,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "lib/wiiuse/cmake/BundleOSGRuntime.cmake" : {
      "ObjectId" : "8d119261b8dd97850cebe478ed7f3cc9df5c6451",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Include the OpenSceneGraph runtime files in an installation or built package.\n\n#\n\n#  OSGRUNTIME_BUNDLE - Set to \"yes\" to enable this behavior\n\n#  OSGRUNTIME_zlib1dll - Must be set to the location of zlib1.dll on Windows\n\n#  OSGRUNTIME_zlib1ddll - Can be set to the location of zlib1d.dll (debug) on Windows.\n\n#                         If set, will be installed.\n\n#\n\n# Requires these CMake modules:\n\n#  no additional modules required\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find the osgDB plugins\n",
        "Line" : 69,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# If we are missing a single required file, cut out now.\n",
        "Line" : 81,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "# Runtime files\n",
        "Line" : 116,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "lib/wiiuse/cmake/BundleVRJ22Runtime.cmake" : {
      "ObjectId" : "9198d2598b4925a7da1136d8a517566bc2b41676",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Include the VR Juggler runtime files in an installation or built package.\n\n#\n\n#  VRJUGGLERRUNTIME_BUNDLE\n\n#  VRJUGGLERRUNTIME_BUNDLE_DEBUG - set to yes to include debug dll's as well\n\n#\n\n# Requires these CMake modules:\n\n#  FindVRJuggler22 and its dependencies\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO - how to handle when not on Windows?\n\n#option(VRJUGGLERRUNTIME_BUNDLE \"Install a local copy of the VR Juggler runtime files with the project.\" off)\n",
        "Line" : 28,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# TODO - make sure gadgeteer and sonix can find their DSO's at runtime...\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# exclude static and link libraries\n\n# exclude unneeded executables\n",
        "Line" : 45,
        "CharPositionInLine" : 31
      },
      "4" : {
        "Text" : "# exclude unneeded python executables\n",
        "Line" : 47,
        "CharPositionInLine" : 30
      },
      "5" : {
        "Text" : "# exclude unneeded python executables\n",
        "Line" : 48,
        "CharPositionInLine" : 31
      },
      "6" : {
        "Text" : "# exclude static and link libraries\n\n# exclude unneeded executables\n",
        "Line" : 53,
        "CharPositionInLine" : 31
      },
      "7" : {
        "Text" : "# exclude unneeded python executables\n",
        "Line" : 55,
        "CharPositionInLine" : 30
      },
      "8" : {
        "Text" : "# exclude unneeded python executables\n",
        "Line" : 56,
        "CharPositionInLine" : 31
      },
      "9" : {
        "Text" : "# exclude debug dll's\n",
        "Line" : 58,
        "CharPositionInLine" : 31
      },
      "10" : {
        "Text" : "# exclude Boost debug dll's\n",
        "Line" : 59,
        "CharPositionInLine" : 35
      },
      "11" : {
        "Text" : "# Runtime files\n",
        "Line" : 69,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Data files\n",
        "Line" : 73,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Config files\n",
        "Line" : 83,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Other Files\n",
        "Line" : 89,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 15
    },
    "lib/wiiuse/cmake/BundleVRJ30Runtime.cmake" : {
      "ObjectId" : "c661da0fe7b2cd4ad3a089ebda291f3ad5292f79",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Include the VR Juggler runtime files in an installation or built package.\n\n#\n\n#  VRJUGGLERRUNTIME_BUNDLE\n\n#  VRJUGGLERRUNTIME_BUNDLE_DEBUG - set to yes to include debug dll's as well\n\n#\n\n# Requires these CMake modules:\n\n#  FindVRJuggler22 and its dependencies\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n# Updated for VR Juggler 3.0 by:\n\n# Brandon Newendorp <brandon@newendorp.com>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO - how to handle when not on Windows?\n\n#option(VRJUGGLERRUNTIME_BUNDLE \"Install a local copy of the VR Juggler runtime files with the project.\" off)\n",
        "Line" : 25,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# TODO - make sure gadgeteer and sonix can find their DSO's at runtime...\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# exclude static and link libraries\n\n# exclude unneeded executables\n",
        "Line" : 42,
        "CharPositionInLine" : 31
      },
      "4" : {
        "Text" : "# exclude unneeded python executables\n",
        "Line" : 44,
        "CharPositionInLine" : 30
      },
      "5" : {
        "Text" : "# exclude unneeded python executables\n",
        "Line" : 45,
        "CharPositionInLine" : 31
      },
      "6" : {
        "Text" : "# exclude static and link libraries\n\n# exclude unneeded executables\n",
        "Line" : 50,
        "CharPositionInLine" : 31
      },
      "7" : {
        "Text" : "# exclude unneeded python executables\n",
        "Line" : 52,
        "CharPositionInLine" : 30
      },
      "8" : {
        "Text" : "# exclude unneeded python executables\n",
        "Line" : 53,
        "CharPositionInLine" : 31
      },
      "9" : {
        "Text" : "# exclude debug dll's\n",
        "Line" : 55,
        "CharPositionInLine" : 31
      },
      "10" : {
        "Text" : "# exclude Boost debug dll's\n",
        "Line" : 56,
        "CharPositionInLine" : 35
      },
      "11" : {
        "Text" : "# Runtime files\n",
        "Line" : 66,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Data files\n",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Config files\n",
        "Line" : 80,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Other Files\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 15
    },
    "lib/wiiuse/cmake/CheckMacHIDAPI.cmake" : {
      "ObjectId" : "54337835a3f55cbeb763b5803bdfb4c3dbae823f",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Script to check if the signature for a mac HID callback uses UInt32 or uint32_t\n\n# Requires that the associated CPP file be present: CheckMacHIDAPI.cpp.\n\n#\n\n#\tMACOSX_HID_UINT32T, set according to the results of our test.\n\n#\n\n# Use add_definitions(-DMACOSX_HID_UINT32T=${MACOSX_HID_UINT32T}) in your\n\n# listfile and the following prototype for the function you'd like to\n\n# register using setInterruptReportHandlerCallback:\n\n#  void ReaderReportCallback(\n\n#                            void *target,\n\n#                            IOReturn result,\n\n#                            void *refcon,\n\n#                            void *sender,\n\n#                            MACOSX_HID_UINT32T size\n\n#                            )\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/wiiuse/cmake/CheckVersion.cmake" : {
      "ObjectId" : "baece76d887f4ad7b21ffe32936a9b4b88c854dc",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Utility function for Find modules considering multiple possible versions\n\n#\n\n# Requires these CMake modules:\n\n#  no additional modules required\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# By default, we say that the version is good enough\n",
        "Line" : 22,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Was a version requested?  If so, what is our test condition?\n",
        "Line" : 25,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# Yes, an exact == version was requested - check it.\n",
        "Line" : 28,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# version is not an exact match\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Yes, a minimum >= version was requested - check it.\n",
        "Line" : 35,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "# version is lower than requested\n",
        "Line" : 38,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Return _result\n",
        "Line" : 45,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 8
    },
    "lib/wiiuse/cmake/CleanDirectoryList.cmake" : {
      "ObjectId" : "58b8963f9ee3ae27493c8bda68909692b59f4994",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Removes duplicate entries and non-directories from a provided list\n\n#\n\n#  clean_directory_list(<listvar> [<additional list items>...])\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# combine variable's current value with additional list items\n",
        "Line" : 23,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Initial list cleaning\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Grab the absolute path of each actual directory\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Clean up the output list now\n",
        "Line" : 41,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "# return _out\n",
        "Line" : 45,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "lib/wiiuse/cmake/CleanLibraryList.cmake" : {
      "ObjectId" : "77613934dc062c70b9af689f8017065e0a07a8e6",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - A smarter replacement for list(REMOVE_DUPLICATES) for library lists\n\n#\n\n# Note that, in the case of cyclic link dependencies, you _do_ actually need\n\n# a library in a list multiple times. So, only use this function when you know\n\n# that the dependency graph is acyclic.\n\n#\n\n#  clean_library_list(<listvar> [<additional list items>...]) - where\n\n#  listvar is the name of a destination variable, and also possibly a source, and\n\n#  it is followed by any number (including 0) of additional libraries to append\n\n#  to the list before processing.\n\n#\n\n# Removes duplicates from the list, leaving only the last instance, while\n\n# preserving the meaning of the \"optimized\", \"debug\", and \"general\" labeling.\n\n# (Libraries listed as general are listed in the result instead as optimized and\n\n# debug)\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# combine variable's current value with additional list items\n",
        "Line" : 35,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Turn each of optimized, debug, and general into flags\n\n# prefixed on their respective library (combining list items)\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Any library that doesn't have a prefix is general, and a general\n\n# library is both debug and optimized so stdize it\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# REMOVE_DUPLICATES leaves the first - so we reverse before and after\n\n# to keep the last, instead\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Split list items back out again: turn prefixes into the\n\n# library type flags.\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Return _std\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    },
    "lib/wiiuse/cmake/CopyImportedTarget.cmake" : {
      "ObjectId" : "fed23b4fa9c91daf57cde7dbe5accb948a512400",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Copy shared libraries from imported targets to the target build directory\n\n# on Windows during post-build. Install them in all cases.\n\n#\n\n#  copy_imported_targets(<target_name> [<imported target name> ...])\n\n#\n\n#  install_imported_target(<imported target name> <arguments to pass to install(FILES))\n\n#\n\n# Likely requires CMake 2.8.12 or newer to work well.\n\n#\n\n# Original Author:\n\n# 2015 Ryan Pavlik <ryan.pavlik@gmail.com> <abiryan@ryand.net>\n\n#\n\n# Copyright Sensics, Inc. 2015.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/wiiuse/cmake/CopyResourcesToBuildTree.cmake" : {
      "ObjectId" : "3512cc48445b0a2f3ab1c9422edd1fbd3ffff3d3",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Copy the resources your app needs to the build tree.\n\n#\n\n#  copy_resources_to_build_tree(<target_name>)\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Bail if no resources\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Working dir is solution file dir, not exe file dir.\n",
        "Line" : 55,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 3
    },
    "lib/wiiuse/cmake/CppcheckTargets.cmake" : {
      "ObjectId" : "cb21bed739c9f827980e5d9d286666b24bd81943",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Run cppcheck on c++ source files as a custom target and a test\n\n#\n\n#  include(CppcheckTargets)\n\n#  add_cppcheck(<target-name> [UNUSED_FUNCTIONS] [STYLE] [POSSIBLE_ERROR] [FORCE] [FAIL_ON_WARNINGS]) -\n\n#    Create a target to check a target's sources with cppcheck and the indicated options\n\n#  add_cppcheck_sources(<target-name> [UNUSED_FUNCTIONS] [STYLE] [POSSIBLE_ERROR] [FORCE] [FAIL_ON_WARNINGS]) -\n\n#    Create a target to check standalone sources with cppcheck and the indicated options\n\n#\n\n# Requires these CMake modules:\n\n#  Findcppcheck\n\n#\n\n# Requires CMake 2.8 or newer (uses VERSION_LESS)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <ryan.pavlik@gmail.com> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Copyright Anthony Pesch 2014\n\n# Copyright Stefan Eilemann 2014\n\n# Copyright Nicholas Brown 2015\n\n# Copyright Ryan Pavlik 2017\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This file has a source file property, carry on.\n",
        "Line" : 92,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# This file doesn't have source file properties - figure it out.\n",
        "Line" : 98,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Older than CMake 2.8.0\n",
        "Line" : 112,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# CMake 2.8.0 and newer\n",
        "Line" : 119,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "# Older than CMake 2.8.0\n",
        "Line" : 203,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "# CMake 2.8.0 and newer\n",
        "Line" : 210,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 7
    },
    "lib/wiiuse/cmake/CreateDashboardScripts.cmake" : {
      "ObjectId" : "22420b5b4c09261d7d4ec20e3a1af59670433f4a",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Create ctest -S scripts to use to run dashboard builds\n\n#\n\n#  include(CreateDashboardScripts)\n\n#  create_dashboard_scripts([<initialcachetemplatefilename>])\n\n#\n\n# If you need additional settings to persist from the \"parent\" CMake instance\n\n# to the initial cache created by the dashboard script,\n\n# you may pass a filename which will be configured into the initial cache.\n\n#\n\n# In the resulting DASHBOARDSCRIPT_BASE_DIRECTORY, an end-user\n\n# may optionally create a file named\n\n#  CustomInitialCache.${DASHBOARDSCRIPT_SCRIPT_NAME}\n\n# (by default, CustomInitialCache.go.cmake) containing set commands that use\n\n# the CACHE option, to set up additional site-local cache variable values.\n\n#\n\n# Requires these CMake modules:\n\n#  GetCompilerInfoString\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command),\n\n# as well as FindGit.cmake (included with 2.8.2, may be backported)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Only do any of the prep work if not already in a dashboard script\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Hide a CTest variable\n",
        "Line" : 35,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# We must run the following at \"include\" time, not at function call time,\n\n# to find the path to this module rather than the path to a calling list file\n",
        "Line" : 42,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# Try to find CTest, preferably right next to the chosen CMake\n",
        "Line" : 89,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# Optionals\n",
        "Line" : 118,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# If we have a valid git we found ourselves in older version of the module,\n\n# let the regular FindGit module (since 2.8.2) know.\n",
        "Line" : 125,
        "CharPositionInLine" : 3
      },
      "7" : {
        "Text" : "# IN_DASHBOARD_SCRIPT is YES\n",
        "Line" : 142,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# Only create the script if we have all the required variables\n\n# and are not already in it, and are at least 2.8.0.\n",
        "Line" : 148,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# If given a cache template, configure it\n",
        "Line" : 185,
        "CharPositionInLine" : 3
      },
      "10" : {
        "Text" : "# Actually create the script file\n",
        "Line" : 192,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 11
    },
    "lib/wiiuse/cmake/CreateImportedTarget.cmake" : {
      "ObjectId" : "31fb3b7e862b4fbd0488b1abd4eb9fcb5b1da9c7",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - A smarter replacement for list(REMOVE_DUPLICATES) for library lists\n\n#\n\n#  create_imported_target(<libname> [SHARED|STATIC|MODULE] [<library dependency>...]) - where\n\n#  ${libname}_LIBRARIES is set to this library's paths.\n\n#\n\n# Removes duplicates from the list then sorts while preserving \"optimized\",\n\n# \"debug\", and \"general\" labeling\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#message(STATUS \"Library ${_libname}: lib ${${_libname}_LIBRARIES}\")\n\n#message(STATUS \"Deps: ${_deps}\")\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "lib/wiiuse/cmake/CreateLaunchers.cmake" : {
      "ObjectId" : "571f044d71fc06f192399c8c25d81fe1bde4b503",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Create launchers to set working directory, env. vars, etc.\n\n#\n\n#  include(CreateLaunchers) - to make these available\n\n#  guess_runtime_library_dirs(<outputvarname> [<extralibrary> ...])\n\n#  create_default_target_launcher(<targetname>\n\n#    [ARGS <args...>]\n\n#    [FORWARD_ARGS]\n\n#    [RUNTIME_LIBRARY_DIRS <dir...>]\n\n#    [WORKING_DIRECTORY <dir>]\n\n#    [ENVIRONMENT <VAR=value> [<VAR=value>...]])\n\n#\n\n#  create_target_launcher(<targetname>\n\n#    [ARGS <args...>]\n\n#    [FORWARD_ARGS]\n\n#    [RUNTIME_LIBRARY_DIRS <dir...>]\n\n#    [WORKING_DIRECTORY <dir>]\n\n#    [ENVIRONMENT <VAR=value> [<VAR=value>...]])\n\n#\n\n#  create_generic_launcher(<launchername>\n\n#    [RUNTIME_LIBRARY_DIRS <dir...>]\n\n#    [WORKING_DIRECTORY <dir>]\n\n#    [ENVIRONMENT <VAR=value> [<VAR=value>...]])\n\n#    - sets GENERIC_LAUNCHER_COMMAND and GENERIC_LAUNCHER_FAIL_REGULAR_EXPRESSION\n\n#\n\n# Requires these CMake modules:\n\n#  ListFilter\n\n#  ProgramFilesGlob\n\n#  CleanDirectoryList\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We must run the following at \"include\" time, not at function call time,\n\n# to find the path to this module rather than the path to a calling list file\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find user and system name\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# 2010 or newer\n",
        "Line" : 76,
        "CharPositionInLine" : 57
      },
      "4" : {
        "Text" : "# Turn into a list of native paths\n",
        "Line" : 142,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "#    get_filename_component(_targetname \"${_target}\" NAME)\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Multi-config generator - multiple launchers\n",
        "Line" : 251,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Single-config generator - single launcher\n",
        "Line" : 265,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Start off with the link directories of the calling listfile's directory\n",
        "Line" : 324,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# Add additional libraries passed to the function\n",
        "Line" : 327,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# Now, build a list of potential dll directories\n",
        "Line" : 333,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# Add the libdir itself\n",
        "Line" : 336,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Look also in libdir/../bin since the dll might not be with the lib\n",
        "Line" : 339,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Only keep the valid, unique directories\n",
        "Line" : 344,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# Return _dlldirs\n",
        "Line" : 347,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 15
    },
    "lib/wiiuse/cmake/DoxygenTargets.cmake" : {
      "ObjectId" : "df7c08812d9ab693c385eea0f11eda30965a30df",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Run doxygen on source files as a custom target\n\n#\n\n#  include(DoxygenTargets)\n\n#  add_doxygen(<doxyfile> [OUTPUT_DIRECTORY <outputdir>]\n\n#   [EXTRA_INPUT <single path or quoted list of paths>]\n\n#   [EXTRA_STRIP_FROM_PATH <single path or quoted list of paths>]\n\n#   [EXTRA_STRIP_FROM_INC_PATH <single path or quoted list of paths>]\n\n#   [INSTALL_DESTINATION <installdir>\n\n#   [INSTALL_COMPONENT <installcomponent>]\n\n#   [INSTALL_PDF_NAME <installpdfname>] ]\n\n#   [DOC_TARGET <targetname>]\n\n#   [PROJECT_NUMBER <versionnumber>]\n\n#   [NO_WARNINGS]\n\n#   [NO_PDF])\n\n#\n\n# Requires these CMake modules:\n\n#  FindDoxygen\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We must run the following at \"include\" time, not at function call time,\n\n# to find the path to this module rather than the path to a calling list file\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# An optional single-file install that supports cmake older than 2.8.0\n\n# For internal use\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# An optional single-directory install that supports cmake older than 2.8.0\n\n# For internal use\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# parse arguments\n",
        "Line" : 158,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# Create a target to open the generated HTML file.\n",
        "Line" : 236,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "# Doesn't currently work on Windows, so don't bother\n",
        "Line" : 262,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# See http://www.cmake.org/pipermail/cmake/2006-August/010786.html\n\n# for info on this variable\n",
        "Line" : 289,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#MAIN_DEPENDENCY ${DOC_TARGET}\n",
        "Line" : 313,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 9
    },
    "lib/wiiuse/cmake/EnableExtraCompilerWarnings.cmake" : {
      "ObjectId" : "4c0e5c78d55c9d043bfccb2722e36dd5ddff5622",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Add flags to compile with extra warnings\n\n#\n\n#  enable_extra_compiler_warnings(<targetname>)\n\n#  globally_enable_extra_compiler_warnings() - to modify CMAKE_CXX_FLAGS, etc\n\n#    to change for all targets declared after the command, instead of per-command\n\n#\n\n#\n\n# Original Author:\n\n# 2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# At least GCC includes -Wmaybe-uninitialized in -Wall, which\n\n# unneccesarily whines about boost::optional (by it's nature\n\n# it's a \"maybe\" warning - prone to noisy false-positives)\n",
        "Line" : 54,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 2
    },
    "lib/wiiuse/cmake/EnableProfiling.cmake" : {
      "ObjectId" : "e2a340f7c83dacd3cd30e365aba4699bb96a7809",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Add flags to compile with profiling support - currently only for GCC\n\n#\n\n#  enable_profiling(<targetname>)\n\n#  globally_enable_profiling() - to modify CMAKE_CXX_FLAGS, etc\n\n#    to change for all targets declared after the command, instead of per-command\n\n#\n\n#\n\n# Original Author:\n\n# 2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO: what kind of flags are needed to profile on MSVC?\n\n#set(_flags /W4)\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "lib/wiiuse/cmake/FileCopyTargets.cmake" : {
      "ObjectId" : "13eb11a4edba5d8fe625e69eb8cda513b59283b3",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Add a target for files that just need to be copied\n\n#\n\n#  include(FileCopyTargets)\n\n#  add_file_copy_target(<target_name> <directory to copy to> <filename> [<filename>...])\n\n#    Creates a custom target that copies the files to a directory, if needed.\n\n#    Relative paths for the destination directory are considered with\n\n#    with respect to CMAKE_CURRENT_BINARY_DIR\n\n#    You can use this target in all the usual ways, including\n\n#    add_dependencies(some_other_target this_target) to specify that another\n\n#    target depends on this.\n\n#\n\n#  install_file_copy_target(<target_name> [arguments to INSTALL(PROGRAMS ...) ])\n\n#    Works just the same as INSTALL(PROGRAMS ...) because it wraps it to install\n\n#    the files you specified in add_file_copy_target\n\n#\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Produce an absolute path to the input file\n",
        "Line" : 52,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Clean up output file name\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Custom target depending on all the file copy commands\n",
        "Line" : 79,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# Get sources\n",
        "Line" : 95,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# Remove the \"fake\" file forcing build\n",
        "Line" : 98,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# Forward the call to install\n",
        "Line" : 101,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 7
    },
    "lib/wiiuse/cmake/FindALUT.cmake" : {
      "ObjectId" : "48d062d70b145e509b1453d70ec2c5f23ca22a12",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find the OpenAL ALUT library\n\n#\n\n# Users may optionally supply:\n\n#  ALUT_ROOT_DIR - a prefix to start searching.\n\n#\n\n# Cache Variables: (probably not for direct use in your scripts)\n\n#  ALUT_INCLUDE_DIR\n\n#  ALUT_LIBRARY\n\n#\n\n# Non-cache variables you might use in your CMakeLists.txt:\n\n#  ALUT_FOUND\n\n#  ALUT_INCLUDE_DIRS\n\n#  ALUT_LIBRARIES\n\n#  ALUT_WORKAROUND_INCLUDE_DIRS - add these to your include path with\n\n#   include_directories(${ALUT_WORKAROUND_INCLUDE_DIRS} ${ALUT_INCLUDE_DIRS})\n\n#   so you can always #include <AL/al.h> and #include <AL/alut.h> even on\n\n#   Mac where the paths might differ.\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Share search paths with OpenAL\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Configure ALUT\n\n###\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n# Prereq: OpenAL\n\n###\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# On Mac OS X, the ALUT headers were in the OpenAL framework until 10.4.7\n\n# If we found ALUT headers elsewhere, it's probably freealut which may\n\n# define the same symbols as the library in the framework (?)\n\n# so we might want to save/restore the CMake variable that controls searching\n\n# in frameworks\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# OpenAL is in a framework - need a workaround\n",
        "Line" : 114,
        "CharPositionInLine" : 3
      },
      "7" : {
        "Text" : "# ALUT is in the OpenAL framework - need a workaround\n",
        "Line" : 122,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 8
    },
    "lib/wiiuse/cmake/FindAdrienne.cmake" : {
      "ObjectId" : "d4f174c0cda9f1a0c6960b47ab16075f83fa10f9",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find Adrienne Electronics Corporation timecode card library\n\n#\n\n# SDK available from the manufacturer: http://www.adrielec.com/\n\n#\n\n# Cache Variables: (probably not for direct use in your scripts)\n\n#  ADRIENNE_INCLUDE_DIR\n\n#  ADRIENNE_LIBRARY\n\n#  ADRIENNE_RUNTIME_LIBRARY\n\n#  ADRIENNE_INCLUDE_FILE\n\n#\n\n# Variables you might use in your CMakeLists.txt:\n\n#  ADRIENNE_FOUND\n\n#  ADRIENNE_INCLUDE_DIRS\n\n#  ADRIENNE_LIBRARIES\n\n#  ADRIENNE_RUNTIME_LIBRARIES - the AEC_NTTC.dll file\n\n#  ADRIENNE_RUNTIME_LIBRARY_DIRS\n\n#\n\n#  ADRIENNE_INCLUDE_FILENAME - this is probably AEC_NTTC.h, but it might also\n\n#    be AECINTTC.H.\n\n#\n\n#  ADRIENNE_INCLUDE_HAS_EXTERN_C - Some (most) versions of the header already\n\n#    wrap their definitions in extern \"C\" { }, but some do not.\n\n#\n\n#  ADRIENNE_DEFINITIONS - defines a quoted ADRIENNE_INCLUDE_FILENAME as above,\n\n#    so you can write a line like #include ADRIENNE_INCLUDE_FILENAME\n\n#    Also defines ADRIENNE_BEFORE_INCLUDE and ADRIENNE_AFTER_INCLUDE to handle\n\n#    adding extern \"C\" { and } if the header file doesn't do so itself.\n\n#\n\n# Variables that might be set by the user in the gui/command line to help\n\n# find the library:\n\n#  ADRIENNE_ROOT_DIR - root of an Adrienne CD, disk, or extracted/copied contents\n\n#    thereof.\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Original Author:\n\n# 2012 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2012.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Apparently Windows only.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# from AecPCIeTC_8-12a: contains AEC_NTTC.h with extern \"C\" and three extra functions:\n\n# AEC_PCTC_OPEN_ALL, AEC_PCTC_CLOSE_ALL,  AEC_PCTC_INITIALIZE_EVENT\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# from AecPci6_02_CD - called AECINTTC.H but otherwise essentially identical to earlier versions\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# A zipped development project contains essentially the same, named AEC_NTTC.h so we'll add this in case it's unzipped.\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# from pc-ltc - called AECINTTC.H and lacks extern \"C\"\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# 64 bit code - apparently initially packaged only in the\n\n# PCIe version of their software\n",
        "Line" : 80,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# from AecPCIeTC_8-12a\n",
        "Line" : 83,
        "CharPositionInLine" : 3
      },
      "8" : {
        "Text" : "# from AecPCIeTC_8-12a\n",
        "Line" : 87,
        "CharPositionInLine" : 3
      },
      "9" : {
        "Text" : "# 32-bit code, much more prevalent.\n",
        "Line" : 90,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# from AecPCIeTC_8-12a\n",
        "Line" : 92,
        "CharPositionInLine" : 3
      },
      "11" : {
        "Text" : "# from AecPci6_02_CD\n",
        "Line" : 95,
        "CharPositionInLine" : 3
      },
      "12" : {
        "Text" : "# from pc-ltc\n",
        "Line" : 98,
        "CharPositionInLine" : 3
      },
      "13" : {
        "Text" : "# from AecPCIeTC_8-12a\n",
        "Line" : 103,
        "CharPositionInLine" : 3
      },
      "14" : {
        "Text" : "# from AecPci6_02_CD\n",
        "Line" : 106,
        "CharPositionInLine" : 3
      },
      "15" : {
        "Text" : "# from pc-ltc\n",
        "Line" : 109,
        "CharPositionInLine" : 3
      },
      "16" : {
        "Text" : "# Get include filename\n",
        "Line" : 136,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Find out if it has extern \"C\" in it.\n",
        "Line" : 142,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 18
    },
    "lib/wiiuse/cmake/FindBluez.cmake" : {
      "ObjectId" : "f4f8e0d10b5a21eedf0d1b7554e206e7c38b7667",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find Bluez\n\n#\n\n# Cache Variables: (probably not for direct use in your scripts)\n\n#  BLUEZ_INCLUDE_DIR\n\n#  BLUEZ_LIBRARY\n\n#\n\n# Non-cache variables you might use in your CMakeLists.txt:\n\n#  BLUEZ_FOUND\n\n#  BLUEZ_INCLUDE_DIRS\n\n#  BLUEZ_LIBRARIES\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Might want to look close to the library first for the includes.\n",
        "Line" : 50,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    },
    "lib/wiiuse/cmake/FindCPPDOM.cmake" : {
      "ObjectId" : "449ab73a59834033d9f017c847c61cb4876591e5",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find CPPDOM library\n\n# Optionally uses Flagpoll and FindFlagpoll.cmake\n\n#\n\n#  CPPDOM_LIBRARY_DIR, library search path\n\n#  CPPDOM_INCLUDE_DIR, include search path\n\n#  CPPDOM_LIBRARY, the library to link against\n\n#  CPPDOM_CXX_FLAGS\n\n#  CPPDOM_FOUND, If false, do not try to use this library.\n\n#\n\n# Useful configuration variables you might want to add to your cache:\n\n#  CPPDOM_ROOT_DIR - A directory prefix to search\n\n#                    (a path that contains include/ as a subdirectory)\n\n#  CPPDOM_ADDITIONAL_VERSIONS - Additional versions (outside of 0.7.8 to 1.2.0)\n\n#                               to use when constructing search names and paths\n\n#\n\n# This script will use Flagpoll, if found, to provide hints to the location\n\n# of this library, but does not use the compiler flags returned by Flagpoll\n\n# directly.\n\n#\n\n# VR Juggler requires this package, so this Find script takes that into\n\n# account when determining where to search for the desired files.\n\n# The VJ_BASE_DIR environment variable is searched (preferentially)\n\n# when searching for this package, so most sane VR Juggler build environments\n\n# should \"just work.\"  Note that you need to manually re-run CMake if you\n\n# change this environment variable, because it cannot auto-detect this change\n\n# and trigger an automatic re-run.\n\n#\n\n# Original Author:\n\n# 2009-2012 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2012.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Handle the case where a recent cppdom is supplying its own cmake config file.\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 90,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# Try flagpoll.\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Fallback to same library name but in the debug folder\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "lib/wiiuse/cmake/FindColibriApi.cmake" : {
      "ObjectId" : "0d7b4ff3657b2f5c1f72766706f687dc68196538",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find Trivisio Colibri API library\n\n#\n\n# Cache Variables:\n\n#  COLIBRIAPI_LIBRARY\n\n#  COLIBRIAPI_INCLUDE_DIR\n\n#\n\n# Non-cache variables you might use in your CMakeLists.txt:\n\n#  COLIBRIAPI_FOUND\n\n#  COLIBRIAPI_SERVER_LIBRARIES - server libraries\n\n#  COLIBRIAPI_LIBRARIES - client libraries\n\n#  COLIBRIAPI_CLIENT_DEFINITIONS - definitions if you only use the client library\n\n#  COLIBRIAPI_DEFINITIONS - Client-only definition if all we found was the client library.\n\n#  COLIBRIAPI_INCLUDE_DIRS\n\n#\n\n# COLIBRIAPI_ROOT_DIR is searched preferentially for these files\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Original Author:\n\n# 2009-2012 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2012.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# 64-bit dir: only set on win64\n",
        "Line" : 39,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# 32-bit dir: only set on win64\n",
        "Line" : 45,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "# 32-bit dir on win32, useless to us on win64\n",
        "Line" : 48,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "###\n\n# Configure COLIBRIAPI\n\n###\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "###\n\n# Dependencies\n\n###\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "lib/wiiuse/cmake/FindDCubed.cmake" : {
      "ObjectId" : "4ca33d25fe5e24780d5eab5ebe09701517990bd5",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find DCUBED library\n\n#\n\n#  DCUBED_LIBRARY_DIR, library search path\n\n#  DCUBED_INCLUDE_DIR, include search path\n\n#  DCUBED_{component}_LIBRARY, the library to link against\n\n#  DCUBED_ENVIRONMENT\n\n#  DCUBED_FOUND, If false, do not try to use this library.\n\n#\n\n# Plural versions refer to this library and its dependencies, and\n\n# are recommended to be used instead, unless you have a good reason.\n\n#\n\n# Useful configuration variables you might want to add to your cache:\n\n#  DCUBED_ROOT_DIR - A directory prefix to search\n\n#                         (a path that contains include/ as a subdirectory)\n\n#\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FIXME TODO provide more options here\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Do this by default\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n# Configure DCubed\n\n###\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#file(TO_NATIVE_PATH \"${DCUBED_ROOT_DIR}\" _d3envdir)\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "lib/wiiuse/cmake/FindDirectShow.cmake" : {
      "ObjectId" : "1fb33061a8b906cd9c63a9d325f261f1655e2e18",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find Microsoft DirectShow sample files, library, and headers.\n\n#\n\n#  DIRECTSHOW_INCLUDE_DIRS - where to find needed include file\n\n#  DIRECTSHOW_BASECLASS_DIR- Directory containing the DirectShow baseclass sample code.\n\n#  DIRECTSHOW_FOUND        - True if DirectShow found.\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Initially in VRPN - Distributed under the Boost Software License, Version 1.0.\n\n#\n\n# Almost entirely re-written by:\n\n# 2012 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2012.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Look for one of the sample files.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Begin code dedicated to finding a proper qedit.h file...\n\n###\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Checks to see if a directory has qedit.h and if that file contains ISampleGrabber.\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Check before deciding if we should make our list of possible locations.\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Compose a list of possible directories that might hold a qedit.h file.\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# This one we can grab from another SDK version.\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Check if the directory is OK after the search.\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# If we didn't find a proper qedit, manually look through the possibilities.\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "###\n\n# End qedit.h section.\n\n###\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Baseclass must be before SDK so it gets the correct refclock.h\n",
        "Line" : 181,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# QEdit include dir might be an older SDK, so put it last.\n",
        "Line" : 192,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 12
    },
    "lib/wiiuse/cmake/FindDirectX.cmake" : {
      "ObjectId" : "d77ca757ed1e250c428faa4f3a082fc134bd7e38",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find part of DirectX SDK\n\n#\n\n# Cache Variables: (probably not for direct use in your scripts)\n\n#  DIRECTX_INCLUDE_DIR\n\n#\n\n# Variables you should use in your CMakeLists.txt:\n\n#  DIRECTX_DXGUID_LIBRARY - deprecated, see below\n\n#  DIRECTX_DXERR_LIBRARY - deprecated, see http://blogs.msdn.com/b/chuckw/archive/2012/04/24/where-s-dxerr-lib.aspx\n\n#  DIRECTX_DINPUT_LIBRARY\n\n#  DIRECTX_DINPUT_INCLUDE_DIR\n\n#  DIRECTX_D3D9_LIBRARY\n\n#  DIRECTX_D3DXOF_LIBRARY\n\n#  DIRECTX_D3DX9_LIBRARIES\n\n#  DIRECTX_INCLUDE_DIRS\n\n#  DIRECTX_FOUND - if this is not true, do not attempt to use this library\n\n#\n\n# Defines these macros:\n\n#  find_directx_include - wrapper for find_path that provides PATHS, HINTS, and PATH_SUFFIXES.\n\n#  find_directx_library - wrapper for find_library that provides PATHS, HINTS, and PATH_SUFFIXES.\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#  SelectLibraryConfigurations\n\n#\n\n# Original Author:\n\n# 2012 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2012.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Until proven otherwise.\n",
        "Line" : 271,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "lib/wiiuse/cmake/FindFlagpoll.cmake" : {
      "ObjectId" : "a016656dbd4cd778d877739bd7f968abea92d19d",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find Flagpoll application, and offer package-finding services\n\n#  FLAGPOLL, the executable: if not defined, do not try to use Flagpoll.\n\n#\n\n# Useful configuration variables you might want to add to your cache:\n\n#  FLAGPOLL_ROOT_DIR  - A directory prefix to search for the app\n\n#                       (a path that contains bin/ as a subdirectory)\n\n#\n\n# VR Juggler requires this package, so this Find script takes that into\n\n# account when determining where to search for the desired files.\n\n# The VJ_BASE_DIR environment variable is searched (preferentially)\n\n# when searching for this package, so most sane VR Juggler build environments\n\n# should \"just work.\"  Note that you need to manually re-run CMake if you\n\n# change this environment variable, because it cannot auto-detect this change\n\n# and trigger an automatic re-run.\n\n#\n\n# You can use Flagpoll to provide directories to use as HINTS for find_*\n\n# These are the provided macros:\n\n#  flagpoll_get_include_dirs\n\n#  flagpoll_get_library_dirs\n\n#  flagpoll_get_library_names\n\n#  flagpoll_get_extra_libs\n\n# All take the name of the desired package, optionally NO_DEPS to pass --no-deps\n\n# to Flagpoll, and return yourpkgname_FLAGPOLL_INCLUDE_DIRS(etc. for the other\n\n# macros).\n\n#\n\n# Example usage:\n\n# \tflagpoll_get_include_dirs(vpr NO_DEPS)\n\n# \tfind_path(VPR20_INCLUDE_DIRS vpr/vpr.h\n\n#   \t  HINTS  ${vpr_FLAGPOLL_INCLUDE_DIRS})\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Flagpoll detection\n\n###\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n# Macro for internal use - shared workings between all the public macros below.\n\n###\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# If the CMakeLists that called the flagpoll macro passed NO_DEPS,\n\n# we won't return the results for dependencies\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Run flagpoll\n",
        "Line" : 77,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Remove -I and /I(or equivalent for other flags\n",
        "Line" : 89,
        "CharPositionInLine" : 3
      },
      "7" : {
        "Text" : "# Remove extra spaces\n",
        "Line" : 97,
        "CharPositionInLine" : 3
      },
      "8" : {
        "Text" : "# Make a CMake list, standardize paths, and append only what we want to our final list\n",
        "Line" : 100,
        "CharPositionInLine" : 3
      },
      "9" : {
        "Text" : "###\n\n# \"Public\" macros - to use flagpoll to give you HINTS directories when finding things\n\n###\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Passing ARGN along so if they specified NO_DEPS we actually do it.\n",
        "Line" : 118,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# Passing ARGN along so if they specified NO_DEPS we actually do it.\n",
        "Line" : 127,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# Passing ARGN along so if they specified NO_DEPS we actually do it.\n",
        "Line" : 136,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# Passing ARGN along so if they specified NO_DEPS we actually do it.\n",
        "Line" : 145,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 14
    },
    "lib/wiiuse/cmake/FindGDB.cmake" : {
      "ObjectId" : "e7caa190cb8601945750bed743be01f6affb6ee6",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find GDB\n\n#\n\n# Once done, this will define:\n\n#  GDB_FOUND - system has GDB\n\n#  GDB_COMMAND - the command to run\n\n#  GDB_VERSION - version\n\n#  GDB_HAS_RETURN_CHILD_RESULT - if the --return-child-result flag is supported\n\n#\n\n# Useful configuration variables you might want to add to your cache:\n\n#  GDB_ROOT_DIR - A directory prefix to search\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "lib/wiiuse/cmake/FindGHOST.cmake" : {
      "ObjectId" : "71f17ee5650a69f5e4865cc87591548bc7a220ed",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find Sensable GHOST library and include files\n\n#  GHOST_INCLUDE_DIRS, where to find GL/glut.h, etc.\n\n#  GHOST_LIBRARIES, the libraries to link against\n\n#  GHOST_FOUND, If false, do not try to use GLUT.\n\n#  GHOST_RUNTIME_LIBRARY_DIRS, path to DLL on Windows for runtime use.\n\n#\n\n# Requires these CMake modules:\n\n#  no additional modules required\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# .NET and newer: fake the STL headers\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# 6.0 and earlier - use GHOST-provided STL\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "lib/wiiuse/cmake/FindGLEW.cmake" : {
      "ObjectId" : "684f6f10d9daa70208f58f1cf2df3fd7d4feefe3",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindGLEW\n\n# --------\n\n#\n\n# Find the OpenGL Extension Wrangler Library (GLEW)\n\n#\n\n# IMPORTED Targets\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the :prop_tgt:`IMPORTED` target ``GLEW::GLEW``,\n\n# if GLEW has been found.\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the following variables:\n\n#\n\n# ::\n\n#\n\n#   GLEW_INCLUDE_DIRS - include directories for GLEW\n\n#   GLEW_LIBRARIES - libraries to link against GLEW\n\n#   GLEW_FOUND - true if GLEW has been found and can be used\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2012 Benjamin Eikel\n\n# Copyright 2016 Ryan Pavlik\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see below.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n#\n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO how to make this exclude arm?\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Windows, known static library.\n",
        "Line" : 106,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Windows, known dynamic library and we have both pieces\n\n# TODO might be different for mingw\n",
        "Line" : 113,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Anything else - previous behavior.\n",
        "Line" : 121,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "lib/wiiuse/cmake/FindGLUI.cmake" : {
      "ObjectId" : "51797cae4292d2957d0bec9ed33dc06b457202c3",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find GLUI (GL User Interface)\n\n# Requires OpenGL and GLUT - searches for them using find_package\n\n# Once done, this will define\n\n#\n\n#\tGLUI_INCLUDE_DIR, where to find GL/glui.h (or GLUI/glui.h on mac)\n\n#\tGLUI_LIBRARY, the libraries to link against\n\n#\tGLUI_FOUND, If false, do not try to use GLUI.\n\n#\n\n# Plural versions refer to this library and its dependencies, and\n\n# are recommended to be used instead, unless you have a good reason.\n\n#\n\n# Useful configuration variables you might want to add to your cache:\n\n#   GLUI_ROOT_DIR - A directory prefix to search\n\n#                  (usually a path that contains include/ as a subdirectory)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "lib/wiiuse/cmake/FindGLUT.cmake" : {
      "ObjectId" : "79486f07a30dca0850fb582b39c9bb8808023fc4",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find glut library and include files\n\n#  GLUT_INCLUDE_DIRS, where to find GL/glut.h, etc.\n\n#  GLUT_LIBRARIES, the libraries to link against\n\n#  GLUT_FOUND, If false, do not try to use GLUT.\n\n#  GLUT_RUNTIME_LIBRARY_DIRS, path to DLL on Windows for runtime use.\n\n#  GLUT_RUNTIME_LIBRARY, dll on Windows, for installation purposes\n\n#\n\n# Also defined, but not for general use are:\n\n#  GLUT_INCLUDE_DIR, where to find GL/glut.h, etc.\n\n#  GLUT_glut_LIBRARY = the full path to the glut library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2001-2009 Kitware, Inc.\n\n# Copyright 2009-2010 Iowa State University\n\n#                     (Author: Ryan Pavlik <abiryan@ryand.net> )\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see below.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# \n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# \n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n# \n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n# \n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#The following deprecated settings are for backwards compatibility with CMake1.4\n",
        "Line" : 125,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 4
    },
    "lib/wiiuse/cmake/FindGMTL.cmake" : {
      "ObjectId" : "bdc23e4e5458c9389b561f2a9b703b23d499106a",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find GMTL\n\n# Optionally uses Flagpoll and FindFlagpoll.cmake\n\n# Once done, this will define\n\n#\n\n#  GMTL_FOUND - system has GMTL\n\n#  GMTL_INCLUDE_DIR - the GMTL include directory\n\n#\n\n# Useful configuration variables you might want to add to your cache:\n\n#  GMTL_ROOT_DIR - A directory prefix to search\n\n#                  (a path that contains include/ as a subdirectory)\n\n#  GMTL_ADDITIONAL_VERSIONS - Additional versions (outside of 0.5.1 to 0.7.0)\n\n#                             to use when constructing search names and paths\n\n#\n\n# This script will use Flagpoll, if found, to provide hints to the location\n\n# of this library, but does not use the compiler flags returned by Flagpoll\n\n# directly.\n\n#\n\n# VR Juggler requires this package, so this Find script takes that into\n\n# account when determining where to search for the desired files.\n\n# The VJ_BASE_DIR environment variable is searched (preferentially)\n\n# when searching for this package, so most sane VR Juggler build environments\n\n# should \"just work.\"  Note that you need to manually re-run CMake if you\n\n# change this environment variable, because it cannot auto-detect this change\n\n# and trigger an automatic re-run.\n\n#\n\n# Original Author:\n\n# 2009-2012 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2012.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Try flagpoll.\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Include dir\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "lib/wiiuse/cmake/FindGPM.cmake" : {
      "ObjectId" : "ea70d8550ad5672d8afc64ed6b43e9f38a26dd19",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find GPM library\n\n#\n\n# Cache Variables: (probably not for direct use in your scripts)\n\n#  GPM_INCLUDE_DIR\n\n#  GPM_LIBRARY\n\n#\n\n# Non-cache variables you might use in your CMakeLists.txt:\n\n#  GPM_FOUND\n\n#  GPM_INCLUDE_DIRS\n\n#  GPM_LIBRARIES\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/wiiuse/cmake/FindGadgeteer12.cmake" : {
      "ObjectId" : "42c33f8e5ba1a22a1d5a36bd320fd646a5b3e633",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find Gadgeteer 1.2 library\n\n# Requires JCCL 1.2 and VPR 2.0 (thus FindJCCL12.cmake and FindVPR20.cmake)\n\n# Requires X11 if not on Mac or Windows.\n\n# Optionally uses Flagpoll and FindFlagpoll.cmake\n\n#\n\n# This library is a part of VR Juggler 2.2 - you probably want to use\n\n# find_package(VRJuggler22) instead, for an easy interface to this and\n\n# related scripts.  See FindVRJuggler22.cmake for more information.\n\n#\n\n#  GADGETEER12_LIBRARY_DIR, library search path\n\n#  GADGETEER12_INCLUDE_DIR, include search path\n\n#  GADGETEER12_LIBRARY, the library to link against\n\n#  GADGETEER12_FOUND, If false, do not try to use this library.\n\n#\n\n# Plural versions refer to this library and its dependencies, and\n\n# are recommended to be used instead, unless you have a good reason.\n\n#\n\n# Useful configuration variables you might want to add to your cache:\n\n#  GADGETEER12_ROOT_DIR - A directory prefix to search\n\n#                         (a path that contains include/ as a subdirectory)\n\n#\n\n# This script will use Flagpoll, if found, to provide hints to the location\n\n# of this library, but does not use the compiler flags returned by Flagpoll\n\n# directly.\n\n#\n\n# The VJ_BASE_DIR environment variable is also searched (preferentially)\n\n# when searching for this component, so most sane build environments should\n\n# \"just work.\"  Note that you need to manually re-run CMake if you change\n\n# this environment variable, because it cannot auto-detect this change\n\n# and trigger an automatic re-run.\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Try flagpoll.\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Dependencies\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# We need X11 if not on Mac or Windows\n",
        "Line" : 127,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# We need X11 if not on Mac or Windows\n",
        "Line" : 168,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "lib/wiiuse/cmake/FindGadgeteer20.cmake" : {
      "ObjectId" : "f6f3b44deba8507c52c07af3a059c89339df93ac",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find Gadgeteer 2.0 library\n\n# Requires JCCL 1.4 and VPR 2.2 (thus FindJCCL14.cmake and FindVPR22.cmake)\n\n# Requires X11 if not on Mac or Windows.\n\n# Optionally uses Flagpoll and FindFlagpoll.cmake\n\n#\n\n# This library is a part of VR Juggler 3.0 - you probably want to use\n\n# find_package(VRJuggler30) instead, for an easy interface to this and\n\n# related scripts.  See FindVRJuggler30.cmake for more information.\n\n#\n\n#  GADGETEER20_LIBRARY_DIR, library search path\n\n#  GADGETEER20_INCLUDE_DIR, include search path\n\n#  GADGETEER20_LIBRARY, the library to link against\n\n#  GADGETEER20_FOUND, If false, do not try to use this library.\n\n#\n\n# Plural versions refer to this library and its dependencies, and\n\n# are recommended to be used instead, unless you have a good reason.\n\n#\n\n# Useful configuration variables you might want to add to your cache:\n\n#  GADGETEER20_ROOT_DIR - A directory prefix to search\n\n#                         (a path that contains include/ as a subdirectory)\n\n#\n\n# This script will use Flagpoll, if found, to provide hints to the location\n\n# of this library, but does not use the compiler flags returned by Flagpoll\n\n# directly.\n\n#\n\n# The VJ_BASE_DIR environment variable is also searched (preferentially)\n\n# when searching for this component, so most sane build environments should\n\n# \"just work.\"  Note that you need to manually re-run CMake if you change\n\n# this environment variable, because it cannot auto-detect this change\n\n# and trigger an automatic re-run.\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n# Updated for VR Juggler 3.0 by:\n\n# Brandon Newendorp <brandon@newendorp.com>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Try flagpoll.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Dependencies\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# We need X11 if not on Mac or Windows\n",
        "Line" : 128,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# We need X11 if not on Mac or Windows\n",
        "Line" : 169,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "lib/wiiuse/cmake/FindGlove5DT.cmake" : {
      "ObjectId" : "fca626bd2145a8dc766ff5f55e87688bd5cdb204",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find Glove5DT libraries\n\n#\n\n# Cache Variables: (probably not for direct use in your scripts)\n\n#  GLOVE5DT_INCLUDE_DIR\n\n#  GLOVE5DT_LIBRARY\n\n#  GLOVE5DT_LIBRARY_RELEASE\n\n#  GLOVE5DT_LIBRARY_DEBUG\n\n#  GLOVE5DT_RUNTIME_LIBRARY_RELEASE\n\n#  GLOVE5DT_RUNTIME_LIBRARY_DEBUG\n\n#\n\n# Non-cache variables you might use in your CMakeLists.txt:\n\n#  GLOVE5DT_FOUND\n\n#  GLOVE5DT_INCLUDE_DIRS\n\n#  GLOVE5DT_LIBRARIES\n\n#  GLOVE5DT_RUNTIME_LIBRARY_DIRS\n\n#\n\n# Requires these CMake modules:\n\n#  CleanDirectoryList\n\n#  CleanLibraryList\n\n#  ListCombinations\n\n#  ProgramFilesGlob\n\n#  SelectLibraryConfigurations (included with CMake >=2.8.0)\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Configure Glove5DT\n\n###\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Data Glove 5 and 16 use these directories for includes, lib, and runtime\n",
        "Line" : 51,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# Data Glove Ultra uses this directory as the base for a dll, inc, and lib directory\n",
        "Line" : 58,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "###\n\n# First search for the Ultra (2.0) SDK\n\n###\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# As a post condition, either both LIBRARY_RELEASE and LIBRARY_DEBUG are set, or\n\n# neither is.\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "###\n\n# Ultra (2.0) SDK Runtime Libraries\n\n###\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# the library is the runtime library\n",
        "Line" : 128,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "###\n\n# Fallback to the 5/16 (1.0) SDK\n\n###\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "###\n\n# 5/16 (1.0) SDK Runtime Libraries\n\n###\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# the library is the runtime library\n",
        "Line" : 165,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "lib/wiiuse/cmake/FindHIDAPI.cmake" : {
      "ObjectId" : "646f9002629f641d03941eb4dbfd4f4a37c96e0a",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find HIDAPI library\n\n# from http://www.signal11.us/oss/hidapi/\n\n#\n\n# Cache Variables: (probably not for direct use in your scripts)\n\n#  HIDAPI_INCLUDE_DIR\n\n#  HIDAPI_LIBRARY\n\n#\n\n# Non-cache variables you might use in your CMakeLists.txt:\n\n#  HIDAPI_FOUND\n\n#  HIDAPI_INCLUDE_DIRS\n\n#  HIDAPI_LIBRARIES\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/wiiuse/cmake/FindIDLJ.cmake" : {
      "ObjectId" : "04def22126193db8442a77b1a161e63a71f65f33",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find Java's IDLJ Interface Definition Language compiler.\n\n#\n\n# Ideally used with CMake 2.8.5 or newer for Java support using FindJava.cmake\n\n# and UseJava.cmake\n\n#\n\n# Variables:\n\n#  Java_IDLJ_COMMAND, executable for idlj\n\n#  IDLJ_FOUND, If false, do not try to use this\n\n#\n\n# Function:\n\n#  java_idlj(varname idlfile [extra idlj args]) - Generates\n\n#    the Java source files from the IDL file you indicate, and\n\n#    appends filenames suitable to add to a add_jar() call to the\n\n#    variable you specified.\n\n#\n\n# Because the files generated from an IDL file are not entirely predictable,\n\n# java_idlj runs idlj in the cmake step, rather than the build step, and triggers\n\n# a CMake re-run when an idl file is modified. Already up-to-date generated source\n\n# is not re-generated, however.\n\n#\n\n# Files are generated in a directory created specifically for\n\n# the particular IDL file and the particular call, in the build directory -\n\n# there should be no worries about overwriting files or picking up too much\n\n# with the wildcard.\n\n#\n\n# You may wish to add the IDL file to your list of sources if you want it\n\n# to appear in your IDE, but it is not necessary.\n\n#\n\n# Original Author:\n\n# 2012 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2012.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Get some unique value we can use in a directory name\n\n# TODO would be better to somehow munge the full path relative to CMAKE_CURRENT_SOURCE_DIR\n\n# in case somebody has multiple idl files with the same name\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Compute directory name and stamp filename\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Force re-cmake if idl file changes\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Clean up after ourselves on make clean\n",
        "Line" : 87,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "lib/wiiuse/cmake/FindInterSense.cmake" : {
      "ObjectId" : "855c9a1d2499d1d85bd34ec5e818f5d800e8556f",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find InterSense library\n\n#\n\n# Cache Variables: (probably not for direct use in your scripts)\n\n#  INTERSENSE_INCLUDE_DIR\n\n#  INTERSENSE_ISENSEC_DIR - location of the isense.c \"import library\" substitute.\n\n#  INTERSENSE_LIBRARY\n\n#\n\n# Non-cache variables you might use in your CMakeLists.txt:\n\n#  INTERSENSE_FOUND\n\n#  INTERSENSE_INCLUDE_DIRS\n\n#  INTERSENSE_LIBRARIES\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Author:\n\n# 2013 Eric Marsh <bits@wemarsh.com>\n\n# http://wemarsh.com/\n\n# Kognitiv Neuroinformatik, Universität Bremen\n\n#\n\n# (building on Ryan Pavlik's templates)\n\n#\n\n# 2013 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Default locations, as well as registry places it records install locations,\n\n# if you installed from a (actual or downloaded) product \"CD\"\n",
        "Line" : 52,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Assume Linux, since that's the only other platform supported by this library\n",
        "Line" : 61,
        "CharPositionInLine" : 7
      },
      "3" : {
        "Text" : "# This is a weird one - no import library is supplied, and instead, at least on Windows, they use\n\n# an isense.c file to call into the DLL. Not sure if MinGW can link right against the dll in this case.\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Only MSVC on Windows theoretically needs import libraries, so...\n",
        "Line" : 91,
        "CharPositionInLine" : 7
      },
      "CommentCount" : 5
    },
    "lib/wiiuse/cmake/FindJCCL12.cmake" : {
      "ObjectId" : "a936c945c5c2576846240b4e30d238e4a685a14c",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find JCCL 1.2 library\n\n# Requires VPR 2.0 (thus FindVPR20.cmake)\n\n# Optionally uses Flagpoll and FindFlagpoll.cmake\n\n#\n\n# This library is a part of VR Juggler 2.2 - you probably want to use\n\n# find_package(VRJuggler22) instead, for an easy interface to this and\n\n# related scripts.  See FindVRJuggler22.cmake for more information.\n\n#\n\n#  JCCL12_LIBRARY_DIR, library search path\n\n#  JCCL12_INCLUDE_DIR, include search path\n\n#  JCCL12_LIBRARY, the library to link against\n\n#  JCCL12_FOUND, If false, do not try to use this library.\n\n#\n\n# Plural versions refer to this library and its dependencies, and\n\n# are recommended to be used instead, unless you have a good reason.\n\n#\n\n# Useful configuration variables you might want to add to your cache:\n\n#  JCCL12_ROOT_DIR - A directory prefix to search\n\n#                    (a path that contains include/ as a subdirectory)\n\n#\n\n# This script will use Flagpoll, if found, to provide hints to the location\n\n# of this library, but does not use the compiler flags returned by Flagpoll\n\n# directly.\n\n#\n\n# The VJ_BASE_DIR environment variable is also searched (preferentially)\n\n# when searching for this component, so most sane build environments should\n\n# \"just work.\"  Note that you need to manually re-run CMake if you change\n\n# this environment variable, because it cannot auto-detect this change\n\n# and trigger an automatic re-run.\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Try flagpoll.\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Dependency\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "lib/wiiuse/cmake/FindJCCL14.cmake" : {
      "ObjectId" : "147bb0122b2865256026615a7ac9fba3efe29cf8",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find JCCL 1.4 library\n\n# Requires VPR 2.2 (thus FindVPR22.cmake)\n\n# Optionally uses Flagpoll and FindFlagpoll.cmake\n\n#\n\n# This library is a part of VR Juggler 3.0 - you probably want to use\n\n# find_package(VRJuggler30) instead, for an easy interface to this and\n\n# related scripts.  See FindVRJuggler30.cmake for more information.\n\n#\n\n#  JCCL14_LIBRARY_DIR, library search path\n\n#  JCCL14_INCLUDE_DIR, include search path\n\n#  JCCL14_LIBRARY, the library to link against\n\n#  JCCL14_FOUND, If false, do not try to use this library.\n\n#\n\n# Plural versions refer to this library and its dependencies, and\n\n# are recommended to be used instead, unless you have a good reason.\n\n#\n\n# Useful configuration variables you might want to add to your cache:\n\n#  JCCL14_ROOT_DIR - A directory prefix to search\n\n#                    (a path that contains include/ as a subdirectory)\n\n#\n\n# This script will use Flagpoll, if found, to provide hints to the location\n\n# of this library, but does not use the compiler flags returned by Flagpoll\n\n# directly.\n\n#\n\n# The VJ_BASE_DIR environment variable is also searched (preferentially)\n\n# when searching for this component, so most sane build environments should\n\n# \"just work.\"  Note that you need to manually re-run CMake if you change\n\n# this environment variable, because it cannot auto-detect this change\n\n# and trigger an automatic re-run.\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n# Updated for VR Juggler 3.0 by:\n\n# Brandon Newendorp <brandon@newendorp.com>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Try flagpoll.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Dependency\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "lib/wiiuse/cmake/FindJsonCpp.cmake" : {
      "ObjectId" : "28fca2f9f4872fd1e1f4d67dc64826a270c6b30c",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find jsoncpp - Overarching find module\n\n# This is a over-arching find module to find older jsoncpp versions and those sadly built\n\n# without JSONCPP_WITH_CMAKE_PACKAGE=ON, as well as those built with the cmake config file.\n\n# It also wraps the different versions of the module.\n\n#\n\n# On CMake 3.0 and newer:\n\n#  JsonCpp::JsonCpp - Imported target (possibly an interface/alias) to use:\n\n#  if anything is populated, this is. If both shared and static are found, then\n\n#  this will be the static version on DLL platforms and shared on non-DLL platforms.\n\n#  JsonCpp::JsonCppShared - Imported target (possibly an interface/alias) for a\n\n#  shared library version.\n\n#  JsonCpp::JsonCppStatic - Imported target (possibly an interface/alias) for a\n\n#  static library version.\n\n#\n\n# On all CMake versions: (Note that on CMake 2.8.10 and earlier, you may need to use JSONCPP_INCLUDE_DIRS)\n\n#  JSONCPP_LIBRARY - wraps JsonCpp::JsonCpp or equiv.\n\n#  JSONCPP_LIBRARY_IS_SHARED - if we know for sure JSONCPP_LIBRARY is shared, this is true-ish. We try to \"un-set\" it if we don't know one way or another.\n\n#  JSONCPP_LIBRARY_SHARED - wraps JsonCpp::JsonCppShared or equiv.\n\n#  JSONCPP_LIBRARY_STATIC - wraps JsonCpp::JsonCppStatic or equiv.\n\n#  JSONCPP_INCLUDE_DIRS - Include directories - should (generally?) not needed if you require CMake 2.8.11+ since it handles target include directories.\n\n#\n\n#  JSONCPP_FOUND - True if JsonCpp was found.\n\n#\n\n# Original Author:\n\n# 2016 Ryan Pavlik <ryan.pavlik@gmail.com>\n\n# Incorporates work from the module contributed to VRPN under the same license:\n\n# 2011 Philippe Crassous (ENSAM ParisTech / Institut Image) p.crassous _at_ free.fr\n\n#\n\n# Copyright Philippe Crassous 2011.\n\n# Copyright Sensics, Inc. 2016.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# sets __jsoncpp_have_jsoncpplib based on whether or not we have a real imported jsoncpp_lib target.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We make interface libraries. If an actual config module made it, it would be an imported library.\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#message(STATUS \"__jsoncpp_have_jsoncpplib ${__jsoncpp_have_jsoncpplib}\")\n",
        "Line" : 54,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# Ensure that if this is TRUE later, it's because we set it.\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# See if we find a CMake config file - there is no harm in calling this more than once,\n\n# and we need to call it at least once every CMake invocation to create the original\n\n# imported targets, since those don't stick around like cache variables.\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build a string to help us figure out when to invalidate our cache variables.\n\n# start with where we found jsoncpp\n",
        "Line" : 68,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# part of the string to indicate if we found a real jsoncpp_lib (and what kind)\n",
        "Line" : 72,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# Can't do this - different runtimes, incompatible ABI, etc.\n",
        "Line" : 77,
        "CharPositionInLine" : 3
      },
      "9" : {
        "Text" : "#osvr_stash_map_config(DEBUG DEBUG RELWITHDEBINFO RELEASE MINSIZEREL NONE)\n",
        "Line" : 81,
        "CharPositionInLine" : 3
      },
      "10" : {
        "Text" : "# Appending, just in case using project or upstream fixes this.\n",
        "Line" : 83,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# part of the string to indicate if we found jsoncpp_lib_static\n",
        "Line" : 98,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# If we found something, and it's not the exact same as what we've found before...\n\n# NOTE: The contents of this \"if\" block update only (internal) cache variables!\n\n# (since this will only get run the first CMake pass that finds jsoncpp or that finds a different/updated install)\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#message(\"Updating jsoncpp cache variables! ${__jsoncpp_info_string}\")\n",
        "Line" : 112,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# if(__jsoncpp_have_jsoncpplib) is equivalent to if(TARGET jsoncpp_lib) except it excludes our\n\n# \"invented\" jsoncpp_lib interface targets, made for convenience purposes after this block.\n",
        "Line" : 120,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "# A veritable cache of riches - we have both shared and static!\n",
        "Line" : 125,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# DLL platforms: static library should be default\n",
        "Line" : 129,
        "CharPositionInLine" : 3
      },
      "17" : {
        "Text" : "# Other platforms - might require PIC to be linked into shared libraries, so safest to prefer shared.\n",
        "Line" : 133,
        "CharPositionInLine" : 3
      },
      "18" : {
        "Text" : "# Well, only one variant, but we know for sure that it's static.\n",
        "Line" : 139,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# We were able to figure out the mystery library is static!\n",
        "Line" : 145,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# We were able to figure out the mystery library is shared!\n",
        "Line" : 151,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# One variant, and we have no idea if this is just an old version or if\n\n# this is shared based on the target name alone. Hmm.\n",
        "Line" : 157,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# Now, we need include directories. Can't just limit this to old CMakes, since\n\n# new CMakes might be used to build projects designed to support older ones.\n",
        "Line" : 162,
        "CharPositionInLine" : 1
      },
      "23" : {
        "Text" : "# As a convenience...\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# OK, so we couldn't get it from the target... maybe we can figure it out from jsoncpp_DIR.\n",
        "Line" : 186,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# take off the jsoncpp component\n",
        "Line" : 188,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# take off the cmake component\n",
        "Line" : 191,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# take off the lib component\n",
        "Line" : 194,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# take off one more component in case of multiarch lib\n",
        "Line" : 197,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# Now, search.\n",
        "Line" : 201,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# Note - this does not set it in the cache, in case we find it better at some point in the future!\n",
        "Line" : 209,
        "CharPositionInLine" : 3
      },
      "31" : {
        "Text" : "# Create any missing namespaced targets from the config module.\n",
        "Line" : 222,
        "CharPositionInLine" : 1
      },
      "32" : {
        "Text" : "# Hide the stuff we didn't, and no longer, need.\n",
        "Line" : 245,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# Still nothing after looking for the config file: must go \"old-school\"\n",
        "Line" : 271,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Invoke pkgconfig for hints\n",
        "Line" : 273,
        "CharPositionInLine" : 1
      },
      "35" : {
        "Text" : "# OK, if pkg-config wasn't able to give us a library name suggestion, then we may\n\n# have to resort to some intense old logic.\n",
        "Line" : 291,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# bit of a generalization but close...\n",
        "Line" : 298,
        "CharPositionInLine" : 15
      },
      "37" : {
        "Text" : "# end of old logic\n",
        "Line" : 339,
        "CharPositionInLine" : 9
      },
      "38" : {
        "Text" : "# Actually go looking.\n",
        "Line" : 341,
        "CharPositionInLine" : 1
      },
      "39" : {
        "Text" : "# We already know that the target doesn't exist, let's make it.\n\n# TODO don't know why we get errors like:\n\n# error: 'JsonCpp::JsonCpp-NOTFOUND', needed by 'bin/osvr_json_to_c', missing and no known rule to make it\n\n# when we do the imported target commented out below. So, instead, we make an interface\n\n# target with an alias. Hmm.\n",
        "Line" : 360,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "#add_library(JsonCpp::JsonCpp UNKNOWN IMPORTED)\n\n#set_target_properties(JsonCpp::JsonCpp PROPERTIES\n\n#\tIMPORTED_LOCATION \"${JsonCpp_LIBRARY}\"\n\n#\tINTERFACE_INCLUDE_DIRECTORIES \"${JsonCpp_INCLUDE_DIR}\"\n\n#\tIMPORTED_LINK_INTERFACE_LANGUAGES \"CXX\")\n",
        "Line" : 366,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 41
    },
    "lib/wiiuse/cmake/FindJtTk.cmake" : {
      "ObjectId" : "9ef2141576026395fc2ca7911c4bcdec7e21823a",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find JTTK library\n\n#\n\n#  JTTK_LIBRARY_DIRS, library search path\n\n#  JTTK_INCLUDE_DIRS, include search path\n\n#  JTTK_{component}_LIBRARY, the library to link against\n\n#  JTTK_ENVIRONMENT, environment variables to set\n\n#  JTTK_RUNTIME_LIBRARY_DIRS\n\n#  JTTK_FOUND, If false, do not try to use this library.\n\n#\n\n# If you have license issues, you might run this command on each JtTk-using target:\n\n#  jttk_stamp_binary(<targetname>)\n\n#\n\n# Plural versions refer to this library and its dependencies, and\n\n# are recommended to be used instead, unless you have a good reason.\n\n#\n\n# Useful configuration variables you might want to add to your cache:\n\n#  JTTK_ROOT_DIR - A directory prefix to search\n\n#                         (a path that contains include/ as a subdirectory)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#message(STATUS \"Found JtTk version ${ver}, does not meet requirements\")\n",
        "Line" : 188,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "###\n\n# Configure JtTk\n\n###\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n# Find the link library\n\n###\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###\n\n# Prepare for the rest of our search based off of where we found the link library\n\n###\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Grab JtTk version\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Grab JT version\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Setup dev path\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "###\n\n# Find the headers\n\n###\n",
        "Line" : 261,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "###\n\n# Find the DLL's\n\n###\n",
        "Line" : 270,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# Find the versioned DLL's\n",
        "Line" : 274,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# Find the unversioned DLL's and the matching JtTk dll\n",
        "Line" : 285,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# Find the unversioned libs\n",
        "Line" : 312,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# Find stamper\n\n#list(APPEND _deps_check JTTK_KEYS)\n",
        "Line" : 324,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "#list(APPEND _deps_check JTTK_INSTALL_LOG)\n",
        "Line" : 346,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Find dependencies\n",
        "Line" : 387,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 416,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "lib/wiiuse/cmake/FindLAPACKLibs.cmake" : {
      "ObjectId" : "51d0c41dd2a630f691405dd1a7caa4ac3ff347aa",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find LAPACK and BLAS libraries\n\n# Once done, this will define\n\n#  LAPACKLIBS_LIBRARIES, all libraries to link against\n\n#  LAPACKLIBS_FOUND, If false, do not try to use LAPACK library features.\n\n#\n\n# Users may wish to set:\n\n#  LAPACKLIBS_ROOT_DIR, location to start searching for LAPACK libraries\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Tested to work with the files from http://www.fi.muni.cz/~xsvobod2/misc/lapack/\n\n# You might also see http://icl.cs.utk.edu/lapack-for-windows/clapack/index.html for\n\n# the libraries and headers.\n",
        "Line" : 41,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Good luck!\n",
        "Line" : 45,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# All other Linux/Unix should have lapack without a fuss\n",
        "Line" : 74,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "lib/wiiuse/cmake/FindLibFreespace.cmake" : {
      "ObjectId" : "b83e837bb3f43a242235d920ca060d5f056eb0c8",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find Hillcrest Labs' libfreespace library\n\n#\n\n# Cache Variables: (probably not for direct use in your scripts)\n\n#  LIBFREESPACE_INCLUDE_DIR\n\n#  LIBFREESPACE_LIBRARY\n\n#\n\n# Non-cache variables you might use in your CMakeLists.txt:\n\n#  LIBFREESPACE_FOUND\n\n#  LIBFREESPACE_INCLUDE_DIRS\n\n#  LIBFREESPACE_LIBRARIES\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Original Author:\n\n# 2014 Ryan Pavlik <ryan@sensics.com> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n#\n\n# Copyright Sensics, Inc. 2014.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/wiiuse/cmake/FindLibusb1.cmake" : {
      "ObjectId" : "b161c81e04fcfb12d0d278feecdfda910704991a",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find libusb-1 library\n\n#\n\n# Cache Variables: (probably not for direct use in your scripts)\n\n#  LIBUSB1_LIBRARY\n\n#  LIBUSB1_INCLUDE_DIR\n\n#\n\n# Non-cache variables you should use in your CMakeLists.txt:\n\n#  LIBUSB1_LIBRARIES\n\n#  LIBUSB1_INCLUDE_DIRS\n\n#  LIBUSB1_FOUND - if this is not true, do not attempt to use this library\n\n#\n\n# Requires these CMake modules:\n\n#  ProgramFilesGlob\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/wiiuse/cmake/FindLuabind.cmake" : {
      "ObjectId" : "29062d3af883ff56b2ab78f324775e385c0dcc35",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find Luabind\n\n#\n\n# Users may optionally supply:\n\n#  LUABIND_ROOT_DIR - a prefix to start searching\n\n#\n\n# Non-cache variables you might use in your CMakeLists.txt:\n\n#  LUABIND_FOUND\n\n#  LUABIND_DEFINITIONS\n\n#  LUABIND_INCLUDE_DIRS\n\n#  LUABIND_LIBRARIES\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Dependencies\n\n###\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Configure Luabind\n\n###\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "lib/wiiuse/cmake/FindLyX.cmake" : {
      "ObjectId" : "7ec33b78de412d0531dd9dca5d52a51310d495a2",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find LyX, and define some custom commands to export from LyX\n\n#\n\n# Once done, this will define:\n\n#  LYX_FOUND - system has LyX\n\n#  LYX_COMMAND - the command to run\n\n#\n\n# and the following new functions:\n\n#  lyx_export(<format> <extension-without-leading-dot> <output-variable>\n\n#    INPUT <lyx-file> [...]\n\n#    [OUTPUT_TO_SOURCE_DIR]\n\n#    [ EXTRA_DEPS <bibtex-or-other-file> [...] ]) - the base function\n\n#\n\n# These shortcut functions all have the same syntax:\n\n#  lyx_export_to_XXX(<output-variable>\n\n#    INPUT <lyx-file> [...]\n\n#    [OUTPUT_TO_SOURCE_DIR]\n\n#    [ EXTRA_DEPS <bibtex-or-other-file> [...] ])\n\n#\n\n# Available shortcuts:\n\n#  lyx_export_to_docbook_xml\n\n#  lyx_export_to_docbook\n\n#  lyx_export_to_pdf\n\n#  lyx_export_to_pdf_via_pdflatex\n\n#  lyx_export_to_pdf_via_dvi\n\n#\n\n# Useful configuration variables you might want to add to your cache:\n\n#  LYX_ROOT_DIR - A directory prefix to search\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#COMMAND ${LYX_COMMAND} \"${_file}\" --export ${_format}\n",
        "Line" : 105,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "lib/wiiuse/cmake/FindMacHID.cmake" : {
      "ObjectId" : "d96baceb597b82cb0effab01b17c27d780fb8756",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find Mac HID frameworks\n\n#\n\n# Cache Variables: (probably not for direct use in your scripts)\n\n#  MACHID_CoreFoundation_LIBRARY\n\n#  MACHID_CoreFoundation_INCLUDE_DIR\n\n#  MACHID_IOKit_LIBRARY\n\n#  MACHID_IOKit_INCLUDE_DIR\n\n#  MACOSX_HID_UINT32T  (from CheckMacHIDAPI)\n\n#\n\n# Non-cache variables you should use in your CMakeLists.txt:\n\n#  MACHID_DEFINITIONS\n\n#  MACHID_LIBRARIES\n\n#  MACHID_INCLUDE_DIRS\n\n#  MACHID_FOUND - if this is not true, do not attempt to use this library\n\n#\n\n# Requires these CMake modules:\n\n#  CheckMacHIDAPI\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/wiiuse/cmake/FindMarkdown.cmake" : {
      "ObjectId" : "63b9305323e7568638da2a864273955191a6bbf0",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find Markdown tool\n\n#\n\n# Cache Variables:\n\n#  MARKDOWN_EXECUTABLE\n\n#\n\n# Non-cache variables you might use in your CMakeLists.txt:\n\n#  MARKDOWN_FOUND\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Original Author:\n\n# 2011 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2011.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If we have a custom path, look there first.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "lib/wiiuse/cmake/FindOVR.cmake" : {
      "ObjectId" : "fa1473f7cea3a341d90d04528e91085d7e8498d1",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find Oculus VR's SDK for Oculus Rift support\n\n#\n\n# Cache Variables: (probably not for direct use in your scripts)\n\n#  OVR_INCLUDE_DIR\n\n#  OVR_SOURCE_DIR\n\n#  OVR_LIBRARY\n\n#\n\n# Non-cache variables you might use in your CMakeLists.txt:\n\n#  OVR_FOUND\n\n#  OVR_INCLUDE_DIRS\n\n#  OVR_LIBRARIES\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Original Author:\n\n# 2014 Kevin M. Godby <kevin@godby.org>\n\n#\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The OVR library is built in a directory tree that varies based on platform,\n\n# architecture, and compiler.\n\n#\n\n# The libraries live in one of the following locations:\n\n#\n\n# Lib/Win32/VS2012/libovrd.lib\n\n# Lib/Win32/VS2012/libovr.lib\n\n# Lib/Win32/VS2013/libovrd.lib\n\n# Lib/Win32/VS2013/libovr.lib\n\n# Lib/Win32/VS2010/libovrd.lib\n\n# Lib/Win32/VS2010/libovr.lib\n\n# Lib/x64/VS2012/libovr64d.lib\n\n# Lib/x64/VS2012/libovr64.lib\n\n# Lib/x64/VS2013/libovr64d.lib\n\n# Lib/x64/VS2013/libovr64.lib\n\n# Lib/x64/VS2010/libovr64d.lib\n\n# Lib/x64/VS2010/libovr64.lib\n\n# Lib/Linux/Release/x86_64/libovr.a\n\n# Lib/Linux/Debug/x86_64/libovr.a\n\n# Lib/Linux/Release/i386/libovr.a\n\n# Lib/Linux/Debug/i386/libovr.a\n\n# Lib/Mac/Release/libovr.a\n\n# Lib/Mac/Debug/libovr.a\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Test compiler\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Microsoft Visual Studio 2010\n",
        "Line" : 56,
        "CharPositionInLine" : 11
      },
      "4" : {
        "Text" : "# Microsoft Visual Studio 2012\n",
        "Line" : 58,
        "CharPositionInLine" : 15
      },
      "5" : {
        "Text" : "# Microsoft Visual Studio 2013\n",
        "Line" : 60,
        "CharPositionInLine" : 15
      },
      "6" : {
        "Text" : "# Test 32/64 bits\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Test platform\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# needs build type and arch\n",
        "Line" : 82,
        "CharPositionInLine" : 48
      },
      "9" : {
        "Text" : "# needs build type\n",
        "Line" : 84,
        "CharPositionInLine" : 46
      },
      "10" : {
        "Text" : "# Dependencies\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Linux-only dependencies\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#find_library(OVR_WINMM_LIBRARY winmm)\n\n#find_library(OVR_WS2_LIBRARY ws2_32)\n",
        "Line" : 194,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "#${OVR_WINMM_LIBRARY} ${OVR_WS2_LIBRARY})\n",
        "Line" : 196,
        "CharPositionInLine" : 52
      },
      "CommentCount" : 14
    },
    "lib/wiiuse/cmake/FindOpenCV1.cmake" : {
      "ObjectId" : "148af568f17817ff5cd7dd055ff9d8f4b3d2fe5c",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find OpenCV library installation\n\n# See http://sourceforge.net/projects/opencvlibrary/\n\n#\n\n# The following variable is optionally searched for defaults\n\n#  OPENCV_ROOT_DIR:            Base directory of OpenCv tree to use.\n\n#\n\n#  OPENCV_NEW_LIBRARY_NAMES   Set to YES before searching if you want to\n\n# The following are set after configuration is done:\n\n#  OPENCV_FOUND\n\n#  OPENCV_INCLUDE_DIRS\n\n#  OPENCV_LIBRARIES\n\n#\n\n# 2004/05 Jan Woetzel, Friso, Daniel Grest\n\n# 2006/01 complete rewrite by Jan Woetzel\n\n# 2006/09 2nd rewrite introducing ROOT_DIR and PATH_SUFFIXES\n\n#   to handle multiple installed versions gracefully by Jan Woetzel\n\n# 2010/02 Ryan Pavlik (Iowa State University) - partial rewrite to standardize\n\n#\n\n# tested with:\n\n# -OpenCV 0.97 (beta5a):  MSVS 7.1, gcc 3.3, gcc 4.1\n\n# -OpenCV 0.99 (1.0rc1):  MSVS 7.1\n\n#\n\n# www.mip.informatik.uni-kiel.de/~jw\n\n# academic.cleardefinition.com\n\n# --------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# typical root dirs of installations, exactly one of them is used\n",
        "Line" : 40,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "#\n\n# select exactly ONE OPENCV base directory/tree\n\n# to avoid mixing different version headers and libs\n\n#\n",
        "Line" : 43,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# header include dir suffixes appended to OPENCV_BASE_DIR\n",
        "Line" : 62,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# library linkdir suffixes appended to OPENCV_BASE_DIR\n",
        "Line" : 75,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "#\n\n# find incdir for each lib\n\n#\n",
        "Line" : 83,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "#\n\n# find sbsolute path to all libraries\n\n# some are optionally, some may not exist on Linux\n\n#\n",
        "Line" : 127,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# New-style library names\n",
        "Line" : 145,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# cv components with header and library if COMPONENTS unspecified\n",
        "Line" : 156,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# default\n",
        "Line" : 158,
        "CharPositionInLine" : 3
      },
      "10" : {
        "Text" : "# WIN32 only actually\n",
        "Line" : 161,
        "CharPositionInLine" : 41
      },
      "11" : {
        "Text" : "# TODO: clean up/convert to new components\n",
        "Line" : 164,
        "CharPositionInLine" : 3
      },
      "12" : {
        "Text" : "# Old-style lib names\n",
        "Line" : 169,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# default\n",
        "Line" : 171,
        "CharPositionInLine" : 3
      },
      "14" : {
        "Text" : "# WIN32 only actually\n",
        "Line" : 174,
        "CharPositionInLine" : 41
      },
      "15" : {
        "Text" : "#\n\n# Logic selecting required libs and headers\n\n#\n",
        "Line" : 191,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "#message(STATUS \"Component requested: ${component}\")\n",
        "Line" : 199,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# only good if header and library both found\n",
        "Line" : 201,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 216,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 19
    },
    "lib/wiiuse/cmake/FindOpenHaptics.cmake" : {
      "ObjectId" : "0e4958c5f5ccbfac3a50b0676f1a4c32b2077b2b",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find OpenHaptics libraries\n\n#\n\n# Cache Variables: (probably not for direct use in your scripts)\n\n#  HDAPI_INCLUDE_DIR\n\n#  HDAPI_LIBRARY\n\n#  HDAPI_LIBRARY_RELEASE\n\n#  HDAPI_LIBRARY_DEBUG\n\n#  HDAPI_HDU_INCLUDE_DIR\n\n#  HDAPI_HDU_LIBRARY\n\n#  HDAPI_HDU_LIBRARY_RELEASE\n\n#  HDAPI_HDU_LIBRARY_DEBUG\n\n#  HLAPI_INCLUDE_DIR\n\n#  HLAPI_LIBRARY\n\n#  HLAPI_LIBRARY_RELEASE\n\n#  HLAPI_LIBRARY_DEBUG\n\n#  HLAPI_HLU_INCLUDE_DIR\n\n#  HLAPI_HLU_LIBRARY\n\n#  HLAPI_HLU_LIBRARY_RELEASE\n\n#  HLAPI_HLU_LIBRARY_DEBUG\n\n#\n\n# Non-cache variables you might use in your CMakeLists.txt:\n\n#  OPENHAPTICS_FOUND\n\n#  HDAPI_INCLUDE_DIRS\n\n#  HDAPI_LIBRARIES\n\n#  HDAPI_HDU_INCLUDE_DIRS\n\n#  HDAPI_HDU_LIBRARIES\n\n#  HLAPI_INCLUDE_DIRS\n\n#  HLAPI_LIBRARIES\n\n#  HLAPI_HLU_INCLUDE_DIRS\n\n#  HLAPI_HLU_LIBRARIES\n\n#  OPENHAPTICS_LIBRARIES - includes HD, HDU, HL, HLU\n\n#  OPENHAPTICS_RUNTIME_LIBRARY_DIRS\n\n#  OPENHAPTICS_ENVIRONMENT\n\n#  OPENHAPTICS_LIBRARY_DIRS\n\n#  OPENHAPTICS_INCLUDE_DIRS\n\n#\n\n# Requires these CMake modules:\n\n#  CleanDirectoryList\n\n#  CleanLibraryList\n\n#  ListCombinations\n\n#  ProgramFilesGlob\n\n#  SelectLibraryConfigurations (included with CMake >=2.8.0)\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#  CMake 2.6.3 (uses \"unset\")\n\n#\n\n# Original Author:\n\n# 2009-2012 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Configure OpenHaptics\n\n###\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# 64-bit\n",
        "Line" : 106,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# 32-bit\n",
        "Line" : 120,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "###\n\n# HDAPI: HD\n\n###\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "###\n\n# HDAPI: HDU\n\n###\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Fallback\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "###\n\n# HLAPI: HL\n\n###\n",
        "Line" : 268,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "###\n\n# HLAPI: HLU\n\n###\n",
        "Line" : 297,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# fallback\n",
        "Line" : 324,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "###\n\n# Add dependencies: Libraries\n\n###\n",
        "Line" : 365,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "###\n\n# Add dependencies: Include dirs\n\n###\n",
        "Line" : 388,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 412,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Recurse into the nested targets subdirectory if needed\n",
        "Line" : 428,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 14
    },
    "lib/wiiuse/cmake/FindParasolid.cmake" : {
      "ObjectId" : "17636d7028c18a908e9602fbcb160c014c73b5c2",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find PARASOLID library\n\n# Important note: If you are also using JtTk, do your\n\n#  find_package(JtTk)\n\n# first, to avoid runtime PK_* errors!\n\n#\n\n#  PARASOLID_LIBRARY_DIR, library search path\n\n#  PARASOLID_INCLUDE_DIR, include search path\n\n#  PARASOLID_{component}_LIBRARY, the library to link against\n\n#  PARASOLID_FOUND, If false, do not try to use this library.\n\n#\n\n# Plural versions refer to this library and its dependencies, and\n\n# are recommended to be used instead, unless you have a good reason.\n\n#\n\n# Requires these CMake modules:\n\n#  CheckVersion\n\n#  ListCombinations\n\n#  ProgramFilesGlob\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Do this by default\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Configure Parasolid\n\n###\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# 64-bit\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# 32-bit\n",
        "Line" : 73,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# 64-bit\n",
        "Line" : 88,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# 32-bit\n",
        "Line" : 96,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "###\n\n# Find the link library\n\n###\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Don't add this library to the default list of libraries\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "###\n\n# Prepare for the rest of our search based off of where we found the link library\n\n###\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Setup include search path\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "###\n\n# Find the headers\n\n###\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "###\n\n# Find remaining libs\n\n###\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Default libs\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Non-default libs\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "###\n\n# Find the DLL's\n\n###\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# If we have JtTk, must use the dll there or we'll have weird runtime errors\n\n# in parasolid\n",
        "Line" : 249,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "# Find the unversioned DLL\n",
        "Line" : 253,
        "CharPositionInLine" : 1
      },
      "18" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 269,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Recurse into the nested targets subdirectory if needed\n",
        "Line" : 280,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 20
    },
    "lib/wiiuse/cmake/FindPerformer.cmake" : {
      "ObjectId" : "db2b9c5cc3a410b7d2644325b4b2325747e18b94",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find the OpenGL Performer library\n\n#\n\n# Users may optionally supply:\n\n#  PERFORMER_ROOT_DIR - a prefix to start searching.\n\n#\n\n# Cache Variables: (probably not for direct use in your scripts)\n\n#  PERFORMER_INCLUDE_DIR\n\n#  PERFORMER_LIBRARY\n\n#  PERFORMER_PFUI_LIBRARY - doesn't get included in PERFORMER_LIBRARIES\n\n#  PERFORMER_PFDU_UTIL_LIBRARY - doesn't get included in PERFORMER_LIBRARIES\n\n#  PERFORMER_PFV_LIBRARY - doesn't get included in PERFORMER_LIBRARIES\n\n#\n\n# Non-cache variables you might use in your CMakeLists.txt:\n\n#  PERFORMER_FOUND\n\n#  PERFORMER_INCLUDE_DIRS\n\n#  PERFORMER_LIBRARIES\n\n#  PERFORMER_RUNTIME_LIBRARY_DIRS\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Original Author:\n\n# 2012 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2012.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Prereq: OpenGL\n\n###\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "lib/wiiuse/cmake/FindPerlModules.cmake" : {
      "ObjectId" : "f09ff851d1191c6b8fff26126ea24334794a51b4",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find perl modules, passed as COMPONENTS\n\n#\n\n# Non-cache variable you might use in your CMakeLists.txt:\n\n#  PERLMODULES_FOUND\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Original Author:\n\n# 2012 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2012.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/wiiuse/cmake/FindQVRPN.cmake" : {
      "ObjectId" : "37e1af2b990fe5d59007113d87bfbb0f86ddc795",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find QVRPN library\n\n#\n\n# Of course, you may also just choose to make QVRPN a submodule of your\n\n# project itself.\n\n#\n\n# Cache Variables:\n\n#  QVRPN_LIBRARY\n\n#  QVRPN_INCLUDE_DIR\n\n#\n\n# Non-cache variables you might use in your CMakeLists.txt:\n\n#  QVRPN_FOUND\n\n#  QVRPN_LIBRARIES\n\n#  QVRPN_INCLUDE_DIRS\n\n#\n\n# QVRPN_ROOT_DIR is searched preferentially for these files\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Refactored from FindVRPN.cmake by:\n\n# Juan Sebastian Casallas <casallas@iastate.edu>\n\n#\n\n# FindVRPN.cmake Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2012.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Configure QVRPN\n\n###\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "lib/wiiuse/cmake/FindSDL2.cmake" : {
      "ObjectId" : "f69c68a139f1ad5d2da329411026261062330a66",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find SDL2\n\n# Find the SDL2 headers and libraries\n\n#\n\n#  SDL2::SDL2 - Imported target to use for building a library\n\n#  SDL2::SDL2main - Imported interface target to use if you want SDL and SDLmain.\n\n#  SDL2_FOUND - True if SDL2 was found.\n\n#  SDL2_DYNAMIC - If we found a DLL version of SDL (meaning you might want to copy a DLL from SDL2::SDL2)\n\n#\n\n# Original Author:\n\n# 2015 Ryan Pavlik <ryan.pavlik@gmail.com> <abiryan@ryand.net>\n\n#\n\n# Copyright Sensics, Inc. 2015.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set up architectures (for windows) and prefixes (for mingw builds)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Invoke pkgconfig for hints\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Some special-casing if we've found/been given a framework.\n\n# Handles whether we're given the library inside the framework or the framework itself.\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Move up in the directory tree as required to get the framework directory.\n",
        "Line" : 85,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# If we found a framework, do a search for the header ahead of time that will be more likely to get the framework header.\n",
        "Line" : 91,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# this file was introduced with SDL2\n",
        "Line" : 94,
        "CharPositionInLine" : 16
      },
      "7" : {
        "Text" : "# For some reason we couldn't get the framework directory itself.\n\n# Shouldn't happen, but might if something is weird.\n",
        "Line" : 98,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# this file was introduced with SDL2\n",
        "Line" : 106,
        "CharPositionInLine" : 14
      },
      "9" : {
        "Text" : "# Restore things the way they used to be.\n",
        "Line" : 145,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set QUATLIB_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Create SDL2::SDL2\n",
        "Line" : 160,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Handle the case that SDL2 is a framework and we were able to decompose it above.\n",
        "Line" : 173,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Handle the case that SDL2 is a framework and SDL_LIBRARY is just the framework itself.\n",
        "Line" : 177,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# This takes the basename of the framework, without the extension,\n\n# and sets it (as a child of the framework) as the imported location for the target.\n\n# This is the library symlink inside of the framework.\n",
        "Line" : 179,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Handle non-frameworks (including non-Mac), as well as the case that we're given the library inside of the framework\n",
        "Line" : 185,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Need Cocoa here, is always a framework\n",
        "Line" : 196,
        "CharPositionInLine" : 3
      },
      "17" : {
        "Text" : "# Compute what to do with SDL2main\n",
        "Line" : 206,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# MinGW requires some additional libraries to appear earlier in the link line.\n",
        "Line" : 217,
        "CharPositionInLine" : 3
      },
      "19" : {
        "Text" : "# Use pkgconfig-suggested extra libraries if available.\n",
        "Line" : 219,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# fall back to extra libraries specified in pkg-config in\n\n# an official binary distro of SDL2 for MinGW I downloaded\n",
        "Line" : 223,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 21
    },
    "lib/wiiuse/cmake/FindSonix12.cmake" : {
      "ObjectId" : "0ab1599611a6d2c0960ecc1f2fc53b4c6b89a794",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find Sonix 1.2 library\n\n# Requires VPR 2.0 and GMTL (thus FindVPR20.cmake and FindGMTL.cmake)\n\n# Optionally uses Flagpoll and FindFlagpoll.cmake\n\n#\n\n# This library is a part of VR Juggler 2.2 - you probably want to use\n\n# find_package(VRJuggler22) instead, for an easy interface to this and\n\n# related scripts.  See FindVRJuggler22.cmake for more information.\n\n#\n\n#  SONIX12_LIBRARY_DIR, library search path\n\n#  SONIX12_INCLUDE_DIR, include search path\n\n#  SONIX12_LIBRARY, the library to link against\n\n#  SONIX12_FOUND, If false, do not try to use this library.\n\n#\n\n# Plural versions refer to this library and its dependencies, and\n\n# are recommended to be used instead, unless you have a good reason.\n\n#\n\n# Useful configuration variables you might want to add to your cache:\n\n#  SONIX12_ROOT_DIR - A directory prefix to search\n\n#                     (a path that contains include/ as a subdirectory)\n\n#\n\n# This script will use Flagpoll, if found, to provide hints to the location\n\n# of this library, but does not use the compiler flags returned by Flagpoll\n\n# directly.\n\n#\n\n# The VJ_BASE_DIR environment variable is also searched (preferentially)\n\n# when searching for this component, so most sane build environments should\n\n# \"just work.\"  Note that you need to manually re-run CMake if you change\n\n# this environment variable, because it cannot auto-detect this change\n\n# and trigger an automatic re-run.\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Try flagpoll.\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Dependencies\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "lib/wiiuse/cmake/FindSonix14.cmake" : {
      "ObjectId" : "692216fdfe842d9d04effc5850c44fe0971207eb",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find Sonix 1.4 library\n\n# Requires VPR 2.2 and GMTL (thus FindVPR22.cmake and FindGMTL.cmake)\n\n# Optionally uses Flagpoll and FindFlagpoll.cmake\n\n#\n\n# This library is a part of VR Juggler 3.0 - you probably want to use\n\n# find_package(VRJuggler30) instead, for an easy interface to this and\n\n# related scripts.  See FindVRJuggler30.cmake for more information.\n\n#\n\n#  SONIX14_LIBRARY_DIR, library search path\n\n#  SONIX14_INCLUDE_DIR, include search path\n\n#  SONIX14_LIBRARY, the library to link against\n\n#  SONIX14_FOUND, If false, do not try to use this library.\n\n#\n\n# Plural versions refer to this library and its dependencies, and\n\n# are recommended to be used instead, unless you have a good reason.\n\n#\n\n# Useful configuration variables you might want to add to your cache:\n\n#  SONIX14_ROOT_DIR - A directory prefix to search\n\n#                     (a path that contains include/ as a subdirectory)\n\n#\n\n# This script will use Flagpoll, if found, to provide hints to the location\n\n# of this library, but does not use the compiler flags returned by Flagpoll\n\n# directly.\n\n#\n\n# The VJ_BASE_DIR environment variable is also searched (preferentially)\n\n# when searching for this component, so most sane build environments should\n\n# \"just work.\"  Note that you need to manually re-run CMake if you change\n\n# this environment variable, because it cannot auto-detect this change\n\n# and trigger an automatic re-run.\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n# Updated for VR Juggler 3.0 by:\n\n# Brandon Newendorp <brandon@newendorp.com>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Try flagpoll.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Dependencies\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "lib/wiiuse/cmake/FindTR1.cmake" : {
      "ObjectId" : "82bb1db50e6b4bce37757ac2d4cec0a4b36d8d1a",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find C++ TR1 headers and libraries\n\n# Once done, this will define\n\n#\n\n#  TR1_USE_FILE, which you may \"include\" in your CMake file to be able\n\n#   to use TR1 features transparently\n\n#  TR1_INCLUDE_DIRS, any directories needed to access TR1 headers\n\n#  TR1_LIBRARY_DIRS, any directories needed to access (auto-link) TR1 libraries\n\n#  TR1_FOUND, If false, do not try to use TR1 features.\n\n#\n\n# If TR1 features are not built-in, we will try to use Boost to\n\n# substitute for them.\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If we were sought quietly, any dependencies should be quiet as well\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Earlier than VS 2010\n\n# Missing stdint.h/cstdint\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Earlier than VS 2008\n\n# Missing all of TR1\n\n# (The feature pack or SP1 is required for VS2008 TR support)\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "lib/wiiuse/cmake/FindTooN.cmake" : {
      "ObjectId" : "1dda1de68876f694d44b979eaf87ebdd26893cc5",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find TooN headers\n\n#\n\n# Users may optionally supply:\n\n#  TOON_ROOT_DIR - a prefix to start searching for the toon headers.\n\n#\n\n# Cache Variables: (probably not for direct use in your scripts)\n\n#  TOON_INCLUDE_DIR\n\n#\n\n# Non-cache variables you might use in your CMakeLists.txt:\n\n#  TOON_FOUND\n\n#  TOON_INCLUDE_DIRS\n\n#  TOON_LIBRARIES\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Dependencies\n\n###\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Configure TooN\n\n###\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "lib/wiiuse/cmake/FindTooNtag.cmake" : {
      "ObjectId" : "76e790660794213e0f16bc44e7d18446c42567f9",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find tag algorithm library (built on TooN)\n\n#\n\n# Users may optionally supply:\n\n#  TAG_ROOT_DIR - a prefix to start searching for the toon headers.\n\n#\n\n# Cache Variables: (probably not for direct use in your scripts)\n\n#  TAG_INCLUDE_DIR\n\n#  TAG_LIBRARY\n\n#\n\n# Non-cache variables you might use in your CMakeLists.txt:\n\n#  TOONTAG_FOUND\n\n#  TOONTAG_INCLUDE_DIRS\n\n#  TOONTAG_LIBRARIES\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Dependencies\n\n###\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Configure tag\n\n###\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "lib/wiiuse/cmake/FindTweek12.cmake" : {
      "ObjectId" : "47b9a5e1abe9b201dc16e6b54832e9411806b3b5",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find Tweek 1.2 library\n\n# Requires VPR 2.0 (thus FindVPR20.cmake)\n\n# Optionally uses Flagpoll and FindFlagpoll.cmake\n\n#\n\n# This library is a part of VR Juggler 2.2 - you probably want to use\n\n# find_package(VRJuggler22) instead, for an easy interface to this and\n\n# related scripts.  See FindVRJuggler22.cmake for more information.\n\n#\n\n#  TWEEK12_LIBRARY_DIR, library search path\n\n#  TWEEK12_INCLUDE_DIR, include search path\n\n#  TWEEK12_LIBRARY, the library to link against\n\n#  TWEEK12_FOUND, If false, do not try to use this library.\n\n#\n\n# Plural versions refer to this library and its dependencies, and\n\n# are recommended to be used instead, unless you have a good reason.\n\n#\n\n# Useful configuration variables you might want to add to your cache:\n\n#  TWEEK12_ROOT_DIR - A directory prefix to search\n\n#                     (a path that contains include/ as a subdirectory)\n\n#\n\n# This script will use Flagpoll, if found, to provide hints to the location\n\n# of this library, but does not use the compiler flags returned by Flagpoll\n\n# directly.\n\n#\n\n# The VJ_BASE_DIR environment variable is also searched (preferentially)\n\n# when searching for this component, so most sane build environments should\n\n# \"just work.\"  Note that you need to manually re-run CMake if you change\n\n# this environment variable, because it cannot auto-detect this change\n\n# and trigger an automatic re-run.\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Try flagpoll.\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Dependency\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "lib/wiiuse/cmake/FindTweek14.cmake" : {
      "ObjectId" : "c6e1e5b2d51f86c7c36b56e698b4749771cff77a",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find Tweek 1.4 library\n\n# Requires VPR 2.2 (thus FindVPR22.cmake)\n\n# Optionally uses Flagpoll and FindFlagpoll.cmake\n\n#\n\n# This library is a part of VR Juggler 3.0 - you probably want to use\n\n# find_package(VRJuggler30) instead, for an easy interface to this and\n\n# related scripts.  See FindVRJuggler30.cmake for more information.\n\n#\n\n#  TWEEK14_LIBRARY_DIR, library search path\n\n#  TWEEK14_INCLUDE_DIR, include search path\n\n#  TWEEK14_LIBRARY, the library to link against\n\n#  TWEEK14_FOUND, If false, do not try to use this library.\n\n#\n\n# Plural versions refer to this library and its dependencies, and\n\n# are recommended to be used instead, unless you have a good reason.\n\n#\n\n# Useful configuration variables you might want to add to your cache:\n\n#  TWEEK14_ROOT_DIR - A directory prefix to search\n\n#                     (a path that contains include/ as a subdirectory)\n\n#\n\n# This script will use Flagpoll, if found, to provide hints to the location\n\n# of this library, but does not use the compiler flags returned by Flagpoll\n\n# directly.\n\n#\n\n# The VJ_BASE_DIR environment variable is also searched (preferentially)\n\n# when searching for this component, so most sane build environments should\n\n# \"just work.\"  Note that you need to manually re-run CMake if you change\n\n# this environment variable, because it cannot auto-detect this change\n\n# and trigger an automatic re-run.\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n# Updated for VR Juggler 3.0 by:\n\n# Brandon Newendorp <brandon@newendorp.com>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Try flagpoll.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Dependency\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "lib/wiiuse/cmake/FindVPR20.cmake" : {
      "ObjectId" : "03eb12dc6caf88803f961a689ada1be8cdb5691f",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find VPR 2.0 library\n\n# Requires Boost 1.33.1 or greater (including filesystem and signals libraries)\n\n# (and thus FindBoost.cmake from 2.8rc3 or newer, preferably)\n\n# Requires NSPR4 (and PLC4) on Windows\n\n# Requires pthreads on Unix (Mac or Linux)\n\n# Requires libuuid on Linux\n\n# Optionally uses Flagpoll and FindFlagpoll.cmake\n\n#\n\n# This library is a part of VR Juggler 2.2 - you probably want to use\n\n# find_package(VRJuggler22) instead, for an easy interface to this and\n\n# related scripts.  See FindVRJuggler22.cmake for more information.\n\n#\n\n#  VPR20_LIBRARY_DIR, library search path\n\n#  VPR20_INCLUDE_DIR, include search path\n\n#  VPR20_LIBRARY, the library to link against\n\n#  VPR20_FOUND, If false, do not try to use this library.\n\n#\n\n# Plural versions refer to this library and its dependencies, and\n\n# are recommended to be used instead, unless you have a good reason.\n\n#\n\n# Useful configuration variables you might want to add to your cache:\n\n#  VPR20_ROOT_DIR - A directory prefix to search\n\n#                   (a path that contains include/ as a subdirectory)\n\n#\n\n# This script will use Flagpoll, if found, to provide hints to the location\n\n# of this library, but does not use the compiler flags returned by Flagpoll\n\n# directly.\n\n#\n\n# The VJ_BASE_DIR environment variable is also searched (preferentially)\n\n# when searching for this component, so most sane build environments should\n\n# \"just work.\"  Note that you need to manually re-run CMake if you change\n\n# this environment variable, because it cannot auto-detect this change\n\n# and trigger an automatic re-run.\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Try flagpoll.\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Dependencies\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find Boost in the same place as VPR\n",
        "Line" : 135,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# VR Juggler 2.2.1 binaries for Mac are built against single-threaded boost.\n",
        "Line" : 142,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "#set(Boost_USE_MULTITHREADED OFF)\n",
        "Line" : 144,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "lib/wiiuse/cmake/FindVPR22.cmake" : {
      "ObjectId" : "d9ab26ff6ba1e5533919cf6d23ae1773395da637",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find VPR 2.2 library\n\n# Requires Boost 1.33.1 or greater (including filesystem and signals libraries)\n\n# (and thus FindBoost.cmake from 2.8rc3 or newer, preferably)\n\n# Requires NSPR4 (and PLC4) on Windows\n\n# Requires pthreads on Unix (Mac or Linux)\n\n# Requires libuuid on Linux\n\n# Optionally uses Flagpoll and FindFlagpoll.cmake\n\n#\n\n# This library is a part of VR Juggler 3.0 - you probably want to use\n\n# find_package(VRJuggler30) instead, for an easy interface to this and\n\n# related scripts.  See FindVRJuggler30.cmake for more information.\n\n#\n\n#  VPR22_LIBRARY_DIR, library search path\n\n#  VPR22_INCLUDE_DIR, include search path\n\n#  VPR22_LIBRARY, the library to link against\n\n#  VPR22_FOUND, If false, do not try to use this library.\n\n#\n\n# Plural versions refer to this library and its dependencies, and\n\n# are recommended to be used instead, unless you have a good reason.\n\n#\n\n# Useful configuration variables you might want to add to your cache:\n\n#  VPR22_ROOT_DIR - A directory prefix to search\n\n#                   (a path that contains include/ as a subdirectory)\n\n#\n\n# This script will use Flagpoll, if found, to provide hints to the location\n\n# of this library, but does not use the compiler flags returned by Flagpoll\n\n# directly.\n\n#\n\n# The VJ_BASE_DIR environment variable is also searched (preferentially)\n\n# when searching for this component, so most sane build environments should\n\n# \"just work.\"  Note that you need to manually re-run CMake if you change\n\n# this environment variable, because it cannot auto-detect this change\n\n# and trigger an automatic re-run.\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n# Updated for VR Juggler 3.0 by:\n\n# Brandon Newendorp <brandon@newendorp.com>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Try flagpoll.\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Dependencies\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find Boost in the same place as VPR\n",
        "Line" : 139,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "lib/wiiuse/cmake/FindVPS.cmake" : {
      "ObjectId" : "c2b52c03a5bae130c71039bd534a796c3d0340ec",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find VPS library\n\n#\n\n#  VPS_LIBRARY_DIR, library search path\n\n#  VPS_INCLUDE_DIR, include search path\n\n#  VPS_{component}_LIBRARY, the library to link against\n\n#  VPS_FOUND, If false, do not try to use this library.\n\n#\n\n# Plural versions refer to this library and its dependencies, and\n\n# are recommended to be used instead, unless you have a good reason.\n\n#\n\n# Useful configuration variables you might want to add to your cache:\n\n#  VPS_ROOT_DIR - A directory prefix to search\n\n#                         (a path that contains include/ as a subdirectory)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Try the config file mode.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Cray MTA(Multi-Threaded Architecture) family: CMake build not tested\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n# Linux\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###\n\n# IBM-AIX: CMake build not tested\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "###\n\n# HP-UX: CMake build not tested\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "###\n\n# SunOS: CMake build not tested\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "###\n\n# IRIX: CMake build not tested\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "###\n\n# Mac OS X\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "###\n\n# Windows\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "###\n\n# Configure VPS\n\n###\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# If a version was specified, the least we can do is remove any directories\n\n# from our search that contain too low of versions\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 285,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "lib/wiiuse/cmake/FindVRJ22.cmake" : {
      "ObjectId" : "7a291f0a436bc56f239f6afa828484b6ec1919cb",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find VR Juggler 2.2 core library\n\n# Requires JCCL 1.2, Gadgeteer 1.2, VPR 2.0, and Sonix 1.2\n\n# (thus FindJCCL12.cmake, FindGadgeteer12.cmake, FindVPR20.cmake,\n\n# and FindSonix12.cmake)\n\n# Requires X11 if not on Mac or Windows.\n\n# Optionally uses Flagpoll and FindFlagpoll.cmake\n\n#\n\n# This library is a part of VR Juggler 2.2 - you probably want to use\n\n# find_package(VRJuggler22) instead, for an easy interface to this and\n\n# related scripts.  See FindVRJuggler22.cmake for more information.\n\n#\n\n#  VRJ22_LIBRARY_DIR, library search path\n\n#  VRJ22_INCLUDE_DIR, include search path\n\n#  VRJ22_LIBRARY, the library to link against\n\n#  VRJ22_FOUND, If false, do not try to use this library.\n\n#\n\n# Plural versions refer to this library and its dependencies, and\n\n# are recommended to be used instead, unless you have a good reason.\n\n#\n\n# Useful configuration variables you might want to add to your cache:\n\n#  VRJ22_ROOT_DIR - A directory prefix to search\n\n#                   (a path that contains include/ as a subdirectory)\n\n#\n\n# This script will use Flagpoll, if found, to provide hints to the location\n\n# of this library, but does not use the compiler flags returned by Flagpoll\n\n# directly.\n\n#\n\n# The VJ_BASE_DIR environment variable is also searched (preferentially)\n\n# when searching for this component, so most sane build environments should\n\n# \"just work.\"  Note that you need to manually re-run CMake if you change\n\n# this environment variable, because it cannot auto-detect this change\n\n# and trigger an automatic re-run.\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Try flagpoll.\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Dependencies\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "lib/wiiuse/cmake/FindVRJ30.cmake" : {
      "ObjectId" : "30091bccfc1672500c9d1689750a2fa9b733d9e9",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find VR Juggler 3.0 core library\n\n# Requires JCCL 1.4, Gadgeteer 1.4, VPR 2.2, and Sonix 1.4\n\n# (thus FindJCCL14.cmake, FindGadgeteer20.cmake, FindVPR22.cmake,\n\n# and FindSonix14.cmake)\n\n# Requires X11 if not on Mac or Windows.\n\n# Optionally uses Flagpoll and FindFlagpoll.cmake\n\n#\n\n# This library is a part of VR Juggler 3.0 - you probably want to use\n\n# find_package(VRJuggler30) instead, for an easy interface to this and\n\n# related scripts.  See FindVRJuggler30.cmake for more information.\n\n#\n\n#  VRJ30_LIBRARY_DIR, library search path\n\n#  VRJ30_INCLUDE_DIR, include search path\n\n#  VRJ30_LIBRARY, the library to link against\n\n#  VRJ30_FOUND, If false, do not try to use this library.\n\n#\n\n# Plural versions refer to this library and its dependencies, and\n\n# are recommended to be used instead, unless you have a good reason.\n\n#\n\n# Useful configuration variables you might want to add to your cache:\n\n#  VRJ30_ROOT_DIR - A directory prefix to search\n\n#                   (a path that contains include/ as a subdirectory)\n\n#\n\n# This script will use Flagpoll, if found, to provide hints to the location\n\n# of this library, but does not use the compiler flags returned by Flagpoll\n\n# directly.\n\n#\n\n# The VJ_BASE_DIR environment variable is also searched (preferentially)\n\n# when searching for this component, so most sane build environments should\n\n# \"just work.\"  Note that you need to manually re-run CMake if you change\n\n# this environment variable, because it cannot auto-detect this change\n\n# and trigger an automatic re-run.\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n# Updated for VR Juggler 3.0 by:\n\n# Brandon Newendorp <brandon@newendorp.com>\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Try flagpoll.\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Dependencies\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "lib/wiiuse/cmake/FindVRJOGL22.cmake" : {
      "ObjectId" : "7f0aafd8d052c953fffcfbc7d927a0a0366d4fa3",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find VRJuggler 2.2 OpenGL library\n\n# Requires VRJ core 2.2 (thus FindVRJ22.cmake)\n\n# Requires OpenGL.\n\n# Optionally uses Flagpoll and FindFlagpoll.cmake\n\n#\n\n# This library is a part of VR Juggler 2.2 - you probably want to use\n\n# find_package(VRJuggler22) instead, for an easy interface to this and\n\n# related scripts.  See FindVRJuggler22.cmake for more information.\n\n#\n\n#  VRJOGL22_LIBRARY_DIR, library search path\n\n#  VRJOGL22_INCLUDE_DIRS, include search path for dependencies\n\n#  VRJOGL22_LIBRARY, the library to link against\n\n#  VRJOGL22_FOUND, If false, do not try to use this library.\n\n#\n\n# Plural versions refer to this library and its dependencies, and\n\n# are recommended to be used instead, unless you have a good reason.\n\n#\n\n# Useful configuration variables you might want to add to your cache:\n\n#  VRJOGL22_ROOT_DIR - A directory prefix to search\n\n#                      (a path that contains include/ as a subdirectory)\n\n#\n\n# This script will use Flagpoll, if found, to provide hints to the location\n\n# of this library, but does not use the compiler flags returned by Flagpoll\n\n# directly.\n\n#\n\n# The VJ_BASE_DIR environment variable is also searched (preferentially)\n\n# when searching for this component, so most sane build environments should\n\n# \"just work.\"  Note that you need to manually re-run CMake if you change\n\n# this environment variable, because it cannot auto-detect this change\n\n# and trigger an automatic re-run.\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Try flagpoll.\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Dependency\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "lib/wiiuse/cmake/FindVRJOGL30.cmake" : {
      "ObjectId" : "780e2c33587d0fe71ae48ca9119b795bd12d31d7",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find VRJuggler 3.0 OpenGL library\n\n# Requires VRJ core 3.0 (thus FindVRJ30.cmake)\n\n# Requires OpenGL.\n\n# Optionally uses Flagpoll and FindFlagpoll.cmake\n\n#\n\n# This library is a part of VR Juggler 3.0 - you probably want to use\n\n# find_package(VRJuggler30) instead, for an easy interface to this and\n\n# related scripts.  See FindVRJuggler30.cmake for more information.\n\n#\n\n#  VRJOGL30_LIBRARY_DIR, library search path\n\n#  VRJOGL30_INCLUDE_DIRS, include search path for dependencies\n\n#  VRJOGL30_LIBRARY, the library to link against\n\n#  VRJOGL30_FOUND, If false, do not try to use this library.\n\n#\n\n# Plural versions refer to this library and its dependencies, and\n\n# are recommended to be used instead, unless you have a good reason.\n\n#\n\n# Useful configuration variables you might want to add to your cache:\n\n#  VRJOGL30_ROOT_DIR - A directory prefix to search\n\n#                      (a path that contains include/ as a subdirectory)\n\n#\n\n# This script will use Flagpoll, if found, to provide hints to the location\n\n# of this library, but does not use the compiler flags returned by Flagpoll\n\n# directly.\n\n#\n\n# The VJ_BASE_DIR environment variable is also searched (preferentially)\n\n# when searching for this component, so most sane build environments should\n\n# \"just work.\"  Note that you need to manually re-run CMake if you change\n\n# this environment variable, because it cannot auto-detect this change\n\n# and trigger an automatic re-run.\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n# Updated for VR Juggler 3.0 by:\n\n# Brandon Newendorp <brandon@newendorp.com>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Try flagpoll.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Dependency\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "lib/wiiuse/cmake/FindVRJuggler.cmake" : {
      "ObjectId" : "c794d0906e1227afb97bf3abfdb94472ef265955",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find VR Juggler-related packages (combined finder)\n\n#  VRJUGGLER_INCLUDE_DIRS, include search paths\n\n#  VRJUGGLER_LIBRARIES, the libraries to link against\n\n#  VRJUGGLER_ENVIRONMENT\n\n#  VRJUGGLER_RUNTIME_LIBRARY_DIRS\n\n#  VRJUGGLER_CXX_FLAGS\n\n#  VRJUGGLER_DEFINITIONS\n\n#  VRJUGGLER_FOUND, If false, do not try to use VR Juggler.\n\n#\n\n# Components available to search for (uses \"VRJOGL\" by default):\n\n#  VRJOGL\n\n#  VRJ\n\n#  Gadgeteer\n\n#  JCCL\n\n#  VPR\n\n#  Sonix\n\n#  Tweek\n\n#\n\n# Additionally, a full setup requires these packages and their Find_.cmake scripts\n\n#  CPPDOM\n\n#  GMTL\n\n#\n\n# Optionally uses Flagpoll (and FindFlagpoll.cmake)\n\n#\n\n# Notes on components:\n\n#  - All components automatically include their dependencies.\n\n#  - If you do not specify a component, VRJOGL (the OpenGL view manager)\n\n#    will be used by default.\n\n#  - Capitalization of component names does not matter, but it's best to\n\n#    pretend it does and use the above capitalization.\n\n#  - Since this script calls find_package for your requested components and\n\n#    their dependencies, you can use any of the variables specified in those\n\n#    files in addition to the \"summary\" ones listed here, for more finely\n\n#    controlled building and linking.\n\n#\n\n# This CMake script requires all of the Find*.cmake scripts for the\n\n# components listed above, as it is only a \"meta-script\" designed to make\n\n# using those scripts more developer-friendly.\n\n#\n\n# Useful configuration variables you might want to add to your cache:\n\n#  (CAPS COMPONENT NAME)_ROOT_DIR - A directory prefix to search\n\n#                         (a path that contains include/ as a subdirectory)\n\n#\n\n# The VJ_BASE_DIR environment variable is also searched (preferentially)\n\n# when seeking any of the above components, as well as Flagpoll, CPPDOM,\n\n# and Boost (from within VPR), so most sane build environments should\n\n# \"just work.\"\n\n#\n\n# IMPORTANT: Note that you need to manually re-run CMake if you change\n\n# this environment variable, because it cannot auto-detect this change\n\n# and trigger an automatic re-run.\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n# Updated for VR Juggler 3.0 by:\n\n# Brandon Newendorp <brandon@newendorp.com>\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Default required components\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set generic component variables, like VPR_LIBRARIES\n",
        "Line" : 182,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 3
    },
    "lib/wiiuse/cmake/FindVRJuggler22.cmake" : {
      "ObjectId" : "db9b3a22e20b85f81298b9afc87640ceefa8ce07",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find VRJuggler 2.2-related packages (main finder)\n\n#  VRJUGGLER22_LIBRARY_DIRS, library search paths\n\n#  VRJUGGLER22_INCLUDE_DIRS, include search paths\n\n#  VRJUGGLER22_LIBRARIES, the libraries to link against\n\n#  VRJUGGLER22_ENVIRONMENT\n\n#  VRJUGGLER22_RUNTIME_LIBRARY_DIRS\n\n#  VRJUGGLER22_CXX_FLAGS\n\n#  VRJUGGLER22_DEFINITIONS\n\n#  VRJUGGLER22_FOUND, If false, do not try to use VR Juggler 2.2.\n\n#\n\n# Components available to search for (uses \"VRJOGL22\" by default):\n\n#  VRJOGL22\n\n#  VRJ22\n\n#  Gadgeteer12\n\n#  JCCL12\n\n#  VPR20\n\n#  Sonix12\n\n#  Tweek12\n\n#\n\n# Additionally, a full setup requires these packages and their Find_.cmake scripts\n\n#  CPPDOM\n\n#  GMTL\n\n#\n\n# Optionally uses Flagpoll (and FindFlagpoll.cmake)\n\n#\n\n# Notes on components:\n\n#  - All components automatically include their dependencies.\n\n#  - You can search for the name above with or without the version suffix.\n\n#  - If you do not specify a component, VRJOGL22(the OpenGL view manager)\n\n#    will be used by default.\n\n#  - Capitalization of component names does not matter, but it's best to\n\n#    pretend it does and use the above capitalization.\n\n#  - Since this script calls find_package for your requested components and\n\n#    their dependencies, you can use any of the variables specified in those\n\n#    files in addition to the \"summary\" ones listed here, for more finely\n\n#    controlled building and linking.\n\n#\n\n# This CMake script requires all of the Find*.cmake scripts for the\n\n# components listed above, as it is only a \"meta-script\" designed to make\n\n# using those scripts more developer-friendly.\n\n#\n\n# Useful configuration variables you might want to add to your cache:\n\n#  (CAPS COMPONENT NAME)_ROOT_DIR - A directory prefix to search\n\n#                         (a path that contains include/ as a subdirectory)\n\n#\n\n# The VJ_BASE_DIR environment variable is also searched (preferentially)\n\n# when seeking any of the above components, as well as Flagpoll, CPPDOM,\n\n# and Boost (from within VPR20), so most sane build environments should\n\n# \"just work.\"\n\n#\n\n# IMPORTANT: Note that you need to manually re-run CMake if you change\n\n# this environment variable, because it cannot auto-detect this change\n\n# and trigger an automatic re-run.\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Default required components\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Turn a potentially messy components list into a nice one with versions.\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Look at requested components\n",
        "Line" : 105,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# Find components\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Needed to make linking against boost work with 2.2.1 binaries - rp20091022\n\n# BOOST_ALL_DYN_LINK\n",
        "Line" : 286,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Disable these annoying warnings\n\n# 4275: non dll-interface class used as base for dll-interface class\n\n# 4251: needs to have dll-interface to be used by clients of class\n\n# 4100: unused parameter\n\n# 4512: assignment operator could not be generated\n\n# 4127: (Not currently disabled) conditional expression in loop evaluates to constant\n",
        "Line" : 293,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Silence annoying warnings about deprecated hash_map.\n",
        "Line" : 302,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Find directories of Gadgeteer plugins and drivers\n",
        "Line" : 320,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Find directories of Sonix plugins\n",
        "Line" : 333,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Grab the actual plugins\n",
        "Line" : 343,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# configFiles *.jconf\n",
        "Line" : 367,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# definitions *.jdef\n",
        "Line" : 373,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# models *.flt\n",
        "Line" : 379,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "# sounds *.wav\n",
        "Line" : 385,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "# calibration.table - needed?\n",
        "Line" : 391,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "# Append Mac-specific sources to source list\n",
        "Line" : 423,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Set destination of nib files\n",
        "Line" : 437,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Set destination of Resources\n",
        "Line" : 445,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 20
    },
    "lib/wiiuse/cmake/FindVRJuggler30.cmake" : {
      "ObjectId" : "4d28f015b4f0438b7006b7cb2e7854a411984a54",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find VRJuggler 3.0-related packages (main finder)\n\n#  VRJUGGLER30_LIBRARY_DIRS, library search paths\n\n#  VRJUGGLER30_INCLUDE_DIRS, include search paths\n\n#  VRJUGGLER30_LIBRARIES, the libraries to link against\n\n#  VRJUGGLER30_ENVIRONMENT\n\n#  VRJUGGLER30_RUNTIME_LIBRARY_DIRS\n\n#  VRJUGGLER30_CXX_FLAGS\n\n#  VRJUGGLER30_DEFINITIONS\n\n#  VRJUGGLER30_FOUND, If false, do not try to use VR Juggler 3.0.\n\n#\n\n# Components available to search for (uses \"VRJOGL30\" by default):\n\n#  VRJOGL30\n\n#  VRJ30\n\n#  Gadgeteer20\n\n#  JCCL14\n\n#  VPR22\n\n#  Sonix14\n\n#  Tweek14\n\n#\n\n# Additionally, a full setup requires these packages and their Find_.cmake scripts\n\n#  CPPDOM\n\n#  GMTL\n\n#\n\n# Optionally uses Flagpoll (and FindFlagpoll.cmake)\n\n#\n\n# Notes on components:\n\n#  - All components automatically include their dependencies.\n\n#  - You can search for the name above with or without the version suffix.\n\n#  - If you do not specify a component, VRJOGL30(the OpenGL view manager)\n\n#    will be used by default.\n\n#  - Capitalization of component names does not matter, but it's best to\n\n#    pretend it does and use the above capitalization.\n\n#  - Since this script calls find_package for your requested components and\n\n#    their dependencies, you can use any of the variables specified in those\n\n#    files in addition to the \"summary\" ones listed here, for more finely\n\n#    controlled building and linking.\n\n#\n\n# This CMake script requires all of the Find*.cmake scripts for the\n\n# components listed above, as it is only a \"meta-script\" designed to make\n\n# using those scripts more developer-friendly.\n\n#\n\n# Useful configuration variables you might want to add to your cache:\n\n#  (CAPS COMPONENT NAME)_ROOT_DIR - A directory prefix to search\n\n#                         (a path that contains include/ as a subdirectory)\n\n#\n\n# The VJ_BASE_DIR environment variable is also searched (preferentially)\n\n# when seeking any of the above components, as well as Flagpoll, CPPDOM,\n\n# and Boost (from within VPR22), so most sane build environments should\n\n# \"just work.\"\n\n#\n\n# IMPORTANT: Note that you need to manually re-run CMake if you change\n\n# this environment variable, because it cannot auto-detect this change\n\n# and trigger an automatic re-run.\n\n#\n\n# Original Author:\n\n# 2009-2011 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n# Updated for VR Juggler 3.0 by:\n\n# Brandon Newendorp <brandon@newendorp.com> and Ryan Pavlik\n\n#\n\n# Copyright Iowa State University 2009-2011.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Default required components\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Turn a potentially messy components list into a nice one with versions.\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Look at requested components\n",
        "Line" : 107,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# Find components\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Find the common parent directory of the include dir and the library dir\n",
        "Line" : 214,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# BOOST_ALL_DYN_LINK\n",
        "Line" : 296,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Disable these annoying warnings\n\n# 4275: non dll-interface class used as base for dll-interface class\n\n# 4251: needs to have dll-interface to be used by clients of class\n\n# 4100: unused parameter\n\n# 4512: assignment operator could not be generated\n\n# 4127: (Not currently disabled) conditional expression in loop evaluates to constant\n",
        "Line" : 302,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Silence annoying warnings about deprecated hash_map.\n",
        "Line" : 311,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Find directories of Gadgeteer plugins and drivers\n",
        "Line" : 329,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Find directories of Sonix plugins\n",
        "Line" : 342,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Find directories of JCCL plugins\n",
        "Line" : 351,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Find directories of VR Juggler plugins\n",
        "Line" : 358,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Grab the actual plugins\n",
        "Line" : 366,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "# configFiles *.jconf\n",
        "Line" : 396,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "# definitions *.jdef\n",
        "Line" : 402,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "# models *.flt\n",
        "Line" : 408,
        "CharPositionInLine" : 1
      },
      "18" : {
        "Text" : "# sounds *.wav\n",
        "Line" : 414,
        "CharPositionInLine" : 1
      },
      "19" : {
        "Text" : "# Append Mac-specific sources to source list\n",
        "Line" : 450,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Set destination of nib files\n",
        "Line" : 464,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# Set destination of Resources\n",
        "Line" : 472,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 22
    },
    "lib/wiiuse/cmake/FindVRPN.cmake" : {
      "ObjectId" : "641b62b70ea6a7b153d3fa97d6c629b6d977cde9",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find VRPN library\n\n#\n\n# Cache Variables:\n\n#  VRPN_LIBRARY\n\n#  VRPN_SERVER_LIBRARY\n\n#  VRPN_INCLUDE_DIR\n\n#\n\n# Non-cache variables you might use in your CMakeLists.txt:\n\n#  VRPN_FOUND\n\n#  VRPN_SERVER_LIBRARIES - server libraries\n\n#  VRPN_LIBRARIES - client libraries\n\n#  VRPN_CLIENT_DEFINITIONS - definitions if you only use the client library\n\n#  VRPN_DEFINITIONS - Client-only definition if all we found was the client library.\n\n#  VRPN_INCLUDE_DIRS\n\n#\n\n# VRPN_ROOT_DIR is searched preferentially for these files\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Original Author:\n\n# 2009-2012 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2012.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# 64-bit dir: only set on win64\n",
        "Line" : 40,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# 32-bit dir: only set on win64\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# 32-bit dir on win32, useless to us on win64\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "###\n\n# Configure VRPN\n\n###\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "###\n\n# Dependencies\n\n###\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "lib/wiiuse/cmake/FindViewPoint.cmake" : {
      "ObjectId" : "a18b6145d673ae6b80528729a433771ba16db89a",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find Arrington Research ViewPoint EyeTracker SDK\n\n#\n\n# Cache Variables: (probably not for direct use in your scripts)\n\n#  VIEWPOINT_INCLUDE_DIR\n\n#  VIEWPOINT_LIBRARY\n\n#  VIEWPOINT_RUNTIME_LIBRARY\n\n#\n\n# Non-cache variables you might use in your CMakeLists.txt:\n\n#  VIEWPOINT_FOUND\n\n#  VIEWPOINT_INCLUDE_DIRS\n\n#  VIEWPOINT_LIBRARIES\n\n#  VIEWPOINT_RUNTIME_LIBRARIES - aka the dll for installing\n\n#  VIEWPOINT_RUNTIME_LIBRARY_DIRS\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Original Author:\n\n# 2012 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2012.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/wiiuse/cmake/FindVirtuoseAPI.cmake" : {
      "ObjectId" : "639d00dd439db574e795760728759ea498bbf7c9",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find Haption VirtuoseAPI library and include files\n\n#\n\n#  VIRTUOSEAPI_INCLUDE_DIRS, where to find headers\n\n#  VIRTUOSEAPI_LIBRARIES, the libraries to link against\n\n#  VIRTUOSEAPI_FOUND, If false, do not try to use this library\n\n#  VIRTUOSEAPI_RUNTIME_LIBRARY_DIRS, path to DLL/SO for runtime use.\n\n#  VIRTUOSEAPI_RUNTIME_LIBRARIES, runtime libraries you might want to install\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "lib/wiiuse/cmake/FindVirtuoseVPP.cmake" : {
      "ObjectId" : "0cd45fc1e221c5b7cbe96553ffe318756b41bfe5",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find Haption VirtuoseAPI C++ wrapper include files\n\n#\n\n# Use of this header depends on the VirtuoseAPI, so we search for that too.\n\n#\n\n#  VIRTUOSEVPP_INCLUDE_DIRS, where to find headers\n\n#  VIRTUOSEVPP_LIBRARIES, the libraries to link against\n\n#  VIRTUOSEVPP_FOUND, If false, do not try to use this library\n\n#  VIRTUOSEVPP_RUNTIME_LIBRARY_DIRS, path to DLL/SO for runtime use.\n\n#  VIRTUOSEAPI_RUNTIME_LIBRARIES, runtime libraries you might want to install\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "lib/wiiuse/cmake/FindWayland.cmake" : {
      "ObjectId" : "80aff5d3a0f17953fd21bafada1758d8a7ae87e3",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to Find Wayland\n\n#\n\n# Copyright 2015 Vlad Zagorodniy\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Will be defined:\n\n# WAYLAND_FOUND\n\n# WAYLAND_CLIENT_FOUND\n\n# WAYLAND_SERVER_FOUND\n\n# WAYLAND_CLIENT_INCLUDE_DIR\n\n# WAYLAND_SERVER_INCLUDE_DIR\n\n# WAYLAND_CLIENT_LIBRARIES\n\n# WAYLAND_SERVER_LIBRARIES\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# find include paths\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# find libs\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# set _FOUND vars\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "lib/wiiuse/cmake/FindWiiSCAAT.cmake" : {
      "ObjectId" : "0b0dd1638b5e4d83f17371779598b7df226fdeab",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find the Wii SCAAT library\n\n#\n\n# Users may optionally supply:\n\n#  WIISCAAT_ROOT_DIR - a prefix to start searching for the headers.\n\n#\n\n# Cache Variables: (probably not for direct use in your scripts)\n\n#  WIISCAAT_INCLUDE_DIR\n\n#  WIISCAAT_LIBRARY\n\n#\n\n# Non-cache variables you might use in your CMakeLists.txt:\n\n#  WIISCAAT_FOUND\n\n#  WIISCAAT_INCLUDE_DIRS\n\n#  WIISCAAT_LIBRARIES\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Prereq: tag\n\n###\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Configure tag\n\n###\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "lib/wiiuse/cmake/FindWiiUse.cmake" : {
      "ObjectId" : "2657cbb6008e2a90677938947631d98978ce548a",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find WiiUse library\n\n#\n\n# Cache Variables: (probably not for direct use in your scripts)\n\n#  WIIUSE_INCLUDE_DIR\n\n#  WIIUSE_LIBRARY\n\n#\n\n# Non-cache variables you might use in your CMakeLists.txt:\n\n#  WIIUSE_FOUND\n\n#  WIIUSE_INCLUDE_DIRS\n\n#  WIIUSE_LIBRARIES\n\n#  WIIUSE_RUNTIME_LIBRARIES - aka the dll for installing\n\n#  WIIUSE_RUNTIME_LIBRARY_DIRS\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/wiiuse/cmake/FindWinHID.cmake" : {
      "ObjectId" : "7dd05721401a6122edd1180b77c716f13d84d9c6",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find Windows HID support, part of the WDK/DDK\n\n#\n\n# Cache Variables: (probably not for direct use in your scripts)\n\n#  WINHID_INCLUDE_DIR\n\n#  WINHID_CRT_INCLUDE_DIR\n\n#  WINHID_LIBRARY\n\n#\n\n# Non-cache variables you might use in your CMakeLists.txt:\n\n#  WINHID_FOUND\n\n#  WINHID_INCLUDE_DIRS\n\n#  WINHID_LIBRARIES\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#  PrefixListGlob\n\n#  CleanDirectoryList\n\n#  MinGWSearchPathExtras\n\n#  FindWindowsSDK\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# what the architecture used to be called\n",
        "Line" : 64,
        "CharPositionInLine" : 19
      },
      "2" : {
        "Text" : "# what the WDK for Win8+ calls this architecture\n",
        "Line" : 65,
        "CharPositionInLine" : 18
      },
      "3" : {
        "Text" : "# what the architecture used to be called\n\n# what the WDK for Win8+ calls this architecture\n",
        "Line" : 67,
        "CharPositionInLine" : 18
      },
      "4" : {
        "Text" : "# Win2k min requirement\n\n# WinXP min requirement\n",
        "Line" : 87,
        "CharPositionInLine" : 21
      },
      "5" : {
        "Text" : "# Win Server 2003 min requirement\n",
        "Line" : 89,
        "CharPositionInLine" : 22
      },
      "6" : {
        "Text" : "# Win Vista (\"Long Horn\") min requirement\n",
        "Line" : 90,
        "CharPositionInLine" : 21
      },
      "7" : {
        "Text" : "# Win Vista (\"Long Horn\") min requirement\n",
        "Line" : 91,
        "CharPositionInLine" : 25
      },
      "8" : {
        "Text" : "# Win 7 min requirement\n",
        "Line" : 92,
        "CharPositionInLine" : 22
      },
      "9" : {
        "Text" : "# Win 7 min requirement\n",
        "Line" : 93,
        "CharPositionInLine" : 26
      },
      "10" : {
        "Text" : "# Win 8 min requirement\n",
        "Line" : 94,
        "CharPositionInLine" : 22
      },
      "11" : {
        "Text" : "# Win 8 min requirement\n",
        "Line" : 95,
        "CharPositionInLine" : 26
      },
      "12" : {
        "Text" : "# Might want to look close to the library first for the includes.\n",
        "Line" : 97,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# Win2k min requirement\n\n# WinXP min requirement\n",
        "Line" : 117,
        "CharPositionInLine" : 21
      },
      "14" : {
        "Text" : "# Win Server 2003 min requirement\n",
        "Line" : 119,
        "CharPositionInLine" : 22
      },
      "15" : {
        "Text" : "# Win Vista (\"Long Horn\") min requirement\n",
        "Line" : 120,
        "CharPositionInLine" : 21
      },
      "16" : {
        "Text" : "# Win Vista (\"Long Horn\") min requirement\n",
        "Line" : 121,
        "CharPositionInLine" : 25
      },
      "17" : {
        "Text" : "# Win 7 min requirement\n",
        "Line" : 122,
        "CharPositionInLine" : 22
      },
      "18" : {
        "Text" : "# Win 7 min requirement\n",
        "Line" : 123,
        "CharPositionInLine" : 26
      },
      "19" : {
        "Text" : "# Win 8 min requirement\n",
        "Line" : 124,
        "CharPositionInLine" : 22
      },
      "20" : {
        "Text" : "# Win 8 min requirement\n",
        "Line" : 125,
        "CharPositionInLine" : 26
      },
      "21" : {
        "Text" : "# otherwise you get weird compile errors\n",
        "Line" : 139,
        "CharPositionInLine" : 36
      },
      "22" : {
        "Text" : "# This is the non-MSVC path.\n",
        "Line" : 168,
        "CharPositionInLine" : 1
      },
      "23" : {
        "Text" : "# Don't need that CRT include dir for WDK 8+\n",
        "Line" : 279,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 24
    },
    "lib/wiiuse/cmake/FindWindowsSDK.cmake" : {
      "ObjectId" : "c8691efa77e7c20949893ede6465b5a8990116ab",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find the Windows SDK aka Platform SDK\n\n#\n\n# Relevant Wikipedia article: http://en.wikipedia.org/wiki/Microsoft_Windows_SDK\n\n#\n\n# Pass \"COMPONENTS tools\" to ignore Visual Studio version checks: in case\n\n# you just want the tool binaries to run, rather than the libraries and headers\n\n# for compiling.\n\n#\n\n# Variables:\n\n#  WINDOWSSDK_FOUND - if any version of the windows or platform SDK was found that is usable with the current version of visual studio\n\n#  WINDOWSSDK_LATEST_DIR\n\n#  WINDOWSSDK_LATEST_NAME\n\n#  WINDOWSSDK_FOUND_PREFERENCE - if we found an entry indicating a \"preferred\" SDK listed for this visual studio version\n\n#  WINDOWSSDK_PREFERRED_DIR\n\n#  WINDOWSSDK_PREFERRED_NAME\n\n#\n\n#  WINDOWSSDK_DIRS - contains no duplicates, ordered most recent first.\n\n#  WINDOWSSDK_PREFERRED_FIRST_DIRS - contains no duplicates, ordered with preferred first, followed by the rest in descending recency\n\n#\n\n# Functions:\n\n#  windowssdk_name_lookup(<directory> <output variable>) - Find the name corresponding with the SDK directory you pass in, or\n\n#     NOTFOUND if not recognized. Your directory must be one of WINDOWSSDK_DIRS for this to work.\n\n#\n\n#  windowssdk_build_lookup(<directory> <output variable>) - Find the build version number corresponding with the SDK directory you pass in, or\n\n#     NOTFOUND if not recognized. Your directory must be one of WINDOWSSDK_DIRS for this to work.\n\n#\n\n#  get_windowssdk_from_component(<file or dir> <output variable>) - Given a library or include dir,\n\n#     find the Windows SDK root dir corresponding to it, or NOTFOUND if unrecognized.\n\n#\n\n#  get_windowssdk_library_dirs(<directory> <output variable>) - Find the architecture-appropriate\n\n#     library directories corresponding to the SDK directory you pass in (or NOTFOUND if none)\n\n#\n\n#  get_windowssdk_library_dirs_multiple(<output variable> <directory> ...) - Find the architecture-appropriate\n\n#     library directories corresponding to the SDK directories you pass in, in order, skipping those not found. NOTFOUND if none at all.\n\n#     Good for passing WINDOWSSDK_DIRS or WINDOWSSDK_DIRS to if you really just want a file and don't care where from.\n\n#\n\n#  get_windowssdk_include_dirs(<directory> <output variable>) - Find the\n\n#     include directories corresponding to the SDK directory you pass in (or NOTFOUND if none)\n\n#\n\n#  get_windowssdk_include_dirs_multiple(<output variable> <directory> ...) - Find the\n\n#     include directories corresponding to the SDK directories you pass in, in order, skipping those not found. NOTFOUND if none at all.\n\n#     Good for passing WINDOWSSDK_DIRS or WINDOWSSDK_DIRS to if you really just want a file and don't care where from.\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Original Author:\n\n# 2012 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2012.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# pre-output\n",
        "Line" : 57,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : "# pre-output\n",
        "Line" : 58,
        "CharPositionInLine" : 19
      },
      "3" : {
        "Text" : "# pre-output\n",
        "Line" : 59,
        "CharPositionInLine" : 26
      },
      "4" : {
        "Text" : "# pre-output\n",
        "Line" : 60,
        "CharPositionInLine" : 28
      },
      "5" : {
        "Text" : "# search parameters\n",
        "Line" : 61,
        "CharPositionInLine" : 23
      },
      "6" : {
        "Text" : "# search parameters\n",
        "Line" : 62,
        "CharPositionInLine" : 18
      },
      "7" : {
        "Text" : "# Redstone 5 aka Win10 1810 \"October 2018 Update\"\n\n# Redstone 4 aka Win10 1803 \"April 2018 Update\"\n\n# Redstone 3 aka Win10 1709 \"Fall Creators Update\"\n\n# Redstone 2 aka Win10 1703 \"Creators Update\"\n\n# Redstone aka Win10 1607 \"Anniversary Update\"\n\n# TH2 aka Win10 1511\n\n# Win10 RTM\n\n# just ucrt\n",
        "Line" : 76,
        "CharPositionInLine" : 14
      },
      "8" : {
        "Text" : "# Appends to the three main pre-output lists used only if the path exists\n\n# and is not already in the list.\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Path invalid - do not add\n",
        "Line" : 99,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Path already in list - do not add\n",
        "Line" : 104,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Not yet in the list, so we'll add it\n",
        "Line" : 108,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# Appends to the \"preferred SDK\" lists only if the path exists\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Path invalid - do not add\n",
        "Line" : 126,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Path already in list - do not add\n",
        "Line" : 134,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Not yet in the list, so we'll add it\n",
        "Line" : 138,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "# Just in case we somehow missed it:\n",
        "Line" : 142,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "# Given a version like v7.0A, looks for an SDK in the registry under \"Microsoft SDKs\".\n\n# If the given version might be in both HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Microsoft SDKs\\\\Windows\n\n# and HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Windows Kits\\\\Installed Roots aka \"Windows Kits\",\n\n# use this macro first, since these registry keys usually have more information.\n\n#\n\n# Pass a \"default\" build number as an extra argument in case we can't find it.\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Default build number passed as extra argument\n",
        "Line" : 160,
        "CharPositionInLine" : 1
      },
      "19" : {
        "Text" : "# See if the registry holds a Microsoft-mutilated, err, designated, product name\n\n# (just using get_filename_component to execute the registry lookup)\n",
        "Line" : 162,
        "CharPositionInLine" : 1
      },
      "20" : {
        "Text" : "# Got a product name\n",
        "Line" : 168,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# try for a version to augment our name\n\n# (just using get_filename_component to execute the registry lookup)\n",
        "Line" : 172,
        "CharPositionInLine" : 1
      },
      "22" : {
        "Text" : "# Got a version\n",
        "Line" : 178,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# and it's not an invalid one with two dots in it:\n\n# use to override the default build\n",
        "Line" : 180,
        "CharPositionInLine" : 3
      },
      "24" : {
        "Text" : "# Got a version that's not already in the name, let's use it to improve our name.\n",
        "Line" : 184,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# Given a name for identification purposes, the build number, and a key (technically a \"value name\")\n\n# corresponding to a Windows SDK packaged as a \"Windows Kit\", look for it\n\n# in HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Windows Kits\\\\Installed Roots\n\n# Note that the key or \"value name\" tends to be something weird like KitsRoot81 -\n\n# no easy way to predict, just have to observe them in the wild.\n\n# Doesn't hurt to also try _winsdk_check_microsoft_sdks_registry for these:\n\n# sometimes you get keys in both parts of the registry (in the wow64 portion especially),\n\n# and the non-\"Windows Kits\" location is often more descriptive.\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Given a name for identification purposes and the build number\n\n# corresponding to a Windows 10 SDK packaged as a \"Windows Kit\", look for it\n\n# in HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Windows Kits\\\\Installed Roots\n\n# Doesn't hurt to also try _winsdk_check_microsoft_sdks_registry for these:\n\n# sometimes you get keys in both parts of the registry (in the wow64 portion especially),\n\n# and the non-\"Windows Kits\" location is often more descriptive.\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# not found\n",
        "Line" : 218,
        "CharPositionInLine" : 11
      },
      "28" : {
        "Text" : "# Given a name for indentification purposes, the build number, and the associated package GUID,\n\n# look in the registry under both HKLM and HKCU in \\\\SOFTWARE\\\\Microsoft\\\\MicrosoftSDK\\\\InstalledSDKs\\\\\n\n# for that guid and the SDK it points to.\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "###\n\n# Detect toolchain information: to know whether it's OK to use Vista+ only SDKs\n\n###\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# VC 10 and older has broad target support\n",
        "Line" : 242,
        "CharPositionInLine" : 1
      },
      "31" : {
        "Text" : "# VC 11 by default targets Vista and later only, so we can add a few more SDKs that (might?) only work on vista+\n",
        "Line" : 244,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# This is the XP-compatible v110+ toolset\n",
        "Line" : 246,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# This is the VS2010/VS2008 toolset\n",
        "Line" : 248,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# OK, we're VC11 or newer and not using a backlevel or XP-compatible toolset.\n\n# These versions have no XP (and possibly Vista pre-SP1) support\n",
        "Line" : 250,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "###\n\n# MSVC version checks - keeps messy conditionals in one place\n\n# (messy because of _WINDOWSSDK_IGNOREMSVC)\n\n###\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Newer than VS .NET/VS Toolkit 2003\n",
        "Line" : 271,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# VS2005/2008\n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# VS2013+\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "###\n\n# START body of find module\n\n###\n",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Newer than VS .NET/VS Toolkit 2003\n",
        "Line" : 292,
        "CharPositionInLine" : 30
      },
      "41" : {
        "Text" : "###\n\n# Look for \"preferred\" SDKs\n\n###\n",
        "Line" : 293,
        "CharPositionInLine" : 1
      },
      "42" : {
        "Text" : "# Environment variable for SDK dir\n",
        "Line" : 297,
        "CharPositionInLine" : 1
      },
      "43" : {
        "Text" : "# Per-user current Windows SDK for VS2005/2008\n",
        "Line" : 303,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# System-wide current Windows SDK for VS2005/2008\n",
        "Line" : 309,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "###\n\n# Begin the massive list of SDK searching!\n\n###\n",
        "Line" : 316,
        "CharPositionInLine" : 1
      },
      "46" : {
        "Text" : "# These require at least Visual Studio 2013 (VC12)\n",
        "Line" : 320,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "# Windows Software Development Kit (SDK) for Windows 10\n\n# Several different versions living in the same directory - if nothing else we can assume RTM (10240)\n",
        "Line" : 324,
        "CharPositionInLine" : 2
      },
      "48" : {
        "Text" : "# vista-only and 2013+\n",
        "Line" : 330,
        "CharPositionInLine" : 9
      },
      "49" : {
        "Text" : "# Included in Visual Studio 2013\n\n# Includes the v120_xp toolset\n",
        "Line" : 332,
        "CharPositionInLine" : 1
      },
      "50" : {
        "Text" : "# Windows Software Development Kit (SDK) for Windows 8.1\n\n# http://msdn.microsoft.com/en-gb/windows/desktop/bg162891\n",
        "Line" : 337,
        "CharPositionInLine" : 2
      },
      "51" : {
        "Text" : "# vista-only and 2013+\n",
        "Line" : 341,
        "CharPositionInLine" : 9
      },
      "52" : {
        "Text" : "# Included in Visual Studio 2012\n",
        "Line" : 344,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "# Microsoft Windows SDK for Windows 8 and .NET Framework 4.5\n\n# This is the first version to also include the DirectX SDK\n\n# http://msdn.microsoft.com/en-US/windows/desktop/hh852363.aspx\n",
        "Line" : 347,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "# vista-only\n",
        "Line" : 352,
        "CharPositionInLine" : 9
      },
      "55" : {
        "Text" : "# Included with VS 2012 Update 1 or later\n\n# Introduces v110_xp toolset\n",
        "Line" : 354,
        "CharPositionInLine" : 1
      },
      "56" : {
        "Text" : "# Microsoft Windows SDK for Windows 7 and .NET Framework 4\n\n# http://www.microsoft.com/downloads/en/details.aspx?FamilyID=6b6c21d2-2006-4afa-9702-529fa782d63b\n",
        "Line" : 358,
        "CharPositionInLine" : 2
      },
      "57" : {
        "Text" : "# vista-only\n",
        "Line" : 361,
        "CharPositionInLine" : 9
      },
      "58" : {
        "Text" : "# Included with VS 2010\n",
        "Line" : 363,
        "CharPositionInLine" : 1
      },
      "59" : {
        "Text" : "# Windows SDK for Windows 7 and .NET Framework 3.5 SP1\n\n# Works with VC9\n\n# http://www.microsoft.com/en-us/download/details.aspx?id=18950\n",
        "Line" : 366,
        "CharPositionInLine" : 1
      },
      "60" : {
        "Text" : "# Two versions call themselves \"v6.1\":\n\n# Older:\n\n# Windows Vista Update & .NET 3.0 SDK\n\n# http://www.microsoft.com/en-us/download/details.aspx?id=14477\n",
        "Line" : 371,
        "CharPositionInLine" : 1
      },
      "61" : {
        "Text" : "# Newer:\n\n# Windows Server 2008 & .NET 3.5 SDK\n\n# may have broken VS9SP1? they recommend v7.0 instead, or a KB...\n\n# http://www.microsoft.com/en-us/download/details.aspx?id=24826\n",
        "Line" : 376,
        "CharPositionInLine" : 1
      },
      "62" : {
        "Text" : "# Included in VS 2008\n",
        "Line" : 382,
        "CharPositionInLine" : 1
      },
      "63" : {
        "Text" : "# Microsoft Windows Software Development Kit for Windows Vista and .NET Framework 3.0 Runtime Components\n\n# http://blogs.msdn.com/b/stanley/archive/2006/11/08/microsoft-windows-software-development-kit-for-windows-vista-and-net-framework-3-0-runtime-components.aspx\n",
        "Line" : 385,
        "CharPositionInLine" : 1
      },
      "64" : {
        "Text" : "# Let's not forget the Platform SDKs, which sometimes are useful!\n",
        "Line" : 390,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "###\n\n# Finally, look for \"preferred\" SDKs\n\n###\n",
        "Line" : 395,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# Newer than VS .NET/VS Toolkit 2003\n",
        "Line" : 398,
        "CharPositionInLine" : 30
      },
      "67" : {
        "Text" : "# Environment variable for SDK dir\n",
        "Line" : 401,
        "CharPositionInLine" : 1
      },
      "68" : {
        "Text" : "# Per-user current Windows SDK for VS2005/2008\n",
        "Line" : 407,
        "CharPositionInLine" : 2
      },
      "69" : {
        "Text" : "# System-wide current Windows SDK for VS2005/2008\n",
        "Line" : 413,
        "CharPositionInLine" : 2
      },
      "70" : {
        "Text" : "# If we found something...\n",
        "Line" : 444,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# Fallback, in case no preference found.\n",
        "Line" : 451,
        "CharPositionInLine" : 1
      },
      "72" : {
        "Text" : "# If we found indications of a user preference...\n",
        "Line" : 458,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# Internal: Architecture-appropriate library directory names.\n",
        "Line" : 476,
        "CharPositionInLine" : 1
      },
      "74" : {
        "Text" : "# Only supported in Win10 SDK and up.\n",
        "Line" : 479,
        "CharPositionInLine" : 3
      },
      "75" : {
        "Text" : "# what the WDK for Win8+ calls this architecture\n",
        "Line" : 480,
        "CharPositionInLine" : 28
      },
      "76" : {
        "Text" : "# what the architecture used to be called in oldest SDKs\n",
        "Line" : 482,
        "CharPositionInLine" : 30
      },
      "77" : {
        "Text" : "# what the architecture used to be called\n",
        "Line" : 483,
        "CharPositionInLine" : 25
      },
      "78" : {
        "Text" : "# what the WDK for Win8+ calls this architecture\n",
        "Line" : 484,
        "CharPositionInLine" : 26
      },
      "79" : {
        "Text" : "# what the architecture used to be called in oldest SDKs\n",
        "Line" : 488,
        "CharPositionInLine" : 30
      },
      "80" : {
        "Text" : "# what the architecture used to be called\n",
        "Line" : 489,
        "CharPositionInLine" : 27
      },
      "81" : {
        "Text" : "# what the WDK for Win8+ calls this architecture\n",
        "Line" : 490,
        "CharPositionInLine" : 26
      },
      "82" : {
        "Text" : "# what the architecture used to be called in oldest SDKs\n\n# what the architecture used to be called\n\n# what the WDK for Win8+ calls this architecture\n",
        "Line" : 492,
        "CharPositionInLine" : 26
      },
      "83" : {
        "Text" : "# If we don't have any \"parent directory\" items...\n",
        "Line" : 505,
        "CharPositionInLine" : 3
      },
      "84" : {
        "Text" : "# Fail.\n",
        "Line" : 511,
        "CharPositionInLine" : 2
      },
      "85" : {
        "Text" : "# SDKs like 7.1A\n",
        "Line" : 517,
        "CharPositionInLine" : 28
      },
      "86" : {
        "Text" : "# just because some SDKs have x86 dir and root dir\n",
        "Line" : 518,
        "CharPositionInLine" : 25
      },
      "87" : {
        "Text" : "# Win2k min requirement\n\n# WinXP min requirement\n",
        "Line" : 519,
        "CharPositionInLine" : 29
      },
      "88" : {
        "Text" : "# Win Server 2003 min requirement\n",
        "Line" : 521,
        "CharPositionInLine" : 30
      },
      "89" : {
        "Text" : "# Win Vista (\"Long Horn\") min requirement\n",
        "Line" : 523,
        "CharPositionInLine" : 33
      },
      "90" : {
        "Text" : "# Win 7 min requirement\n",
        "Line" : 525,
        "CharPositionInLine" : 34
      },
      "91" : {
        "Text" : "# Win Vista (\"Long Horn\") min requirement\n",
        "Line" : 528,
        "CharPositionInLine" : 7
      },
      "92" : {
        "Text" : "# Win 7 min requirement\n\n# Win 8 min requirement\n",
        "Line" : 529,
        "CharPositionInLine" : 8
      },
      "93" : {
        "Text" : "# Win 8.1 min requirement\n",
        "Line" : 531,
        "CharPositionInLine" : 11
      },
      "94" : {
        "Text" : "# Look for WDF libraries in Win10+ SDK\n",
        "Line" : 541,
        "CharPositionInLine" : 2
      },
      "95" : {
        "Text" : "# Look in each Win10+ SDK version for the components\n",
        "Line" : 549,
        "CharPositionInLine" : 2
      },
      "96" : {
        "Text" : "# Check to see if a library actually exists here.\n",
        "Line" : 557,
        "CharPositionInLine" : 3
      },
      "97" : {
        "Text" : "# Check to see if a header file actually exists here.\n",
        "Line" : 587,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 98
    },
    "lib/wiiuse/cmake/FindXrandr.cmake" : {
      "ObjectId" : "965c42dbafc0716e8546b8102c5bb9b48fbdc1dc",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find the Xrandr library\n\n#\n\n# Cache Variables: (probably not for direct use in your scripts)\n\n#  XRANDR_INCLUDE_DIR\n\n#  XRANDR_SOURCE_DIR\n\n#  XRANDR_LIBRARY\n\n#\n\n# Non-cache variables you might use in your CMakeLists.txt:\n\n#  XRANDR_FOUND\n\n#  XRANDR_INCLUDE_DIRS\n\n#  XRANDR_LIBRARIES\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Original Author:\n\n# 2014 Kevin M. Godby <kevin@godby.org>\n\n#\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/wiiuse/cmake/Findargp.cmake" : {
      "ObjectId" : "140144d4279bb1cf5c9be373041c698789d101c1",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find the argp library/component of glibc\n\n#\n\n# Users may optionally supply:\n\n#  ARGP_ROOT_DIR - a prefix to start searching.\n\n#\n\n# Cache Variables: (probably not for direct use in your scripts)\n\n#  ARGP_INCLUDE_DIR\n\n#  ARGP_LIBRARY, only defined if linking to an extra library is required\n\n#\n\n# Non-cache variables you might use in your CMakeLists.txt:\n\n#  ARGP_FOUND\n\n#  ARGP_INCLUDE_DIRS\n\n#  ARGP_LIBRARIES\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Configure ARGP\n\n###\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "lib/wiiuse/cmake/Findcppcheck.cmake" : {
      "ObjectId" : "3f13a6b3b6fb7ea7e618795e51fac3acdaa33512",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find cppcheck tool\n\n#\n\n# Cache Variables:\n\n#  CPPCHECK_EXECUTABLE\n\n#\n\n# Non-cache variables you might use in your CMakeLists.txt:\n\n#  CPPCHECK_FOUND\n\n#  CPPCHECK_VERSION\n\n#  CPPCHECK_POSSIBLEERROR_ARG\n\n#  CPPCHECK_UNUSEDFUNC_ARG\n\n#  CPPCHECK_STYLE_ARG\n\n#  CPPCHECK_QUIET_ARG\n\n#  CPPCHECK_INCLUDEPATH_ARG\n\n#  CPPCHECK_FAIL_REGULAR_EXPRESSION\n\n#  CPPCHECK_WARN_REGULAR_EXPRESSION\n\n#  CPPCHECK_MARK_AS_ADVANCED - whether to mark our vars as advanced even\n\n#    if we don't find this program.\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# cppcheck app bundles on Mac OS X are GUI, we want command line only\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If we have a custom path, look there first.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Restore original setting for appbundle finding\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Find out where our test file is\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Check for the two types of command line arguments by just trying them\n",
        "Line" : 105,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# Old arguments\n",
        "Line" : 134,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# No idea - some other issue must be getting in the way\n",
        "Line" : 140,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "lib/wiiuse/cmake/Findcppunit.cmake" : {
      "ObjectId" : "69150167edc05609f7988fa2695c4ddc6a76d15b",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find cppunit library\n\n#\n\n# Cache Variables: (probably not for direct use in your scripts)\n\n#  CPPUNIT_INCLUDE_DIR\n\n#  CPPUNIT_LIBRARY\n\n#\n\n# Non-cache variables you might use in your CMakeLists.txt:\n\n#  CPPUNIT_FOUND\n\n#  CPPUNIT_INCLUDE_DIRS\n\n#  CPPUNIT_LIBRARIES\n\n#\n\n# Requires these CMake modules:\n\n#  SelectLibraryConfigurations (included with CMake >= 2.8.0)\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Original Author:\n\n# 2009-2011 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2011.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Might want to look close to the library first for the includes.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "lib/wiiuse/cmake/Findcutil.cmake" : {
      "ObjectId" : "495f2840a611b2d016b964eb924ffc05a0ad63be",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - find NVIDIA CUDA and source for the cutil library, building cutil if needed.\n\n#\n\n#  CUTIL_LIBRARIES - Libraries to link against to use CUTIL\n\n#  CUTIL_INCLUDE_DIRS - Include directories to add before building a CUTIL app.\n\n#\n\n# Functions:\n\n#  install_cutil({RUNTIME_LIBRARY_DESTINATION}) - Install the CUTIL shared lib if created.\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "lib/wiiuse/cmake/Finddb2pdf.cmake" : {
      "ObjectId" : "e3ad03a2be29bae877a9e47ef3f5fd538e980fa7",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find db2pdf, and define a custom command to turn docbook into pdf\n\n#\n\n# Once done, this will define:\n\n#  DB2PDF_FOUND - system has LyX\n\n#  DB2PDF_COMMAND - the command to run\n\n#\n\n# and the following function:\n\n#  docbook_to_pdf(<output-variable> <docbook files>)\n\n#\n\n# Useful configuration variables you might want to add to your cache:\n\n#  DB2PDF_ROOT_DIR - A directory prefix to search\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "lib/wiiuse/cmake/FindosgLua.cmake" : {
      "ObjectId" : "d6a682e6449ef351dccf3ac25f5517cfafa2ca61",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find osgLua\n\n#\n\n# Users may optionally supply:\n\n#  OSGLUA_ROOT_DIR - a prefix to start searching\n\n#\n\n# Non-cache variables you might use in your CMakeLists.txt:\n\n#  OSGLUA_FOUND\n\n#  OSGLUA_INCLUDE_DIRS\n\n#  OSGLUA_LIBRARIES\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Dependencies\n\n###\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Configure Luabind\n\n###\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "lib/wiiuse/cmake/Findquatlib.cmake" : {
      "ObjectId" : "efca27f70af8c3b144193a2c6be8dcdf152d8172",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find quatlib\n\n# Find the quatlib headers and libraries.\n\n#\n\n#  QUATLIB_INCLUDE_DIRS - where to find quat.h\n\n#  QUATLIB_LIBRARIES    - List of libraries when using quatlib.\n\n#  QUATLIB_FOUND        - True if quatlib found.\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Look for the header file.\n",
        "Line" : 19,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# 64-bit dir: only set on win64\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# 32-bit dir: only set on win64\n",
        "Line" : 45,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# 32-bit dir on win32, useless to us on win64\n",
        "Line" : 48,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "# Look for the header file.\n",
        "Line" : 53,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# Look for the library.\n",
        "Line" : 67,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set QUATLIB_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "lib/wiiuse/cmake/Findudev.cmake" : {
      "ObjectId" : "ce454d576e0d3752c8ede53dbed4000e42f4fb15",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find the udev library\n\n#\n\n# Cache Variables: (probably not for direct use in your scripts)\n\n#  UDEV_INCLUDE_DIR\n\n#  UDEV_SOURCE_DIR\n\n#  UDEV_LIBRARY\n\n#\n\n# Non-cache variables you might use in your CMakeLists.txt:\n\n#  UDEV_FOUND\n\n#  UDEV_INCLUDE_DIRS\n\n#  UDEV_LIBRARIES\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Original Author:\n\n# 2014 Kevin M. Godby <kevin@godby.org>\n\n#\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/wiiuse/cmake/GenerateCompatibilityVersionFile.cmake" : {
      "ObjectId" : "7ac28ed5fa1646b7c34a6a3936d7849ebc12e70d",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# .. command:: generate_compatibility_version_file\n\n#\n\n#  Create a version file for a project::\n\n#\n\n#    generate_compatibility_version_file(<filename>\n\n#      [VERSION <major.minor.patch>]\n\n#      COMPATIBILITY <AnyNewerVersion|SameMajorVersion|ExactVersion>\n\n#      [C_ABI]\n\n#      [CXX_LAYOUT]\n\n#      [CXX_ABI])\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2015 Sensics, Inc. <ryan@sensics.com>\n\n# Copyright 2012 Alexander Neundorf <neundorf@kde.org>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "lib/wiiuse/cmake/GetCPUDetails.cmake" : {
      "ObjectId" : "b29013c99dc12f8794ebba4ffe406eb78a811e64",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Set a number of variables to indicate things about the current CPU and OS\n\n#\n\n#  CPU_COUNT\n\n#  CPU_INTEL\n\n#  CPU_EXE_64BIT\n\n#  CPU_EXE_32BIT\n\n#  CPU_HAS_SSE\n\n#  CPU_HAS_SSE2\n\n#  CPU_HAS_SSE3\n\n#  CPU_HAS_SSSE3\n\n#  CPU_HAS_SSE4_1\n\n#  CPU_HAS_SSE4_2\n\n#\n\n# Requires these CMake modules:\n\n#  no additional modules required\n\n#\n\n# Original Author:\n\n# 2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### See http://www.kitware.com/blog/home/post/63\n",
        "Line" : 40,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Unknown:\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Linux:\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Mac:\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Windows:\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "###\n\n# CPU_INTEL\n",
        "Line" : 65,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# Mac Intel boxes return i386 in 10.5 - so assume this is a PPC\n",
        "Line" : 71,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# TODO: Assuming yes in case of doubt - probably not a great idea\n",
        "Line" : 74,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "###\n\n# CPU_EXE_64BIT/32BIT\n",
        "Line" : 84,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "###\n\n# CPU_HAS_SSE/SSE2/SSE3/SSSE3/SSE4.1/SSE4.2\n",
        "Line" : 94,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# Use /proc/cpuinfo to find this out.\n",
        "Line" : 98,
        "CharPositionInLine" : 3
      },
      "12" : {
        "Text" : "# Mac OS X Intel requires SSE3\n",
        "Line" : 137,
        "CharPositionInLine" : 3
      },
      "13" : {
        "Text" : "#TODO: Assume only common-denominator for 64-bit machines,\n\n# since I don't know how to check.\n",
        "Line" : 146,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "#TODO:  Assume no SSE, since I don't know how to check.\n",
        "Line" : 155,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 15
    },
    "lib/wiiuse/cmake/GetCompilerInfoString.cmake" : {
      "ObjectId" : "1ee5b1f5a788aa8da27a8006c854fc6e7b495015",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Utility function to return a human-useful-only string ID'ing the compiler\n\n#\n\n#  get_compiler_info_string(<resultvar>)\n\n#\n\n# and some helper functions:\n\n#  get_gcc_version(<resultvar>)\n\n#  get_vs_short_version_string(<generator> <resultvar>)\n\n#\n\n# You might consider using it when setting up CTest options, for example:\n\n#  include(GetCompilerInfoString)\n\n#  get_compiler_info_string(COMPILERID)\n\n#  set(CTEST_BUILD_NAME \"${CMAKE_SYSTEM}-${CMAKE_SYSTEM_PROCESSOR}-${COMPILERID}\")\n\n#\n\n# Requires these CMake modules:\n\n#  no additional modules required\n\n#\n\n# Original Author:\n\n# 2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n\n#\n\n# Some functions based on cmake-2.8.0 modules FindBoost.cmake and CTest.cmake\n\n#=============================================================================\n\n# Copyright 2006-2009 Kitware, Inc.\n\n# Copyright 2006-2008 Andreas Schneider <mail@cynapses.org>\n\n# Copyright 2007      Wengo\n\n# Copyright 2007      Mike Jackson\n\n# Copyright 2008      Andreas Pakulat <apaku@gmx.de>\n\n# Copyright 2008-2009 Philip Lowman <philip@yhbt.com>\n\n# Copyright 2010      Iowa State University (Ryan Pavlik <abiryan@ryand.net>)\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# CMake - Cross Platform Makefile Generator\n\n# Copyright 2000-2009 Kitware, Inc., Insight Software Consortium\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n#\n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We're running in CTest - use that generator.\n",
        "Line" : 87,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Also for use in CTest scripts\n",
        "Line" : 92,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Parse version for Visual Studio\n",
        "Line" : 97,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Parse version for GCC\n",
        "Line" : 104,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Some other compiler we don't handle in more detail yet.\n",
        "Line" : 109,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Return _verstring\n",
        "Line" : 114,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "## Based on a function in FindBoost.cmake from CMake 2.8.0\n\n#-------------------------------------------------------------------------------\n\n#\n\n# Runs compiler with \"-dumpversion\" and parses major/minor\n\n# version with a regex.\n\n#\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Based on a function in CTest.cmake from CMake 2.8.0\n\n#-------------------------------------------------------------------------------\n\n#\n\n# function to turn generator name into a version string\n\n# like vs7 vs71 vs8 vs9\n\n#\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# handle the weird one\n",
        "Line" : 158,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 10
    },
    "lib/wiiuse/cmake/GetDefineString.cmake" : {
      "ObjectId" : "832fea8d146bbdaf5303d785e7a24e1a2300b194",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Script to get the value of a preprocessor definition that is a string,\n\n# after including the given files\n\n# Requires that the associated source file be present: GetDefineString.cpp.in.\n\n#\n\n#   get_define_string(NAME <define_name> [INCLUDES <files>] RESULT <variable>\n\n#                     [FLAGS <compile-flags>]\n\n#                     [INCLUDE_DIRS <include-dirs>]\n\n#                     [DEFINES] <-Ddefinitions>)\n\n# Original Author:\n\n# 2014 Ryan Pavlik <ryan@sensics.com> <abiryan@ryand.net>\n\n#\n\n# Copyright Sensics, Inc. 2014.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/wiiuse/cmake/GetDirectoryList.cmake" : {
      "ObjectId" : "60f2a01365b2a918b18d28364f75ee870844b41a",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Returns a list of the parent directories of all files passed\n\n#\n\n#  get_directory_list(<listvar> <file path> [<additional file paths>...])\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# combine variable's current value with additional list items\n",
        "Line" : 23,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Initial list cleaning\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Grab the absolute path of each actual directory\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Clean up the output list now\n",
        "Line" : 42,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "# return _out\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "lib/wiiuse/cmake/GetFileList.cmake" : {
      "ObjectId" : "2e0c3791e76f55d6e954157bd368758fb013637a",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Returns a list of the file names of all files passed\n\n#\n\n#  get_file_list(<listvar> <file path> [<additional file paths>...])\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# combine variable's current value with additional list items\n",
        "Line" : 23,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Initial list cleaning\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Grab the absolute path of each actual directory\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Clean up the output list now\n",
        "Line" : 38,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "# return _out\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "lib/wiiuse/cmake/GetForceIncludeDefinitions.cmake" : {
      "ObjectId" : "efcca047b7ee2fb83de76ead25e489cd0eebc0ec",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Get the platform-appropriate flags to add to force inclusion of a file\n\n#\n\n# The most common use of this is to use a generated config.h-type file\n\n# placed out of the source tree in all files.\n\n#\n\n#  get_force_include_definitions(var forcedincludefiles...) -\n\n#   where var is the name of  your desired output variable, and everything\n\n#   else is a source file to forcibly include.\n\n#   a list item to be filtered.\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/wiiuse/cmake/GetGitRevisionDescription.cmake" : {
      "ObjectId" : "8ab03bc5f0b766462e05edb6afbe9c20e8115b46",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Returns a version string from Git\n\n#\n\n# These functions force a re-configure on each git commit so that you can\n\n# trust the values of the variables in your build system.\n\n#\n\n#  get_git_head_revision(<refspecvar> <hashvar> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the refspec and sha hash of the current head revision\n\n#\n\n#  git_describe(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe on the source tree, and adjusting\n\n# the output so that it tests false if an error occurs.\n\n#\n\n#  git_get_exact_tag(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe --exact-match on the source tree,\n\n# and adjusting the output so that it tests false if there was no exact\n\n# matching tag.\n\n#\n\n#  git_local_changes(<var>)\n\n#\n\n# Returns either \"CLEAN\" or \"DIRTY\" with respect to uncommitted changes.\n\n# Uses the return code of \"git diff-index --quiet HEAD --\".\n\n# Does not regard untracked files.\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We must run the following at \"include\" time, not at function call time,\n\n# to find the path to this module rather than the path to a calling list file\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# .git dir not found, search parent directories\n",
        "Line" : 51,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "# We have reached the root directory, we are not in git\n",
        "Line" : 55,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# check if this is a submodule\n",
        "Line" : 62,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# TODO sanitize\n\n#if((${ARGN}\" MATCHES \"&&\") OR\n\n#\t(ARGN MATCHES \"||\") OR\n\n#\t(ARGN MATCHES \"\\\\;\"))\n\n#\tmessage(\"Please report the following error to the project!\")\n\n#\tmessage(FATAL_ERROR \"Looks like someone's doing something nefarious with git_describe! Passed arguments ${ARGN}\")\n\n#endif()\n",
        "Line" : 103,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "#message(STATUS \"Arguments to execute_process: ${ARGN}\")\n",
        "Line" : 111,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 7
    },
    "lib/wiiuse/cmake/GetMSVCVersion.cmake" : {
      "ObjectId" : "48d7b7c172e8797c693ca6371bece7ef222992be",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# GetMSVCVersion\n\n# --------------\n\n#\n\n#\n\n#\n\n# get_msvc_major_version(<var>)\n\n# get_msvc_minor_version(<var>)\n\n# get_msvc_combined_major_minor_version(<var>)\n\n# get_msvc_major_minor_version(<major_var> <minor_var>)\n\n# get_msvc_unique_decimal_version(<var>)\n\n#\n\n# This family of functions is designed to be used to convert\n\n# MSVC_VERSION from the compiler version number to the Visual Studio\n\n# decimal version number (2012 is 11.0, 2015 is 14.0). All take a name\n\n# of a variable in <var> to return their results in.\n\n#\n\n# Consider Visual Studio 2013, which reports 1800 in MSVC_VERSION (and\n\n# the _MSC_VER preprocessor macro). It is also known as VS 12 or 12.0.\n\n# (Minor versions are rarely used, except in the case of 7.1 aka\n\n# VS.NET 2003) The functions would return this output for 2013:\n\n#\n\n# get_msvc_major_version: 12\n\n# get_msvc_minor_version: 0\n\n# get_msvc_combined_major_minor_version: 120\n\n# get_msvc_major_minor_version: 12 in <major_var>, 0 in <minor_var>\n\n# get_msvc_unique_decimal_version: 12  (this returns with a decimal and\n\n# minor when needed to be precise, e.g. 7.1)\n\n#\n\n# The variable is not modified if not building with MSVC.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2015 Ryan Pavlik <ryan.pavlik@gmail.com>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see below.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n#\n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This function serves as the main implementation, with the others just\n\n# tweaking the result.\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# VS 2015 changed the pattern because they skipped VS 13\n",
        "Line" : 80,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# This function is also used as backend to some implementation, though\n\n# its contents are simpler, no real business logic to speak of.\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "lib/wiiuse/cmake/GetSubprojectStatus.cmake" : {
      "ObjectId" : "888a2caec2e37b4cd9013f515ee2f8af1fdb149e",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Returns whether the current project is on its own or within another project's build\n\n#\n\n#  get_subproject_status(<resultvar>) - resultvar will be YES if we are\n\n#   included in another project, or NO if we are being built separately\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Base source dir is our source dir - we are top-level\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Base source dir is not our source dir - we are a subproject\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "lib/wiiuse/cmake/InstallDebugSymbols.cmake" : {
      "ObjectId" : "25cd6bae8e2d0058c60f3524641f50df7cd4bbdc",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Defines a function to install the symbols for a target\n\n#\n\n#  install_debug_symbols(TARGETS <target_name> [...] [DESTINATION <dest>]\n\n#    [CONFIGURATIONS <configname> [...]] [PASSTHRU <arg to pass to INSTALL> [...]])\n\n#\n\n# DESTINATION is only optional if CMAKE_INSTALL_BINDIR and CMAKE_INSTALL_LIBDIR are set,\n\n# then it will use CMAKE_INSTALL_BINDIR for executables (and DLLs) and CMAKE_INSTALL_LIBDIR\n\n# for libraries (static libraries only on DLL platforms).\n\n#\n\n# CONFIGURATIONS are the config names for which symbols (PDB files) are expected -\n\n# the default of RelWithDebInfo Debug is correct unless you've dramatically changed\n\n# the set of configs.\n\n#\n\n# Anything after PASSTHRU is passed directly to the install( command after the arguments\n\n# that the function generates.\n\n#\n\n# Currently a no-op if using CMake pre-3.2 (can't use generator expressions before then\n\n# to get symbol location) or if not using MSVC (MSVC keeps its symbols separate in PDB files\n\n# necessitating this function in the first place).\n\n#\n\n# Original Author:\n\n# 2015, 2017 Ryan Pavlik <ryan@sensics.com> <abiryan@ryand.net>\n\n# http://ryanpavlik.com\n\n#\n\n# Copyright Sensics, Inc. 2015, 2017.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# debug symbols for MSVC: supported on CMake 3.2 and up where there's a\n\n# generator expression for a target's PDB file\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Wrap each config in a generator expression\n",
        "Line" : 52,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# make list comma separated\n",
        "Line" : 57,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Wrap in an \"OR\" generator expression\n",
        "Line" : 59,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# exe or dll: put it alongside the runtime component\n",
        "Line" : 70,
        "CharPositionInLine" : 20
      },
      "6" : {
        "Text" : "# do nothing if too old of CMake or not MSVC.\n",
        "Line" : 83,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 7
    },
    "lib/wiiuse/cmake/Licensing.cmake" : {
      "ObjectId" : "dae8e8b5a781ab7d06d0dcbee718470bb211ad9c",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Building a licensing description file\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/wiiuse/cmake/ListCombinations.cmake" : {
      "ObjectId" : "4321f624a8d4ad8c2b4d459c3e2061ce99333172",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Combine lists of prefixes and suffixes in all combinations\n\n#\n\n#  list_combinations(var PREFIXES listitems... SUFFIXES listitems...) -\n\n#   where var is the name of your desired output variable and PREFIXES\n\n#   and SUFFIXES are special arguments that indicate the start of your\n\n#   list of prefixes or suffixes respectively.\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Parse arguments\n",
        "Line" : 24,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    },
    "lib/wiiuse/cmake/ListFilter.cmake" : {
      "ObjectId" : "037859520ba7d503aa2fce3dea7ccb09fb973047",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - List filtering functions\n\n#\n\n#  list_filter(var regex listitems...) - where var is the name of\n\n#   your desired output variable, regex is the regex whose matching items\n\n#   WILL be put in the output variable, and everything else is considered\n\n#   a list item to be filtered.\n\n#\n\n#  list_filter_out(var regex listitems...) - where var is the name of\n\n#   your desired output variable, regex is the regex whose matching items\n\n#   will NOT be put in the output variable, and everything else is considered\n\n#   a list item to be filtered.\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/wiiuse/cmake/LuaTargets.cmake" : {
      "ObjectId" : "040f6b44a947c272c645ecdd16b0309a7d3336e1",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Copy/parse lua source files as a custom target\n\n#\n\n#  include(LuaTargets)\n\n#  add_lua_target(<target_name> <directory to copy to> [<luafile> <luafile>])\n\n#    Relative paths for the destination directory are considered with\n\n#    with respect to CMAKE_CURRENT_BINARY_DIR\n\n#\n\n#  install_lua_target(<target_name> [arguments to INSTALL(PROGRAMS ...) ])\n\n#\n\n# Set this variable to specify location of luac, if it is not a target:\n\n#  LUA_TARGET_LUAC_EXECUTABLE\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Produce an absolute path to the input file\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Clean up output file name\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Custom target depending on all the file copy commands\n",
        "Line" : 88,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 4
    },
    "lib/wiiuse/cmake/MSVCMultipleProcessCompile.cmake" : {
      "ObjectId" : "aad4eabded62acc0e0ecc97c9c154103176f800d",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Compile with multiple processes on MSVC\n\n#\n\n#  include(MSVCMultipleProcessCompile)\n\n#\n\n# Requires these CMake modules:\n\n#  ListCombinations.cmake\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Only available in VS 2005 and newer\n",
        "Line" : 19,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    },
    "lib/wiiuse/cmake/MSVCStaticRuntime.cmake" : {
      "ObjectId" : "e4ceea6f92bf3a3741d8f7c25533aa2720465db8",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Modify compile flags to use the static runtimes of MSVC\n\n#\n\n#  include(MSVCStaticRuntime)\n\n#\n\n# Requires these CMake modules:\n\n#  ListCombinations.cmake\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/wiiuse/cmake/MSVCVerboseLinking.cmake" : {
      "ObjectId" : "84d4a227818313b8936649866407e2da206bef3b",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Add appropriate linker flags to show link details on Visual Studio\n\n#\n\n#  include(MSVCVerboseLinking) - to add the flags automaticlly if applicable\n\n#\n\n# Be sure to include this module _BEFORE_ adding your targets, or the targets\n\n# won't pick up the updated flags.\n\n#\n\n# Requires these CMake modules:\n\n#  - none\n\n#\n\n# Original Author:\n\n# 2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/wiiuse/cmake/MapImportedReleaseVariants.cmake" : {
      "ObjectId" : "cd4ce93fc20a3fa9d84a05b62482d16b9fd035e0",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Sets CMAKE_MAP_IMPORTED_CONFIG_* so that if there isn't a perfect match between\n\n# the current project's build type and the imported build, but they're both some\n\n# kind of \"Release\" variant, things will just work.\n\n#\n\n# Original Author:\n\n# 2015 Ryan Pavlik <ryan@sensics.com> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n#\n\n# Copyright Sensics, Inc. 2015.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# RelWithDebInfo falls back to Release, then MinSizeRel\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# MinSizeRel falls back to Release, then RelWithDebInfo\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Release falls back to RelWithDebInfo, then MinSizeRel\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "lib/wiiuse/cmake/MinGWSearchPathExtras.cmake" : {
      "ObjectId" : "cd9fe69bb1c983106644e315cd7877b59510808b",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Additional help finding search paths on MinGW distributions, including MSYS2.\n\n#\n\n# Much of this is really more in the purview of CMake or the packages of CMake for\n\n# those distributions, but if I can centralize/simplify the pain here, it's worth doing.\n\n#\n\n# Variables: (all are internal cache variables)\n\n#  MINGWSEARCH_INCLUDE_DIRS - use under PATHS in your find_path() commands\n\n#  MINGWSEARCH_LIBRARY_DIRS - use under PATHS in your find_library() commands\n\n#  MINGWSEARCH_PREFIXES - suitable for temporary use in CMAKE_FIND_ROOT_PATH or CMAKE_PREFIX_PATH.\n\n#  MINGWSEARCH_TARGET_TRIPLE - something like x86_64-w64-mingw32 or i686-w64-mingw32, use as you see fit.\n\n#\n\n# Original Author:\n\n# 2016 Ryan Pavlik <ryan@sensics.com> <ryan.pavlik@gmail.com>\n\n#\n\n# Copyright Sensics, Inc. 2016.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Helper function\n\n###\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#message(STATUS \"conditional add to ${_var}: ${_path}\")\n",
        "Line" : 25,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Path invalid - do not add\n",
        "Line" : 27,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : "# Path already in list - do not add\n",
        "Line" : 32,
        "CharPositionInLine" : 12
      },
      "5" : {
        "Text" : "# Not yet in the list, so we'll add it\n",
        "Line" : 35,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Clear the working variables.\n",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Try to find the string like x86_64-w64-mingw32 by parsing the implicit link directories...\n\n# TODO this is a hack that either should be resolved in CMake or in MSYS2's package of CMake.\n",
        "Line" : 46,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Try adding the parallel include dir\n",
        "Line" : 53,
        "CharPositionInLine" : 12
      },
      "9" : {
        "Text" : "# Try going up a level, since the directory with the target is usually a sibling to the main prefix.\n",
        "Line" : 59,
        "CharPositionInLine" : 16
      },
      "10" : {
        "Text" : "# If we could go up a level, add that include dir too.\n",
        "Line" : 62,
        "CharPositionInLine" : 20
      },
      "11" : {
        "Text" : "###\n\n# Output results.\n\n###\n",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "#message(STATUS \"MINGWSEARCH_INCLUDE_DIRS ${MINGWSEARCH_INCLUDE_DIRS}\")\n",
        "Line" : 75,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "#message(STATUS \"MINGWSEARCH_LIBRARY_DIRS ${MINGWSEARCH_LIBRARY_DIRS}\")\n",
        "Line" : 80,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "#message(STATUS \"MINGWSEARCH_PREFIXES ${MINGWSEARCH_PREFIXES}\")\n",
        "Line" : 85,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "#message(STATUS \"MINGWSEARCH_TARGET_TRIPLE ${MINGWSEARCH_TARGET_TRIPLE}\")\n",
        "Line" : 90,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 16
    },
    "lib/wiiuse/cmake/OptionRequires.cmake" : {
      "ObjectId" : "662121f5796efd9215e96ef962a5e453e46561dd",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Add an option that depends on one or more variables being true.\n\n#\n\n#  option_requires(<option_name> <description> <variable_name> [<variable_name>...])\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/wiiuse/cmake/PlatformDefinitions.cmake" : {
      "ObjectId" : "17f71e6b08513d91303a0838039448a7e1b9140f",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Defines a series of preprocessor variables based on the current platform.\n\n#\n\n# Usage: define_platform_macros(PREFIX)\n\n#\n\n#  where PREFIX is the macro prefix (i.e., if PREFIX is XYZZY then the macros\n\n#  will be named XYZZY_LINUX, XYZZY_WINDOWS, etc.).\n\n#\n\n# Author:\n\n#   Kevin M. Godby <kevin@godby.org>\n\n#\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/wiiuse/cmake/PrefixListGlob.cmake" : {
      "ObjectId" : "3b1bb6460064bf62877623358d7177989ae77626",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - For each given prefix in a list, glob using the prefix+pattern\n\n#\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/wiiuse/cmake/ProgramFilesGlob.cmake" : {
      "ObjectId" : "9d7a9cc50999066a0c459b4b335fd0e846b0baef",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find bit-appropriate program files directories matching a given pattern\n\n#\n\n# Requires these CMake modules:\n\n#  CleanDirectoryList\n\n#  PrefixListGlob\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# caution - ENV{ProgramFiles} on Win64 is adjusted to point to the arch\n\n# of the running executable which, since CMake is 32-bit on Windows as\n\n# I write this, will always be = $ENV{ProgramFiles(x86)}.\n\n# Thus, we only use this environment variable if we are on a 32 machine\n",
        "Line" : 26,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# 32-bit dir on win32, useless to us on win64\n",
        "Line" : 31,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# 32-bit dir: only set on win64\n",
        "Line" : 34,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# 64-bit dir: only set on win64\n",
        "Line" : 38,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# 64-bit build on win64\n",
        "Line" : 45,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# 32-bit build on win64\n",
        "Line" : 49,
        "CharPositionInLine" : 3
      },
      "7" : {
        "Text" : "# 32-bit build on win32\n",
        "Line" : 52,
        "CharPositionInLine" : 3
      },
      "8" : {
        "Text" : "# 64-bit build on win64\n\n# look in the \"32 bit\" (c:\\program files (x86)\\) directory as a\n\n# fallback in case of weird/poorly written installers, like those\n\n# that put both 64- and 32-bit libs in the same program files directory\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# 32-bit build on win64\n\n# look in the \"64 bit\" (c:\\program files\\) directory as a fallback\n\n# in case of old/weird/poorly written installers\n",
        "Line" : 72,
        "CharPositionInLine" : 3
      },
      "10" : {
        "Text" : "# 32-bit build on win32\n",
        "Line" : 77,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 11
    },
    "lib/wiiuse/cmake/ResetConfigurations.cmake" : {
      "ObjectId" : "8c13fdf669a8a77e554a717ff5e5e001d62e4ab8",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Re-set the available configurations to just RelWithDebInfo, Release, and Debug\n\n#\n\n# Requires these CMake modules:\n\n#  no additional modules required\n\n#\n\n# Original Author:\n\n# 2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/wiiuse/cmake/SearchProgramFilesForOpenSceneGraph.cmake" : {
      "ObjectId" : "aa7165ef5edede3acd2467a8d2c809ce7399a390",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Use some smarts to try to find OpenSceneGraph in the Program Files dirs\n\n#\n\n# Also uses the OSGHOME environment variable as OSG_DIR, if it's found.\n\n#\n\n# Usage:\n\n#  include(SearchProgramFilesForOpenSceneGraph OPTIONAL)\n\n#\n\n# Requires these CMake modules:\n\n#  ListFilter\n\n#  ProgramFilesGlob\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Try to find an OSG installation\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Want them in reverse order so newer versions come up first\n",
        "Line" : 54,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# Use the environment variable to override\n",
        "Line" : 58,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# Not completely related\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "lib/wiiuse/cmake/SetDefaultBuildType.cmake" : {
      "ObjectId" : "cd29e32ac23866e6fa40439bd8df3ae001e6c4d9",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Set a developer-chosen default build type\n\n#\n\n# Requires these CMake modules:\n\n#  no additional modules required\n\n#\n\n# Original Author:\n\n# 2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#if(DEFINED CMAKE_BUILD_TYPE AND NOT CMAKE_BUILD_TYPE)\n",
        "Line" : 24,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    },
    "lib/wiiuse/cmake/SplitLibraryList.cmake" : {
      "ObjectId" : "c6e1a34427993279ba892a62b18b897d3f4f30ed",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Given a list of libraries with OPTIMIZED, DEBUG, etc.\n\n#\n\n#  split_library_list(_generalvar _releasevar _debugvar)\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/wiiuse/cmake/StampSourcesWithVersion.cmake" : {
      "ObjectId" : "147fed8fcdab71dccc6fcade6b8380d3ae9ac573",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - When enabled, stamp the current version on C/C++ sources\n\n#\n\n# To set up your source code for proper stamping, start your file\n\n# with a Doxygen-style comment block, starting with /* and ending with */\n\n# On a line by itself, with unimportant whitespace, add the standard Doxygen\n\n# \"version\" command:\n\n#  @version xxx\n\n# or\n\n#  \\version xxx\n\n#\n\n# To make sure it works, please do actually put xxx as the current version:\n\n# when you save, add one of the command below to your cmake build, and run\n\n# cmake, it should replace xxx with the current version. (It replaces anything\n\n# between the end of the whitespace after \\version and the end of the line\n\n# with the version that you pass in your build script, so put nothing else\n\n# on that line!)\n\n#\n\n# For <version>, I recommend passing the value of a CMake variable like\n\n#  ${CPACK_PACKAGE_VERSION}\n\n# Remember, reduced duplication of information means reduced errors!\n\n#\n\n# WARNING!\n\n# This does edit your source directory, but will only execute if the\n\n# (hidden/advanced, default OFF) variable ENABLE_VERSION_STAMPING is on.\n\n#\n\n# Additionally, it tries to be very careful:\n\n# - It will not edit files that are outside your source tree\n\n# - It will only attempt a substitution within the first C-style comment block\n\n# of your code (that is, the first /* */), but only if // is not found first\n\n#\n\n#  stamp_target_with_version(<version> <target_name> [HEADERS_ONLY | <source>...]) -\n\n#   If no source file is specified, all will be processed.\n\n#\n\n#  stamp_sources_with_version(<version> <source> [<source> ...]) -\n\n#   Use for files not directly associated with a target.\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Stash where our data is, at include() time\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Internal utility function - not for outside use\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# TODO: fix the sed script on Mac\n",
        "Line" : 69,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# Only if this file is in the source tree\n",
        "Line" : 77,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "# Create the sed script\n",
        "Line" : 80,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "# Run the sed script\n",
        "Line" : 97,
        "CharPositionInLine" : 3
      },
      "7" : {
        "Text" : "# Check to see if changes were made\n",
        "Line" : 106,
        "CharPositionInLine" : 3
      },
      "8" : {
        "Text" : "# if so, run it again, but in-place this time\n",
        "Line" : 120,
        "CharPositionInLine" : 3
      },
      "9" : {
        "Text" : "# We were passed HEADERS_ONLY\n",
        "Line" : 159,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# We were passed a list of files\n",
        "Line" : 168,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# We were passed only a target - process all source in the source tree.\n",
        "Line" : 172,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 12
    },
    "lib/wiiuse/cmake/StashMapConfig.cmake" : {
      "ObjectId" : "d052028eef72ebcae4ce35111e9a814bc7c42970",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Manipulate CMAKE_MAP_IMPORTED_CONFIG_ cautiously and reversibly.\n\n#\n\n# In all usage docs, <config> is a configuration name in all caps (RELEASE, DEBUG,\n\n# RELWITHDEBINFO, MINSIZEREL, and NONE are the ones made by default - NONE is how\n\n# targets are exported from single-config generators where CMAKE_BUILD_TYPE isn't set.)\n\n#\n\n#  stash_map_config(<config> <new list of configs for map imported>) and unstash_map_config(<config>)\n\n#\n\n# Saves+changes and restores the value (or unset-ness) of CMAKE_MAP_IMPORTED_CONFIG_${config}.\n\n# Re-entrant calls OK - this does actually \"push\" and \"pop\"\n\n#\n\n#  stash_common_map_config() and unstash_common_map_config()\n\n#\n\n# Calls stash_map_config/unstash_map_config for each configuration with sensible\n\n# defaults based on the platform.\n\n#\n\n# Original Author:\n\n# 2015, 2017 Ryan Pavlik <ryan@sensics.com> <abiryan@ryand.net>\n\n# http://ryanpavlik.com\n\n#\n\n# Copyright Sensics, Inc. 2015, 2017.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Re-entrancy protection - push an entry onto a list\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Actually perform the saving and replacement of CMAKE_MAP_IMPORTED_CONFIG_${config}\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Nobody actually called the matching stash...\n",
        "Line" : 47,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Get stack size so we know which entries to restore.\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Other half of re-entrancy protection - pop an entry off a list\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Restoration of CMAKE_MAP_IMPORTED_CONFIG_${config}\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Can't do this - different runtimes, incompatible ABI, etc.\n",
        "Line" : 67,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 8
    },
    "lib/wiiuse/cmake/TCHARWorkaround.cmake" : {
      "ObjectId" : "3edcd6a763791773e74076cb090a3fdf86c2a9ec",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Script to compile Win32-developed sources using tchar without modifying the code\n\n# Requires that ${CMAKE_SOURCE_DIR}/cmake/workarounds/tchar/ be present.\n\n#\n\n#\tTCHAR_WORKAROUND, automatically set to on when not on win32\n\n#\tTCHAR_INCLUDE_DIR, location of our fake tchar.h file\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/wiiuse/cmake/UseBackportedModules.cmake" : {
      "ObjectId" : "7ad3baac330a151ea08f1eff172e52f39c72752c",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Do a version-dependent check and auto-include backported modules dirs\n\n#\n\n# Name your module directories cmake-*-modules where * is the full\n\n# (maj.min.patch) version number that they came from.  You can use\n\n# subdirectories within those directories, if you like - all directories\n\n# inside of a cmake-*-modules dir for a newer version of CMake that what\n\n# we're running, that contain one or more .cmake files, will be appended\n\n# to the CMAKE_MODULE_PATH.\n\n#\n\n# When backporting modules, be sure to test them and follow copyright\n\n# instructions (usually updating copyright notices)\n\n#\n\n# Requires these CMake modules:\n\n#  CleanDirectoryList\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# defined in >=2.6.3\n",
        "Line" : 26,
        "CharPositionInLine" : 22
      },
      "2" : {
        "Text" : "# No debugging output please\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Autoinclude files from oldest version to newest version\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add the module path from newest version to oldest version\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "lib/wiiuse/cmake/UseFolders.cmake" : {
      "ObjectId" : "4fd5dfb17a5efac61496582f5e2e5a350c376af8",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Contains a function to sensibly and easily enable the \"USE_FOLDERS\" global property\n\n# without burning people using old MSVC Express Editions.\n\n#\n\n#  use_folders([option_name]) - Creates an option (default name if you don't pass\n\n#    one: BUILD_WITH_PROJECT_FOLDERS) that controls the USE_FOLDERS global property.\n\n#    It has intelligently-set defaults that err on the side of caution (disabling)\n\n#    on old MSVC versions, since solutions generated with USE_FOLDERS set to ON\n\n#    cannot be used in some older MSVC Express Editions, so it's explicit opt-in there.\n\n#\n\n# Original Author:\n\n# 2015 Ryan Pavlik <ryan@sensics.com> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n#\n\n# Copyright Sensics, Inc. 2015.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Nitpicky TODO: This unnecessarily defaults to project folders off when using\n\n# an older toolset in a newer IDE...\n",
        "Line" : 24,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# VS 2012 Express and newer has folder support...\n",
        "Line" : 27,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 3
    },
    "lib/wiiuse/cmake/UseMarkdown.cmake" : {
      "ObjectId" : "3853167eabd5b3b55571c7cdcccbd8075f62a0ed",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Convert markdown source files to HTML as a custom target\n\n#\n\n#  include(UseMarkdown)\n\n#  add_markdown_target(<target_name> <directory to copy to> <markdownfile> [<markdownfile>...] [RENAME <newname>])\n\n#    Relative paths for the destination directory are considered with\n\n#    with respect to CMAKE_CURRENT_BINARY_DIR. The RENAME argument is only\n\n#    valid with a single markdown file as input.\n\n#\n\n#\n\n#  install_markdown_target(<target_name> [extra arguments to INSTALL(FILES ...) ])\n\n#\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Original Author:\n\n# 2011 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2011-2012.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Produce an absolute path to the input file\n",
        "Line" : 66,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Clean up output file name\n",
        "Line" : 77,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Custom target depending on all the file copy commands\n",
        "Line" : 98,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# Forward the call to install\n",
        "Line" : 114,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 5
    },
    "lib/wiiuse/cmake/UseTR1.cmake" : {
      "ObjectId" : "c7f020a6643c111c22a29f6c017cd709ef6970a0",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Use settings to enable access to C++ TR1\n\n#\n\n# This calls include_directories and link_directories as needed to\n\n# permit TR1 support.\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/wiiuse/cmake/WarningDev.cmake" : {
      "ObjectId" : "851b5f5e88c9eec3be5c5b65b4902f1b78e7e3d2",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Print a developer warning, using author_warning if we have cmake 2.8\n\n#\n\n#  warning_dev(\"your desired message\")\n\n#\n\n# Original Author:\n\n# 2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMake version <2.8.0\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "lib/wiiuse/cmake/cmake-2.8.0-modules/features/SelectLibraryConfigurations.cmake" : {
      "ObjectId" : "ee1220ccda70a335fe0f73780382df060cbb1c87",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# select_library_configurations( basename )\n\n#\n\n# This macro takes a library base name as an argument, and will choose good\n\n# values for basename_LIBRARY, basename_LIBRARIES, basename_LIBRARY_DEBUG, and\n\n# basename_LIBRARY_RELEASE depending on what has been found and set.  If only\n\n# basename_LIBRARY_RELEASE is defined, basename_LIBRARY, basename_LIBRARY_DEBUG,\n\n# and basename_LIBRARY_RELEASE will be set to the release value.  If only\n\n# basename_LIBRARY_DEBUG is defined, then basename_LIBRARY,\n\n# basename_LIBRARY_DEBUG and basename_LIBRARY_RELEASE will take the debug value.  \n\n#\n\n# If the generator supports configuration types, then basename_LIBRARY and\n\n# basename_LIBRARIES will be set with debug and optimized flags specifying the\n\n# library to be used for the given configuration.  If no build type has been set\n\n# or the generator in use does not support configuration types, then\n\n# basename_LIBRARY and basename_LIBRARIES will take only the release values.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2009 Kitware, Inc.\n\n# Copyright 2009 Will Dicharry <wdicharry@stellarscience.com>\n\n# Copyright 2005-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see below.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# \n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# \n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n# \n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n# \n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n\n# This macro was adapted from the FindQt4 CMake module and is maintained by Will\n\n# Dicharry <wdicharry@stellarscience.com>.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Utility macro to check if one variable exists while another doesn't, and set\n\n# one that doesn't exist to the one that exists.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# if only the release version was found, set the debug to be the release\n\n# version.\n",
        "Line" : 72,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# if only the debug version was found, set the release value to be the\n\n# debug value.\n",
        "Line" : 75,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# if the generator supports configuration types or CMAKE_BUILD_TYPE\n\n# is set, then set optimized and debug options.\n",
        "Line" : 79,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# If there are no configuration types or build type, just use\n\n# the release version\n",
        "Line" : 89,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 7
    },
    "lib/wiiuse/cmake/cmake-2.8.0-modules/osg/FindOpenSceneGraph.cmake" : {
      "ObjectId" : "a86d8edb178588484639cd69ce091af237a34cb4",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find OpenSceneGraph\n\n# This module searches for the OpenSceneGraph core \"osg\" library as well as\n\n# OpenThreads, and whatever additional COMPONENTS (nodekits) that you specify.\n\n#    See http://www.openscenegraph.org\n\n#\n\n# NOTE: To use this module effectively you must either require CMake >= 2.6.3\n\n# with cmake_minimum_required(VERSION 2.6.3) or download and place\n\n# FindOpenThreads.cmake, Findosg_functions.cmake, Findosg.cmake,\n\n# and Find<etc>.cmake files into your CMAKE_MODULE_PATH.\n\n#\n\n#==================================\n\n#\n\n# This module accepts the following variables (note mixed case)\n\n#\n\n#    OpenSceneGraph_DEBUG - Enable debugging output\n\n#\n\n#    OpenSceneGraph_MARK_AS_ADVANCED - Mark cache variables as advanced \n\n#                                      automatically\n\n#\n\n# The following environment variables are also respected for finding the OSG\n\n# and it's various components.  CMAKE_PREFIX_PATH can also be used for this\n\n# (see find_library() CMake documentation).\n\n#\n\n#    <MODULE>_DIR (where MODULE is of the form \"OSGVOLUME\" and there is a FindosgVolume.cmake file)\n\n#    OSG_DIR\n\n#    OSGDIR\n\n#    OSG_ROOT\n\n#\n\n# This module defines the following output variables:\n\n#\n\n#    OPENSCENEGRAPH_FOUND - Was the OSG and all of the specified components found?\n\n#\n\n#    OPENSCENEGRAPH_VERSION - The version of the OSG which was found\n\n#\n\n#    OPENSCENEGRAPH_INCLUDE_DIRS - Where to find the headers\n\n#\n\n#    OPENSCENEGRAPH_LIBRARIES - The OSG libraries\n\n#\n\n#==================================\n\n# Example Usage:\n\n#\n\n#  find_package(OpenSceneGraph 2.0.0 REQUIRED osgDB osgUtil)\n\n#      # libOpenThreads & libosg automatically searched\n\n#  include_directories(${OPENSCENEGRAPH_INCLUDE_DIRS})\n\n#\n\n#  add_executable(foo foo.cc)\n\n#  target_link_libraries(foo ${OPENSCENEGRAPH_LIBRARIES})\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2009 Kitware, Inc.\n\n# Copyright 2009 Philip Lowman <philip@yhbt.com>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see below.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# \n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# \n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n# \n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n# \n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Naming convention:\n\n#  Local variables of the form _osg_foo\n\n#  Input variables of the form OpenSceneGraph_FOO\n\n#  Output variables of the form OPENSCENEGRAPH_FOO\n\n#\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# First we need to find and parse osg/Version\n\n#\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Try to ascertain the version...\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# Version checking\n\n#\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# version is too low\n",
        "Line" : 178,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "#\n\n# Here we call FIND_PACKAGE() on all of the components\n\n#\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n\n# Inform the users with an error message based on\n\n# what version they have vs. what version was\n\n# required.\n\n#\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#\n\n# Check each module to see if it's found\n\n#\n",
        "Line" : 239,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Zero out everything, we didn't meet version requirements\n",
        "Line" : 266,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 11
    },
    "lib/wiiuse/cmake/cmake-2.8.0-modules/osg/FindOpenThreads.cmake" : {
      "ObjectId" : "b946889211a7b22f242d91057ce50dd0d10f5f1e",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# OpenThreads is a C++ based threading library. Its largest userbase \n\n# seems to OpenSceneGraph so you might notice I accept OSGDIR as an\n\n# environment path.\n\n# I consider this part of the Findosg* suite used to find OpenSceneGraph \n\n# components.\n\n# Each component is separate and you must opt in to each module.\n\n# \n\n# Locate OpenThreads\n\n# This module defines\n\n# OPENTHREADS_LIBRARY\n\n# OPENTHREADS_FOUND, if false, do not try to link to OpenThreads\n\n# OPENTHREADS_INCLUDE_DIR, where to find the headers\n\n#\n\n# $OPENTHREADS_DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$OPENTHREADS_DIR\n\n# used in building osg.\n\n#\n\n# Created by Eric Wing.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2007-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see below.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# \n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# \n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n# \n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n# \n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Header files are presumed to be included like\n\n# #include <OpenThreads/Thread>\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# To make it easier for one-step automated configuration/builds,\n\n# we leverage environmental paths. This is preferable \n\n# to the -DVAR=value switches because it insulates the \n\n# users from changes we may make in this script.\n\n# It also offers a little more flexibility than setting\n\n# the CMAKE_*_PATH since we can target specific components.\n\n# However, the default CMake behavior will search system paths\n\n# before anything else. This is problematic in the cases\n\n# where you have an older (stable) version installed, but\n\n# are trying to build a newer version.\n\n# CMake doesn't offer a nice way to globally control this behavior\n\n# so we have to do a nasty \"double FIND_\" in this module.\n\n# The first FIND disables the CMAKE_ search paths and only checks\n\n# the environmental paths.\n\n# If nothing is found, then the second find will search the\n\n# standard install paths.\n\n# Explicit -DVAR=value arguments should still be able to override everything.\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# enough environment variables?\n",
        "Line" : 83,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Fink\n",
        "Line" : 92,
        "CharPositionInLine" : 12
      },
      "6" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 93,
        "CharPositionInLine" : 19
      },
      "7" : {
        "Text" : "# Blastwave\n",
        "Line" : 94,
        "CharPositionInLine" : 17
      },
      "CommentCount" : 8
    },
    "lib/wiiuse/cmake/cmake-2.8.0-modules/osg/Findosg.cmake" : {
      "ObjectId" : "b9591a21f250232ab5ea862157a7e224dda9670b",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# NOTE: It is highly recommended that you use the new FindOpenSceneGraph.cmake\n\n# introduced in CMake 2.6.3 and not use this Find module directly.\n\n#\n\n# This is part of the Findosg* suite used to find OpenSceneGraph components.\n\n# Each component is separate and you must opt in to each module. You must \n\n# also opt into OpenGL and OpenThreads (and Producer if needed) as these \n\n# modules won't do it for you. This is to allow you control over your own \n\n# system piece by piece in case you need to opt out of certain components\n\n# or change the Find behavior for a particular module (perhaps because the\n\n# default FindOpenGL.cmake module doesn't work with your system as an\n\n# example).\n\n# If you want to use a more convenient module that includes everything,\n\n# use the FindOpenSceneGraph.cmake instead of the Findosg*.cmake modules.\n\n# \n\n# Locate osg\n\n# This module defines\n\n#\n\n# OSG_FOUND - Was the Osg found?\n\n# OSG_INCLUDE_DIR - Where to find the headers\n\n# OSG_LIBRARIES - The libraries to link against for the OSG (use this)\n\n#\n\n# OSG_LIBRARY - The OSG library\n\n# OSG_LIBRARY_DEBUG - The OSG debug library\n\n#\n\n# $OSGDIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$OSGDIR\n\n# used in building osg.\n\n#\n\n# Created by Eric Wing.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2007-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see below.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# \n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# \n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n# \n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n# \n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Header files are presumed to be included like\n\n# #include <osg/PositionAttitudeTransform>\n\n# #include <osgUtil/SceneView>\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "lib/wiiuse/cmake/cmake-2.8.0-modules/osg/FindosgAnimation.cmake" : {
      "ObjectId" : "57bd5d805e35a263b99e04914ed3f3f213d75a41",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is part of the Findosg* suite used to find OpenSceneGraph components.\n\n# Each component is separate and you must opt in to each module. You must \n\n# also opt into OpenGL and OpenThreads (and Producer if needed) as these \n\n# modules won't do it for you. This is to allow you control over your own \n\n# system piece by piece in case you need to opt out of certain components\n\n# or change the Find behavior for a particular module (perhaps because the\n\n# default FindOpenGL.cmake module doesn't work with your system as an\n\n# example).\n\n# If you want to use a more convenient module that includes everything,\n\n# use the FindOpenSceneGraph.cmake instead of the Findosg*.cmake modules.\n\n# \n\n# Locate osgAnimation\n\n# This module defines\n\n#\n\n# OSGANIMATION_FOUND - Was osgAnimation found?\n\n# OSGANIMATION_INCLUDE_DIR - Where to find the headers\n\n# OSGANIMATION_LIBRARIES - The libraries to link against for the OSG (use this)\n\n#\n\n# OSGANIMATION_LIBRARY - The OSG library\n\n# OSGANIMATION_LIBRARY_DEBUG - The OSG debug library\n\n#\n\n# $OSGDIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$OSGDIR\n\n# used in building osg.\n\n#\n\n# Created by Eric Wing.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2007-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see below.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# \n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# \n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n# \n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n# \n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Header files are presumed to be included like\n\n# #include <osg/PositionAttitudeTransform>\n\n# #include <osgAnimation/Animation>\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "lib/wiiuse/cmake/cmake-2.8.0-modules/osg/FindosgDB.cmake" : {
      "ObjectId" : "990089670d83996c45a6d94cff264a5537ae4f51",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is part of the Findosg* suite used to find OpenSceneGraph components.\n\n# Each component is separate and you must opt in to each module. You must \n\n# also opt into OpenGL and OpenThreads (and Producer if needed) as these \n\n# modules won't do it for you. This is to allow you control over your own \n\n# system piece by piece in case you need to opt out of certain components\n\n# or change the Find behavior for a particular module (perhaps because the\n\n# default FindOpenGL.cmake module doesn't work with your system as an\n\n# example).\n\n# If you want to use a more convenient module that includes everything,\n\n# use the FindOpenSceneGraph.cmake instead of the Findosg*.cmake modules.\n\n# \n\n# Locate osgDB\n\n# This module defines\n\n#\n\n# OSGDB_FOUND - Was osgDB found?\n\n# OSGDB_INCLUDE_DIR - Where to find the headers\n\n# OSGDB_LIBRARIES - The libraries to link against for the osgDB (use this)\n\n#\n\n# OSGDB_LIBRARY - The osgDB library\n\n# OSGDB_LIBRARY_DEBUG - The osgDB debug library\n\n#\n\n# $OSGDIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$OSGDIR\n\n# used in building osg.\n\n#\n\n# Created by Eric Wing.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2007-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see below.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# \n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# \n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n# \n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n# \n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Header files are presumed to be included like\n\n# #include <osg/PositionAttitudeTransform>\n\n# #include <osgDB/DatabasePager>\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "lib/wiiuse/cmake/cmake-2.8.0-modules/osg/FindosgFX.cmake" : {
      "ObjectId" : "8fb222549e490869109efe7f185824114bed6294",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is part of the Findosg* suite used to find OpenSceneGraph components.\n\n# Each component is separate and you must opt in to each module. You must \n\n# also opt into OpenGL and OpenThreads (and Producer if needed) as these \n\n# modules won't do it for you. This is to allow you control over your own \n\n# system piece by piece in case you need to opt out of certain components\n\n# or change the Find behavior for a particular module (perhaps because the\n\n# default FindOpenGL.cmake module doesn't work with your system as an\n\n# example).\n\n# If you want to use a more convenient module that includes everything,\n\n# use the FindOpenSceneGraph.cmake instead of the Findosg*.cmake modules.\n\n# \n\n# Locate osgFX\n\n# This module defines\n\n#\n\n# OSGFX_FOUND - Was osgFX found?\n\n# OSGFX_INCLUDE_DIR - Where to find the headers\n\n# OSGFX_LIBRARIES - The libraries to link against for the osgFX (use this)\n\n#\n\n# OSGFX_LIBRARY - The osgFX library\n\n# OSGFX_LIBRARY_DEBUG - The osgFX debug library\n\n#\n\n# $OSGDIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$OSGDIR\n\n# used in building osg.\n\n#\n\n# Created by Eric Wing.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2007-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see below.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# \n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# \n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n# \n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n# \n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Header files are presumed to be included like\n\n# #include <osg/PositionAttitudeTransform>\n\n# #include <osgFX/BumpMapping>\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "lib/wiiuse/cmake/cmake-2.8.0-modules/osg/FindosgGA.cmake" : {
      "ObjectId" : "1e0f06e27d926623ad2c4ac3ca518e0f01f5ec96",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is part of the Findosg* suite used to find OpenSceneGraph components.\n\n# Each component is separate and you must opt in to each module. You must \n\n# also opt into OpenGL and OpenThreads (and Producer if needed) as these \n\n# modules won't do it for you. This is to allow you control over your own \n\n# system piece by piece in case you need to opt out of certain components\n\n# or change the Find behavior for a particular module (perhaps because the\n\n# default FindOpenGL.cmake module doesn't work with your system as an\n\n# example).\n\n# If you want to use a more convenient module that includes everything,\n\n# use the FindOpenSceneGraph.cmake instead of the Findosg*.cmake modules.\n\n# \n\n# Locate osgGA\n\n# This module defines\n\n#\n\n# OSGGA_FOUND - Was osgGA found?\n\n# OSGGA_INCLUDE_DIR - Where to find the headers\n\n# OSGGA_LIBRARIES - The libraries to link against for the osgGA (use this)\n\n#\n\n# OSGGA_LIBRARY - The osgGA library\n\n# OSGGA_LIBRARY_DEBUG - The osgGA debug library\n\n#\n\n# $OSGDIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$OSGDIR\n\n# used in building osg.\n\n#\n\n# Created by Eric Wing.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2007-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see below.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# \n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# \n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n# \n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n# \n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Header files are presumed to be included like\n\n# #include <osg/PositionAttitudeTransform>\n\n# #include <osgGA/FlightManipulator>\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "lib/wiiuse/cmake/cmake-2.8.0-modules/osg/FindosgIntrospection.cmake" : {
      "ObjectId" : "0ebb45f2ecf3f91225bf29322070a6835c3af9a6",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is part of the Findosg* suite used to find OpenSceneGraph components.\n\n# Each component is separate and you must opt in to each module. You must \n\n# also opt into OpenGL and OpenThreads (and Producer if needed) as these \n\n# modules won't do it for you. This is to allow you control over your own \n\n# system piece by piece in case you need to opt out of certain components\n\n# or change the Find behavior for a particular module (perhaps because the\n\n# default FindOpenGL.cmake module doesn't work with your system as an\n\n# example).\n\n# If you want to use a more convenient module that includes everything,\n\n# use the FindOpenSceneGraph.cmake instead of the Findosg*.cmake modules.\n\n# \n\n# Locate osgINTROSPECTION\n\n# This module defines\n\n#\n\n# OSGINTROSPECTION_FOUND - Was osgIntrospection found?\n\n# OSGINTROSPECTION_INCLUDE_DIR - Where to find the headers\n\n# OSGINTROSPECTION_LIBRARIES - The libraries to link for osgIntrospection (use this)\n\n#\n\n# OSGINTROSPECTION_LIBRARY - The osgIntrospection library\n\n# OSGINTROSPECTION_LIBRARY_DEBUG - The osgIntrospection debug library\n\n#\n\n# $OSGDIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$OSGDIR\n\n# used in building osg.\n\n#\n\n# Created by Eric Wing.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2007-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see below.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# \n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# \n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n# \n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n# \n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Header files are presumed to be included like\n\n# #include <osg/PositionAttitudeTransform>\n\n# #include <osgIntrospection/Reflection>\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "lib/wiiuse/cmake/cmake-2.8.0-modules/osg/FindosgManipulator.cmake" : {
      "ObjectId" : "b2362aab6f8668de1b2a1bb52b1a0bba3562405b",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is part of the Findosg* suite used to find OpenSceneGraph components.\n\n# Each component is separate and you must opt in to each module. You must \n\n# also opt into OpenGL and OpenThreads (and Producer if needed) as these \n\n# modules won't do it for you. This is to allow you control over your own \n\n# system piece by piece in case you need to opt out of certain components\n\n# or change the Find behavior for a particular module (perhaps because the\n\n# default FindOpenGL.cmake module doesn't work with your system as an\n\n# example).\n\n# If you want to use a more convenient module that includes everything,\n\n# use the FindOpenSceneGraph.cmake instead of the Findosg*.cmake modules.\n\n# \n\n# Locate osgManipulator\n\n# This module defines\n\n#\n\n# OSGMANIPULATOR_FOUND - Was osgManipulator found?\n\n# OSGMANIPULATOR_INCLUDE_DIR - Where to find the headers\n\n# OSGMANIPULATOR_LIBRARIES - The libraries to link for osgManipulator (use this)\n\n#\n\n# OSGMANIPULATOR_LIBRARY - The osgManipulator library\n\n# OSGMANIPULATOR_LIBRARY_DEBUG - The osgManipulator debug library\n\n#\n\n# $OSGDIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$OSGDIR\n\n# used in building osg.\n\n#\n\n# Created by Eric Wing.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2007-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see below.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# \n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# \n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n# \n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n# \n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Header files are presumed to be included like\n\n# #include <osg/PositionAttitudeTransform>\n\n# #include <osgManipulator/TrackballDragger>\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "lib/wiiuse/cmake/cmake-2.8.0-modules/osg/FindosgParticle.cmake" : {
      "ObjectId" : "c668739bafa3cfc75e4023c8f85cceb5dddd8b71",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is part of the Findosg* suite used to find OpenSceneGraph components.\n\n# Each component is separate and you must opt in to each module. You must \n\n# also opt into OpenGL and OpenThreads (and Producer if needed) as these \n\n# modules won't do it for you. This is to allow you control over your own \n\n# system piece by piece in case you need to opt out of certain components\n\n# or change the Find behavior for a particular module (perhaps because the\n\n# default FindOpenGL.cmake module doesn't work with your system as an\n\n# example).\n\n# If you want to use a more convenient module that includes everything,\n\n# use the FindOpenSceneGraph.cmake instead of the Findosg*.cmake modules.\n\n# \n\n# Locate osgParticle\n\n# This module defines\n\n#\n\n# OSGPARTICLE_FOUND - Was osgParticle found?\n\n# OSGPARTICLE_INCLUDE_DIR - Where to find the headers\n\n# OSGPARTICLE_LIBRARIES - The libraries to link for osgParticle (use this)\n\n#\n\n# OSGPARTICLE_LIBRARY - The osgParticle library\n\n# OSGPARTICLE_LIBRARY_DEBUG - The osgParticle debug library\n\n#\n\n# $OSGDIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$OSGDIR\n\n# used in building osg.\n\n#\n\n# Created by Eric Wing.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2007-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see below.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# \n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# \n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n# \n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n# \n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Header files are presumed to be included like\n\n# #include <osg/PositionAttitudeTransform>\n\n# #include <osgParticle/FireEffect>\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "lib/wiiuse/cmake/cmake-2.8.0-modules/osg/FindosgProducer.cmake" : {
      "ObjectId" : "dd28b16340b4b8e461da2c5a613c7b10e4c659bb",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is part of the Findosg* suite used to find OpenSceneGraph components.\n\n# Each component is separate and you must opt in to each module. You must \n\n# also opt into OpenGL and OpenThreads (and Producer if needed) as these \n\n# modules won't do it for you. This is to allow you control over your own \n\n# system piece by piece in case you need to opt out of certain components\n\n# or change the Find behavior for a particular module (perhaps because the\n\n# default FindOpenGL.cmake module doesn't work with your system as an\n\n# example).\n\n# If you want to use a more convenient module that includes everything,\n\n# use the FindOpenSceneGraph.cmake instead of the Findosg*.cmake modules.\n\n# \n\n# Locate osgProducer\n\n# This module defines\n\n#\n\n# OSGPRODUCER_FOUND - Was osgProducer found?\n\n# OSGPRODUCER_INCLUDE_DIR - Where to find the headers\n\n# OSGPRODUCER_LIBRARIES - The libraries to link for osgProducer (use this)\n\n#\n\n# OSGPRODUCER_LIBRARY - The osgProducer library\n\n# OSGPRODUCER_LIBRARY_DEBUG - The osgProducer debug library\n\n#\n\n# $OSGDIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$OSGDIR\n\n# used in building osg.\n\n#\n\n# Created by Eric Wing.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2007-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see below.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# \n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# \n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n# \n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n# \n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Header files are presumed to be included like\n\n# #include <osg/PositionAttitudeTransform>\n\n# #include <osgProducer/OsgSceneHandler>\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "lib/wiiuse/cmake/cmake-2.8.0-modules/osg/FindosgShadow.cmake" : {
      "ObjectId" : "60da582a70173738fd9c4143de849f02e2024a7f",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is part of the Findosg* suite used to find OpenSceneGraph components.\n\n# Each component is separate and you must opt in to each module. You must \n\n# also opt into OpenGL and OpenThreads (and Producer if needed) as these \n\n# modules won't do it for you. This is to allow you control over your own \n\n# system piece by piece in case you need to opt out of certain components\n\n# or change the Find behavior for a particular module (perhaps because the\n\n# default FindOpenGL.cmake module doesn't work with your system as an\n\n# example).\n\n# If you want to use a more convenient module that includes everything,\n\n# use the FindOpenSceneGraph.cmake instead of the Findosg*.cmake modules.\n\n# \n\n# Locate osgShadow\n\n# This module defines\n\n#\n\n# OSGSHADOW_FOUND - Was osgShadow found?\n\n# OSGSHADOW_INCLUDE_DIR - Where to find the headers\n\n# OSGSHADOW_LIBRARIES - The libraries to link for osgShadow (use this)\n\n#\n\n# OSGSHADOW_LIBRARY - The osgShadow library\n\n# OSGSHADOW_LIBRARY_DEBUG - The osgShadow debug library\n\n#\n\n# $OSGDIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$OSGDIR\n\n# used in building osg.\n\n#\n\n# Created by Eric Wing.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2007-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see below.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# \n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# \n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n# \n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n# \n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Header files are presumed to be included like\n\n# #include <osg/PositionAttitudeTransform>\n\n# #include <osgShadow/ShadowTexture>\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "lib/wiiuse/cmake/cmake-2.8.0-modules/osg/FindosgSim.cmake" : {
      "ObjectId" : "14c390983ed5840c1f96d3a449d38773cecb4257",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is part of the Findosg* suite used to find OpenSceneGraph components.\n\n# Each component is separate and you must opt in to each module. You must \n\n# also opt into OpenGL and OpenThreads (and Producer if needed) as these \n\n# modules won't do it for you. This is to allow you control over your own \n\n# system piece by piece in case you need to opt out of certain components\n\n# or change the Find behavior for a particular module (perhaps because the\n\n# default FindOpenGL.cmake module doesn't work with your system as an\n\n# example).\n\n# If you want to use a more convenient module that includes everything,\n\n# use the FindOpenSceneGraph.cmake instead of the Findosg*.cmake modules.\n\n# \n\n# Locate osgSim\n\n# This module defines\n\n#\n\n# OSGSIM_FOUND - Was osgSim found?\n\n# OSGSIM_INCLUDE_DIR - Where to find the headers\n\n# OSGSIM_LIBRARIES - The libraries to link for osgSim (use this)\n\n#\n\n# OSGSIM_LIBRARY - The osgSim library\n\n# OSGSIM_LIBRARY_DEBUG - The osgSim debug library\n\n#\n\n# $OSGDIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$OSGDIR\n\n# used in building osg.\n\n#\n\n# Created by Eric Wing.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2007-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see below.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# \n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# \n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n# \n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n# \n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Header files are presumed to be included like\n\n# #include <osg/PositionAttitudeTransform>\n\n# #include <osgSim/ImpostorSprite>\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "lib/wiiuse/cmake/cmake-2.8.0-modules/osg/FindosgTerrain.cmake" : {
      "ObjectId" : "20cf569011e758f123a2a8b7eea8d227bf96ece7",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is part of the Findosg* suite used to find OpenSceneGraph components.\n\n# Each component is separate and you must opt in to each module. You must \n\n# also opt into OpenGL and OpenThreads (and Producer if needed) as these \n\n# modules won't do it for you. This is to allow you control over your own \n\n# system piece by piece in case you need to opt out of certain components\n\n# or change the Find behavior for a particular module (perhaps because the\n\n# default FindOpenGL.cmake module doesn't work with your system as an\n\n# example).\n\n# If you want to use a more convenient module that includes everything,\n\n# use the FindOpenSceneGraph.cmake instead of the Findosg*.cmake modules.\n\n# \n\n# Locate osgTerrain\n\n# This module defines\n\n#\n\n# OSGTERRAIN_FOUND - Was osgTerrain found?\n\n# OSGTERRAIN_INCLUDE_DIR - Where to find the headers\n\n# OSGTERRAIN_LIBRARIES - The libraries to link for osgTerrain (use this)\n\n#\n\n# OSGTERRAIN_LIBRARY - The osgTerrain library\n\n# OSGTERRAIN_LIBRARY_DEBUG - The osgTerrain debug library\n\n#\n\n# $OSGDIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$OSGDIR\n\n# used in building osg.\n\n#\n\n# Created by Eric Wing.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2007-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see below.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# \n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# \n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n# \n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n# \n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Header files are presumed to be included like\n\n# #include <osg/PositionAttitudeTransform>\n\n# #include <osgTerrain/Terrain>\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "lib/wiiuse/cmake/cmake-2.8.0-modules/osg/FindosgText.cmake" : {
      "ObjectId" : "81f9740abb2188ac5c598f4a4773fd93603aa557",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is part of the Findosg* suite used to find OpenSceneGraph components.\n\n# Each component is separate and you must opt in to each module. You must \n\n# also opt into OpenGL and OpenThreads (and Producer if needed) as these \n\n# modules won't do it for you. This is to allow you control over your own \n\n# system piece by piece in case you need to opt out of certain components\n\n# or change the Find behavior for a particular module (perhaps because the\n\n# default FindOpenGL.cmake module doesn't work with your system as an\n\n# example).\n\n# If you want to use a more convenient module that includes everything,\n\n# use the FindOpenSceneGraph.cmake instead of the Findosg*.cmake modules.\n\n# \n\n# Locate osgText\n\n# This module defines\n\n#\n\n# OSGTEXT_FOUND - Was osgText found?\n\n# OSGTEXT_INCLUDE_DIR - Where to find the headers\n\n# OSGTEXT_LIBRARIES - The libraries to link for osgText (use this)\n\n#\n\n# OSGTEXT_LIBRARY - The osgText library\n\n# OSGTEXT_LIBRARY_DEBUG - The osgText debug library\n\n#\n\n# $OSGDIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$OSGDIR\n\n# used in building osg.\n\n#\n\n# Created by Eric Wing.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2007-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see below.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# \n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# \n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n# \n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n# \n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Header files are presumed to be included like\n\n# #include <osg/PositionAttitudeTransform>\n\n# #include <osgText/Text>\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "lib/wiiuse/cmake/cmake-2.8.0-modules/osg/FindosgUtil.cmake" : {
      "ObjectId" : "088409640bf7d820855281b2c577896378999e5c",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is part of the Findosg* suite used to find OpenSceneGraph components.\n\n# Each component is separate and you must opt in to each module. You must \n\n# also opt into OpenGL and OpenThreads (and Producer if needed) as these \n\n# modules won't do it for you. This is to allow you control over your own \n\n# system piece by piece in case you need to opt out of certain components\n\n# or change the Find behavior for a particular module (perhaps because the\n\n# default FindOpenGL.cmake module doesn't work with your system as an\n\n# example).\n\n# If you want to use a more convenient module that includes everything,\n\n# use the FindOpenSceneGraph.cmake instead of the Findosg*.cmake modules.\n\n# \n\n# Locate osgUtil\n\n# This module defines\n\n#\n\n# OSGUTIL_FOUND - Was osgUtil found?\n\n# OSGUTIL_INCLUDE_DIR - Where to find the headers\n\n# OSGUTIL_LIBRARIES - The libraries to link for osgUtil (use this)\n\n#\n\n# OSGUTIL_LIBRARY - The osgUtil library\n\n# OSGUTIL_LIBRARY_DEBUG - The osgUtil debug library\n\n#\n\n# $OSGDIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$OSGDIR\n\n# used in building osg.\n\n#\n\n# Created by Eric Wing.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2007-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see below.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# \n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# \n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n# \n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n# \n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Header files are presumed to be included like\n\n# #include <osg/PositionAttitudeTransform>\n\n# #include <osgUtil/SceneView>\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "lib/wiiuse/cmake/cmake-2.8.0-modules/osg/FindosgViewer.cmake" : {
      "ObjectId" : "04df4133413eae63351090ea25f76a9bc57e9bbf",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is part of the Findosg* suite used to find OpenSceneGraph components.\n\n# Each component is separate and you must opt in to each module. You must \n\n# also opt into OpenGL and OpenThreads (and Producer if needed) as these \n\n# modules won't do it for you. This is to allow you control over your own \n\n# system piece by piece in case you need to opt out of certain components\n\n# or change the Find behavior for a particular module (perhaps because the\n\n# default FindOpenGL.cmake module doesn't work with your system as an\n\n# example).\n\n# If you want to use a more convenient module that includes everything,\n\n# use the FindOpenSceneGraph.cmake instead of the Findosg*.cmake modules.\n\n# \n\n# Locate osgViewer\n\n# This module defines\n\n#\n\n# OSGVIEWER_FOUND - Was osgViewer found?\n\n# OSGVIEWER_INCLUDE_DIR - Where to find the headers\n\n# OSGVIEWER_LIBRARIES - The libraries to link for osgViewer (use this)\n\n#\n\n# OSGVIEWER_LIBRARY - The osgViewer library\n\n# OSGVIEWER_LIBRARY_DEBUG - The osgViewer debug library\n\n#\n\n# $OSGDIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$OSGDIR\n\n# used in building osg.\n\n#\n\n# Created by Eric Wing.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2007-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see below.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# \n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# \n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n# \n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n# \n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Header files are presumed to be included like\n\n# #include <osg/PositionAttitudeTransform>\n\n# #include <osgViewer/Viewer>\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "lib/wiiuse/cmake/cmake-2.8.0-modules/osg/FindosgVolume.cmake" : {
      "ObjectId" : "6c666c47b51d2f0d79e41d82f057459583a65cb0",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is part of the Findosg* suite used to find OpenSceneGraph components.\n\n# Each component is separate and you must opt in to each module. You must \n\n# also opt into OpenGL and OpenThreads (and Producer if needed) as these \n\n# modules won't do it for you. This is to allow you control over your own \n\n# system piece by piece in case you need to opt out of certain components\n\n# or change the Find behavior for a particular module (perhaps because the\n\n# default FindOpenGL.cmake module doesn't work with your system as an\n\n# example).\n\n# If you want to use a more convenient module that includes everything,\n\n# use the FindOpenSceneGraph.cmake instead of the Findosg*.cmake modules.\n\n# \n\n# Locate osgVolume\n\n# This module defines\n\n#\n\n# OSGVOLUME_FOUND - Was osgVolume found?\n\n# OSGVOLUME_INCLUDE_DIR - Where to find the headers\n\n# OSGVOLUME_LIBRARIES - The libraries to link for osgVolume (use this)\n\n#\n\n# OSGVOLUME_LIBRARY - The osgVolume library\n\n# OSGVOLUME_LIBRARY_DEBUG - The osgVolume debug library\n\n#\n\n# $OSGDIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$OSGDIR\n\n# used in building osg.\n\n#\n\n# Created by Eric Wing.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2007-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see below.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# \n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# \n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n# \n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n# \n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Header files are presumed to be included like\n\n# #include <osg/PositionAttitudeTransform>\n\n# #include <osgVolume/Volume>\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "lib/wiiuse/cmake/cmake-2.8.0-modules/osg/FindosgWidget.cmake" : {
      "ObjectId" : "227bbce40868770b2a78c70e86a48c12e6b3e181",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is part of the Findosg* suite used to find OpenSceneGraph components.\n\n# Each component is separate and you must opt in to each module. You must \n\n# also opt into OpenGL and OpenThreads (and Producer if needed) as these \n\n# modules won't do it for you. This is to allow you control over your own \n\n# system piece by piece in case you need to opt out of certain components\n\n# or change the Find behavior for a particular module (perhaps because the\n\n# default FindOpenGL.cmake module doesn't work with your system as an\n\n# example).\n\n# If you want to use a more convenient module that includes everything,\n\n# use the FindOpenSceneGraph.cmake instead of the Findosg*.cmake modules.\n\n# \n\n# Locate osgWidget\n\n# This module defines\n\n#\n\n# OSGWIDGET_FOUND - Was osgWidget found?\n\n# OSGWIDGET_INCLUDE_DIR - Where to find the headers\n\n# OSGWIDGET_LIBRARIES - The libraries to link for osgWidget (use this)\n\n#\n\n# OSGWIDGET_LIBRARY - The osgWidget library\n\n# OSGWIDGET_LIBRARY_DEBUG - The osgWidget debug library\n\n#\n\n# $OSGDIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$OSGDIR\n\n# used in building osg.\n\n#\n\n# FindosgWidget.cmake tweaked from Findosg* suite as created by Eric Wing.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2007-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see below.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# \n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# \n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n# \n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n# \n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Header files are presumed to be included like\n\n# #include <osg/PositionAttitudeTransform>\n\n# #include <osgWidget/Widget>\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "lib/wiiuse/cmake/cmake-2.8.0-modules/osg/Findosg_functions.cmake" : {
      "ObjectId" : "19f180350131ad5a416f369cfe40e51f708560c9",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# This CMake file contains two macros to assist with searching for OSG\n\n# libraries and nodekits.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2009 Kitware, Inc.\n\n# Copyright 2009 Philip Lowman <philip@yhbt.com>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see below.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# \n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# \n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n# \n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n# \n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# OSG_FIND_PATH\n\n#\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Try the user's environment request before anything else.\n",
        "Line" : 53,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# Fink\n",
        "Line" : 62,
        "CharPositionInLine" : 16
      },
      "5" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 63,
        "CharPositionInLine" : 23
      },
      "6" : {
        "Text" : "# Blastwave\n",
        "Line" : 64,
        "CharPositionInLine" : 21
      },
      "7" : {
        "Text" : "#\n\n# OSG_FIND_LIBRARY\n\n#\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Fink\n",
        "Line" : 86,
        "CharPositionInLine" : 16
      },
      "9" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 87,
        "CharPositionInLine" : 23
      },
      "10" : {
        "Text" : "# Blastwave\n",
        "Line" : 88,
        "CharPositionInLine" : 21
      },
      "11" : {
        "Text" : "# Fink\n",
        "Line" : 102,
        "CharPositionInLine" : 16
      },
      "12" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 103,
        "CharPositionInLine" : 23
      },
      "13" : {
        "Text" : "# Blastwave\n",
        "Line" : 104,
        "CharPositionInLine" : 21
      },
      "14" : {
        "Text" : "# They don't have a debug library\n",
        "Line" : 110,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "# They really have a FOO_LIBRARY_DEBUG\n",
        "Line" : 114,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "#\n\n# OSG_MARK_AS_ADVANCED\n\n# Just a convenience function for calling MARK_AS_ADVANCED\n\n#\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "lib/wiiuse/cmake/cmake-2.8.1-modules/patchctestbug10149/CTest.cmake" : {
      "ObjectId" : "0c5aaf4e0c4103a9b0b2402682cbe7ae35b3dbbd",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Configure a project for testing with CTest/CDash\n\n# Include this module in the top CMakeLists.txt file of a project to\n\n# enable testing with CTest and dashboard submissions to CDash:\n\n#   project(MyProject)\n\n#   ...\n\n#   include(CTest)\n\n# The module automatically creates a BUILD_TESTING option that selects\n\n# whether to enable testing support (ON by default).  After including\n\n# the module, use code like\n\n#   if(BUILD_TESTING)\n\n#     # ... CMake code to create tests ...\n\n#   endif()\n\n# to creating tests when testing is enabled.\n\n#\n\n# To enable submissions to a CDash server, create a CTestConfig.cmake\n\n# file at the top of the project with content such as\n\n#   set(CTEST_PROJECT_NAME \"MyProject\")\n\n#   set(CTEST_NIGHTLY_START_TIME \"01:00:00 UTC\")\n\n#   set(CTEST_DROP_METHOD \"http\")\n\n#   set(CTEST_DROP_SITE \"my.cdash.org\")\n\n#   set(CTEST_DROP_LOCATION \"/submit.php?project=MyProject\")\n\n#   set(CTEST_DROP_SITE_CDASH TRUE)\n\n# (the CDash server can provide the file to a project administrator\n\n# who configures 'MyProject').\n\n# Settings in the config file are shared by both this CTest module and\n\n# the CTest command-line tool's dashboard script mode (ctest -S).\n\n#\n\n# While building a project for submission to CDash, CTest scans the\n\n# build output for errors and warnings and reports them with\n\n# surrounding context from the build log.  This generic approach works\n\n# for all build tools, but does not give details about the command\n\n# invocation that produced a given problem.  One may get more detailed\n\n# reports by adding\n\n#   set(CTEST_USE_LAUNCHERS 1)\n\n# to the CTestConfig.cmake file.  When this option is enabled, the\n\n# CTest module tells CMake's Makefile generators to invoke every\n\n# command in the generated build system through a CTest launcher\n\n# program.  (Currently the CTEST_USE_LAUNCHERS option is ignored on\n\n# non-Makefile generators.)  During a manual build each launcher\n\n# transparently runs the command it wraps.  During a CTest-driven\n\n# build for submission to CDash each launcher reports detailed\n\n# information when its command fails or warns.\n\n# (Setting CTEST_USE_LAUNCHERS in CTestConfig.cmake is convenient, but\n\n# also adds the launcher overhead even for manual builds.  One may\n\n# instead set it in a CTest dashboard script and add it to the CMake\n\n# cache for the build tree.)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2005-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see below.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# \n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# \n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n# \n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n# \n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# function to turn generator name into a version string\n\n# like vs7 vs71 vs8 vs9\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Setup some auxilary macros\n",
        "Line" : 108,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# Make sure testing is enabled\n",
        "Line" : 127,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# the project can have a DartConfig.cmake file\n",
        "Line" : 145,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# Dashboard is opened for submissions for a 24 hour period starting at\n\n# the specified NIGHTLY_START_TIME. Time is specified in 24 hour format.\n",
        "Line" : 149,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# set the site name\n",
        "Line" : 252,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# set the build name\n",
        "Line" : 254,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# the build command\n",
        "Line" : 301,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# the default build configuration the ctest build handler will use\n\n# if there is no -C arg given to ctest:\n",
        "Line" : 309,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 11
    },
    "lib/wiiuse/cmake/cmake-2.8.1-modules/patchctestbug10149/CTestScriptMode.cmake" : {
      "ObjectId" : "e6ab6341ba73fd7cc0dd4cab1154ad7c7b31472b",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is read by ctest in script mode (-S)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2009 Kitware, Inc.\n\n# Copyright 2009 Alexander Neundorf <neundorf@kde.org>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see below.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# \n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# \n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n# \n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n# \n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Determine the current system, so this information can be used\n\n# in ctest scripts\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Also load the system specific file, which sets up e.g. the search paths.\n\n# This makes the FIND_XXX() calls work much better\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "lib/wiiuse/cmake/cmake-2.8.1-modules/patchctestbug10149/CTestTargets.cmake" : {
      "ObjectId" : "a964a039f039eb24d646371e99010c060e967e79",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n# Copyright 2005-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see below.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# \n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# \n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n# \n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n# \n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# make directories in the binary tree\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use CTest\n\n# configure files\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Section 3:\n\n#\n\n# Custom targets to perform dashboard builds and submissions.\n\n# These should NOT need to be modified from project to project.\n\n#\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# We need to pass the configuration type on the test command line.\n",
        "Line" : 79,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# Add convenience targets.  Do this at most once in case of nested\n\n# projects.\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# For all generators add basic testing targets.\n",
        "Line" : 93,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# For Makefile generators add more granular targets.\n",
        "Line" : 103,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# Make targets for Experimental builds\n",
        "Line" : 105,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# missing purify\n",
        "Line" : 115,
        "CharPositionInLine" : 12
      },
      "10" : {
        "Text" : "# makefile generators\n",
        "Line" : 129,
        "CharPositionInLine" : 9
      },
      "CommentCount" : 11
    },
    "lib/wiiuse/cmake/cmake-2.8.12-modules/CMakePackageConfigHelpers.cmake" : {
      "ObjectId" : "6ad4aba8af1cdc0b4c7429e519d5b7f5555b687c",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# CMakePackageConfigHelpers\n\n# -------------------------\n\n#\n\n# CONFIGURE_PACKAGE_CONFIG_FILE(), WRITE_BASIC_PACKAGE_VERSION_FILE()\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#     CONFIGURE_PACKAGE_CONFIG_FILE(<input> <output> INSTALL_DESTINATION <path>\n\n#                                                    [PATH_VARS <var1> <var2> ... <varN>]\n\n#                                                    [NO_SET_AND_CHECK_MACRO]\n\n#                                                    [NO_CHECK_REQUIRED_COMPONENTS_MACRO]\n\n#                                                    [NO_FIND_DEPENDENCY_MACRO])\n\n#\n\n#\n\n#\n\n# CONFIGURE_PACKAGE_CONFIG_FILE() should be used instead of the plain\n\n# configure_file() command when creating the <Name>Config.cmake or\n\n# <Name>-config.cmake file for installing a project or library.  It\n\n# helps making the resulting package relocatable by avoiding hardcoded\n\n# paths in the installed Config.cmake file.\n\n#\n\n# In a FooConfig.cmake file there may be code like this to make the\n\n# install destinations know to the using project:\n\n#\n\n# ::\n\n#\n\n#    set(FOO_INCLUDE_DIR   \"@CMAKE_INSTALL_FULL_INCLUDEDIR@\" )\n\n#    set(FOO_DATA_DIR   \"@CMAKE_INSTALL_PREFIX@/@RELATIVE_DATA_INSTALL_DIR@\" )\n\n#    set(FOO_ICONS_DIR   \"@CMAKE_INSTALL_PREFIX@/share/icons\" )\n\n#    ...logic to determine installedPrefix from the own location...\n\n#    set(FOO_CONFIG_DIR  \"${installedPrefix}/@CONFIG_INSTALL_DIR@\" )\n\n#\n\n# All 4 options shown above are not sufficient, since the first 3\n\n# hardcode the absolute directory locations, and the 4th case works only\n\n# if the logic to determine the installedPrefix is correct, and if\n\n# CONFIG_INSTALL_DIR contains a relative path, which in general cannot\n\n# be guaranteed.  This has the effect that the resulting FooConfig.cmake\n\n# file would work poorly under Windows and OSX, where users are used to\n\n# choose the install location of a binary package at install time,\n\n# independent from how CMAKE_INSTALL_PREFIX was set at build/cmake time.\n\n#\n\n# Using CONFIGURE_PACKAGE_CONFIG_FILE() helps.  If used correctly, it\n\n# makes the resulting FooConfig.cmake file relocatable.  Usage:\n\n#\n\n# ::\n\n#\n\n#    1. write a FooConfig.cmake.in file as you are used to\n\n#    2. insert a line containing only the string \"@PACKAGE_INIT@\"\n\n#    3. instead of set(FOO_DIR \"@SOME_INSTALL_DIR@\"), use set(FOO_DIR \"@PACKAGE_SOME_INSTALL_DIR@\")\n\n#       (this must be after the @PACKAGE_INIT@ line)\n\n#    4. instead of using the normal configure_file(), use CONFIGURE_PACKAGE_CONFIG_FILE()\n\n#\n\n#\n\n#\n\n# The <input> and <output> arguments are the input and output file, the\n\n# same way as in configure_file().\n\n#\n\n# The <path> given to INSTALL_DESTINATION must be the destination where\n\n# the FooConfig.cmake file will be installed to.  This can either be a\n\n# relative or absolute path, both work.\n\n#\n\n# The variables <var1> to <varN> given as PATH_VARS are the variables\n\n# which contain install destinations.  For each of them the macro will\n\n# create a helper variable PACKAGE_<var...>.  These helper variables\n\n# must be used in the FooConfig.cmake.in file for setting the installed\n\n# location.  They are calculated by CONFIGURE_PACKAGE_CONFIG_FILE() so\n\n# that they are always relative to the installed location of the\n\n# package.  This works both for relative and also for absolute\n\n# locations.  For absolute locations it works only if the absolute\n\n# location is a subdirectory of CMAKE_INSTALL_PREFIX.\n\n#\n\n# By default configure_package_config_file() also generates two helper\n\n# macros, set_and_check() and check_required_components() into the\n\n# FooConfig.cmake file.\n\n#\n\n# set_and_check() should be used instead of the normal set() command for\n\n# setting directories and file locations.  Additionally to setting the\n\n# variable it also checks that the referenced file or directory actually\n\n# exists and fails with a FATAL_ERROR otherwise.  This makes sure that\n\n# the created FooConfig.cmake file does not contain wrong references.\n\n# When using the NO_SET_AND_CHECK_MACRO, this macro is not generated\n\n# into the FooConfig.cmake file.\n\n#\n\n# check_required_components(<package_name>) should be called at the end\n\n# of the FooConfig.cmake file if the package supports components.  This\n\n# macro checks whether all requested, non-optional components have been\n\n# found, and if this is not the case, sets the Foo_FOUND variable to\n\n# FALSE, so that the package is considered to be not found.  It does\n\n# that by testing the Foo_<Component>_FOUND variables for all requested\n\n# required components.  When using the NO_CHECK_REQUIRED_COMPONENTS\n\n# option, this macro is not generated into the FooConfig.cmake file.\n\n#\n\n# For an example see below the documentation for\n\n# WRITE_BASIC_PACKAGE_VERSION_FILE().\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#   WRITE_BASIC_PACKAGE_VERSION_FILE( filename VERSION major.minor.patch COMPATIBILITY (AnyNewerVersion|SameMajorVersion|ExactVersion) )\n\n#\n\n#\n\n#\n\n# Writes a file for use as <package>ConfigVersion.cmake file to\n\n# <filename>.  See the documentation of find_package() for details on\n\n# this.\n\n#\n\n# ::\n\n#\n\n#     filename is the output filename, it should be in the build tree.\n\n#     major.minor.patch is the version number of the project to be installed\n\n#\n\n# The COMPATIBILITY mode AnyNewerVersion means that the installed\n\n# package version will be considered compatible if it is newer or\n\n# exactly the same as the requested version.  This mode should be used\n\n# for packages which are fully backward compatible, also across major\n\n# versions.  If SameMajorVersion is used instead, then the behaviour\n\n# differs from AnyNewerVersion in that the major version number must be\n\n# the same as requested, e.g.  version 2.0 will not be considered\n\n# compatible if 1.0 is requested.  This mode should be used for packages\n\n# which guarantee backward compatibility within the same major version.\n\n# If ExactVersion is used, then the package is only considered\n\n# compatible if the requested version matches exactly its own version\n\n# number (not considering the tweak version).  For example, version\n\n# 1.2.3 of a package is only considered compatible to requested version\n\n# 1.2.3.  This mode is for packages without compatibility guarantees.\n\n# If your project has more elaborated version matching rules, you will\n\n# need to write your own custom ConfigVersion.cmake file instead of\n\n# using this macro.\n\n#\n\n# Internally, this macro executes configure_file() to create the\n\n# resulting version file.  Depending on the COMPATIBLITY, either the\n\n# file BasicConfigVersion-SameMajorVersion.cmake.in or\n\n# BasicConfigVersion-AnyNewerVersion.cmake.in is used.  Please note that\n\n# these two files are internal to CMake and you should not call\n\n# configure_file() on them yourself, but they can be used as starting\n\n# point to create more sophisticted custom ConfigVersion.cmake files.\n\n#\n\n#\n\n#\n\n# Example using both configure_package_config_file() and\n\n# write_basic_package_version_file(): CMakeLists.txt:\n\n#\n\n# ::\n\n#\n\n#    set(INCLUDE_INSTALL_DIR include/ ... CACHE )\n\n#    set(LIB_INSTALL_DIR lib/ ... CACHE )\n\n#    set(SYSCONFIG_INSTALL_DIR etc/foo/ ... CACHE )\n\n#    ...\n\n#    include(CMakePackageConfigHelpers)\n\n#    configure_package_config_file(FooConfig.cmake.in ${CMAKE_CURRENT_BINARY_DIR}/FooConfig.cmake\n\n#                                  INSTALL_DESTINATION ${LIB_INSTALL_DIR}/Foo/cmake\n\n#                                  PATH_VARS INCLUDE_INSTALL_DIR SYSCONFIG_INSTALL_DIR)\n\n#    write_basic_package_version_file(${CMAKE_CURRENT_BINARY_DIR}/FooConfigVersion.cmake\n\n#                                     VERSION 1.2.3\n\n#                                     COMPATIBILITY SameMajorVersion )\n\n#    install(FILES ${CMAKE_CURRENT_BINARY_DIR}/FooConfig.cmake ${CMAKE_CURRENT_BINARY_DIR}/FooConfigVersion.cmake\n\n#            DESTINATION ${LIB_INSTALL_DIR}/Foo/cmake )\n\n#\n\n#\n\n#\n\n# With a FooConfig.cmake.in:\n\n#\n\n# ::\n\n#\n\n#    set(FOO_VERSION x.y.z)\n\n#    ...\n\n#    @PACKAGE_INIT@\n\n#    ...\n\n#    set_and_check(FOO_INCLUDE_DIR \"@PACKAGE_INCLUDE_INSTALL_DIR@\")\n\n#    set_and_check(FOO_SYSCONFIG_DIR \"@PACKAGE_SYSCONFIG_INSTALL_DIR@\")\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#    check_required_components(Foo)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2012 Alexander Neundorf <neundorf@kde.org>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see below.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# \n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# \n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n# \n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n# \n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Handle \"/usr move\" symlinks created by some Linux distros.\n",
        "Line" : 279,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "lib/wiiuse/cmake/cmake-2.8.12-modules/CMakeParseArguments.cmake" : {
      "ObjectId" : "3c8002272d00dde198c9ca52dc432184aee02ba6",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# CMakeParseArguments\n\n# -------------------\n\n#\n\n#\n\n#\n\n# CMAKE_PARSE_ARGUMENTS(<prefix> <options> <one_value_keywords>\n\n# <multi_value_keywords> args...)\n\n#\n\n# CMAKE_PARSE_ARGUMENTS() is intended to be used in macros or functions\n\n# for parsing the arguments given to that macro or function.  It\n\n# processes the arguments and defines a set of variables which hold the\n\n# values of the respective options.\n\n#\n\n# The <options> argument contains all options for the respective macro,\n\n# i.e.  keywords which can be used when calling the macro without any\n\n# value following, like e.g.  the OPTIONAL keyword of the install()\n\n# command.\n\n#\n\n# The <one_value_keywords> argument contains all keywords for this macro\n\n# which are followed by one value, like e.g.  DESTINATION keyword of the\n\n# install() command.\n\n#\n\n# The <multi_value_keywords> argument contains all keywords for this\n\n# macro which can be followed by more than one value, like e.g.  the\n\n# TARGETS or FILES keywords of the install() command.\n\n#\n\n# When done, CMAKE_PARSE_ARGUMENTS() will have defined for each of the\n\n# keywords listed in <options>, <one_value_keywords> and\n\n# <multi_value_keywords> a variable composed of the given <prefix>\n\n# followed by \"_\" and the name of the respective keyword.  These\n\n# variables will then hold the respective value from the argument list.\n\n# For the <options> keywords this will be TRUE or FALSE.\n\n#\n\n# All remaining arguments are collected in a variable\n\n# <prefix>_UNPARSED_ARGUMENTS, this can be checked afterwards to see\n\n# whether your macro was called with unrecognized parameters.\n\n#\n\n# As an example here a my_install() macro, which takes similar arguments\n\n# as the real install() command:\n\n#\n\n# ::\n\n#\n\n#    function(MY_INSTALL)\n\n#      set(options OPTIONAL FAST)\n\n#      set(oneValueArgs DESTINATION RENAME)\n\n#      set(multiValueArgs TARGETS CONFIGURATIONS)\n\n#      cmake_parse_arguments(MY_INSTALL \"${options}\" \"${oneValueArgs}\" \"${multiValueArgs}\" ${ARGN} )\n\n#      ...\n\n#\n\n#\n\n#\n\n# Assume my_install() has been called like this:\n\n#\n\n# ::\n\n#\n\n#    my_install(TARGETS foo bar DESTINATION bin OPTIONAL blub)\n\n#\n\n#\n\n#\n\n# After the cmake_parse_arguments() call the macro will have set the\n\n# following variables:\n\n#\n\n# ::\n\n#\n\n#    MY_INSTALL_OPTIONAL = TRUE\n\n#    MY_INSTALL_FAST = FALSE (this option was not used when calling my_install()\n\n#    MY_INSTALL_DESTINATION = \"bin\"\n\n#    MY_INSTALL_RENAME = \"\" (was not used)\n\n#    MY_INSTALL_TARGETS = \"foo;bar\"\n\n#    MY_INSTALL_CONFIGURATIONS = \"\" (was not used)\n\n#    MY_INSTALL_UNPARSED_ARGUMENTS = \"blub\" (no value expected after \"OPTIONAL\"\n\n#\n\n#\n\n#\n\n# You can then continue and process these variables.\n\n#\n\n# Keywords terminate lists of values, e.g.  if directly after a\n\n# one_value_keyword another recognized keyword follows, this is\n\n# interpreted as the beginning of the new option.  E.g.\n\n# my_install(TARGETS foo DESTINATION OPTIONAL) would result in\n\n# MY_INSTALL_DESTINATION set to \"OPTIONAL\", but MY_INSTALL_DESTINATION\n\n# would be empty and MY_INSTALL_OPTIONAL would be set to TRUE therefor.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2010 Alexander Neundorf <neundorf@kde.org>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see below.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# \n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# \n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n# \n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n# \n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# first set all result variables to empty/FALSE\n",
        "Line" : 133,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# now iterate over all arguments and fill the result variables\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# ... then this marks the end of the arguments belonging to this keyword\n",
        "Line" : 149,
        "CharPositionInLine" : 57
      },
      "5" : {
        "Text" : "# ... then this marks the end of the arguments belonging to this keyword\n",
        "Line" : 150,
        "CharPositionInLine" : 63
      },
      "6" : {
        "Text" : "# ... then this marks the end of the arguments belonging to this keyword\n",
        "Line" : 151,
        "CharPositionInLine" : 61
      },
      "7" : {
        "Text" : "# propagate the result variables to the caller:\n",
        "Line" : 181,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "lib/wiiuse/cmake/cmake-2.8.3-modules/FixWinInstallPrefix.cmake" : {
      "ObjectId" : "ceb180baa02ff8d952f21c331b97f757c06e2ea4",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Automatically fix CMAKE_INSTALL_PREFIX to be bit-appropriate on Win\n\n#\n\n# This is a workaround for CMake bug #9992 in <2.8.3 - see\n\n# http://public.kitware.com/Bug/view.php?id=9992\n\n#\n\n# It runs automatically when included on a Windows build (passes if(WIN32)) -\n\n# include after setting your project name (and your module search path,\n\n# obviously)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file ../LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# caution - ENV{ProgramFiles} on Win64 is adjusted to point to the arch\n\n# of the running executable which, since CMake is 32-bit on Windows as\n\n# I write this, will always be = $ENV{ProgramFiles(x86)}.\n\n# Thus, we only use this environment variable if we are on a 32 machine\n",
        "Line" : 21,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# 32-bit dir on win32, useless to us on win64\n",
        "Line" : 26,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# 32-bit dir: only set on win64\n",
        "Line" : 29,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# 64-bit dir: only set on win64\n",
        "Line" : 33,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# 64-bit build on win64\n",
        "Line" : 37,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# 32-bit build on win64\n",
        "Line" : 41,
        "CharPositionInLine" : 3
      },
      "7" : {
        "Text" : "# 32-bit build on win32\n",
        "Line" : 44,
        "CharPositionInLine" : 3
      },
      "8" : {
        "Text" : "# The user didn't change this yet - it's the potentially broken default\n",
        "Line" : 64,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 9
    },
    "lib/wiiuse/cmake/cmake-2.8.3-modules/autoinclude.cmake" : {
      "ObjectId" : "64d8f62b90be741ce9ecb525fa9556cc353a60df",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Autoinclude these policies automatically\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file ../LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/wiiuse/cmake/cmake-2.8.4-modules/ImproveEclipseGCCErrors.cmake" : {
      "ObjectId" : "2f7f3170d62e4f347767cf1ed81c4a8eea6c9923",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Add a GCC flag so that the errors are more suitable to parsing by Eclipse\n\n#\n\n#  include(ImproveEclipseGCCErrors)\n\n#\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file ../LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/wiiuse/cmake/cmake-2.8.4-modules/autoinclude.cmake" : {
      "ObjectId" : "2c98e249991fe29da3711b76580d210f95c2dcf0",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Autoinclude these policies automatically\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file ../LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/wiiuse/cmake/cmake-2.8.4-modules/boost/FindBoost.cmake" : {
      "ObjectId" : "9dbfb8023ec76f3fc34bcba9aa82a8ce29280530",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Boost include dirs and libraries\n\n# Usage of this module as follows:\n\n#\n\n# NOTE: Take note of the Boost_ADDITIONAL_VERSIONS variable below.\n\n# Due to Boost naming conventions and limitations in CMake this find\n\n# module is NOT future safe with respect to Boost version numbers,\n\n# and may break.\n\n#\n\n# == Using Header-Only libraries from within Boost: ==\n\n#\n\n#   find_package( Boost 1.36.0 )\n\n#   if(Boost_FOUND)\n\n#      include_directories(${Boost_INCLUDE_DIRS})\n\n#      add_executable(foo foo.cc)\n\n#   endif()\n\n#\n\n#\n\n# == Using actual libraries from within Boost: ==\n\n#\n\n#   set(Boost_USE_STATIC_LIBS        ON)\n\n#   set(Boost_USE_MULTITHREADED      ON)\n\n#   set(Boost_USE_STATIC_RUNTIME    OFF)\n\n#   find_package( Boost 1.36.0 COMPONENTS date_time filesystem system ... )\n\n#\n\n#   if(Boost_FOUND)\n\n#      include_directories(${Boost_INCLUDE_DIRS})\n\n#      add_executable(foo foo.cc)\n\n#      target_link_libraries(foo ${Boost_LIBRARIES})\n\n#   endif()\n\n#\n\n#\n\n# The components list needs to contain actual names of boost libraries only,\n\n# such as \"date_time\" for \"libboost_date_time\".  If you're using parts of\n\n# Boost that contain header files only (e.g. foreach) you do not need to\n\n# specify COMPONENTS.\n\n#\n\n# You should provide a minimum version number that should be used. If you provide this\n\n# version number and specify the REQUIRED attribute, this module will fail if it\n\n# can't find the specified or a later version. If you specify a version number this is\n\n# automatically put into the considered list of version numbers and thus doesn't need\n\n# to be specified in the Boost_ADDITIONAL_VERSIONS variable (see below).\n\n#\n\n# NOTE for Visual Studio Users:\n\n#     Automatic linking is used on MSVC & Borland compilers by default when\n\n#     #including things in Boost.  It's important to note that setting\n\n#     Boost_USE_STATIC_LIBS to OFF is NOT enough to get you dynamic linking,\n\n#     should you need this feature.  Automatic linking typically uses static\n\n#     libraries with a few exceptions (Boost.Python is one).\n\n#\n\n#     Please see the section below near Boost_LIB_DIAGNOSTIC_DEFINITIONS for\n\n#     more details.  Adding a TARGET_LINK_LIBRARIES() as shown in the example\n\n#     above appears to cause VS to link dynamically if Boost_USE_STATIC_LIBS\n\n#     gets set to OFF.  It is suggested you avoid automatic linking since it\n\n#     will make your application less portable.\n\n#\n\n# =========== The mess that is Boost_ADDITIONAL_VERSIONS (sorry?) ============\n\n#\n\n# OK, so the Boost_ADDITIONAL_VERSIONS variable can be used to specify a list of\n\n# boost version numbers that should be taken into account when searching\n\n# for Boost. Unfortunately boost puts the version number into the\n\n# actual filename for the libraries, so this variable will certainly be needed\n\n# in the future when new Boost versions are released.\n\n#\n\n# Currently this module searches for the following version numbers:\n\n# 1.33, 1.33.0, 1.33.1, 1.34, 1.34.0, 1.34.1, 1.35, 1.35.0, 1.35.1,\n\n# 1.36, 1.36.0, 1.36.1, 1.37, 1.37.0, 1.38, 1.38.0, 1.39, 1.39.0,\n\n# 1.40, 1.40.0, 1.41, 1.41.0, 1.42, 1.42.0, 1.43, 1.43.0, 1.44, 1.44.0,\n\n# 1.45, 1.45.0, 1.46, 1.46.0\n\n#\n\n# NOTE: If you add a new major 1.x version in Boost_ADDITIONAL_VERSIONS you should\n\n# add both 1.x and 1.x.0 as shown above.  Official Boost include directories\n\n# omit the 3rd version number from include paths if it is 0 although not all\n\n# binary Boost releases do so.\n\n#\n\n# SET(Boost_ADDITIONAL_VERSIONS \"1.78\" \"1.78.0\" \"1.79\" \"1.79.0\")\n\n#\n\n# ===================================== ============= ========================\n\n#\n\n# Variables used by this module, they can change the default behaviour and\n\n# need to be set before calling find_package:\n\n#\n\n#   Boost_USE_MULTITHREADED      Can be set to OFF to use the non-multithreaded\n\n#                                boost libraries.  If not specified, defaults\n\n#                                to ON.\n\n#\n\n#   Boost_USE_STATIC_LIBS        Can be set to ON to force the use of the static\n\n#                                boost libraries. Defaults to OFF.\n\n#\n\n#   Boost_NO_SYSTEM_PATHS        Set to TRUE to suppress searching in system\n\n#                                paths (or other locations outside of BOOST_ROOT\n\n#                                or BOOST_INCLUDEDIR).  Useful when specifying\n\n#                                BOOST_ROOT. Defaults to OFF.\n\n#                                  [Since CMake 2.8.3]\n\n#\n\n#   Boost_USE_STATIC_RUNTIME     If enabled, searches for boost libraries\n\n#                                linked against a static C++ standard library\n\n#                                ('s' ABI tag). This option should be set to\n\n#                                ON or OFF because the default behavior\n\n#                                if not specified is platform dependent\n\n#                                for backwards compatibility.\n\n#                                  [Since CMake 2.8.3]\n\n#\n\n#   Boost_USE_DEBUG_PYTHON       If enabled, searches for boost libraries\n\n#                                compiled against a special debug build of\n\n#                                Python ('y' ABI tag). Defaults to OFF.\n\n#                                  [Since CMake 2.8.3]\n\n#\n\n#   Boost_USE_STLPORT            If enabled, searches for boost libraries\n\n#                                compiled against the STLPort standard\n\n#                                library ('p' ABI tag). Defaults to OFF.\n\n#                                  [Since CMake 2.8.3]\n\n#\n\n#   Boost_USE_STLPORT_DEPRECATED_NATIVE_IOSTREAMS\n\n#                                If enabled, searches for boost libraries\n\n#                                compiled against the deprecated STLPort\n\n#                                \"native iostreams\" feature ('n' ABI tag).\n\n#                                Defaults to OFF.\n\n#                                  [Since CMake 2.8.3]\n\n#\n\n# Other Variables used by this module which you may want to set.\n\n#\n\n#   Boost_ADDITIONAL_VERSIONS    A list of version numbers to use for searching\n\n#                                the boost include directory.  Please see\n\n#                                the documentation above regarding this\n\n#                                annoying, but necessary variable :(\n\n#\n\n#   Boost_DEBUG                  Set this to TRUE to enable debugging output\n\n#                                of FindBoost.cmake if you are having problems.\n\n#                                Please enable this before filing any bug\n\n#                                reports.\n\n#\n\n#   Boost_DETAILED_FAILURE_MSG   FindBoost doesn't output detailed information\n\n#                                about why it failed or how to fix the problem\n\n#                                unless this is set to TRUE or the REQUIRED\n\n#                                keyword is specified in find_package().\n\n#                                  [Since CMake 2.8.0]\n\n#\n\n#   Boost_COMPILER               Set this to the compiler suffix used by Boost\n\n#                                (e.g. \"-gcc43\") if FindBoost has problems finding\n\n#                                the proper Boost installation\n\n#\n\n#   Boost_THREADAPI                When building boost.thread, sometimes the name of the\n\n#                                library contains an additional \"pthread\" or \"win32\"\n\n#                                string known as the threadapi.  This can happen when\n\n#                                compiling against pthreads on Windows or win32 threads\n\n#                                on Cygwin.  You may specify this variable and if set\n\n#                                when FindBoost searches for the Boost threading library\n\n#                                it will first try to match the threadapi you specify.\n\n#                                  For Example: libboost_thread_win32-mgw45-mt-1_43.a\n\n#                                might be found if you specified \"win32\" here before\n\n#                                falling back on libboost_thread-mgw45-mt-1_43.a.\n\n#                                  [Since CMake 2.8.3]\n\n#\n\n#   Boost_REALPATH               Resolves symbolic links for discovered boost libraries\n\n#                                to assist with packaging.  For example, instead of\n\n#                                Boost_SYSTEM_LIBRARY_RELEASE being resolved to\n\n#                                \"/usr/lib/libboost_system.so\" it would be\n\n#                                \"/usr/lib/libboost_system.so.1.42.0\" instead.\n\n#                                This does not affect linking and should not be\n\n#                                enabled unless the user needs this information.\n\n#                                  [Since CMake 2.8.3]\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# These last three variables are available also as environment variables:\n\n#\n\n#   BOOST_ROOT or BOOSTROOT      The preferred installation prefix for searching for\n\n#                                Boost.  Set this if the module has problems finding\n\n#                                the proper Boost installation.  To prevent falling\n\n#                                back on the system paths, set Boost_NO_SYSTEM_PATHS\n\n#                                to true.\n\n#\n\n#   BOOST_INCLUDEDIR             Set this to the include directory of Boost, if the\n\n#                                module has problems finding the proper Boost installation\n\n#\n\n#   BOOST_LIBRARYDIR             Set this to the lib directory of Boost, if the\n\n#                                module has problems finding the proper Boost installation\n\n#\n\n# Variables defined by this module:\n\n#\n\n#   Boost_FOUND                         System has Boost, this means the include dir was\n\n#                                       found, as well as all the libraries specified in\n\n#                                       the COMPONENTS list.\n\n#\n\n#   Boost_INCLUDE_DIRS                  Boost include directories: not cached\n\n#\n\n#   Boost_INCLUDE_DIR                   This is almost the same as above, but this one is\n\n#                                       cached and may be modified by advanced users\n\n#\n\n#   Boost_LIBRARIES                     Link to these to use the Boost libraries that you\n\n#                                       specified: not cached\n\n#\n\n#   Boost_LIBRARY_DIRS                  The path to where the Boost library files are.\n\n#\n\n#   Boost_VERSION                       The version number of the boost libraries that\n\n#                                       have been found, same as in version.hpp from Boost\n\n#\n\n#   Boost_LIB_VERSION                   The version number in filename form as\n\n#                                       it's appended to the library filenames\n\n#\n\n#   Boost_MAJOR_VERSION                 major version number of boost\n\n#   Boost_MINOR_VERSION                 minor version number of boost\n\n#   Boost_SUBMINOR_VERSION              subminor version number of boost\n\n#\n\n#   Boost_LIB_DIAGNOSTIC_DEFINITIONS    [WIN32 Only] You can call\n\n#                                       add_definitions(${Boost_LIB_DIAGNOSTIC_DEFINITIONS})\n\n#                                       to have diagnostic information about Boost's\n\n#                                       automatic linking outputted during compilation time.\n\n#\n\n# For each component you specify in find_package(), the following (UPPER-CASE)\n\n# variables are set.  You can use these variables if you would like to pick and\n\n# choose components for your targets instead of just using Boost_LIBRARIES.\n\n#\n\n#   Boost_${COMPONENT}_FOUND            True IF the Boost library \"component\" was found.\n\n#\n\n#   Boost_${COMPONENT}_LIBRARY          Contains the libraries for the specified Boost\n\n#                                       \"component\" (includes debug and optimized keywords\n\n#                                       when needed).\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#=============================================================================\n\n# Copyright 2006-2009 Kitware, Inc.\n\n# Copyright 2006-2008 Andreas Schneider <mail@cynapses.org>\n\n# Copyright 2007      Wengo\n\n# Copyright 2007      Mike Jackson\n\n# Copyright 2008      Andreas Pakulat <apaku@gmx.de>\n\n# Copyright 2008-2010 Philip Lowman <philip@yhbt.com>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see below.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# \n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# \n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n# \n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n# \n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#  FindBoost functions & macros\n\n#\n\n############################################\n\n#\n\n# Check the existence of the libraries.\n\n#\n\n############################################\n\n# This macro was taken directly from the FindQt4.cmake file that is included\n\n# with the CMake distribution. This is NOT my work. All work was done by the\n\n# original authors of the FindQt4.cmake file. Only minor modifications were\n\n# made to remove references to Qt and make this file more generally applicable\n\n# And ELSE/ENDIF pairs were removed for readability.\n\n#########################################################################\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# if the generator supports configuration types then set\n\n# optimized and debug libraries, or if the CMAKE_BUILD_TYPE has a value\n",
        "Line" : 284,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# if there are no configuration types and CMAKE_BUILD_TYPE has no value\n\n# then just use the release libraries\n",
        "Line" : 289,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# FIXME: This probably should be set for both cases\n",
        "Line" : 293,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# if only the release version was found, set the debug variable also to the release version\n",
        "Line" : 297,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# if only the debug version was found, set the release variable also to the debug version\n",
        "Line" : 304,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Remove superfluous \"debug\" / \"optimized\" keywords from\n\n# Boost_LIBRARY_DIRS\n",
        "Line" : 314,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# Make variables changeble to the advanced user\n",
        "Line" : 327,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 335,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#\n\n# Runs compiler with \"-dumpversion\" and parses major/minor\n\n# version with a regex.\n\n#\n",
        "Line" : 337,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#\n\n# A convenience function for marking desired components\n\n# as found or not\n\n#\n",
        "Line" : 353,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#\n\n# Take a list of libraries with \"thread\" in it\n\n# and prepend duplicates with \"thread_${Boost_THREADAPI}\"\n\n# at the front of the list\n\n#\n",
        "Line" : 364,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#\n\n# If a library is found, replace its cache entry with its REALPATH\n\n#\n",
        "Line" : 375,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#\n\n# End functions/macros\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 386,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# The version may appear in a directory with or without the patch\n\n# level, even when the patch level is non-zero.\n",
        "Line" : 399,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# The user has not requested an exact version.  Among known\n\n# versions, find those that are acceptable to the user request.\n",
        "Line" : 405,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Select acceptable versions.\n",
        "Line" : 415,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# This version is high enough.\n",
        "Line" : 418,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "# This version is a short-form for the requested version with\n\n# the patch level dropped.\n",
        "Line" : 421,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# Any version is acceptable.\n",
        "Line" : 427,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# The reason that we failed to find Boost. This will be set to a\n\n# user-friendly message when we fail to find some necessary piece of\n\n# Boost.\n",
        "Line" : 432,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# On versions < 1.35, remove the System library from the considered list\n\n# since it wasn't added until 1.35.\n",
        "Line" : 440,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# in cache already\n",
        "Line" : 459,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Need to search for boost\n",
        "Line" : 478,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# Output some of their choices\n",
        "Line" : 482,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# In windows, automatic linking is performed, so you do not have\n\n# to specify the libraries.  If you are linking to a dynamic\n\n# runtime, then you can choose to link to either a static or a\n\n# dynamic Boost library, the default is to do a static link.  You\n\n# can alter this for a specific library \"whatever\" by defining\n\n# BOOST_WHATEVER_DYN_LINK to force Boost library \"whatever\" to be\n\n# linked dynamically.  Alternatively you can force all Boost\n\n# libraries to dynamic link by defining BOOST_ALL_DYN_LINK.\n",
        "Line" : 498,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# This feature can be disabled for Boost library \"whatever\" by\n\n# defining BOOST_WHATEVER_NO_LIB, or for all of Boost by defining\n\n# BOOST_ALL_NO_LIB.\n",
        "Line" : 507,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# If you want to observe which libraries are being linked against\n\n# then defining BOOST_LIB_DIAGNOSTIC will cause the auto-linking\n\n# code to emit a #pragma message each time a library is selected\n\n# for linking.\n",
        "Line" : 511,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# If Boost_ROOT was defined, gently correct the user\n",
        "Line" : 527,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# If BOOST_ROOT was defined in the environment, use it.\n",
        "Line" : 534,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# If BOOSTROOT was defined in the environment, use it.\n",
        "Line" : 539,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# If BOOST_INCLUDEDIR was defined in the environment, use it.\n",
        "Line" : 544,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# If BOOST_LIBRARYDIR was defined in the environment, use it.\n",
        "Line" : 549,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# prepend BOOST_INCLUDEDIR to search path if specified\n",
        "Line" : 584,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Search for Boost include DIR\n\n# ------------------------------------------------------------------------\n\n# Try to find Boost by stepping backwards through the Boost versions\n\n# we know about.\n",
        "Line" : 591,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "# Build a list of path suffixes for each version.\n",
        "Line" : 597,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "# Add in a path suffix, based on the required version, ideally\n\n# we could read this from version.hpp, but for that to work we'd\n\n# need to know the include dir already\n",
        "Line" : 600,
        "CharPositionInLine" : 6
      },
      "40" : {
        "Text" : "# Transform 1.35 => 1_35 and 1.36.0 => 1_36_0\n",
        "Line" : 605,
        "CharPositionInLine" : 6
      },
      "41" : {
        "Text" : "# Look for a standard boost header file.\n",
        "Line" : 628,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Extract version information from version.hpp\n\n# ------------------------------------------------------------------------\n",
        "Line" : 637,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "# Extract Boost_VERSION and Boost_LIB_VERSION from version.hpp\n\n# Read the whole file:\n\n#\n",
        "Line" : 642,
        "CharPositionInLine" : 4
      },
      "44" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Suffix initialization and compiler suffix detection.\n\n# ------------------------------------------------------------------------\n",
        "Line" : 677,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "# Setting some more suffixes for the library\n",
        "Line" : 681,
        "CharPositionInLine" : 2
      },
      "46" : {
        "Text" : "# Attempt to guess the compiler suffix\n\n# NOTE: this is not perfect yet, if you experience any issues\n\n# please report them and use the Boost_COMPILER variable\n\n# to work around the problems.\n",
        "Line" : 694,
        "CharPositionInLine" : 4
      },
      "47" : {
        "Text" : "# Good luck!\n",
        "Line" : 714,
        "CharPositionInLine" : 20
      },
      "48" : {
        "Text" : "# yes, this is correct\n",
        "Line" : 715,
        "CharPositionInLine" : 35
      },
      "49" : {
        "Text" : "# Good luck!\n",
        "Line" : 716,
        "CharPositionInLine" : 20
      },
      "50" : {
        "Text" : "# yes, this is correct\n",
        "Line" : 717,
        "CharPositionInLine" : 35
      },
      "51" : {
        "Text" : "# no GCC version encoding prior to 1.34\n",
        "Line" : 724,
        "CharPositionInLine" : 38
      },
      "52" : {
        "Text" : "# no GCC version encoding prior to 1.34\n",
        "Line" : 732,
        "CharPositionInLine" : 38
      },
      "53" : {
        "Text" : "# Determine which version of GCC we have.\n",
        "Line" : 735,
        "CharPositionInLine" : 10
      },
      "54" : {
        "Text" : "# In Boost 1.36.0 and newer, the mangled compiler name used\n\n# on Mac OS X/Darwin is \"xgcc\".\n",
        "Line" : 739,
        "CharPositionInLine" : 16
      },
      "55" : {
        "Text" : "# In Boost <= 1.35.0, there is no mangled compiler name for\n\n# the Mac OS X/Darwin version of GCC.\n",
        "Line" : 743,
        "CharPositionInLine" : 16
      },
      "56" : {
        "Text" : "# We don't know the Boost version, so assume it's\n\n# pre-1.36.0.\n",
        "Line" : 748,
        "CharPositionInLine" : 14
      },
      "57" : {
        "Text" : "#======================\n\n# Systematically build up the Boost ABI tag\n\n# http://boost.org/doc/libs/1_41_0/more/getting_started/windows.html#library-naming\n",
        "Line" : 773,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# Key       Use this library when:\n\n#  s        linking statically to the C++ standard library and\n\n#           compiler runtime support libraries.\n",
        "Line" : 778,
        "CharPositionInLine" : 2
      },
      "59" : {
        "Text" : "#  g        using debug versions of the standard and runtime\n\n#           support libraries\n",
        "Line" : 785,
        "CharPositionInLine" : 2
      },
      "60" : {
        "Text" : "#  y        using special debug build of python\n",
        "Line" : 793,
        "CharPositionInLine" : 2
      },
      "61" : {
        "Text" : "#  d        using a debug version of your code\n",
        "Line" : 797,
        "CharPositionInLine" : 2
      },
      "62" : {
        "Text" : "#  p        using the STLport standard library rather than the\n\n#           default one supplied with your compiler\n",
        "Line" : 799,
        "CharPositionInLine" : 2
      },
      "63" : {
        "Text" : "#  n        using the STLport deprecated \"native iostreams\" feature\n",
        "Line" : 805,
        "CharPositionInLine" : 2
      },
      "64" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Begin finding boost libraries\n\n# ------------------------------------------------------------------------\n",
        "Line" : 818,
        "CharPositionInLine" : 2
      },
      "65" : {
        "Text" : "# prepend BOOST_LIBRARYDIR to search path if specified\n",
        "Line" : 849,
        "CharPositionInLine" : 2
      },
      "66" : {
        "Text" : "# Support preference of static libs by adjusting CMAKE_FIND_LIBRARY_SUFFIXES\n",
        "Line" : 861,
        "CharPositionInLine" : 2
      },
      "67" : {
        "Text" : "# We want to use the tag inline below without risking double dashes\n",
        "Line" : 871,
        "CharPositionInLine" : 2
      },
      "68" : {
        "Text" : "# The previous behavior of FindBoost when Boost_USE_STATIC_LIBS was enabled\n\n# on WIN32 was to:\n\n#  1. Search for static libs compiled against a SHARED C++ standard runtime library (use if found)\n\n#  2. Search for static libs compiled against a STATIC C++ standard runtime library (use if found)\n\n# We maintain this behavior since changing it could break people's builds.\n\n# To disable the ambiguous behavior, the user need only\n\n# set Boost_USE_STATIC_RUNTIME either ON or OFF.\n",
        "Line" : 883,
        "CharPositionInLine" : 2
      },
      "69" : {
        "Text" : "#\n\n# Find RELEASE libraries\n\n#\n",
        "Line" : 907,
        "CharPositionInLine" : 4
      },
      "70" : {
        "Text" : "#\n\n# Find DEBUG libraries\n\n#\n",
        "Line" : 938,
        "CharPositionInLine" : 4
      },
      "71" : {
        "Text" : "# Restore the original find library ordering\n",
        "Line" : 979,
        "CharPositionInLine" : 2
      },
      "72" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  End finding boost libraries\n\n# ------------------------------------------------------------------------\n",
        "Line" : 983,
        "CharPositionInLine" : 2
      },
      "73" : {
        "Text" : "# Check the version of Boost against the requested version.\n",
        "Line" : 995,
        "CharPositionInLine" : 4
      },
      "74" : {
        "Text" : "# If the user requested an exact version of Boost, check\n\n# that. We already know that the Boost version we have is >= the\n\n# requested version.\n",
        "Line" : 1019,
        "CharPositionInLine" : 6
      },
      "75" : {
        "Text" : "# If the user didn't specify a patchlevel, it's 0.\n",
        "Line" : 1024,
        "CharPositionInLine" : 6
      },
      "76" : {
        "Text" : "# We'll set Boost_FOUND true again if we have an exact version match.\n",
        "Line" : 1029,
        "CharPositionInLine" : 6
      },
      "77" : {
        "Text" : "# State that we found a version of Boost that is too new or too old.\n",
        "Line" : 1043,
        "CharPositionInLine" : 6
      },
      "78" : {
        "Text" : "# Always check for missing components\n",
        "Line" : 1056,
        "CharPositionInLine" : 4
      },
      "79" : {
        "Text" : "# We were unable to find some libraries, so generate a sensible\n\n# error message that lists the libraries we were unable to find.\n",
        "Line" : 1074,
        "CharPositionInLine" : 6
      },
      "80" : {
        "Text" : "# Compatibility Code for backwards compatibility with CMake\n\n# 2.4's FindBoost module.\n",
        "Line" : 1095,
        "CharPositionInLine" : 6
      },
      "81" : {
        "Text" : "# Look for the boost library path.\n\n# Note that the user may not have installed any libraries\n\n# so it is quite possible the Boost_LIBRARY_PATH may not exist.\n",
        "Line" : 1098,
        "CharPositionInLine" : 6
      },
      "82" : {
        "Text" : "# Strip off the trailing \"/include\" in the path.\n",
        "Line" : 1108,
        "CharPositionInLine" : 8
      },
      "83" : {
        "Text" : "# we opt not to automatically output Boost_ERROR_REASON here as\n\n# it could be quite lengthy and somewhat imposing in it's requests\n\n# Since Boost is not always a required dependency we'll leave this\n\n# up to the end-user.\n",
        "Line" : 1153,
        "CharPositionInLine" : 8
      },
      "84" : {
        "Text" : "# show the Boost_INCLUDE_DIRS AND Boost_LIBRARIES variables only in the advanced view\n",
        "Line" : 1166,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 85
    },
    "lib/wiiuse/cmake/cmake-3.2.0-modules/FindGit.cmake" : {
      "ObjectId" : "207b424bb8c5191bd01dec1b096a70afee8423a0",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindGit\n\n# -------\n\n#\n\n#\n\n#\n\n# The module defines the following variables:\n\n#\n\n# ::\n\n#\n\n#    GIT_EXECUTABLE - path to git command line client\n\n#    GIT_FOUND - true if the command line client was found\n\n#    GIT_VERSION_STRING - the version of git found (since CMake 2.8.8)\n\n#\n\n# Example usage:\n\n#\n\n# ::\n\n#\n\n#    find_package(Git)\n\n#    if(GIT_FOUND)\n\n#      message(\"git found: ${GIT_EXECUTABLE}\")\n\n#    endif()\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2010 Kitware, Inc.\n\n# Copyright 2012 Rolf Eike Beer <eike@sf-mail.de>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see below.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# \n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# \n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n# \n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n# \n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look for 'git' or 'eg' (easy git)\n\n#\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Prefer .cmd variants on Windows unless running in a Makefile\n\n# in the MSYS shell.\n\n#\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# GitHub search path for Windows\n",
        "Line" : 75,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set GIT_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "lib/wiiuse/cmake/cmake-3.3.0-modules/WriteCompilerDetectionHeader.cmake" : {
      "ObjectId" : "b40d824b17cf447d43245e91305deeb432765fca",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# WriteCompilerDetectionHeader\n\n# ----------------------------\n\n#\n\n# This module provides the function write_compiler_detection_header().\n\n#\n\n# The ``WRITE_COMPILER_DETECTION_HEADER`` function can be used to generate\n\n# a file suitable for preprocessor inclusion which contains macros to be\n\n# used in source code::\n\n#\n\n#    write_compiler_detection_header(\n\n#              FILE <file>\n\n#              PREFIX <prefix>\n\n#              [OUTPUT_FILES_VAR <output_files_var> OUTPUT_DIR <output_dir>]\n\n#              COMPILERS <compiler> [...]\n\n#              FEATURES <feature> [...]\n\n#              [VERSION <version>]\n\n#              [PROLOG <prolog>]\n\n#              [EPILOG <epilog>]\n\n#    )\n\n#\n\n# The ``write_compiler_detection_header`` function generates the\n\n# file ``<file>`` with macros which all have the prefix ``<prefix>``.\n\n#\n\n# By default, all content is written directly to the ``<file>``.  The\n\n# ``OUTPUT_FILES_VAR`` may be specified to cause the compiler-specific\n\n# content to be written to separate files.  The separate files are then\n\n# available in the ``<output_files_var>`` and may be consumed by the caller\n\n# for installation for example.  The ``OUTPUT_DIR`` specifies a relative\n\n# path from the main ``<file>`` to the compiler-specific files. For example:\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#    write_compiler_detection_header(\n\n#      FILE climbingstats_compiler_detection.h\n\n#      PREFIX ClimbingStats\n\n#      OUTPUT_FILES_VAR support_files\n\n#      OUTPUT_DIR compilers\n\n#      COMPILERS GNU Clang MSVC\n\n#      FEATURES cxx_variadic_templates\n\n#    )\n\n#    install(FILES\n\n#      ${CMAKE_CURRENT_BINARY_DIR}/climbingstats_compiler_detection.h\n\n#      DESTINATION include\n\n#    )\n\n#    install(FILES\n\n#      ${support_files}\n\n#      DESTINATION include/compilers\n\n#    )\n\n#\n\n#\n\n# ``VERSION`` may be used to specify the API version to be generated.\n\n# Future versions of CMake may introduce alternative APIs.  A given\n\n# API is selected by any ``<version>`` value greater than or equal\n\n# to the version of CMake that introduced the given API and less\n\n# than the version of CMake that introduced its succeeding API.\n\n# The value of the :variable:`CMAKE_MINIMUM_REQUIRED_VERSION`\n\n# variable is used if no explicit version is specified.\n\n# (As of CMake version |release| there is only one API version.)\n\n#\n\n# ``PROLOG`` may be specified as text content to write at the start of the\n\n# header. ``EPILOG`` may be specified as text content to write at the end\n\n# of the header\n\n#\n\n# At least one ``<compiler>`` and one ``<feature>`` must be listed.  Compilers\n\n# which are known to CMake, but not specified are detected and a preprocessor\n\n# ``#error`` is generated for them.  A preprocessor macro matching\n\n# ``<PREFIX>_COMPILER_IS_<compiler>`` is generated for each compiler\n\n# known to CMake to contain the value ``0`` or ``1``.\n\n#\n\n# Possible compiler identifiers are documented with the\n\n# :variable:`CMAKE_<LANG>_COMPILER_ID` variable.\n\n# Available features in this version of CMake are listed in the\n\n# :prop_gbl:`CMAKE_C_KNOWN_FEATURES` and\n\n# :prop_gbl:`CMAKE_CXX_KNOWN_FEATURES` global properties.\n\n#\n\n# See the :manual:`cmake-compile-features(7)` manual for information on\n\n# compile features.\n\n#\n\n# Feature Test Macros\n\n# ===================\n\n#\n\n# For each compiler, a preprocessor macro is generated matching\n\n# ``<PREFIX>_COMPILER_IS_<compiler>`` which has the content either ``0``\n\n# or ``1``, depending on the compiler in use. Preprocessor macros for\n\n# compiler version components are generated matching\n\n# ``<PREFIX>_COMPILER_VERSION_MAJOR`` ``<PREFIX>_COMPILER_VERSION_MINOR``\n\n# and ``<PREFIX>_COMPILER_VERSION_PATCH`` containing decimal values\n\n# for the corresponding compiler version components, if defined.\n\n#\n\n# A preprocessor test is generated based on the compiler version\n\n# denoting whether each feature is enabled.  A preprocessor macro\n\n# matching ``<PREFIX>_COMPILER_<FEATURE>``, where ``<FEATURE>`` is the\n\n# upper-case ``<feature>`` name, is generated to contain the value\n\n# ``0`` or ``1`` depending on whether the compiler in use supports the\n\n# feature:\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#    write_compiler_detection_header(\n\n#      FILE climbingstats_compiler_detection.h\n\n#      PREFIX ClimbingStats\n\n#      COMPILERS GNU Clang AppleClang MSVC\n\n#      FEATURES cxx_variadic_templates\n\n#    )\n\n#\n\n# .. code-block:: c++\n\n#\n\n#    #if ClimbingStats_COMPILER_CXX_VARIADIC_TEMPLATES\n\n#    template<typename... T>\n\n#    void someInterface(T t...) { /* ... */ }\n\n#    #else\n\n#    // Compatibility versions\n\n#    template<typename T1>\n\n#    void someInterface(T1 t1) { /* ... */ }\n\n#    template<typename T1, typename T2>\n\n#    void someInterface(T1 t1, T2 t2) { /* ... */ }\n\n#    template<typename T1, typename T2, typename T3>\n\n#    void someInterface(T1 t1, T2 t2, T3 t3) { /* ... */ }\n\n#    #endif\n\n#\n\n# Symbol Macros\n\n# =============\n\n#\n\n# Some additional symbol-defines are created for particular features for\n\n# use as symbols which may be conditionally defined empty:\n\n#\n\n# .. code-block:: c++\n\n#\n\n#    class MyClass ClimbingStats_FINAL\n\n#    {\n\n#        ClimbingStats_CONSTEXPR int someInterface() { return 42; }\n\n#    };\n\n#\n\n# The ``ClimbingStats_FINAL`` macro will expand to ``final`` if the\n\n# compiler (and its flags) support the ``cxx_final`` feature, and the\n\n# ``ClimbingStats_CONSTEXPR`` macro will expand to ``constexpr``\n\n# if ``cxx_constexpr`` is supported.\n\n#\n\n# The following features generate corresponding symbol defines:\n\n#\n\n# ========================== =================================== =================\n\n#         Feature                          Define                      Symbol\n\n# ========================== =================================== =================\n\n# ``c_restrict``              ``<PREFIX>_RESTRICT``               ``restrict``\n\n# ``cxx_constexpr``           ``<PREFIX>_CONSTEXPR``              ``constexpr``\n\n# ``cxx_deleted_functions``   ``<PREFIX>_DELETED_FUNCTION``       ``= delete``\n\n# ``cxx_extern_templates``    ``<PREFIX>_EXTERN_TEMPLATE``        ``extern``\n\n# ``cxx_final``               ``<PREFIX>_FINAL``                  ``final``\n\n# ``cxx_noexcept``            ``<PREFIX>_NOEXCEPT``               ``noexcept``\n\n# ``cxx_noexcept``            ``<PREFIX>_NOEXCEPT_EXPR(X)``       ``noexcept(X)``\n\n# ``cxx_override``            ``<PREFIX>_OVERRIDE``               ``override``\n\n# ========================== =================================== =================\n\n#\n\n# Compatibility Implementation Macros\n\n# ===================================\n\n#\n\n# Some features are suitable for wrapping in a macro with a backward\n\n# compatibility implementation if the compiler does not support the feature.\n\n#\n\n# When the ``cxx_static_assert`` feature is not provided by the compiler,\n\n# a compatibility implementation is available via the\n\n# ``<PREFIX>_STATIC_ASSERT(COND)`` and\n\n# ``<PREFIX>_STATIC_ASSERT_MSG(COND, MSG)`` function-like macros. The macros\n\n# expand to ``static_assert`` where that compiler feature is available, and\n\n# to a compatibility implementation otherwise. In the first form, the\n\n# condition is stringified in the message field of ``static_assert``.  In\n\n# the second form, the message ``MSG`` is passed to the message field of\n\n# ``static_assert``, or ignored if using the backward compatibility\n\n# implementation.\n\n#\n\n# The ``cxx_attribute_deprecated`` feature provides a macro definition\n\n# ``<PREFIX>_DEPRECATED``, which expands to either the standard\n\n# ``[[deprecated]]`` attribute or a compiler-specific decorator such\n\n# as ``__attribute__((__deprecated__))`` used by GNU compilers.\n\n#\n\n# The ``cxx_alignas`` feature provides a macro definition\n\n# ``<PREFIX>_ALIGNAS`` which expands to either the standard ``alignas``\n\n# decorator or a compiler-specific decorator such as\n\n# ``__attribute__ ((__aligned__))`` used by GNU compilers.\n\n#\n\n# The ``cxx_alignof`` feature provides a macro definition\n\n# ``<PREFIX>_ALIGNOF`` which expands to either the standard ``alignof``\n\n# decorator or a compiler-specific decorator such as ``__alignof__``\n\n# used by GNU compilers.\n\n#\n\n# ============================= ================================ =====================\n\n#           Feature                          Define                     Symbol\n\n# ============================= ================================ =====================\n\n# ``cxx_alignas``                ``<PREFIX>_ALIGNAS``             ``alignas``\n\n# ``cxx_alignof``                ``<PREFIX>_ALIGNOF``             ``alignof``\n\n# ``cxx_nullptr``                ``<PREFIX>_NULLPTR``             ``nullptr``\n\n# ``cxx_static_assert``          ``<PREFIX>_STATIC_ASSERT``       ``static_assert``\n\n# ``cxx_static_assert``          ``<PREFIX>_STATIC_ASSERT_MSG``   ``static_assert``\n\n# ``cxx_attribute_deprecated``   ``<PREFIX>_DEPRECATED``          ``[[deprecated]]``\n\n# ``cxx_attribute_deprecated``   ``<PREFIX>_DEPRECATED_MSG``      ``[[deprecated]]``\n\n# ``cxx_thread_local``           ``<PREFIX>_THREAD_LOCAL``        ``thread_local``\n\n# ============================= ================================ =====================\n\n#\n\n# A use-case which arises with such deprecation macros is the deprecation\n\n# of an entire library.  In that case, all public API in the library may\n\n# be decorated with the ``<PREFIX>_DEPRECATED`` macro.  This results in\n\n# very noisy build output when building the library itself, so the macro\n\n# may be may be defined to empty in that case when building the deprecated\n\n# library:\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#   add_library(compat_support ${srcs})\n\n#   target_compile_definitions(compat_support\n\n#     PRIVATE\n\n#       CompatSupport_DEPRECATED=\n\n#   )\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2014 Stephen Kelly <steveire@gmail.com>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# \n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# \n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n# \n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n# \n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Version which introduced this function\n",
        "Line" : 310,
        "CharPositionInLine" : 26
      },
      "CommentCount" : 3
    },
    "lib/wiiuse/cmake/cmake-4.0.0-modules/RequireOutOfSourceBuild.cmake" : {
      "ObjectId" : "9b27970b500cecfa730dbb82fc8da90c62f12117",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Issue an error if the source tree is in or equal to the build tree\n\n#\n\n#  include(RequireOutOfSourceBuild)\n\n#\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file ../LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#message(STATUS \"Checking ${_src}\")\n",
        "Line" : 28,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "#message(STATUS \"Checking ${_cur_src}\")\n",
        "Line" : 33,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "#message(STATUS \"comparing ${_bin} and ${_chopped}\")\n",
        "Line" : 38,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 4
    },
    "lib/wiiuse/cmake/cmake-4.0.0-modules/autoinclude.cmake" : {
      "ObjectId" : "e9206ee08a3a82b97d10fd822d5b43e688f1b10d",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Autoinclude these policies automatically\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file ../LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/wiiuse/cmake/cmake-4.0.0-modules/from-ITK-3.18.0/FindFFTW.cmake" : {
      "ObjectId" : "906906ec89c987a24216fe2ed38a426f40b99492",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## FFTW can be compiled and subsequently linked against\n\n## various data types.\n\n## There is a single set of include files, and then muttiple libraries,\n\n## One for each type.  I.e. libfftw.a-->double, libfftwf.a-->float\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## The following logic belongs in the individual package\n\n## MARK_AS_ADVANCED(USE_FFTWD)\n\n## OPTION(USE_FFTWD \"Use double precision FFTW if found\" ON)\n\n## MARK_AS_ADVANCED(USE_FFTWF)\n\n## OPTION(USE_FFTWF \"Use single precision FFTW if found\" ON)\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#   OPTION(FFTWD_LIB \"The full path to the fftw3 library (including the library)\" )\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Double Precision Lib\n",
        "Line" : 43,
        "CharPositionInLine" : 57
      },
      "4" : {
        "Text" : "#Double Precision Lib only if compiled with threads support\n",
        "Line" : 44,
        "CharPositionInLine" : 73
      },
      "5" : {
        "Text" : "#   OPTION(FFTWF_LIB \"The full path to the fftw3f library (including the library)\" )\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#Single Precision Lib\n",
        "Line" : 57,
        "CharPositionInLine" : 58
      },
      "7" : {
        "Text" : "#Single Precision Lib only if compiled with threads support\n",
        "Line" : 58,
        "CharPositionInLine" : 74
      },
      "CommentCount" : 8
    },
    "lib/wiiuse/cmake/module-docs/Example-FindMyPackage-UsingImportedTargets.cmake" : {
      "ObjectId" : "23ac10b2bd3c87a97a914ea9e82aa3c318d47b86",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find MyPackage library\n\n#\n\n# Example-FindMyPackage-UsingImportedTargets.cmake\n\n#\n\n# This module does the same thing as Example-FindMyPackage.cmake\n\n# except that rather than passing along full path names for libraries,\n\n# it creates imported targets.  The end result is roughly the same to\n\n# the end-user.  Please see that other file for the full documentation\n\n# of the example.\n\n#\n\n# Note that if you're going to be installing target export files, this\n\n# is probably what you should prefer. See cmake mailing list archives.\n\n#\n\n# Start of what would be a minimal module documentation block:\n\n#\n\n# Cache Variables: (not for direct use in CMakeLists.txt)\n\n#  MYPACKAGE_ROOT\n\n#  MYPACKAGE_LIBRARY\n\n#  MYPACKAGE_INCLUDE_DIR\n\n#  MYPACKAGE_a_LIBRARY\n\n#  MYPACKAGE_a_INCLUDE_DIR\n\n#  MYPACKAGE_b_LIBRARY\n\n#  MYPACKAGE_b_INCLUDE_DIR\n\n#  MYPACKAGE_c_LIBRARY\n\n#  MYPACKAGE_c_INCLUDE_DIR\n\n#\n\n# Non-cache variables you might use in your CMakeLists.txt:\n\n#  MYPACKAGE_FOUND\n\n#\n\n#  MYPACKAGE_LIBRARIES\n\n#  MYPACKAGE_INCLUDE_DIRS\n\n#  MYPACKAGE_LINKER_FLAGS\n\n#\n\n#  MYPACKAGE_a_LIBRARIES\n\n#  MYPACKAGE_a_INCLUDE_DIRS\n\n#  MYPACKAGE_a_LINKER_FLAGS\n\n#\n\n#  MYPACKAGE_b_LIBRARIES\n\n#  MYPACKAGE_b_INCLUDE_DIRS\n\n#  MYPACKAGE_b_LINKER_FLAGS\n\n#\n\n#  MYPACKAGE_c_LIBRARIES\n\n#  MYPACKAGE_c_INCLUDE_DIRS\n\n#  MYPACKAGE_c_LINKER_FLAGS\n\n#\n\n# Use this module this way:\n\n#  find_package(MyPackage)\n\n#  include_directories(${MYPACKAGE_INCLUDE_DIRS})\n\n#  add_executable(myapp ${SOURCES})\n\n#  target_link_libraries(myapp ${MYPACKAGE_LIBRARIES})\n\n#  set_property(TARGET myapp PROPERTY LINK_FLAGS ${MYPACKAGE_LINKER_FLAGS})\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (CMake standard module)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Assuming that the components are named libmypackagea, libmypackageb, etc\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# see /usr/share/cmake-2.x/Modules/FindBLAS.cmake for the variables this will define\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set variables containing libraries and their dependencies\n\n# Always use the plural form for the variables defined by other find modules:\n\n# they might have dependencies too!\n",
        "Line" : 124,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# No include dir for BLAS?\n",
        "Line" : 136,
        "CharPositionInLine" : 58
      },
      "6" : {
        "Text" : "# End of Example-FindMyPackage-UsingImportedTargets.cmake\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "lib/wiiuse/cmake/module-docs/Example-FindMyPackage.cmake" : {
      "ObjectId" : "cdf3bfcadc053dbdbe661514975efb953aea323e",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find MyPackage library\n\n#\n\n# Example-FindMyPackage.cmake\n\n#\n\n# This example is for a fairly in-depth library that has four\n\n# internal dependencies as well as an external dependency.\n\n# The dependency tree is described below, in graphviz/dot format, and you\n\n# can remove the #'s from the following lines and run it through graphviz,\n\n# with this command: dot dependencies.dot -O -Tpdf\n\n#\n\n# --- start of dependencies.dot ---\n\n# digraph {\n\n#\tBLAS;\n\n#\tsubgraph cluster_mypackage {\n\n#\t\tlabel = \"Components that are part of MyPackage\";\n\n#\t\tlibmypackagecore -> libmypackagea;\n\n#\t\tlibmypackagea -> libmypackageb;\n\n#\t\tlibmypackageb -> libmypackagec;\n\n#\t\tlibmypackagec -> BLAS;\n\n#\t}\n\n# }\n\n# --- end of dependencies.dot ---\n\n#\n\n# Because our imaginary component \"c\" requires BLAS and BLAS needs some\n\n# linker flags, MYPACKAGE_..._LINKER_FLAGS joins the usual group of\n\n# _LIBRARY/_LIBRARIES and _INCLUDE_DIR/_INCLUDE_DIRS variables.  If\n\n# you don't use a library like that, you don't need to include the\n\n# lines dealing with that group of variables.\n\n#\n\n# Most library aren't nearly this complex - but some are, and many\n\n# have some parts of the complexity handled here.\n\n#\n\n# Start of what would be a minimal module documentation block:\n\n#\n\n# Cache Variables: (not for direct use in CMakeLists.txt)\n\n#  MYPACKAGE_ROOT\n\n#  MYPACKAGE_LIBRARY\n\n#  MYPACKAGE_INCLUDE_DIR\n\n#  MYPACKAGE_a_LIBRARY\n\n#  MYPACKAGE_a_INCLUDE_DIR\n\n#  MYPACKAGE_b_LIBRARY\n\n#  MYPACKAGE_b_INCLUDE_DIR\n\n#  MYPACKAGE_c_LIBRARY\n\n#  MYPACKAGE_c_INCLUDE_DIR\n\n#\n\n# Non-cache variables you might use in your CMakeLists.txt:\n\n#  MYPACKAGE_FOUND\n\n#\n\n#  MYPACKAGE_LIBRARIES\n\n#  MYPACKAGE_INCLUDE_DIRS\n\n#  MYPACKAGE_LINKER_FLAGS\n\n#\n\n#  MYPACKAGE_a_LIBRARIES\n\n#  MYPACKAGE_a_INCLUDE_DIRS\n\n#  MYPACKAGE_a_LINKER_FLAGS\n\n#\n\n#  MYPACKAGE_b_LIBRARIES\n\n#  MYPACKAGE_b_INCLUDE_DIRS\n\n#  MYPACKAGE_b_LINKER_FLAGS\n\n#\n\n#  MYPACKAGE_c_LIBRARIES\n\n#  MYPACKAGE_c_INCLUDE_DIRS\n\n#  MYPACKAGE_c_LINKER_FLAGS\n\n#\n\n# Use this module this way:\n\n#  find_package(MyPackage)\n\n#  include_directories(${MYPACKAGE_INCLUDE_DIRS})\n\n#  add_executable(myapp ${SOURCES})\n\n#  target_link_libraries(myapp ${MYPACKAGE_LIBRARIES})\n\n#  set_property(TARGET myapp PROPERTY LINK_FLAGS ${MYPACKAGE_LINKER_FLAGS})\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (CMake standard module)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Assuming that the components are named libmypackagea, libmypackageb, etc\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Searching for dependencies here - always quiet.\n\n# see /usr/share/cmake-2.x/Modules/FindBLAS.cmake for the variables this will define\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set variables containing libraries and their dependencies\n\n# Always use the plural form for the variables defined by other find modules:\n\n# they might have dependencies too!\n",
        "Line" : 144,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# No include dir for BLAS?\n",
        "Line" : 149,
        "CharPositionInLine" : 58
      },
      "6" : {
        "Text" : "# End of Example-FindMyPackage.cmake\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "lib/wiiuse/cmake/module-docs/Example-FindMySimplePackage.cmake" : {
      "ObjectId" : "678b8684e620f029aada5720fd0256e3cb0d5fc7",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find MySimplePackage library\n\n#\n\n# Example-MySimplePackage.cmake\n\n#\n\n# This example is for a pretty simple library but that is still fairly\n\n# common in its complexity.\n\n#\n\n# Cache Variables: (probably not for direct use in your scripts)\n\n#  MYSIMPLEPACKAGE_INCLUDE_DIR\n\n#  MYSIMPLEPACKAGE_LIBRARY\n\n#\n\n# Non-cache variables you might use in your CMakeLists.txt:\n\n#  MYSIMPLEPACKAGE_FOUND\n\n#  MYSIMPLEPACKAGE_INCLUDE_DIRS\n\n#  MYSIMPLEPACKAGE_LIBRARIES\n\n#  MYSIMPLEPACKAGE_RUNTIME_LIBRARIES - aka the dll for installing\n\n#  MYSIMPLEPACKAGE_RUNTIME_LIBRARY_DIRS\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Might want to look close to the library first for the includes.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# the library I based this on was sometimes bundled right next to its include\n",
        "Line" : 59,
        "CharPositionInLine" : 14
      },
      "3" : {
        "Text" : "# There's a DLL to distribute on Windows - find where it is.\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "lib/wiiuse/cmake/nested_targets/DCubed/CMakeLists.txt" : {
      "ObjectId" : "c25267e3c60de04028e82152dcb8f58afa5a075a",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Build the DCubed wrapper libraries as a part of your solution.\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file ../../LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/wiiuse/cmake/nested_targets/DCubed/d3ew_p/CMakeLists.txt" : {
      "ObjectId" : "c86c52712ee5103206cf563d659a3c7c165c4028",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Build the DCubed wrapper library d3ew_p as a part of your solution.\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file ../../LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/wiiuse/cmake/nested_targets/DCubed/d3ew_scene/CMakeLists.txt" : {
      "ObjectId" : "1f881b978dce6ed85416603ac3c0ea86cd213c24",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Build the DCubed wrapper library d3ew_scene as a part of your solution.\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file ../../LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/wiiuse/cmake/nested_targets/OpenHaptics/CMakeLists.txt" : {
      "ObjectId" : "f46daa391613dea8e349d0d123fe4eeacd10b68d",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Build the OpenHaptics utility libraries as a part of your solution.\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file ../../LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Work around bug in library at least <= 3.10\n",
        "Line" : 14,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Disable warnings - no sense in warning about Sensable's potential bugs.\n",
        "Line" : 60,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Disable warnings - no sense in warning about Sensable's potential bugs.\n",
        "Line" : 87,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "lib/wiiuse/cmake/nested_targets/Parasolid/CMakeLists.txt" : {
      "ObjectId" : "3dfc51e68df825c1ea822ae179d7d2d8068a1ec9",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Build the Parasolid utility libraries as a part of your solution.\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file ../../LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/wiiuse/cmake/nested_targets/cutil/CMakeLists.txt" : {
      "ObjectId" : "2f27114927d58fb67eb838292f02916838eff05b",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake cross-platform build system\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu>\n\n# http://academic.cleardefinition.com/\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# Build the project\n\n###\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "lib/wiiuse/cmake/package-licensing/Boost.cmake" : {
      "ObjectId" : "22e7d86ee31947beceefdde935138dd0c2316d89",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file ../LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/wiiuse/cmake/package-licensing/Eigen.cmake" : {
      "ObjectId" : "538d787ed146f4ca73fa86cd1046f7c67cb16d8d",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file ../LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/wiiuse/cmake/package-licensing/FLTK.cmake" : {
      "ObjectId" : "21d71687cbcf81996359b3fc680a89c6a2d841a3",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file ../LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/wiiuse/cmake/package-licensing/Lua.cmake" : {
      "ObjectId" : "b15f51b3eb0bdd8a3267159f245ae6ec3e49bde5",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file ../LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/wiiuse/cmake/package-licensing/LuaBind.cmake" : {
      "ObjectId" : "342e7a419a60f5410c1839f099e83ce2269379e4",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file ../LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/wiiuse/cmake/package-licensing/OpenHapticsAcademicEdition.cmake" : {
      "ObjectId" : "5a06521d516da8dc90e68f49be8b8228c4b5c16b",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file ../LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/wiiuse/cmake/package-licensing/OpenSceneGraph.cmake" : {
      "ObjectId" : "c4fa29be16f68bade3e92dce017cab4f4bceb9dd",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file ../LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/wiiuse/cmake/package-licensing/PhysicalModelingUtils.cmake" : {
      "ObjectId" : "edda38f0c82e64ac231bf9510e740b9d8091afab",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file ../LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/wiiuse/cmake/package-licensing/Qt-LGPL.cmake" : {
      "ObjectId" : "db4d78d32b794a18b4d825bf36058da8b46533ee",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file ../LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/wiiuse/cmake/package-licensing/VPS.cmake" : {
      "ObjectId" : "4a2b1ca8531c0cb2494b7ba85d90449d640e952d",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file ../LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/wiiuse/cmake/package-licensing/VRJuggLua.cmake" : {
      "ObjectId" : "d2da335cc38f798148499ebcaec7abbfa7594bcf",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Original Author:\n\n# 2009-2012 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2012.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file ../LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/wiiuse/cmake/package-licensing/VRJuggler.cmake" : {
      "ObjectId" : "f015ef3517f6b0ed1a91ee66fb6bc096ba4f9e75",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file ../LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/wiiuse/cmake/package-licensing/VirtuoseAPI.cmake" : {
      "ObjectId" : "fe7d5c653fcb911e08e600533215163330aa25ac",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file ../LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/wiiuse/cmake/package-licensing/osgLua.cmake" : {
      "ObjectId" : "04780e13091c3fdd110f20cd61c530a38f83db5b",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file ../LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/wiiuse/example-sdl/CMakeLists.txt" : {
      "ObjectId" : "a7cb4dec03ccbdf6c3a8c0e85f93d983f0917d82",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/wiiuse/example/CMakeLists.txt" : {
      "ObjectId" : "40f256a781bdcb05ff6f6e172845b13932b96e23",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/wiiuse/src/CMakeLists.txt" : {
      "ObjectId" : "1dfb6dce8954f4a0848c430945b8c2d6a17fb4e7",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# make sure we use the gcc for Objective-C files as well so that the\n\n# sysroot and deployment target arguments are correctly passed to the compiler\n",
        "Line" : 46,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# link libraries\n",
        "Line" : 66,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# do not link Objective-C runtime with clang\n",
        "Line" : 78,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 3
    },
    "lib/zlib/CMakeLists.txt" : {
      "ObjectId" : "4a9e4d6a530f9f6692fb6a9dab5c7d47f4924bd8",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Check to see if we have large file support\n\n#\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We add these other definitions here because CheckTypeSize.cmake\n\n# in CMake 2.4.x does not automatically do so and we want\n\n# compatibility with CMake 2.4.x.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# clear variable\n",
        "Line" : 42,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "#\n\n# Check for fseeko\n\n#\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Check for unistd.h\n\n#\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If we're doing an out of source build and the user has a zconf.h\n\n# in their source tree...\n",
        "Line" : 65,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#============================================================================\n\n# zlib\n\n#============================================================================\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#if(NOT MINGW)\n\n#    set(ZLIB_SRCS ${ZLIB_SRCS}\n\n#        win32/zlib1.rc # If present will override custom build rule below.\n\n#    )\n\n#endif()\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# parse the full version number from zlib.h and include in ZLIB_FULL_VERSION\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# This gets us DLL resource information when compiling on MinGW.\n",
        "Line" : 133,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# This property causes shared libraries on Linux to have the full version\n\n# encoded into their final filename.  We disable this on Cygwin because\n\n# it causes cygz-${ZLIB_FULL_VERSION}.dll to be created when cygz.dll\n\n# seems to be the default.\n\n#\n\n# This has no effect with MSVC, on that platform the version info for\n\n# the DLL comes from the resource file win32/zlib1.rc\n",
        "Line" : 154,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# On unix-like platforms the library is almost always called libz\n",
        "Line" : 165,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Creates zlib1.dll when building shared library version\n",
        "Line" : 169,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "#============================================================================\n\n# Example binaries\n\n#============================================================================\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#add_executable(example test/example.c)\n\n#target_link_libraries(example zlib)\n\n#add_test(example example)\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#add_executable(minigzip test/minigzip.c)\n\n#target_link_libraries(minigzip zlib)\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#if(HAVE_OFF64_T)\n\n#    add_executable(example64 test/example.c)\n\n#    target_link_libraries(example64 zlib)\n\n#    set_target_properties(example64 PROPERTIES COMPILE_FLAGS \"-D_FILE_OFFSET_BITS=64\")\n\n#    add_test(example64 example64)\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#    add_executable(minigzip64 test/minigzip.c)\n\n#    target_link_libraries(minigzip64 zlib)\n\n#    set_target_properties(minigzip64 PROPERTIES COMPILE_FLAGS \"-D_FILE_OFFSET_BITS=64\")\n\n#endif()\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "lib/zlib/Makefile" : {
      "ObjectId" : "6bba86c73fca2abda416baa1a7cf883b3494fb29",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "sources.cmake" : {
      "ObjectId" : "d4f28ae4de46aeab54958f03becd44fd958b80f4",
      "LastModified" : "2019-04-07T20:10:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Modify this file to change the last-modified date when you add/remove a file.\n\n# This will then trigger a new cmake run automatically.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 221,
    "MAKEFILE" : 2,
    "AUTOMAKE" : 4,
    "ANT" : 1
  },
  "ElapsedTime" : 7366
}