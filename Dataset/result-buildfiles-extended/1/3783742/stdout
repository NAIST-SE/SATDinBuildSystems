{
  "Repository" : "3783742",
  "Revision" : "HEAD",
  "ObjectId" : "f659b8cf1025b9076518f1421f98fa8b55ad98b1",
  "CommitTime" : "2019-04-09T12:05:56Z",
  "Files" : {
    "build.xml" : {
      "ObjectId" : "ecaec03f23b775c51262a77f9be8a7dcdbd822ab",
      "LastModified" : "2017-10-17T20:43:27Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "\n    Requires maven-ant-tasks to maintain this project's dependencies in Maven's\n    pom.xml only and have the latter fetch them when necessary so that we don't\n    have to commit dependent binaries in this project's repository.\n\n    To install maven-ant-tasks locally, run the following once:\n    mvn dependency:get -DartifactId=maven-ant-tasks -DgroupId=org.apache.maven -Dversion=2.1.3\n\n    Then invoke Ant with the -lib command line argument pointing to the\n    directory which contains maven-ant-tasks as follows:\n    ant -lib ~/.m2/repository/org/apache/maven/maven-ant-tasks/2.1.3 [target]\n    ",
        "Line" : 14,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : " Import debian build xml ",
        "Line" : 70,
        "CharPositionInLine" : 37
      },
      "2" : {
        "Text" : " Jitsi Videobridge Version ",
        "Line" : 201,
        "CharPositionInLine" : 39
      },
      "3" : {
        "Text" : " set the build id according to the cruisecontrol property ",
        "Line" : 203,
        "CharPositionInLine" : 74
      },
      "4" : {
        "Text" : " JAVADOC ",
        "Line" : 210,
        "CharPositionInLine" : 21
      },
      "5" : {
        "Text" : " build all binaries and the jitsi-videobridge.jar\n        for all supported platforms ",
        "Line" : 328,
        "CharPositionInLine" : 40
      },
      "CommentCount" : 6
    },
    "pom.xml" : {
      "ObjectId" : "7c8b10f79f7cc2533277a4e3432259347fb98c4b",
      "LastModified" : "2019-04-09T12:05:56Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " https://mvnrepository.com/artifact/org.jetbrains/annotations ",
        "Line" : 76,
        "CharPositionInLine" : 74
      },
      "1" : {
        "Text" : " org.jitsi ",
        "Line" : 82,
        "CharPositionInLine" : 23
      },
      "2" : {
        "Text" : " Note that this is not part of jitsi/jitsi, and it has a separate version. ",
        "Line" : 143,
        "CharPositionInLine" : 87
      },
      "3" : {
        "Text" : " runtime ",
        "Line" : 205,
        "CharPositionInLine" : 21
      },
      "4" : {
        "Text" : " test ",
        "Line" : 212,
        "CharPositionInLine" : 18
      },
      "5" : {
        "Text" : " https://mvnrepository.com/artifact/org.powermock/powermock-core ",
        "Line" : 219,
        "CharPositionInLine" : 74
      },
      "6" : {
        "Text" : " https://mvnrepository.com/artifact/org.powermock/powermock-api-easymock ",
        "Line" : 226,
        "CharPositionInLine" : 82
      },
      "7" : {
        "Text" : " https://mvnrepository.com/artifact/org.powermock/powermock-module-junit4 ",
        "Line" : 233,
        "CharPositionInLine" : 83
      },
      "8" : {
        "Text" : " The slightly odd artifact names help with backwards compatibility with the checkNatives() implementation. ",
        "Line" : 276,
        "CharPositionInLine" : 131
      },
      "CommentCount" : 9
    }
  },
  "FileTypes" : {
    "ANT" : 1,
    "MAVEN" : 1
  },
  "ElapsedTime" : 2450
}