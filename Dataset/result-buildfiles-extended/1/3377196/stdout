{
  "Repository" : "3377196",
  "Revision" : "HEAD",
  "ObjectId" : "eb76cd87bbe959e6e8f334bd749f55a17fd06c67",
  "CommitTime" : "2019-04-17T17:53:11Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "9646ffc3e148f21ff591a696172e680eab70fac3",
      "LastModified" : "2018-12-29T14:52:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Main CMake file for the ZoneMinder project.\n\n# Created by mastertheknife (Kfir Itzhak)\n\n# For more information and installation, see the INSTALL file\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# make API version a minor of ZM version\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Make sure the submodules are there\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# CMake does not allow out-of-source build if CMakeCache.exists \n\n# in the source folder. Abort and notify the user\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Default build type. To change the build type, \n\n# use the CMAKE_BUILD_TYPE configuration option.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Can assist in troubleshooting\n\n#set(CMAKE_VERBOSE_MAKEFILE ON)\n\n#set(CMAKE_INSTALL_ALWAYS ON)\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Host OS Check\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Default CLFAGS and CXXFLAGS:\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# GCC below 6.0 doesn't support __target__(\"fpu=neon\") attribute, required for compiling ARM Neon code, otherwise compilation fails.\n\n# Must use -mfpu=neon compiler flag instead, but only do that for processors that support neon, otherwise strip the neon code alltogether,\n\n# because passing -fmpu=neon is unsafe to processors that don't support neon\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Arm neon support only tested on Linux. If your arm hardware is running a non-Linux distro and is using gcc then contact us.\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# maybe make the following error checks fatal\n",
        "Line" : 81,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# Modules that we need:\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Configuration options\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Advanced\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Reassign some variables if a target distro has been specified\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Required for certain checks to work\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Required for including headers from the this folder\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# This is required to enable searching in lib64 (if exists), do not change\n",
        "Line" : 255,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Set the systemd flag if systemd is autodetected or ZM_SYSTEMD has been set\n",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# System checks\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# *** LIBRARY CHECKS ***\n",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# zlib\n",
        "Line" : 301,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Do not check for cURL if ZM_NO_CURL is on\n",
        "Line" : 314,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# cURL\n",
        "Line" : 316,
        "CharPositionInLine" : 1
      },
      "24" : {
        "Text" : "# jpeg\n",
        "Line" : 330,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#link_directories(${JPEG_LIBRARY})\n",
        "Line" : 335,
        "CharPositionInLine" : 1
      },
      "26" : {
        "Text" : "# OpenSSL\n",
        "Line" : 348,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# pthread (using find_library and find_path)\n",
        "Line" : 362,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# pcre (using find_library and find_path)\n",
        "Line" : 383,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# gcrypt (using find_library and find_path)\n",
        "Line" : 400,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# gnutls (using find_library and find_path)\n",
        "Line" : 417,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# mysqlclient (using find_library and find_path)\n",
        "Line" : 439,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# x264 (using find_library and find_path)\n",
        "Line" : 460,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# mp4v2 (using find_library and find_path)\n",
        "Line" : 477,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# mp4v2/mp4v2.h\n",
        "Line" : 483,
        "CharPositionInLine" : 8
      },
      "35" : {
        "Text" : "# mp4v2.h\n",
        "Line" : 491,
        "CharPositionInLine" : 8
      },
      "36" : {
        "Text" : "# mp4.h\n",
        "Line" : 499,
        "CharPositionInLine" : 1
      },
      "37" : {
        "Text" : "# avformat (using find_library and find_path)\n",
        "Line" : 515,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# avcodec (using find_library and find_path)\n",
        "Line" : 532,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# avdevice (using find_library and find_path)\n",
        "Line" : 549,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# avutil (using find_library and find_path)\n",
        "Line" : 566,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# swscale (using find_library and find_path)\n",
        "Line" : 585,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# SWresample (using find_library and find_path)\n",
        "Line" : 602,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# AVresample (using find_library and find_path)\n",
        "Line" : 618,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# Find the path to the ffmpeg executable\n",
        "Line" : 637,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Do not check for libvlc if ZM_NO_LIBVLC is on\n",
        "Line" : 647,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# libvlc (using find_library and find_path)\n",
        "Line" : 649,
        "CharPositionInLine" : 1
      },
      "47" : {
        "Text" : "#find_package(Boost 1.36.0)\n\n#if(Boost_FOUND)\n",
        "Line" : 667,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "#include_directories(${Boost_INCLUDE_DIRS})\n\n##set(CMAKE_REQUIRED_INCLUDES \"${Boost_INCLUDE_DIRS}\")\n\n#list(APPEND ZM_BIN_LIBS \"${Boost_LIBRARIES}\")\n",
        "Line" : 669,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "#endif()\n\n#\n\n# *** END OF LIBRARY CHECKS ***\n",
        "Line" : 672,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Check for gnutls or crypto\n",
        "Line" : 676,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Check for V4L header files and enable ZM_HAS_V4L, ZM_HAS_V4L1, ZM_HAS_V4L2 accordingly\n\n# Setting to zeros first is required because ZM uses #define for these\n",
        "Line" : 682,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# Check for PCRE and enable ZM_PCRE accordingly\n",
        "Line" : 703,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# Check for mmap and enable in all components\n",
        "Line" : 708,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# Check for the ONVIF flag and enable ZM_HAS_ONVIF accordingly\n",
        "Line" : 717,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# Check for authentication functions\n",
        "Line" : 723,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# Dirty fix for zm_user only using openssl's md5 if gnutls and gcrypt are not available.\n\n# This needs to be fixed in zm_user.[h,cpp] but such fix will also require changes to configure.ac\n",
        "Line" : 755,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# Check for Perl\n",
        "Line" : 762,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# Checking for perl modules requires FindPerlModules.cmake\n\n# Check all required modules at once\n\n# TODO: Add checking for the optional modules\n",
        "Line" : 769,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# Attempt to check which user apache (or other web server) runs on by \n\n# searching for a user beginning with apache or www and then cutting the user \n\n# from the first matching user line\n",
        "Line" : 781,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# Check for a user matching ^apache and cut the username from the \n",
        "Line" : 785,
        "CharPositionInLine" : 1
      },
      "61" : {
        "Text" : "# userline in the first match\n",
        "Line" : 786,
        "CharPositionInLine" : 8
      },
      "62" : {
        "Text" : "# Check if webgroup contains anything. If not, use the web user as the web group\n",
        "Line" : 802,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# Check for polkit\n",
        "Line" : 810,
        "CharPositionInLine" : 4
      },
      "64" : {
        "Text" : "# Find the path to an arp compatible executable\n",
        "Line" : 818,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# Some variables that zm expects\n",
        "Line" : 836,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# If this is an out-of-source build, copy the files we need to the binary directory\n",
        "Line" : 856,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# Generate files from the .in files\n",
        "Line" : 861,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# Create a target for man pages\n",
        "Line" : 868,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# Process subdirectories\n",
        "Line" : 872,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# Enable ONVIF support\n",
        "Line" : 879,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# Process distro subdirectories\n",
        "Line" : 884,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# Print optional libraries detection status\n",
        "Line" : 891,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# Run ZM configuration generator\n",
        "Line" : 895,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# Install zm.conf\n",
        "Line" : 906,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# Uninstall target\n",
        "Line" : 910,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# Configure CCache if available\n",
        "Line" : 918,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 77
    },
    "cmake/Modules/CheckPrototypeDefinition.cmake" : {
      "ObjectId" : "2342b3c4f7a477f76210a24a17c75dc8952a322d",
      "LastModified" : "2013-09-28T09:59:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check if the protoype we expect is correct.\n\n# check_prototype_definition(FUNCTION PROTOTYPE RETURN HEADER VARIABLE)\n\n#  FUNCTION - The name of the function (used to check if prototype exists)\n\n#  PROTOTYPE- The prototype to check.\n\n#  RETURN - The return value of the function.\n\n#  HEADER - The header files required.\n\n#  VARIABLE - The variable to store the result.\n\n# Example:\n\n#  check_prototype_definition(getpwent_r\n\n#   \"struct passwd *getpwent_r(struct passwd *src, char *buf, int buflen)\"\n\n#   \"NULL\"\n\n#   \"unistd.h;pwd.h\"\n\n#   SOLARIS_GETPWENT_R)\n\n# The following variables may be set before calling this macro to\n\n# modify the way the check is run:\n\n#\n\n#  CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n#  CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n#  CMAKE_REQUIRED_INCLUDES = list of include directories\n\n#  CMAKE_REQUIRED_LIBRARIES = list of libraries to link\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2005-2009 Kitware, Inc.\n\n# Copyright 2010-2011 Andreas Schneider <asn@cryptomilk.org>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n\n#\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Modules/CheckPrototypeDefinition_fixed.cmake" : {
      "ObjectId" : "550bcaa50c35966973f202ce881d82c71e0e8dbe",
      "LastModified" : "2013-10-21T13:58:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check if the protoype we expect is correct.\n\n# check_prototype_definition(FUNCTION PROTOTYPE RETURN HEADER VARIABLE)\n\n#  FUNCTION - The name of the function (used to check if prototype exists)\n\n#  PROTOTYPE- The prototype to check.\n\n#  RETURN - The return value of the function.\n\n#  HEADER - The header files required.\n\n#  VARIABLE - The variable to store the result.\n\n# Example:\n\n#  check_prototype_definition(getpwent_r\n\n#   \"struct passwd *getpwent_r(struct passwd *src, char *buf, int buflen)\"\n\n#   \"NULL\"\n\n#   \"unistd.h;pwd.h\"\n\n#   SOLARIS_GETPWENT_R)\n\n# The following variables may be set before calling this macro to\n\n# modify the way the check is run:\n\n#\n\n#  CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n#  CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n#  CMAKE_REQUIRED_INCLUDES = list of include directories\n\n#  CMAKE_REQUIRED_LIBRARIES = list of libraries to link\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2005-2009 Kitware, Inc.\n\n# Copyright 2010-2011 Andreas Schneider <asn@cryptomilk.org>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n\n#\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Modules/CheckSendfile.cmake" : {
      "ObjectId" : "1796b92e30e90961c5ec4a5d56aae4dec5c2450e",
      "LastModified" : "2015-12-14T20:49:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check whether sendfile() is supported and what prototype it has\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindGLIB2.cmake" : {
      "ObjectId" : "083144deae23bdd22a90d8dd5e041faa1ab66070",
      "LastModified" : "2015-12-14T20:49:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the GLIB2 libraries\n\n# Once done this will define\n\n#\n\n#  GLIB2_FOUND - system has glib2\n\n#  GLIB2_INCLUDE_DIR - the glib2 include directory\n\n#  GLIB2_LIBRARIES - glib2 library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2008 Laurent Montel, <montel@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# search the glibconfig.h include dir under the same root where the library is found\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# not sure if this include dir is optional or required\n\n# for now it is optional\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/Modules/FindPerlModules.cmake" : {
      "ObjectId" : "f09ff851d1191c6b8fff26126ea24334794a51b4",
      "LastModified" : "2015-12-14T20:49:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find perl modules, passed as COMPONENTS\n\n#\n\n# Non-cache variable you might use in your CMakeLists.txt:\n\n#  PERLMODULES_FOUND\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Original Author:\n\n# 2012 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2012.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindPolkit.cmake" : {
      "ObjectId" : "cd7903176a39cf48669e4a447bb18288475bef9d",
      "LastModified" : "2015-12-14T20:49:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Polkit\n\n# Once done this will define\n\n#\n\n# POLKIT_FOUND - system has Polkit\n\n# POLKIT_INCLUDE_DIRS - Polkit's include directories\n\n# POLKIT_AGENT_INCLUDE_DIRS - Polkit-agent's include directories\n\n# POLKIT_LIBRARIES - Link this to use polkit's gobject library\n\n# POLKIT_AGENT_LIBRARY - Link this to use the agent wrapper in polkit\n\n# POLKIT_DEFINITIONS - Compiler switches required for using Polkit\n\n# Copyright (c) 2009, Dario Freddi, <drf@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#NOTE: Polkit agent library is disabled!\n",
        "Line" : 1,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#pkg_check_modules(PC_POLKIT_AGENT polkit-agent-1)\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# We must include glib paths too... which sucks balls\n",
        "Line" : 26,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#find_path( POLKIT_AGENT_INCLUDE_DIR\n\n# NAMES polkitagent/polkitagent.h\n\n# PATH_SUFFIXES polkit-1\n\n# HINTS ${PC_POLKIT_AGENT_INCLUDE_DIRS}\n\n#)\n\n#set(POLKIT_INCLUDE_DIRS ${GLIB2_INCLUDE_DIR} ${_POLKIT_INCLUDE_DIR})\n\n#set(POLKIT_AGENT_INCLUDE_DIRS ${GLIB2_INCLUDE_DIR} ${_POLKIT_AGENT_INCLUDE_DIR})\n",
        "Line" : 38,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#find_library( POLKIT_AGENT_LIBRARY\n\n# NAMES polkit-agent-1\n\n# HINTS ${PC_POLKIT_AGENT_LIBDIR}\n\n#)\n\n#set(POLKIT_LIBRARIES ${_POLKIT_LIBRARIES} ${GLIB2_LIBRARIES})\n\n#set(POLKIT_AGENT_LIBRARY ${_POLKIT_AGENT_LIBRARY} ${GLIB2_LIBRARIES})\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set POLKIT_FOUND to TRUE if\n\n# all listed variables are TRUE\n\n#find_package_handle_standard_args(Polkit DEFAULT_MSG POLKIT_LIBRARIES POLKIT_AGENT_LIBRARY\n\n# POLKIT_INCLUDE_DIR POLKIT_AGENT_INCLUDE_DIR GLIB2_FOUND)\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "cmake/Modules/GNUInstallDirs.cmake" : {
      "ObjectId" : "0302e4bef6c3910b1992fa0125c873fff066a427",
      "LastModified" : "2015-12-14T20:49:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Define GNU standard installation directories\n\n# Provides install directory variables as defined for GNU software:\n\n#  http://www.gnu.org/prep/standards/html_node/Directory-Variables.html\n\n# Inclusion of this module defines the following variables:\n\n#  CMAKE_INSTALL_<dir>      - destination for files of a given type\n\n#  CMAKE_INSTALL_FULL_<dir> - corresponding absolute path\n\n# where <dir> is one of:\n\n#  BINDIR           - user executables (bin)\n\n#  SBINDIR          - system admin executables (sbin)\n\n#  LIBEXECDIR       - program executables (libexec)\n\n#  SYSCONFDIR       - read-only single-machine data (etc)\n\n#  SHAREDSTATEDIR   - modifiable architecture-independent data (com)\n\n#  LOCALSTATEDIR    - modifiable single-machine data (var)\n\n#  LIBDIR           - object code libraries (lib or lib64 or lib/<multiarch-tuple> on Debian)\n\n#  INCLUDEDIR       - C header files (include)\n\n#  OLDINCLUDEDIR    - C header files for non-gcc (/usr/include)\n\n#  DATAROOTDIR      - read-only architecture-independent data root (share)\n\n#  DATADIR          - read-only architecture-independent data (DATAROOTDIR)\n\n#  INFODIR          - info documentation (DATAROOTDIR/info)\n\n#  LOCALEDIR        - locale-dependent data (DATAROOTDIR/locale)\n\n#  MANDIR           - man documentation (DATAROOTDIR/man)\n\n#  DOCDIR           - documentation root (DATAROOTDIR/doc/PROJECT_NAME)\n\n# Each CMAKE_INSTALL_<dir> value may be passed to the DESTINATION options of\n\n# install() commands for the corresponding file type.  If the includer does\n\n# not define a value the above-shown default will be used and the value will\n\n# appear in the cache for editing by the user.\n\n# Each CMAKE_INSTALL_FULL_<dir> value contains an absolute path constructed\n\n# from the corresponding destination by prepending (if necessary) the value\n\n# of CMAKE_INSTALL_PREFIX.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2011 Nikita Krupen'ko <krnekit@gmail.com>\n\n# Copyright 2011 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Installation directories\n\n#\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Override this default 'lib' with 'lib64' iff:\n\n#  - we are on Linux system but NOT cross-compiling\n\n#  - we are NOT on debian\n\n#  - we are on a 64 bits system\n\n# reason is: amd64 ABI: http://www.x86-64.org/documentation/abi.pdf\n\n# For Debian with multiarch, use 'lib/${CMAKE_LIBRARY_ARCHITECTURE}' if\n\n# CMAKE_LIBRARY_ARCHITECTURE is set (which contains e.g. \"i386-linux-gnu\"\n\n# See http://wiki.debian.org/Multiarch\n",
        "Line" : 73,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# is this a debian system ?\n",
        "Line" : 83,
        "CharPositionInLine" : 38
      },
      "5" : {
        "Text" : "# not debian, rely on CMAKE_SIZEOF_VOID_P:\n",
        "Line" : 87,
        "CharPositionInLine" : 11
      },
      "6" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Values whose defaults are relative to DATAROOTDIR.  Store empty values in\n\n# the cache and store the defaults in local variables if the cache values are\n\n# not set explicitly.  This auto-updates the defaults as DATAROOTDIR changes.\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Result directories\n\n#\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "cmake/Modules/Pod2Man.cmake" : {
      "ObjectId" : "734be239bf062604c47a915a0c9484262d132d30",
      "LastModified" : "2018-12-11T15:29:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (C) 2012\tEmmanuel Roullit <emmanuel.roullit@gmail.com>\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 2 of the License, or (at\n\n# your option) any later version.\n\n# \n\n# This program is distributed in the hope that it will be useful, but\n\n# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n\n# for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License along\n\n# with this program; if not, write to the Free Software Foundation, Inc.,\n\n# 51 Franklin St, Fifth Floor, Boston, MA 02110, USA\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Generate man pages of the project by using the\n\n# POD header written in the tool source code.\n\n# To use it, include this file in CMakeLists.txt and\n\n# invoke POD2MAN(<podfile> <manfile> <section>)\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# It is not possible add a dependency to target 'install'\n\n# Run hard-coded 'make man' when 'make install' is invoked\n",
        "Line" : 66,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 3
    },
    "db/CMakeLists.txt" : {
      "ObjectId" : "ed215d35f21ab51085cbae1dfcca89edadbaf40c",
      "LastModified" : "2018-12-11T15:29:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt for the ZoneMinder database scripts\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create files from the .in files\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Glob all database upgrade scripts\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Install the database upgrade scripts\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# install zm_update-1.31.30.sql\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# install zm_create.sql\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# install triggers.sql\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "distros/opensuse/CMakeLists.txt" : {
      "ObjectId" : "6ce1a999f8415cd50d5d6951e2dfed0985820ce6",
      "LastModified" : "2018-12-11T15:29:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt for the OpenSuse Target Distro.\n\n# Amended Apr 02 2014 David Wilcox\n\n# Add named variables so that if destinations change it will be easier\n\n# temp directory was not being installed\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create several empty folders\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Install the empty folders\n\n#install(DIRECTORY run DESTINATION /var DIRECTORY_PERMISSIONS OWNER_WRITE OWNER_READ OWNER_EXECUTE GROUP_WRITE GROUP_READ GROUP_EXECUTE WORLD_WRITE WORLD_READ WORLD_EXECUTE)\n\n#install(DIRECTORY sock swap DESTINATION /var/lib/zoneminder DIRECTORY_PERMISSIONS OWNER_WRITE OWNER_READ OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Create symlinks\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Opensuse cambazola? requires cambozola as a separate package so just link to it\n\n#install(CODE \"execute_process(COMMAND ln -sf ../../java/cambozola.jar \\\"\\$ENV{DESTDIR}${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATAROOTDIR}/zoneminder/www/cambozola.jar\\\")\")\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Install auxiliary files required to run zoneminder on OpenSuse\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "distros/redhat/CMakeLists.txt" : {
      "ObjectId" : "f1a1bc75b09d46a185ab9db9972592303f601f1b",
      "LastModified" : "2018-12-29T14:52:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt for the Redhat Target Distros.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# General strategy is to configure and install all files specific to Apache and Nginx\n\n# Then let the rpm specfile sort them into the appropriate sub-package\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Display a message to show the RHEL build options are being processed.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# CONFIGURE STAGE\n\n#\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Configure the common zoneminder files\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Configure the Apache zoneminder files\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Configure the Nginx zoneminder files\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# INSTALLATION STAGE\n\n#\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Install the common zoneminder files\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Install the Apache zoneminder files\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Install the Nginx zoneminder files\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Miscellaneous\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Symlink the cake php temp folder to the ZoneMinder temp folder\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Link to Cambozola\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Install auxiliary files\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "docs/Makefile" : {
      "ObjectId" : "f24d23df789e603d6a0bab72f2c2b0487e66e9e8",
      "LastModified" : "2015-12-14T20:49:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# User-friendly check for sphinx-build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Internal variables.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "misc/CMakeLists.txt" : {
      "ObjectId" : "990b8ce069988b00819ab3db6ad0a132ce77d6e7",
      "LastModified" : "2018-12-11T15:29:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt for the ZoneMinder misc files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create files from the .in files\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Do not install the misc files by default\n\n#install(FILES \"${CMAKE_CURRENT_BINARY_DIR}/apache.conf\" \"${CMAKE_CURRENT_BINARY_DIR}/logrotate.conf\" \"${CMAKE_CURRENT_BINARY_DIR}/syslog.conf\" DESTINATION \"${CMAKE_INSTALL_DATADIR}/zoneminder/misc\")\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Install Policykit rules and actions into the proper folders only on systems with systemd\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "onvif/CMakeLists.txt" : {
      "ObjectId" : "a6b9bde4eaf8bf8b17259be00931bb6648d1e384",
      "LastModified" : "2018-12-11T15:29:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt for the ZoneMinder ONVIF scripts\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Process the perl modules subdirectory\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "onvif/modules/CMakeLists.txt" : {
      "ObjectId" : "d7ddbf46603d8cb2cd7f09335255cb89cf1b53a9",
      "LastModified" : "2018-12-11T15:29:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt for the ZoneMinder ONVIF modules.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If this is an out-of-source build, copy the files we need to the binary directory\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# MAKEMAKER_NOECHO_COMMAND previously defined in /scripts/zoneminder/CMakeLists.txt\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add build target for the perl modules\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add install target for the perl modules\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add additional files and directories to make clean\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "onvif/proxy/CMakeLists.txt" : {
      "ObjectId" : "1a40c0ffb655a1ea411971808437adc47150dab1",
      "LastModified" : "2018-12-11T15:29:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt for the ZoneMinder ONVIF proxy module.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If this is an out-of-source build, copy the files we need to the binary directory\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# MAKEMAKER_NOECHO_COMMAND previously defined in /scripts/zoneminder/CMakeLists.txt\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add build target for the perl modules\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add install target for the perl modules\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add additional files and directories to make clean\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "scripts/CMakeLists.txt" : {
      "ObjectId" : "bd1885fbee0aaf4c2210dc1d070eca7ce5ebed2f",
      "LastModified" : "2019-03-20T14:15:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt for the ZoneMinder perl scripts.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Process the perl modules subdirectory\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Create files from the .in files\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#configure_file(zmdbbackup.in zmdbbackup @ONLY)\n\n#configure_file(zmdbrestore.in zmdbrestore @ONLY)\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#configure_file(zmeventdump.in zmeventdump @ONLY)\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Generate man files for the perl scripts destined for the bin folder\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Install the perl scripts\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "scripts/ZoneMinder/CMakeLists.txt" : {
      "ObjectId" : "876a33da36e60441925f8bc418bcc7f740a2bf89",
      "LastModified" : "2018-12-11T15:29:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt for the ZoneMinder perl module.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If this is an out-of-source build, copy the files we need to the binary directory\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Create files from the .in files\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add build target for the perl modules\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add install target for the perl modules\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add additional files and directories to make clean\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "e7e3157eba933abfebcd73c59dcc9db990e39dcf",
      "LastModified" : "2019-03-20T14:15:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt for the ZoneMinder binaries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create files from the .in files\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Group together all the source files that are used by all the binaries (zmc, zma, zmu, zms etc)\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# A fix for cmake recompiling the source files for every target.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Generate man files for the binaries destined for the bin folder\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "web/CMakeLists.txt" : {
      "ObjectId" : "50e5f99984aeb4aef9d0f9c3879447fb64152532",
      "LastModified" : "2018-12-11T15:29:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt for the ZoneMinder web files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Process the api subdirectory\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Process the tools/mootools subdirectory\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Create files from the .in files\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Install the web files\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Install the api config files (if its not in the source directory)\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Install the mootools symlinks (if its not in the source directory)\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "web/api/CMakeLists.txt" : {
      "ObjectId" : "d2a39ef134f4e978c5eeb9cad653989f43827222",
      "LastModified" : "2018-12-11T15:29:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt for the ZoneMinder web API files\n\n# The only purpose of this file is to configure the required files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Generate random salt and seed for the API\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Configure database.php\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Configure core.php\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Configure app/Config/bootstrap.php\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Configure lib/Cake/bootstrap.php\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "web/api/build.xml" : {
      "ObjectId" : "42ed084bdef7ff706a895733121a707c9bddfa84",
      "LastModified" : "2015-12-14T20:49:32Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "\n\tBuild.xml file for CakePHP\n\n\tUses phing to create releases, and pear packages.\n\tBased off of build.xml in doctrine.\n\n\tRequires the cakephp/d51PearPkg2 to be installed:\n\n\tpear channel-discover pear.domain51.com\n\tpear install cakephp/Phing_d51PearPkg2Task\n\n\tUse the `release` task to update VERSION.txt, and create a new tag.\n\tUse the `build` task to create a pear package based on the current working copy.\n\tUse the `clean` task to clean up packaging artifacts.\n\n\t",
        "Line" : 18,
        "CharPositionInLine" : 5
      },
      "1" : {
        "Text" : "\n\t\tThe set of files we're going to package\n\t\tExclude the cli scripts, as they get installed separately.\n\t ",
        "Line" : 26,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "\n\t\tCLI scripts to package and install\n\t",
        "Line" : 39,
        "CharPositionInLine" : 5
      },
      "3" : {
        "Text" : " start fresh each time.  Remove the dist and build dirs ",
        "Line" : 46,
        "CharPositionInLine" : 65
      },
      "4" : {
        "Text" : " Read the current version, so we can replace it ",
        "Line" : 52,
        "CharPositionInLine" : 57
      },
      "5" : {
        "Text" : " Makes directories and sets properties ",
        "Line" : 60,
        "CharPositionInLine" : 48
      },
      "6" : {
        "Text" : " set PEAR stability based on version number. ",
        "Line" : 62,
        "CharPositionInLine" : 55
      },
      "7" : {
        "Text" : " pear versions need to not have '-' ",
        "Line" : 79,
        "CharPositionInLine" : 46
      },
      "8" : {
        "Text" : " Used for other targets ",
        "Line" : 85,
        "CharPositionInLine" : 34
      },
      "9" : {
        "Text" : " Get the current git branch ",
        "Line" : 90,
        "CharPositionInLine" : 38
      },
      "10" : {
        "Text" : "\n\t\tCopy all the files to build/ so they can be packaged up.\n\t",
        "Line" : 96,
        "CharPositionInLine" : 5
      },
      "11" : {
        "Text" : "\n\t\tDefine the package.xml.  Using xml to make xml is fun!\n\t",
        "Line" : 113,
        "CharPositionInLine" : 5
      },
      "12" : {
        "Text" : " Generate the PEAR package from a directory and move the files to the dist folder ",
        "Line" : 158,
        "CharPositionInLine" : 91
      },
      "13" : {
        "Text" : "\n\t\tUpdates the local copy to the latest head.\n\t",
        "Line" : 167,
        "CharPositionInLine" : 5
      },
      "14" : {
        "Text" : "\n\t\tBump the version number and commit that.\n\t",
        "Line" : 178,
        "CharPositionInLine" : 5
      },
      "15" : {
        "Text" : "\n\t\tCreate the release commit that updates the version number and pushes the commits.\n\t",
        "Line" : 193,
        "CharPositionInLine" : 5
      },
      "16" : {
        "Text" : "\n\t\tUpload to pirum pear channel.\n\t",
        "Line" : 214,
        "CharPositionInLine" : 5
      },
      "17" : {
        "Text" : "\n\t\tTop level easy to type targets\n\t",
        "Line" : 256,
        "CharPositionInLine" : 5
      },
      "CommentCount" : 18
    },
    "web/tools/mootools/CMakeLists.txt" : {
      "ObjectId" : "e1e957913fca5bab9571f3b248a26bfc80fc55e8",
      "LastModified" : "2015-12-14T20:49:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt for the Mootools\n\n# The only purpose of this file is to create the symlinks required.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find the latest mootools-core version and create a symlink mootools-core.js to it\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find the latest mootools-more version and create a symlink mootools-more.js to it\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If this is an out-of-source build, copy the mootools files we picked to the binary directory\n\n# This is required to fix a cmake bug regarding installing symlinks pointing to nonexistent files\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "zoneminder-config.cmake" : {
      "ObjectId" : "e088e68dc781d6001dab43ab80a8e11a41ca8ac1",
      "LastModified" : "2019-03-20T14:15:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ifndef ZM_CMAKE_CONFIG_H\n\n#define ZM_CMAKE_CONFIG_H\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#cmakedefine BSD 1\n\n#cmakedefine SOLARIS 1\n\n#cmakedefine HAVE_LINUX_VIDEODEV_H 1\n\n#cmakedefine HAVE_LIBV4L1_VIDEODEV_H 1\n\n#cmakedefine HAVE_LINUX_VIDEODEV2_H 1\n\n#cmakedefine HAVE_EXECINFO_H 1\n\n#cmakedefine HAVE_UCONTEXT_H 1\n\n#cmakedefine HAVE_SYS_SENDFILE_H 1\n\n#cmakedefine HAVE_SYS_SYSCALL_H 1\n\n#cmakedefine HAVE_SYSCALL 1\n\n#cmakedefine HAVE_SENDFILE 1\n\n#cmakedefine HAVE_DECL_BACKTRACE 1\n\n#cmakedefine HAVE_DECL_BACKTRACE_SYMBOLS 1\n\n#cmakedefine HAVE_POSIX_MEMALIGN 1\n\n#cmakedefine HAVE_SIGINFO_T 1\n\n#cmakedefine HAVE_UCONTEXT_T 1\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#cmakedefine HAVE_LIBZLIB 1\n\n#cmakedefine HAVE_ZLIB_H 1\n\n#cmakedefine HAVE_LIBCURL 1\n\n#cmakedefine HAVE_CURL_CURL_H 1\n\n#cmakedefine HAVE_LIBJPEG 1\n\n#cmakedefine HAVE_JPEGLIB_H 1\n\n#cmakedefine HAVE_LIBOPENSSL 1\n\n#cmakedefine HAVE_OPENSSL_MD5_H 1\n\n#cmakedefine HAVE_LIBCRYPTO 1\n\n#cmakedefine HAVE_LIBPTHREAD 1\n\n#cmakedefine HAVE_PTHREAD_H\n\n#cmakedefine HAVE_LIBPCRE 1\n\n#cmakedefine HAVE_PCRE_H 1\n\n#cmakedefine HAVE_LIBGCRYPT 1\n\n#cmakedefine HAVE_GCRYPT_H 1\n\n#cmakedefine HAVE_LIBGNUTLS 1\n\n#cmakedefine HAVE_GNUTLS_OPENSSL_H 1\n\n#cmakedefine HAVE_GNUTLS_GNUTLS_H 1\n\n#cmakedefine HAVE_LIBMYSQLCLIENT 1\n\n#cmakedefine HAVE_MYSQL_H 1\n\n#cmakedefine HAVE_LIBAVFORMAT 1\n\n#cmakedefine HAVE_LIBAVFORMAT_AVFORMAT_H 1\n\n#cmakedefine HAVE_LIBAVCODEC 1\n\n#cmakedefine HAVE_LIBAVCODEC_AVCODEC_H 1\n\n#cmakedefine HAVE_LIBAVDEVICE 1\n\n#cmakedefine HAVE_LIBAVDEVICE_AVDEVICE_H 1\n\n#cmakedefine HAVE_LIBAVUTIL 1\n\n#cmakedefine HAVE_LIBAVUTIL_AVUTIL_H 1\n\n#cmakedefine HAVE_LIBAVUTIL_MATHEMATICS_H 1\n\n#cmakedefine HAVE_LIBAVUTIL_HWCONTEXT_H 0\n\n#cmakedefine HAVE_LIBSWSCALE 1\n\n#cmakedefine HAVE_LIBSWSCALE_SWSCALE_H 1\n\n#cmakedefine HAVE_LIBSWRESAMPLE 1\n\n#cmakedefine HAVE_LIBSWRESAMPLE_SWRESAMPLE_H 1\n\n#cmakedefine HAVE_LIBAVRESAMPLE 1\n\n#cmakedefine HAVE_LIBAVRESAMPLE_AVRESAMPLE_H 1\n\n#cmakedefine HAVE_LIBVLC 1\n\n#cmakedefine HAVE_VLC_VLC_H 1\n\n#cmakedefine HAVE_LIBX264 1\n\n#cmakedefine HAVE_X264_H 1\n\n#cmakedefine HAVE_LIBMP4V2 1\n\n#cmakedefine HAVE_MP4_H 1\n\n#cmakedefine HAVE_MP4V2_H 1\n\n#cmakedefine HAVE_MP4V2_MP4V2_H 1\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#cmakedefine HAVE_MD5_OPENSSL 1\n\n#cmakedefine HAVE_MD5_GNUTLS 1\n\n#cmakedefine HAVE_DECL_MD5 1\n\n#cmakedefine HAVE_DECL_GNUTLS_FINGERPRINT 1\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#cmakedefine ZM_MEM_MAPPED 1\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#define RETSIGTYPE void\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#endif\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    }
  },
  "FileTypes" : {
    "CMAKE" : 23,
    "MAKEFILE" : 1,
    "ANT" : 1
  },
  "ElapsedTime" : 3712
}