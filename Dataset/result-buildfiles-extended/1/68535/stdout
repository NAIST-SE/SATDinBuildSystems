{
  "Repository" : "68535",
  "Revision" : "HEAD",
  "ObjectId" : "77cd1f25e08ba7947e11c09b1a0212e2d8d7570c",
  "CommitTime" : "2019-04-09T04:46:51Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "0f2ad808a4df4bee2881e7ea4c29599c239b0985",
      "LastModified" : "2019-04-03T02:28:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Project definition\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Our options\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#---OPENCOR--- Zinc IS CURRENTLY ONLY USED BY OUR TEST PLUGINS...\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Make sure that we are using the compiler we support\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Determine the effective build directory\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# With Xcode, we have a configuration directory, but it messes up our build\n\n# system, so ask for all the binaries to be generated in our build folder\n",
        "Line" : 73,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Check whether there is a configuration directory (the case with MSVC) and,\n\n# if so, make use of it\n",
        "Line" : 90,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Make sure that we are building OpenCOR on a supported architecture\n\n# Note: normally, we would check the value of CMAKE_SIZEOF_VOID_P, but in some\n\n#       cases it may not be set (e.g. when generating an Xcode project file), so\n\n#       we determine and retrieve that value ourselves...\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# By default, we are building a release version of OpenCOR, unless we are\n\n# explicitly asked for a debug version\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Try to build our silent program\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Try to build our runpath2rpath program, if we are on Linux\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Make sure that clcache/ccache gets used, if available\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Prevent long command lines on Windows\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Keep track of some basic information about Qt, after making sure that we have\n\n# the version of Qt that we need\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Determine our platform directory\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Default location of external binaries and packages\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Some in-house CMake macros\n",
        "Line" : 291,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Make sure that we can use the ExternalProject module, and let it know where we\n\n# want to build our external packages\n\n# Note: indeed, otherwise on Windows we may end up with path names that are too\n\n#       long...\n",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# A few constants to help us with building an external project\n",
        "Line" : 306,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# A couple of variables that make it easier to specify library file names with a\n\n# version (e.g. to be able to reference libz.so.1 and libz.1.dylib, we could\n\n# simply use libz${PRE}.1${POST})\n",
        "Line" : 333,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# On Windows, specify the version of ICU that we are using while on Linux, add\n\n# our copy of the ICU and Mesa libraries\n\n# Note #1: on Linux, ICU is needed so that our external projects that need ICU\n\n#          (e.g. QtWebKit) can rely on the ICU version that we want to use...\n\n# Note #2: on Linux, Mesa is needed so that we can run OpenCOR on machines that\n\n#          don't have 'proper' OpenGL support (e.g. on a Linux virtual machine\n\n#          in VirtualBox)...\n",
        "Line" : 343,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Retrieve or build our copy of QtWebKit\n",
        "Line" : 358,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Required Qt modules\n",
        "Line" : 362,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Make sure that anyone can access diff-match-patch\n",
        "Line" : 387,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# On macOS, keep track of the Qt libraries against which we need to link\n",
        "Line" : 391,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Some general build settings\n\n# Note #1: we force the overriding of CMAKE_CXX_FLAGS_RELEASE and\n\n#          CMAKE_CXX_FLAGS_DEBUG, so that we can really use the compilation\n\n#          flags we want, as opposed to CMake forcing us to use the ones it\n\n#          wants...\n\n# Note #2: MSVC enables C++11 support by default, so we just need to enable it\n\n#          on Linux and macOS...\n",
        "Line" : 431,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Note: MSVC has a /Wall flag, but it results in MSVC being very pedantic,\n\n#       so instead we use what MSVC recommends for production code, which is\n\n#       /W3 and which is also what CMake uses by default...\n",
        "Line" : 444,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# On macOS, we want to be able to access Cocoa\n",
        "Line" : 458,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Some build settings that depend on whether we want a release or a debug\n\n# version of OpenCOR\n",
        "Line" : 464,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Default release compiler and linker settings\n",
        "Line" : 468,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# Note #1: -Wl,-s strips all the symbols, thus reducing the final size\n\n#          of OpenCOR or one its shared libraries...\n\n# Note #2: the above linking option has become obsolete on macOS...\n",
        "Line" : 478,
        "CharPositionInLine" : 8
      },
      "31" : {
        "Text" : "# Make sure that debugging is disabled in Qt\n",
        "Line" : 483,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# Default debug compiler and linker settings\n",
        "Line" : 487,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "# Make sure that debugging is enabled in Qt\n",
        "Line" : 496,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# Ask for Qt deprecated uses to be reported\n",
        "Line" : 501,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Make sure that Unicode is defined\n\n# Note: at least needed for QtSingleApplication on Windows...\n",
        "Line" : 505,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Let OpenCOR know about some of the options with which it was built\n",
        "Line" : 510,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# On macOS, make sure that we support version 10.12 and later, unless a specific\n\n# deployment target has been specified\n",
        "Line" : 524,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Destination of our plugins so that we don't have to deploy OpenCOR on Windows\n\n# and Linux before being able to test it\n",
        "Line" : 535,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Set the RPATH (and RPATH link, if needed) information on Linux and macOS\n",
        "Line" : 544,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Show what we are about to build\n",
        "Line" : 557,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Keep track of our source and build directories (needed to run our tests)\n",
        "Line" : 561,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Version/snapshot of OpenCOR\n",
        "Line" : 574,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Configure our QRC files\n",
        "Line" : 594,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Files that make up the GUI version of OpenCOR\n",
        "Line" : 604,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Files that make up the CLI version of OpenCOR (Windows specific)\n",
        "Line" : 672,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Various include directories\n\n# Note: access to the Core plugin's source folder is needed so that we can build\n\n#       OpenCOR on its own, i.e. without any plugins (due to the global CLI/GUI\n\n#       utilities needing access to some features that are in common with the\n\n#       Core CLI/GUI utilities)...\n",
        "Line" : 707,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Update the translation (.ts) files and generate the language (.qm) files\n\n# that will later on be embedded in the OpenCOR executable as resources\n",
        "Line" : 720,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# Third-party library that must be directly embedded in the GUI version of\n\n# OpenCOR\n",
        "Line" : 725,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Set the application icon, but only for Windows and macOS, since in the case of\n\n# Linux, it's done through the use of app_icon (see res/ui.qrc) when we register\n\n# our URL scheme (see MainWindow::registerOpencorUrlScheme())\n\n# Note: on Windows, we set a bit more than just the application icon. We also\n\n#       set its product name, version, copyright, etc.\n",
        "Line" : 730,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Check whether tests are required and, if so, 'reset' our list of tests and set\n\n# the destination tests directory and build our main test program\n",
        "Line" : 766,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# 'Reset' our list of tests\n",
        "Line" : 770,
        "CharPositionInLine" : 4
      },
      "52" : {
        "Text" : "# Destination tests directory\n\n# Note: DEST_TESTS_DIR isn't only used here, but also in our add_plugin()\n\n#       macro...\n",
        "Line" : 778,
        "CharPositionInLine" : 4
      },
      "53" : {
        "Text" : "# Build our main test program\n",
        "Line" : 788,
        "CharPositionInLine" : 4
      },
      "54" : {
        "Text" : "# Copy our main test program to our tests directory\n",
        "Line" : 816,
        "CharPositionInLine" : 4
      },
      "55" : {
        "Text" : "# Clean up our test program, if we are on macOS, our make sure that it uses\n\n# RPATH rather than RUNPATH on Linux\n",
        "Line" : 824,
        "CharPositionInLine" : 4
      },
      "56" : {
        "Text" : "# Specify a target to help us build certain plugins (e.g. the Python plugin)\n",
        "Line" : 834,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# Build our plugins\n\n# Note #1: hard dependencies (i.e. OpenSSL and zlib) must be listed before any\n\n#          other plugins, and zlib before OpenSSL since the latter needs the\n\n#          former...\n\n# Note #2: Python third-party plugins must be built in order, after zlib and\n\n#          OpenSSL, and before any other plugins...\n\n# Note #3: soft dependencies are determined automatically, so other plugins can\n\n#          be listed in any order...\n",
        "Line" : 840,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# We want to build our copy of the QtWebKit package, so don't build any\n\n# of our plugins since some of them may require QtWebKit\n",
        "Line" : 945,
        "CharPositionInLine" : 4
      },
      "59" : {
        "Text" : "# Fetch parts of our documentation and build it\n",
        "Line" : 968,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# Build the GUI version of OpenCOR\n",
        "Line" : 979,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# Build the CLI version of OpenCOR (Windows specific)\n\n# Note: when it comes to WINDOWS_CLI_PROJECT_NAME, we used to have it set to\n\n#       ${CMAKE_PROJECT_NAME}.com, but Ninja found a duplicate rule (from a copy\n\n#       command), so now we use '_' instead...\n",
        "Line" : 1017,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Some post-processing specific stuff\n",
        "Line" : 1047,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# Configure and use our own Info.plist file\n\n# Note: the reason for using our own Info.plist file is that it contains\n\n#       some information about associating .cellml files to OpenCOR,\n\n#       something that can't be done using CMake (or so it seems)...\n",
        "Line" : 1050,
        "CharPositionInLine" : 4
      },
      "64" : {
        "Text" : "# Note: ideally, what follows would be done using macdeployqt, but it has\n\n#       regularly been causing us problems, so instead we have decided to do\n\n#       everything ourselves...\n",
        "Line" : 1064,
        "CharPositionInLine" : 4
      },
      "65" : {
        "Text" : "# Clean up the OpenCOR executable\n",
        "Line" : 1068,
        "CharPositionInLine" : 4
      },
      "66" : {
        "Text" : "# Qt libraries required by OpenCOR\n",
        "Line" : 1072,
        "CharPositionInLine" : 4
      },
      "67" : {
        "Text" : "# Qt plugins required by OpenCOR\n",
        "Line" : 1078,
        "CharPositionInLine" : 4
      },
      "68" : {
        "Text" : "# Make sure that OpenCOR uses RPATH rather than RUNPATH on Linux\n",
        "Line" : 1087,
        "CharPositionInLine" : 4
      },
      "69" : {
        "Text" : "# Copy the GUI version of the OpenCOR executable to the build/bin folder\n",
        "Line" : 1093,
        "CharPositionInLine" : 4
      },
      "70" : {
        "Text" : "# Copy the CLI version of the OpenCOR executable to both the build and\n\n# build/bin folders\n\n# Note: the idea is that, on Windows, we can test both the CLI and the\n\n#       GUI versions of OpenCOR from either build (the case when running\n\n#       OpenCOR from within Qt Creator) or build/bin (the case if we\n\n#       want to test OpenCOR as if it was deployed on someone's\n\n#       computer)...\n",
        "Line" : 1099,
        "CharPositionInLine" : 8
      },
      "71" : {
        "Text" : "# Additional files required by OpenCOR\n\n# Note #1: these files may or not be needed in order to test OpenCOR\n\n#          locally. It all depends on the way the user's computer is set\n\n#          up. So, by copying them over, we are sure that the\n\n#          release/debug version of OpenCOR will work fine...\n\n# Note #2: the second set of additional files is needed in case OpenCOR\n\n#          is to be run on a non-up-to-date copy of Windows 7...\n",
        "Line" : 1118,
        "CharPositionInLine" : 8
      },
      "72" : {
        "Text" : "# Finally, add Qt's version of the Mesa library so that we can run\n\n# OpenCOR on machines that don't have 'proper' OpenGL support (e.g. on a\n\n# Windows virtual machine in VirtualBox)\n",
        "Line" : 1171,
        "CharPositionInLine" : 8
      },
      "73" : {
        "Text" : "# Package OpenCOR\n",
        "Line" : 1183,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# Select NSIS, if available, and ZIP as the packagers on Windows\n",
        "Line" : 1201,
        "CharPositionInLine" : 4
      },
      "75" : {
        "Text" : "# Specify the default installation directory\n",
        "Line" : 1215,
        "CharPositionInLine" : 4
      },
      "76" : {
        "Text" : "# Install both the GUI and CLI versions of OpenCOR\n",
        "Line" : 1222,
        "CharPositionInLine" : 4
      },
      "77" : {
        "Text" : "# Additional files required by OpenCOR (incl. the Mesa library)\n",
        "Line" : 1229,
        "CharPositionInLine" : 4
      },
      "78" : {
        "Text" : "# Qt libraries required by OpenCOR\n",
        "Line" : 1237,
        "CharPositionInLine" : 4
      },
      "79" : {
        "Text" : "# Qt plugins required by OpenCOR\n",
        "Line" : 1249,
        "CharPositionInLine" : 4
      },
      "80" : {
        "Text" : "# Batch and VBScript files to run OpenCOR (useful when downloading a ZIPped\n\n# version of OpenCOR)\n",
        "Line" : 1257,
        "CharPositionInLine" : 4
      },
      "81" : {
        "Text" : "# File type association\n\n# Note: the calls to SHChangeNotify are to ensure that Windows refreshes\n\n#       file icons (so that it is clear to the user that an extension has\n\n#       been (un)registered...\n",
        "Line" : 1273,
        "CharPositionInLine" : 4
      },
      "82" : {
        "Text" : "# Select PackageMaker and ZIP as the packagers on macOS\n\n# Note: this is actually done within the package script, so that the ZIP\n\n#       package can be done 'properly', i.e. we don't have the full tree\n\n#       structure in the ZIP file...\n",
        "Line" : 1291,
        "CharPositionInLine" : 4
      },
      "83" : {
        "Text" : "# Shell script to run OpenCOR (useful when downloading a ZIPped version of\n\n# OpenCOR)\n",
        "Line" : 1307,
        "CharPositionInLine" : 4
      },
      "84" : {
        "Text" : "# Select TGZ as the packager on Linux\n",
        "Line" : 1320,
        "CharPositionInLine" : 4
      },
      "85" : {
        "Text" : "# OpenCOR itself\n",
        "Line" : 1325,
        "CharPositionInLine" : 4
      },
      "86" : {
        "Text" : "# Mesa library\n",
        "Line" : 1330,
        "CharPositionInLine" : 4
      },
      "87" : {
        "Text" : "# Qt libraries required by OpenCOR\n\n# Note: unlike for Windows and macOS, we don't have a macro for deploying\n\n#       all of our Qt libraries at once. Indeed, on Linux, the version of a\n\n#       file is appended to its suffix, so unless making the macro\n\n#       unnecessarily cumbersome to use, it's better to deploy one Qt\n\n#       library at a time...\n",
        "Line" : 1335,
        "CharPositionInLine" : 4
      },
      "88" : {
        "Text" : "# Qt plugins required by OpenCOR\n",
        "Line" : 1353,
        "CharPositionInLine" : 4
      },
      "89" : {
        "Text" : "# Shell script to run OpenCOR\n",
        "Line" : 1361,
        "CharPositionInLine" : 4
      },
      "90" : {
        "Text" : "# Specify the package file name, depending on whether we are generating a\n\n# snapshot version of OpenCOR\n",
        "Line" : 1374,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "# Notice and license files\n",
        "Line" : 1389,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "# Some sample CellML files\n",
        "Line" : 1407,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "# Some user-defined format files\n",
        "Line" : 1421,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 94
    },
    "cmake/common.cmake" : {
      "ObjectId" : "db954535d11622cfd04183ba97bc6d935d94e7f3",
      "LastModified" : "2019-04-03T02:28:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Keep track of the given files\n\n# Note: indeed, some files (e.g. versiondate.txt) are 'manually' generated\n\n#       and then used to build other files. Now, the 'problem' is that\n\n#       Ninja needs to know about those files (see CMake policy CMP0058),\n\n#       which we ensure it does through the below...\n",
        "Line" : 2,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "#===============================================================================\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Update the translation (.ts) files (if they exist) and generate the\n\n# language (.qm) files, which will later on be embedded in the project\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#===============================================================================\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Build the given documentation as an external project and have it copied to\n\n# our final documentation directory, but only if we Python and Sphinx are\n\n# available\n\n# Note: the check for Python and Sphinx is in case we are building only one\n\n#       of our third-party libraries (to upgrade it to a newer version for\n\n#       example), in which case we want our Python and PythonPackages\n\n#       plugins will probably not be built...\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Add our external project as a dependency to our project build target,\n\n# so that our Help window plugin can generate the help files that will\n\n# be embedded in OpenCOR as a resource\n",
        "Line" : 79,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "#===============================================================================\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Strip the given file of all its local symbols\n\n# Note: to strip QScintilla and Qwt when building them on Linux results in\n\n#       an error due to patchelf having been used on them. So, we use a\n\n#       wrapper that ignores errors and returns 0, so that our build doesn't\n\n#       break...\n",
        "Line" : 90,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#===============================================================================\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Various initialisations\n",
        "Line" : 107,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Resource files, if any\n\n# Note: ideally, we would have our resource files named i18n.qrc.in and\n\n#       ui.qrc for all our plugins, but this is causing problems on Linux\n\n#       with Qt apparently accepting only one file called i18n.qrc.in or\n\n#       ui.qrc. The end result is that, on a development machine, plugin\n\n#       resources (e.g. icons, translations) are not available while,\n\n#       strangely enough, they are on a deployment machine...\n",
        "Line" : 132,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Update the translation (.ts) files and generate the language (.qm)\n\n# files, which will later on be embedded in the plugin\n",
        "Line" : 153,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# Definition to make sure that the plugin can be used by other plugins\n",
        "Line" : 163,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Some plugin-specific definitions\n",
        "Line" : 167,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# On Linux, set the RPATH value to use by the plugin\n",
        "Line" : 173,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Generate and add the different files needed by the plugin\n",
        "Line" : 182,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# OpenCOR plugins\n",
        "Line" : 208,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Qt modules\n",
        "Line" : 216,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# External binaries\n",
        "Line" : 226,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Create a custom target for copying binaries\n\n# Note: this is to prevent Ninja from getting confused with circular\n\n#       references...\n",
        "Line" : 229,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# Make sure that the external binary exists\n",
        "Line" : 243,
        "CharPositionInLine" : 12
      },
      "21" : {
        "Text" : "# Only do a direct copy if the file exists and the plugin doesn't\n\n# depend on any targets\n",
        "Line" : 247,
        "CharPositionInLine" : 12
      },
      "22" : {
        "Text" : "# Copy the external binary to its destination directory, so we can\n\n# test things without first having to deploy OpenCOR\n\n# Note: on Windows, we also need to copy it to the build directory\n\n#       so that we can test things from within Qt Creator...\n",
        "Line" : 257,
        "CharPositionInLine" : 12
      },
      "23" : {
        "Text" : "# Strip the external library of all its local symbols, if possible\n",
        "Line" : 268,
        "CharPositionInLine" : 12
      },
      "24" : {
        "Text" : "# Link the plugin to the external library\n",
        "Line" : 274,
        "CharPositionInLine" : 12
      },
      "25" : {
        "Text" : "# On macOS, ensure that @rpath is set in the external library's id\n\n# and that it references the correct Qt libraries, if any at all\n",
        "Line" : 293,
        "CharPositionInLine" : 12
      },
      "26" : {
        "Text" : "# Package the external library, if needed\n",
        "Line" : 307,
        "CharPositionInLine" : 12
      },
      "27" : {
        "Text" : "# Check whether an external package has files to install\n",
        "Line" : 319,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# Copy the entire source directory to the destination\n",
        "Line" : 324,
        "CharPositionInLine" : 8
      },
      "29" : {
        "Text" : "# System binaries\n",
        "Line" : 331,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# Add some dependencies, if any\n",
        "Line" : 339,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# Some settings\n",
        "Line" : 349,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# Copy the plugin to our plugins directory\n\n# Note: this is done so that we can, on Windows and Linux, test the use of\n\n#       plugins in OpenCOR without first having to package OpenCOR, as well\n\n#       as, on Windows, test things from within Qt Creator...\n",
        "Line" : 366,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "# Clean up our plugin, if we are on macOS, our make sure that it uses RPATH\n\n# rather than RUNPATH on Linux\n",
        "Line" : 375,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# Package the plugin, but only if we are not on macOS since it will have\n\n# already been packaged (copied)\n",
        "Line" : 384,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# Create some tests, if any and if required\n",
        "Line" : 392,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# Keep track of the test (for later use by our main test program)\n",
        "Line" : 396,
        "CharPositionInLine" : 12
      },
      "37" : {
        "Text" : "# Build our test, if possible\n",
        "Line" : 400,
        "CharPositionInLine" : 12
      },
      "38" : {
        "Text" : "# The test exists, so build it, but first set the RPATH and\n\n# RPATH link values to use by the test, if on Linux\n",
        "Line" : 409,
        "CharPositionInLine" : 16
      },
      "39" : {
        "Text" : "# Note: we need to initialise TEST_SOURCES_MOC in case there is\n\n#       more than just one test. Indeed, if we were not to\n\n#       initialise it, then it would include the information of\n\n#       all the tests up to the one we want to build...\n",
        "Line" : 419,
        "CharPositionInLine" : 16
      },
      "40" : {
        "Text" : "# OpenCOR plugins\n",
        "Line" : 445,
        "CharPositionInLine" : 16
      },
      "41" : {
        "Text" : "# Qt modules\n",
        "Line" : 453,
        "CharPositionInLine" : 16
      },
      "42" : {
        "Text" : "# External binaries\n",
        "Line" : 461,
        "CharPositionInLine" : 16
      },
      "43" : {
        "Text" : "# System binaries\n",
        "Line" : 486,
        "CharPositionInLine" : 16
      },
      "44" : {
        "Text" : "# Add some dependencies, if any\n",
        "Line" : 494,
        "CharPositionInLine" : 16
      },
      "45" : {
        "Text" : "# Copy the test to our tests directory\n\n# Note: DEST_TESTS_DIR is defined in our main CMake file...\n",
        "Line" : 504,
        "CharPositionInLine" : 16
      },
      "46" : {
        "Text" : "# Clean up our plugin's tests, if we are on macOS, our make sure\n\n# that it uses RPATH rather than RUNPATH on Linux\n",
        "Line" : 519,
        "CharPositionInLine" : 16
      },
      "47" : {
        "Text" : "#===============================================================================\n",
        "Line" : 534,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# Copy the file (renaming it, if needed) to the destination folder\n\n# Note: DIRECT is used to copy a file that doesn't first need to be built.\n\n#       This means that we can then use execute_process() rather than\n\n#       add_custom_command(), and thus reduce the length of the\n\n#       PROJECT_TARGET command, something that can be useful on Windows\n\n#       since the command might otherwise end up being too long for Windows\n\n#       to handle...\n",
        "Line" : 537,
        "CharPositionInLine" : 4
      },
      "49" : {
        "Text" : "# An argument was passed so use it to rename the file, which is to be\n\n# copied\n",
        "Line" : 548,
        "CharPositionInLine" : 8
      },
      "50" : {
        "Text" : "#===============================================================================\n",
        "Line" : 565,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Copy the Qt library to both the build and build/bin folders, so we can\n\n# test things both from within Qt Creator and without first having to deploy\n\n# OpenCOR\n",
        "Line" : 568,
        "CharPositionInLine" : 4
      },
      "52" : {
        "Text" : "# No debug version of the Qt library exists, so use its release version\n\n# instead\n",
        "Line" : 595,
        "CharPositionInLine" : 8
      },
      "53" : {
        "Text" : "# Deploy the Qt library\n",
        "Line" : 610,
        "CharPositionInLine" : 4
      },
      "54" : {
        "Text" : "#===============================================================================\n",
        "Line" : 616,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# Copy the Qt plugin to the plugins folder\n",
        "Line" : 620,
        "CharPositionInLine" : 8
      },
      "56" : {
        "Text" : "# Deploy the Qt plugin\n",
        "Line" : 635,
        "CharPositionInLine" : 8
      },
      "57" : {
        "Text" : "#===============================================================================\n",
        "Line" : 642,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# Convert the RUNPATH value, if any, of the given ELF file to an RPATH value\n",
        "Line" : 645,
        "CharPositionInLine" : 4
      },
      "59" : {
        "Text" : "#===============================================================================\n",
        "Line" : 660,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# Copy the Qt library to the build/lib folder, so we can test things without\n\n# first having to deploy OpenCOR\n\n# Note: this is particularly useful when the Linux machine has different\n\n#       versions of Qt...\n",
        "Line" : 663,
        "CharPositionInLine" : 4
      },
      "61" : {
        "Text" : "# Make sure that the RUNPATH value is converted to an RPATH value\n",
        "Line" : 670,
        "CharPositionInLine" : 4
      },
      "62" : {
        "Text" : "# Strip the Qt library of all its local symbols\n",
        "Line" : 674,
        "CharPositionInLine" : 4
      },
      "63" : {
        "Text" : "# Deploy the Qt library\n",
        "Line" : 680,
        "CharPositionInLine" : 4
      },
      "64" : {
        "Text" : "#===============================================================================\n",
        "Line" : 686,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# Copy the Qt plugin to the plugins folder\n",
        "Line" : 690,
        "CharPositionInLine" : 8
      },
      "66" : {
        "Text" : "# Make sure that the RUNPATH value is converted to an RPATH value\n",
        "Line" : 698,
        "CharPositionInLine" : 8
      },
      "67" : {
        "Text" : "# Strip the Qt plugin of all its local symbols\n",
        "Line" : 702,
        "CharPositionInLine" : 8
      },
      "68" : {
        "Text" : "# Deploy the Qt plugin\n",
        "Line" : 708,
        "CharPositionInLine" : 8
      },
      "69" : {
        "Text" : "#===============================================================================\n",
        "Line" : 715,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# Copy the system library to the build/lib folder, so we can test things\n\n# without first having to deploy OpenCOR\n",
        "Line" : 718,
        "CharPositionInLine" : 4
      },
      "71" : {
        "Text" : "# Deploy the system library\n",
        "Line" : 727,
        "CharPositionInLine" : 4
      },
      "72" : {
        "Text" : "#===============================================================================\n",
        "Line" : 734,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# Strip the file of all its local symbols\n",
        "Line" : 737,
        "CharPositionInLine" : 4
      },
      "74" : {
        "Text" : "# Clean up the file's id\n",
        "Line" : 745,
        "CharPositionInLine" : 4
      },
      "75" : {
        "Text" : "#===============================================================================\n",
        "Line" : 755,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# Clean up the file\n",
        "Line" : 758,
        "CharPositionInLine" : 4
      },
      "77" : {
        "Text" : "# Make sure that the file refers to our embedded copy of the Qt libraries\n",
        "Line" : 762,
        "CharPositionInLine" : 4
      },
      "78" : {
        "Text" : "#===============================================================================\n",
        "Line" : 779,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# Copy the Qt file\n",
        "Line" : 782,
        "CharPositionInLine" : 4
      },
      "80" : {
        "Text" : "# Clean up the Qt file\n",
        "Line" : 787,
        "CharPositionInLine" : 4
      },
      "81" : {
        "Text" : "#===============================================================================\n",
        "Line" : 792,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "# Deploy the Qt library\n",
        "Line" : 795,
        "CharPositionInLine" : 4
      },
      "83" : {
        "Text" : "#===============================================================================\n",
        "Line" : 811,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# Deploy the Qt plugin\n",
        "Line" : 815,
        "CharPositionInLine" : 8
      },
      "85" : {
        "Text" : "#===============================================================================\n",
        "Line" : 823,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# Various initialisations\n",
        "Line" : 826,
        "CharPositionInLine" : 4
      },
      "87" : {
        "Text" : "# Make sure that we have at least one file for which we want to check the\n\n# SHA-1 value\n",
        "Line" : 842,
        "CharPositionInLine" : 4
      },
      "88" : {
        "Text" : "# The full path to the package's files\n",
        "Line" : 851,
        "CharPositionInLine" : 4
      },
      "89" : {
        "Text" : "# Remove any historical package archive\n",
        "Line" : 855,
        "CharPositionInLine" : 4
      },
      "90" : {
        "Text" : "# The actual packaging code goes into a separate CMake script file that is\n\n# run as a POST_BUILD step\n",
        "Line" : 867,
        "CharPositionInLine" : 4
      },
      "91" : {
        "Text" : "# Run the packaging script once the dependency target has been satisfied\n",
        "Line" : 957,
        "CharPositionInLine" : 4
      },
      "92" : {
        "Text" : "#===============================================================================\n",
        "Line" : 964,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "# By default, everything is OK\n",
        "Line" : 967,
        "CharPositionInLine" : 4
      },
      "94" : {
        "Text" : "# See our parameters as lists\n",
        "Line" : 973,
        "CharPositionInLine" : 4
      },
      "95" : {
        "Text" : "# Retrieve the number of SHA-1 files and values we have\n",
        "Line" : 978,
        "CharPositionInLine" : 4
      },
      "96" : {
        "Text" : "# Make sure that we have some files\n",
        "Line" : 982,
        "CharPositionInLine" : 4
      },
      "97" : {
        "Text" : "# Determine our range\n",
        "Line" : 985,
        "CharPositionInLine" : 8
      },
      "98" : {
        "Text" : "# Make sure that our files, if they exist, have the expected SHA-1 value\n",
        "Line" : 989,
        "CharPositionInLine" : 8
      },
      "99" : {
        "Text" : "# The file doesn't have the expected SHA-1 value, so remove\n\n# it and fail the checks\n",
        "Line" : 1001,
        "CharPositionInLine" : 20
      },
      "100" : {
        "Text" : "# The file is missing, so fail the checks\n",
        "Line" : 1011,
        "CharPositionInLine" : 16
      },
      "101" : {
        "Text" : "#===============================================================================\n",
        "Line" : 1021,
        "CharPositionInLine" : 0
      },
      "102" : {
        "Text" : "# Convenience macro\n",
        "Line" : 1024,
        "CharPositionInLine" : 4
      },
      "103" : {
        "Text" : "#===============================================================================\n",
        "Line" : 1033,
        "CharPositionInLine" : 0
      },
      "104" : {
        "Text" : "# Various initialisations\n",
        "Line" : 1036,
        "CharPositionInLine" : 4
      },
      "105" : {
        "Text" : "# Make sure that we have at least one file for which we need to check the\n\n# SHA-1 value\n",
        "Line" : 1051,
        "CharPositionInLine" : 4
      },
      "106" : {
        "Text" : "# Create our destination folder, if needed\n",
        "Line" : 1062,
        "CharPositionInLine" : 4
      },
      "107" : {
        "Text" : "# Make sure that we have the expected package's files\n",
        "Line" : 1075,
        "CharPositionInLine" : 4
      },
      "108" : {
        "Text" : "# Something went wrong with the package's files, so retrieve the package\n",
        "Line" : 1080,
        "CharPositionInLine" : 8
      },
      "109" : {
        "Text" : "# Uncompress the compressed version of the package, should we have\n\n# managed to retrieve it\n",
        "Line" : 1110,
        "CharPositionInLine" : 8
      },
      "110" : {
        "Text" : "# Note: this is in case we had an HTTP/S error of sorts, in which\n\n#       case we would end up with an empty file...\n",
        "Line" : 1129,
        "CharPositionInLine" : 12
      },
      "111" : {
        "Text" : "# Check that the package's files, if we managed to uncompress the\n\n# package, have the expected SHA-1 values\n",
        "Line" : 1135,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 112
    },
    "distrib/linux/icu/CMakeLists.txt" : {
      "ObjectId" : "ca0842ec3925f4f9457d50b3fe0f9bc6a243d27f",
      "LastModified" : "2018-05-09T02:58:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Name and version of our package\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Version of our library\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Git tag for our library\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Specify where our local package will be installed\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Name of our package's shared library\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Specify the files that need to have their SHA-1 value checked\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Use the pre-built version of our package unless instructed otherwise\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Retrieve the library's package\n",
        "Line" : 38,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Build ICU as an external project\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Package our external project\n",
        "Line" : 73,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Allow our main CMake project to find our ICU package\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# (Copy and) deploy our copy of the ICU libraries\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "distrib/linux/mesa/CMakeLists.txt" : {
      "ObjectId" : "8068fac89ff4bea93325fd0e1a7d66fac3eebae4",
      "LastModified" : "2019-03-22T03:29:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Name and version of our package\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Git tag for our library\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Specify where our local package will be installed\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Name of our package's shared library\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Specify the files that need to have their SHA-1 value checked\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Use the pre-built version of our package unless instructed otherwise\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Retrieve the library's package\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Build Mesa as an external project\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Package our external project\n",
        "Line" : 67,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Allow our main CMake project to find our Mesa package\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Copy our copy of the Mesa library\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "src/3rdparty/QtSingleApplication/QtSingleApplication.cmake" : {
      "ObjectId" : "9243487a40ea06779eb292a7c7bbb393a58f2388",
      "LastModified" : "2018-02-09T17:39:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Files that make up QtSingleApplication\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Include directory\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/3rdparty/QtWebKit/CMakeLists.txt" : {
      "ObjectId" : "a56148162d7233c73d149b28e2f80543639bf454",
      "LastModified" : "2018-12-14T23:45:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Name and version of our package\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Version of our library\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Git tags for our libraries\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Release tag\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Specify where our local package will be installed\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Name of our package's shared library (and of its import library, if any)\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Specify the files that need to have their SHA-1 value checked\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Use the pre-built version of our package unless instructed otherwise\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Retrieve the plugin's package\n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Build JPEG, PNG and ZLIB as external projects, if on Linux or macOS\n",
        "Line" : 142,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# JPEG\n",
        "Line" : 147,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# PNG\n",
        "Line" : 171,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# ZLIB\n",
        "Line" : 196,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# Build QtWebKit as an external project\n",
        "Line" : 220,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Package our external project\n",
        "Line" : 315,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Allow other external projects to find our QtWebKit package\n\n# Note: on Windows, we distinguish between release and debug modes, so remove\n\n#       that piece of information...\n",
        "Line" : 339,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "src/plugins/dataStore/BioSignalMLDataStore/CMakeLists.txt" : {
      "ObjectId" : "903dbd17c1414b9e8f141c9c1b6f1896c8b248b8",
      "LastModified" : "2019-02-01T01:44:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the plugin\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/plugins/dataStore/CSVDataStore/CMakeLists.txt" : {
      "ObjectId" : "28747ab44d1cb7d9fb2ee22ab5f1a364fe05d8c9",
      "LastModified" : "2019-02-01T01:44:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the plugin\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/plugins/dataStore/DataStore/CMakeLists.txt" : {
      "ObjectId" : "31c17bbbb5f6828a711f1b12e2b7cdb35e1269d0",
      "LastModified" : "2018-02-09T17:52:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the plugin\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/plugins/editing/CellMLAnnotationView/CMakeLists.txt" : {
      "ObjectId" : "5de086037067bb64fefbd0661bb6c827c435e2a9",
      "LastModified" : "2018-02-09T17:52:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the plugin\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/plugins/editing/CellMLEditingView/CMakeLists.txt" : {
      "ObjectId" : "11b89c1dc9188c65bb4212a3dd5d83e40e4a04e5",
      "LastModified" : "2018-02-09T17:52:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the plugin\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/plugins/editing/CellMLTextView/CMakeLists.txt" : {
      "ObjectId" : "db0ccb22e989fad15daf3d1b751985e38aac6ea3",
      "LastModified" : "2019-02-01T01:44:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the plugin\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/plugins/editing/EditingView/CMakeLists.txt" : {
      "ObjectId" : "74279b466ebd616f5733224a83ff044e851412b8",
      "LastModified" : "2018-02-09T17:52:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the plugin\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/plugins/editing/RawCellMLView/CMakeLists.txt" : {
      "ObjectId" : "4db0d0d874e91ce114b9daa605aec26061a3c3f4",
      "LastModified" : "2018-02-09T17:52:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the plugin\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/plugins/editing/RawSEDMLView/CMakeLists.txt" : {
      "ObjectId" : "1709c5d8ec13a03c0586c09c776629e01d61085f",
      "LastModified" : "2018-02-09T17:52:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the plugin\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/plugins/editing/RawTextView/CMakeLists.txt" : {
      "ObjectId" : "1b893d5625f102bad4b4cf2a84c167c22d8227a8",
      "LastModified" : "2018-02-09T17:52:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the plugin\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/plugins/editing/SEDMLEditingView/CMakeLists.txt" : {
      "ObjectId" : "6025b783fffae5867d19f2b1e8159bc9c4b3fd48",
      "LastModified" : "2018-02-09T17:52:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the plugin\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/plugins/miscellaneous/Compiler/CMakeLists.txt" : {
      "ObjectId" : "4705d90da62c089beca86d732ee1754a5190d9b4",
      "LastModified" : "2018-02-09T17:52:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the plugin\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/plugins/miscellaneous/Core/CMakeLists.txt" : {
      "ObjectId" : "22c6d6fc3c210d85d7af0d9704dfab89b6acc0cf",
      "LastModified" : "2019-03-22T03:29:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the plugin\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/plugins/miscellaneous/HelpWindow/CMakeLists.txt" : {
      "ObjectId" : "1eebeb0ac2528cb0b1c81e1b9eccedb2654f2404",
      "LastModified" : "2019-02-01T01:44:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Generate the help files that will be embedded in OpenCOR as a resource\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add the plugin\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/plugins/miscellaneous/WebBrowserWindow/CMakeLists.txt" : {
      "ObjectId" : "9665a2837a60e1ae4bf1192e75e0136137e9bb17",
      "LastModified" : "2018-02-09T17:52:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the plugin\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/plugins/organisation/FileBrowserWindow/CMakeLists.txt" : {
      "ObjectId" : "34996771cf52cb255f9467df88774a8096d9f388",
      "LastModified" : "2018-02-09T17:52:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the plugin\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/plugins/organisation/FileOrganiserWindow/CMakeLists.txt" : {
      "ObjectId" : "eb612ec8bb7da3ada4565652ae7193cf49b57ea2",
      "LastModified" : "2018-02-09T17:52:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the plugin\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/plugins/organisation/PMRWindow/CMakeLists.txt" : {
      "ObjectId" : "5c652513fc0ac425a506d3da3d9ab25b1547a49b",
      "LastModified" : "2018-02-09T17:52:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the plugin\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/plugins/organisation/PMRWorkspacesWindow/CMakeLists.txt" : {
      "ObjectId" : "b9299c842b4b1f3c511435e6d374095978ea3074",
      "LastModified" : "2018-02-09T17:52:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the plugin\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/plugins/sample/Sample/CMakeLists.txt" : {
      "ObjectId" : "76aabe63f75458d0711da3aedf46a1413400627d",
      "LastModified" : "2018-02-09T17:52:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the plugin\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/plugins/sample/SampleTools/CMakeLists.txt" : {
      "ObjectId" : "0eb0590551ee101232af931a95701ea64565dafe",
      "LastModified" : "2018-02-09T17:52:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the plugin\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/plugins/sample/SampleView/CMakeLists.txt" : {
      "ObjectId" : "b100aa4438e12730e45c7e4f664331046c20dacc",
      "LastModified" : "2018-02-09T17:52:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the plugin\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/plugins/sample/SampleWindow/CMakeLists.txt" : {
      "ObjectId" : "6e6494b80edb1d3504e5f498450ef217614c2a8d",
      "LastModified" : "2018-02-09T17:52:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the plugin\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/plugins/simulation/SimulationExperimentView/CMakeLists.txt" : {
      "ObjectId" : "d32ed56826a3105f85247571e2caafb2664a0eb5",
      "LastModified" : "2019-02-01T01:44:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the plugin\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/plugins/solver/CVODESolver/CMakeLists.txt" : {
      "ObjectId" : "d366dbebefde14b6701de20c5d4b50bb66227eac",
      "LastModified" : "2019-02-01T01:44:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the plugin\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/plugins/solver/ForwardEulerSolver/CMakeLists.txt" : {
      "ObjectId" : "019b8dcb64105ab880e30c12b926d43a4caf5a0e",
      "LastModified" : "2019-02-01T01:44:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the plugin\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/plugins/solver/FourthOrderRungeKuttaSolver/CMakeLists.txt" : {
      "ObjectId" : "42498873358b6cf66842c32b0cf45b8fe7160a99",
      "LastModified" : "2019-02-01T01:44:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the plugin\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/plugins/solver/HeunSolver/CMakeLists.txt" : {
      "ObjectId" : "6b6f8be3ebe7ca550bda82defd0a53777d5273cd",
      "LastModified" : "2019-02-01T01:44:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the plugin\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/plugins/solver/KINSOLSolver/CMakeLists.txt" : {
      "ObjectId" : "e7d0fb68f6b7103abe943668dd4de908f1788f12",
      "LastModified" : "2019-02-01T01:44:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the plugin\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/plugins/solver/SecondOrderRungeKuttaSolver/CMakeLists.txt" : {
      "ObjectId" : "5bf6c17dd8aa62325de80fbec89c0579e65295a1",
      "LastModified" : "2019-02-01T01:44:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the plugin\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/plugins/support/COMBINESupport/CMakeLists.txt" : {
      "ObjectId" : "1342b10e8dac1099a1b8b6a5f67423ffe5c2f901",
      "LastModified" : "2019-02-01T01:44:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the plugin\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/plugins/support/CellMLSupport/CMakeLists.txt" : {
      "ObjectId" : "0f64f027c19df4967e27553947b1ccc3faacfa9a",
      "LastModified" : "2019-02-01T01:44:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the plugin\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/plugins/support/PMRSupport/CMakeLists.txt" : {
      "ObjectId" : "29760d011ae8b91539dcb37a6ce8e37b0f3c1db9",
      "LastModified" : "2019-03-22T03:29:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the plugin\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/plugins/support/QScintillaSupport/CMakeLists.txt" : {
      "ObjectId" : "1262019c5f640cd1c54f0beb81d645052652e33b",
      "LastModified" : "2019-02-01T01:44:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the plugin\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/plugins/support/SEDMLSupport/CMakeLists.txt" : {
      "ObjectId" : "c6689c64fe5aed4c2159544176873e7db7c86b9a",
      "LastModified" : "2019-02-01T01:44:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the plugin\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/plugins/support/SimulationSupport/CMakeLists.txt" : {
      "ObjectId" : "3e8a965cca3473d17d5e90cf614ab30eeabdd67b",
      "LastModified" : "2019-02-01T01:44:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the plugin\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/plugins/support/StandardSupport/CMakeLists.txt" : {
      "ObjectId" : "ab9e1f79053510b0368cff178e5bd564d7b99b9a",
      "LastModified" : "2019-02-01T01:44:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the plugin\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/plugins/support/ZIPSupport/CMakeLists.txt" : {
      "ObjectId" : "454e0f2d0a4f58d149bca7805f27905be2a30b94",
      "LastModified" : "2019-02-01T01:44:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the plugin\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/plugins/test/ZincWindow/CMakeLists.txt" : {
      "ObjectId" : "45dbf37d78795070b02a88858ac63897b7b9c7f8",
      "LastModified" : "2019-02-01T01:44:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the plugin\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/plugins/thirdParty/CellMLAPI/CMakeLists.txt" : {
      "ObjectId" : "8706cb291456277dc28301bcd83c852e27bf318d",
      "LastModified" : "2019-02-01T01:44:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Name and version of our package\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Version of our package's libraries\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Git tag for our library\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Package repository and release tag\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Specify where our local package will be installed\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Name of our package's shared libraries (and of their import libraries, if any)\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Retrieve our package's binaries\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Specify the files that need to have their SHA-1 value checked\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Use the pre-built version of our package unless instructed otherwise\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Retrieve the plugin's package\n",
        "Line" : 155,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Set some compilation flags and/or ignore some warnings\n",
        "Line" : 242,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Build the CellML API as an external project\n",
        "Line" : 251,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Do some post-processing that is specific to each platform\n",
        "Line" : 296,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Dereference the symbolic link to the libraries since CMake's tar can't\n\n# do this\n",
        "Line" : 299,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# Package our external project\n",
        "Line" : 366,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Allow other external projects to find our CellML API package\n",
        "Line" : 379,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Add the plugin\n",
        "Line" : 405,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "src/plugins/thirdParty/LLVMClang/CMakeLists.txt" : {
      "ObjectId" : "ee339c6028ac0555f34a863531d27a608b78e07b",
      "LastModified" : "2019-03-23T01:42:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Name and version of our package\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Version of our library\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Git tag for our library\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Specify where our local package will be installed\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Name of our package's shared libraries (and of their import libraries, if any)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Retrieve our package's binaries\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Specify the files that need to have their SHA-1 value checked\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Use the pre-built version of our package unless instructed otherwise\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Retrieve the plugin's package\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Allow for big objects and ignore some warnings\n",
        "Line" : 85,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Build LLVM+Clang as an external project\n",
        "Line" : 91,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Package our external project\n",
        "Line" : 146,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Allow other external projects to find our LLVM+Clang package\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Add the plugin\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "src/plugins/thirdParty/LibXDiff/CMakeLists.txt" : {
      "ObjectId" : "0ccafed8fc4b1643e83b8f2cf905fc61b97d616b",
      "LastModified" : "2019-02-01T01:44:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Name and version of our package\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Version of our library\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Git tag for our library\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Specify where our local package will be installed\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Name of our package's shared library (and of its import library, if any)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Retrieve our package's binaries\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Specify the files that need to have their SHA-1 value checked\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Use the pre-built version of our package unless instructed otherwise\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Retrieve the plugin's package\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Ignore some warnings\n",
        "Line" : 85,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Build LibXDiff as an external project\n",
        "Line" : 91,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Do some post-processing that is specific to each platform\n",
        "Line" : 116,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# We want both our shared and import libraries to be in the same place\n",
        "Line" : 119,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# Dereference the symbolic link to the library since CMake's tar can't\n\n# do this\n",
        "Line" : 126,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# Package our external project\n",
        "Line" : 137,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Allow other external projects to find our LibXDiff package\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Add the plugin\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "src/plugins/thirdParty/OAuth/CMakeLists.txt" : {
      "ObjectId" : "173a0d1c7b91c5f56b4251ec8cddd764fe6b0014",
      "LastModified" : "2019-02-01T01:44:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Name and version of our package\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Version of our library\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Git tag for our library\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Release tag\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Specify where our local package will be installed\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Name of our package's shared library (and of its import library, if any)\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Retrieve our package's binaries\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Specify the files that need to have their SHA-1 value checked\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Use the pre-built version of our package unless instructed otherwise\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Retrieve the plugin's package\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Ignore some warnings\n",
        "Line" : 93,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Build OAuth as an external project\n",
        "Line" : 99,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Do some post-processing that is specific to each platform\n",
        "Line" : 126,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# We want both our shared and import libraries to be in the same place\n",
        "Line" : 129,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# Dereference the symbolic link to the library since CMake's tar can't\n\n# do this\n",
        "Line" : 136,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# Package our external project\n",
        "Line" : 147,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Allow other external projects to find our OAuth package\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Add the plugin\n\n# Note: we would normally use '${PACKAGE_NAME}' rather than 'OAuth', but it\n\n#       can't be done here since the name of our package is different from that\n\n#       of our plugin...\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "src/plugins/thirdParty/OpenSSL/CMakeLists.txt" : {
      "ObjectId" : "a68d9cee28c2421e09dc60c15fde595364b968ae",
      "LastModified" : "2019-03-23T01:42:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Name and version of our package\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Version of our library\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Git tag for our library\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Release tag\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Specify where our local package will be installed\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Name of our package's shared libraries (and of their import libraries, if any)\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Retrieve our package's binaries\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Specify the files that need to have their SHA-1 value checked\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Use the pre-built version of our package unless instructed otherwise\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Retrieve the plugin's package\n",
        "Line" : 66,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# We require Perl to build OpenSSL\n",
        "Line" : 107,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Set platform specific configuration options\n",
        "Line" : 111,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Build OpenSSL as an external project\n",
        "Line" : 139,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Do some post-processing that is specific to each platform\n",
        "Line" : 168,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Windows requires an additional configuration step\n",
        "Line" : 171,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# We want both our shared and import libraries to be in the same place\n",
        "Line" : 179,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# Make our libraries writable\n\n# Note: indeed, the build process creates write-protected libraries...\n",
        "Line" : 187,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# Fix the RPATH information\n",
        "Line" : 197,
        "CharPositionInLine" : 12
      },
      "18" : {
        "Text" : "# Package our external project\n",
        "Line" : 210,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Allow other external projects to find our OpenSSL package\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Add the plugin\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "src/plugins/thirdParty/Python/CMakeLists.txt" : {
      "ObjectId" : "5331fddd0ad45d5ce0b4e0fe825dbe0bf42d4e31",
      "LastModified" : "2019-02-01T01:44:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Name and version of our package\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Version of our library\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Git tag of our Python sources\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Git tags of Python package installers\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Specify where our local package will be installed\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set the ABI flag and version identifier\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Name of our package's shared libraries (and of their import libraries, if any)\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Include, library and script directories\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Retrieve our package's binaries\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Specify the files that need to have their SHA-1 value checked\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# On Windows and Linux, we bundle SQLite3 with Python\n\n# Note: it is statically linked on macOS...\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# On Windows, we also need the import library\n",
        "Line" : 100,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# Add headers, scripts and libraries to the package archive\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Use the pre-built version of our package unless instructed otherwise\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Retrieve the plugin's package\n",
        "Line" : 132,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Set platform-specific configuration options\n",
        "Line" : 172,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Jupyter and IPython require SQLite3\n",
        "Line" : 184,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Use Homebrew's SQLite3\n",
        "Line" : 222,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# Link to SQLite3's static version, so that we don't have to bundle it\n",
        "Line" : 227,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# Copy SQLite3's library to the plugin's external binaries directory\n",
        "Line" : 240,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# The type of build\n\n# Note: on Windows, we always build a release version...\n",
        "Line" : 252,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Build Python as an external project\n",
        "Line" : 263,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Options for macOS builds\n",
        "Line" : 284,
        "CharPositionInLine" : 12
      },
      "23" : {
        "Text" : "# The version of Python to build\n",
        "Line" : 289,
        "CharPositionInLine" : 12
      },
      "24" : {
        "Text" : "# Build a shared library\n",
        "Line" : 293,
        "CharPositionInLine" : 12
      },
      "25" : {
        "Text" : "# We want development headers\n",
        "Line" : 297,
        "CharPositionInLine" : 12
      },
      "26" : {
        "Text" : "# IPython and Jupyter need SQLite3\n",
        "Line" : 301,
        "CharPositionInLine" : 12
      },
      "27" : {
        "Text" : "# Turn off things we don't want\n",
        "Line" : 307,
        "CharPositionInLine" : 12
      },
      "28" : {
        "Text" : "# Optionally patch sources (on Windows)\n",
        "Line" : 313,
        "CharPositionInLine" : 12
      },
      "29" : {
        "Text" : "# Disable extension modules that we don't use or the platform\n\n# doesn't provide\n",
        "Line" : 317,
        "CharPositionInLine" : 12
      },
      "30" : {
        "Text" : "# Build with an appropriate readline\n",
        "Line" : 330,
        "CharPositionInLine" : 12
      },
      "31" : {
        "Text" : "# Use our OpenSSL\n",
        "Line" : 334,
        "CharPositionInLine" : 12
      },
      "32" : {
        "Text" : "# Use our zlib\n",
        "Line" : 341,
        "CharPositionInLine" : 12
      },
      "33" : {
        "Text" : "# Need to install pip on macOS\n",
        "Line" : 347,
        "CharPositionInLine" : 12
      },
      "34" : {
        "Text" : "# _freeze_importlib.exe, which is run as part of the Python build, needs\n\n# our zlib DLL\n",
        "Line" : 365,
        "CharPositionInLine" : 8
      },
      "35" : {
        "Text" : "# add_plugin() expects our Python DLL in the same directory as the\n\n# import libraries and we must use our DLLs when we run Python in\n\n# subsequent steps below\n",
        "Line" : 376,
        "CharPositionInLine" : 8
      },
      "36" : {
        "Text" : "# Fix up the newly installed Python executable and shared library:\n\n#  - Add RPATH to the Python executable, so that it can use the already\n\n#    installed libraries when run at build time;\n\n#  - Add RPATH to the Python executable, so that it can find the Python\n\n#    library when run at build time;\n\n#  - Add RPATH to the Python executable, so that it can use libraries\n\n#    when installed (into Frameworks/Python/bin);\n\n#  - Use a relative path to the Python library; and\n\n#  - Set RPATH in the Python library to enable linking independent of\n\n#    location.\n",
        "Line" : 395,
        "CharPositionInLine" : 8
      },
      "37" : {
        "Text" : "# Clean our site packages directory before installing any packages\n",
        "Line" : 422,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# Use our newly built Python\n",
        "Line" : 430,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "# Install the Python package manager and its dependencies\n",
        "Line" : 440,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "# On Windows, we use our version of pip that is modified to create\n\n# *-script.py files when installing packages with console scripts, so\n\n# that they can then be updated to reference OpenCOR's Python executable\n",
        "Line" : 443,
        "CharPositionInLine" : 8
      },
      "41" : {
        "Text" : "# Install the Python setuptools package\n",
        "Line" : 447,
        "CharPositionInLine" : 8
      },
      "42" : {
        "Text" : "# Install our Python package installer\n",
        "Line" : 474,
        "CharPositionInLine" : 8
      },
      "43" : {
        "Text" : "# Package Python's include files and libraries\n",
        "Line" : 511,
        "CharPositionInLine" : 4
      },
      "44" : {
        "Text" : "# Allow other external projects to find our copy of Python\n",
        "Line" : 522,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# We are not relying on add_plugin() to build Python, so we need to specify some\n\n# dependencies\n",
        "Line" : 537,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Copy a script to update the Python path in copied scripts\n",
        "Line" : 548,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# And run it\n",
        "Line" : 553,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48
    },
    "src/plugins/thirdParty/Python/cmake/FindSQLite3.cmake" : {
      "ObjectId" : "7e17308d9c0993d7e30111514e2fbabf3a6e5be6",
      "LastModified" : "2019-02-01T01:44:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# From: https://github.com/LuaDist/libsqlite3/blob/master/cmake/FindSQLite3.cmake\n\n#\n\n# Copyright (C) 2007-2009 LuaDist\n\n# Created by Peter Kapec <kapecp@gmail.com>\n\n# Redistribution and use of this file is allowed according to the terms of the\n\n# MIT license.\n\n# For details see the COPYRIGHT file distributed with LuaDist.\n\n# Note: searching headers and libraries is very simple and is NOT as powerful as\n\n#       scripts distributed with CMake, because LuaDist defines directories to\n\n#       search for. Everyone is encouraged to contact the author with\n\n#       improvements. Maybe this file becomes part of CMake distribution\n\n#       sometimes.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find SQLite3\n\n# Find the native SQLite3 headers and libraries\n\n#\n\n# SQLITE3_INCLUDE_DIRS - Where to find sqlite3.h, etc.\n\n# SQLITE3_LIBRARIES    - List of SQLite3 libraries\n\n# SQLITE3_FOUND        - True if SQLite3 was found\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look for the header file\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Look for the library\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set SQLITE3_FOUND to TRUE if all\n\n# listed variables are TRUE\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Copy the results to the output variables\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/plugins/thirdParty/PythonPackages/CMakeLists.txt" : {
      "ObjectId" : "1b8531e72f51314f60a60e5f88aa847add52c551",
      "LastModified" : "2019-02-01T01:44:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Name and version of our package\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Package repository and release tag\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The versions of the Python packages we bundle\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Our GitHub organisation\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# We use our own copies of some Windows packages from\n\n# http://www.lfd.uci.edu/~gohlke/pythonlibs/\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Specify where our local package will be installed\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Where Python packages are installed\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Directories we package\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Specify the files that need to have their SHA-1 value checked\n\n# Note: at least one file must have its SHA-1 value checked...\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Use the pre-built version of our package unless instructed otherwise\n\n# Rebuilding Python means we should also re-install its packages\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Retrieve the plugin's package\n",
        "Line" : 53,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Install Python packages using pip\n",
        "Line" : 90,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Python packages installation requires Python\n",
        "Line" : 96,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Ensure local site packages directory exists\n",
        "Line" : 100,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Use our installed pip\n",
        "Line" : 104,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Install Sphinx\n",
        "Line" : 115,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Package the newly installed Python packages\n",
        "Line" : 125,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Allow other packages to use our scripts\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# We are not relying on add_plugin() to build our Python site packages, so we\n\n# need to specify some dependencies\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Update the Python path in newly copied scripts\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "src/plugins/thirdParty/QScintilla/CMakeLists.txt" : {
      "ObjectId" : "3d4efd7b7f3a84371f5b0352c580d8be9a4d35ac",
      "LastModified" : "2019-04-03T02:28:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Name and version of our package\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Version of our library\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Git tag for our library\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Specify where our local package will be installed\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Name of our package's shared library (and of its import library, if any)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Retrieve our package's binaries\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Specify the files that need to have their SHA-1 value checked\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Use the pre-built version of our package unless instructed otherwise\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Retrieve the plugin's package\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Set platform specific configuration options\n",
        "Line" : 91,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Build QScintilla as an external project\n",
        "Line" : 103,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Do some post-processing that is specific to each platform\n",
        "Line" : 126,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Dereference the symbolic link to the library since CMake's tar can't\n\n# do this\n",
        "Line" : 129,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# Fix the RPATH information\n",
        "Line" : 139,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# Note: we wouldn't normally strip the library here since it's done\n\n#       elsewhere in our build process, but it happens that there is\n\n#       an issue with the system version of patchelf that prevents\n\n#       the library from being stripped afterwards...\n",
        "Line" : 147,
        "CharPositionInLine" : 12
      },
      "15" : {
        "Text" : "# Package our external project\n",
        "Line" : 161,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Allow other external projects to find our QScintilla package\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Add the plugin\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "src/plugins/thirdParty/Qwt/CMakeLists.txt" : {
      "ObjectId" : "124f7d305152f806c25042eb12c02d883ac8a274",
      "LastModified" : "2019-04-03T02:28:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Name and version of our package\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Version of our library\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Git tag for our library\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Specify where our local package will be installed\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Name of our package's shared libraries (and of their import libraries, if any)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Retrieve our package's binaries\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Specify the files that need to have their SHA-1 value checked\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Use the pre-built version of our package unless instructed otherwise\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Retrieve the plugin's package\n",
        "Line" : 69,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Set platform specific configuration options\n",
        "Line" : 106,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Build Qwt as an external project\n",
        "Line" : 116,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Do some post-processing that is specific to each platform\n",
        "Line" : 140,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Dereference the symbolic link to the library since CMake's tar can't\n\n# do this\n",
        "Line" : 143,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# Fix the RPATH information\n",
        "Line" : 160,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# Note: we wouldn't normally strip the library here since it's done\n\n#       elsewhere in our build process, but it happens that there is\n\n#       an issue with the system version of patchelf that prevents\n\n#       the library from being stripped afterwards...\n",
        "Line" : 172,
        "CharPositionInLine" : 12
      },
      "15" : {
        "Text" : "# Package our external project\n",
        "Line" : 189,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Allow other external projects to find our Qwt package\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Add the plugin\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "src/plugins/thirdParty/SUNDIALS/CMakeLists.txt" : {
      "ObjectId" : "df7236bfb50675d92ec836c9063f7d8aa6a6c03c",
      "LastModified" : "2019-03-23T01:42:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Name and version of our package\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Version of our package's libraries\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Git tag for our library\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Specify where our local package will be installed\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Name of our package's shared libraries (and of their import libraries, if any)\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Retrieve our package's binaries\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Specify the files that need to have their SHA-1 value checked\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Use the pre-built version of our package unless instructed otherwise\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Retrieve the plugin's package\n",
        "Line" : 219,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Ignore some warnings\n",
        "Line" : 346,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Build SUNDIALS as an external project\n\n# Note: the --no-warn-unused-cli argument is to prevent CMake from warning\n\n#       us about NO_FPRINTF_OUTPUT not being used...\n",
        "Line" : 352,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Do some post-processing that is specific to each platform\n",
        "Line" : 401,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Dereference the symbolic link to the libraries since CMake's tar can't\n\n# do this\n",
        "Line" : 404,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# Package our external project\n",
        "Line" : 527,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Allow other external projects to find our SUNDIALS package\n",
        "Line" : 538,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Add the plugin\n",
        "Line" : 580,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "src/plugins/thirdParty/Zinc/CMakeLists.txt" : {
      "ObjectId" : "f44f8616822d40e62a297f2abb40eff9464c1008",
      "LastModified" : "2019-02-01T01:44:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Name and version of our package\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Version of our library\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Git tag for our library\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Specify where our local package will be installed\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Name of our package's shared libraries (and of their import libraries, if any)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Retrieve our package's binaries\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Specify the files that need to have their SHA-1 value checked\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Use the pre-built version of our package unless instructed otherwise\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Retrieve the plugin's package\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Set platform specific configuration options\n",
        "Line" : 91,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Build Zinc as an external project\n",
        "Line" : 103,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Package our external project\n",
        "Line" : 130,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Allow other external projects to find our Zinc package\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Add the plugin\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "src/plugins/thirdParty/libBioSignalML/CMakeLists.txt" : {
      "ObjectId" : "49b0b5800ef70f12a55bd3fa27c6152350813c06",
      "LastModified" : "2019-02-01T01:44:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Name and version of our package\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Version of our package's libraries\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Git tags for our libraries\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Package repository and release tag\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Specify where our local package will be installed\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Name of our package's shared libraries (and of their import libraries, if any)\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Retrieve our package's binaries\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Specify the files that need to have their SHA-1 value checked\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Use the pre-built version of our package unless instructed otherwise\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Retrieve the plugin's package\n",
        "Line" : 72,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Build typedobject as an external project\n",
        "Line" : 117,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Build BioSignalML as an external project\n",
        "Line" : 138,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# We want both our shared and import libraries to be in the same place\n",
        "Line" : 167,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# Dereference the symbolic link to the libraries since CMake's tar can't\n\n# do this\n",
        "Line" : 175,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# Package our external project\n",
        "Line" : 189,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Allow other external projects to find our BioSignalML package\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Add the plugin\n\n# Note: we would normally use '${PACKAGE_NAME}' rather than 'OAuth', but it\n\n#       can't be done here since the name of our package is different from that\n\n#       of our plugin...\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "src/plugins/thirdParty/libNuML/CMakeLists.txt" : {
      "ObjectId" : "0d50d98d1dbdcdd7e195b5a84c3a99c8f88249ca",
      "LastModified" : "2019-02-01T01:44:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Name and version of our package\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Version of our package's libraries\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Git tag for our library\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Package repository\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Specify where our local package will be installed\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Name of our package's shared library (and of its import library, if any)\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Retrieve our package's binaries\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Specify the files that need to have their SHA-1 value checked\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Use the pre-built version of our package unless instructed otherwise\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Retrieve the plugin's package\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Build libNuML as an external project\n\n# Note #1: we need libSBML to be built, so we can access it, as well as some\n\n#          of its dependencies...\n\n# Note #2: we rely on CONFIGURE_COMMAND rather than CMAKE_GENERATOR and\n\n#          CMAKE_ARGS in our call to ExternalProject_Add() since the actual\n\n#          code is not under SOURCE_DIR, but under SOURCE_DIR/libnuml...\n",
        "Line" : 93,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Do some post-processing that is specific to each platform\n",
        "Line" : 145,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# We want both our shared and import libraries to be in the same place\n",
        "Line" : 148,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# Dereference the symbolic link to the libraries since CMake's tar can't\n\n# do this\n",
        "Line" : 155,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# Package our external project\n",
        "Line" : 166,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Allow other external projects to find our libNuML package\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Add the plugin\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "src/plugins/thirdParty/libSBML/CMakeLists.txt" : {
      "ObjectId" : "53ead6235e049bdf717968c7e679c2f0056d0b54",
      "LastModified" : "2019-02-01T01:44:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Name and version of our package\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Version of our package's libraries\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Git tag for our library\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Package repository\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Specify where our local package will be installed\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Name of our package's shared library (and of its import library, if any)\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Retrieve our package's binaries\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Specify the files that need to have their SHA-1 value checked\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Use the pre-built version of our package unless instructed otherwise\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Retrieve the plugin's package\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Download some dependencies for Windows, if needed\n",
        "Line" : 93,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Note: this is in case we had an HTTP error of sorts, in which case we\n\n#       would end up with an empty file...\n",
        "Line" : 127,
        "CharPositionInLine" : 16
      },
      "12" : {
        "Text" : "# Ignore some warnings\n",
        "Line" : 135,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Build libSBML as an external project\n",
        "Line" : 141,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Do some post-processing that is specific to each platform\n",
        "Line" : 171,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# We want both our shared and import libraries to be in the same place\n",
        "Line" : 174,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# Dereference the symbolic link to the libraries since CMake's tar can't\n\n# do this\n",
        "Line" : 181,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# Package our external project\n",
        "Line" : 192,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Allow other external projects to find our libSBML package\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Add the plugin\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "src/plugins/thirdParty/libSEDML/CMakeLists.txt" : {
      "ObjectId" : "7a34b193776801171f17aaebde1e433a92181279",
      "LastModified" : "2019-03-23T20:11:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Name and version of our package\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Version of our package's libraries\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Git tag for our library\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Package repository\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Specify where our local package will be installed\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Name of our package's shared library (and of its import library, if any)\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Retrieve our package's binaries\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Specify the files that need to have their SHA-1 value checked\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Use the pre-built version of our package unless instructed otherwise\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Retrieve the plugin's package\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Build libSEDML as an external project\n\n# Note: we need both libSBML and libNuML to be built, so we can access them,\n\n#       as well as some of libSBML's dependencies...\n",
        "Line" : 93,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Do some post-processing that is specific to each platform\n",
        "Line" : 156,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# We want both our shared and import libraries to be in the same place\n",
        "Line" : 159,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# Dereference the symbolic link to the libraries since CMake's tar can't\n\n# do this\n",
        "Line" : 166,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# Package our external project\n",
        "Line" : 177,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Allow other external projects to find our libSEDML package\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Add the plugin\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "src/plugins/thirdParty/libgit2/CMakeLists.txt" : {
      "ObjectId" : "df63ece50d5286620a2254a2a277eb8e6d0790d9",
      "LastModified" : "2019-03-23T01:42:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Name and version of our package\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Version of our library\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Git tag for our library\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Release tag\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Specify where our local package will be installed\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Name of our package's shared library (and of its import library, if any)\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Retrieve our package's binaries\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Specify the files that need to have their SHA-1 value checked\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Use the pre-built version of our package unless instructed otherwise\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Retrieve the plugin's package\n",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Ignore some warnings\n",
        "Line" : 97,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Some specific arguments\n",
        "Line" : 105,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Build libgit2 as an external project\n",
        "Line" : 111,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Do some post-processing that is specific to each platform\n",
        "Line" : 145,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# We want both our shared and import libraries to be in the same place\n",
        "Line" : 148,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# Dereference the symbolic link to the library since CMake's tar can't\n\n# do this\n",
        "Line" : 155,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# Package our external project\n",
        "Line" : 166,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Allow other external projects to find our libgit2 package\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Add the plugin\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "src/plugins/thirdParty/zlib/CMakeLists.txt" : {
      "ObjectId" : "a907afd6fe120f75ed64660e6cae4a1d95111eb7",
      "LastModified" : "2019-02-01T01:44:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Name and version of our package\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Version of our library\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Git tag for our library\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Specify where our local package will be installed\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Name of our package's shared library (and of its import library, if any)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Retrieve our package's binaries\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Specify the files that need to have their SHA-1 value checked\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Use the pre-built version of our package unless instructed otherwise\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Retrieve the plugin's package\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Ignore some warnings\n",
        "Line" : 91,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Build zlib as an external project\n",
        "Line" : 97,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Do some post-processing that is specific to each platform\n",
        "Line" : 122,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# We want both our shared and import libraries to be in the same place\n",
        "Line" : 125,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# Dereference the symbolic link to the library since CMake's tar can't\n\n# do this\n",
        "Line" : 132,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# Package our external project\n",
        "Line" : 143,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Allow other external projects to find our zlib package\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Add the plugin\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "src/plugins/tools/CellMLTools/CMakeLists.txt" : {
      "ObjectId" : "cae9b2502b49d2b84654e92ee329a183ca3d1db5",
      "LastModified" : "2019-02-01T01:44:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the plugin\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/plugins/widget/EditorWidget/CMakeLists.txt" : {
      "ObjectId" : "92a0bdd7733cbf2d534d30766fcf4bf864a41abb",
      "LastModified" : "2019-02-01T01:44:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the plugin\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/plugins/widget/GraphPanelWidget/CMakeLists.txt" : {
      "ObjectId" : "c4b2f84f6e3236425f9a7271b3d14ef148bc2d80",
      "LastModified" : "2019-02-01T01:44:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the plugin\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/plugins/widget/MathMLViewerWidget/CMakeLists.txt" : {
      "ObjectId" : "37bae531a81124ea20637ccd6c43f8a2c98c5fe3",
      "LastModified" : "2019-02-01T01:44:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the plugin\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/plugins/widget/WebViewerWidget/CMakeLists.txt" : {
      "ObjectId" : "858ed00553f417cb9a15d3709394a05ef76311b2",
      "LastModified" : "2019-02-01T01:44:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the plugin\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/plugins/widget/ZincWidget/CMakeLists.txt" : {
      "ObjectId" : "254fa57ed04a5491c931cf4e81c1d8d4a114d92b",
      "LastModified" : "2019-02-01T01:44:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the plugin\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 69
  },
  "ElapsedTime" : 8383
}