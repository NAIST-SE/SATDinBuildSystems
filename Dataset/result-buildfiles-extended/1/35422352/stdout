{
  "Repository" : "35422352",
  "Revision" : "HEAD",
  "ObjectId" : "a869e7fc13407afe7dc46065117c717aeb6d0910",
  "CommitTime" : "2019-04-17T00:52:08Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "bf4d381444bc5e8d53800cf93bd12367f13ee7fa",
      "LastModified" : "2019-02-22T03:34:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake 2.8.12 or above is required for CMakeParseArguments.\n\n# CMake 2.8.11 or above is required for target_include_directories.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the CMAKE_CXX_COMPILER_ID variable to AppleClang instead of Clang.\n\n# AppleClang and Clang have different version number. This was introduced in\n\n# CMake 3.0.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use MACOSX_RPATH by default on OS X. This was added in CMake 2.8.12 and\n\n# became default in CMake 3.0. Explicitly setting this policy is necessary to\n\n# suppress a warning in CMake 3.0 and above.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If you change the version, please update the <version> tag in package.xml.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#==============================================================================\n\n# Configuration Options\n\n#\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#==============================================================================\n\n# codecov Setup\n\n#\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#==============================================================================\n\n# Helper functions.\n\n#\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#==============================================================================\n\n# Required Dependencies\n\n#\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# for 'perception' target\n",
        "Line" : 87,
        "CharPositionInLine" : 33
      },
      "9" : {
        "Text" : "# Check if DART is built with octomap so that it supports VoxelGridShape\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#==============================================================================\n\n# Compiler settings\n\n#\n\n# CompilerSettings optionally requires a custon CMake option\n\n# TREAT_WARNINGS_AS_ERRORS.\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#==============================================================================\n\n# Libraries and unit tests.\n\n#\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# This custom target doesn't affect on building aikido projects but is only for\n\n# displaying the header files in IDEs.\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Targets to mimic a Catkin package. \"tests\" builds tests and \"test\" (or\n\n# \"run_tests\") runs them.\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#==============================================================================\n\n# Doxygen.\n\n#\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Strip include_directories() being used by CMake from #include paths.\n\n# TODO: Add per-target INCLUDE_DIRECTORIES properties to this list.\n",
        "Line" : 163,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Optionally download Doxygen tagfiles for dependencies.\n",
        "Line" : 171,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Generate a Doxyfile. This uses the variables:\n\n#\n\n# - DOXYGEN_EXCLUDE\n\n# - DOXYGEN_EXTRA_INPUTS\n\n# - DOXYGEN_GENERATE_TAGFILE\n\n# - DOXYGEN_INPUT_ROOT\n\n# - DOXYGEN_OUTPUT_ROOT\n\n# - DOXYGEN_STRIP_FROM_PATH\n\n# - DOXYGEN_STRIP_FROM_INC_PATH\n\n# - DOXYGEN_TAGFILES\n",
        "Line" : 190,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Create the \"docs\" target that runs Doxygen.\n",
        "Line" : 203,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Fix missing ^ in generated navtree.js for external DART link\n",
        "Line" : 207,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Strip path prefix from all paths in aikido.tag\n",
        "Line" : 210,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Strip all doxygen=\"path\" HTML tags\n",
        "Line" : 215,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Create the \"view_docs\" target that opens the documentation.\n",
        "Line" : 236,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "#===============================================================================\n\n# Automatic code formatting using clang-format.\n\n#\n\n# We only support one specific ClangFormat version because different versions\n\n# result in different code formatting with the same configuration. ClangFormat\n\n# 3.8 is chosen since it's the latest version supported by Ubuntu Trusty.\n",
        "Line" : 251,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#==============================================================================\n\n# Installation.\n\n#\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Install the package.xml file (to satisfy REP-136).\n",
        "Line" : 272,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Generate and install CMake configuration files for each component <C>:\n\n# - <C>Component.cmake, which defines:\n\n#   - aikido_<C>_DEPENDENCIES: list of component dependencies\n\n#   - aikido_<C>_LIBRARIES: list of library targets in this component\n\n# - <C>Targets.cmake, which creates IMPORTED targets\n",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Generate and install a Config.cmake file. This file includes the\n\n# <C>Component.cmake and <C>Targets.cmake created above. It also uses the\n\n# following variables:\n\n#\n\n# - PACKAGE_INCLUDE_INSTALL_DIR\n\n# - PACKAGE_INCLUDE_DIRS\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#==============================================================================\n\n# Uninstallation.\n\n#\n\n# Add a custom target \"uninstall\"\n\n# Ref: http://www.cmake.org/Wiki/CMake_FAQ#Can_I_do_.22make_uninstall.22_with_CMake.3F\n",
        "Line" : 306,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 29
    },
    "cmake/ClangFormat.cmake" : {
      "ObjectId" : "a1338e682f9e0b37c57ae6eb2f9479f89228f0f1",
      "LastModified" : "2019-02-22T03:34:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# prefix \n",
        "Line" : 3,
        "CharPositionInLine" : 15
      },
      "1" : {
        "Text" : "# no boolean args\n",
        "Line" : 4,
        "CharPositionInLine" : 11
      },
      "2" : {
        "Text" : "# clang-format version\n",
        "Line" : 5,
        "CharPositionInLine" : 18
      },
      "3" : {
        "Text" : "# no multi-value args\n",
        "Line" : 6,
        "CharPositionInLine" : 11
      },
      "4" : {
        "Text" : "#===============================================================================\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#===============================================================================\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#===============================================================================\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cmake/CodeCoverage.cmake" : {
      "ObjectId" : "1a1968838249d778d874ef815558683299b5b0d0",
      "LastModified" : "2019-02-22T03:34:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2012 - 2015, Lars Bilke\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without modification,\n\n# are permitted provided that the following conditions are met:\n\n#\n\n# 1. Redistributions of source code must retain the above copyright notice, this\n\n#    list of conditions and the following disclaimer.\n\n#\n\n# 2. Redistributions in binary form must reproduce the above copyright notice,\n\n#    this list of conditions and the following disclaimer in the documentation\n\n#    and/or other materials provided with the distribution.\n\n#\n\n# 3. Neither the name of the copyright holder nor the names of its contributors\n\n#    may be used to endorse or promote products derived from this software without\n\n#    specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n\n# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\n# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\n# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\n# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n\n# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\n# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n#\n\n#\n\n# 2012-01-31, Lars Bilke\n\n# - Enable Code Coverage\n\n#\n\n# 2013-09-17, Joakim Söderberg\n\n# - Added support for Clang.\n\n# - Some additional usage instructions.\n\n#\n\n# 2019-01-24, Brian Hou\n\n# - Added support for Codecov uploads.\n\n#\n\n# USAGE:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# 0. (Mac only) If you use Xcode 5.1 make sure to patch geninfo as described here:\n\n#      http://stackoverflow.com/a/22404544/80480\n\n#\n\n# 1. Copy this file into your cmake modules path.\n\n#\n\n# 2. Add the following line to your CMakeLists.txt:\n\n#      INCLUDE(CodeCoverage)\n\n#\n\n# 3. Set compiler flags to turn off optimization and enable coverage:\n\n#    SET(CMAKE_CXX_FLAGS \"-g -O0 -fprofile-arcs -ftest-coverage\")\n\n#\t SET(CMAKE_C_FLAGS \"-g -O0 -fprofile-arcs -ftest-coverage\")\n\n#\n\n# 3. Use the function SETUP_TARGET_FOR_COVERAGE to create a custom make target\n\n#    which runs your test executable and produces a lcov code coverage report:\n\n#    Example:\n\n#\t SETUP_TARGET_FOR_COVERAGE(\n\n#\t\t\t\tmy_coverage_target  # Name for custom target.\n\n#\t\t\t\ttest_driver         # Name of the test driver executable that runs the tests.\n\n#\t\t\t\t\t\t\t\t\t# NOTE! This should always have a ZERO as exit code\n\n#\t\t\t\t\t\t\t\t\t# otherwise the coverage generation will not complete.\n\n#\t\t\t\tcoverage            # Name of output directory.\n\n#\t\t\t\t)\n\n#\n\n# 4. Build a Debug build:\n\n#\t cmake -DCMAKE_BUILD_TYPE=Debug ..\n\n#\t make\n\n#\t make my_coverage_target\n\n#\n\n#\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check prereqs\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# NOT GCOV_PATH\n",
        "Line" : 81,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# CHECK VALID COMPILER\n",
        "Line" : 89,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# NOT CMAKE_BUILD_TYPE STREQUAL \"Debug\"\n",
        "Line" : 115,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Param _targetname     The name of new the custom make target\n\n# Param _testrunner     The name of the target which runs the tests.\n\n#\t\t\t\t\t\tMUST return ZERO always, even on errors.\n\n#\t\t\t\t\t\tIf not, no coverage report will be created!\n\n# Param _outputname     lcov output is generated as _outputname.info\n\n#                       HTML report is generated in _outputname/index.html\n\n# Optional fourth parameter is passed as arguments to _testrunner\n\n#   Pass them in list form, e.g.: \"-j;2\" for -j 2\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# NOT LCOV_PATH\n",
        "Line" : 130,
        "CharPositionInLine" : 9
      },
      "8" : {
        "Text" : "# NOT GENHTML_PATH\n",
        "Line" : 134,
        "CharPositionInLine" : 9
      },
      "9" : {
        "Text" : "# Setup target\n",
        "Line" : 143,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# Cleanup lcov\n",
        "Line" : 146,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Run tests\n",
        "Line" : 149,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Capturing lcov counters and generating report\n",
        "Line" : 152,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Upload to Codecov (added by @brianhou)\n",
        "Line" : 157,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Clean up reports\n",
        "Line" : 162,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Show info where to find the report\n",
        "Line" : 169,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "# SETUP_TARGET_FOR_COVERAGE\n",
        "Line" : 175,
        "CharPositionInLine" : 14
      },
      "17" : {
        "Text" : "# Param _targetname     The name of new the custom make target\n\n# Param _testrunner     The name of the target which runs the tests\n\n# Param _outputname     cobertura output is generated as _outputname.xml\n\n# Optional fourth parameter is passed as arguments to _testrunner\n\n#   Pass them in list form, e.g.: \"-j;2\" for -j 2\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# NOT PYTHON_EXECUTABLE\n",
        "Line" : 186,
        "CharPositionInLine" : 9
      },
      "19" : {
        "Text" : "# NOT GCOVR_PATH\n",
        "Line" : 190,
        "CharPositionInLine" : 9
      },
      "20" : {
        "Text" : "# Run tests\n",
        "Line" : 194,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# Running gcovr\n",
        "Line" : 197,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# Show info where to find the report\n",
        "Line" : 203,
        "CharPositionInLine" : 1
      },
      "23" : {
        "Text" : "# SETUP_TARGET_FOR_COVERAGE_COBERTURA\n",
        "Line" : 209,
        "CharPositionInLine" : 14
      },
      "CommentCount" : 24
    },
    "cmake/CompilerSettings.cmake" : {
      "ObjectId" : "86a539b8bfac220c8a5b06d1cdc4b11fc7c8c796",
      "LastModified" : "2019-02-22T03:34:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#==============================================================================\n\n# Compiler settings\n\n#\n\n# Aikido currently supports four compilers: GCC, Clang (and AppleClang), and\n\n# MSVC. CompilerSettings optionally requires a custon CMake option\n\n# TREAT_WARNINGS_AS_ERRORS.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Aikido requires GCC 4.8 or greater to fully support C++11.\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Adding -fext-numeric-literals based on\n\n# https://svn.boost.org/trac10/ticket/9240.\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Aikido requires Clang 3.3 or greater to fully support C++11.\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Aikido requires AppleClang 6.1 or greater to fully support C++11.\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Aikido requires Visual Studio 2015 or greater to fully support C++11.\n",
        "Line" : 63,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# We don't need to specify an additional definition to enable build with\n\n# C++11 (e.g., -std=c++11) since Visual Studio enables it by default when\n\n# available.\n",
        "Line" : 68,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 7
    },
    "cmake/Components.cmake" : {
      "ObjectId" : "f1bf94019912d5c5ff71d24d125230df72696380",
      "LastModified" : "2019-02-22T03:34:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This must be called before any other component function\n\n# as it initializes the requried global properties.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#==============================================================================\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#==============================================================================\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#==============================================================================\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#==============================================================================\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#==============================================================================\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#==============================================================================\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# TODO: Replace this manual generation with a configure_file.\n",
        "Line" : 134,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "cmake/FindEIGEN3.cmake" : {
      "ObjectId" : "10aa9b2f4a354df262e56067ccb67c522abe13ea",
      "LastModified" : "2019-02-22T03:34:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2011-2018, The DART development contributors\n\n# All rights reserved.\n\n#\n\n# The list of contributors can be found at:\n\n#   https://github.com/dartsim/dart/blob/master/LICENSE\n\n#\n\n# This file is provided under the \"BSD-style\" License\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find Eigen\n\n#\n\n# This sets the following variables:\n\n# EIGEN3_FOUND\n\n# EIGEN3_INCLUDE_DIRS\n\n# EIGEN3_VERSION\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check to see if pkgconfig is installed.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Include directories\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Version\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set (NAME)_FOUND if all the variables and the version are satisfied.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/FindTinyXML2.cmake" : {
      "ObjectId" : "4d6b5b80e7883c556e2a71aed8a6cf708b59c2b7",
      "LastModified" : "2019-02-22T03:34:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2011-2017, The DART development contributors\n\n# All rights reserved.\n\n#\n\n# The list of contributors can be found at:\n\n#   https://github.com/dartsim/dart/blob/master/LICENSE\n\n#\n\n# This file is provided under the \"BSD-style\" License\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find TinyXML2\n\n#\n\n# This sets the following variables:\n\n# TinyXML2_FOUND\n\n# TinyXML2_INCLUDE_DIRS\n\n# TinyXML2_LIBRARIES\n\n# TinyXML2_VERSION\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check if the pkgconfig file is installed\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Include directories\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Libraries\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Version\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set (NAME)_FOUND if all the variables and the version are satisfied.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cmake/FindYamlCpp.cmake" : {
      "ObjectId" : "b5bfe4a887ce5445068fe9560709cf0c1aa61db0",
      "LastModified" : "2019-02-22T03:34:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate yaml-cpp\n\n#\n\n# This module defines\n\n#  YAMLCPP_FOUND - System has yaml-cpp\n\n#  YAMLCPP_INCLUDE_DIRS - The yaml-cpp include directories\n\n#  YAMLCPP_LIBRARIES - The libraries needed to use yaml-cpp\n\n#  YAMLCPP_DEFINITIONS - Compiler switches required for using yaml-cpp\n\n#  YAMLCPP_VERSION - The version of yaml-cpp\n\n#\n\n# By default, the dynamic libraries of yaml-cpp will be found. To find the\n\n# static ones instead, set the YAMLCPP_STATIC_LIBRARY variable to TRUE before\n\n# calling find_package(YamlCpp ...).\n\n#\n\n# If yaml-cpp is not installed in a standard path, you can use the YAMLCPP_DIR\n\n# CMake variable to tell CMake where yaml-cpp is.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Attempt to find static library first if this is set\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set up pkg-config to find yaml-cpp.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find the yaml-cpp include directory.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Find the yaml-cpp library.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set YAMLCPP_FOUND to TRUE\n\n# if all listed variables are TRUE.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/Findactionlib.cmake" : {
      "ObjectId" : "1f1cc244fd8173ae72a6c94e017b998ca28c328f",
      "LastModified" : "2019-02-22T03:34:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find actionlib\n\n#\n\n# This sets the following variables:\n\n# actionlib_FOUND\n\n# actionlib_INCLUDE_DIRS\n\n# actionlib_LIBRARIES\n\n# actionlib_VERSION\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Note: This find module is necessary because the config file imports \"gtest\",\n\n# \"tests\", and \"run_tests\" that conflict with the targets defined by Aikido.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check to see if pkgconfig is installed.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Include directories\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Libraries\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Version\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set (NAME)_FOUND if all the variables and the version are satisfied.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cmake/Findcontrol_msgs.cmake" : {
      "ObjectId" : "c7968ba3e39b46d685d093afdfe099147af4794a",
      "LastModified" : "2019-02-22T03:34:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find control_msgs\n\n#\n\n# This sets the following variables:\n\n# control_msgs_FOUND\n\n# control_msgs_INCLUDE_DIRS\n\n# control_msgs_VERSION\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Note: This find module is necessary because the config file imports \"gtest\",\n\n# \"tests\", and \"run_tests\" that conflict with the targets defined by Aikido.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check to see if pkgconfig is installed.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Include directories\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Version\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set (NAME)_FOUND if all the variables and the version are satisfied.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/Findinteractive_markers.cmake" : {
      "ObjectId" : "2488a998c6eb3cbe99ba80271489539ae334a1b9",
      "LastModified" : "2019-02-22T03:34:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find interactive_markers\n\n#\n\n# This sets the following variables:\n\n# interactive_markers_FOUND\n\n# interactive_markers_INCLUDE_DIRS\n\n# interactive_markers_LIBRARIES\n\n# interactive_markers_VERSION\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Note: This find module is necessary because the config file imports \"gtest\",\n\n# \"tests\", and \"run_tests\" that conflict with the targets defined by Aikido.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check to see if pkgconfig is installed.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Include directories\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Libraries\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Version\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set (NAME)_FOUND if all the variables and the version are satisfied.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cmake/Findoctomap_ros.cmake" : {
      "ObjectId" : "23856796e8ca198c2e4bfc3b3f6fdfa769f3abdc",
      "LastModified" : "2019-02-22T03:34:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find octomap_ros\n\n#\n\n# This sets the following variables:\n\n# octomap_ros_FOUND\n\n# octomap_ros_INCLUDE_DIRS\n\n# octomap_ros_LIBRARIES\n\n# octomap_ros_VERSION\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Note: This find module is necessary because the config file imports \"gtest\",\n\n# \"tests\", and \"run_tests\" that conflict with the targets defined by Aikido.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check to see if pkgconfig is installed.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Include directories\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Libraries\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Version\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set (NAME)_FOUND if all the variables and the version are satisfied.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cmake/Findpr_control_msgs.cmake" : {
      "ObjectId" : "3184c7da34cf9e730df11034ce3e8bbeb602c64b",
      "LastModified" : "2019-02-22T03:34:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find pr_control_msgs\n\n#\n\n# This sets the following variables:\n\n# pr_control_msgs_FOUND\n\n# pr_control_msgs_INCLUDE_DIRS\n\n# pr_control_msgs_VERSION\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Note: This find module is necessary because the config file imports \"gtest\",\n\n# \"tests\", and \"run_tests\" that conflict with the targets defined by Aikido.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check to see if pkgconfig is installed.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Include directories\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Version\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set (NAME)_FOUND if all the variables and the version are satisfied.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/Findtf.cmake" : {
      "ObjectId" : "79cfbd2f253d6539d16f71df3f7ea485da1cd9f7",
      "LastModified" : "2019-02-22T03:34:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find tf\n\n#\n\n# This sets the following variables:\n\n# tf_FOUND\n\n# tf_INCLUDE_DIRS\n\n# tf_LIBRARIES\n\n# tf_VERSION\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Note: This find module is necessary because the config file imports \"gtest\",\n\n# \"tests\", and \"run_tests\" that conflict with the targets defined by Aikido.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check to see if pkgconfig is installed.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Include directories\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Libraries\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Version\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set (NAME)_FOUND if all the variables and the version are satisfied.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "d9876154d0782aa316713634d1fb8220433bad80",
      "LastModified" : "2019-02-22T03:34:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Trailing comments represent the dependencies of each subdirectory where the\n\n# Aikido targets are marked as [target_name].\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# boost, dart\n\n# [common], boost, dart, tinyxml2, yaml-cpp\n\n# dart\n\n# [io], boost, dart, yaml-cpp, geometry_msgs, roscpp, std_msgs, visualization_msgs\n\n# [statespace], dart\n\n# [common], [statespace]\n\n# [common], [statespace]\n\n# [external], [common], [statespace], [trajectory], [constraint], [distance], dart, ompl\n\n# [constraint], [planner], boost, dart, roscpp, geometry_msgs, interactive_markers, std_msgs, visualization_msgs, libmicrohttpd\n\n# [statespace], [trajectory]\n\n# [common], [io], [statespace], [trajectory], [constraint], [planner], [control]\n",
        "Line" : 7,
        "CharPositionInLine" : 31
      },
      "2" : {
        "Text" : "#add_subdirectory(\"python\")     # everything\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/common/CMakeLists.txt" : {
      "ObjectId" : "243a7d2a4faa588edebc1ca562430bd9abce1ef8",
      "LastModified" : "2019-02-22T03:34:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#==============================================================================\n\n# Dependencies\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#==============================================================================\n\n# Libraries\n\n#\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/constraint/CMakeLists.txt" : {
      "ObjectId" : "7caadf15754d6dc0da7947a3858d22d582abd18f",
      "LastModified" : "2019-02-22T03:34:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/control/CMakeLists.txt" : {
      "ObjectId" : "2bf48b2511c1b1c3d96c0ef92e0bf91effe13276",
      "LastModified" : "2019-02-22T03:34:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Dependencies: control, statespace, trajectory\n",
        "Line" : 28,
        "CharPositionInLine" : 24
      },
      "CommentCount" : 1
    },
    "src/control/ros/CMakeLists.txt" : {
      "ObjectId" : "7491cee76b2a02c7a3a8ae37414267f391e956ea",
      "LastModified" : "2019-02-22T03:34:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#==============================================================================\n\n# Dependencies\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Note: Intentionally use \"Module\" mode because the config file imports \"gtest\",\n\n# \"tests\", and \"run_tests\" that conflict with the targets defined by Aikido.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Note: Intentionally use \"Module\" mode because the config file imports \"gtest\",\n\n# \"tests\", and \"run_tests\" that conflict with the targets defined by Aikido.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Note: Intentionally use \"Module\" mode because the config file imports \"gtest\",\n\n# \"tests\", and \"run_tests\" that conflict with the targets defined by Aikido.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#==============================================================================\n\n# Libraries\n\n#\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/distance/CMakeLists.txt" : {
      "ObjectId" : "5c4247975a1d46e3543eb3c50ef4934d2b60adc2",
      "LastModified" : "2019-02-22T03:34:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/external/hauser_parabolic_smoother/CMakeLists.txt" : {
      "ObjectId" : "ad1436b5abe97e13831c4daa51b5992e16b54a1c",
      "LastModified" : "2019-02-22T03:34:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/external/kunz_retimer/CMakeLists.txt" : {
      "ObjectId" : "5c8836c1d7918a95911038ae7a92a24fb4693e22",
      "LastModified" : "2019-02-22T03:34:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/io/CMakeLists.txt" : {
      "ObjectId" : "4047153b5fb5cdddf39f7e5ee6301eb9d29be12c",
      "LastModified" : "2019-02-22T03:34:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#==============================================================================\n\n# Dependencies\n\n#\n\n# TODO: Move CatkinResourceRetriever into a separate, optional component.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#==============================================================================\n\n# Libraries\n\n#\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Define TINYXML2_MAJOR_VERSION_GE_6 to support API breaking changes of\n\n# tinyxml2 6\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/perception/CMakeLists.txt" : {
      "ObjectId" : "b8af95d7930d1e04604a0eb9c483d0a47dc085de",
      "LastModified" : "2019-02-22T03:34:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#==============================================================================\n\n# Dependencies\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Note: Intentionally use \"Module\" mode because the config file imports \"gtest\",\n\n# \"tests\", and \"run_tests\" that conflict with the targets defined by Aikido.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Note: Intentionally use \"Module\" mode because the config file imports \"gtest\",\n\n# \"tests\", and \"run_tests\" that conflict with the targets defined by Aikido.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#==============================================================================\n\n# Libraries\n\n#\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/planner/CMakeLists.txt" : {
      "ObjectId" : "8358a7b6a6a4731e5cd18e6c03feac4a480cbda0",
      "LastModified" : "2019-02-22T03:34:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# dart/ConfigurationToEndEffectorPosePlanner.cpp\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# [constraint], [distance], [statespace], [trajectory], dart, ompl\n\n# [external], [common], [trajectory], [statespace], dart\n\n# [common], [trajectory], [statespace], dart\n\n# [external], [common], [trajectory], [statespace], dart\n",
        "Line" : 61,
        "CharPositionInLine" : 32
      },
      "CommentCount" : 2
    },
    "src/planner/kunzretimer/CMakeLists.txt" : {
      "ObjectId" : "5430016b095f44ad22e715e3fb960a915c209735",
      "LastModified" : "2019-02-22T03:34:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/planner/ompl/CMakeLists.txt" : {
      "ObjectId" : "dff6e6f0789ba87b94853985696485b0a0187435",
      "LastModified" : "2019-02-22T03:34:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#==============================================================================\n\n# Libraries\n\n#\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/planner/parabolic/CMakeLists.txt" : {
      "ObjectId" : "70190fc0143133ecbe0d8f42252771305a3ff0b6",
      "LastModified" : "2019-02-22T03:34:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/planner/vectorfield/CMakeLists.txt" : {
      "ObjectId" : "74ce82c4d6f6e417da18067c196303b2bc2f14ee",
      "LastModified" : "2019-02-22T03:34:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/python/CMakeLists.txt" : {
      "ObjectId" : "5accd68d43be0c79487735dfa017a39f352b31c4",
      "LastModified" : "2019-02-22T03:34:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/robot/CMakeLists.txt" : {
      "ObjectId" : "9c6c6ad8fd0f0623d2c1eebc05811eaae747b767",
      "LastModified" : "2019-02-22T03:34:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#==============================================================================\n\n# Dependencies\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#==============================================================================\n\n# Libraries\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/rviz/CMakeLists.txt" : {
      "ObjectId" : "36caedda95b15c1cd4eeee6c352a1b52e8a0d087",
      "LastModified" : "2019-02-22T03:34:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#==============================================================================\n\n# Dependencies\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Note: Intentionally use \"Module\" mode because the config file imports \"gtest\",\n\n# \"tests\", and \"run_tests\" that conflict with the targets defined by Aikido.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#==============================================================================\n\n# Libraries\n\n#\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Intentionally omit tests for or_rviz. It's not clear how to test a viewer.\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/statespace/CMakeLists.txt" : {
      "ObjectId" : "7c484f5c4d9e56741c16f88b0aea507be5031cb1",
      "LastModified" : "2019-02-22T03:34:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/trajectory/CMakeLists.txt" : {
      "ObjectId" : "e72b38f1fcd43d58eeb66ddf7cdc29d0c8c04388",
      "LastModified" : "2019-02-22T03:34:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "478057bd2ac197996d01ce2f0482ee4c2ac46452",
      "LastModified" : "2019-02-22T03:34:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# GTest setup\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define aikido_add_test for registering Aikido tests.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add helper scripts to the include path.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tests/common/CMakeLists.txt" : {
      "ObjectId" : "f8a0aef552ac571bd7b442d02e135299b0bd27e3",
      "LastModified" : "2019-02-22T03:34:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/constraint/CMakeLists.txt" : {
      "ObjectId" : "9767971456773f03050d57614797a3da22e2bbcb",
      "LastModified" : "2019-02-22T03:34:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/control/CMakeLists.txt" : {
      "ObjectId" : "eeba92035ca33a50e2e606c8d15a6f05bd707658",
      "LastModified" : "2019-02-22T03:34:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/control/ros/CMakeLists.txt" : {
      "ObjectId" : "52640691f732da2e39cf1ad24c09dd2b84de6b63",
      "LastModified" : "2019-02-22T03:34:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/distance/CMakeLists.txt" : {
      "ObjectId" : "f5d346318ba7a6b198e0fc3ca022665434799097",
      "LastModified" : "2019-02-22T03:34:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/gtest/CMakeLists.txt" : {
      "ObjectId" : "9ee79408c277c4a95dbd3cc4ab6f7ecc37b9aadb",
      "LastModified" : "2019-02-22T03:34:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# CMake build script for Google Test.\n\n#\n\n# To run the tests for Google Test itself on Linux, use 'make test' or\n\n# ctest.  You can select which tests to run using 'ctest -R regex'.\n\n# For more options, run 'ctest --help'.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# When other libraries are using a shared version of runtime libraries,\n\n# Google Test also has to use one.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Defines pre_project_set_up_hermetic_build() and set_up_hermetic_build().\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "########################################################################\n\n#\n\n# Project-wide settings\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Name of the project.\n\n#\n\n# CMake files in this project can refer to the root source directory\n\n# as ${gtest_SOURCE_DIR} and to the root binary directory as\n\n# ${gtest_BINARY_DIR}.\n\n# Language \"C\" is required for find_package(Threads).\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Visibility\n",
        "Line" : 51,
        "CharPositionInLine" : 20
      },
      "6" : {
        "Text" : "# These commands only run if this is the main project\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# BUILD_SHARED_LIBS is a standard CMake variable, but we declare it here to\n\n# make it prominent in the GUI.\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Define helper functions and macros used by Google Test.\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Defined in internal_utils.cmake.\n",
        "Line" : 86,
        "CharPositionInLine" : 30
      },
      "10" : {
        "Text" : "# Create the CMake package file descriptors.\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Where Google Test's .h files can be found.\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Summary of tuple support for Microsoft Visual Studio:\n\n# Compiler    version(MS)  version(cmake)  Support\n\n# ----------  -----------  --------------  -----------------------------\n\n# <= VS 2010  <= 10        <= 1600         Use Google Tests's own tuple.\n\n# VS 2012     11           1700            std::tr1::tuple + _VARIADIC_MAX=10\n\n# VS 2013     12           1800            std::tr1::tuple\n\n# VS 2015     14           1900            std::tuple\n\n# VS 2017     15           >= 1910         std::tuple\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "########################################################################\n\n#\n\n# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Google Test libraries.  We build them using more strict warnings than what\n\n# are used for other targets, to ensure that gtest can be compiled by a user\n\n# aggressive about warnings.\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# If the CMake version supports it, attach header directory information\n\n# to the targets for when we are part of a parent build (ie being pulled\n\n# in via add_subdirectory() rather than being a standalone build).\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "########################################################################\n\n#\n\n# Install rules\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "########################################################################\n\n#\n\n# Samples on how to link user tests with gtest or gtest_main.\n\n#\n\n# They are not built by default.  To build them, set the\n\n# gtest_build_samples option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_samples=ON flag when running cmake.\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "########################################################################\n\n#\n\n# Google Test's own tests.\n\n#\n\n# You can skip this section if you aren't interested in testing\n\n# Google Test itself.\n\n#\n\n# The tests are not built by default.  To build them, set the\n\n# gtest_build_tests option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_tests=ON flag when running cmake.\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# This must be set in the root directory for the tests to be run by\n\n# 'make test' or ctest.\n",
        "Line" : 186,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "############################################################\n\n# C++ tests built with standard compiler flags.\n",
        "Line" : 190,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "############################################################\n\n# C++ tests built with non-standard compiler flags.\n",
        "Line" : 221,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 224,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# 1600 is Visual Studio 2010.\n",
        "Line" : 253,
        "CharPositionInLine" : 43
      },
      "24" : {
        "Text" : "# Visual Studio 2010, 2012, and 2013 define symbols in std::tr1 that\n\n# conflict with our own definitions. Therefore using our own tuple does not\n\n# work on those compilers.\n",
        "Line" : 254,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "############################################################\n\n# Python tests.\n",
        "Line" : 268,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Visual Studio .NET 2003 does not support STL with exceptions disabled.\n",
        "Line" : 274,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# 1310 is Visual Studio .NET 2003\n",
        "Line" : 275,
        "CharPositionInLine" : 46
      },
      "28" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 311,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 29
    },
    "tests/gtest/Makefile.am" : {
      "ObjectId" : "b44c8416ba080c2f016f166b18b42c0f73ece7be",
      "LastModified" : "2019-02-22T03:34:17Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Automake file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Nonstandard package files for distribution\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# gtest source files that we don't compile directly.  They are\n\n# #included by gtest-all.cc.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Sample files that we don't compile.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# C++ test files that we don't compile directly.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Python tests that we don't run.\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# CMake script\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# MSVC project files\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# xcode project files\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# xcode sample files\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# C++Builder project files\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Distribute and install M4 macro\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# We define the global AM_CPPFLAGS as everything we compile includes from these\n\n# directories.\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Modifies compiler and linker flags for pthreads compatibility.\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Build rules for libraries.\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Build rules for samples and tests. Automake's naming for some of\n\n# these variables isn't terribly obvious, so this is a brief\n\n# reference:\n\n#\n\n# TESTS -- Programs run automatically by \"make check\"\n\n# check_PROGRAMS -- Programs built by \"make check\" but not necessarily run\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# A simple sample on using gtest.\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Also verify that libgtest works by itself.\n",
        "Line" : 279,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# This tests most constructs of gtest and verifies that libgtest_main\n\n# and libgtest work.\n",
        "Line" : 285,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Tests that fused gtest files compile and work.\n",
        "Line" : 293,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Build rules for putting fused Google Test files into the distribution\n\n# package. The user can also create those files by manually running\n\n# scripts/fuse_gtest_files.py.\n",
        "Line" : 306,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Death tests may produce core dumps in the build directory. In case\n\n# this happens, clean them to keep distcleancheck happy.\n",
        "Line" : 325,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Disables 'make install' as installing a compiled version of Google\n\n# Test can lead to undefined behavior due to violation of the\n\n# One-Definition Rule.\n",
        "Line" : 329,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "tests/gtest/cmake/internal_utils.cmake" : {
      "ObjectId" : "8c1f9ba99cf50574f669dd7deba324dce40595f3",
      "LastModified" : "2019-02-22T03:34:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Defines functions and macros useful for building Google Test and\n\n# Google Mock.\n\n#\n\n# Note:\n\n#\n\n# - This file will be run twice when building Google Mock (once via\n\n#   Google Test's CMakeLists.txt, and once via Google Mock's).\n\n#   Therefore it shouldn't have any side effects other than defining\n\n#   the functions and macros.\n\n#\n\n# - The functions/macros defined in this file may depend on Google\n\n#   Test and Google Mock's option() definitions, and thus must be\n\n#   called *after* the options have been defined.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Tweaks CMake's default compiler/linker settings to suit Google Test's needs.\n\n#\n\n# This must be a macro(), as inside a function string() can only\n\n# update variables in the function scope.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For MSVC, CMake sets certain flags to defaults we want to override.\n\n# This replacement code is taken from sample in the CMake Wiki at\n\n# https://gitlab.kitware.com/cmake/community/wikis/FAQ#dynamic-replace.\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# When Google Test is built as a shared library, it should also use\n\n# shared runtime libraries.  Otherwise, it may end up with multiple\n\n# copies of runtime library data in different modules, resulting in\n\n# hard-to-find crashes. When it is built as a static library, it is\n\n# preferable to use CRT as static libraries, as we don't have to rely\n\n# on CRT DLLs being available. CMake always defaults to using shared\n\n# CRT libraries, so we override that default here.\n",
        "Line" : 28,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# We prefer more strict warning checking for building Google Test.\n\n# Replaces /W3 with /W4 in defaults.\n",
        "Line" : 38,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Prevent D9025 warning for targets that have exception handling\n\n# turned off (/EHs-c- flag). Where required, exceptions are explicitly\n\n# re-enabled using the cxx_exception_flags variable.\n",
        "Line" : 42,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# Defines the compiler/linker flags used to build Google Test and\n\n# Google Mock.  You can tweak these definitions to suit your need.  A\n\n# variable's value is empty before it's explicitly assigned to.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Note: pthreads on MinGW is not supported, even if available\n\n# instead, we use windows threading primitives\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Defines CMAKE_USE_PTHREADS_INIT and CMAKE_THREAD_LIBS_INIT.\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Newlines inside flags variables break CMake's NMake generator.\n\n# TODO(vladl@google.com): Add -RTCs and -RTCu to debug builds.\n",
        "Line" : 68,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# 1400 is Visual Studio 2005\n",
        "Line" : 71,
        "CharPositionInLine" : 33
      },
      "11" : {
        "Text" : "# Suppress spurious warnings MSVC 7.1 sometimes issues.\n\n# Forcing value to bool.\n",
        "Line" : 72,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# Copy constructor and assignment operator could not be generated.\n",
        "Line" : 75,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# Compatibility warnings not applicable to Google Test.\n\n# Resolved overload was found by argument-dependent lookup.\n",
        "Line" : 77,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# 1500 is Visual Studio 2008\n",
        "Line" : 81,
        "CharPositionInLine" : 33
      },
      "15" : {
        "Text" : "# Conditional expression is constant.\n\n# When compiling with /W4, we get several instances of C4127\n\n# (Conditional expression is constant). In our code, we disable that\n\n# warning on a case-by-case basis. However, on Visual Studio 2005,\n\n# the warning fires on std::list. Therefore on that compiler and earlier,\n\n# we disable the warning project-wide.\n",
        "Line" : 82,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# 1700 is Visual Studio 2012.\n",
        "Line" : 90,
        "CharPositionInLine" : 39
      },
      "17" : {
        "Text" : "# Suppress \"unreachable code\" warning on VS 2012 and later.\n\n# http://stackoverflow.com/questions/3232669 explains the issue.\n",
        "Line" : 91,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "# Until version 4.3.2, GCC doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 108,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Sun Pro doesn't provide macros to indicate whether exceptions and\n\n# RTTI are enabled, so we define GTEST_HAS_* explicitly.\n",
        "Line" : 116,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# CMake 2.8 changes Visual Age's compiler ID to \"XL\".\n",
        "Line" : 122,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Until version 9.0, Visual Age doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 125,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# RTTI can not be disabled in HP aCC compiler.\n",
        "Line" : 133,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# The pthreads library is available and allowed?\n",
        "Line" : 137,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# For building gtest's own tests and samples.\n",
        "Line" : 145,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# For building the gtest libraries.\n",
        "Line" : 153,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# type can be either STATIC or SHARED to denote a static or shared library.\n\n# ARGN refers to additional arguments after 'cxx_flags'.\n",
        "Line" : 160,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# Generate debug library name with a postfix.\n",
        "Line" : 166,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "########################################################################\n\n#\n\n# Helper functions for creating build targets.\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# cxx_executable_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ executable that depends on the given libraries and\n\n# is built from the given source files with the given compiler flags.\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# 1700 is Visual Studio 2012.\n",
        "Line" : 207,
        "CharPositionInLine" : 48
      },
      "32" : {
        "Text" : "# BigObj required for tests.\n",
        "Line" : 208,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "# To support mixing linking in static and dynamic libraries, link each\n\n# library in with an extra call to target_link_libraries.\n",
        "Line" : 221,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# cxx_executable(name dir lib srcs...)\n\n#\n\n# creates a named target that depends on the given libs and is built\n\n# from the given source files.  dir/name.cc is implicitly included in\n\n# the source file list.\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Sets PYTHONINTERP_FOUND and PYTHON_EXECUTABLE.\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# cxx_test_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ test that depends on the given libs and is built\n\n# from the given source files with the given compiler flags.\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# cxx_test(name libs srcs...)\n\n#\n\n# creates a named test target that depends on the given libs and is\n\n# built from the given source files.  Unlike cxx_test_with_flags,\n\n# test/name.cc is already implicitly included in the source file list.\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# py_test(name)\n\n#\n\n# creates a Python test with the given name whose main module is in\n\n# test/name.py.  It does nothing if Python is not installed.\n",
        "Line" : 260,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Multi-configuration build generators as for Visual Studio save\n\n# output in a subdirectory of CMAKE_CURRENT_BINARY_DIR (Debug,\n\n# Release etc.), so we have to provide it here.\n",
        "Line" : 268,
        "CharPositionInLine" : 1
      },
      "40" : {
        "Text" : "# Single-configuration build generators like Makefile generators\n\n# don't have subdirs below CMAKE_CURRENT_BINARY_DIR.\n",
        "Line" : 276,
        "CharPositionInLine" : 1
      },
      "41" : {
        "Text" : "# ${CMAKE_CURRENT_BINARY_DIR} is known at configuration time, so we can\n\n# directly bind it from cmake. ${CTEST_CONFIGURATION_TYPE} is known\n\n# only at ctest runtime (by calling ctest -c <Configuration>), so\n\n# we have to escape $ to delay variable substitution here.\n",
        "Line" : 284,
        "CharPositionInLine" : 6
      },
      "42" : {
        "Text" : "# install_project(targets...)\n\n#\n\n# Installs the specified targets and configures the associated pkgconfig files.\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Install the project targets.\n",
        "Line" : 303,
        "CharPositionInLine" : 4
      },
      "44" : {
        "Text" : "# Configure and install pkgconfig files.\n",
        "Line" : 309,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 45
    },
    "tests/gtest/make/Makefile" : {
      "ObjectId" : "9ac74493ba55246597e90b898fae847ae358eab5",
      "LastModified" : "2019-02-22T03:34:17Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# A sample Makefile for building Google Test and using it in user\n\n# tests.  Please tweak it to suit your environment and project.  You\n\n# may want to move it to your project's root directory.\n\n#\n\n# SYNOPSIS:\n\n#\n\n#   make [all]  - makes everything.\n\n#   make TARGET - makes the given target.\n\n#   make clean  - removes all files generated by make.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Please tweak the following variable definitions as needed by your\n\n# project, except GTEST_HEADERS, which you can use in your own targets\n\n# but shouldn't modify.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Points to the root of Google Test, relative to where this file is.\n\n# Remember to tweak this if you move this file.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Where to find user code.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Flags passed to the preprocessor.\n\n# Set Google Test's header directory as a system directory, such that\n\n# the compiler doesn't generate warnings in Google Test headers.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Flags passed to the C++ compiler.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# All tests produced by this Makefile.  Remember to add new tests you\n\n# created to the list.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# All Google Test headers.  Usually you shouldn't change this\n\n# definition.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# House-keeping build targets.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Builds gtest.a and gtest_main.a.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Usually you shouldn't tweak such internal variables, indicated by a\n\n# trailing _.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# For simplicity and to avoid depending on Google Test's\n\n# implementation details, the dependencies specified below are\n\n# conservative and not optimized.  This is fine as Google Test\n\n# compiles fast and for ordinary users its source rarely changes.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Builds a sample test.  A test should link with either gtest.a or\n\n# gtest_main.a, depending on whether it defines its own main()\n\n# function.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "tests/gtest/scripts/test/Makefile" : {
      "ObjectId" : "cdff584637b7a6e9df1fa43ce8f588c43815e561",
      "LastModified" : "2019-02-22T03:34:17Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# A Makefile for fusing Google Test and building a sample test against it.\n\n#\n\n# SYNOPSIS:\n\n#\n\n#   make [all]  - makes everything.\n\n#   make TARGET - makes the given target.\n\n#   make check  - makes everything and runs the built sample test.\n\n#   make clean  - removes all files generated by make.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Points to the root of fused Google Test, relative to where this file is.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Paths to the fused gtest files.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Where to find the sample test.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Where to find gtest_main.cc.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Flags passed to the preprocessor.\n\n# We have no idea here whether pthreads is available in the system, so\n\n# disable its use.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Flags passed to the C++ compiler.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "tests/io/CMakeLists.txt" : {
      "ObjectId" : "bb443e8594b3230616f3e9f51ea7e647d71dc73c",
      "LastModified" : "2019-02-22T03:34:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#==============================================================================\n\n# CatkinResourceRetriever\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#==============================================================================\n\n# Miscellaneous\n\n#\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tests/planner/CMakeLists.txt" : {
      "ObjectId" : "9e5e213871045dd1fc2487e18f79e1b8f7d7eff8",
      "LastModified" : "2019-02-22T03:34:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/planner/kunzretimer/CMakeLists.txt" : {
      "ObjectId" : "a9881ab00f17aaa87b46b70f0f9b2974862c9741",
      "LastModified" : "2019-02-22T03:34:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/planner/ompl/CMakeLists.txt" : {
      "ObjectId" : "be3964fcf4a1a43926e6d2b38985288b19f8294a",
      "LastModified" : "2019-02-22T03:34:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/planner/parabolic/CMakeLists.txt" : {
      "ObjectId" : "c1d87568c1c5395d095fa6df067bd276c12ac821",
      "LastModified" : "2019-02-22T03:34:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/planner/vectorfield/CMakeLists.txt" : {
      "ObjectId" : "a32074b2e38b168b7dda8e51de793a39ef639fba",
      "LastModified" : "2019-02-22T03:34:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/statespace/CMakeLists.txt" : {
      "ObjectId" : "5e1de07b9323ca9017efa171a0df00dc97e5308d",
      "LastModified" : "2019-02-22T03:34:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/trajectory/CMakeLists.txt" : {
      "ObjectId" : "f03bb20c6fb860796a9324584ab4a40b7999dd3b",
      "LastModified" : "2019-02-22T03:34:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 50,
    "MAKEFILE" : 2,
    "AUTOMAKE" : 1
  },
  "ElapsedTime" : 1768
}