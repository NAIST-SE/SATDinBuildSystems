{
  "Repository" : "228424",
  "Revision" : "HEAD",
  "ObjectId" : "f1ab6e9be20b51dc353af10eb3d0d09270101ca6",
  "CommitTime" : "2019-04-11T23:08:44Z",
  "Files" : {
    "contrib/ffmpeg/CMakeLists.txt" : {
      "ObjectId" : "f6ad6d571a3b61a5739d12467227a0e27b98b5db",
      "LastModified" : "2013-04-20T23:36:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# author: chocolateboy\n\n# original: https://github.com/pyke369/sffmpeg\n\n# license: GPL\n\n#\n\n# updates:\n\n#\n\n#     if this build's options or dependencies are changed, the version number should be\n\n#     incremented in the following places prior to each PMS release:\n\n#\n\n#         * PMS_FFMPEG_VERSION in vendor/ffmpeg-banner.patch\n\n#         * the corresponding version at the *bottom* of README.md\n\n#\n\n#     Note:\n\n#\n\n#         * the version should be incremented no more than *once* per PMS release.\n\n#         * due to bugs in CMake, the build/ffmpeg-prefix directory may need to be removed each\n\n#           time the version is incremented in order to ensure the patch is reapplied\n\n#\n\n# links:\n\n#\n\n#     build scripts:\n\n#\n\n#         https://github.com/rdp/ffmpeg-windows-build-helpers/blob/master/cross_compile_ffmpeg.sh\n\n#         http://www.slackware.com/~alien/slackbuilds/ffmpeg/build/ffmpeg.SlackBuild\n\n#\n\n#     notes:\n\n#\n\n#         http://betterlogic.com/roger/2011/09/ffmpeg-compileconfigure-windows/\n\n#         http://betterlogic.com/roger/2012/09/libflite-cross-compile-woe/\n\n#         http://ffmpeg.org/trac/ffmpeg/wiki/MacOSXCompilationGuide\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# XXX can be built for 32-bit or 64-bit by appending ABI=32 or ABI=64 to the configure command\n",
        "Line" : 97,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# XXX this silently fails to build libhogweed.a if gmp is not available/visible\n\n# https://lists.gnu.org/archive/html/help-gnutls/2012-01/msg00019.html\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# XXX dumb configure fails to check the prefix dir for lib and include, so specify them\n",
        "Line" : 108,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# this is the latest version that has an extension that CMake can unpack\n\n# (the 2.12.x series is still being maintained/updated: http://www.gnutls.org/security.html)\n\n# http://public.kitware.com/Bug/view.php?id=13515\n",
        "Line" : 116,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# XXX linking against nettle/hogweed breaks unless -lgmp is added\n\n# XXX and it can't find the lib dir from --prefix, so that needs to be added as well\n",
        "Line" : 120,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# stop the gsm Makefile chmodding its install files to read-only (we want to be able to rebuild/overwrite without interaction)\n",
        "Line" : 129,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# 2011-03-26\n",
        "Line" : 161,
        "CharPositionInLine" : 20
      },
      "8" : {
        "Text" : "# provides OpenCORE AMR-NB (adaptive multi-rate narrowband) and OpenCORE AMR-WB (wideband)\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Mac OSX build needs to force the correct architecture.\n",
        "Line" : 191,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# 2012-07-24\n",
        "Line" : 226,
        "CharPositionInLine" : 20
      },
      "11" : {
        "Text" : "# TODO replace OpenSSL with GnuTLS:\n\n# BUILD_COMMAND make PREFIX=${CMAKE_BINARY_DIR} CRYPTO=GNUTLS SHARED=no XCFLAGS=-I${CMAKE_BINARY_DIR}/include XLDFLAGS=-L${CMAKE_BINARY_DIR}/lib XLIBS=-ldl\n",
        "Line" : 229,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# http://www.slackware.com/~alien/slackbuilds/ffmpeg/build/schroedinger_notests.patch\n",
        "Line" : 240,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# http://www.slackware.com/~alien/slackbuilds/ffmpeg/build/ffmpeg.SlackBuild\n\n# \"Because of the patch, run autoreconf\"\n",
        "Line" : 242,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# http://wiki.multimedia.cx/index.php?title=Ut_Video\n",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# 2012-11-09\n",
        "Line" : 299,
        "CharPositionInLine" : 22
      },
      "16" : {
        "Text" : "# Mac OS X build needs to force the correct architecture.\n\n# xavs is using old versions of config.guess and config.sub that do not recognize\n\n# the same x86_64 architecture on Mac OS X that all other projects use. Forcing the\n\n# architecture causes asm errors, so we disable asm as well.\n",
        "Line" : 305,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# 2011-08-21\n",
        "Line" : 317,
        "CharPositionInLine" : 22
      },
      "18" : {
        "Text" : "# Avoid \"Server certificate verification failed: issuer is not trusted\" error\n",
        "Line" : 318,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# XXX xvidcore's configure script doesn't provide a way (e.g. --disable-shared)\n\n# to prevent it bulding a shared library\n",
        "Line" : 335,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "########################################################################\n\n#\n\n# --extra-cflags=-I/path/to/include/openjpeg-1.5:\n\n#\n\n# ffmpeg's configure script only uses pkg-config for \"badly designed\n\n# packages\" whose details cannot be obtained in any other way:\n\n# http://lists.mplayerhq.hu/pipermail/ffmpeg-devel/2011-March/108536.html\n\n#\n\n# As a result we have to reinvent pkg-config i.e. provide CFLAGS and/or\n\n# LDFLAGS for the following well-behaved libraries:\n\n#\n\n#     libopenjpeg\n\n#     libgnutls\n",
        "Line" : 369,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "########################################################################\n\n#\n\n# disabled options:\n\n#\n\n#     XXX why does the Zeranoe build do this (while stating it supports pthreads)?\n\n#     --disable-pthreads\n",
        "Line" : 383,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Windows only\n",
        "Line" : 393,
        "CharPositionInLine" : 23
      },
      "23" : {
        "Text" : "# see above\n",
        "Line" : 425,
        "CharPositionInLine" : 62
      },
      "24" : {
        "Text" : "# nettle breaks gnutls which breaks ffmpeg unless we add this (again)\n",
        "Line" : 429,
        "CharPositionInLine" : 23
      },
      "25" : {
        "Text" : "# Don't use this on OS X as it breaks compilation\n",
        "Line" : 435,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# http://lists.freedesktop.org/archives/fontconfig/2012-September/004318.html\n\n# http://lists.freedesktop.org/archives/fontconfig/2012-September/004348.html\n\n# http://ffmpeg-users.933282.n4.nabble.com/pkg-config-static-td4653220.html\n",
        "Line" : 444,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 27
    },
    "contrib/ffmpeg/Makefile" : {
      "ObjectId" : "7032e06d653e4bfff8e4ff180d5ad0c390f43b97",
      "LastModified" : "2013-04-20T23:36:36Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "docker/build.xml" : {
      "ObjectId" : "2494e8a3a9422b22633f4c1acbbfbb560e86f676",
      "LastModified" : "2018-10-14T01:11:00Z",
      "FileType" : "ANT",
      "CommentCount" : 0
    },
    "pom.xml" : {
      "ObjectId" : "d376ef7fcd835ecef1286869356bc0617bd94e5d",
      "LastModified" : "2019-04-06T07:21:49Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "\n\t\tDMS consists of two major parts: DMS itself and the third party software needed to\n\t\trun it. While DMS itself is 100% pure Java, some of the third party software is\n\t\tnot. This means building a platform specific distribution boils down to first\n\t\tbuilding the dms.jar and then assembling all application resources.\n\n\t\tNote that Maven 3 does not automatically install all dependencies, unlike Maven 2.\n\t\tTo install external dependencies to your local repository, run the following commands:\n\n\t\tmvn external:install\n\n\t\tTo build DMS, do:\n\n\t\t\tmvn clean package\n\n\t\tAfter building, the \"target\" directory will contain the binary.\n\t\tTo generate a full source code report, do:\n\n\t\t\tmvn site\n\n\t\tAfter generating, the \"target/site\" directory will contain the reports.\n\t",
        "Line" : 26,
        "CharPositionInLine" : 5
      },
      "1" : {
        "Text" : " NSIS needs a version without \"-SNAPSHOT\" or \"-b1\" ",
        "Line" : 65,
        "CharPositionInLine" : 61
      },
      "2" : {
        "Text" : " In versions after 1.6.0, they removed code that the MovieInfo plugin relies on ",
        "Line" : 69,
        "CharPositionInLine" : 90
      },
      "3" : {
        "Text" : " Version 2.7.0 is the last free version. The latest libraries are shipped only with the commercial JGoodies Smart Client ",
        "Line" : 72,
        "CharPositionInLine" : 131
      },
      "4" : {
        "Text" : " Skip 4.65-1.05-RC because it doesn't work, author is working on fixing it ",
        "Line" : 75,
        "CharPositionInLine" : 85
      },
      "5" : {
        "Text" : "\n\t\t\torg.slf4j:slf4j-api is shared with\n\t\t\t\t- su.litvak.chromecast:api-v2\n\t\t\t\t- fm.last:coverartarchive-api\n\t\t\t\t- com.github.oshi:oshi-core\n\n\t\t\tCheck the org.slf4j:slf4j-api version of the other libraries before upgrading\n\t\t",
        "Line" : 99,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "\n\t\t\tnet.java.dev.jna:jna-platform is shared with\n\t\t\t\t- com.github.oshi:oshi-core\n\n\t\t\tCheck the net.java.dev.jna:jna-platform version of the other library before upgrading\n\t\t",
        "Line" : 108,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "\n\t\t\t use the Windows makensis.exe for Windows builds unless\n\t\t\t the system makensis is explicitly selected via the\n\t\t\t system-makensis profile\n\t\t ",
        "Line" : 115,
        "CharPositionInLine" : 7
      },
      "8" : {
        "Text" : " TODO this can be removed when MEncoder is removed ",
        "Line" : 140,
        "CharPositionInLine" : 61
      },
      "9" : {
        "Text" : "\n\t\t\t\tcommons-logging:commons-logging is shared with\n\t\t\t\t\t- com.github.junrar:junrar\n\t\t\t\t\t- fm.last:coverartarchive-api\n\n\t\t\t\tCheck the commons-logging:commons-logging version of the other libraries before upgrading\n\t\t\t",
        "Line" : 160,
        "CharPositionInLine" : 7
      },
      "10" : {
        "Text" : " TODO this should be changed to org.apache.httpcomponents which is the follower. ",
        "Line" : 171,
        "CharPositionInLine" : 136
      },
      "11" : {
        "Text" : "\n\t\t\t\t\t\tcommons-logging:commons-logging is shared with\n\t\t\t\t\t\t\t- commons-configuration:commons-configuration\n\t\t\t\t\t\t\t- com.github.junrar:junrar\n\t\t\t\t\t\t\t- fm.last:coverartarchive-api\n\n\t\t\t\t\t\tThe other libraries use a much newer version since commons-httpclient is ancient and abandoned\n\t\t\t\t\t",
        "Line" : 182,
        "CharPositionInLine" : 9
      },
      "12" : {
        "Text" : " fm.last:coverartarchive-api uses a much newer version since commons-httpclient is ancient and abandoned ",
        "Line" : 187,
        "CharPositionInLine" : 118
      },
      "13" : {
        "Text" : "\n\t\t\t\tcommons-io:commons-io is shared with\n\t\t\t\t\t- fm.last:coverartarchive-api\n\n\t\t\t\tCheck the commons-io:commons-io version of the library before upgrading\n\t\t\t",
        "Line" : 201,
        "CharPositionInLine" : 7
      },
      "14" : {
        "Text" : " Versions above 1.3 require Java 8 ",
        "Line" : 212,
        "CharPositionInLine" : 68
      },
      "15" : {
        "Text" : " Use 'netty-all' for 4.0 or above ",
        "Line" : 236,
        "CharPositionInLine" : 76
      },
      "16" : {
        "Text" : " maven replacement for nsisant-1.2.jar ",
        "Line" : 241,
        "CharPositionInLine" : 49
      },
      "17" : {
        "Text" : "\n\t\t\t\torg.slf4j:slf4j-api is shared with\n\t\t\t\t\t- ch.qos.logback:logback-classic\n\t\t\t\t\t- su.litvak.chromecast\n\t\t\t\t\t- fm.last:coverartarchive-api\n\t\t\t\t\t- com.github.oshi:oshi-core\n\n\t\t\t\tCheck the org.slf4j:slf4j-api version of the other libraries before upgrading\n\t\t\t",
        "Line" : 258,
        "CharPositionInLine" : 7
      },
      "18" : {
        "Text" : "\n\t\t\tIf any ImageIO plugins are added or removed, corresponding changes\n\t\t \tmust be made in src/main/external-resources/META-INF/services\n\t\t ",
        "Line" : 276,
        "CharPositionInLine" : 7
      },
      "19" : {
        "Text" : "\n\t\t\t\tcommons-logging:commons-logging is shared with\n\t\t\t\t\t- commons-configuration:commons-configuration\n\t\t\t\t\t- fm.last:coverartarchive-api\n\n\t\t\t\tCheck the commons-logging:commons-logging version of the other libraries before upgrading\n\t\t\t",
        "Line" : 376,
        "CharPositionInLine" : 7
      },
      "20" : {
        "Text" : " XXX: not Mavenized: https://code.google.com/p/cuelib/ ",
        "Line" : 380,
        "CharPositionInLine" : 65
      },
      "21" : {
        "Text" : " Use 3.x for Java 8 ",
        "Line" : 416,
        "CharPositionInLine" : 31
      },
      "22" : {
        "Text" : "\n\t\t\t\torg.slf4j:slf4j-api is shared with\n\t\t\t\t\t- ch.qos.logback:logback-classic\n\t\t\t\t\t- fm.last:coverartarchive-api\n\t\t\t\t\t- com.github.oshi:oshi-core\n\n\t\t\t\tCheck the org.slf4j:slf4j-api version of the other libraries before upgrading\n\t\t\t",
        "Line" : 470,
        "CharPositionInLine" : 7
      },
      "23" : {
        "Text" : "\n\t\t\t\torg.slf4j:slf4j-api is shared with\n\t\t\t\t\t- ch.qos.logback:logback-classic\n\t\t\t\t\t- su.litvak.chromecast\n\t\t\t\t\t- com.github.oshi:oshi-core\n\n\t\t\t\tCheck the org.slf4j:slf4j-api version of the other libraries before upgrading\n\n\t\t\t\tcommons-logging:commons-logging is shared with\n\t\t\t\t\t- commons-configuration:commons-configuration\n\t\t\t\t\t- com.github.junrar:junrar\n\n\t\t\t\tCheck the commons-logging:commons-logging version of the other libraries before upgrading\n\n\t\t\t\tcommons-io:commons-io is shared with\n\t\t\t\t\t- net.pms:dms\n\n\t\t\t\tCheck the commons-io:commons-io version before upgrading\n\t\t\t",
        "Line" : 504,
        "CharPositionInLine" : 7
      },
      "24" : {
        "Text" : " This should never have been a dependency in the first place ",
        "Line" : 507,
        "CharPositionInLine" : 73
      },
      "25" : {
        "Text" : "\n\t\t\t\torg.slf4j:slf4j-api is shared with\n\t\t\t\t\t- ch.qos.logback:logback-classic\n\t\t\t\t\t- su.litvak.chromecast\n\t\t\t\t\t- fm.last:coverartarchive-api\n\n\t\t\t\tCheck the org.slf4j:slf4j-api version of the other libraries before upgrading\n\n\t\t\t\tnet.java.dev.jna:jna-platform is shared with\n\t\t\t\t\t- net.pms:dms\n\n\t\t\t\tCheck the net.java.dev.jna:jna-platform version before upgrading\n\t\t\t",
        "Line" : 537,
        "CharPositionInLine" : 7
      },
      "26" : {
        "Text" : " FIX ERROR:  java.lang.NoSuchMethodError: org.codehaus.plexus.util.xml.pull.MXParser ",
        "Line" : 540,
        "CharPositionInLine" : 95
      },
      "27" : {
        "Text" : " FIX ERROR: Exception in thread \"main\" java.lang.NoSuchMethodError: com.google.common.base.Preconditions.checkArgument ",
        "Line" : 552,
        "CharPositionInLine" : 129
      },
      "28" : {
        "Text" : " start of JAXB dependencies ",
        "Line" : 571,
        "CharPositionInLine" : 38
      },
      "29" : {
        "Text" : "\n\t\t\tThose dependencies could be removed as soon as we drop support for Java 8,\n\t\t\tand add \"-add-modules java.xml.bind\" as a app command line argument\n\t\t",
        "Line" : 575,
        "CharPositionInLine" : 6
      },
      "30" : {
        "Text" : " end of JAXB dependencies ",
        "Line" : 601,
        "CharPositionInLine" : 36
      },
      "31" : {
        "Text" : " specify how files in src/main/resources are bundled in the target jar ",
        "Line" : 606,
        "CharPositionInLine" : 81
      },
      "32" : {
        "Text" : " 1) package unfiltered resources ",
        "Line" : 608,
        "CharPositionInLine" : 44
      },
      "33" : {
        "Text" : "\n\t\t\t\tThis needs to be defined explicitly if a <resources>...</resources>\n\t\t\t\tsection is used\n\t\t\t",
        "Line" : 613,
        "CharPositionInLine" : 7
      },
      "34" : {
        "Text" : "\n\t\t\t\t\tBy default, Maven packages resources in the top-level of the jar e.g.\n\n\t\t\t\t\t\t/example.res\n\n\t\t\t\t\tThe old DMS ant build packaged them in a \"resources\" directory\n\t\t\t\t\te.g:\n\n\t\t\t\t\t\t/resources/example.res\n\n\t\t\t\t\tCurrently, we preserve the old destination. If this is ever changed\n\t\t\t\t\tto the Maven default, a handful of files will need to be changed to\n\t\t\t\t\treference \"/example.res\" rather than \"/resources/example.res\"\n\t\t\t\t",
        "Line" : 629,
        "CharPositionInLine" : 8
      },
      "35" : {
        "Text" : " Avoid inadvertently filtering binaries ",
        "Line" : 635,
        "CharPositionInLine" : 52
      },
      "36" : {
        "Text" : " 2) package filtered resources ",
        "Line" : 639,
        "CharPositionInLine" : 42
      },
      "37" : {
        "Text" : " Filter to replace Maven properties ",
        "Line" : 647,
        "CharPositionInLine" : 48
      },
      "38" : {
        "Text" : " 3) package filtered NSIS header files ",
        "Line" : 651,
        "CharPositionInLine" : 50
      },
      "39" : {
        "Text" : " Filter to replace Maven properties ",
        "Line" : 658,
        "CharPositionInLine" : 48
      },
      "40" : {
        "Text" : " Enable the use of Maven properties ",
        "Line" : 671,
        "CharPositionInLine" : 48
      },
      "41" : {
        "Text" : "*.srt files to test charset detection and *json to test filename prettification",
        "Line" : 674,
        "CharPositionInLine" : 90
      },
      "42" : {
        "Text" : "\n\t\t\t\t\t\t\t1) Force language because JUnit tests depend on English language strings\n\n\t\t\t\t\t\t\t2) Use our JNA dependency rather than the system's - fixes\n\t\t\t\t\t\t\tthe following error on Linux (Ubuntu 12.04 with system\n\t\t\t\t\t\t\tjna-3.2.7.jar via libjna-java):\n\n\t\t\t\t\t\t\tThere is an incompatible JNA native library installed on this system.\n\t\t\t\t\t\t",
        "Line" : 699,
        "CharPositionInLine" : 10
      },
      "43" : {
        "Text" : " only one argLine element is processed ",
        "Line" : 700,
        "CharPositionInLine" : 130
      },
      "44" : {
        "Text" : "\n\t\t\t\t\tThis plugin's configuration is used to run crowdin plugin from the command line,\n\t\t\t\t\tit has no influence on the Maven build itself.\n\t\t\t\t",
        "Line" : 708,
        "CharPositionInLine" : 8
      },
      "45" : {
        "Text" : "\n\t\t\t\t\tThis plugin's configuration is used to store Eclipse m2e settings only.\n\t\t\t\t\tIt has no influence on the Maven build itself.\n\t\t\t\t",
        "Line" : 728,
        "CharPositionInLine" : 8
      },
      "46" : {
        "Text" : " this is not required, but is recommended for plugin version checks ",
        "Line" : 835,
        "CharPositionInLine" : 84
      },
      "47" : {
        "Text" : "\n\t\t\t\tPlugin to add git commit information properties.\n\t\t\t\tThese are used in the project.properties files.\n\t\t\t\tSee: https://github.com/ktoso/maven-git-commit-id-plugin\n\t\t\t",
        "Line" : 852,
        "CharPositionInLine" : 7
      },
      "48" : {
        "Text" : "\n\t\t\t\tThis plugin will take care of installing the external dependencies that do not\n\t\t\t\texist in a public Maven repository. That is why we store some jar files in the\n\t\t\t\t\"src/main/external-resources/lib\" directory and have this plugin take care of\n\t\t\t\tthe installation at build time.\n\n\t\t\t\tChecksums can be calculated with \"openssl sha1 [filename]\".\n\t\t\t",
        "Line" : 918,
        "CharPositionInLine" : 7
      },
      "49" : {
        "Text" : " Set reports for the maven site plugin ",
        "Line" : 963,
        "CharPositionInLine" : 48
      },
      "50" : {
        "Text" : " DMS tests report ",
        "Line" : 983,
        "CharPositionInLine" : 29
      },
      "51" : {
        "Text" : " Javadoc ",
        "Line" : 993,
        "CharPositionInLine" : 20
      },
      "52" : {
        "Text" : "\n\t\t\t\t\t\tDoclet to generate class diagrams inside Javadoc.\n\t\t\t\t\t\tRequires the installation of Graphviz (http://www.graphviz.org/)\n\t\t\t\t\t",
        "Line" : 1020,
        "CharPositionInLine" : 9
      },
      "53" : {
        "Text" : " Class dependency report ",
        "Line" : 1031,
        "CharPositionInLine" : 36
      },
      "54" : {
        "Text" : " Findbugs report ",
        "Line" : 1038,
        "CharPositionInLine" : 28
      },
      "55" : {
        "Text" : " Checkstyle report ",
        "Line" : 1045,
        "CharPositionInLine" : 30
      },
      "56" : {
        "Text" : " Cobertura Test Coverage report ",
        "Line" : 1055,
        "CharPositionInLine" : 43
      },
      "57" : {
        "Text" : " if selected, use the system makensis on Linux, Mac OS X &c. ",
        "Line" : 1095,
        "CharPositionInLine" : 73
      },
      "58" : {
        "Text" : "\n\t\t\tWindows profile: takes care of building the final package for Microsoft Windows\n\t\t",
        "Line" : 1102,
        "CharPositionInLine" : 6
      },
      "59" : {
        "Text" : " Plugin to assemble a jar with dependencies ",
        "Line" : 1114,
        "CharPositionInLine" : 57
      },
      "60" : {
        "Text" : "\n\t\t\t\t\t\t\t\t\t\t\tthis is required to make the ImageIo image \"plugins\" provided by jai-imageio-core-standalone work.\n\t\t\t\t\t\t\t\t\t\t\twithout it, the following exception is thrown when DMS starts:\n\n\t\t\t\t\t\t\t\t\t\t\tConfiguration error: java.util.ServiceConfigurationError: javax.imageio.spi.ImageInputStreamSpi:\n\t\t\t\t\t\t\t\t\t\t\t\tProvider com.sun.media.imageioimpl.stream.ChannelImageInputStreamSpi could not be instantiated:\n\t\t\t\t\t\t\t\t\t\t\t\t\tjava.lang.IllegalArgumentException: vendorName == null!\n\n\t\t\t\t\t\t\t\t\t\t\tSee: https://thierrywasyl.wordpress.com/2009/07/24/jai-how-to-solve-vendorname-null-exception/\n\t\t\t\t\t\t\t\t\t\t",
        "Line" : 1134,
        "CharPositionInLine" : 14
      },
      "61" : {
        "Text" : "\n\t\t\t\t\t\tPlugin to move the dms-x.x.x-jar-with-dependencies.jar to dms.jar\n\t\t\t\t\t",
        "Line" : 1152,
        "CharPositionInLine" : 9
      },
      "62" : {
        "Text" : " Make sure the download folders exist ",
        "Line" : 1166,
        "CharPositionInLine" : 56
      },
      "63" : {
        "Text" : " Download all necessary Windows binaries. Keep the same structure because NSIS expects it that way. ",
        "Line" : 1178,
        "CharPositionInLine" : 118
      },
      "64" : {
        "Text" : " Copy the dms-x.x.x-jar-with-dependencies.jar to dms.jar ",
        "Line" : 1238,
        "CharPositionInLine" : 75
      },
      "65" : {
        "Text" : " MediaInfo library needs to be in the standard library path to be found ",
        "Line" : 1242,
        "CharPositionInLine" : 90
      },
      "66" : {
        "Text" : " Copy the wrapper to its destination ",
        "Line" : 1247,
        "CharPositionInLine" : 55
      },
      "67" : {
        "Text" : " Copy the custom jnidispatch.dll for Windows XP ",
        "Line" : 1253,
        "CharPositionInLine" : 66
      },
      "68" : {
        "Text" : "\n\t\t\t\t\t\tPlugin to build a Windows installer using the nullsoft scriptable install system (NSIS)\n\t\t\t\t\t\tThe \"generate-project\" goal generates a file \"target/project.nsh\", which contains the\n\t\t\t\t\t\tdefinitions for project variables like \"${PROJECT_BASEDIR}\" that can be used in the\n\t\t\t\t\t\t\"dms.nsi\" and \"setup.nsi\" files.\n\t\t\t\t\t",
        "Line" : 1267,
        "CharPositionInLine" : 9
      },
      "69" : {
        "Text" : "\n\t\t\tLinux profile: takes care of building the final package for Linux\n\t\t",
        "Line" : 1308,
        "CharPositionInLine" : 6
      },
      "70" : {
        "Text" : "\n\t\t\t\tthis setting does the right thing on Linux\n\t\t\t\tand is needed for the Hudson profile to work\n\t\t\t",
        "Line" : 1314,
        "CharPositionInLine" : 7
      },
      "71" : {
        "Text" : " Assemble a jar with dependencies ",
        "Line" : 1325,
        "CharPositionInLine" : 49
      },
      "72" : {
        "Text" : " see above for documentation ",
        "Line" : 1339,
        "CharPositionInLine" : 120
      },
      "73" : {
        "Text" : " Assemble the DMS distribution file. ",
        "Line" : 1345,
        "CharPositionInLine" : 52
      },
      "74" : {
        "Text" : " see above for documentation ",
        "Line" : 1359,
        "CharPositionInLine" : 120
      },
      "75" : {
        "Text" : "\n\t\t\t\t\t\tUse the antrun plugin to:\n\n\t\t\t\t\t\tDownload the tsMuxeR binary to ${project.binaries}/tsMuxeR\n\t\t\t\t\t\tCopy the dms-x.x.x-jar-with-dependencies.jar to dms.jar\n\t\t\t\t\t",
        "Line" : 1371,
        "CharPositionInLine" : 9
      },
      "76" : {
        "Text" : " Make sure the binaries folder exists ",
        "Line" : 1385,
        "CharPositionInLine" : 56
      },
      "77" : {
        "Text" : " Download binaries ",
        "Line" : 1389,
        "CharPositionInLine" : 37
      },
      "78" : {
        "Text" : "\n\t\t\tTesting profile: For running our automated tests - does not download binaries\n\t\t",
        "Line" : 1419,
        "CharPositionInLine" : 6
      },
      "79" : {
        "Text" : "\n\t\t\t\tthis setting does the right thing on Linux\n\t\t\t\tand is needed for the Hudson profile to work\n\t\t\t",
        "Line" : 1425,
        "CharPositionInLine" : 7
      },
      "80" : {
        "Text" : " Assemble a jar with dependencies ",
        "Line" : 1436,
        "CharPositionInLine" : 49
      },
      "81" : {
        "Text" : " see above for documentation ",
        "Line" : 1450,
        "CharPositionInLine" : 120
      },
      "82" : {
        "Text" : " Assemble the DMS distribution file. ",
        "Line" : 1456,
        "CharPositionInLine" : 52
      },
      "83" : {
        "Text" : " see above for documentation ",
        "Line" : 1470,
        "CharPositionInLine" : 120
      },
      "84" : {
        "Text" : "\n\t\t\t\t\t\tUse the antrun plugin to:\n\n\t\t\t\t\t\tCopy ums-x.x.x-jar-with-dependencies.jar to ums.jar\n\t\t\t\t\t",
        "Line" : 1481,
        "CharPositionInLine" : 9
      },
      "85" : {
        "Text" : "\n\t\t\tMac OSX Java 7 profile: takes care of building the final package for Mac OSX using Java 7.\n\t\t\tNote: This does not make the .dmg you will have to do that manually. Use the open source dmgCreator\n\t\t",
        "Line" : 1509,
        "CharPositionInLine" : 6
      },
      "86" : {
        "Text" : "\n\t\t\t\t\t\tPlugin to download binaries before assembly\n\t\t\t\t\t",
        "Line" : 1539,
        "CharPositionInLine" : 9
      },
      "87" : {
        "Text" : " Make sure the binaries folder exists ",
        "Line" : 1553,
        "CharPositionInLine" : 56
      },
      "88" : {
        "Text" : " Download binaries ",
        "Line" : 1557,
        "CharPositionInLine" : 37
      },
      "89" : {
        "Text" : " MediaInfo library needs to be in the standard library path to be found ",
        "Line" : 1568,
        "CharPositionInLine" : 90
      },
      "90" : {
        "Text" : " Make all downloaded binaries executable ",
        "Line" : 1572,
        "CharPositionInLine" : 59
      },
      "91" : {
        "Text" : " Make sure the target folder exists ",
        "Line" : 1585,
        "CharPositionInLine" : 54
      },
      "92" : {
        "Text" : " Create the shortcut to the Applications folder ",
        "Line" : 1588,
        "CharPositionInLine" : 66
      },
      "93" : {
        "Text" : "<runtime dir=\"/Library/Java/JavaVirtualMachines/jdk1.7.0_21.jdk/Contents/Home\"/>",
        "Line" : 1625,
        "CharPositionInLine" : 99
      },
      "94" : {
        "Text" : " Assemble a jar with dependencies ",
        "Line" : 1642,
        "CharPositionInLine" : 49
      },
      "95" : {
        "Text" : " see above for documentation ",
        "Line" : 1656,
        "CharPositionInLine" : 120
      },
      "96" : {
        "Text" : "\n\t\t\t\t\t\t\t\tAssemble the DMS files in the right place before\n\t\t\t\t\t\t\t\tmoving them to the app Bundle.\n\t\t\t\t\t\t\t",
        "Line" : 1664,
        "CharPositionInLine" : 11
      },
      "97" : {
        "Text" : " see above for documentation ",
        "Line" : 1678,
        "CharPositionInLine" : 120
      },
      "98" : {
        "Text" : "\n\t\t\tMac OSX Java 8 profile: takes care of building the final package for Mac OSX using Java 8.\n\t\t\tNote: This does not make the .dmg you will have to do that manually. Use the open source dmgCreator\n\t\t",
        "Line" : 1691,
        "CharPositionInLine" : 6
      },
      "99" : {
        "Text" : "\n\t\t\t\t\t\tPlugin to download binaries before assembly\n\t\t\t\t\t",
        "Line" : 1721,
        "CharPositionInLine" : 9
      },
      "100" : {
        "Text" : " Make sure the binaries folder exists ",
        "Line" : 1735,
        "CharPositionInLine" : 56
      },
      "101" : {
        "Text" : " Download binaries ",
        "Line" : 1739,
        "CharPositionInLine" : 37
      },
      "102" : {
        "Text" : " MediaInfo library needs to be in the standard library path to be found ",
        "Line" : 1750,
        "CharPositionInLine" : 90
      },
      "103" : {
        "Text" : " Make all downloaded binaries executable ",
        "Line" : 1754,
        "CharPositionInLine" : 59
      },
      "104" : {
        "Text" : " Make sure the target folder exists ",
        "Line" : 1767,
        "CharPositionInLine" : 54
      },
      "105" : {
        "Text" : " Create the shortcut to the Applications folder ",
        "Line" : 1770,
        "CharPositionInLine" : 66
      },
      "106" : {
        "Text" : " Assemble a jar with dependencies ",
        "Line" : 1823,
        "CharPositionInLine" : 49
      },
      "107" : {
        "Text" : " see above for documentation ",
        "Line" : 1837,
        "CharPositionInLine" : 120
      },
      "108" : {
        "Text" : "\n\t\t\t\t\t\t\t\tAssemble the DMS files in the right place before\n\t\t\t\t\t\t\t\tmoving them to the app Bundle.\n\t\t\t\t\t\t\t",
        "Line" : 1845,
        "CharPositionInLine" : 11
      },
      "109" : {
        "Text" : " see above for documentation ",
        "Line" : 1859,
        "CharPositionInLine" : 120
      },
      "110" : {
        "Text" : "\n\t\t\tHudson (windows-jar): minimal profile that builds dms.jar with the\n\t\t\tWindows JNA. The POSIX JNA causes snapshot builds to crash the JVM on\n\t\t\tWindows, whereas the Windows JNA only disables MediaInfo for Ubuntu\n\t\t\tusers, who can still use ffmpeg.\n\n\t\t\tAnother difference from the other profiles is that we don't download the\n\t\t\tbinaries or build the tarball.\n\t\t",
        "Line" : 1877,
        "CharPositionInLine" : 6
      },
      "111" : {
        "Text" : " Plugin to assemble a jar with dependencies ",
        "Line" : 1889,
        "CharPositionInLine" : 57
      },
      "112" : {
        "Text" : " see above for documentation ",
        "Line" : 1907,
        "CharPositionInLine" : 120
      },
      "113" : {
        "Text" : "\n\t\t\t\t\t\tUse the antrun plugin to: copy the\n\t\t\t\t\t\tdms-x.x.x-jar-with-dependencies.jar to dms.jar\n\t\t\t\t\t",
        "Line" : 1918,
        "CharPositionInLine" : 9
      },
      "114" : {
        "Text" : "\n\t\t\tThis profile allows running DMS from inside Eclipse\n\t\t\t(Requires a \"mvn clean package\" to download the binaries first)\n\t\t",
        "Line" : 1947,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 115
    }
  },
  "FileTypes" : {
    "CMAKE" : 1,
    "MAKEFILE" : 1,
    "ANT" : 1,
    "MAVEN" : 1
  },
  "ElapsedTime" : 4971
}